

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 08 16:13:26 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	param0,global,class=BANK0,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001C8C                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for uart_transmit_interrupt_handler@done
    88  001C8C  01                 	db	1
    89  0000                     _BAUDCONbits	set	3966
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATB	set	3978
    93  0000                     _LATBbits	set	3978
    94  0000                     _LATDbits	set	3980
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _OSCTUNEbits	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIR1bits	set	3998
   100  0000                     _PORTBbits	set	3969
   101  0000                     _RCONbits	set	4048
   102  0000                     _RCREG1	set	4015
   103  0000                     _RCSTA1bits	set	4012
   104  0000                     _SPBRG1	set	4016
   105  0000                     _SPBRGH1	set	3967
   106  0000                     _SSP1STATbits	set	4039
   107  0000                     _SSPADD	set	4040
   108  0000                     _SSPBUF	set	4041
   109  0000                     _SSPCON1	set	4038
   110  0000                     _SSPCON1bits	set	4038
   111  0000                     _SSPCON2	set	4037
   112  0000                     _SSPCON2bits	set	4037
   113  0000                     _SSPSTAT	set	4039
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _T0CON	set	4053
   116  0000                     _T0CONbits	set	4053
   117  0000                     _T1CON	set	4045
   118  0000                     _T1CONbits	set	4045
   119  0000                     _T1GCON	set	3994
   120  0000                     _T1GCONbits	set	3994
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR1H	set	4047
   124  0000                     _TMR1L	set	4046
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISBbits	set	3987
   127  0000                     _TRISCbits	set	3988
   128  0000                     _TRISD	set	3989
   129  0000                     _TXREG1	set	4014
   130  0000                     _TXSTA1bits	set	4013
   131                           
   132                           	psect	nvBANK0
   133  0000D2                     __pnvBANK0:
   134                           	opt stack 0
   135  0000D2                     _ic_ptr:
   136                           	opt stack 0
   137  0000D2                     	ds	2
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  001578                     __pcinit:
   143                           	opt stack 0
   144  001578                     start_initialization:
   145                           	opt stack 0
   146  001578                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK4 (138 bytes)
   150  001578  EE04  F000         	lfsr	0,__pbssBANK4
   151  00157C  0E8A               	movlw	138
   152  00157E                     clear_0:
   153  00157E  6AEE               	clrf	postinc0,c
   154  001580  06E8               	decf	wreg,f,c
   155  001582  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK3 (138 bytes)
   158  001584  EE03  F000         	lfsr	0,__pbssBANK3
   159  001588  0E8A               	movlw	138
   160  00158A                     clear_1:
   161  00158A  6AEE               	clrf	postinc0,c
   162  00158C  06E8               	decf	wreg,f,c
   163  00158E  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to BANK2 (138 bytes)
   166  001590  EE02  F000         	lfsr	0,__pbssBANK2
   167  001594  0E8A               	movlw	138
   168  001596                     clear_2:
   169  001596  6AEE               	clrf	postinc0,c
   170  001598  06E8               	decf	wreg,f,c
   171  00159A  E1FD               	bnz	clear_2
   172                           
   173                           ; Clear objects allocated to BANK1 (152 bytes)
   174  00159C  EE01  F000         	lfsr	0,__pbssBANK1
   175  0015A0  0E98               	movlw	152
   176  0015A2                     clear_3:
   177  0015A2  6AEE               	clrf	postinc0,c
   178  0015A4  06E8               	decf	wreg,f,c
   179  0015A6  E1FD               	bnz	clear_3
   180                           
   181                           ; Clear objects allocated to BANK0 (53 bytes)
   182  0015A8  EE00  F09D         	lfsr	0,__pbssBANK0
   183  0015AC  0E35               	movlw	53
   184  0015AE                     clear_4:
   185  0015AE  6AEE               	clrf	postinc0,c
   186  0015B0  06E8               	decf	wreg,f,c
   187  0015B2  E1FD               	bnz	clear_4
   188                           
   189                           ; Clear objects allocated to COMRAM (21 bytes)
   190  0015B4  EE00  F048         	lfsr	0,__pbssCOMRAM
   191  0015B8  0E15               	movlw	21
   192  0015BA                     clear_5:
   193  0015BA  6AEE               	clrf	postinc0,c
   194  0015BC  06E8               	decf	wreg,f,c
   195  0015BE  E1FD               	bnz	clear_5
   196                           
   197                           ; Initialize objects allocated to COMRAM (1 bytes)
   198                           ; load TBLPTR registers with __pidataCOMRAM
   199  0015C0  0E8C               	movlw	low __pidataCOMRAM
   200  0015C2  6EF6               	movwf	tblptrl,c
   201  0015C4  0E1C               	movlw	high __pidataCOMRAM
   202  0015C6  6EF7               	movwf	tblptrh,c
   203  0015C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   204  0015CA  6EF8               	movwf	tblptru,c
   205  0015CC  0009               	tblrd		*+	;fetch initializer
   206  0015CE  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   207  0015D2                     end_of_initialization:
   208                           	opt stack 0
   209  0015D2                     __end_of__initialization:
   210                           	opt stack 0
   211  0015D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   212  0015D4  6EF8               	movwf	tblptru,c
   213  0015D6  0100               	movlb	0
   214  0015D8  EFF1  F003         	goto	_main	;jump to C main() function
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           
   222                           	psect	bssCOMRAM
   223  000048                     __pbssCOMRAM:
   224                           	opt stack 0
   225  000048                     uart_frame_message@sent_counter:
   226                           	opt stack 0
   227  000048                     	ds	1
   228  000049                     uart_receive_interrupt_handler@done:
   229                           	opt stack 0
   230  000049                     	ds	1
   231  00004A                     uart_receive_interrupt_handler@error:
   232                           	opt stack 0
   233  00004A                     	ds	1
   234  00004B                     uart_receive_interrupt_handler@index:
   235                           	opt stack 0
   236  00004B                     	ds	1
   237  00004C                     uart_receive_interrupt_handler@received_counter:
   238                           	opt stack 0
   239  00004C                     	ds	1
   240  00004D                     uart_receive_interrupt_handler@start_byte_bad:
   241                           	opt stack 0
   242  00004D                     	ds	1
   243  00004E                     uart_transmit_interrupt_handler@index:
   244                           	opt stack 0
   245  00004E                     	ds	1
   246  00004F                     i2c_int_handler@sensor_bank_front:
   247                           	opt stack 0
   248  00004F                     	ds	14
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           
   256                           	psect	dataCOMRAM
   257  00005D                     __pdataCOMRAM:
   258                           	opt stack 0
   259  00005D                     uart_transmit_interrupt_handler@done:
   260                           	opt stack 0
   261  00005D                     	ds	1
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           
   269                           	psect	bssBANK0
   270  00009D                     __pbssBANK0:
   271                           	opt stack 0
   272  00009D                     uart_receive_interrupt_handler@frame:
   273                           	opt stack 0
   274  00009D                     	ds	18
   275  0000AF                     _need_sensor_data:
   276                           	opt stack 0
   277  0000AF                     	ds	2
   278  0000B1                     _MQ_Main_Willing_to_block:
   279                           	opt stack 0
   280  0000B1                     	ds	1
   281  0000B2                     uart_transmit_interrupt_handler@message:
   282                           	opt stack 0
   283  0000B2                     	ds	18
   284  0000C4                     i2c_int_handler@sensor_bank_side:
   285                           	opt stack 0
   286  0000C4                     	ds	14
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           tblptrl	equ	0xFF6
   290                           tablat	equ	0xFF5
   291                           postinc0	equ	0xFEE
   292                           wreg	equ	0xFE8
   293                           
   294                           	psect	bssBANK1
   295  000100                     __pbssBANK1:
   296                           	opt stack 0
   297  000100                     _ToMainLow_MQ:
   298                           	opt stack 0
   299  000100                     	ds	138
   300  00018A                     i2c_int_handler@sensor_bank_ventril:
   301                           	opt stack 0
   302  00018A                     	ds	14
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	bssBANK2
   311  000200                     __pbssBANK2:
   312                           	opt stack 0
   313  000200                     _ToMainHigh_MQ:
   314                           	opt stack 0
   315  000200                     	ds	138
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	bssBANK3
   324  000300                     __pbssBANK3:
   325                           	opt stack 0
   326  000300                     _FromMainLow_MQ:
   327                           	opt stack 0
   328  000300                     	ds	138
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           
   336                           	psect	bssBANK4
   337  000400                     __pbssBANK4:
   338                           	opt stack 0
   339  000400                     _FromMainHigh_MQ:
   340                           	opt stack 0
   341  000400                     	ds	138
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           
   349                           	psect	cstackBANK2
   350  00028A                     __pcstackBANK2:
   351                           	opt stack 0
   352  00028A                     main@last_reg_recvd:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x0
   356  00028A                     	ds	1
   357  00028B                     main@myByte1:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x1
   361  00028B                     	ds	1
   362  00028C                     main@myByte2:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x2
   366  00028C                     	ds	1
   367  00028D                     main@msgbuffer:
   368                           	opt stack 0
   369                           
   370                           ; 15 bytes @ 0x3
   371  00028D                     	ds	15
   372  00029C                     main@t0thread_data:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x12
   376  00029C                     	ds	2
   377  00029E                     main@uart_response:
   378                           	opt stack 0
   379                           
   380                           ; 14 bytes @ 0x14
   381  00029E                     	ds	14
   382  0002AC                     main@need_sensor_data:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x22
   386  0002AC                     	ds	1
   387  0002AD                     main@jjj:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x23
   391  0002AD                     	ds	2
   392  0002AF                     main@t1thread_data:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x25
   396  0002AF                     	ds	2
   397  0002B1                     main@length:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x27
   401  0002B1                     	ds	1
   402  0002B2                     main@msgtype:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x28
   406  0002B2                     	ds	1
   407  0002B3                     main@ic:
   408                           	opt stack 0
   409                           
   410                           ; 38 bytes @ 0x29
   411  0002B3                     	ds	38
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           
   419                           	psect	cstackBANK1
   420  000198                     __pcstackBANK1:
   421                           	opt stack 0
   422  000198                     ?___lwmod:
   423                           	opt stack 0
   424  000198                     OpenTimer0@config:
   425                           	opt stack 0
   426  000198                     OpenTimer1@config1:
   427                           	opt stack 0
   428  000198                     init_queue@qptr:
   429                           	opt stack 0
   430  000198                     init_i2c@ic:
   431                           	opt stack 0
   432  000198                     i2c_configure_slave@ptr_thingy:
   433                           	opt stack 0
   434  000198                     timer0_lthread@tptr:
   435                           	opt stack 0
   436  000198                     init_timer1_lthread@tptr:
   437                           	opt stack 0
   438  000198                     ___lwmod@dividend:
   439                           	opt stack 0
   440  000198                     memcpy@d1:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x0
   444  000198                     	ds	1
   445  000199                     ??_OpenTimer1:
   446                           
   447                           ; 0 bytes @ 0x1
   448  000199                     	ds	1
   449  00019A                     init_queue@i:
   450                           	opt stack 0
   451  00019A                     i2c_configure_slave@addr:
   452                           	opt stack 0
   453  00019A                     OpenTimer1@config:
   454                           	opt stack 0
   455  00019A                     timer0_lthread@msgtype:
   456                           	opt stack 0
   457  00019A                     ___lwmod@divisor:
   458                           	opt stack 0
   459  00019A                     memcpy@s1:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x2
   463  00019A                     	ds	1
   464  00019B                     
   465                           ; 0 bytes @ 0x3
   466  00019B                     	ds	1
   467  00019C                     ___lwmod@counter:
   468                           	opt stack 0
   469  00019C                     timer0_lthread@length:
   470                           	opt stack 0
   471  00019C                     memcpy@n:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x4
   475  00019C                     	ds	2
   476  00019E                     timer0_lthread@msgbuffer:
   477                           	opt stack 0
   478  00019E                     memcpy@d:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x6
   482  00019E                     	ds	2
   483  0001A0                     timer0_lthread@msgval:
   484                           	opt stack 0
   485  0001A0                     memcpy@s:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x8
   489  0001A0                     	ds	2
   490  0001A2                     send_msg@qptr:
   491                           	opt stack 0
   492  0001A2                     recv_msg@qptr:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0xA
   496  0001A2                     	ds	2
   497  0001A4                     send_msg@length:
   498                           	opt stack 0
   499  0001A4                     recv_msg@maxlength:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0xC
   503  0001A4                     	ds	1
   504  0001A5                     send_msg@msgtype:
   505                           	opt stack 0
   506  0001A5                     recv_msg@msgtype:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0xD
   510  0001A5                     	ds	1
   511  0001A6                     send_msg@data:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0xE
   515  0001A6                     	ds	1
   516  0001A7                     recv_msg@data:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0xF
   520  0001A7                     	ds	1
   521  0001A8                     ??_send_msg:
   522                           
   523                           ; 0 bytes @ 0x10
   524  0001A8                     	ds	1
   525  0001A9                     ??_recv_msg:
   526  0001A9                     send_msg@tlength:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x11
   530  0001A9                     	ds	2
   531  0001AB                     send_msg@slot:
   532                           	opt stack 0
   533  0001AB                     recv_msg@slot:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x13
   537  0001AB                     	ds	1
   538  0001AC                     send_msg@qmsg:
   539                           	opt stack 0
   540  0001AC                     recv_msg@tlength:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x14
   544  0001AC                     	ds	2
   545  0001AE                     FromMainLow_sendmsg@msgtype:
   546                           	opt stack 0
   547  0001AE                     FromMainHigh_sendmsg@msgtype:
   548                           	opt stack 0
   549  0001AE                     recv_msg@qmsg:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x16
   553  0001AE                     	ds	1
   554  0001AF                     FromMainLow_sendmsg@data:
   555                           	opt stack 0
   556  0001AF                     FromMainHigh_sendmsg@data:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x17
   560  0001AF                     	ds	1
   561  0001B0                     ToMainLow_recvmsg@msgtype:
   562                           	opt stack 0
   563  0001B0                     ToMainHigh_recvmsg@msgtype:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x18
   567  0001B0                     	ds	1
   568  0001B1                     FromMainLow_sendmsg@length:
   569                           	opt stack 0
   570  0001B1                     FromMainHigh_sendmsg@length:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x19
   574  0001B1                     	ds	1
   575  0001B2                     ToMainLow_recvmsg@data:
   576                           	opt stack 0
   577  0001B2                     ToMainHigh_recvmsg@data:
   578                           	opt stack 0
   579  0001B2                     send_uart_message@message_ptr:
   580                           	opt stack 0
   581  0001B2                     timer1_lthread@tptr:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x1A
   585  0001B2                     	ds	2
   586  0001B4                     ToMainLow_recvmsg@maxlength:
   587                           	opt stack 0
   588  0001B4                     ToMainHigh_recvmsg@maxlength:
   589                           	opt stack 0
   590  0001B4                     send_uart_message@message_q_code:
   591                           	opt stack 0
   592  0001B4                     timer1_lthread@msgtype:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x1C
   596  0001B4                     	ds	2
   597  0001B6                     timer1_lthread@length:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x1E
   601  0001B6                     	ds	2
   602  0001B8                     timer1_lthread@msgbuffer:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x20
   606  0001B8                     	ds	2
   607  0001BA                     timer1_lthread@retval:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x22
   611  0001BA                     	ds	1
   612  0001BB                     tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           
   619                           ; 0 bytes @ 0x23
   620                           
   621                           	psect	cstackBANK0
   622  000060                     __pcstackBANK0:
   623                           	opt stack 0
   624  000060                     ?_in_high_int:
   625                           	opt stack 0
   626  000060                     handle_start@data_read:
   627                           	opt stack 0
   628  000060                     check_msg@qptr:
   629                           	opt stack 0
   630  000060                     WriteTimer0@timer0:
   631                           	opt stack 0
   632  000060                     i2memcpy@d1:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x0
   636  000060                     	ds	2
   637  000062                     ??_check_msg:
   638  000062                     ?_in_low_int:
   639                           	opt stack 0
   640  000062                     WriteTimer0@timer:
   641                           	opt stack 0
   642  000062                     i2memcpy@s1:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x2
   646  000062                     	ds	2
   647  000064                     i2memcpy@n:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x4
   651  000064                     	ds	2
   652  000066                     i2memcpy@d:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x6
   656  000066                     	ds	2
   657  000068                     i2memcpy@s:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x8
   661  000068                     	ds	2
   662  00006A                     i2send_msg@qptr:
   663                           	opt stack 0
   664  00006A                     i2recv_msg@qptr:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0xA
   668  00006A                     	ds	2
   669  00006C                     i2send_msg@length:
   670                           	opt stack 0
   671  00006C                     i2recv_msg@maxlength:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0xC
   675  00006C                     	ds	1
   676  00006D                     i2send_msg@msgtype:
   677                           	opt stack 0
   678  00006D                     i2recv_msg@msgtype:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0xD
   682  00006D                     	ds	1
   683  00006E                     i2send_msg@data:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0xE
   687  00006E                     	ds	1
   688  00006F                     i2recv_msg@data:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0xF
   692  00006F                     	ds	1
   693  000070                     ??i2_send_msg:
   694                           
   695                           ; 0 bytes @ 0x10
   696  000070                     	ds	1
   697  000071                     ??i2_recv_msg:
   698  000071                     i2send_msg@tlength:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x11
   702  000071                     	ds	2
   703  000073                     i2send_msg@slot:
   704                           	opt stack 0
   705  000073                     i2recv_msg@slot:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x13
   709  000073                     	ds	1
   710  000074                     i2send_msg@qmsg:
   711                           	opt stack 0
   712  000074                     i2recv_msg@tlength:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x14
   716  000074                     	ds	2
   717  000076                     ToMainHigh_sendmsg@msgtype:
   718                           	opt stack 0
   719  000076                     i2recv_msg@qmsg:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x16
   723  000076                     	ds	1
   724  000077                     ToMainHigh_sendmsg@data:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x17
   728  000077                     	ds	1
   729  000078                     FromMainHigh_recvmsg@msgtype:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x18
   733  000078                     	ds	1
   734  000079                     ToMainHigh_sendmsg@length:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x19
   738  000079                     	ds	1
   739  00007A                     FromMainHigh_recvmsg@data:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x1A
   743  00007A                     	ds	2
   744  00007C                     FromMainHigh_recvmsg@maxlength:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x1C
   748  00007C                     	ds	1
   749  00007D                     retrieve_sensor_values@sensor_bank_side:
   750                           	opt stack 0
   751  00007D                     timer0_int_handler@length:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x1D
   755  00007D                     	ds	2
   756  00007F                     retrieve_sensor_values@sensor_bank_front:
   757                           	opt stack 0
   758  00007F                     timer0_int_handler@msgtype:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x1F
   762  00007F                     	ds	2
   763  000081                     retrieve_sensor_values@sensor_bank_ventril:
   764                           	opt stack 0
   765  000081                     timer0_int_handler@val:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x21
   769  000081                     	ds	2
   770  000083                     retrieve_sensor_values@length:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x23
   774  000083                     	ds	1
   775  000084                     retrieve_sensor_values@msgtype:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x24
   779  000084                     	ds	1
   780  000085                     ??_i2c_int_handler:
   781                           
   782                           ; 0 bytes @ 0x25
   783  000085                     	ds	1
   784  000086                     i2c_int_handler@error_buf:
   785                           	opt stack 0
   786                           
   787                           ; 3 bytes @ 0x26
   788  000086                     	ds	3
   789  000089                     i2c_int_handler@data_written:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x29
   793  000089                     	ds	1
   794  00008A                     i2c_int_handler@overrun_error:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x2A
   798  00008A                     	ds	1
   799  00008B                     i2c_int_handler@i2c_data:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x2B
   803  00008B                     	ds	1
   804  00008C                     i2c_int_handler@msg_to_send:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x2C
   808  00008C                     	ds	1
   809  00008D                     i2c_int_handler@msg_ready:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x2D
   813  00008D                     	ds	1
   814  00008E                     i2c_int_handler@data_read:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x2E
   818  00008E                     	ds	1
   819  00008F                     ??_InterruptHandlerHigh:
   820                           
   821                           ; 0 bytes @ 0x2F
   822  00008F                     	ds	14
   823                           tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           
   830                           	psect	cstackCOMRAM
   831  000001                     __pcstackCOMRAM:
   832                           	opt stack 0
   833  000001                     ?_ReadTimer1:
   834                           	opt stack 0
   835  000001                     uart_frame_message@inner:
   836                           	opt stack 0
   837  000001                     WriteTimer1@timer1:
   838                           	opt stack 0
   839  000001                     i1memcpy@d1:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x0
   843  000001                     	ds	2
   844  000003                     uart_frame_message@outer:
   845                           	opt stack 0
   846  000003                     ReadTimer1@timer:
   847                           	opt stack 0
   848  000003                     WriteTimer1@timer:
   849                           	opt stack 0
   850  000003                     i1memcpy@s1:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x2
   854  000003                     	ds	2
   855  000005                     ??_uart_frame_message:
   856  000005                     i1memcpy@n:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x4
   860  000005                     	ds	2
   861  000007                     uart_frame_message@checksum:
   862                           	opt stack 0
   863  000007                     i1memcpy@d:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x6
   867  000007                     	ds	1
   868  000008                     uart_frame_message@i:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x7
   872  000008                     	ds	1
   873  000009                     i1memcpy@s:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x8
   877  000009                     	ds	2
   878  00000B                     i1send_msg@qptr:
   879                           	opt stack 0
   880  00000B                     i1recv_msg@qptr:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0xA
   884  00000B                     	ds	2
   885  00000D                     i1send_msg@length:
   886                           	opt stack 0
   887  00000D                     i1recv_msg@maxlength:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0xC
   891  00000D                     	ds	1
   892  00000E                     i1send_msg@msgtype:
   893                           	opt stack 0
   894  00000E                     i1recv_msg@msgtype:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0xD
   898  00000E                     	ds	1
   899  00000F                     i1send_msg@data:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0xE
   903  00000F                     	ds	1
   904  000010                     i1recv_msg@data:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0xF
   908  000010                     	ds	1
   909  000011                     ??i1_send_msg:
   910                           
   911                           ; 0 bytes @ 0x10
   912  000011                     	ds	1
   913  000012                     ??i1_recv_msg:
   914  000012                     i1send_msg@tlength:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x11
   918  000012                     	ds	2
   919  000014                     i1send_msg@slot:
   920                           	opt stack 0
   921  000014                     i1recv_msg@slot:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x13
   925  000014                     	ds	1
   926  000015                     i1send_msg@qmsg:
   927                           	opt stack 0
   928  000015                     i1recv_msg@tlength:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x14
   932  000015                     	ds	2
   933  000017                     ToMainLow_sendmsg@msgtype:
   934                           	opt stack 0
   935  000017                     i1recv_msg@qmsg:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x16
   939  000017                     	ds	1
   940  000018                     ToMainLow_sendmsg@data:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x17
   944  000018                     	ds	1
   945  000019                     FromMainLow_recvmsg@msgtype:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x18
   949  000019                     	ds	1
   950  00001A                     ToMainLow_sendmsg@length:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x19
   954  00001A                     	ds	1
   955  00001B                     ??_uart_receive_interrupt_handler:
   956  00001B                     FromMainLow_recvmsg@data:
   957                           	opt stack 0
   958  00001B                     timer1_int_handler@result:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x1A
   962  00001B                     	ds	2
   963  00001D                     FromMainLow_recvmsg@maxlength:
   964                           	opt stack 0
   965  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   966                           	opt stack 0
   967                           
   968                           ; 14 bytes @ 0x1C
   969  00001D                     	ds	1
   970  00001E                     uart_transmit_interrupt_handler@data:
   971                           	opt stack 0
   972                           
   973                           ; 14 bytes @ 0x1D
   974  00001E                     	ds	13
   975  00002B                     uart_receive_interrupt_handler@status:
   976                           	opt stack 0
   977                           
   978                           ; 1 bytes @ 0x2A
   979  00002B                     	ds	1
   980  00002C                     uart_receive_interrupt_handler@status_2229:
   981                           	opt stack 0
   982  00002C                     uart_transmit_interrupt_handler@msgtype:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x2B
   986  00002C                     	ds	1
   987  00002D                     uart_receive_interrupt_handler@checksum:
   988                           	opt stack 0
   989  00002D                     uart_transmit_interrupt_handler@message_status:
   990                           	opt stack 0
   991                           
   992                           ; 1 bytes @ 0x2C
   993  00002D                     	ds	1
   994  00002E                     uart_receive_interrupt_handler@bad_counter_id:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x2D
   998  00002E                     	ds	2
   999  000030                     uart_receive_interrupt_handler@bad_start_id:
  1000                           	opt stack 0
  1001                           
  1002                           ; 1 bytes @ 0x2F
  1003  000030                     	ds	1
  1004  000031                     uart_receive_interrupt_handler@bad_end_id:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x30
  1008  000031                     	ds	1
  1009  000032                     uart_receive_interrupt_handler@bad_checksum_id:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x31
  1013  000032                     	ds	1
  1014  000033                     uart_receive_interrupt_handler@message_count:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x32
  1018  000033                     	ds	1
  1019  000034                     uart_receive_interrupt_handler@msg_id:
  1020                           	opt stack 0
  1021                           
  1022                           ; 1 bytes @ 0x33
  1023  000034                     	ds	1
  1024  000035                     uart_receive_interrupt_handler@i:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x34
  1028  000035                     	ds	2
  1029  000037                     ??_InterruptHandlerLow:
  1030                           
  1031                           ; 0 bytes @ 0x36
  1032  000037                     	ds	17
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 188 in file "../src/main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  uart_respons   14   20[BANK2 ] unsigned char [14]
  1050 ;;  jjj             2   35[BANK2 ] int 
  1051 ;;  ic             38   41[BANK2 ] struct __i2c_comm
  1052 ;;  msgbuffer      15    3[BANK2 ] unsigned char [15]
  1053 ;;  t1thread_dat    2   37[BANK2 ] struct __timer1_thread_s
  1054 ;;  t0thread_dat    2   18[BANK2 ] struct __timer0_thread_s
  1055 ;;  uthread_data    2    0        struct __uart_thread_str
  1056 ;;  msgtype         1   40[BANK2 ] unsigned char 
  1057 ;;  length          1   39[BANK2 ] char 
  1058 ;;  need_sensor_    1   34[BANK2 ] unsigned char 
  1059 ;;  myByte2         1    2[BANK2 ] unsigned char 
  1060 ;;  myByte1         1    1[BANK2 ] unsigned char 
  1061 ;;  last_reg_rec    1    0[BANK2 ] unsigned char 
  1062 ;;  i               1    0        unsigned char 
  1063 ;;  c               1    0        unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;		None               void
  1066 ;; Registers used:
  1067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1074 ;;      Locals:         0       0       0      79       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1076 ;;      Totals:         0       0       0      79       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1077 ;;Total ram usage:       79 bytes
  1078 ;; Hardware stack levels required when called:   15
  1079 ;; This function calls:
  1080 ;;		_OpenTimer0
  1081 ;;		_OpenTimer1
  1082 ;;		_ToMainHigh_recvmsg
  1083 ;;		_ToMainLow_recvmsg
  1084 ;;		_blip
  1085 ;;		_blip1
  1086 ;;		_blip2
  1087 ;;		_blip3
  1088 ;;		_debug_configure
  1089 ;;		_enable_interrupts
  1090 ;;		_i2c_configure_slave
  1091 ;;		_init_i2c
  1092 ;;		_init_queues
  1093 ;;		_init_timer1_lthread
  1094 ;;		_send_uart_message
  1095 ;;		_timer0_lthread
  1096 ;;		_timer1_lthread
  1097 ;;		_uart_configure
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text0
  1104  0007E2                     __ptext0:
  1105                           	opt stack 0
  1106  0007E2                     _main:
  1107                           	opt stack 16
  1108                           
  1109                           ;main.c: 189: char c;
  1110                           ;main.c: 190: signed char length;
  1111                           ;main.c: 191: unsigned char msgtype;
  1112                           ;main.c: 192: unsigned char last_reg_recvd;
  1113                           ;main.c: 193: i2c_comm ic;
  1114                           ;main.c: 194: unsigned char msgbuffer[14 + 1];
  1115                           ;main.c: 195: unsigned char i;
  1116                           ;main.c: 196: uart_thread_struct uthread_data;
  1117                           ;main.c: 197: timer1_thread_struct t1thread_data;
  1118                           ;main.c: 198: timer0_thread_struct t0thread_data;
  1119                           ;main.c: 199: unsigned char need_sensor_data = 1;
  1120                           
  1121                           ;incstack = 0
  1122  0007E2  0E01               	movlw	1
  1123  0007E4  0102               	movlb	2	; () banked
  1124  0007E6  6FAC               	movwf	main@need_sensor_data& (0+255),b
  1125                           
  1126                           ;main.c: 215: OSCCON = 0xE0;
  1127  0007E8  0EE0               	movlw	224
  1128  0007EA  6ED3               	movwf	4051,c	;volatile
  1129                           
  1130                           ; BSR set to: 2
  1131                           ;main.c: 223: OSCTUNEbits.PLLEN = 1;
  1132  0007EC  8C9B               	bsf	3995,6,c	;volatile
  1133                           
  1134                           ; BSR set to: 2
  1135                           ;main.c: 238: init_i2c(&ic);
  1136  0007EE  0102               	movlb	2	; () banked
  1137  0007F0  0E02               	movlw	high main@ic
  1138  0007F2  0101               	movlb	1	; () banked
  1139  0007F4  6F99               	movwf	(init_i2c@ic+1)& (0+255),b
  1140  0007F6  0102               	movlb	2	; () banked
  1141  0007F8  0EB3               	movlw	low main@ic
  1142  0007FA  0101               	movlb	1	; () banked
  1143  0007FC  6F98               	movwf	init_i2c@ic& (0+255),b
  1144  0007FE  EC87  F00A         	call	_init_i2c	;wreg free
  1145                           
  1146                           ;main.c: 241: init_timer1_lthread(&t1thread_data);
  1147  000802  0102               	movlb	2	; () banked
  1148  000804  0E02               	movlw	high main@t1thread_data
  1149  000806  0101               	movlb	1	; () banked
  1150  000808  6F99               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1151  00080A  0102               	movlb	2	; () banked
  1152  00080C  0EAF               	movlw	low main@t1thread_data
  1153  00080E  0101               	movlb	1	; () banked
  1154  000810  6F98               	movwf	init_timer1_lthread@tptr& (0+255),b
  1155  000812  ECE1  F00D         	call	_init_timer1_lthread	;wreg free
  1156                           
  1157                           ;main.c: 244: init_queues();
  1158  000816  ECB1  F00B         	call	_init_queues	;wreg free
  1159                           
  1160                           ;main.c: 248: TRISB = 0x0;
  1161  00081A  0E00               	movlw	0
  1162  00081C  6E93               	movwf	3987,c	;volatile
  1163                           
  1164                           ;main.c: 249: LATB = 0x0;
  1165  00081E  0E00               	movlw	0
  1166  000820  6E8A               	movwf	3978,c	;volatile
  1167                           
  1168                           ;main.c: 262: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1169  000822  0E96               	movlw	150
  1170  000824  EC9C  F00D         	call	_OpenTimer0
  1171                           
  1172                           ;main.c: 269: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1173  000828  0E00               	movlw	0
  1174  00082A  0101               	movlb	1	; () banked
  1175  00082C  6F98               	movwf	OpenTimer1@config1& (0+255),b
  1176  00082E  0E9B               	movlw	155
  1177  000830  EC6C  F00C         	call	_OpenTimer1
  1178                           
  1179                           ;main.c: 278: IPR1bits.TMR1IP = 0;
  1180  000834  909F               	bcf	3999,0,c	;volatile
  1181                           
  1182                           ;main.c: 280: IPR1bits.RCIP = 0;
  1183  000836  9A9F               	bcf	3999,5,c	;volatile
  1184                           
  1185                           ;main.c: 283: IPR1bits.SSPIP = 1;
  1186  000838  869F               	bsf	3999,3,c	;volatile
  1187                           
  1188                           ;main.c: 292: i2c_configure_slave(0x9E,&need_sensor_data);
  1189  00083A  0102               	movlb	2	; () banked
  1190  00083C  0E02               	movlw	high main@need_sensor_data
  1191  00083E  0101               	movlb	1	; () banked
  1192  000840  6F99               	movwf	(i2c_configure_slave@ptr_thingy+1)& (0+255),b
  1193  000842  0102               	movlb	2	; () banked
  1194  000844  0EAC               	movlw	low main@need_sensor_data
  1195  000846  0101               	movlb	1	; () banked
  1196  000848  6F98               	movwf	i2c_configure_slave@ptr_thingy& (0+255),b
  1197  00084A  0E9E               	movlw	158
  1198  00084C  ECA7  F00C         	call	_i2c_configure_slave
  1199                           
  1200                           ;main.c: 307: PIE1bits.SSPIE = 1;
  1201  000850  869D               	bsf	3997,3,c	;volatile
  1202                           
  1203                           ;main.c: 332: debug_configure();
  1204  000852  EC14  F00E         	call	_debug_configure	;wreg free
  1205                           
  1206                           ;main.c: 333: blip();
  1207  000856  EC29  F00E         	call	_blip	;wreg free
  1208                           
  1209                           ;main.c: 334: blip1();
  1210  00085A  EC25  F00E         	call	_blip1	;wreg free
  1211                           
  1212                           ;main.c: 335: blip2();
  1213  00085E  EC21  F00E         	call	_blip2	;wreg free
  1214                           
  1215                           ;main.c: 336: blip3();
  1216  000862  EC1D  F00E         	call	_blip3	;wreg free
  1217                           
  1218                           ;main.c: 345: enable_interrupts();
  1219  000866  EC19  F00E         	call	_enable_interrupts	;wreg free
  1220                           
  1221                           ;main.c: 358: uart_configure();
  1222  00086A  ECC1  F00D         	call	_uart_configure	;wreg free
  1223                           
  1224                           ;main.c: 360: unsigned char myByte1 = 0x44;
  1225  00086E  0E44               	movlw	68
  1226  000870  0102               	movlb	2	; () banked
  1227  000872  6F8B               	movwf	main@myByte1& (0+255),b
  1228                           
  1229                           ; BSR set to: 2
  1230                           ;main.c: 361: unsigned char myByte2 = 0x44;
  1231  000874  0E44               	movlw	68
  1232  000876  0102               	movlb	2	; () banked
  1233  000878  6F8C               	movwf	main@myByte2& (0+255),b
  1234  00087A                     l4118:
  1235                           
  1236                           ;main.c: 381: if( need_sensor_data )
  1237  00087A  0102               	movlb	2	; () banked
  1238  00087C  51AC               	movf	main@need_sensor_data& (0+255),w,b
  1239  00087E  B4D8               	btfsc	status,2,c
  1240  000880  D003               	goto	l4122
  1241                           
  1242                           ; BSR set to: 2
  1243                           ;main.c: 382: {
  1244                           ;main.c: 385: need_sensor_data = 0;
  1245  000882  0E00               	movlw	0
  1246  000884  0102               	movlb	2	; () banked
  1247  000886  6FAC               	movwf	main@need_sensor_data& (0+255),b
  1248  000888                     l4122:
  1249                           
  1250                           ; BSR set to: 2
  1251                           ;main.c: 386: }
  1252                           ;main.c: 396: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1253  000888  0102               	movlb	2	; () banked
  1254  00088A  0E02               	movlw	high main@msgtype
  1255  00088C  0101               	movlb	1	; () banked
  1256  00088E  6FB1               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1257  000890  0102               	movlb	2	; () banked
  1258  000892  0EB2               	movlw	low main@msgtype
  1259  000894  0101               	movlb	1	; () banked
  1260  000896  6FB0               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1261  000898  0102               	movlb	2	; () banked
  1262  00089A  0E02               	movlw	high main@msgbuffer
  1263  00089C  0101               	movlb	1	; () banked
  1264  00089E  6FB3               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1265  0008A0  0102               	movlb	2	; () banked
  1266  0008A2  0E8D               	movlw	low main@msgbuffer
  1267  0008A4  0101               	movlb	1	; () banked
  1268  0008A6  6FB2               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1269  0008A8  0E0E               	movlw	14
  1270  0008AA  ECDE  F00C         	call	_ToMainHigh_recvmsg
  1271  0008AE  0102               	movlb	2	; () banked
  1272  0008B0  6FB1               	movwf	main@length& (0+255),b
  1273                           
  1274                           ; BSR set to: 2
  1275                           ;main.c: 397: if (length < 0) {
  1276  0008B2  0102               	movlb	2	; () banked
  1277  0008B4  BFB1               	btfsc	main@length& (0+255),7,b
  1278  0008B6  D032               	goto	l4136
  1279  0008B8  D025               	goto	l4134
  1280  0008BA                     l4128:
  1281                           
  1282                           ; BSR set to: 2
  1283                           ;main.c: 407: {
  1284                           ;main.c: 408: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1285  0008BA  0102               	movlb	2	; () banked
  1286  0008BC  0E02               	movlw	high main@t0thread_data
  1287  0008BE  0101               	movlb	1	; () banked
  1288  0008C0  6F99               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1289  0008C2  0102               	movlb	2	; () banked
  1290  0008C4  0E9C               	movlw	low main@t0thread_data
  1291  0008C6  0101               	movlb	1	; () banked
  1292  0008C8  6F98               	movwf	timer0_lthread@tptr& (0+255),b
  1293  0008CA  0102               	movlb	2	; () banked
  1294  0008CC  0101               	movlb	1	; () banked
  1295  0008CE  C2B2  F19A         	movff	main@msgtype,timer0_lthread@msgtype
  1296  0008D2  0101               	movlb	1	; () banked
  1297  0008D4  6B9B               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1298  0008D6  0102               	movlb	2	; () banked
  1299  0008D8  51B1               	movf	main@length& (0+255),w,b
  1300  0008DA  0101               	movlb	1	; () banked
  1301  0008DC  6F9C               	movwf	timer0_lthread@length& (0+255),b
  1302  0008DE  0101               	movlb	1	; () banked
  1303  0008E0  6B9D               	clrf	(timer0_lthread@length+1)& (0+255),b
  1304  0008E2  0101               	movlb	1	; () banked
  1305  0008E4  BF9C               	btfsc	timer0_lthread@length& (0+255),7,b
  1306  0008E6  079D               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1307  0008E8  0102               	movlb	2	; () banked
  1308  0008EA  0E02               	movlw	high main@msgbuffer
  1309  0008EC  0101               	movlb	1	; () banked
  1310  0008EE  6F9F               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1311  0008F0  0102               	movlb	2	; () banked
  1312  0008F2  0E8D               	movlw	low main@msgbuffer
  1313  0008F4  0101               	movlb	1	; () banked
  1314  0008F6  6F9E               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1315  0008F8  EC0D  F00E         	call	_timer0_lthread	;wreg free
  1316                           
  1317                           ;main.c: 409: break;
  1318  0008FC  D00F               	goto	l4136
  1319  0008FE                     l112:
  1320                           
  1321                           ;main.c: 412: case 41:
  1322                           ;main.c: 413: {
  1323                           ;main.c: 416: last_reg_recvd = msgbuffer[0];
  1324  0008FE  C28D  F28A         	movff	main@msgbuffer,main@last_reg_recvd
  1325                           
  1326                           ;main.c: 417: break;
  1327  000902  D00C               	goto	l4136
  1328  000904                     l4134:
  1329  000904  0102               	movlb	2	; () banked
  1330  000906  51B2               	movf	main@msgtype& (0+255),w,b
  1331                           
  1332                           ; Switch size 1, requested type "space"
  1333                           ; Number of cases is 4, Range of values is 10 to 42
  1334                           ; switch strategies available:
  1335                           ; Name         Instructions Cycles
  1336                           ; simple_byte           13     7 (average)
  1337                           ;	Chosen strategy is simple_byte
  1338  000908  0A0A               	xorlw	10	; case 10
  1339  00090A  B4D8               	btfsc	status,2,c
  1340  00090C  D7D6               	goto	l4128
  1341  00090E  0A22               	xorlw	34	; case 40
  1342  000910  B4D8               	btfsc	status,2,c
  1343  000912  D7F5               	goto	l112
  1344  000914  0A01               	xorlw	1	; case 41
  1345  000916  B4D8               	btfsc	status,2,c
  1346  000918  D7F2               	goto	l112
  1347  00091A  0A03               	xorlw	3	; case 42
  1348  00091C                     l4136:
  1349                           
  1350                           ;main.c: 436: }
  1351                           ;main.c: 439: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1352  00091C  0102               	movlb	2	; () banked
  1353  00091E  0E02               	movlw	high main@msgtype
  1354  000920  0101               	movlb	1	; () banked
  1355  000922  6FB1               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1356  000924  0102               	movlb	2	; () banked
  1357  000926  0EB2               	movlw	low main@msgtype
  1358  000928  0101               	movlb	1	; () banked
  1359  00092A  6FB0               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1360  00092C  0102               	movlb	2	; () banked
  1361  00092E  0E02               	movlw	high main@msgbuffer
  1362  000930  0101               	movlb	1	; () banked
  1363  000932  6FB3               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1364  000934  0102               	movlb	2	; () banked
  1365  000936  0E8D               	movlw	low main@msgbuffer
  1366  000938  0101               	movlb	1	; () banked
  1367  00093A  6FB2               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1368  00093C  0E0E               	movlw	14
  1369  00093E  ECC3  F00C         	call	_ToMainLow_recvmsg
  1370  000942  0102               	movlb	2	; () banked
  1371  000944  6FB1               	movwf	main@length& (0+255),b
  1372                           
  1373                           ; BSR set to: 2
  1374                           ;main.c: 440: if (length < 0) {
  1375  000946  0102               	movlb	2	; () banked
  1376  000948  BFB1               	btfsc	main@length& (0+255),7,b
  1377  00094A  D797               	goto	l4118
  1378                           
  1379                           ; BSR set to: 2
  1380                           ;main.c: 446: else
  1381                           ;main.c: 447: {
  1382                           ;main.c: 448: unsigned char uart_response[14];
  1383                           ;main.c: 449: int jjj;
  1384                           ;main.c: 450: for(jjj=0;jjj<14;jjj++)
  1385                           
  1386                           ; BSR set to: 2
  1387                           
  1388                           ; BSR set to: 2
  1389                           ;main.c: 444: }
  1390                           ;main.c: 445: }
  1391                           
  1392                           ; BSR set to: 2
  1393  00094C  0E00               	movlw	0
  1394  00094E  0102               	movlb	2	; () banked
  1395  000950  6FAE               	movwf	(main@jjj+1)& (0+255),b
  1396  000952  0E00               	movlw	0
  1397  000954  0102               	movlb	2	; () banked
  1398  000956  6FAD               	movwf	main@jjj& (0+255),b
  1399  000958                     
  1400                           ; BSR set to: 2
  1401  000958  0102               	movlb	2	; () banked
  1402  00095A  51AE               	movf	(main@jjj+1)& (0+255),w,b
  1403  00095C  0A80               	xorlw	128
  1404  00095E  0F80               	addlw	-128
  1405  000960  0E0E               	movlw	14
  1406  000962  B4D8               	btfsc	status,2,c
  1407  000964  5DAD               	subwf	main@jjj& (0+255),w,b
  1408  000966  B0D8               	btfsc	status,0,c
  1409  000968  D084               	goto	l4192
  1410                           
  1411                           ; BSR set to: 2
  1412                           ;main.c: 451: {
  1413                           ;main.c: 452: uart_response[jjj] = 0;
  1414                           
  1415                           ; BSR set to: 2
  1416                           
  1417                           ; BSR set to: 2
  1418  00096A  0102               	movlb	2	; () banked
  1419  00096C  0E9E               	movlw	low main@uart_response
  1420  00096E  0102               	movlb	2	; () banked
  1421  000970  25AD               	addwf	main@jjj& (0+255),w,b
  1422  000972  6ED9               	movwf	fsr2l,c
  1423  000974  0102               	movlb	2	; () banked
  1424  000976  0E02               	movlw	high main@uart_response
  1425  000978  0102               	movlb	2	; () banked
  1426  00097A  21AE               	addwfc	(main@jjj+1)& (0+255),w,b
  1427  00097C  6EDA               	movwf	fsr2h,c
  1428  00097E  0E00               	movlw	0
  1429  000980  6EDF               	movwf	indf2,c
  1430                           
  1431                           ; BSR set to: 2
  1432  000982  0102               	movlb	2	; () banked
  1433  000984  4BAD               	infsnz	main@jjj& (0+255),f,b
  1434  000986  2BAE               	incf	(main@jjj+1)& (0+255),f,b
  1435  000988  D7E7               	goto	L1
  1436  00098A                     l4154:
  1437                           
  1438                           ; BSR set to: 2
  1439                           ;main.c: 457: {
  1440                           ;main.c: 458: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1441  00098A  0102               	movlb	2	; () banked
  1442  00098C  0E02               	movlw	high main@t1thread_data
  1443  00098E  0101               	movlb	1	; () banked
  1444  000990  6FB3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1445  000992  0102               	movlb	2	; () banked
  1446  000994  0EAF               	movlw	low main@t1thread_data
  1447  000996  0101               	movlb	1	; () banked
  1448  000998  6FB2               	movwf	timer1_lthread@tptr& (0+255),b
  1449  00099A  0102               	movlb	2	; () banked
  1450  00099C  0101               	movlb	1	; () banked
  1451  00099E  C2B2  F1B4         	movff	main@msgtype,timer1_lthread@msgtype
  1452  0009A2  0101               	movlb	1	; () banked
  1453  0009A4  6BB5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1454  0009A6  0102               	movlb	2	; () banked
  1455  0009A8  51B1               	movf	main@length& (0+255),w,b
  1456  0009AA  0101               	movlb	1	; () banked
  1457  0009AC  6FB6               	movwf	timer1_lthread@length& (0+255),b
  1458  0009AE  0101               	movlb	1	; () banked
  1459  0009B0  6BB7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1460  0009B2  0101               	movlb	1	; () banked
  1461  0009B4  BFB6               	btfsc	timer1_lthread@length& (0+255),7,b
  1462  0009B6  07B7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1463  0009B8  0102               	movlb	2	; () banked
  1464  0009BA  0E02               	movlw	high main@msgbuffer
  1465  0009BC  0101               	movlb	1	; () banked
  1466  0009BE  6FB9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1467  0009C0  0102               	movlb	2	; () banked
  1468  0009C2  0E8D               	movlw	low main@msgbuffer
  1469  0009C4  0101               	movlb	1	; () banked
  1470  0009C6  6FB8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1471  0009C8  EC20  F00B         	call	_timer1_lthread	;wreg free
  1472                           
  1473                           ;main.c: 459: break;
  1474  0009CC  D756               	goto	l4118
  1475  0009CE                     l4156:
  1476                           
  1477                           ;main.c: 464: {
  1478                           ;main.c: 465: uart_response[0] = 0xf1;
  1479  0009CE  0EF1               	movlw	241
  1480  0009D0  0102               	movlb	2	; () banked
  1481  0009D2  6F9E               	movwf	main@uart_response& (0+255),b
  1482                           
  1483                           ; BSR set to: 2
  1484                           ;main.c: 466: uart_response[1] = msgbuffer[0];
  1485  0009D4  C28D  F29F         	movff	main@msgbuffer,main@uart_response+1
  1486                           
  1487                           ; BSR set to: 2
  1488                           ;main.c: 467: send_uart_message( uart_response );
  1489  0009D8  0102               	movlb	2	; () banked
  1490  0009DA  0E02               	movlw	high main@uart_response
  1491  0009DC  0101               	movlb	1	; () banked
  1492  0009DE  6FB3               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1493  0009E0  0102               	movlb	2	; () banked
  1494  0009E2  0E9E               	movlw	low main@uart_response
  1495  0009E4  0101               	movlb	1	; () banked
  1496  0009E6  6FB2               	movwf	send_uart_message@message_ptr& (0+255),b
  1497  0009E8  ECD1  F00D         	call	_send_uart_message	;wreg free
  1498                           
  1499                           ;main.c: 468: break;
  1500  0009EC  D746               	goto	l4118
  1501  0009EE                     l4162:
  1502                           
  1503                           ;main.c: 471: {
  1504                           ;main.c: 472: uart_response[0] = 0xf2;
  1505  0009EE  0EF2               	movlw	242
  1506  0009F0  0102               	movlb	2	; () banked
  1507  0009F2  6F9E               	movwf	main@uart_response& (0+255),b
  1508                           
  1509                           ; BSR set to: 2
  1510                           ;main.c: 473: uart_response[1] = msgbuffer[0];
  1511  0009F4  C28D  F29F         	movff	main@msgbuffer,main@uart_response+1
  1512                           
  1513                           ; BSR set to: 2
  1514                           ;main.c: 474: uart_response[2] = msgbuffer[1];
  1515  0009F8  C28E  F2A0         	movff	main@msgbuffer+1,main@uart_response+2
  1516                           
  1517                           ; BSR set to: 2
  1518                           ;main.c: 475: send_uart_message( uart_response );
  1519  0009FC  0102               	movlb	2	; () banked
  1520  0009FE  0E02               	movlw	high main@uart_response
  1521  000A00  0101               	movlb	1	; () banked
  1522  000A02  6FB3               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1523  000A04  0102               	movlb	2	; () banked
  1524  000A06  0E9E               	movlw	low main@uart_response
  1525  000A08  0101               	movlb	1	; () banked
  1526  000A0A  6FB2               	movwf	send_uart_message@message_ptr& (0+255),b
  1527  000A0C  ECD1  F00D         	call	_send_uart_message	;wreg free
  1528                           
  1529                           ;main.c: 476: break;
  1530  000A10  D734               	goto	l4118
  1531  000A12                     l4170:
  1532                           
  1533                           ;main.c: 479: {
  1534                           ;main.c: 480: uart_response[0] = 0xf3;
  1535  000A12  0EF3               	movlw	243
  1536  000A14  0102               	movlb	2	; () banked
  1537  000A16  6F9E               	movwf	main@uart_response& (0+255),b
  1538                           
  1539                           ; BSR set to: 2
  1540                           ;main.c: 481: uart_response[1] = msgbuffer[0];
  1541  000A18  C28D  F29F         	movff	main@msgbuffer,main@uart_response+1
  1542                           
  1543                           ; BSR set to: 2
  1544                           ;main.c: 482: send_uart_message( uart_response );
  1545  000A1C  0102               	movlb	2	; () banked
  1546  000A1E  0E02               	movlw	high main@uart_response
  1547  000A20  0101               	movlb	1	; () banked
  1548  000A22  6FB3               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1549  000A24  0102               	movlb	2	; () banked
  1550  000A26  0E9E               	movlw	low main@uart_response
  1551  000A28  0101               	movlb	1	; () banked
  1552  000A2A  6FB2               	movwf	send_uart_message@message_ptr& (0+255),b
  1553  000A2C  ECD1  F00D         	call	_send_uart_message	;wreg free
  1554                           
  1555                           ;main.c: 483: break;
  1556  000A30  D724               	goto	l4118
  1557  000A32                     l4176:
  1558                           
  1559                           ;main.c: 486: {
  1560                           ;main.c: 487: uart_response[0] = 0xf4;
  1561  000A32  0EF4               	movlw	244
  1562  000A34  0102               	movlb	2	; () banked
  1563  000A36  6F9E               	movwf	main@uart_response& (0+255),b
  1564                           
  1565                           ; BSR set to: 2
  1566                           ;main.c: 488: uart_response[1] = msgbuffer[0];
  1567  000A38  C28D  F29F         	movff	main@msgbuffer,main@uart_response+1
  1568                           
  1569                           ; BSR set to: 2
  1570                           ;main.c: 489: send_uart_message( uart_response );
  1571  000A3C  0102               	movlb	2	; () banked
  1572  000A3E  0E02               	movlw	high main@uart_response
  1573  000A40  0101               	movlb	1	; () banked
  1574  000A42  6FB3               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1575  000A44  0102               	movlb	2	; () banked
  1576  000A46  0E9E               	movlw	low main@uart_response
  1577  000A48  0101               	movlb	1	; () banked
  1578  000A4A  6FB2               	movwf	send_uart_message@message_ptr& (0+255),b
  1579  000A4C  ECD1  F00D         	call	_send_uart_message	;wreg free
  1580                           
  1581                           ;main.c: 490: break;
  1582  000A50  D714               	goto	l4118
  1583  000A52                     l4182:
  1584                           
  1585                           ;main.c: 494: {
  1586                           ;main.c: 495: uart_response[0] = 0x11;
  1587  000A52  0E11               	movlw	17
  1588  000A54  0102               	movlb	2	; () banked
  1589  000A56  6F9E               	movwf	main@uart_response& (0+255),b
  1590                           
  1591                           ; BSR set to: 2
  1592                           ;main.c: 496: uart_response[1] = msgbuffer[0];
  1593  000A58  C28D  F29F         	movff	main@msgbuffer,main@uart_response+1
  1594                           
  1595                           ; BSR set to: 2
  1596                           ;main.c: 497: send_uart_message( uart_response );
  1597  000A5C  0102               	movlb	2	; () banked
  1598  000A5E  0E02               	movlw	high main@uart_response
  1599  000A60  0101               	movlb	1	; () banked
  1600  000A62  6FB3               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1601  000A64  0102               	movlb	2	; () banked
  1602  000A66  0E9E               	movlw	low main@uart_response
  1603  000A68  0101               	movlb	1	; () banked
  1604  000A6A  6FB2               	movwf	send_uart_message@message_ptr& (0+255),b
  1605  000A6C  ECD1  F00D         	call	_send_uart_message	;wreg free
  1606                           
  1607                           ;main.c: 498: break;
  1608  000A70  D704               	goto	l4118
  1609  000A72                     l4192:
  1610  000A72  0102               	movlb	2	; () banked
  1611  000A74  51B2               	movf	main@msgtype& (0+255),w,b
  1612                           
  1613                           ; Switch size 1, requested type "space"
  1614                           ; Number of cases is 8, Range of values is 11 to 36
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte           25    13 (average)
  1618                           ;	Chosen strategy is simple_byte
  1619  000A76  0A0B               	xorlw	11	; case 11
  1620  000A78  B4D8               	btfsc	status,2,c
  1621  000A7A  D787               	goto	l4154
  1622  000A7C  0A15               	xorlw	21	; case 30
  1623  000A7E  B4D8               	btfsc	status,2,c
  1624  000A80  D7A6               	goto	l4156
  1625  000A82  0A01               	xorlw	1	; case 31
  1626  000A84  B4D8               	btfsc	status,2,c
  1627  000A86  D6F9               	goto	l4118
  1628  000A88  0A3F               	xorlw	63	; case 32
  1629  000A8A  B4D8               	btfsc	status,2,c
  1630  000A8C  D7A0               	goto	l4156
  1631  000A8E  0A01               	xorlw	1	; case 33
  1632  000A90  B4D8               	btfsc	status,2,c
  1633  000A92  D7AD               	goto	l4162
  1634  000A94  0A03               	xorlw	3	; case 34
  1635  000A96  B4D8               	btfsc	status,2,c
  1636  000A98  D7BC               	goto	l4170
  1637  000A9A  0A01               	xorlw	1	; case 35
  1638  000A9C  B4D8               	btfsc	status,2,c
  1639  000A9E  D7C9               	goto	l4176
  1640  000AA0  0A07               	xorlw	7	; case 36
  1641  000AA2  B4D8               	btfsc	status,2,c
  1642  000AA4  D7D6               	goto	l4182
  1643  000AA6  D6E9               	goto	l4118
  1644  000AA8                     __end_of_main:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           indf2	equ	0xFDF
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8
  1656                           
  1657 ;; *************** function _uart_configure *****************
  1658 ;; Defined at:
  1659 ;;		line 22 in file "../src/my_uart.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;		None               void
  1666 ;; Registers used:
  1667 ;;		wreg, status,2
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:   11
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text1
  1688  001B82                     __ptext1:
  1689                           	opt stack 0
  1690  001B82                     _uart_configure:
  1691                           	opt stack 19
  1692                           
  1693                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1694                           
  1695                           ; BSR set to: 2
  1696                           ;incstack = 0
  1697  001B82  8E94               	bsf	3988,7,c	;volatile
  1698                           
  1699                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1700  001B84  9C94               	bcf	3988,6,c	;volatile
  1701                           
  1702                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1703  001B86  867E               	bsf	3966,3,c	;volatile
  1704                           
  1705                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1706  001B88  84AD               	bsf	4013,2,c	;volatile
  1707                           
  1708                           ;my_uart.c: 31: SPBRGH1 = 0x00;
  1709  001B8A  0E00               	movlw	0
  1710  001B8C  6E7F               	movwf	3967,c	;volatile
  1711                           
  1712                           ;my_uart.c: 32: SPBRG1 = 0xCF;
  1713  001B8E  0ECF               	movlw	207
  1714  001B90  6EB0               	movwf	4016,c	;volatile
  1715                           
  1716                           ;my_uart.c: 34: TXSTA1bits.SYNC = 0;
  1717  001B92  98AD               	bcf	4013,4,c	;volatile
  1718                           
  1719                           ;my_uart.c: 35: RCSTA1bits.SPEN = 1;
  1720  001B94  8EAC               	bsf	4012,7,c	;volatile
  1721                           
  1722                           ;my_uart.c: 38: IPR1bits.TX1IP = 0;
  1723  001B96  989F               	bcf	3999,4,c	;volatile
  1724                           
  1725                           ;my_uart.c: 40: PIE1bits.TX1IE = 0;
  1726  001B98  989D               	bcf	3997,4,c	;volatile
  1727                           
  1728                           ;my_uart.c: 41: PIE1bits.RC1IE = 1;
  1729  001B9A  8A9D               	bsf	3997,5,c	;volatile
  1730                           
  1731                           ;my_uart.c: 43: TXSTA1bits.TXEN = 1;
  1732  001B9C  8AAD               	bsf	4013,5,c	;volatile
  1733                           
  1734                           ;my_uart.c: 44: RCSTA1bits.CREN = 1;
  1735  001B9E  88AC               	bsf	4012,4,c	;volatile
  1736  001BA0  0012               	return	
  1737  001BA2                     __end_of_uart_configure:
  1738                           	opt stack 0
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           postinc0	equ	0xFEE
  1744                           wreg	equ	0xFE8
  1745                           indf2	equ	0xFDF
  1746                           fsr2h	equ	0xFDA
  1747                           fsr2l	equ	0xFD9
  1748                           status	equ	0xFD8
  1749                           
  1750 ;; *************** function _timer1_lthread *****************
  1751 ;; Defined at:
  1752 ;;		line 14 in file "../src/timer1_thread.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1755 ;;		 -> main@t1thread_data(2), 
  1756 ;;  msgtype         2   28[BANK1 ] int 
  1757 ;;  length          2   30[BANK1 ] int 
  1758 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1759 ;;		 -> main@msgbuffer(15), 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  retval          1   34[BANK1 ] char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2   26[BANK1 ] int 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1771 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;Total ram usage:        9 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:   14
  1778 ;; This function calls:
  1779 ;;		_FromMainHigh_sendmsg
  1780 ;;		___lwmod
  1781 ;;		_blink0
  1782 ;; This function is called by:
  1783 ;;		_main
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text2
  1788  001640                     __ptext2:
  1789                           	opt stack 0
  1790  001640                     _timer1_lthread:
  1791                           	opt stack 16
  1792                           
  1793                           ;timer1_thread.c: 15: signed char retval;
  1794                           ;timer1_thread.c: 17: blink0();
  1795                           
  1796                           ;incstack = 0
  1797  001640  EC44  F00E         	call	_blink0	;wreg free
  1798                           
  1799                           ;timer1_thread.c: 19: tptr->msgcount++;
  1800  001644  C1B2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1801  001648  C1B3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1802  00164C  2ADE               	incf	postinc2,f,c
  1803  00164E  0E00               	movlw	0
  1804  001650  22DD               	addwfc	postdec2,f,c
  1805                           
  1806                           ;timer1_thread.c: 22: if ((tptr->msgcount % 10) == 9) {
  1807  001652  C1B2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1808  001656  C1B3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1809  00165A  0101               	movlb	1	; () banked
  1810  00165C  CFDE F198          	movff	postinc2,___lwmod@dividend
  1811  001660  0101               	movlb	1	; () banked
  1812  001662  CFDD F199          	movff	postdec2,___lwmod@dividend+1
  1813  001666  0E00               	movlw	0
  1814  001668  0101               	movlb	1	; () banked
  1815  00166A  6F9B               	movwf	(___lwmod@divisor+1)& (0+255),b
  1816  00166C  0E0A               	movlw	10
  1817  00166E  0101               	movlb	1	; () banked
  1818  001670  6F9A               	movwf	___lwmod@divisor& (0+255),b
  1819  001672  EC51  F00B         	call	___lwmod	;wreg free
  1820  001676  0101               	movlb	1	; () banked
  1821  001678  5198               	movf	?___lwmod& (0+255),w,b
  1822  00167A  0A09               	xorlw	9
  1823  00167C  0101               	movlb	1	; () banked
  1824  00167E  1199               	iorwf	(?___lwmod+1)& (0+255),w,b
  1825  001680  A4D8               	btfss	status,2,c
  1826  001682  0012               	return	
  1827                           
  1828                           ; BSR set to: 1
  1829                           ;timer1_thread.c: 23: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1830  001684  0E14               	movlw	20
  1831  001686  0101               	movlb	1	; () banked
  1832  001688  6FAE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1833  00168A  0101               	movlb	1	; () banked
  1834  00168C  C1B3  F1B0         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1835  001690  0101               	movlb	1	; () banked
  1836  001692  C1B2  F1AF         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1837  001696  0E02               	movlw	2
  1838  001698  EC2D  F00D         	call	_FromMainHigh_sendmsg
  1839  00169C  0101               	movlb	1	; () banked
  1840  00169E  6FBA               	movwf	timer1_lthread@retval& (0+255),b
  1841  0016A0  0012               	return	
  1842  0016A2                     __end_of_timer1_lthread:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           indf2	equ	0xFDF
  1851                           postinc2	equ	0xFDE
  1852                           postdec2	equ	0xFDD
  1853                           fsr2h	equ	0xFDA
  1854                           fsr2l	equ	0xFD9
  1855                           status	equ	0xFD8
  1856                           
  1857 ;; *************** function _blink0 *****************
  1858 ;; Defined at:
  1859 ;;		line 46 in file "../src/debug.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  2  464[COMRAM] int 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:   11
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_timer1_lthread
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text3
  1888  001C88                     __ptext3:
  1889                           	opt stack 0
  1890  001C88                     _blink0:
  1891                           	opt stack 18
  1892                           
  1893                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1894                           
  1895                           ; BSR set to: 1
  1896                           ;incstack = 0
  1897  001C88  708A               	btg	3978,0,c	;volatile
  1898  001C8A  0012               	return	
  1899  001C8C                     __end_of_blink0:
  1900                           	opt stack 0
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           indf2	equ	0xFDF
  1908                           postinc2	equ	0xFDE
  1909                           postdec2	equ	0xFDD
  1910                           fsr2h	equ	0xFDA
  1911                           fsr2l	equ	0xFD9
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function ___lwmod *****************
  1915 ;; Defined at:
  1916 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  dividend        2    0[BANK1 ] unsigned int 
  1919 ;;  divisor         2    2[BANK1 ] unsigned int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  counter         1    4[BANK1 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    0[BANK1 ] unsigned int 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1931 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;Total ram usage:        5 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:   11
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_timer1_lthread
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text4
  1946  0016A2                     __ptext4:
  1947                           	opt stack 0
  1948  0016A2                     ___lwmod:
  1949                           	opt stack 18
  1950                           
  1951                           ;incstack = 0
  1952  0016A2  0101               	movlb	1	; () banked
  1953  0016A4  519B               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1954  0016A6  119A               	iorwf	___lwmod@divisor& (0+255),w,b
  1955  0016A8  B4D8               	btfsc	status,2,c
  1956  0016AA  D026               	goto	l1121
  1957                           
  1958                           ; BSR set to: 1
  1959  0016AC  0E01               	movlw	1
  1960  0016AE  0101               	movlb	1	; () banked
  1961  0016B0  6F9C               	movwf	___lwmod@counter& (0+255),b
  1962  0016B2  D006               	goto	l3556
  1963  0016B4                     l3554:
  1964                           
  1965                           ; BSR set to: 1
  1966  0016B4  0101               	movlb	1	; () banked
  1967  0016B6  90D8               	bcf	status,0,c
  1968  0016B8  379A               	rlcf	___lwmod@divisor& (0+255),f,b
  1969  0016BA  379B               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1970  0016BC  0101               	movlb	1	; () banked
  1971  0016BE  2B9C               	incf	___lwmod@counter& (0+255),f,b
  1972  0016C0                     l3556:
  1973                           
  1974                           ; BSR set to: 1
  1975  0016C0  0101               	movlb	1	; () banked
  1976  0016C2  AF9B               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1977  0016C4  D7F7               	goto	l3554
  1978  0016C6                     l3558:
  1979                           
  1980                           ; BSR set to: 1
  1981  0016C6  0101               	movlb	1	; () banked
  1982  0016C8  519A               	movf	___lwmod@divisor& (0+255),w,b
  1983  0016CA  0101               	movlb	1	; () banked
  1984  0016CC  5D98               	subwf	___lwmod@dividend& (0+255),w,b
  1985  0016CE  0101               	movlb	1	; () banked
  1986  0016D0  519B               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1987  0016D2  0101               	movlb	1	; () banked
  1988  0016D4  5999               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1989  0016D6  A0D8               	btfss	status,0,c
  1990  0016D8  D008               	goto	l3562
  1991                           
  1992                           ; BSR set to: 1
  1993  0016DA  0101               	movlb	1	; () banked
  1994  0016DC  519A               	movf	___lwmod@divisor& (0+255),w,b
  1995  0016DE  0101               	movlb	1	; () banked
  1996  0016E0  5F98               	subwf	___lwmod@dividend& (0+255),f,b
  1997  0016E2  0101               	movlb	1	; () banked
  1998  0016E4  519B               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1999  0016E6  0101               	movlb	1	; () banked
  2000  0016E8  5B99               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2001  0016EA                     l3562:
  2002                           
  2003                           ; BSR set to: 1
  2004  0016EA  0101               	movlb	1	; () banked
  2005  0016EC  90D8               	bcf	status,0,c
  2006  0016EE  339B               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2007  0016F0  339A               	rrcf	___lwmod@divisor& (0+255),f,b
  2008                           
  2009                           ; BSR set to: 1
  2010  0016F2  0101               	movlb	1	; () banked
  2011  0016F4  2F9C               	decfsz	___lwmod@counter& (0+255),f,b
  2012  0016F6  D7E7               	goto	l3558
  2013  0016F8                     l1121:
  2014                           
  2015                           ; BSR set to: 1
  2016  0016F8  C198  F198         	movff	___lwmod@dividend,?___lwmod
  2017  0016FC  C199  F199         	movff	___lwmod@dividend+1,?___lwmod+1
  2018                           
  2019                           ; BSR set to: 1
  2020  001700  0012               	return	
  2021  001702                     __end_of___lwmod:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           indf2	equ	0xFDF
  2030                           postinc2	equ	0xFDE
  2031                           postdec2	equ	0xFDD
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _FromMainHigh_sendmsg *****************
  2037 ;; Defined at:
  2038 ;;		line 174 in file "../src/messages.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  length          1    wreg     unsigned char 
  2041 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2042 ;;  data            2   23[BANK1 ] PTR void 
  2043 ;;		 -> main@t1thread_data(2), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  length          1   25[BANK1 ] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      char 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2055 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;Total ram usage:        4 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:   13
  2062 ;; This function calls:
  2063 ;;		_send_msg
  2064 ;; This function is called by:
  2065 ;;		_timer1_lthread
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text5
  2070  001A5A                     __ptext5:
  2071                           	opt stack 0
  2072  001A5A                     _FromMainHigh_sendmsg:
  2073                           	opt stack 16
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;incstack = 0
  2077                           ;FromMainHigh_sendmsg@length stored from wreg
  2078  001A5A  0101               	movlb	1	; () banked
  2079  001A5C  6FB1               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2080                           
  2081                           ; BSR set to: 1
  2082                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2083  001A5E  0104               	movlb	4	; () banked
  2084  001A60  0E04               	movlw	high _FromMainHigh_MQ
  2085  001A62  0101               	movlb	1	; () banked
  2086  001A64  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  2087  001A66  0104               	movlb	4	; () banked
  2088  001A68  0E00               	movlw	low _FromMainHigh_MQ
  2089  001A6A  0101               	movlb	1	; () banked
  2090  001A6C  6FA2               	movwf	send_msg@qptr& (0+255),b
  2091  001A6E  C1B1  F1A4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2092  001A72  C1AE  F1A5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2093  001A76  0101               	movlb	1	; () banked
  2094  001A78  C1B0  F1A7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2095  001A7C  0101               	movlb	1	; () banked
  2096  001A7E  C1AF  F1A6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2097  001A82  EC3F  F007         	call	_send_msg	;wreg free
  2098  001A86  0012               	return	
  2099  001A88                     __end_of_FromMainHigh_sendmsg:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           indf2	equ	0xFDF
  2108                           postinc2	equ	0xFDE
  2109                           postdec2	equ	0xFDD
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8
  2113                           
  2114 ;; *************** function _timer0_lthread *****************
  2115 ;; Defined at:
  2116 ;;		line 9 in file "../src/timer0_thread.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2119 ;;		 -> main@t0thread_data(2), 
  2120 ;;  msgtype         2    2[BANK1 ] int 
  2121 ;;  length          2    4[BANK1 ] int 
  2122 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2123 ;;		 -> main@msgbuffer(15), 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2126 ;;		 -> main@msgbuffer(15), 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2    0[BANK1 ] int 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2136 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;Total ram usage:       10 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:   11
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text6
  2151  001C1A                     __ptext6:
  2152                           	opt stack 0
  2153  001C1A                     _timer0_lthread:
  2154                           	opt stack 19
  2155                           
  2156                           ;timer0_thread.c: 10: unsigned int *msgval;
  2157                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2158                           
  2159                           ;incstack = 0
  2160  001C1A  0101               	movlb	1	; () banked
  2161  001C1C  C19F  F1A1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2162  001C20  0101               	movlb	1	; () banked
  2163  001C22  C19E  F1A0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2164                           
  2165                           ; BSR set to: 1
  2166  001C26  0012               	return	
  2167  001C28                     __end_of_timer0_lthread:
  2168                           	opt stack 0
  2169                           tblptru	equ	0xFF8
  2170                           tblptrh	equ	0xFF7
  2171                           tblptrl	equ	0xFF6
  2172                           tablat	equ	0xFF5
  2173                           postinc0	equ	0xFEE
  2174                           wreg	equ	0xFE8
  2175                           indf2	equ	0xFDF
  2176                           postinc2	equ	0xFDE
  2177                           postdec2	equ	0xFDD
  2178                           fsr2h	equ	0xFDA
  2179                           fsr2l	equ	0xFD9
  2180                           status	equ	0xFD8
  2181                           
  2182 ;; *************** function _send_uart_message *****************
  2183 ;; Defined at:
  2184 ;;		line 179 in file "../src/my_uart.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  message_ptr     2   26[BANK1 ] PTR unsigned char 
  2187 ;;		 -> main@uart_response(14), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  message_q_co    1   28[BANK1 ] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      unsigned char 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2199 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2200 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;Total ram usage:        3 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:   14
  2206 ;; This function calls:
  2207 ;;		_FromMainLow_sendmsg
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text7
  2214  001BA2                     __ptext7:
  2215                           	opt stack 0
  2216  001BA2                     _send_uart_message:
  2217                           	opt stack 16
  2218                           
  2219                           ;my_uart.c: 181: unsigned char message_q_code = FromMainLow_sendmsg(14,31,(void *) messa
      +                          ge_ptr );
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;incstack = 0
  2223  001BA2  0E1F               	movlw	31
  2224  001BA4  0101               	movlb	1	; () banked
  2225  001BA6  6FAE               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2226  001BA8  0101               	movlb	1	; () banked
  2227  001BAA  C1B3  F1B0         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2228  001BAE  0101               	movlb	1	; () banked
  2229  001BB0  C1B2  F1AF         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2230  001BB4  0E0E               	movlw	14
  2231  001BB6  EC44  F00D         	call	_FromMainLow_sendmsg
  2232  001BBA  0101               	movlb	1	; () banked
  2233  001BBC  6FB4               	movwf	send_uart_message@message_q_code& (0+255),b
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;my_uart.c: 186: }
  2237                           ;my_uart.c: 188: PIE1bits.TX1IE = 1;
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;my_uart.c: 184: {
  2241                           ;my_uart.c: 185: return 0x02;
  2242                           ;	Return value of _send_uart_message is never used
  2243                           
  2244                           ;my_uart.c: 183: if( message_q_code == -1)
  2245  001BBE  889D               	bsf	3997,4,c	;volatile
  2246                           
  2247                           ; BSR set to: 1
  2248                           
  2249                           ;my_uart.c: 189: return 0x00;
  2250                           ;	Return value of _send_uart_message is never used
  2251  001BC0  0012               	return	
  2252  001BC2                     __end_of_send_uart_message:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           indf2	equ	0xFDF
  2261                           postinc2	equ	0xFDE
  2262                           postdec2	equ	0xFDD
  2263                           fsr2h	equ	0xFDA
  2264                           fsr2l	equ	0xFD9
  2265                           status	equ	0xFD8
  2266                           
  2267 ;; *************** function _FromMainLow_sendmsg *****************
  2268 ;; Defined at:
  2269 ;;		line 150 in file "../src/messages.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  length          1    wreg     unsigned char 
  2272 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2273 ;;  data            2   23[BANK1 ] PTR void 
  2274 ;;		 -> main@uart_response(14), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  length          1   25[BANK1 ] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      char 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2286 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;Total ram usage:        4 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:   13
  2293 ;; This function calls:
  2294 ;;		_send_msg
  2295 ;; This function is called by:
  2296 ;;		_send_uart_message
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text8
  2301  001A88                     __ptext8:
  2302                           	opt stack 0
  2303  001A88                     _FromMainLow_sendmsg:
  2304                           	opt stack 16
  2305                           
  2306                           ; BSR set to: 1
  2307                           ;incstack = 0
  2308                           ;FromMainLow_sendmsg@length stored from wreg
  2309  001A88  0101               	movlb	1	; () banked
  2310  001A8A  6FB1               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2314  001A8C  0103               	movlb	3	; () banked
  2315  001A8E  0E03               	movlw	high _FromMainLow_MQ
  2316  001A90  0101               	movlb	1	; () banked
  2317  001A92  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  2318  001A94  0103               	movlb	3	; () banked
  2319  001A96  0E00               	movlw	low _FromMainLow_MQ
  2320  001A98  0101               	movlb	1	; () banked
  2321  001A9A  6FA2               	movwf	send_msg@qptr& (0+255),b
  2322  001A9C  C1B1  F1A4         	movff	FromMainLow_sendmsg@length,send_msg@length
  2323  001AA0  C1AE  F1A5         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2324  001AA4  0101               	movlb	1	; () banked
  2325  001AA6  C1B0  F1A7         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2326  001AAA  0101               	movlb	1	; () banked
  2327  001AAC  C1AF  F1A6         	movff	FromMainLow_sendmsg@data,send_msg@data
  2328  001AB0  EC3F  F007         	call	_send_msg	;wreg free
  2329  001AB4  0012               	return	
  2330  001AB6                     __end_of_FromMainLow_sendmsg:
  2331                           	opt stack 0
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           indf2	equ	0xFDF
  2339                           postinc2	equ	0xFDE
  2340                           postdec2	equ	0xFDD
  2341                           fsr2h	equ	0xFDA
  2342                           fsr2l	equ	0xFD9
  2343                           status	equ	0xFD8
  2344                           
  2345 ;; *************** function _send_msg *****************
  2346 ;; Defined at:
  2347 ;;		line 24 in file "../src/messages.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2350 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2351 ;;  length          1   12[BANK1 ] unsigned char 
  2352 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2353 ;;  data            2   14[BANK1 ] PTR void 
  2354 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  2355 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  2356 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2359 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  2360 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2361 ;;  tlength         2   17[BANK1 ] unsigned int 
  2362 ;;  slot            1   19[BANK1 ] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      char 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2372 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;Total ram usage:       12 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:   12
  2379 ;; This function calls:
  2380 ;;		_memcpy
  2381 ;; This function is called by:
  2382 ;;		_FromMainLow_sendmsg
  2383 ;;		_FromMainHigh_sendmsg
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text9
  2388  000E7E                     __ptext9:
  2389                           	opt stack 0
  2390  000E7E                     _send_msg:
  2391                           	opt stack 16
  2392                           
  2393                           ;messages.c: 25: unsigned char slot;
  2394                           ;messages.c: 27: msg *qmsg;
  2395                           ;messages.c: 28: size_t tlength = length;
  2396                           
  2397                           ;incstack = 0
  2398  000E7E  0101               	movlb	1	; () banked
  2399  000E80  C1A4  F1A9         	movff	send_msg@length,send_msg@tlength
  2400  000E84  0101               	movlb	1	; () banked
  2401  000E86  6BAA               	clrf	(send_msg@tlength+1)& (0+255),b
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2405  000E88  0101               	movlb	1	; () banked
  2406  000E8A  EE20 F088          	lfsr	2,136
  2407  000E8E  0101               	movlb	1	; () banked
  2408  000E90  51A2               	movf	send_msg@qptr& (0+255),w,b
  2409  000E92  26D9               	addwf	fsr2l,f,c
  2410  000E94  0101               	movlb	1	; () banked
  2411  000E96  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2412  000E98  22DA               	addwfc	fsr2h,f,c
  2413  000E9A  50DF               	movf	indf2,w,c
  2414  000E9C  0101               	movlb	1	; () banked
  2415  000E9E  6FAB               	movwf	send_msg@slot& (0+255),b
  2416                           
  2417                           ; BSR set to: 1
  2418                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2419  000EA0  0101               	movlb	1	; () banked
  2420  000EA2  51AB               	movf	send_msg@slot& (0+255),w,b
  2421  000EA4  0D11               	mullw	17
  2422  000EA6  50F3               	movf	prodl,w,c
  2423  000EA8  0101               	movlb	1	; () banked
  2424  000EAA  25A2               	addwf	send_msg@qptr& (0+255),w,b
  2425  000EAC  0101               	movlb	1	; () banked
  2426  000EAE  6FAC               	movwf	send_msg@qmsg& (0+255),b
  2427  000EB0  50F4               	movf	prodh,w,c
  2428  000EB2  0101               	movlb	1	; () banked
  2429  000EB4  21A3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2430  000EB6  0101               	movlb	1	; () banked
  2431  000EB8  6FAD               	movwf	(send_msg@qmsg+1)& (0+255),b
  2432                           
  2433                           ; BSR set to: 1
  2434                           ;messages.c: 41: if (qmsg->full != 0) {
  2435  000EBA  C1AC  FFD9         	movff	send_msg@qmsg,fsr2l
  2436  000EBE  C1AD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2437  000EC2  50DF               	movf	indf2,w,c
  2438  000EC4  B4D8               	btfsc	status,2,c
  2439  000EC6  D002               	goto	l3360
  2440                           
  2441                           ; BSR set to: 1
  2442                           ;messages.c: 42: return (-1);
  2443  000EC8  0EFF               	movlw	255
  2444  000ECA  0012               	return	
  2445  000ECC                     l3360:
  2446                           
  2447                           ; BSR set to: 1
  2448                           ;messages.c: 43: }
  2449                           ;messages.c: 46: qmsg->length = length;
  2450  000ECC  0101               	movlb	1	; () banked
  2451  000ECE  EE20 F001          	lfsr	2,1
  2452  000ED2  0101               	movlb	1	; () banked
  2453  000ED4  51AC               	movf	send_msg@qmsg& (0+255),w,b
  2454  000ED6  26D9               	addwf	fsr2l,f,c
  2455  000ED8  0101               	movlb	1	; () banked
  2456  000EDA  51AD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2457  000EDC  22DA               	addwfc	fsr2h,f,c
  2458  000EDE  0101               	movlb	1	; () banked
  2459  000EE0  C1A4  FFDF         	movff	send_msg@length,indf2
  2460                           
  2461                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2462  000EE4  0101               	movlb	1	; () banked
  2463  000EE6  EE20 F002          	lfsr	2,2
  2464  000EEA  0101               	movlb	1	; () banked
  2465  000EEC  51AC               	movf	send_msg@qmsg& (0+255),w,b
  2466  000EEE  26D9               	addwf	fsr2l,f,c
  2467  000EF0  0101               	movlb	1	; () banked
  2468  000EF2  51AD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2469  000EF4  22DA               	addwfc	fsr2h,f,c
  2470  000EF6  0101               	movlb	1	; () banked
  2471  000EF8  C1A5  FFDF         	movff	send_msg@msgtype,indf2
  2472                           
  2473                           ; BSR set to: 1
  2474                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2475  000EFC  0E03               	movlw	3
  2476  000EFE  0101               	movlb	1	; () banked
  2477  000F00  25AC               	addwf	send_msg@qmsg& (0+255),w,b
  2478  000F02  0101               	movlb	1	; () banked
  2479  000F04  6F98               	movwf	memcpy@d1& (0+255),b
  2480  000F06  0E00               	movlw	0
  2481  000F08  0101               	movlb	1	; () banked
  2482  000F0A  21AD               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2483  000F0C  0101               	movlb	1	; () banked
  2484  000F0E  6F99               	movwf	(memcpy@d1+1)& (0+255),b
  2485  000F10  0101               	movlb	1	; () banked
  2486  000F12  C1A7  F19B         	movff	send_msg@data+1,memcpy@s1+1
  2487  000F16  0101               	movlb	1	; () banked
  2488  000F18  C1A6  F19A         	movff	send_msg@data,memcpy@s1
  2489  000F1C  C1A9  F19C         	movff	send_msg@tlength,memcpy@n
  2490  000F20  C1AA  F19D         	movff	send_msg@tlength+1,memcpy@n+1
  2491  000F24  ECDD  F00B         	call	_memcpy	;wreg free
  2492                           
  2493                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  2494  000F28  0101               	movlb	1	; () banked
  2495  000F2A  EE20 F088          	lfsr	2,136
  2496  000F2E  0101               	movlb	1	; () banked
  2497  000F30  51A2               	movf	send_msg@qptr& (0+255),w,b
  2498  000F32  26D9               	addwf	fsr2l,f,c
  2499  000F34  0101               	movlb	1	; () banked
  2500  000F36  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2501  000F38  22DA               	addwfc	fsr2h,f,c
  2502  000F3A  0101               	movlb	1	; () banked
  2503  000F3C  EE10 F088          	lfsr	1,136
  2504  000F40  0101               	movlb	1	; () banked
  2505  000F42  51A2               	movf	send_msg@qptr& (0+255),w,b
  2506  000F44  26E1               	addwf	fsr1l,f,c
  2507  000F46  0101               	movlb	1	; () banked
  2508  000F48  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2509  000F4A  22E2               	addwfc	fsr1h,f,c
  2510  000F4C  50E7               	movf	indf1,w,c
  2511  000F4E  0101               	movlb	1	; () banked
  2512  000F50  6FA8               	movwf	??_send_msg& (0+255),b
  2513  000F52  0101               	movlb	1	; () banked
  2514  000F54  29A8               	incf	??_send_msg& (0+255),w,b
  2515  000F56  0B07               	andlw	7
  2516  000F58  6EDF               	movwf	indf2,c
  2517                           
  2518                           ; BSR set to: 1
  2519                           ;messages.c: 59: qmsg->full = 1;
  2520  000F5A  C1AC  FFD9         	movff	send_msg@qmsg,fsr2l
  2521  000F5E  C1AD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2522  000F62  0E01               	movlw	1
  2523  000F64  6EDF               	movwf	indf2,c
  2524                           
  2525                           ; BSR set to: 1
  2526                           ;messages.c: 60: return (1);
  2527  000F66  0E01               	movlw	1
  2528  000F68  0012               	return	
  2529  000F6A                     __end_of_send_msg:
  2530                           	opt stack 0
  2531                           tblptru	equ	0xFF8
  2532                           tblptrh	equ	0xFF7
  2533                           tblptrl	equ	0xFF6
  2534                           tablat	equ	0xFF5
  2535                           prodh	equ	0xFF4
  2536                           prodl	equ	0xFF3
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           indf1	equ	0xFE7
  2540                           fsr1h	equ	0xFE2
  2541                           fsr1l	equ	0xFE1
  2542                           indf2	equ	0xFDF
  2543                           postinc2	equ	0xFDE
  2544                           postdec2	equ	0xFDD
  2545                           fsr2h	equ	0xFDA
  2546                           fsr2l	equ	0xFD9
  2547                           status	equ	0xFD8
  2548                           
  2549 ;; *************** function _init_timer1_lthread *****************
  2550 ;; Defined at:
  2551 ;;		line 6 in file "../src/timer1_thread.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2554 ;;		 -> main@t1thread_data(2), 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;		None               void
  2559 ;; Registers used:
  2560 ;;		wreg, fsr2l, fsr2h
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2566 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2569 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;Total ram usage:        2 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:   11
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text10
  2581  001BC2                     __ptext10:
  2582                           	opt stack 0
  2583  001BC2                     _init_timer1_lthread:
  2584                           	opt stack 19
  2585                           
  2586                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2587                           
  2588                           ; BSR set to: 1
  2589                           ;incstack = 0
  2590  001BC2  C198  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2591  001BC6  C199  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2592  001BCA  0E00               	movlw	0
  2593  001BCC  6EDE               	movwf	postinc2,c
  2594  001BCE  0E00               	movlw	0
  2595  001BD0  6EDD               	movwf	postdec2,c
  2596  001BD2  0012               	return	
  2597  001BD4                     __end_of_init_timer1_lthread:
  2598                           	opt stack 0
  2599                           tblptru	equ	0xFF8
  2600                           tblptrh	equ	0xFF7
  2601                           tblptrl	equ	0xFF6
  2602                           tablat	equ	0xFF5
  2603                           prodh	equ	0xFF4
  2604                           prodl	equ	0xFF3
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           indf1	equ	0xFE7
  2608                           fsr1h	equ	0xFE2
  2609                           fsr1l	equ	0xFE1
  2610                           indf2	equ	0xFDF
  2611                           postinc2	equ	0xFDE
  2612                           postdec2	equ	0xFDD
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _init_queues *****************
  2618 ;; Defined at:
  2619 ;;		line 194 in file "../src/messages.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:   12
  2640 ;; This function calls:
  2641 ;;		_init_queue
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text11
  2648  001762                     __ptext11:
  2649                           	opt stack 0
  2650  001762                     _init_queues:
  2651                           	opt stack 18
  2652                           
  2653                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2654                           
  2655                           ;incstack = 0
  2656  001762  0E00               	movlw	0
  2657  001764  0100               	movlb	0	; () banked
  2658  001766  6FB1               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2662  001768  0101               	movlb	1	; () banked
  2663  00176A  0E01               	movlw	high _ToMainLow_MQ
  2664  00176C  0101               	movlb	1	; () banked
  2665  00176E  6F99               	movwf	(init_queue@qptr+1)& (0+255),b
  2666  001770  0101               	movlb	1	; () banked
  2667  001772  0E00               	movlw	low _ToMainLow_MQ
  2668  001774  0101               	movlb	1	; () banked
  2669  001776  6F98               	movwf	init_queue@qptr& (0+255),b
  2670  001778  ECEE  F00A         	call	_init_queue	;wreg free
  2671                           
  2672                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2673  00177C  0102               	movlb	2	; () banked
  2674  00177E  0E02               	movlw	high _ToMainHigh_MQ
  2675  001780  0101               	movlb	1	; () banked
  2676  001782  6F99               	movwf	(init_queue@qptr+1)& (0+255),b
  2677  001784  0102               	movlb	2	; () banked
  2678  001786  0E00               	movlw	low _ToMainHigh_MQ
  2679  001788  0101               	movlb	1	; () banked
  2680  00178A  6F98               	movwf	init_queue@qptr& (0+255),b
  2681  00178C  ECEE  F00A         	call	_init_queue	;wreg free
  2682                           
  2683                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2684  001790  0103               	movlb	3	; () banked
  2685  001792  0E03               	movlw	high _FromMainLow_MQ
  2686  001794  0101               	movlb	1	; () banked
  2687  001796  6F99               	movwf	(init_queue@qptr+1)& (0+255),b
  2688  001798  0103               	movlb	3	; () banked
  2689  00179A  0E00               	movlw	low _FromMainLow_MQ
  2690  00179C  0101               	movlb	1	; () banked
  2691  00179E  6F98               	movwf	init_queue@qptr& (0+255),b
  2692  0017A0  ECEE  F00A         	call	_init_queue	;wreg free
  2693                           
  2694                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2695  0017A4  0104               	movlb	4	; () banked
  2696  0017A6  0E04               	movlw	high _FromMainHigh_MQ
  2697  0017A8  0101               	movlb	1	; () banked
  2698  0017AA  6F99               	movwf	(init_queue@qptr+1)& (0+255),b
  2699  0017AC  0104               	movlb	4	; () banked
  2700  0017AE  0E00               	movlw	low _FromMainHigh_MQ
  2701  0017B0  0101               	movlb	1	; () banked
  2702  0017B2  6F98               	movwf	init_queue@qptr& (0+255),b
  2703  0017B4  ECEE  F00A         	call	_init_queue	;wreg free
  2704  0017B8  0012               	return	
  2705  0017BA                     __end_of_init_queues:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           prodh	equ	0xFF4
  2712                           prodl	equ	0xFF3
  2713                           postinc0	equ	0xFEE
  2714                           wreg	equ	0xFE8
  2715                           indf1	equ	0xFE7
  2716                           fsr1h	equ	0xFE2
  2717                           fsr1l	equ	0xFE1
  2718                           indf2	equ	0xFDF
  2719                           postinc2	equ	0xFDE
  2720                           postdec2	equ	0xFDD
  2721                           fsr2h	equ	0xFDA
  2722                           fsr2l	equ	0xFD9
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _init_queue *****************
  2726 ;; Defined at:
  2727 ;;		line 14 in file "../src/messages.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2730 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  i               1    2[BANK1 ] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2742 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2745 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2746 ;;Total ram usage:        3 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:   11
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_init_queues
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text12
  2757  0015DC                     __ptext12:
  2758                           	opt stack 0
  2759  0015DC                     _init_queue:
  2760                           	opt stack 18
  2761                           
  2762                           ;messages.c: 15: unsigned char i;
  2763                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2764                           
  2765                           ;incstack = 0
  2766  0015DC  0101               	movlb	1	; () banked
  2767  0015DE  EE20 F088          	lfsr	2,136
  2768  0015E2  0101               	movlb	1	; () banked
  2769  0015E4  5198               	movf	init_queue@qptr& (0+255),w,b
  2770  0015E6  26D9               	addwf	fsr2l,f,c
  2771  0015E8  0101               	movlb	1	; () banked
  2772  0015EA  5199               	movf	(init_queue@qptr+1)& (0+255),w,b
  2773  0015EC  22DA               	addwfc	fsr2h,f,c
  2774  0015EE  0E00               	movlw	0
  2775  0015F0  6EDF               	movwf	indf2,c
  2776                           
  2777                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2778  0015F2  0101               	movlb	1	; () banked
  2779  0015F4  EE20 F089          	lfsr	2,137
  2780  0015F8  0101               	movlb	1	; () banked
  2781  0015FA  5198               	movf	init_queue@qptr& (0+255),w,b
  2782  0015FC  26D9               	addwf	fsr2l,f,c
  2783  0015FE  0101               	movlb	1	; () banked
  2784  001600  5199               	movf	(init_queue@qptr+1)& (0+255),w,b
  2785  001602  22DA               	addwfc	fsr2h,f,c
  2786  001604  0E00               	movlw	0
  2787  001606  6EDF               	movwf	indf2,c
  2788                           
  2789                           ; BSR set to: 1
  2790                           ;messages.c: 19: for (i = 0; i < 8; i++) {
  2791  001608  0E00               	movlw	0
  2792  00160A  0101               	movlb	1	; () banked
  2793  00160C  6F9A               	movwf	init_queue@i& (0+255),b
  2794                           
  2795                           ; BSR set to: 1
  2796  00160E  0E07               	movlw	7
  2797  001610  0101               	movlb	1	; () banked
  2798  001612  659A               	cpfsgt	init_queue@i& (0+255),b
  2799  001614  D001               	goto	l3464
  2800  001616  0012               	return	
  2801  001618                     l3464:
  2802                           
  2803                           ; BSR set to: 1
  2804                           ;messages.c: 20: qptr->queue[i].full = 0;
  2805  001618  0101               	movlb	1	; () banked
  2806  00161A  519A               	movf	init_queue@i& (0+255),w,b
  2807  00161C  0D11               	mullw	17
  2808  00161E  50F3               	movf	prodl,w,c
  2809  001620  0101               	movlb	1	; () banked
  2810  001622  2598               	addwf	init_queue@qptr& (0+255),w,b
  2811  001624  6ED9               	movwf	fsr2l,c
  2812  001626  50F4               	movf	prodh,w,c
  2813  001628  0101               	movlb	1	; () banked
  2814  00162A  2199               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2815  00162C  6EDA               	movwf	fsr2h,c
  2816  00162E  0E00               	movlw	0
  2817  001630  6EDF               	movwf	indf2,c
  2818                           
  2819                           ; BSR set to: 1
  2820  001632  0101               	movlb	1	; () banked
  2821  001634  2B9A               	incf	init_queue@i& (0+255),f,b
  2822                           
  2823                           ; BSR set to: 1
  2824  001636  0E07               	movlw	7
  2825  001638  0101               	movlb	1	; () banked
  2826  00163A  659A               	cpfsgt	init_queue@i& (0+255),b
  2827  00163C  D7ED               	goto	l3464
  2828  00163E  0012               	return	
  2829  001640                     __end_of_init_queue:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           indf1	equ	0xFE7
  2840                           fsr1h	equ	0xFE2
  2841                           fsr1l	equ	0xFE1
  2842                           indf2	equ	0xFDF
  2843                           postinc2	equ	0xFDE
  2844                           postdec2	equ	0xFDD
  2845                           fsr2h	equ	0xFDA
  2846                           fsr2l	equ	0xFD9
  2847                           status	equ	0xFD8
  2848                           
  2849 ;; *************** function _init_i2c *****************
  2850 ;; Defined at:
  2851 ;;		line 327 in file "../src/my_i2c.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2854 ;;		 -> main@ic(38), 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;		None               void
  2859 ;; Registers used:
  2860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2866 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;Total ram usage:        2 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:   11
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text13
  2881  00150E                     __ptext13:
  2882                           	opt stack 0
  2883  00150E                     _init_i2c:
  2884                           	opt stack 19
  2885                           
  2886                           ;my_i2c.c: 328: ic_ptr = ic;
  2887                           
  2888                           ; BSR set to: 1
  2889                           ;incstack = 0
  2890  00150E  0101               	movlb	1	; () banked
  2891  001510  0100               	movlb	0	; () banked
  2892  001512  C199  F0D3         	movff	init_i2c@ic+1,_ic_ptr+1
  2893  001516  0101               	movlb	1	; () banked
  2894  001518  0100               	movlb	0	; () banked
  2895  00151A  C198  F0D2         	movff	init_i2c@ic,_ic_ptr
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;my_i2c.c: 329: ic_ptr->buflen = 0;
  2899  00151E  0100               	movlb	0	; () banked
  2900  001520  EE20 F00E          	lfsr	2,14
  2901  001524  0100               	movlb	0	; () banked
  2902  001526  51D2               	movf	_ic_ptr& (0+255),w,b
  2903  001528  26D9               	addwf	fsr2l,f,c
  2904  00152A  0100               	movlb	0	; () banked
  2905  00152C  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  2906  00152E  22DA               	addwfc	fsr2h,f,c
  2907  001530  0E00               	movlw	0
  2908  001532  6EDF               	movwf	indf2,c
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;my_i2c.c: 330: ic_ptr->event_count = 0;
  2912  001534  0100               	movlb	0	; () banked
  2913  001536  EE20 F020          	lfsr	2,32
  2914  00153A  0100               	movlb	0	; () banked
  2915  00153C  51D2               	movf	_ic_ptr& (0+255),w,b
  2916  00153E  26D9               	addwf	fsr2l,f,c
  2917  001540  0100               	movlb	0	; () banked
  2918  001542  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  2919  001544  22DA               	addwfc	fsr2h,f,c
  2920  001546  0E00               	movlw	0
  2921  001548  6EDF               	movwf	indf2,c
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;my_i2c.c: 331: ic_ptr->status = 0x5;
  2925  00154A  0100               	movlb	0	; () banked
  2926  00154C  EE20 F021          	lfsr	2,33
  2927  001550  0100               	movlb	0	; () banked
  2928  001552  51D2               	movf	_ic_ptr& (0+255),w,b
  2929  001554  26D9               	addwf	fsr2l,f,c
  2930  001556  0100               	movlb	0	; () banked
  2931  001558  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  2932  00155A  22DA               	addwfc	fsr2h,f,c
  2933  00155C  0E05               	movlw	5
  2934  00155E  6EDF               	movwf	indf2,c
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;my_i2c.c: 332: ic_ptr->error_count = 0;
  2938  001560  0100               	movlb	0	; () banked
  2939  001562  EE20 F023          	lfsr	2,35
  2940  001566  0100               	movlb	0	; () banked
  2941  001568  51D2               	movf	_ic_ptr& (0+255),w,b
  2942  00156A  26D9               	addwf	fsr2l,f,c
  2943  00156C  0100               	movlb	0	; () banked
  2944  00156E  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  2945  001570  22DA               	addwfc	fsr2h,f,c
  2946  001572  0E00               	movlw	0
  2947  001574  6EDF               	movwf	indf2,c
  2948                           
  2949                           ; BSR set to: 0
  2950  001576  0012               	return	
  2951  001578                     __end_of_init_i2c:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           postinc0	equ	0xFEE
  2960                           wreg	equ	0xFE8
  2961                           indf1	equ	0xFE7
  2962                           fsr1h	equ	0xFE2
  2963                           fsr1l	equ	0xFE1
  2964                           indf2	equ	0xFDF
  2965                           postinc2	equ	0xFDE
  2966                           postdec2	equ	0xFDD
  2967                           fsr2h	equ	0xFDA
  2968                           fsr2l	equ	0xFD9
  2969                           status	equ	0xFD8
  2970                           
  2971 ;; *************** function _i2c_configure_slave *****************
  2972 ;; Defined at:
  2973 ;;		line 338 in file "../src/my_i2c.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  addr            1    wreg     unsigned char 
  2976 ;;  ptr_thingy      2    0[BANK1 ] PTR unsigned char 
  2977 ;;		 -> main@need_sensor_data(1), 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  addr            1    2[BANK1 ] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;		None               void
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2989 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2990 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;Total ram usage:        3 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:   11
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text14
  3004  00194E                     __ptext14:
  3005                           	opt stack 0
  3006  00194E                     _i2c_configure_slave:
  3007                           	opt stack 19
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;incstack = 0
  3011                           ;i2c_configure_slave@addr stored from wreg
  3012  00194E  0101               	movlb	1	; () banked
  3013  001950  6F9A               	movwf	i2c_configure_slave@addr& (0+255),b
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;my_i2c.c: 340: need_sensor_data = ptr_thingy;
  3017  001952  0101               	movlb	1	; () banked
  3018  001954  0100               	movlb	0	; () banked
  3019  001956  C199  F0B0         	movff	i2c_configure_slave@ptr_thingy+1,_need_sensor_data+1
  3020  00195A  0101               	movlb	1	; () banked
  3021  00195C  0100               	movlb	0	; () banked
  3022  00195E  C198  F0AF         	movff	i2c_configure_slave@ptr_thingy,_need_sensor_data
  3023                           
  3024                           ;my_i2c.c: 348: TRISBbits.TRISB4 = 1;
  3025  001962  8893               	bsf	3987,4,c	;volatile
  3026                           
  3027                           ;my_i2c.c: 349: TRISBbits.TRISB5 = 1;
  3028  001964  8A93               	bsf	3987,5,c	;volatile
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;my_i2c.c: 357: SSPADD = addr;
  3032  001966  C19A  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;my_i2c.c: 359: SSPSTAT = 0x0;
  3036  00196A  0E00               	movlw	0
  3037  00196C  6EC7               	movwf	4039,c	;volatile
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;my_i2c.c: 360: SSPCON1 = 0x0;
  3041  00196E  0E00               	movlw	0
  3042  001970  6EC6               	movwf	4038,c	;volatile
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;my_i2c.c: 361: SSPCON2 = 0x0;
  3046  001972  0E00               	movlw	0
  3047  001974  6EC5               	movwf	4037,c	;volatile
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;my_i2c.c: 362: SSPCON1 |= 0x0E;
  3051  001976  0E0E               	movlw	14
  3052  001978  12C6               	iorwf	4038,f,c	;volatile
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;my_i2c.c: 363: SSPSTAT |= 0b10000000;
  3056  00197A  8EC7               	bsf	4039,7,c	;volatile
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;my_i2c.c: 378: PORTBbits.SCL1 = 1;
  3060  00197C  8881               	bsf	3969,4,c	;volatile
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;my_i2c.c: 379: PORTBbits.SDA1 = 1;
  3064  00197E  8A81               	bsf	3969,5,c	;volatile
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;my_i2c.c: 388: SSPCON2bits.SEN = 1;
  3068  001980  80C5               	bsf	4037,0,c	;volatile
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;my_i2c.c: 389: SSPCON1 |= 0b00100000;
  3072  001982  8AC6               	bsf	4038,5,c	;volatile
  3073                           
  3074                           ; BSR set to: 0
  3075  001984  0012               	return	
  3076  001986                     __end_of_i2c_configure_slave:
  3077                           	opt stack 0
  3078                           tblptru	equ	0xFF8
  3079                           tblptrh	equ	0xFF7
  3080                           tblptrl	equ	0xFF6
  3081                           tablat	equ	0xFF5
  3082                           prodh	equ	0xFF4
  3083                           prodl	equ	0xFF3
  3084                           postinc0	equ	0xFEE
  3085                           wreg	equ	0xFE8
  3086                           indf1	equ	0xFE7
  3087                           fsr1h	equ	0xFE2
  3088                           fsr1l	equ	0xFE1
  3089                           indf2	equ	0xFDF
  3090                           postinc2	equ	0xFDE
  3091                           postdec2	equ	0xFDD
  3092                           fsr2h	equ	0xFDA
  3093                           fsr2l	equ	0xFD9
  3094                           status	equ	0xFD8
  3095                           
  3096 ;; *************** function _enable_interrupts *****************
  3097 ;; Defined at:
  3098 ;;		line 14 in file "../src/interrupts.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;		None               void
  3105 ;; Registers used:
  3106 ;;		None
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3116 ;;Total ram usage:        0 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:   11
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text15
  3127  001C32                     __ptext15:
  3128                           	opt stack 0
  3129  001C32                     _enable_interrupts:
  3130                           	opt stack 19
  3131                           
  3132                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;incstack = 0
  3136  001C32  8ED0               	bsf	4048,7,c	;volatile
  3137                           
  3138                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3139  001C34  8EF2               	bsf	intcon,7,c	;volatile
  3140                           
  3141                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3142  001C36  8CF2               	bsf	intcon,6,c	;volatile
  3143  001C38  0012               	return	
  3144  001C3A                     __end_of_enable_interrupts:
  3145                           	opt stack 0
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           intcon	equ	0xFF2
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           indf1	equ	0xFE7
  3156                           fsr1h	equ	0xFE2
  3157                           fsr1l	equ	0xFE1
  3158                           indf2	equ	0xFDF
  3159                           postinc2	equ	0xFDE
  3160                           postdec2	equ	0xFDD
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           
  3165 ;; *************** function _debug_configure *****************
  3166 ;; Defined at:
  3167 ;;		line 3 in file "../src/debug.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		wreg, status,2
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:   11
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text16
  3196  001C28                     __ptext16:
  3197                           	opt stack 0
  3198  001C28                     _debug_configure:
  3199                           	opt stack 19
  3200                           
  3201                           ;debug.c: 5: TRISD = 0x00;
  3202                           
  3203                           ;incstack = 0
  3204  001C28  0E00               	movlw	0
  3205  001C2A  6E95               	movwf	3989,c	;volatile
  3206                           
  3207                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3208  001C2C  9093               	bcf	3987,0,c	;volatile
  3209                           
  3210                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3211  001C2E  9293               	bcf	3987,1,c	;volatile
  3212  001C30  0012               	return	
  3213  001C32                     __end_of_debug_configure:
  3214                           	opt stack 0
  3215                           tblptru	equ	0xFF8
  3216                           tblptrh	equ	0xFF7
  3217                           tblptrl	equ	0xFF6
  3218                           tablat	equ	0xFF5
  3219                           prodh	equ	0xFF4
  3220                           prodl	equ	0xFF3
  3221                           intcon	equ	0xFF2
  3222                           postinc0	equ	0xFEE
  3223                           wreg	equ	0xFE8
  3224                           indf1	equ	0xFE7
  3225                           fsr1h	equ	0xFE2
  3226                           fsr1l	equ	0xFE1
  3227                           indf2	equ	0xFDF
  3228                           postinc2	equ	0xFDE
  3229                           postdec2	equ	0xFDD
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8
  3233                           
  3234 ;; *************** function _blip3 *****************
  3235 ;; Defined at:
  3236 ;;		line 32 in file "../src/debug.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;		None               void
  3243 ;; Registers used:
  3244 ;;		None
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:   11
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text17
  3265  001C3A                     __ptext17:
  3266                           	opt stack 0
  3267  001C3A                     _blip3:
  3268                           	opt stack 19
  3269                           
  3270                           ;debug.c: 34: LATDbits.LD6 = 0;
  3271                           
  3272                           ;incstack = 0
  3273  001C3A  9C8C               	bcf	3980,6,c	;volatile
  3274                           
  3275                           ;debug.c: 35: LATDbits.LD6 = 1;
  3276  001C3C  8C8C               	bsf	3980,6,c	;volatile
  3277                           
  3278                           ;debug.c: 36: LATDbits.LD6 = 0;
  3279  001C3E  9C8C               	bcf	3980,6,c	;volatile
  3280  001C40  0012               	return	
  3281  001C42                     __end_of_blip3:
  3282                           	opt stack 0
  3283                           tblptru	equ	0xFF8
  3284                           tblptrh	equ	0xFF7
  3285                           tblptrl	equ	0xFF6
  3286                           tablat	equ	0xFF5
  3287                           prodh	equ	0xFF4
  3288                           prodl	equ	0xFF3
  3289                           intcon	equ	0xFF2
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           indf1	equ	0xFE7
  3293                           fsr1h	equ	0xFE2
  3294                           fsr1l	equ	0xFE1
  3295                           indf2	equ	0xFDF
  3296                           postinc2	equ	0xFDE
  3297                           postdec2	equ	0xFDD
  3298                           fsr2h	equ	0xFDA
  3299                           fsr2l	equ	0xFD9
  3300                           status	equ	0xFD8
  3301                           
  3302 ;; *************** function _blip2 *****************
  3303 ;; Defined at:
  3304 ;;		line 25 in file "../src/debug.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;		None
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;		None               void
  3311 ;; Registers used:
  3312 ;;		None
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3322 ;;Total ram usage:        0 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:   11
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_main
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text18
  3333  001C42                     __ptext18:
  3334                           	opt stack 0
  3335  001C42                     _blip2:
  3336                           	opt stack 19
  3337                           
  3338                           ;debug.c: 27: LATDbits.LD5 = 0;
  3339                           
  3340                           ;incstack = 0
  3341  001C42  9A8C               	bcf	3980,5,c	;volatile
  3342                           
  3343                           ;debug.c: 28: LATDbits.LD5 = 1;
  3344  001C44  8A8C               	bsf	3980,5,c	;volatile
  3345                           
  3346                           ;debug.c: 29: LATDbits.LD5 = 0;
  3347  001C46  9A8C               	bcf	3980,5,c	;volatile
  3348  001C48  0012               	return	
  3349  001C4A                     __end_of_blip2:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           postinc0	equ	0xFEE
  3359                           wreg	equ	0xFE8
  3360                           indf1	equ	0xFE7
  3361                           fsr1h	equ	0xFE2
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _blip1 *****************
  3371 ;; Defined at:
  3372 ;;		line 18 in file "../src/debug.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;		None               void
  3379 ;; Registers used:
  3380 ;;		None
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:   11
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text19
  3401  001C4A                     __ptext19:
  3402                           	opt stack 0
  3403  001C4A                     _blip1:
  3404                           	opt stack 19
  3405                           
  3406                           ;debug.c: 20: LATDbits.LD4 = 0;
  3407                           
  3408                           ;incstack = 0
  3409  001C4A  988C               	bcf	3980,4,c	;volatile
  3410                           
  3411                           ;debug.c: 21: LATDbits.LD4 = 1;
  3412  001C4C  888C               	bsf	3980,4,c	;volatile
  3413                           
  3414                           ;debug.c: 22: LATDbits.LD4 = 0;
  3415  001C4E  988C               	bcf	3980,4,c	;volatile
  3416  001C50  0012               	return	
  3417  001C52                     __end_of_blip1:
  3418                           	opt stack 0
  3419                           tblptru	equ	0xFF8
  3420                           tblptrh	equ	0xFF7
  3421                           tblptrl	equ	0xFF6
  3422                           tablat	equ	0xFF5
  3423                           prodh	equ	0xFF4
  3424                           prodl	equ	0xFF3
  3425                           intcon	equ	0xFF2
  3426                           postinc0	equ	0xFEE
  3427                           wreg	equ	0xFE8
  3428                           indf1	equ	0xFE7
  3429                           fsr1h	equ	0xFE2
  3430                           fsr1l	equ	0xFE1
  3431                           indf2	equ	0xFDF
  3432                           postinc2	equ	0xFDE
  3433                           postdec2	equ	0xFDD
  3434                           fsr2h	equ	0xFDA
  3435                           fsr2l	equ	0xFD9
  3436                           status	equ	0xFD8
  3437                           
  3438 ;; *************** function _blip *****************
  3439 ;; Defined at:
  3440 ;;		line 11 in file "../src/debug.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;		None               void
  3447 ;; Registers used:
  3448 ;;		None
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:   11
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text20
  3469  001C52                     __ptext20:
  3470                           	opt stack 0
  3471  001C52                     _blip:
  3472                           	opt stack 19
  3473                           
  3474                           ;debug.c: 13: LATDbits.LD2 = 0;
  3475                           
  3476                           ;incstack = 0
  3477  001C52  948C               	bcf	3980,2,c	;volatile
  3478                           
  3479                           ;debug.c: 14: LATDbits.LD2 = 1;
  3480  001C54  848C               	bsf	3980,2,c	;volatile
  3481                           
  3482                           ;debug.c: 15: LATDbits.LD2 = 0;
  3483  001C56  948C               	bcf	3980,2,c	;volatile
  3484  001C58  0012               	return	
  3485  001C5A                     __end_of_blip:
  3486                           	opt stack 0
  3487                           tblptru	equ	0xFF8
  3488                           tblptrh	equ	0xFF7
  3489                           tblptrl	equ	0xFF6
  3490                           tablat	equ	0xFF5
  3491                           prodh	equ	0xFF4
  3492                           prodl	equ	0xFF3
  3493                           intcon	equ	0xFF2
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           indf1	equ	0xFE7
  3497                           fsr1h	equ	0xFE2
  3498                           fsr1l	equ	0xFE1
  3499                           indf2	equ	0xFDF
  3500                           postinc2	equ	0xFDE
  3501                           postdec2	equ	0xFDD
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function _ToMainLow_recvmsg *****************
  3507 ;; Defined at:
  3508 ;;		line 112 in file "../src/messages.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  maxlength       1    wreg     unsigned char 
  3511 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3512 ;;		 -> main@msgtype(1), 
  3513 ;;  data            2   26[BANK1 ] PTR void 
  3514 ;;		 -> main@msgbuffer(15), 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      char 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3526 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3527 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;Total ram usage:        5 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:   13
  3533 ;; This function calls:
  3534 ;;		_recv_msg
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text21
  3541  001986                     __ptext21:
  3542                           	opt stack 0
  3543  001986                     _ToMainLow_recvmsg:
  3544                           	opt stack 17
  3545                           
  3546                           ;incstack = 0
  3547                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3548  001986  0101               	movlb	1	; () banked
  3549  001988  6FB4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3550                           
  3551                           ; BSR set to: 1
  3552                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3553  00198A  0101               	movlb	1	; () banked
  3554  00198C  0E01               	movlw	high _ToMainLow_MQ
  3555  00198E  0101               	movlb	1	; () banked
  3556  001990  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3557  001992  0101               	movlb	1	; () banked
  3558  001994  0E00               	movlw	low _ToMainLow_MQ
  3559  001996  0101               	movlb	1	; () banked
  3560  001998  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3561  00199A  C1B4  F1A4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3562  00199E  0101               	movlb	1	; () banked
  3563  0019A0  C1B1  F1A6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3564  0019A4  0101               	movlb	1	; () banked
  3565  0019A6  C1B0  F1A5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3566  0019AA  0101               	movlb	1	; () banked
  3567  0019AC  C1B3  F1A8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3568  0019B0  0101               	movlb	1	; () banked
  3569  0019B2  C1B2  F1A7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3570  0019B6  EC21  F006         	call	_recv_msg	;wreg free
  3571  0019BA  0012               	return	
  3572  0019BC                     __end_of_ToMainLow_recvmsg:
  3573                           	opt stack 0
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           prodh	equ	0xFF4
  3579                           prodl	equ	0xFF3
  3580                           intcon	equ	0xFF2
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           indf1	equ	0xFE7
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           postinc2	equ	0xFDE
  3588                           postdec2	equ	0xFDD
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _ToMainHigh_recvmsg *****************
  3594 ;; Defined at:
  3595 ;;		line 135 in file "../src/messages.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  maxlength       1    wreg     unsigned char 
  3598 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3599 ;;		 -> main@msgtype(1), 
  3600 ;;  data            2   26[BANK1 ] PTR void 
  3601 ;;		 -> main@msgbuffer(15), 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      char 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3613 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3617 ;;Total ram usage:        5 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:   13
  3620 ;; This function calls:
  3621 ;;		_recv_msg
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text22
  3628  0019BC                     __ptext22:
  3629                           	opt stack 0
  3630  0019BC                     _ToMainHigh_recvmsg:
  3631                           	opt stack 17
  3632                           
  3633                           ;incstack = 0
  3634                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3635  0019BC  0101               	movlb	1	; () banked
  3636  0019BE  6FB4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3637                           
  3638                           ; BSR set to: 1
  3639                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3640  0019C0  0102               	movlb	2	; () banked
  3641  0019C2  0E02               	movlw	high _ToMainHigh_MQ
  3642  0019C4  0101               	movlb	1	; () banked
  3643  0019C6  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3644  0019C8  0102               	movlb	2	; () banked
  3645  0019CA  0E00               	movlw	low _ToMainHigh_MQ
  3646  0019CC  0101               	movlb	1	; () banked
  3647  0019CE  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3648  0019D0  C1B4  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3649  0019D4  0101               	movlb	1	; () banked
  3650  0019D6  C1B1  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3651  0019DA  0101               	movlb	1	; () banked
  3652  0019DC  C1B0  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3653  0019E0  0101               	movlb	1	; () banked
  3654  0019E2  C1B3  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3655  0019E6  0101               	movlb	1	; () banked
  3656  0019E8  C1B2  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3657  0019EC  EC21  F006         	call	_recv_msg	;wreg free
  3658  0019F0  0012               	return	
  3659  0019F2                     __end_of_ToMainHigh_recvmsg:
  3660                           	opt stack 0
  3661                           tblptru	equ	0xFF8
  3662                           tblptrh	equ	0xFF7
  3663                           tblptrl	equ	0xFF6
  3664                           tablat	equ	0xFF5
  3665                           prodh	equ	0xFF4
  3666                           prodl	equ	0xFF3
  3667                           intcon	equ	0xFF2
  3668                           postinc0	equ	0xFEE
  3669                           wreg	equ	0xFE8
  3670                           indf1	equ	0xFE7
  3671                           fsr1h	equ	0xFE2
  3672                           fsr1l	equ	0xFE1
  3673                           indf2	equ	0xFDF
  3674                           postinc2	equ	0xFDE
  3675                           postdec2	equ	0xFDD
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           
  3680 ;; *************** function _recv_msg *****************
  3681 ;; Defined at:
  3682 ;;		line 63 in file "../src/messages.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3685 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  3686 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3687 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3688 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  3689 ;;  data            2   15[BANK1 ] PTR void 
  3690 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3693 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  3694 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  3695 ;;  tlength         2   20[BANK1 ] unsigned int 
  3696 ;;  slot            1   19[BANK1 ] unsigned char 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      char 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3706 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;Total ram usage:       14 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:   12
  3713 ;; This function calls:
  3714 ;;		_memcpy
  3715 ;; This function is called by:
  3716 ;;		_ToMainLow_recvmsg
  3717 ;;		_ToMainHigh_recvmsg
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text23
  3722  000C42                     __ptext23:
  3723                           	opt stack 0
  3724  000C42                     _recv_msg:
  3725                           	opt stack 17
  3726                           
  3727                           ;messages.c: 64: unsigned char slot;
  3728                           ;messages.c: 68: msg *qmsg;
  3729                           ;messages.c: 69: size_t tlength;
  3730                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3731                           
  3732                           ;incstack = 0
  3733  000C42  0101               	movlb	1	; () banked
  3734  000C44  EE20 F089          	lfsr	2,137
  3735  000C48  0101               	movlb	1	; () banked
  3736  000C4A  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3737  000C4C  26D9               	addwf	fsr2l,f,c
  3738  000C4E  0101               	movlb	1	; () banked
  3739  000C50  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3740  000C52  22DA               	addwfc	fsr2h,f,c
  3741  000C54  50DF               	movf	indf2,w,c
  3742  000C56  0101               	movlb	1	; () banked
  3743  000C58  6FAB               	movwf	recv_msg@slot& (0+255),b
  3744                           
  3745                           ; BSR set to: 1
  3746                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3747  000C5A  0101               	movlb	1	; () banked
  3748  000C5C  51AB               	movf	recv_msg@slot& (0+255),w,b
  3749  000C5E  0D11               	mullw	17
  3750  000C60  50F3               	movf	prodl,w,c
  3751  000C62  0101               	movlb	1	; () banked
  3752  000C64  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  3753  000C66  0101               	movlb	1	; () banked
  3754  000C68  6FAE               	movwf	recv_msg@qmsg& (0+255),b
  3755  000C6A  50F4               	movf	prodh,w,c
  3756  000C6C  0101               	movlb	1	; () banked
  3757  000C6E  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3758  000C70  0101               	movlb	1	; () banked
  3759  000C72  6FAF               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3760                           
  3761                           ; BSR set to: 1
  3762                           ;messages.c: 74: if (qmsg->full == 1) {
  3763  000C74  0E01               	movlw	1
  3764  000C76  C1AE  FFD9         	movff	recv_msg@qmsg,fsr2l
  3765  000C7A  C1AF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3766  000C7E  62DF               	cpfseq	indf2,c
  3767  000C80  D06D               	goto	l3498
  3768                           
  3769                           ; BSR set to: 1
  3770                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3771  000C82  0101               	movlb	1	; () banked
  3772  000C84  EE20 F001          	lfsr	2,1
  3773  000C88  0101               	movlb	1	; () banked
  3774  000C8A  51AE               	movf	recv_msg@qmsg& (0+255),w,b
  3775  000C8C  26D9               	addwf	fsr2l,f,c
  3776  000C8E  0101               	movlb	1	; () banked
  3777  000C90  51AF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3778  000C92  22DA               	addwfc	fsr2h,f,c
  3779  000C94  50DF               	movf	indf2,w,c
  3780  000C96  0101               	movlb	1	; () banked
  3781  000C98  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  3782  000C9A  B0D8               	btfsc	status,0,c
  3783  000C9C  D002               	goto	l3482
  3784                           
  3785                           ; BSR set to: 1
  3786                           ;messages.c: 77: return (-3);
  3787  000C9E  0EFD               	movlw	253
  3788  000CA0  0012               	return	
  3789  000CA2                     l3482:
  3790                           
  3791                           ; BSR set to: 1
  3792                           ;messages.c: 78: }
  3793                           ;messages.c: 80: tlength = qmsg->length;
  3794  000CA2  0101               	movlb	1	; () banked
  3795  000CA4  EE20 F001          	lfsr	2,1
  3796  000CA8  0101               	movlb	1	; () banked
  3797  000CAA  51AE               	movf	recv_msg@qmsg& (0+255),w,b
  3798  000CAC  26D9               	addwf	fsr2l,f,c
  3799  000CAE  0101               	movlb	1	; () banked
  3800  000CB0  51AF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3801  000CB2  22DA               	addwfc	fsr2h,f,c
  3802  000CB4  50DF               	movf	indf2,w,c
  3803  000CB6  0101               	movlb	1	; () banked
  3804  000CB8  6FA9               	movwf	??_recv_msg& (0+255),b
  3805  000CBA  0101               	movlb	1	; () banked
  3806  000CBC  51A9               	movf	??_recv_msg& (0+255),w,b
  3807  000CBE  0101               	movlb	1	; () banked
  3808  000CC0  6FAC               	movwf	recv_msg@tlength& (0+255),b
  3809  000CC2  0101               	movlb	1	; () banked
  3810  000CC4  6BAD               	clrf	(recv_msg@tlength+1)& (0+255),b
  3811                           
  3812                           ; BSR set to: 1
  3813                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3814  000CC6  0101               	movlb	1	; () banked
  3815  000CC8  C1A8  F199         	movff	recv_msg@data+1,memcpy@d1+1
  3816  000CCC  0101               	movlb	1	; () banked
  3817  000CCE  C1A7  F198         	movff	recv_msg@data,memcpy@d1
  3818  000CD2  0E03               	movlw	3
  3819  000CD4  0101               	movlb	1	; () banked
  3820  000CD6  25AE               	addwf	recv_msg@qmsg& (0+255),w,b
  3821  000CD8  0101               	movlb	1	; () banked
  3822  000CDA  6FA9               	movwf	??_recv_msg& (0+255),b
  3823  000CDC  0E00               	movlw	0
  3824  000CDE  0101               	movlb	1	; () banked
  3825  000CE0  21AF               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3826  000CE2  0101               	movlb	1	; () banked
  3827  000CE4  6FAA               	movwf	(??_recv_msg+1)& (0+255),b
  3828  000CE6  C1A9  F19A         	movff	??_recv_msg,memcpy@s1
  3829  000CEA  C1AA  F19B         	movff	??_recv_msg+1,memcpy@s1+1
  3830  000CEE  C1AC  F19C         	movff	recv_msg@tlength,memcpy@n
  3831  000CF2  C1AD  F19D         	movff	recv_msg@tlength+1,memcpy@n+1
  3832  000CF6  ECDD  F00B         	call	_memcpy	;wreg free
  3833                           
  3834                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  3835  000CFA  0101               	movlb	1	; () banked
  3836  000CFC  EE20 F089          	lfsr	2,137
  3837  000D00  0101               	movlb	1	; () banked
  3838  000D02  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3839  000D04  26D9               	addwf	fsr2l,f,c
  3840  000D06  0101               	movlb	1	; () banked
  3841  000D08  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3842  000D0A  22DA               	addwfc	fsr2h,f,c
  3843  000D0C  0101               	movlb	1	; () banked
  3844  000D0E  EE10 F089          	lfsr	1,137
  3845  000D12  0101               	movlb	1	; () banked
  3846  000D14  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3847  000D16  26E1               	addwf	fsr1l,f,c
  3848  000D18  0101               	movlb	1	; () banked
  3849  000D1A  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3850  000D1C  22E2               	addwfc	fsr1h,f,c
  3851  000D1E  50E7               	movf	indf1,w,c
  3852  000D20  0101               	movlb	1	; () banked
  3853  000D22  6FA9               	movwf	??_recv_msg& (0+255),b
  3854  000D24  0101               	movlb	1	; () banked
  3855  000D26  29A9               	incf	??_recv_msg& (0+255),w,b
  3856  000D28  0B07               	andlw	7
  3857  000D2A  6EDF               	movwf	indf2,c
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3861  000D2C  0101               	movlb	1	; () banked
  3862  000D2E  EE20 F002          	lfsr	2,2
  3863  000D32  0101               	movlb	1	; () banked
  3864  000D34  51AE               	movf	recv_msg@qmsg& (0+255),w,b
  3865  000D36  26D9               	addwf	fsr2l,f,c
  3866  000D38  0101               	movlb	1	; () banked
  3867  000D3A  51AF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3868  000D3C  22DA               	addwfc	fsr2h,f,c
  3869  000D3E  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  3870  000D42  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3871  000D46  CFDF FFE7          	movff	indf2,indf1
  3872                           
  3873                           ; BSR set to: 1
  3874                           ;messages.c: 91: qmsg->full = 0;
  3875  000D4A  C1AE  FFD9         	movff	recv_msg@qmsg,fsr2l
  3876  000D4E  C1AF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3877  000D52  0E00               	movlw	0
  3878  000D54  6EDF               	movwf	indf2,c
  3879                           
  3880                           ; BSR set to: 1
  3881                           ;messages.c: 92: return (tlength);
  3882  000D56  0101               	movlb	1	; () banked
  3883  000D58  51AC               	movf	recv_msg@tlength& (0+255),w,b
  3884  000D5A  0012               	return	
  3885  000D5C                     l3498:
  3886                           
  3887                           ; BSR set to: 1
  3888                           ;messages.c: 94: return (-4);
  3889  000D5C  0EFC               	movlw	252
  3890  000D5E  0012               	return	
  3891  000D60                     __end_of_recv_msg:
  3892                           	opt stack 0
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           intcon	equ	0xFF2
  3900                           postinc0	equ	0xFEE
  3901                           wreg	equ	0xFE8
  3902                           indf1	equ	0xFE7
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           postinc2	equ	0xFDE
  3907                           postdec2	equ	0xFDD
  3908                           fsr2h	equ	0xFDA
  3909                           fsr2l	equ	0xFD9
  3910                           status	equ	0xFD8
  3911                           
  3912 ;; *************** function _memcpy *****************
  3913 ;; Defined at:
  3914 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  d1              2    0[BANK1 ] PTR void 
  3917 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  3918 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  3919 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  3920 ;;  s1              2    2[BANK1 ] PTR const void 
  3921 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  3922 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  3923 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  3924 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  3925 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), 
  3926 ;;		 -> ToMainLow_MQ(138), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  3927 ;;  n               2    4[BANK1 ] unsigned int 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  3930 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  3931 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  3932 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  3933 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  3934 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), 
  3935 ;;		 -> ToMainLow_MQ(138), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  3936 ;;  d               2    6[BANK1 ] PTR unsigned char 
  3937 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  3938 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  3939 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  2    0[BANK1 ] PTR void 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3949 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3952 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3953 ;;Total ram usage:       10 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:   11
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_send_msg
  3960 ;;		_recv_msg
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text24
  3965  0017BA                     __ptext24:
  3966                           	opt stack 0
  3967  0017BA                     _memcpy:
  3968                           	opt stack 16
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;incstack = 0
  3972  0017BA  0101               	movlb	1	; () banked
  3973  0017BC  C19B  F1A1         	movff	memcpy@s1+1,memcpy@s+1
  3974  0017C0  0101               	movlb	1	; () banked
  3975  0017C2  C19A  F1A0         	movff	memcpy@s1,memcpy@s
  3976  0017C6  0101               	movlb	1	; () banked
  3977  0017C8  C199  F19F         	movff	memcpy@d1+1,memcpy@d+1
  3978  0017CC  0101               	movlb	1	; () banked
  3979  0017CE  C198  F19E         	movff	memcpy@d1,memcpy@d
  3980  0017D2  D010               	goto	l3304
  3981  0017D4                     l3298:
  3982                           
  3983                           ; BSR set to: 1
  3984  0017D4  C1A0  FFD9         	movff	memcpy@s,fsr2l
  3985  0017D8  C1A1  FFDA         	movff	memcpy@s+1,fsr2h
  3986  0017DC  C19E  FFE1         	movff	memcpy@d,fsr1l
  3987  0017E0  C19F  FFE2         	movff	memcpy@d+1,fsr1h
  3988  0017E4  CFDF FFE7          	movff	indf2,indf1
  3989                           
  3990                           ; BSR set to: 1
  3991  0017E8  0101               	movlb	1	; () banked
  3992  0017EA  4BA0               	infsnz	memcpy@s& (0+255),f,b
  3993  0017EC  2BA1               	incf	(memcpy@s+1)& (0+255),f,b
  3994                           
  3995                           ; BSR set to: 1
  3996  0017EE  0101               	movlb	1	; () banked
  3997  0017F0  4B9E               	infsnz	memcpy@d& (0+255),f,b
  3998  0017F2  2B9F               	incf	(memcpy@d+1)& (0+255),f,b
  3999  0017F4                     l3304:
  4000                           
  4001                           ; BSR set to: 1
  4002  0017F4  0101               	movlb	1	; () banked
  4003  0017F6  079C               	decf	memcpy@n& (0+255),f,b
  4004  0017F8  A0D8               	btfss	status,0,c
  4005  0017FA  079D               	decf	(memcpy@n+1)& (0+255),f,b
  4006  0017FC  0101               	movlb	1	; () banked
  4007  0017FE  299C               	incf	memcpy@n& (0+255),w,b
  4008  001800  B4D8               	btfsc	status,2,c
  4009  001802  299D               	incf	(memcpy@n+1)& (0+255),w,b
  4010  001804  B4D8               	btfsc	status,2,c
  4011                           
  4012                           ; BSR set to: 1
  4013                           
  4014                           ; BSR set to: 1
  4015                           ;	Return value of _memcpy is never used
  4016  001806  0012               	return	
  4017  001808  D7E5               	goto	l3298
  4018  00180A                     __end_of_memcpy:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           prodh	equ	0xFF4
  4025                           prodl	equ	0xFF3
  4026                           intcon	equ	0xFF2
  4027                           postinc0	equ	0xFEE
  4028                           wreg	equ	0xFE8
  4029                           indf1	equ	0xFE7
  4030                           fsr1h	equ	0xFE2
  4031                           fsr1l	equ	0xFE1
  4032                           indf2	equ	0xFDF
  4033                           postinc2	equ	0xFDE
  4034                           postdec2	equ	0xFDD
  4035                           fsr2h	equ	0xFDA
  4036                           fsr2l	equ	0xFD9
  4037                           status	equ	0xFD8
  4038                           
  4039 ;; *************** function _OpenTimer1 *****************
  4040 ;; Defined at:
  4041 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  config          1    wreg     unsigned char 
  4044 ;;  config1         1    0[BANK1 ] unsigned char 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  config          1    2[BANK1 ] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;		None               void
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4056 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4057 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4058 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4059 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4060 ;;Total ram usage:        3 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:   11
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_main
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text25
  4071  0018D8                     __ptext25:
  4072                           	opt stack 0
  4073  0018D8                     _OpenTimer1:
  4074                           	opt stack 19
  4075                           
  4076                           ; BSR set to: 1
  4077                           ;incstack = 0
  4078                           ;OpenTimer1@config stored from wreg
  4079  0018D8  0101               	movlb	1	; () banked
  4080  0018DA  6F9A               	movwf	OpenTimer1@config& (0+255),b
  4081                           
  4082                           ; BSR set to: 1
  4083  0018DC  0101               	movlb	1	; () banked
  4084  0018DE  5198               	movf	OpenTimer1@config1& (0+255),w,b
  4085  0018E0  0BF3               	andlw	243
  4086  0018E2  6E9A               	movwf	3994,c	;volatile
  4087  0018E4  C19A  F199         	movff	OpenTimer1@config,??_OpenTimer1
  4088  0018E8  0E7F               	movlw	127
  4089  0018EA  0101               	movlb	1	; () banked
  4090  0018EC  1799               	andwf	??_OpenTimer1& (0+255),f,b
  4091  0018EE  0101               	movlb	1	; () banked
  4092  0018F0  90D8               	bcf	status,0,c
  4093  0018F2  3599               	rlcf	??_OpenTimer1& (0+255),w,b
  4094  0018F4  6ECD               	movwf	4045,c	;volatile
  4095                           
  4096                           ; BSR set to: 1
  4097  0018F6  0E00               	movlw	0
  4098  0018F8  6ECF               	movwf	4047,c	;volatile
  4099                           
  4100                           ; BSR set to: 1
  4101  0018FA  0E00               	movlw	0
  4102  0018FC  6ECE               	movwf	4046,c	;volatile
  4103                           
  4104                           ; BSR set to: 1
  4105  0018FE  909E               	bcf	3998,0,c	;volatile
  4106                           
  4107                           ; BSR set to: 1
  4108  001900  0101               	movlb	1	; () banked
  4109  001902  AF9A               	btfss	OpenTimer1@config& (0+255),7,b
  4110  001904  D002               	goto	l572
  4111                           
  4112                           ; BSR set to: 1
  4113  001906  809D               	bsf	3997,0,c	;volatile
  4114  001908  D001               	goto	l573
  4115  00190A                     l572:
  4116                           
  4117                           ; BSR set to: 1
  4118  00190A  909D               	bcf	3997,0,c	;volatile
  4119  00190C                     l573:
  4120                           
  4121                           ; BSR set to: 1
  4122  00190C  BE9A               	btfsc	3994,7,c	;volatile
  4123                           
  4124                           ; BSR set to: 1
  4125  00190E  869A               	bsf	3994,3,c	;volatile
  4126                           
  4127                           ; BSR set to: 1
  4128  001910  80CD               	bsf	4045,0,c	;volatile
  4129                           
  4130                           ; BSR set to: 1
  4131  001912  0012               	return	
  4132  001914                     __end_of_OpenTimer1:
  4133                           	opt stack 0
  4134                           tblptru	equ	0xFF8
  4135                           tblptrh	equ	0xFF7
  4136                           tblptrl	equ	0xFF6
  4137                           tablat	equ	0xFF5
  4138                           prodh	equ	0xFF4
  4139                           prodl	equ	0xFF3
  4140                           intcon	equ	0xFF2
  4141                           postinc0	equ	0xFEE
  4142                           wreg	equ	0xFE8
  4143                           indf1	equ	0xFE7
  4144                           fsr1h	equ	0xFE2
  4145                           fsr1l	equ	0xFE1
  4146                           indf2	equ	0xFDF
  4147                           postinc2	equ	0xFDE
  4148                           postdec2	equ	0xFDD
  4149                           fsr2h	equ	0xFDA
  4150                           fsr2l	equ	0xFD9
  4151                           status	equ	0xFD8
  4152                           
  4153 ;; *************** function _OpenTimer0 *****************
  4154 ;; Defined at:
  4155 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  config          1    wreg     unsigned char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  config          1    0[BANK1 ] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4170 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4172 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;Total ram usage:        1 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:   11
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text26
  4184  001B38                     __ptext26:
  4185                           	opt stack 0
  4186  001B38                     _OpenTimer0:
  4187                           	opt stack 19
  4188                           
  4189                           ; BSR set to: 1
  4190                           ;incstack = 0
  4191                           ;OpenTimer0@config stored from wreg
  4192  001B38  0101               	movlb	1	; () banked
  4193  001B3A  6F98               	movwf	OpenTimer0@config& (0+255),b
  4194                           
  4195                           ; BSR set to: 1
  4196  001B3C  0101               	movlb	1	; () banked
  4197  001B3E  5198               	movf	OpenTimer0@config& (0+255),w,b
  4198  001B40  0B7F               	andlw	127
  4199  001B42  6ED5               	movwf	4053,c	;volatile
  4200                           
  4201                           ; BSR set to: 1
  4202  001B44  0E00               	movlw	0
  4203  001B46  6ED7               	movwf	4055,c	;volatile
  4204                           
  4205                           ; BSR set to: 1
  4206  001B48  0E00               	movlw	0
  4207  001B4A  6ED6               	movwf	4054,c	;volatile
  4208                           
  4209                           ; BSR set to: 1
  4210  001B4C  94F2               	bcf	intcon,2,c	;volatile
  4211                           
  4212                           ; BSR set to: 1
  4213  001B4E  0101               	movlb	1	; () banked
  4214  001B50  AF98               	btfss	OpenTimer0@config& (0+255),7,b
  4215  001B52  D002               	goto	l544
  4216                           
  4217                           ; BSR set to: 1
  4218  001B54  8AF2               	bsf	intcon,5,c	;volatile
  4219  001B56  D001               	goto	l545
  4220  001B58                     l544:
  4221                           
  4222                           ; BSR set to: 1
  4223  001B58  9AF2               	bcf	intcon,5,c	;volatile
  4224  001B5A                     l545:
  4225                           
  4226                           ; BSR set to: 1
  4227  001B5A  8ED5               	bsf	4053,7,c	;volatile
  4228                           
  4229                           ; BSR set to: 1
  4230  001B5C  0012               	return	
  4231  001B5E                     __end_of_OpenTimer0:
  4232                           	opt stack 0
  4233                           tblptru	equ	0xFF8
  4234                           tblptrh	equ	0xFF7
  4235                           tblptrl	equ	0xFF6
  4236                           tablat	equ	0xFF5
  4237                           prodh	equ	0xFF4
  4238                           prodl	equ	0xFF3
  4239                           intcon	equ	0xFF2
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           indf1	equ	0xFE7
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           indf2	equ	0xFDF
  4246                           postinc2	equ	0xFDE
  4247                           postdec2	equ	0xFDD
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function _InterruptHandlerLow *****************
  4253 ;; Defined at:
  4254 ;;		line 131 in file "../src/interrupts.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;		None               void
  4261 ;; Registers used:
  4262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4270 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;Total ram usage:       17 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:   10
  4275 ;; This function calls:
  4276 ;;		_timer1_int_handler
  4277 ;;		_uart_receive_interrupt_handler
  4278 ;;		_uart_transmit_interrupt_handler
  4279 ;; This function is called by:
  4280 ;;		Interrupt level 1
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	intcodelo
  4285  000018                     __pintcodelo:
  4286                           	opt stack 0
  4287  000018                     _InterruptHandlerLow:
  4288                           	opt stack 16
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;incstack = 0
  4292  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4293  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4294  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4295  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4296  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4297  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4298  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4299  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4300  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4301  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4302  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4303  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4304  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4305  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4306  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4307  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4308  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4309                           
  4310                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  4311  00005C  A09E               	btfss	3998,0,c	;volatile
  4312  00005E  D003               	goto	i1l4060
  4313                           
  4314                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  4315  000060  909E               	bcf	3998,0,c	;volatile
  4316                           
  4317                           ;interrupts.c: 139: timer1_int_handler();
  4318  000062  EC72  F00D         	call	_timer1_int_handler	;wreg free
  4319  000066                     i1l4060:
  4320                           
  4321                           ;interrupts.c: 140: }
  4322                           ;interrupts.c: 143: if (PIR1bits.RCIF) {
  4323  000066  AA9E               	btfss	3998,5,c	;volatile
  4324  000068  D003               	goto	i1l4066
  4325                           
  4326                           ;interrupts.c: 144: PIR1bits.RCIF = 0;
  4327  00006A  9A9E               	bcf	3998,5,c	;volatile
  4328                           
  4329                           ;interrupts.c: 148: uart_receive_interrupt_handler();
  4330  00006C  EC54  F005         	call	_uart_receive_interrupt_handler	;wreg free
  4331  000070                     i1l4066:
  4332                           
  4333                           ;interrupts.c: 149: }
  4334                           ;interrupts.c: 153: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4335  000070  B89E               	btfsc	3998,4,c	;volatile
  4336  000072  A89D               	btfss	3997,4,c	;volatile
  4337  000074  D002               	goto	i1l52
  4338                           
  4339                           ;interrupts.c: 154: {
  4340                           ;interrupts.c: 158: uart_transmit_interrupt_handler();
  4341  000076  ECBF  F009         	call	_uart_transmit_interrupt_handler	;wreg free
  4342  00007A                     i1l52:
  4343  00007A  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4344  00007E  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4345  000082  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4346  000086  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4347  00008A  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4348  00008E  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4349  000092  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4350  000096  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4351  00009A  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4352  00009E  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4353  0000A2  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4354  0000A6  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4355  0000AA  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4356  0000AE  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4357  0000B2  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4358  0000B6  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4359  0000BA  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4360  0000BE  0010               	retfie	
  4361  0000C0                     __end_of_InterruptHandlerLow:
  4362                           	opt stack 0
  4363                           pclatu	equ	0xFFB
  4364                           pclath	equ	0xFFA
  4365                           tblptru	equ	0xFF8
  4366                           tblptrh	equ	0xFF7
  4367                           tblptrl	equ	0xFF6
  4368                           tablat	equ	0xFF5
  4369                           prodh	equ	0xFF4
  4370                           prodl	equ	0xFF3
  4371                           intcon	equ	0xFF2
  4372                           postinc0	equ	0xFEE
  4373                           fsr0h	equ	0xFEA
  4374                           fsr0l	equ	0xFE9
  4375                           wreg	equ	0xFE8
  4376                           indf1	equ	0xFE7
  4377                           fsr1h	equ	0xFE2
  4378                           fsr1l	equ	0xFE1
  4379                           bsr	equ	0xFE0
  4380                           indf2	equ	0xFDF
  4381                           postinc2	equ	0xFDE
  4382                           postdec2	equ	0xFDD
  4383                           fsr2h	equ	0xFDA
  4384                           fsr2l	equ	0xFD9
  4385                           status	equ	0xFD8
  4386                           
  4387 ;; *************** function _uart_transmit_interrupt_handler *****************
  4388 ;; Defined at:
  4389 ;;		line 193 in file "../src/my_uart.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  message_stat    1   44[COMRAM] char 
  4394 ;;  data           14   29[COMRAM] unsigned char [14]
  4395 ;;  msgtype         1   43[COMRAM] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4406 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4409 ;;Total ram usage:       16 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    9
  4412 ;; This function calls:
  4413 ;;		_FromMainLow_recvmsg
  4414 ;;		_uart_frame_message
  4415 ;; This function is called by:
  4416 ;;		_InterruptHandlerLow
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text28
  4421  00137E                     __ptext28:
  4422                           	opt stack 0
  4423  00137E                     _uart_transmit_interrupt_handler:
  4424                           	opt stack 16
  4425                           
  4426                           ;my_uart.c: 196: static unsigned char done = 1;
  4427                           ;my_uart.c: 197: static unsigned char index = 0;
  4428                           ;my_uart.c: 199: unsigned char data[14];
  4429                           ;my_uart.c: 200: static unsigned char message[(14 + 2 + 2)];
  4430                           ;my_uart.c: 202: unsigned char msgtype = 31;
  4431                           
  4432                           ;incstack = 0
  4433  00137E  0E1F               	movlw	31
  4434  001380  6E2C               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4435                           
  4436                           ;my_uart.c: 204: if( done )
  4437  001382  505D               	movf	uart_transmit_interrupt_handler@done,w,c
  4438  001384  B4D8               	btfsc	status,2,c
  4439  001386  D03A               	goto	i1l3906
  4440                           
  4441                           ;my_uart.c: 205: {
  4442                           ;my_uart.c: 206: signed char message_status = FromMainLow_recvmsg(14,&msgtype, (void*)da
      +                          ta );
  4443  001388  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4444  00138A  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4445  00138C  0E2C               	movlw	low uart_transmit_interrupt_handler@msgtype
  4446  00138E  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4447  001390  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4448  001392  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4449  001394  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4450  001396  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4451  001398  0E0E               	movlw	14
  4452  00139A  EC88  F00D         	call	_FromMainLow_recvmsg
  4453  00139E  6E2D               	movwf	uart_transmit_interrupt_handler@message_status,c
  4454                           
  4455                           ;my_uart.c: 208: if( message_status == -4)
  4456  0013A0  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4457  0013A2  0AFC               	xorlw	252
  4458  0013A4  A4D8               	btfss	status,2,c
  4459  0013A6  D002               	goto	i1l3878
  4460                           
  4461                           ;my_uart.c: 209: {
  4462                           ;my_uart.c: 211: PIE1bits.TX1IE = 0;
  4463  0013A8  989D               	bcf	3997,4,c	;volatile
  4464                           
  4465                           ;my_uart.c: 212: }
  4466  0013AA  0012               	return	
  4467  0013AC                     i1l3878:
  4468                           
  4469                           ;my_uart.c: 213: else if( message_status > 0 )
  4470  0013AC  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4471  0013AE  0A80               	xorlw	128
  4472  0013B0  0F7F               	addlw	-129
  4473  0013B2  A0D8               	btfss	status,0,c
  4474  0013B4  0012               	return	
  4475                           
  4476                           ;my_uart.c: 214: {
  4477                           ;my_uart.c: 215: uart_frame_message( data , message );
  4478  0013B6  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4479  0013B8  6E02               	movwf	uart_frame_message@inner+1,c
  4480  0013BA  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4481  0013BC  6E01               	movwf	uart_frame_message@inner,c
  4482  0013BE  0100               	movlb	0	; () banked
  4483  0013C0  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4484  0013C2  6E04               	movwf	uart_frame_message@outer+1,c
  4485  0013C4  0100               	movlb	0	; () banked
  4486  0013C6  0EB2               	movlw	low uart_transmit_interrupt_handler@message
  4487  0013C8  6E03               	movwf	uart_frame_message@outer,c
  4488  0013CA  EC2B  F008         	call	_uart_frame_message	;wreg free
  4489                           
  4490                           ;my_uart.c: 216: index = 0;
  4491  0013CE  0E00               	movlw	0
  4492  0013D0  6E4E               	movwf	uart_transmit_interrupt_handler@index,c
  4493                           
  4494                           ;my_uart.c: 217: done = 0;
  4495  0013D2  0E00               	movlw	0
  4496  0013D4  6E5D               	movwf	uart_transmit_interrupt_handler@done,c
  4497                           
  4498                           ;my_uart.c: 219: TXREG1 = message[index];
  4499  0013D6  504E               	movf	uart_transmit_interrupt_handler@index,w,c
  4500  0013D8  0D01               	mullw	1
  4501  0013DA  0100               	movlb	0	; () banked
  4502  0013DC  0EB2               	movlw	low uart_transmit_interrupt_handler@message
  4503  0013DE  24F3               	addwf	prodl,w,c
  4504  0013E0  6ED9               	movwf	fsr2l,c
  4505  0013E2  0100               	movlb	0	; () banked
  4506  0013E4  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4507  0013E6  20F4               	addwfc	prodh,w,c
  4508  0013E8  6EDA               	movwf	fsr2h,c
  4509  0013EA  50DF               	movf	indf2,w,c
  4510  0013EC  6EAE               	movwf	4014,c	;volatile
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;my_uart.c: 220: index++;
  4514  0013EE  2A4E               	incf	uart_transmit_interrupt_handler@index,f,c
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;my_uart.c: 221: if( index >= (14 + 2 + 2) )
  4518  0013F0  0E11               	movlw	17
  4519  0013F2  644E               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4520  0013F4  0012               	return	
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;my_uart.c: 222: {
  4524                           ;my_uart.c: 223: done = 1;
  4525  0013F6  0E01               	movlw	1
  4526  0013F8  6E5D               	movwf	uart_transmit_interrupt_handler@done,c
  4527  0013FA  0012               	return	
  4528  0013FC                     i1l3906:
  4529                           
  4530                           ;my_uart.c: 240: else
  4531                           ;my_uart.c: 241: {
  4532                           ;my_uart.c: 243: TXREG1 = message[index];
  4533  0013FC  504E               	movf	uart_transmit_interrupt_handler@index,w,c
  4534  0013FE  0D01               	mullw	1
  4535  001400  0100               	movlb	0	; () banked
  4536  001402  0EB2               	movlw	low uart_transmit_interrupt_handler@message
  4537  001404  24F3               	addwf	prodl,w,c
  4538  001406  6ED9               	movwf	fsr2l,c
  4539  001408  0100               	movlb	0	; () banked
  4540  00140A  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4541  00140C  20F4               	addwfc	prodh,w,c
  4542  00140E  6EDA               	movwf	fsr2h,c
  4543  001410  50DF               	movf	indf2,w,c
  4544  001412  6EAE               	movwf	4014,c	;volatile
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;my_uart.c: 244: index++;
  4548  001414  2A4E               	incf	uart_transmit_interrupt_handler@index,f,c
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;my_uart.c: 245: if( index >= (14 + 2 + 2) )
  4552  001416  0E11               	movlw	17
  4553  001418  644E               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4554  00141A  0012               	return	
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;my_uart.c: 246: {
  4558                           ;my_uart.c: 247: done = 1;
  4559  00141C  0E01               	movlw	1
  4560  00141E  6E5D               	movwf	uart_transmit_interrupt_handler@done,c
  4561  001420  0012               	return	
  4562  001422                     __end_of_uart_transmit_interrupt_handler:
  4563                           	opt stack 0
  4564                           pclatu	equ	0xFFB
  4565                           pclath	equ	0xFFA
  4566                           tblptru	equ	0xFF8
  4567                           tblptrh	equ	0xFF7
  4568                           tblptrl	equ	0xFF6
  4569                           tablat	equ	0xFF5
  4570                           prodh	equ	0xFF4
  4571                           prodl	equ	0xFF3
  4572                           intcon	equ	0xFF2
  4573                           postinc0	equ	0xFEE
  4574                           fsr0h	equ	0xFEA
  4575                           fsr0l	equ	0xFE9
  4576                           wreg	equ	0xFE8
  4577                           indf1	equ	0xFE7
  4578                           fsr1h	equ	0xFE2
  4579                           fsr1l	equ	0xFE1
  4580                           bsr	equ	0xFE0
  4581                           indf2	equ	0xFDF
  4582                           postinc2	equ	0xFDE
  4583                           postdec2	equ	0xFDD
  4584                           fsr2h	equ	0xFDA
  4585                           fsr2l	equ	0xFD9
  4586                           status	equ	0xFD8
  4587                           
  4588 ;; *************** function _uart_frame_message *****************
  4589 ;; Defined at:
  4590 ;;		line 361 in file "../src/my_uart.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  inner           2    0[COMRAM] PTR unsigned char 
  4593 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  4594 ;;  outer           2    2[COMRAM] PTR unsigned char 
  4595 ;;		 -> uart_transmit_interrupt_handler@message(18), 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  i               1    7[COMRAM] unsigned char 
  4598 ;;  checksum        1    6[COMRAM] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;		None               void
  4601 ;; Registers used:
  4602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4608 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;Total ram usage:        8 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    6
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_uart_transmit_interrupt_handler
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text29
  4623  001056                     __ptext29:
  4624                           	opt stack 0
  4625  001056                     _uart_frame_message:
  4626                           	opt stack 18
  4627                           
  4628                           ;my_uart.c: 363: static unsigned char sent_counter = 0;
  4629                           ;my_uart.c: 365: outer[0] = 0xff;
  4630                           
  4631                           ;incstack = 0
  4632  001056  C003  FFD9         	movff	uart_frame_message@outer,fsr2l
  4633  00105A  C004  FFDA         	movff	uart_frame_message@outer+1,fsr2h
  4634  00105E  0EFF               	movlw	255
  4635  001060  6EDF               	movwf	indf2,c
  4636                           
  4637                           ;my_uart.c: 366: outer[1] = sent_counter++;
  4638  001062  EE20 F001          	lfsr	2,1
  4639  001066  5003               	movf	uart_frame_message@outer,w,c
  4640  001068  26D9               	addwf	fsr2l,f,c
  4641  00106A  5004               	movf	uart_frame_message@outer+1,w,c
  4642  00106C  22DA               	addwfc	fsr2h,f,c
  4643  00106E  C048  FFDF         	movff	uart_frame_message@sent_counter,indf2
  4644  001072  2A48               	incf	uart_frame_message@sent_counter,f,c
  4645                           
  4646                           ;my_uart.c: 367: outer[(14 + 2 + 2)-1] = 0xfe;
  4647  001074  EE20 F011          	lfsr	2,17
  4648  001078  5003               	movf	uart_frame_message@outer,w,c
  4649  00107A  26D9               	addwf	fsr2l,f,c
  4650  00107C  5004               	movf	uart_frame_message@outer+1,w,c
  4651  00107E  22DA               	addwfc	fsr2h,f,c
  4652  001080  0EFE               	movlw	254
  4653  001082  6EDF               	movwf	indf2,c
  4654                           
  4655                           ;my_uart.c: 369: unsigned char checksum = 0;
  4656  001084  0E00               	movlw	0
  4657  001086  6E07               	movwf	uart_frame_message@checksum,c
  4658                           
  4659                           ;my_uart.c: 370: unsigned char i;
  4660                           ;my_uart.c: 371: for(i=0;i<14;i++)
  4661  001088  0E00               	movlw	0
  4662  00108A  6E08               	movwf	uart_frame_message@i,c
  4663  00108C  D049               	goto	L2
  4664  00108E                     i1l2550:
  4665                           
  4666                           ;my_uart.c: 372: {
  4667                           ;my_uart.c: 373: if( inner[i] == 0xff || inner[i] == 0xfe )
  4668  00108E  5008               	movf	uart_frame_message@i,w,c
  4669  001090  0D01               	mullw	1
  4670  001092  50F3               	movf	prodl,w,c
  4671  001094  2401               	addwf	uart_frame_message@inner,w,c
  4672  001096  6ED9               	movwf	fsr2l,c
  4673  001098  50F4               	movf	prodh,w,c
  4674  00109A  2002               	addwfc	uart_frame_message@inner+1,w,c
  4675  00109C  6EDA               	movwf	fsr2h,c
  4676  00109E  50DF               	movf	indf2,w,c
  4677  0010A0  0AFF               	xorlw	255
  4678  0010A2  B4D8               	btfsc	status,2,c
  4679  0010A4  D00B               	goto	i1l2554
  4680  0010A6  5008               	movf	uart_frame_message@i,w,c
  4681  0010A8  0D01               	mullw	1
  4682  0010AA  50F3               	movf	prodl,w,c
  4683  0010AC  2401               	addwf	uart_frame_message@inner,w,c
  4684  0010AE  6ED9               	movwf	fsr2l,c
  4685  0010B0  50F4               	movf	prodh,w,c
  4686  0010B2  2002               	addwfc	uart_frame_message@inner+1,w,c
  4687  0010B4  6EDA               	movwf	fsr2h,c
  4688  0010B6  0EFE               	movlw	254
  4689  0010B8  62DF               	cpfseq	indf2,c
  4690  0010BA  D010               	goto	i1l2556
  4691  0010BC                     i1l2554:
  4692                           
  4693                           ;my_uart.c: 374: {
  4694                           ;my_uart.c: 375: outer[i+2] = 0xfd;
  4695  0010BC  5008               	movf	uart_frame_message@i,w,c
  4696  0010BE  6E05               	movwf	??_uart_frame_message& (0+255),c
  4697  0010C0  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  4698  0010C2  0E02               	movlw	2
  4699  0010C4  2605               	addwf	??_uart_frame_message,f,c
  4700  0010C6  0E00               	movlw	0
  4701  0010C8  2206               	addwfc	??_uart_frame_message+1,f,c
  4702  0010CA  5005               	movf	??_uart_frame_message,w,c
  4703  0010CC  2403               	addwf	uart_frame_message@outer,w,c
  4704  0010CE  6ED9               	movwf	fsr2l,c
  4705  0010D0  5006               	movf	??_uart_frame_message+1,w,c
  4706  0010D2  2004               	addwfc	uart_frame_message@outer+1,w,c
  4707  0010D4  6EDA               	movwf	fsr2h,c
  4708  0010D6  0EFD               	movlw	253
  4709  0010D8  6EDF               	movwf	indf2,c
  4710                           
  4711                           ;my_uart.c: 376: }
  4712  0010DA  D017               	goto	i1l2558
  4713  0010DC                     i1l2556:
  4714                           
  4715                           ;my_uart.c: 377: else
  4716                           ;my_uart.c: 378: {
  4717                           ;my_uart.c: 379: outer[i+2] = inner[i];
  4718  0010DC  5008               	movf	uart_frame_message@i,w,c
  4719  0010DE  0D01               	mullw	1
  4720  0010E0  50F3               	movf	prodl,w,c
  4721  0010E2  2401               	addwf	uart_frame_message@inner,w,c
  4722  0010E4  6ED9               	movwf	fsr2l,c
  4723  0010E6  50F4               	movf	prodh,w,c
  4724  0010E8  2002               	addwfc	uart_frame_message@inner+1,w,c
  4725  0010EA  6EDA               	movwf	fsr2h,c
  4726  0010EC  5008               	movf	uart_frame_message@i,w,c
  4727  0010EE  6E05               	movwf	??_uart_frame_message& (0+255),c
  4728  0010F0  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  4729  0010F2  0E02               	movlw	2
  4730  0010F4  2605               	addwf	??_uart_frame_message,f,c
  4731  0010F6  0E00               	movlw	0
  4732  0010F8  2206               	addwfc	??_uart_frame_message+1,f,c
  4733  0010FA  5005               	movf	??_uart_frame_message,w,c
  4734  0010FC  2403               	addwf	uart_frame_message@outer,w,c
  4735  0010FE  6EE1               	movwf	fsr1l,c
  4736  001100  5006               	movf	??_uart_frame_message+1,w,c
  4737  001102  2004               	addwfc	uart_frame_message@outer+1,w,c
  4738  001104  6EE2               	movwf	fsr1h,c
  4739  001106  CFDF FFE7          	movff	indf2,indf1
  4740  00110A                     i1l2558:
  4741                           
  4742                           ;my_uart.c: 380: }
  4743                           ;my_uart.c: 381: checksum ^= inner[i];
  4744  00110A  5008               	movf	uart_frame_message@i,w,c
  4745  00110C  0D01               	mullw	1
  4746  00110E  50F3               	movf	prodl,w,c
  4747  001110  2401               	addwf	uart_frame_message@inner,w,c
  4748  001112  6ED9               	movwf	fsr2l,c
  4749  001114  50F4               	movf	prodh,w,c
  4750  001116  2002               	addwfc	uart_frame_message@inner+1,w,c
  4751  001118  6EDA               	movwf	fsr2h,c
  4752  00111A  50DF               	movf	indf2,w,c
  4753  00111C  1A07               	xorwf	uart_frame_message@checksum,f,c
  4754  00111E  2A08               	incf	uart_frame_message@i,f,c
  4755  001120                     L2:
  4756  001120  0E0D               	movlw	13
  4757  001122  6408               	cpfsgt	uart_frame_message@i,c
  4758  001124  D7B4               	goto	i1l2550
  4759                           
  4760                           ;my_uart.c: 382: }
  4761                           ;my_uart.c: 383: outer[(14 + 2 + 2)-2] = checksum;
  4762  001126  EE20 F010          	lfsr	2,16
  4763  00112A  5003               	movf	uart_frame_message@outer,w,c
  4764  00112C  26D9               	addwf	fsr2l,f,c
  4765  00112E  5004               	movf	uart_frame_message@outer+1,w,c
  4766  001130  22DA               	addwfc	fsr2h,f,c
  4767  001132  C007  FFDF         	movff	uart_frame_message@checksum,indf2
  4768  001136  0012               	return	
  4769  001138                     __end_of_uart_frame_message:
  4770                           	opt stack 0
  4771                           pclatu	equ	0xFFB
  4772                           pclath	equ	0xFFA
  4773                           tblptru	equ	0xFF8
  4774                           tblptrh	equ	0xFF7
  4775                           tblptrl	equ	0xFF6
  4776                           tablat	equ	0xFF5
  4777                           prodh	equ	0xFF4
  4778                           prodl	equ	0xFF3
  4779                           intcon	equ	0xFF2
  4780                           postinc0	equ	0xFEE
  4781                           fsr0h	equ	0xFEA
  4782                           fsr0l	equ	0xFE9
  4783                           wreg	equ	0xFE8
  4784                           indf1	equ	0xFE7
  4785                           fsr1h	equ	0xFE2
  4786                           fsr1l	equ	0xFE1
  4787                           bsr	equ	0xFE0
  4788                           indf2	equ	0xFDF
  4789                           postinc2	equ	0xFDE
  4790                           postdec2	equ	0xFDD
  4791                           fsr2h	equ	0xFDA
  4792                           fsr2l	equ	0xFD9
  4793                           status	equ	0xFD8
  4794                           
  4795 ;; *************** function _FromMainLow_recvmsg *****************
  4796 ;; Defined at:
  4797 ;;		line 159 in file "../src/messages.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  maxlength       1    wreg     unsigned char 
  4800 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  4801 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  4802 ;;  data            2   26[COMRAM] PTR void 
  4803 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  maxlength       1   28[COMRAM] unsigned char 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      char 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4818 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4819 ;;Total ram usage:        5 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    8
  4822 ;; This function calls:
  4823 ;;		i1_recv_msg
  4824 ;; This function is called by:
  4825 ;;		_uart_transmit_interrupt_handler
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text30
  4830  001B10                     __ptext30:
  4831                           	opt stack 0
  4832  001B10                     _FromMainLow_recvmsg:
  4833                           	opt stack 16
  4834                           
  4835                           ;incstack = 0
  4836                           ;FromMainLow_recvmsg@maxlength stored from wreg
  4837  001B10  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  4838                           
  4839                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  4840  001B12  0103               	movlb	3	; () banked
  4841  001B14  0E03               	movlw	high _FromMainLow_MQ
  4842  001B16  6E0C               	movwf	i1recv_msg@qptr+1,c
  4843  001B18  0103               	movlb	3	; () banked
  4844  001B1A  0E00               	movlw	low _FromMainLow_MQ
  4845  001B1C  6E0B               	movwf	i1recv_msg@qptr,c
  4846  001B1E  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  4847  001B22  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  4848  001B26  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  4849  001B2A  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  4850  001B2E  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  4851  001B32  EC9C  F008         	call	i1_recv_msg	;wreg free
  4852  001B36  0012               	return	
  4853  001B38                     __end_of_FromMainLow_recvmsg:
  4854                           	opt stack 0
  4855                           pclatu	equ	0xFFB
  4856                           pclath	equ	0xFFA
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           prodh	equ	0xFF4
  4862                           prodl	equ	0xFF3
  4863                           intcon	equ	0xFF2
  4864                           postinc0	equ	0xFEE
  4865                           fsr0h	equ	0xFEA
  4866                           fsr0l	equ	0xFE9
  4867                           wreg	equ	0xFE8
  4868                           indf1	equ	0xFE7
  4869                           fsr1h	equ	0xFE2
  4870                           fsr1l	equ	0xFE1
  4871                           bsr	equ	0xFE0
  4872                           indf2	equ	0xFDF
  4873                           postinc2	equ	0xFDE
  4874                           postdec2	equ	0xFDD
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function i1_recv_msg *****************
  4880 ;; Defined at:
  4881 ;;		line 63 in file "../src/messages.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4884 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  4885 ;;  maxlength       1   12[COMRAM] unsigned char 
  4886 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  4887 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  4888 ;;  data            2   15[COMRAM] PTR void 
  4889 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  4892 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4893 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  4894 ;;  recv_msg        2   20[COMRAM] unsigned int 
  4895 ;;  recv_msg        1   19[COMRAM] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      char 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4905 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4906 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;Total ram usage:       14 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    7
  4912 ;; This function calls:
  4913 ;;		i1_memcpy
  4914 ;; This function is called by:
  4915 ;;		_FromMainLow_recvmsg
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text31
  4920  001138                     __ptext31:
  4921                           	opt stack 0
  4922  001138                     i1_recv_msg:
  4923                           	opt stack 16
  4924                           
  4925                           ;messages.c: 64: unsigned char slot;
  4926                           ;messages.c: 68: msg *qmsg;
  4927                           ;messages.c: 69: size_t tlength;
  4928                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4929                           
  4930                           ;incstack = 0
  4931  001138  EE20 F089          	lfsr	2,137
  4932  00113C  500B               	movf	i1recv_msg@qptr,w,c
  4933  00113E  26D9               	addwf	fsr2l,f,c
  4934  001140  500C               	movf	i1recv_msg@qptr+1,w,c
  4935  001142  22DA               	addwfc	fsr2h,f,c
  4936  001144  50DF               	movf	indf2,w,c
  4937  001146  6E14               	movwf	i1recv_msg@slot,c
  4938                           
  4939                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4940  001148  5014               	movf	i1recv_msg@slot,w,c
  4941  00114A  0D11               	mullw	17
  4942  00114C  50F3               	movf	prodl,w,c
  4943  00114E  240B               	addwf	i1recv_msg@qptr,w,c
  4944  001150  6E17               	movwf	i1recv_msg@qmsg,c
  4945  001152  50F4               	movf	prodh,w,c
  4946  001154  200C               	addwfc	i1recv_msg@qptr+1,w,c
  4947  001156  6E18               	movwf	i1recv_msg@qmsg+1,c
  4948                           
  4949                           ;messages.c: 74: if (qmsg->full == 1) {
  4950  001158  0E01               	movlw	1
  4951  00115A  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  4952  00115E  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  4953  001162  62DF               	cpfseq	indf2,c
  4954  001164  D050               	goto	i1l3452
  4955                           
  4956                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4957  001166  EE20 F001          	lfsr	2,1
  4958  00116A  5017               	movf	i1recv_msg@qmsg,w,c
  4959  00116C  26D9               	addwf	fsr2l,f,c
  4960  00116E  5018               	movf	i1recv_msg@qmsg+1,w,c
  4961  001170  22DA               	addwfc	fsr2h,f,c
  4962  001172  50DF               	movf	indf2,w,c
  4963  001174  5C0D               	subwf	i1recv_msg@maxlength,w,c
  4964  001176  B0D8               	btfsc	status,0,c
  4965  001178  D002               	goto	i1l3436
  4966                           
  4967                           ;messages.c: 77: return (-3);
  4968  00117A  0EFD               	movlw	253
  4969  00117C  0012               	return	
  4970  00117E                     i1l3436:
  4971                           
  4972                           ;messages.c: 78: }
  4973                           ;messages.c: 80: tlength = qmsg->length;
  4974  00117E  EE20 F001          	lfsr	2,1
  4975  001182  5017               	movf	i1recv_msg@qmsg,w,c
  4976  001184  26D9               	addwf	fsr2l,f,c
  4977  001186  5018               	movf	i1recv_msg@qmsg+1,w,c
  4978  001188  22DA               	addwfc	fsr2h,f,c
  4979  00118A  50DF               	movf	indf2,w,c
  4980  00118C  6E12               	movwf	??i1_recv_msg& (0+255),c
  4981  00118E  5012               	movf	??i1_recv_msg,w,c
  4982  001190  6E15               	movwf	i1recv_msg@tlength,c
  4983  001192  6A16               	clrf	i1recv_msg@tlength+1,c
  4984                           
  4985                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4986  001194  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  4987  001198  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  4988  00119C  0E03               	movlw	3
  4989  00119E  2417               	addwf	i1recv_msg@qmsg,w,c
  4990  0011A0  6E12               	movwf	??i1_recv_msg& (0+255),c
  4991  0011A2  0E00               	movlw	0
  4992  0011A4  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  4993  0011A6  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  4994  0011A8  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  4995  0011AC  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  4996  0011B0  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  4997  0011B4  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  4998  0011B8  EC2D  F00C         	call	i1_memcpy	;wreg free
  4999                           
  5000                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  5001  0011BC  EE20 F089          	lfsr	2,137
  5002  0011C0  500B               	movf	i1recv_msg@qptr,w,c
  5003  0011C2  26D9               	addwf	fsr2l,f,c
  5004  0011C4  500C               	movf	i1recv_msg@qptr+1,w,c
  5005  0011C6  22DA               	addwfc	fsr2h,f,c
  5006  0011C8  EE10 F089          	lfsr	1,137
  5007  0011CC  500B               	movf	i1recv_msg@qptr,w,c
  5008  0011CE  26E1               	addwf	fsr1l,f,c
  5009  0011D0  500C               	movf	i1recv_msg@qptr+1,w,c
  5010  0011D2  22E2               	addwfc	fsr1h,f,c
  5011  0011D4  50E7               	movf	indf1,w,c
  5012  0011D6  6E12               	movwf	??i1_recv_msg& (0+255),c
  5013  0011D8  2812               	incf	??i1_recv_msg,w,c
  5014  0011DA  0B07               	andlw	7
  5015  0011DC  6EDF               	movwf	indf2,c
  5016                           
  5017                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5018  0011DE  EE20 F002          	lfsr	2,2
  5019  0011E2  5017               	movf	i1recv_msg@qmsg,w,c
  5020  0011E4  26D9               	addwf	fsr2l,f,c
  5021  0011E6  5018               	movf	i1recv_msg@qmsg+1,w,c
  5022  0011E8  22DA               	addwfc	fsr2h,f,c
  5023  0011EA  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5024  0011EE  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5025  0011F2  CFDF FFE7          	movff	indf2,indf1
  5026                           
  5027                           ;messages.c: 91: qmsg->full = 0;
  5028  0011F6  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5029  0011FA  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5030  0011FE  0E00               	movlw	0
  5031  001200  6EDF               	movwf	indf2,c
  5032                           
  5033                           ;messages.c: 92: return (tlength);
  5034  001202  5015               	movf	i1recv_msg@tlength,w,c
  5035  001204  0012               	return	
  5036  001206                     i1l3452:
  5037                           
  5038                           ;messages.c: 94: return (-4);
  5039  001206  0EFC               	movlw	252
  5040  001208  0012               	return	
  5041  00120A                     __end_ofi1_recv_msg:
  5042                           	opt stack 0
  5043                           pclatu	equ	0xFFB
  5044                           pclath	equ	0xFFA
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           intcon	equ	0xFF2
  5052                           postinc0	equ	0xFEE
  5053                           fsr0h	equ	0xFEA
  5054                           fsr0l	equ	0xFE9
  5055                           wreg	equ	0xFE8
  5056                           indf1	equ	0xFE7
  5057                           fsr1h	equ	0xFE2
  5058                           fsr1l	equ	0xFE1
  5059                           bsr	equ	0xFE0
  5060                           indf2	equ	0xFDF
  5061                           postinc2	equ	0xFDE
  5062                           postdec2	equ	0xFDD
  5063                           fsr2h	equ	0xFDA
  5064                           fsr2l	equ	0xFD9
  5065                           status	equ	0xFD8
  5066                           
  5067 ;; *************** function _uart_receive_interrupt_handler *****************
  5068 ;; Defined at:
  5069 ;;		line 54 in file "../src/my_uart.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5074 ;;  message_coun    1   50[COMRAM] unsigned char 
  5075 ;;  status          1   42[COMRAM] unsigned char 
  5076 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5077 ;;  msg_id          1   51[COMRAM] unsigned char 
  5078 ;;  status          1   43[COMRAM] unsigned char 
  5079 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5080 ;;  bad_counter_    2   45[COMRAM] unsigned char [2]
  5081 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5082 ;;  i               2   52[COMRAM] int 
  5083 ;;  checksum        1   44[COMRAM] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;		None               void
  5086 ;; Registers used:
  5087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5094 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;Total ram usage:       28 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    9
  5100 ;; This function calls:
  5101 ;;		_ToMainLow_sendmsg
  5102 ;; This function is called by:
  5103 ;;		_InterruptHandlerLow
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text32
  5108  000AA8                     __ptext32:
  5109                           	opt stack 0
  5110  000AA8                     _uart_receive_interrupt_handler:
  5111                           	opt stack 16
  5112                           
  5113                           ;my_uart.c: 57: static unsigned char frame[(14 + 2 + 2)];
  5114                           ;my_uart.c: 58: static unsigned char index = 0;
  5115                           ;my_uart.c: 59: static unsigned char done = 0;
  5116                           ;my_uart.c: 60: static unsigned char received_counter = 0;
  5117                           ;my_uart.c: 62: static unsigned char start_byte_bad = 0;
  5118                           ;my_uart.c: 63: static unsigned char error = 0;
  5119                           ;my_uart.c: 65: if(!done)
  5120                           
  5121                           ;incstack = 0
  5122  000AA8  6649               	tstfsz	uart_receive_interrupt_handler@done,c
  5123  000AAA  D03F               	goto	i1l3812
  5124                           
  5125                           ;my_uart.c: 66: {
  5126                           ;my_uart.c: 67: frame[index] = RCREG1;
  5127  000AAC  504B               	movf	uart_receive_interrupt_handler@index,w,c
  5128  000AAE  0D01               	mullw	1
  5129  000AB0  0100               	movlb	0	; () banked
  5130  000AB2  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5131  000AB4  24F3               	addwf	prodl,w,c
  5132  000AB6  6ED9               	movwf	fsr2l,c
  5133  000AB8  0100               	movlb	0	; () banked
  5134  000ABA  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5135  000ABC  20F4               	addwfc	prodh,w,c
  5136  000ABE  6EDA               	movwf	fsr2h,c
  5137  000AC0  CFAF FFDF          	movff	4015,indf2	;volatile
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;my_uart.c: 71: }
  5141                           ;my_uart.c: 72: if( index == 0 )
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;my_uart.c: 69: {
  5145  000AC4  664B               	tstfsz	uart_receive_interrupt_handler@index,c
  5146  000AC6  D019               	goto	i1l3798
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;my_uart.c: 73: {
  5150                           ;my_uart.c: 74: if( frame[0] != 0xff )
  5151  000AC8  0100               	movlb	0	; () banked
  5152  000ACA  299D               	incf	uart_receive_interrupt_handler@frame& (0+255),w,b
  5153  000ACC  B4D8               	btfsc	status,2,c
  5154  000ACE  D012               	goto	i1l3796
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;my_uart.c: 75: {
  5158                           ;my_uart.c: 76: if( !start_byte_bad )
  5159  000AD0  664D               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5160  000AD2  D00D               	goto	i1l3790
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;my_uart.c: 77: {
  5164                           ;my_uart.c: 78: start_byte_bad = 1;
  5165  000AD4  0E01               	movlw	1
  5166  000AD6  6E4D               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;my_uart.c: 79: unsigned char bad_start_id = received_counter;
  5170  000AD8  C04C  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;my_uart.c: 80: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5174  000ADC  0E22               	movlw	34
  5175  000ADE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5176  000AE0  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5177  000AE2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5178  000AE4  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5179  000AE6  6E18               	movwf	ToMainLow_sendmsg@data,c
  5180  000AE8  0E01               	movlw	1
  5181  000AEA  ECAF  F00D         	call	_ToMainLow_sendmsg
  5182  000AEE                     i1l3790:
  5183                           
  5184                           ;my_uart.c: 82: }
  5185                           ;my_uart.c: 83: index = 0;
  5186  000AEE  0E00               	movlw	0
  5187  000AF0  6E4B               	movwf	uart_receive_interrupt_handler@index,c
  5188  000AF2  0012               	return	
  5189  000AF4                     i1l3796:
  5190                           
  5191                           ;my_uart.c: 86: else
  5192                           ;my_uart.c: 87: {
  5193                           ;my_uart.c: 88: start_byte_bad = 0;
  5194  000AF4  0E00               	movlw	0
  5195  000AF6  6E4D               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5196  000AF8  D017               	goto	i1l3810
  5197  000AFA                     i1l3798:
  5198                           
  5199                           ;my_uart.c: 91: else if( index >= (14 + 2 + 2) - 1 )
  5200  000AFA  0E10               	movlw	16
  5201  000AFC  644B               	cpfsgt	uart_receive_interrupt_handler@index,c
  5202  000AFE  D014               	goto	i1l3810
  5203                           
  5204                           ;my_uart.c: 92: {
  5205                           ;my_uart.c: 93: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5206  000B00  0100               	movlb	0	; () banked
  5207  000B02  51AE               	movf	(uart_receive_interrupt_handler@frame+17)& (0+255),w,b
  5208  000B04  0AFE               	xorlw	254
  5209  000B06  B4D8               	btfsc	status,2,c
  5210  000B08  D00F               	goto	i1l3810
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;my_uart.c: 94: {
  5214                           ;my_uart.c: 96: index = 0;
  5215  000B0A  0E00               	movlw	0
  5216  000B0C  6E4B               	movwf	uart_receive_interrupt_handler@index,c
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;my_uart.c: 99: unsigned char bad_end_id = received_counter;
  5220  000B0E  C04C  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;my_uart.c: 100: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5224  000B12  0E23               	movlw	35
  5225  000B14  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5226  000B16  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5227  000B18  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5228  000B1A  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5229  000B1C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5230  000B1E  0E01               	movlw	1
  5231  000B20  ECAF  F00D         	call	_ToMainLow_sendmsg
  5232                           
  5233                           ;my_uart.c: 101: error = 1;
  5234  000B24  0E01               	movlw	1
  5235  000B26  6E4A               	movwf	uart_receive_interrupt_handler@error,c
  5236  000B28                     i1l3810:
  5237                           
  5238                           ;my_uart.c: 102: }
  5239                           ;my_uart.c: 103: }
  5240                           ;my_uart.c: 104: index++;
  5241  000B28  2A4B               	incf	uart_receive_interrupt_handler@index,f,c
  5242  000B2A                     i1l3812:
  5243                           
  5244                           ;my_uart.c: 105: }
  5245                           ;my_uart.c: 107: if( index >= (14 + 2 + 2) )
  5246  000B2A  0E11               	movlw	17
  5247  000B2C  644B               	cpfsgt	uart_receive_interrupt_handler@index,c
  5248  000B2E  0012               	return	
  5249                           
  5250                           ;my_uart.c: 108: {
  5251                           ;my_uart.c: 109: index = 0;
  5252  000B30  0E00               	movlw	0
  5253  000B32  6E4B               	movwf	uart_receive_interrupt_handler@index,c
  5254                           
  5255                           ;my_uart.c: 111: if( received_counter != frame[1] )
  5256  000B34  0100               	movlb	0	; () banked
  5257  000B36  519E               	movf	(uart_receive_interrupt_handler@frame+1)& (0+255),w,b
  5258  000B38  184C               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5259  000B3A  B4D8               	btfsc	status,2,c
  5260  000B3C  D00F               	goto	i1l3822
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;my_uart.c: 112: {
  5264                           ;my_uart.c: 114: unsigned char bad_counter_id[2];
  5265                           ;my_uart.c: 115: bad_counter_id[0] = received_counter;
  5266  000B3E  C04C  F02E         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5267                           
  5268                           ;my_uart.c: 116: bad_counter_id[1] = frame[1];
  5269  000B42  C09E  F02F         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;my_uart.c: 117: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5273  000B46  0E21               	movlw	33
  5274  000B48  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5275  000B4A  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5276  000B4C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5277  000B4E  0E2E               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5278  000B50  6E18               	movwf	ToMainLow_sendmsg@data,c
  5279  000B52  0E02               	movlw	2
  5280  000B54  ECAF  F00D         	call	_ToMainLow_sendmsg
  5281                           
  5282                           ;my_uart.c: 118: error = 1;
  5283  000B58  0E01               	movlw	1
  5284  000B5A  6E4A               	movwf	uart_receive_interrupt_handler@error,c
  5285  000B5C                     i1l3822:
  5286                           
  5287                           ;my_uart.c: 119: }
  5288                           ;my_uart.c: 122: unsigned char gooey_uart_center[14];
  5289                           ;my_uart.c: 123: unsigned char checksum = 0;
  5290  000B5C  0E00               	movlw	0
  5291  000B5E  6E2D               	movwf	uart_receive_interrupt_handler@checksum,c
  5292                           
  5293                           ;my_uart.c: 124: int i;
  5294                           ;my_uart.c: 125: for(i = 0; i < 14; i++)
  5295  000B60  0E00               	movlw	0
  5296  000B62  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5297  000B64  0E00               	movlw	0
  5298  000B66  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5299  000B68  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5300  000B6A  0A80               	xorlw	128
  5301  000B6C  0F80               	addlw	-128
  5302  000B6E  0E0E               	movlw	14
  5303  000B70  B4D8               	btfsc	status,2,c
  5304  000B72  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5305  000B74  B0D8               	btfsc	status,0,c
  5306  000B76  D021               	goto	i1l3838
  5307                           
  5308                           ;my_uart.c: 126: {
  5309                           ;my_uart.c: 127: gooey_uart_center[i] = frame[i+2];
  5310  000B78  0E02               	movlw	2
  5311  000B7A  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5312  000B7C  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5313  000B7E  0E00               	movlw	0
  5314  000B80  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5315  000B82  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5316  000B84  0100               	movlb	0	; () banked
  5317  000B86  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5318  000B88  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5319  000B8A  6ED9               	movwf	fsr2l,c
  5320  000B8C  0100               	movlb	0	; () banked
  5321  000B8E  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5322  000B90  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5323  000B92  6EDA               	movwf	fsr2h,c
  5324  000B94  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5325  000B96  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5326  000B98  6EE1               	movwf	fsr1l,c
  5327  000B9A  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5328  000B9C  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5329  000B9E  6EE2               	movwf	fsr1h,c
  5330  000BA0  CFDF FFE7          	movff	indf2,indf1
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;my_uart.c: 128: checksum ^= gooey_uart_center[i];
  5334  000BA4  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5335  000BA6  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5336  000BA8  6ED9               	movwf	fsr2l,c
  5337  000BAA  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5338  000BAC  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5339  000BAE  6EDA               	movwf	fsr2h,c
  5340  000BB0  50DF               	movf	indf2,w,c
  5341  000BB2  1A2D               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5342                           
  5343                           ; BSR set to: 0
  5344  000BB4  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5345  000BB6  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5346  000BB8  D7D7               	goto	L3
  5347  000BBA                     i1l3838:
  5348                           
  5349                           ;my_uart.c: 129: }
  5350                           ;my_uart.c: 131: if( checksum != frame[(14 + 2 + 2) - 2] )
  5351  000BBA  0100               	movlb	0	; () banked
  5352  000BBC  51AD               	movf	(uart_receive_interrupt_handler@frame+16)& (0+255),w,b
  5353  000BBE  182D               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5354  000BC0  B4D8               	btfsc	status,2,c
  5355  000BC2  D00D               	goto	i1l3846
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;my_uart.c: 132: {
  5359                           ;my_uart.c: 134: unsigned char bad_checksum_id = received_counter;
  5360  000BC4  C04C  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;my_uart.c: 135: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5364  000BC8  0E20               	movlw	32
  5365  000BCA  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5366  000BCC  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5367  000BCE  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5368  000BD0  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5369  000BD2  6E18               	movwf	ToMainLow_sendmsg@data,c
  5370  000BD4  0E01               	movlw	1
  5371  000BD6  ECAF  F00D         	call	_ToMainLow_sendmsg
  5372                           
  5373                           ;my_uart.c: 136: error = 1;
  5374  000BDA  0E01               	movlw	1
  5375  000BDC  6E4A               	movwf	uart_receive_interrupt_handler@error,c
  5376  000BDE                     i1l3846:
  5377                           
  5378                           ;my_uart.c: 137: }
  5379                           ;my_uart.c: 142: if( !error )
  5380  000BDE  664A               	tstfsz	uart_receive_interrupt_handler@error,c
  5381  000BE0  D02C               	goto	i1l3866
  5382                           
  5383                           ;my_uart.c: 143: {
  5384                           ;my_uart.c: 145: unsigned char msg_id = gooey_uart_center[0];
  5385  000BE2  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5386                           
  5387                           ;my_uart.c: 147: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5388  000BE6  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5389  000BE8  0A11               	xorlw	17
  5390  000BEA  B4D8               	btfsc	status,2,c
  5391  000BEC  D01C               	goto	i1l419
  5392  000BEE  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5393  000BF0  0AF1               	xorlw	241
  5394  000BF2  B4D8               	btfsc	status,2,c
  5395  000BF4  D018               	goto	i1l419
  5396  000BF6  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5397  000BF8  0AF2               	xorlw	242
  5398  000BFA  B4D8               	btfsc	status,2,c
  5399  000BFC  D014               	goto	i1l419
  5400  000BFE  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5401  000C00  0AF3               	xorlw	243
  5402  000C02  B4D8               	btfsc	status,2,c
  5403  000C04  D010               	goto	i1l419
  5404  000C06  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5405  000C08  0AF4               	xorlw	244
  5406  000C0A  B4D8               	btfsc	status,2,c
  5407  000C0C  D00C               	goto	i1l419
  5408                           
  5409                           ;my_uart.c: 148: {
  5410                           ;my_uart.c: 149: unsigned char message_count = received_counter;
  5411  000C0E  C04C  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5412                           
  5413                           ;my_uart.c: 150: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5414  000C12  0E24               	movlw	36
  5415  000C14  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5416  000C16  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5417  000C18  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5418  000C1A  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5419  000C1C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5420  000C1E  0E01               	movlw	1
  5421  000C20  ECAF  F00D         	call	_ToMainLow_sendmsg
  5422  000C24  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5423  000C26                     i1l419:
  5424                           
  5425                           ;my_uart.c: 151: }
  5426                           ;my_uart.c: 154: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5427  000C26  0E1F               	movlw	31
  5428  000C28  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5429  000C2A  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5430  000C2C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5431  000C2E  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5432  000C30  6E18               	movwf	ToMainLow_sendmsg@data,c
  5433  000C32  0E0E               	movlw	14
  5434  000C34  ECAF  F00D         	call	_ToMainLow_sendmsg
  5435  000C38  6E2C               	movwf	uart_receive_interrupt_handler@status_2229,c
  5436  000C3A                     i1l3866:
  5437                           
  5438                           ;my_uart.c: 164: }
  5439                           ;my_uart.c: 165: }
  5440                           ;my_uart.c: 167: received_counter++;
  5441  000C3A  2A4C               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5442                           
  5443                           ;my_uart.c: 168: error = 0;
  5444  000C3C  0E00               	movlw	0
  5445  000C3E  6E4A               	movwf	uart_receive_interrupt_handler@error,c
  5446  000C40  0012               	return	
  5447  000C42                     __end_of_uart_receive_interrupt_handler:
  5448                           	opt stack 0
  5449                           pclatu	equ	0xFFB
  5450                           pclath	equ	0xFFA
  5451                           tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           prodh	equ	0xFF4
  5456                           prodl	equ	0xFF3
  5457                           intcon	equ	0xFF2
  5458                           postinc0	equ	0xFEE
  5459                           fsr0h	equ	0xFEA
  5460                           fsr0l	equ	0xFE9
  5461                           wreg	equ	0xFE8
  5462                           indf1	equ	0xFE7
  5463                           fsr1h	equ	0xFE2
  5464                           fsr1l	equ	0xFE1
  5465                           bsr	equ	0xFE0
  5466                           indf2	equ	0xFDF
  5467                           postinc2	equ	0xFDE
  5468                           postdec2	equ	0xFDD
  5469                           fsr2h	equ	0xFDA
  5470                           fsr2l	equ	0xFD9
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function _timer1_int_handler *****************
  5474 ;; Defined at:
  5475 ;;		line 38 in file "../src/user_interrupts.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  result          2   26[COMRAM] unsigned int 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;		None               void
  5482 ;; Registers used:
  5483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5493 ;;Total ram usage:        2 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    9
  5496 ;; This function calls:
  5497 ;;		_ReadTimer1
  5498 ;;		_ToMainLow_sendmsg
  5499 ;;		_WriteTimer1
  5500 ;; This function is called by:
  5501 ;;		_InterruptHandlerLow
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text33
  5506  001AE4                     __ptext33:
  5507                           	opt stack 0
  5508  001AE4                     _timer1_int_handler:
  5509                           	opt stack 16
  5510                           
  5511                           ;user_interrupts.c: 42: unsigned int result;
  5512                           ;user_interrupts.c: 49: result = ReadTimer1();
  5513                           
  5514                           ;incstack = 0
  5515  001AE4  ECF3  F00D         	call	_ReadTimer1	;wreg free
  5516  001AE8  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5517  001AEC  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5518                           
  5519                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5520  001AF0  0E0B               	movlw	11
  5521  001AF2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5522  001AF4  0E00               	movlw	0
  5523  001AF6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5524  001AF8  0E00               	movlw	0
  5525  001AFA  6E18               	movwf	ToMainLow_sendmsg@data,c
  5526  001AFC  0E00               	movlw	0
  5527  001AFE  ECAF  F00D         	call	_ToMainLow_sendmsg
  5528                           
  5529                           ;user_interrupts.c: 53: WriteTimer1(0);
  5530  001B02  0E00               	movlw	0
  5531  001B04  6E02               	movwf	WriteTimer1@timer1+1,c
  5532  001B06  0E00               	movlw	0
  5533  001B08  6E01               	movwf	WriteTimer1@timer1,c
  5534  001B0A  ECEA  F00D         	call	_WriteTimer1	;wreg free
  5535  001B0E  0012               	return	
  5536  001B10                     __end_of_timer1_int_handler:
  5537                           	opt stack 0
  5538                           pclatu	equ	0xFFB
  5539                           pclath	equ	0xFFA
  5540                           tblptru	equ	0xFF8
  5541                           tblptrh	equ	0xFF7
  5542                           tblptrl	equ	0xFF6
  5543                           tablat	equ	0xFF5
  5544                           prodh	equ	0xFF4
  5545                           prodl	equ	0xFF3
  5546                           intcon	equ	0xFF2
  5547                           postinc0	equ	0xFEE
  5548                           fsr0h	equ	0xFEA
  5549                           fsr0l	equ	0xFE9
  5550                           wreg	equ	0xFE8
  5551                           indf1	equ	0xFE7
  5552                           fsr1h	equ	0xFE2
  5553                           fsr1l	equ	0xFE1
  5554                           bsr	equ	0xFE0
  5555                           indf2	equ	0xFDF
  5556                           postinc2	equ	0xFDE
  5557                           postdec2	equ	0xFDD
  5558                           fsr2h	equ	0xFDA
  5559                           fsr2l	equ	0xFD9
  5560                           status	equ	0xFD8
  5561                           
  5562 ;; *************** function _WriteTimer1 *****************
  5563 ;; Defined at:
  5564 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  timer1          2    0[COMRAM] unsigned int 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  timer           2    2[COMRAM] struct Timers
  5569 ;; Return value:  Size  Location     Type
  5570 ;;		None               void
  5571 ;; Registers used:
  5572 ;;		None
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5581 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5582 ;;Total ram usage:        4 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    6
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_timer1_int_handler
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text34
  5593  001BD4                     __ptext34:
  5594                           	opt stack 0
  5595  001BD4                     _WriteTimer1:
  5596                           	opt stack 18
  5597                           
  5598                           ;incstack = 0
  5599  001BD4  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5600  001BD8  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5601  001BDC  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5602  001BE0  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5603  001BE4  0012               	return	
  5604  001BE6                     __end_of_WriteTimer1:
  5605                           	opt stack 0
  5606                           pclatu	equ	0xFFB
  5607                           pclath	equ	0xFFA
  5608                           tblptru	equ	0xFF8
  5609                           tblptrh	equ	0xFF7
  5610                           tblptrl	equ	0xFF6
  5611                           tablat	equ	0xFF5
  5612                           prodh	equ	0xFF4
  5613                           prodl	equ	0xFF3
  5614                           intcon	equ	0xFF2
  5615                           postinc0	equ	0xFEE
  5616                           fsr0h	equ	0xFEA
  5617                           fsr0l	equ	0xFE9
  5618                           wreg	equ	0xFE8
  5619                           indf1	equ	0xFE7
  5620                           fsr1h	equ	0xFE2
  5621                           fsr1l	equ	0xFE1
  5622                           bsr	equ	0xFE0
  5623                           indf2	equ	0xFDF
  5624                           postinc2	equ	0xFDE
  5625                           postdec2	equ	0xFDD
  5626                           fsr2h	equ	0xFDA
  5627                           fsr2l	equ	0xFD9
  5628                           status	equ	0xFD8
  5629                           
  5630 ;; *************** function _ToMainLow_sendmsg *****************
  5631 ;; Defined at:
  5632 ;;		line 103 in file "../src/messages.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  length          1    wreg     unsigned char 
  5635 ;;  msgtype         1   22[COMRAM] unsigned char 
  5636 ;;  data            2   23[COMRAM] PTR void 
  5637 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5638 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  length          1   25[COMRAM] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      char 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5650 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;Total ram usage:        4 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    8
  5657 ;; This function calls:
  5658 ;;		i1_send_msg
  5659 ;; This function is called by:
  5660 ;;		_uart_receive_interrupt_handler
  5661 ;;		_timer1_int_handler
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text35
  5666  001B5E                     __ptext35:
  5667                           	opt stack 0
  5668  001B5E                     _ToMainLow_sendmsg:
  5669                           	opt stack 16
  5670                           
  5671                           ;incstack = 0
  5672                           ;ToMainLow_sendmsg@length stored from wreg
  5673  001B5E  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5674                           
  5675                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5676  001B60  0101               	movlb	1	; () banked
  5677  001B62  0E01               	movlw	high _ToMainLow_MQ
  5678  001B64  6E0C               	movwf	i1send_msg@qptr+1,c
  5679  001B66  0101               	movlb	1	; () banked
  5680  001B68  0E00               	movlw	low _ToMainLow_MQ
  5681  001B6A  6E0B               	movwf	i1send_msg@qptr,c
  5682  001B6C  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5683  001B70  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5684  001B74  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5685  001B78  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5686  001B7C  EC6A  F009         	call	i1_send_msg	;wreg free
  5687  001B80  0012               	return	
  5688  001B82                     __end_of_ToMainLow_sendmsg:
  5689                           	opt stack 0
  5690                           pclatu	equ	0xFFB
  5691                           pclath	equ	0xFFA
  5692                           tblptru	equ	0xFF8
  5693                           tblptrh	equ	0xFF7
  5694                           tblptrl	equ	0xFF6
  5695                           tablat	equ	0xFF5
  5696                           prodh	equ	0xFF4
  5697                           prodl	equ	0xFF3
  5698                           intcon	equ	0xFF2
  5699                           postinc0	equ	0xFEE
  5700                           fsr0h	equ	0xFEA
  5701                           fsr0l	equ	0xFE9
  5702                           wreg	equ	0xFE8
  5703                           indf1	equ	0xFE7
  5704                           fsr1h	equ	0xFE2
  5705                           fsr1l	equ	0xFE1
  5706                           bsr	equ	0xFE0
  5707                           indf2	equ	0xFDF
  5708                           postinc2	equ	0xFDE
  5709                           postdec2	equ	0xFDD
  5710                           fsr2h	equ	0xFDA
  5711                           fsr2l	equ	0xFD9
  5712                           status	equ	0xFD8
  5713                           
  5714 ;; *************** function i1_send_msg *****************
  5715 ;; Defined at:
  5716 ;;		line 24 in file "../src/messages.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5719 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5720 ;;  length          1   12[COMRAM] unsigned char 
  5721 ;;  msgtype         1   13[COMRAM] unsigned char 
  5722 ;;  data            2   14[COMRAM] PTR void 
  5723 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  5724 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  5725 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5728 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5729 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5730 ;;  send_msg        2   17[COMRAM] unsigned int 
  5731 ;;  send_msg        1   19[COMRAM] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      char 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5741 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5744 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5745 ;;Total ram usage:       12 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    7
  5748 ;; This function calls:
  5749 ;;		i1_memcpy
  5750 ;; This function is called by:
  5751 ;;		_ToMainLow_sendmsg
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text36
  5756  0012D4                     __ptext36:
  5757                           	opt stack 0
  5758  0012D4                     i1_send_msg:
  5759                           	opt stack 16
  5760                           
  5761                           ;messages.c: 25: unsigned char slot;
  5762                           ;messages.c: 27: msg *qmsg;
  5763                           ;messages.c: 28: size_t tlength = length;
  5764                           
  5765                           ;incstack = 0
  5766  0012D4  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5767  0012D8  6A13               	clrf	i1send_msg@tlength+1,c
  5768                           
  5769                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5770  0012DA  EE20 F088          	lfsr	2,136
  5771  0012DE  500B               	movf	i1send_msg@qptr,w,c
  5772  0012E0  26D9               	addwf	fsr2l,f,c
  5773  0012E2  500C               	movf	i1send_msg@qptr+1,w,c
  5774  0012E4  22DA               	addwfc	fsr2h,f,c
  5775  0012E6  50DF               	movf	indf2,w,c
  5776  0012E8  6E14               	movwf	i1send_msg@slot,c
  5777                           
  5778                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5779  0012EA  5014               	movf	i1send_msg@slot,w,c
  5780  0012EC  0D11               	mullw	17
  5781  0012EE  50F3               	movf	prodl,w,c
  5782  0012F0  240B               	addwf	i1send_msg@qptr,w,c
  5783  0012F2  6E15               	movwf	i1send_msg@qmsg,c
  5784  0012F4  50F4               	movf	prodh,w,c
  5785  0012F6  200C               	addwfc	i1send_msg@qptr+1,w,c
  5786  0012F8  6E16               	movwf	i1send_msg@qmsg+1,c
  5787                           
  5788                           ;messages.c: 41: if (qmsg->full != 0) {
  5789  0012FA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5790  0012FE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5791  001302  50DF               	movf	indf2,w,c
  5792  001304  B4D8               	btfsc	status,2,c
  5793  001306  D002               	goto	i1l3388
  5794                           
  5795                           ;messages.c: 42: return (-1);
  5796  001308  0EFF               	movlw	255
  5797  00130A  0012               	return	
  5798  00130C                     i1l3388:
  5799                           
  5800                           ;messages.c: 43: }
  5801                           ;messages.c: 46: qmsg->length = length;
  5802  00130C  EE20 F001          	lfsr	2,1
  5803  001310  5015               	movf	i1send_msg@qmsg,w,c
  5804  001312  26D9               	addwf	fsr2l,f,c
  5805  001314  5016               	movf	i1send_msg@qmsg+1,w,c
  5806  001316  22DA               	addwfc	fsr2h,f,c
  5807  001318  C00D  FFDF         	movff	i1send_msg@length,indf2
  5808                           
  5809                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5810  00131C  EE20 F002          	lfsr	2,2
  5811  001320  5015               	movf	i1send_msg@qmsg,w,c
  5812  001322  26D9               	addwf	fsr2l,f,c
  5813  001324  5016               	movf	i1send_msg@qmsg+1,w,c
  5814  001326  22DA               	addwfc	fsr2h,f,c
  5815  001328  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5816                           
  5817                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5818  00132C  0E03               	movlw	3
  5819  00132E  2415               	addwf	i1send_msg@qmsg,w,c
  5820  001330  6E01               	movwf	i1memcpy@d1,c
  5821  001332  0E00               	movlw	0
  5822  001334  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5823  001336  6E02               	movwf	i1memcpy@d1+1,c
  5824  001338  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5825  00133C  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5826  001340  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5827  001344  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5828  001348  EC2D  F00C         	call	i1_memcpy	;wreg free
  5829                           
  5830                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  5831  00134C  EE20 F088          	lfsr	2,136
  5832  001350  500B               	movf	i1send_msg@qptr,w,c
  5833  001352  26D9               	addwf	fsr2l,f,c
  5834  001354  500C               	movf	i1send_msg@qptr+1,w,c
  5835  001356  22DA               	addwfc	fsr2h,f,c
  5836  001358  EE10 F088          	lfsr	1,136
  5837  00135C  500B               	movf	i1send_msg@qptr,w,c
  5838  00135E  26E1               	addwf	fsr1l,f,c
  5839  001360  500C               	movf	i1send_msg@qptr+1,w,c
  5840  001362  22E2               	addwfc	fsr1h,f,c
  5841  001364  50E7               	movf	indf1,w,c
  5842  001366  6E11               	movwf	??i1_send_msg& (0+255),c
  5843  001368  2811               	incf	??i1_send_msg,w,c
  5844  00136A  0B07               	andlw	7
  5845  00136C  6EDF               	movwf	indf2,c
  5846                           
  5847                           ;messages.c: 59: qmsg->full = 1;
  5848  00136E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5849  001372  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5850  001376  0E01               	movlw	1
  5851  001378  6EDF               	movwf	indf2,c
  5852                           
  5853                           ;messages.c: 60: return (1);
  5854  00137A  0E01               	movlw	1
  5855  00137C  0012               	return	
  5856  00137E                     __end_ofi1_send_msg:
  5857                           	opt stack 0
  5858                           pclatu	equ	0xFFB
  5859                           pclath	equ	0xFFA
  5860                           tblptru	equ	0xFF8
  5861                           tblptrh	equ	0xFF7
  5862                           tblptrl	equ	0xFF6
  5863                           tablat	equ	0xFF5
  5864                           prodh	equ	0xFF4
  5865                           prodl	equ	0xFF3
  5866                           intcon	equ	0xFF2
  5867                           postinc0	equ	0xFEE
  5868                           fsr0h	equ	0xFEA
  5869                           fsr0l	equ	0xFE9
  5870                           wreg	equ	0xFE8
  5871                           indf1	equ	0xFE7
  5872                           fsr1h	equ	0xFE2
  5873                           fsr1l	equ	0xFE1
  5874                           bsr	equ	0xFE0
  5875                           indf2	equ	0xFDF
  5876                           postinc2	equ	0xFDE
  5877                           postdec2	equ	0xFDD
  5878                           fsr2h	equ	0xFDA
  5879                           fsr2l	equ	0xFD9
  5880                           status	equ	0xFD8
  5881                           
  5882 ;; *************** function i1_memcpy *****************
  5883 ;; Defined at:
  5884 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  d1              2    0[COMRAM] PTR void 
  5887 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5888 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  5889 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  5890 ;;  s1              2    2[COMRAM] PTR const void 
  5891 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  5892 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  5893 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  5894 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  5895 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), 
  5896 ;;		 -> ToMainLow_MQ(138), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  5897 ;;  n               2    4[COMRAM] unsigned int 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5900 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  5901 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  5902 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  5903 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  5904 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), 
  5905 ;;		 -> ToMainLow_MQ(138), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  5906 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5907 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5908 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  5909 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  2    0[COMRAM] PTR void 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5919 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5920 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;Total ram usage:       10 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    6
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		i1_send_msg
  5930 ;;		i1_recv_msg
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text37
  5935  00185A                     __ptext37:
  5936                           	opt stack 0
  5937  00185A                     i1_memcpy:
  5938                           	opt stack 16
  5939                           
  5940                           ;incstack = 0
  5941  00185A  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5942  00185E  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5943  001862  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5944  001866  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5945  00186A  D00E               	goto	i1l3346
  5946  00186C                     i1l3340:
  5947  00186C  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5948  001870  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5949  001874  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5950  001878  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5951  00187C  CFDF FFE7          	movff	indf2,indf1
  5952  001880  4A09               	infsnz	i1memcpy@s,f,c
  5953  001882  2A0A               	incf	i1memcpy@s+1,f,c
  5954  001884  4A07               	infsnz	i1memcpy@d,f,c
  5955  001886  2A08               	incf	i1memcpy@d+1,f,c
  5956  001888                     i1l3346:
  5957  001888  0605               	decf	i1memcpy@n,f,c
  5958  00188A  A0D8               	btfss	status,0,c
  5959  00188C  0606               	decf	i1memcpy@n+1,f,c
  5960  00188E  2805               	incf	i1memcpy@n& (0+255),w,c
  5961  001890  B4D8               	btfsc	status,2,c
  5962  001892  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5963  001894  B4D8               	btfsc	status,2,c
  5964                           
  5965                           ;	Return value of i1_memcpy is never used
  5966  001896  0012               	return	
  5967  001898  D7E9               	goto	i1l3340
  5968  00189A                     __end_ofi1_memcpy:
  5969                           	opt stack 0
  5970                           pclatu	equ	0xFFB
  5971                           pclath	equ	0xFFA
  5972                           tblptru	equ	0xFF8
  5973                           tblptrh	equ	0xFF7
  5974                           tblptrl	equ	0xFF6
  5975                           tablat	equ	0xFF5
  5976                           prodh	equ	0xFF4
  5977                           prodl	equ	0xFF3
  5978                           intcon	equ	0xFF2
  5979                           postinc0	equ	0xFEE
  5980                           fsr0h	equ	0xFEA
  5981                           fsr0l	equ	0xFE9
  5982                           wreg	equ	0xFE8
  5983                           indf1	equ	0xFE7
  5984                           fsr1h	equ	0xFE2
  5985                           fsr1l	equ	0xFE1
  5986                           bsr	equ	0xFE0
  5987                           indf2	equ	0xFDF
  5988                           postinc2	equ	0xFDE
  5989                           postdec2	equ	0xFDD
  5990                           fsr2h	equ	0xFDA
  5991                           fsr2l	equ	0xFD9
  5992                           status	equ	0xFD8
  5993                           
  5994 ;; *************** function _ReadTimer1 *****************
  5995 ;; Defined at:
  5996 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  timer           2    2[COMRAM] struct Timers
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  2    0[COMRAM] unsigned int 
  6003 ;; Registers used:
  6004 ;;		None
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6013 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;Total ram usage:        4 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    6
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_timer1_int_handler
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text38
  6025  001BE6                     __ptext38:
  6026                           	opt stack 0
  6027  001BE6                     _ReadTimer1:
  6028                           	opt stack 18
  6029                           
  6030                           ;incstack = 0
  6031  001BE6  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6032  001BEA  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6033  001BEE  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6034  001BF2  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6035  001BF6  0012               	return	
  6036  001BF8                     __end_of_ReadTimer1:
  6037                           	opt stack 0
  6038                           pclatu	equ	0xFFB
  6039                           pclath	equ	0xFFA
  6040                           tblptru	equ	0xFF8
  6041                           tblptrh	equ	0xFF7
  6042                           tblptrl	equ	0xFF6
  6043                           tablat	equ	0xFF5
  6044                           prodh	equ	0xFF4
  6045                           prodl	equ	0xFF3
  6046                           intcon	equ	0xFF2
  6047                           postinc0	equ	0xFEE
  6048                           fsr0h	equ	0xFEA
  6049                           fsr0l	equ	0xFE9
  6050                           wreg	equ	0xFE8
  6051                           indf1	equ	0xFE7
  6052                           fsr1h	equ	0xFE2
  6053                           fsr1l	equ	0xFE1
  6054                           bsr	equ	0xFE0
  6055                           indf2	equ	0xFDF
  6056                           postinc2	equ	0xFDE
  6057                           postdec2	equ	0xFDD
  6058                           fsr2h	equ	0xFDA
  6059                           fsr2l	equ	0xFD9
  6060                           status	equ	0xFD8
  6061                           
  6062 ;; *************** function _InterruptHandlerHigh *****************
  6063 ;; Defined at:
  6064 ;;		line 86 in file "../src/interrupts.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;		None
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;		None
  6069 ;; Return value:  Size  Location     Type
  6070 ;;		None               void
  6071 ;; Registers used:
  6072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6080 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6082 ;;Total ram usage:       14 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    5
  6085 ;; This function calls:
  6086 ;;		_SleepIfOkay
  6087 ;;		_i2c_int_handler
  6088 ;;		_timer0_int_handler
  6089 ;; This function is called by:
  6090 ;;		Interrupt level 2
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	intcode
  6095  000008                     __pintcode:
  6096                           	opt stack 0
  6097  000008                     _InterruptHandlerHigh:
  6098                           	opt stack 16
  6099                           
  6100                           ;incstack = 0
  6101  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh
  6102  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+1
  6103  000010  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+2
  6104  000014  EF11  F00A         	goto	int_func
  6105                           pclatu	equ	0xFFB
  6106                           pclath	equ	0xFFA
  6107                           tblptru	equ	0xFF8
  6108                           tblptrh	equ	0xFF7
  6109                           tblptrl	equ	0xFF6
  6110                           tablat	equ	0xFF5
  6111                           prodh	equ	0xFF4
  6112                           prodl	equ	0xFF3
  6113                           intcon	equ	0xFF2
  6114                           postinc0	equ	0xFEE
  6115                           fsr0h	equ	0xFEA
  6116                           fsr0l	equ	0xFE9
  6117                           wreg	equ	0xFE8
  6118                           indf1	equ	0xFE7
  6119                           fsr1h	equ	0xFE2
  6120                           fsr1l	equ	0xFE1
  6121                           bsr	equ	0xFE0
  6122                           indf2	equ	0xFDF
  6123                           postinc2	equ	0xFDE
  6124                           postdec2	equ	0xFDD
  6125                           fsr2h	equ	0xFDA
  6126                           fsr2l	equ	0xFD9
  6127                           status	equ	0xFD8
  6128                           
  6129                           	psect	intcode_body
  6130  001422                     __pintcode_body:
  6131                           	opt stack 16
  6132  001422                     int_func:
  6133                           	opt stack 16
  6134  001422  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+3
  6135  001426  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+4
  6136  00142A  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+5
  6137  00142E  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+6
  6138  001432  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+7
  6139  001436  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+8
  6140  00143A  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+9
  6141  00143E  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+10
  6142  001442  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+11
  6143  001446  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+12
  6144  00144A  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+13
  6145                           
  6146                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6147  00144E  A69E               	btfss	3998,3,c	;volatile
  6148  001450  D003               	goto	i2l4046
  6149                           
  6150                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6151  001452  969E               	bcf	3998,3,c	;volatile
  6152                           
  6153                           ;interrupts.c: 98: i2c_int_handler();
  6154  001454  EC62  F000         	call	_i2c_int_handler	;wreg free
  6155  001458                     i2l4046:
  6156                           
  6157                           ;interrupts.c: 99: }
  6158                           ;interrupts.c: 102: if (INTCONbits.TMR0IF) {
  6159  001458  A4F2               	btfss	intcon,2,c	;volatile
  6160  00145A  D003               	goto	i2l4052
  6161                           
  6162                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6163  00145C  94F2               	bcf	intcon,2,c	;volatile
  6164                           
  6165                           ;interrupts.c: 108: timer0_int_handler();
  6166  00145E  EC50  F00A         	call	_timer0_int_handler	;wreg free
  6167  001462                     i2l4052:
  6168                           
  6169                           ;interrupts.c: 109: }
  6170                           ;interrupts.c: 118: SleepIfOkay();
  6171  001462  EC81  F00B         	call	_SleepIfOkay	;wreg free
  6172  001466  C09C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6173  00146A  C09B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6174  00146E  C09A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6175  001472  C099  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6176  001476  C098  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6177  00147A  C097  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6178  00147E  C096  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6179  001482  C095  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6180  001486  C094  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6181  00148A  C093  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6182  00148E  C092  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6183  001492  C091  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6184  001496  C090  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6185  00149A  C08F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6186  00149E  0011               	retfie		f
  6187  0014A0                     __end_of_InterruptHandlerHigh:
  6188                           	opt stack 0
  6189                           pclatu	equ	0xFFB
  6190                           pclath	equ	0xFFA
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           intcon	equ	0xFF2
  6198                           postinc0	equ	0xFEE
  6199                           fsr0h	equ	0xFEA
  6200                           fsr0l	equ	0xFE9
  6201                           wreg	equ	0xFE8
  6202                           indf1	equ	0xFE7
  6203                           fsr1h	equ	0xFE2
  6204                           fsr1l	equ	0xFE1
  6205                           bsr	equ	0xFE0
  6206                           indf2	equ	0xFDF
  6207                           postinc2	equ	0xFDE
  6208                           postdec2	equ	0xFDD
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function _timer0_int_handler *****************
  6214 ;; Defined at:
  6215 ;;		line 16 in file "../src/user_interrupts.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  val             2   33[BANK0 ] unsigned int 
  6220 ;;  msgtype         2   31[BANK0 ] int 
  6221 ;;  length          2   29[BANK0 ] int 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;		None               void
  6224 ;; Registers used:
  6225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6232 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6234 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6235 ;;Total ram usage:        6 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    3
  6238 ;; This function calls:
  6239 ;;		_FromMainHigh_recvmsg
  6240 ;;		_ToMainHigh_sendmsg
  6241 ;;		_WriteTimer0
  6242 ;; This function is called by:
  6243 ;;		_InterruptHandlerHigh
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text40
  6248  0014A0                     __ptext40:
  6249                           	opt stack 0
  6250  0014A0                     _timer0_int_handler:
  6251                           	opt stack 17
  6252                           
  6253                           ;user_interrupts.c: 20: unsigned int val;
  6254                           ;user_interrupts.c: 21: int length, msgtype;
  6255                           ;user_interrupts.c: 25: WriteTimer0(0);
  6256                           
  6257                           ;incstack = 0
  6258  0014A0  0E00               	movlw	0
  6259  0014A2  0100               	movlb	0	; () banked
  6260  0014A4  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6261  0014A6  0E00               	movlw	0
  6262  0014A8  0100               	movlb	0	; () banked
  6263  0014AA  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6264  0014AC  ECFC  F00D         	call	_WriteTimer0	;wreg free
  6265                           
  6266                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6267  0014B0  0100               	movlb	0	; () banked
  6268  0014B2  0E00               	movlw	high timer0_int_handler@msgtype
  6269  0014B4  0100               	movlb	0	; () banked
  6270  0014B6  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6271  0014B8  0100               	movlb	0	; () banked
  6272  0014BA  0E7F               	movlw	low timer0_int_handler@msgtype
  6273  0014BC  0100               	movlb	0	; () banked
  6274  0014BE  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6275  0014C0  0100               	movlb	0	; () banked
  6276  0014C2  0E00               	movlw	high timer0_int_handler@val
  6277  0014C4  0100               	movlb	0	; () banked
  6278  0014C6  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6279  0014C8  0100               	movlb	0	; () banked
  6280  0014CA  0E81               	movlw	low timer0_int_handler@val
  6281  0014CC  0100               	movlb	0	; () banked
  6282  0014CE  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6283  0014D0  0E02               	movlw	2
  6284  0014D2  ECF9  F00C         	call	_FromMainHigh_recvmsg
  6285  0014D6  0100               	movlb	0	; () banked
  6286  0014D8  6F7D               	movwf	timer0_int_handler@length& (0+255),b
  6287  0014DA  0100               	movlb	0	; () banked
  6288  0014DC  6B7E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6289  0014DE  0100               	movlb	0	; () banked
  6290  0014E0  BF7D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6291  0014E2  077E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6295  0014E4  0100               	movlb	0	; () banked
  6296  0014E6  517D               	movf	timer0_int_handler@length& (0+255),w,b
  6297  0014E8  0A02               	xorlw	2
  6298  0014EA  117E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6299  0014EC  A4D8               	btfss	status,2,c
  6300  0014EE  0012               	return	
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6304  0014F0  0E0A               	movlw	10
  6305  0014F2  0100               	movlb	0	; () banked
  6306  0014F4  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6307  0014F6  0100               	movlb	0	; () banked
  6308  0014F8  0E00               	movlw	high timer0_int_handler@val
  6309  0014FA  0100               	movlb	0	; () banked
  6310  0014FC  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6311  0014FE  0100               	movlb	0	; () banked
  6312  001500  0E81               	movlw	low timer0_int_handler@val
  6313  001502  0100               	movlb	0	; () banked
  6314  001504  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6315  001506  0E02               	movlw	2
  6316  001508  EC5B  F00D         	call	_ToMainHigh_sendmsg
  6317  00150C  0012               	return	
  6318  00150E                     __end_of_timer0_int_handler:
  6319                           	opt stack 0
  6320                           pclatu	equ	0xFFB
  6321                           pclath	equ	0xFFA
  6322                           tblptru	equ	0xFF8
  6323                           tblptrh	equ	0xFF7
  6324                           tblptrl	equ	0xFF6
  6325                           tablat	equ	0xFF5
  6326                           prodh	equ	0xFF4
  6327                           prodl	equ	0xFF3
  6328                           intcon	equ	0xFF2
  6329                           postinc0	equ	0xFEE
  6330                           fsr0h	equ	0xFEA
  6331                           fsr0l	equ	0xFE9
  6332                           wreg	equ	0xFE8
  6333                           indf1	equ	0xFE7
  6334                           fsr1h	equ	0xFE2
  6335                           fsr1l	equ	0xFE1
  6336                           bsr	equ	0xFE0
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           fsr2h	equ	0xFDA
  6341                           fsr2l	equ	0xFD9
  6342                           status	equ	0xFD8
  6343                           
  6344 ;; *************** function _WriteTimer0 *****************
  6345 ;; Defined at:
  6346 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  timer0          2    0[BANK0 ] unsigned int 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  timer           2    2[BANK0 ] struct Timers
  6351 ;; Return value:  Size  Location     Type
  6352 ;;		None               void
  6353 ;; Registers used:
  6354 ;;		None
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;Total ram usage:        4 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_timer0_int_handler
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text41
  6374  001BF8                     __ptext41:
  6375                           	opt stack 0
  6376  001BF8                     _WriteTimer0:
  6377                           	opt stack 19
  6378                           
  6379                           ;incstack = 0
  6380  001BF8  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6381  001BFC  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6382  001C00  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6383  001C04  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6384  001C08  0012               	return	
  6385  001C0A                     __end_of_WriteTimer0:
  6386                           	opt stack 0
  6387                           pclatu	equ	0xFFB
  6388                           pclath	equ	0xFFA
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           intcon	equ	0xFF2
  6396                           postinc0	equ	0xFEE
  6397                           fsr0h	equ	0xFEA
  6398                           fsr0l	equ	0xFE9
  6399                           wreg	equ	0xFE8
  6400                           indf1	equ	0xFE7
  6401                           fsr1h	equ	0xFE2
  6402                           fsr1l	equ	0xFE1
  6403                           bsr	equ	0xFE0
  6404                           indf2	equ	0xFDF
  6405                           postinc2	equ	0xFDE
  6406                           postdec2	equ	0xFDD
  6407                           fsr2h	equ	0xFDA
  6408                           fsr2l	equ	0xFD9
  6409                           status	equ	0xFD8
  6410                           
  6411 ;; *************** function _i2c_int_handler *****************
  6412 ;; Defined at:
  6413 ;;		line 103 in file "../src/my_i2c.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  l               2    0        int 
  6418 ;;  error_buf       3   38[BANK0 ] unsigned char [3]
  6419 ;;  data_read       1   46[BANK0 ] unsigned char 
  6420 ;;  msg_ready       1   45[BANK0 ] unsigned char 
  6421 ;;  msg_to_send     1   44[BANK0 ] unsigned char 
  6422 ;;  i2c_data        1   43[BANK0 ] unsigned char 
  6423 ;;  overrun_erro    1   42[BANK0 ] unsigned char 
  6424 ;;  data_written    1   41[BANK0 ] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;		None               void
  6427 ;; Registers used:
  6428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6435 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6437 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6438 ;;Total ram usage:       10 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    4
  6441 ;; This function calls:
  6442 ;;		_ToMainHigh_sendmsg
  6443 ;;		_blip4
  6444 ;;		_handle_start
  6445 ;;		_retrieve_sensor_values
  6446 ;;		i2_blip
  6447 ;;		i2_blip1
  6448 ;;		i2_blip2
  6449 ;;		i2_blip3
  6450 ;; This function is called by:
  6451 ;;		_InterruptHandlerHigh
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text42
  6456  0000C4                     __ptext42:
  6457                           	opt stack 0
  6458  0000C4                     _i2c_int_handler:
  6459                           	opt stack 16
  6460                           
  6461                           ;my_i2c.c: 104: blip1();
  6462                           
  6463                           ;incstack = 0
  6464  0000C4  EC35  F00E         	call	i2_blip1	;wreg free
  6465                           
  6466                           ;my_i2c.c: 106: static unsigned char sensor_bank_side[14];
  6467                           ;my_i2c.c: 107: static unsigned char sensor_bank_front[14];
  6468                           ;my_i2c.c: 108: static unsigned char sensor_bank_ventril[14];
  6469                           ;my_i2c.c: 110: unsigned char i2c_data;
  6470                           ;my_i2c.c: 111: unsigned char data_read = 0;
  6471  0000C8  0E00               	movlw	0
  6472  0000CA  0100               	movlb	0	; () banked
  6473  0000CC  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;my_i2c.c: 112: unsigned char data_written = 0;
  6477  0000CE  0E00               	movlw	0
  6478  0000D0  0100               	movlb	0	; () banked
  6479  0000D2  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;my_i2c.c: 113: unsigned char msg_ready = 0;
  6483  0000D4  0E00               	movlw	0
  6484  0000D6  0100               	movlb	0	; () banked
  6485  0000D8  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;my_i2c.c: 114: unsigned char msg_to_send = 0;
  6489  0000DA  0E00               	movlw	0
  6490  0000DC  0100               	movlb	0	; () banked
  6491  0000DE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;my_i2c.c: 115: unsigned char overrun_error = 0;
  6495  0000E0  0E00               	movlw	0
  6496  0000E2  0100               	movlb	0	; () banked
  6497  0000E4  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;my_i2c.c: 116: unsigned char error_buf[3];
  6501                           ;my_i2c.c: 119: if (SSPCON1bits.SSPOV == 1) {
  6502  0000E6  ACC6               	btfss	4038,6,c	;volatile
  6503  0000E8  D024               	goto	i2l3600
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;my_i2c.c: 120: SSPCON1bits.SSPOV = 0;
  6507  0000EA  9CC6               	bcf	4038,6,c	;volatile
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;my_i2c.c: 124: ic_ptr->status = 0x5;
  6511  0000EC  0100               	movlb	0	; () banked
  6512  0000EE  EE20 F021          	lfsr	2,33
  6513  0000F2  0100               	movlb	0	; () banked
  6514  0000F4  51D2               	movf	_ic_ptr& (0+255),w,b
  6515  0000F6  26D9               	addwf	fsr2l,f,c
  6516  0000F8  0100               	movlb	0	; () banked
  6517  0000FA  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6518  0000FC  22DA               	addwfc	fsr2h,f,c
  6519  0000FE  0E05               	movlw	5
  6520  000100  6EDF               	movwf	indf2,c
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;my_i2c.c: 125: overrun_error = 1;
  6524  000102  0E01               	movlw	1
  6525  000104  0100               	movlb	0	; () banked
  6526  000106  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;my_i2c.c: 126: ic_ptr->error_count++;
  6530  000108  0100               	movlb	0	; () banked
  6531  00010A  EE20 F023          	lfsr	2,35
  6532  00010E  0100               	movlb	0	; () banked
  6533  000110  51D2               	movf	_ic_ptr& (0+255),w,b
  6534  000112  26D9               	addwf	fsr2l,f,c
  6535  000114  0100               	movlb	0	; () banked
  6536  000116  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6537  000118  22DA               	addwfc	fsr2h,f,c
  6538  00011A  2ADF               	incf	indf2,f,c
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;my_i2c.c: 127: ic_ptr->error_code = 0x4;
  6542  00011C  0100               	movlb	0	; () banked
  6543  00011E  EE20 F022          	lfsr	2,34
  6544  000122  0100               	movlb	0	; () banked
  6545  000124  51D2               	movf	_ic_ptr& (0+255),w,b
  6546  000126  26D9               	addwf	fsr2l,f,c
  6547  000128  0100               	movlb	0	; () banked
  6548  00012A  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6549  00012C  22DA               	addwfc	fsr2h,f,c
  6550  00012E  0E04               	movlw	4
  6551  000130  6EDF               	movwf	indf2,c
  6552  000132                     i2l3600:
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;my_i2c.c: 128: }
  6556                           ;my_i2c.c: 130: if (SSPSTATbits.BF == 1) {
  6557  000132  A0C7               	btfss	4039,0,c	;volatile
  6558  000134  D005               	goto	i2l3606
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;my_i2c.c: 131: i2c_data = SSPBUF;
  6562  000136  CFC9 F08B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;my_i2c.c: 132: data_read = 1;
  6566  00013A  0E01               	movlw	1
  6567  00013C  0100               	movlb	0	; () banked
  6568  00013E  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6569  000140                     i2l3606:
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;my_i2c.c: 133: }
  6573                           ;my_i2c.c: 135: if (!overrun_error) {
  6574  000140  0100               	movlb	0	; () banked
  6575  000142  678A               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6576  000144  D25E               	goto	i2l301
  6577  000146  D247               	goto	i2l3724
  6578  000148                     i2l303:
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;my_i2c.c: 138: {
  6582                           ;my_i2c.c: 140: if (SSPSTATbits.S == 1) {
  6583  000148  A6C7               	btfss	4039,3,c	;volatile
  6584  00014A  D25B               	goto	i2l301
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;my_i2c.c: 141: handle_start(data_read);
  6588  00014C  0100               	movlb	0	; () banked
  6589  00014E  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6590  000150  EC05  F009         	call	_handle_start
  6591                           
  6592                           ;my_i2c.c: 143: if (ic_ptr->status == 0x8) {
  6593  000154  0100               	movlb	0	; () banked
  6594  000156  EE20 F021          	lfsr	2,33
  6595  00015A  0100               	movlb	0	; () banked
  6596  00015C  51D2               	movf	_ic_ptr& (0+255),w,b
  6597  00015E  26D9               	addwf	fsr2l,f,c
  6598  000160  0100               	movlb	0	; () banked
  6599  000162  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6600  000164  22DA               	addwfc	fsr2h,f,c
  6601  000166  0E08               	movlw	8
  6602  000168  62DF               	cpfseq	indf2,c
  6603  00016A  D24B               	goto	i2l301
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;my_i2c.c: 144: data_read = 0;
  6607  00016C  0E00               	movlw	0
  6608  00016E  0100               	movlb	0	; () banked
  6609  000170  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6610                           
  6611                           ;my_i2c.c: 145: msg_to_send = 1;
  6612  000172  0E01               	movlw	1
  6613  000174  0100               	movlb	0	; () banked
  6614  000176  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6615  000178  D244               	goto	i2l301
  6616  00017A                     i2l307:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;my_i2c.c: 151: {
  6620                           ;my_i2c.c: 154: if (SSPSTATbits.P == 1) {
  6621  00017A  A8C7               	btfss	4039,4,c	;volatile
  6622  00017C  D02A               	goto	i2l3626
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;my_i2c.c: 157: ic_ptr->event_count++;
  6626  00017E  0100               	movlb	0	; () banked
  6627  000180  EE20 F020          	lfsr	2,32
  6628  000184  0100               	movlb	0	; () banked
  6629  000186  51D2               	movf	_ic_ptr& (0+255),w,b
  6630  000188  26D9               	addwf	fsr2l,f,c
  6631  00018A  0100               	movlb	0	; () banked
  6632  00018C  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6633  00018E  22DA               	addwfc	fsr2h,f,c
  6634  000190  2ADF               	incf	indf2,f,c
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;my_i2c.c: 158: if (data_read) {
  6638  000192  0100               	movlb	0	; () banked
  6639  000194  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6640  000196  B4D8               	btfsc	status,2,c
  6641  000198  D213               	goto	L8
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6645  00019A  BAC7               	btfsc	4039,5,c	;volatile
  6646  00019C  D004               	goto	i2l3624
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;my_i2c.c: 160: msg_ready = 1;
  6650  00019E  0E01               	movlw	1
  6651  0001A0  0100               	movlb	0	; () banked
  6652  0001A2  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6653                           
  6654                           ;my_i2c.c: 161: } else {
  6655  0001A4  D20D               	goto	L8
  6656  0001A6                     i2l3624:
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;my_i2c.c: 162: ic_ptr->error_count++;
  6660  0001A6  0100               	movlb	0	; () banked
  6661  0001A8  EE20 F023          	lfsr	2,35
  6662  0001AC  0100               	movlb	0	; () banked
  6663  0001AE  51D2               	movf	_ic_ptr& (0+255),w,b
  6664  0001B0  26D9               	addwf	fsr2l,f,c
  6665  0001B2  0100               	movlb	0	; () banked
  6666  0001B4  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6667  0001B6  22DA               	addwfc	fsr2h,f,c
  6668  0001B8  2ADF               	incf	indf2,f,c
  6669                           
  6670                           ;my_i2c.c: 163: ic_ptr->error_code = 0x6;
  6671  0001BA  0100               	movlb	0	; () banked
  6672  0001BC  EE20 F022          	lfsr	2,34
  6673  0001C0  0100               	movlb	0	; () banked
  6674  0001C2  51D2               	movf	_ic_ptr& (0+255),w,b
  6675  0001C4  26D9               	addwf	fsr2l,f,c
  6676  0001C6  0100               	movlb	0	; () banked
  6677  0001C8  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6678  0001CA  22DA               	addwfc	fsr2h,f,c
  6679  0001CC  0E06               	movlw	6
  6680  0001CE  6EDF               	movwf	indf2,c
  6681                           
  6682                           ; BSR set to: 0
  6683  0001D0  D1F7               	goto	L8
  6684  0001D2                     i2l3626:
  6685                           
  6686                           ; BSR set to: 0
  6687  0001D2  0100               	movlb	0	; () banked
  6688  0001D4  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6689  0001D6  B4D8               	btfsc	status,2,c
  6690  0001D8  D214               	goto	i2l301
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;my_i2c.c: 168: ic_ptr->event_count++;
  6694  0001DA  0100               	movlb	0	; () banked
  6695  0001DC  EE20 F020          	lfsr	2,32
  6696  0001E0  0100               	movlb	0	; () banked
  6697  0001E2  51D2               	movf	_ic_ptr& (0+255),w,b
  6698  0001E4  26D9               	addwf	fsr2l,f,c
  6699  0001E6  0100               	movlb	0	; () banked
  6700  0001E8  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6701  0001EA  22DA               	addwfc	fsr2h,f,c
  6702  0001EC  2ADF               	incf	indf2,f,c
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;my_i2c.c: 169: if (SSPSTATbits.D_A == 0) {
  6706  0001EE  BAC7               	btfsc	4039,5,c	;volatile
  6707  0001F0  D02C               	goto	i2l3646
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;my_i2c.c: 170: if (SSPSTATbits.R_W == 0) {
  6711  0001F2  B4C7               	btfsc	4039,2,c	;volatile
  6712  0001F4  D00B               	goto	i2l3636
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;my_i2c.c: 171: ic_ptr->status = 0x7;
  6716  0001F6  0100               	movlb	0	; () banked
  6717  0001F8  EE20 F021          	lfsr	2,33
  6718  0001FC  0100               	movlb	0	; () banked
  6719  0001FE  51D2               	movf	_ic_ptr& (0+255),w,b
  6720  000200  26D9               	addwf	fsr2l,f,c
  6721  000202  0100               	movlb	0	; () banked
  6722  000204  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6723  000206  22DA               	addwfc	fsr2h,f,c
  6724  000208  0E07               	movlw	7
  6725  00020A  D082               	goto	L6
  6726  00020C                     i2l3636:
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;my_i2c.c: 173: blip3();
  6730  00020C  EC2D  F00E         	call	i2_blip3	;wreg free
  6731                           
  6732                           ;my_i2c.c: 174: ic_ptr->status = 0x8;
  6733  000210  0100               	movlb	0	; () banked
  6734  000212  EE20 F021          	lfsr	2,33
  6735  000216  0100               	movlb	0	; () banked
  6736  000218  51D2               	movf	_ic_ptr& (0+255),w,b
  6737  00021A  26D9               	addwf	fsr2l,f,c
  6738  00021C  0100               	movlb	0	; () banked
  6739  00021E  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6740  000220  22DA               	addwfc	fsr2h,f,c
  6741  000222  0E08               	movlw	8
  6742  000224  6EDF               	movwf	indf2,c
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;my_i2c.c: 175: msg_to_send = 1;
  6746  000226  0E01               	movlw	1
  6747  000228  0100               	movlb	0	; () banked
  6748  00022A  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;my_i2c.c: 177: data_read = 0;
  6752  00022C  0E00               	movlw	0
  6753  00022E  0100               	movlb	0	; () banked
  6754  000230  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;my_i2c.c: 178: ic_ptr->outbufind = 0;
  6758  000232  0100               	movlb	0	; () banked
  6759  000234  EE20 F01E          	lfsr	2,30
  6760  000238  0100               	movlb	0	; () banked
  6761  00023A  51D2               	movf	_ic_ptr& (0+255),w,b
  6762  00023C  26D9               	addwf	fsr2l,f,c
  6763  00023E  0100               	movlb	0	; () banked
  6764  000240  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6765  000242  22DA               	addwfc	fsr2h,f,c
  6766  000244  0E00               	movlw	0
  6767  000246  6EDF               	movwf	indf2,c
  6768                           
  6769                           ;my_i2c.c: 179: goto l;
  6770  000248  D020               	goto	i2l3648
  6771  00024A                     i2l3646:
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;my_i2c.c: 182: ic_ptr->error_count++;
  6775  00024A  0100               	movlb	0	; () banked
  6776  00024C  EE20 F023          	lfsr	2,35
  6777  000250  0100               	movlb	0	; () banked
  6778  000252  51D2               	movf	_ic_ptr& (0+255),w,b
  6779  000254  26D9               	addwf	fsr2l,f,c
  6780  000256  0100               	movlb	0	; () banked
  6781  000258  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6782  00025A  22DA               	addwfc	fsr2h,f,c
  6783  00025C  2ADF               	incf	indf2,f,c
  6784                           
  6785                           ;my_i2c.c: 183: ic_ptr->status = 0x5;
  6786  00025E  0100               	movlb	0	; () banked
  6787  000260  EE20 F021          	lfsr	2,33
  6788  000264  0100               	movlb	0	; () banked
  6789  000266  51D2               	movf	_ic_ptr& (0+255),w,b
  6790  000268  26D9               	addwf	fsr2l,f,c
  6791  00026A  0100               	movlb	0	; () banked
  6792  00026C  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6793  00026E  22DA               	addwfc	fsr2h,f,c
  6794  000270  0E05               	movlw	5
  6795  000272  6EDF               	movwf	indf2,c
  6796                           
  6797                           ;my_i2c.c: 184: ic_ptr->error_code = 0x6;
  6798  000274  0100               	movlb	0	; () banked
  6799  000276  EE20 F022          	lfsr	2,34
  6800  00027A  0100               	movlb	0	; () banked
  6801  00027C  51D2               	movf	_ic_ptr& (0+255),w,b
  6802  00027E  26D9               	addwf	fsr2l,f,c
  6803  000280  0100               	movlb	0	; () banked
  6804  000282  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6805  000284  22DA               	addwfc	fsr2h,f,c
  6806  000286  0E06               	movlw	6
  6807  000288  D043               	goto	L6
  6808  00028A                     i2l3648:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;my_i2c.c: 191: {
  6812                           ;my_i2c.c: 192: blip4();
  6813  00028A  EC3D  F00E         	call	_blip4	;wreg free
  6814                           
  6815                           ;my_i2c.c: 194: if (ic_ptr->outbufind < 14) {
  6816  00028E  0100               	movlb	0	; () banked
  6817  000290  EE20 F01E          	lfsr	2,30
  6818  000294  0100               	movlb	0	; () banked
  6819  000296  51D2               	movf	_ic_ptr& (0+255),w,b
  6820  000298  26D9               	addwf	fsr2l,f,c
  6821  00029A  0100               	movlb	0	; () banked
  6822  00029C  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6823  00029E  22DA               	addwfc	fsr2h,f,c
  6824  0002A0  50DF               	movf	indf2,w,c
  6825  0002A2  0100               	movlb	0	; () banked
  6826  0002A4  6F85               	movwf	??_i2c_int_handler& (0+255),b
  6827  0002A6  0E0E               	movlw	14
  6828  0002A8  0100               	movlb	0	; () banked
  6829  0002AA  5D85               	subwf	??_i2c_int_handler& (0+255),w,b
  6830  0002AC  B0D8               	btfsc	status,0,c
  6831  0002AE  D02D               	goto	i2l3660
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;my_i2c.c: 195: blip4();
  6835  0002B0  EC3D  F00E         	call	_blip4	;wreg free
  6836                           
  6837                           ;my_i2c.c: 196: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6838  0002B4  0100               	movlb	0	; () banked
  6839  0002B6  EE20 F01E          	lfsr	2,30
  6840  0002BA  0100               	movlb	0	; () banked
  6841  0002BC  51D2               	movf	_ic_ptr& (0+255),w,b
  6842  0002BE  26D9               	addwf	fsr2l,f,c
  6843  0002C0  0100               	movlb	0	; () banked
  6844  0002C2  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6845  0002C4  22DA               	addwfc	fsr2h,f,c
  6846  0002C6  50DF               	movf	indf2,w,c
  6847  0002C8  0100               	movlb	0	; () banked
  6848  0002CA  6F85               	movwf	??_i2c_int_handler& (0+255),b
  6849  0002CC  0100               	movlb	0	; () banked
  6850  0002CE  5185               	movf	??_i2c_int_handler& (0+255),w,b
  6851  0002D0  0D01               	mullw	1
  6852  0002D2  0E10               	movlw	16
  6853  0002D4  26F3               	addwf	prodl,f,c
  6854  0002D6  0E00               	movlw	0
  6855  0002D8  22F4               	addwfc	prodh,f,c
  6856  0002DA  50F3               	movf	prodl,w,c
  6857  0002DC  0100               	movlb	0	; () banked
  6858  0002DE  25D2               	addwf	_ic_ptr& (0+255),w,b
  6859  0002E0  6ED9               	movwf	fsr2l,c
  6860  0002E2  50F4               	movf	prodh,w,c
  6861  0002E4  0100               	movlb	0	; () banked
  6862  0002E6  21D3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6863  0002E8  6EDA               	movwf	fsr2h,c
  6864  0002EA  50DF               	movf	indf2,w,c
  6865  0002EC  6EC9               	movwf	4041,c	;volatile
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;my_i2c.c: 197: ic_ptr->outbufind++;
  6869  0002EE  0100               	movlb	0	; () banked
  6870  0002F0  EE20 F01E          	lfsr	2,30
  6871  0002F4  0100               	movlb	0	; () banked
  6872  0002F6  51D2               	movf	_ic_ptr& (0+255),w,b
  6873  0002F8  26D9               	addwf	fsr2l,f,c
  6874  0002FA  0100               	movlb	0	; () banked
  6875  0002FC  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6876  0002FE  22DA               	addwfc	fsr2h,f,c
  6877  000300  2ADF               	incf	indf2,f,c
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;my_i2c.c: 198: data_written = 1;
  6881  000302  0E01               	movlw	1
  6882  000304  0100               	movlb	0	; () banked
  6883  000306  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  6884                           
  6885                           ;my_i2c.c: 199: } else {
  6886  000308  D17C               	goto	i2l301
  6887  00030A                     i2l3660:
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;my_i2c.c: 200: blip3();
  6891  00030A  EC2D  F00E         	call	i2_blip3	;wreg free
  6892  00030E  D158               	goto	L8
  6893  000310                     L6:
  6894  000310  6EDF               	movwf	indf2,c
  6895  000312  D177               	goto	i2l301
  6896  000314                     i2l3664:
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;my_i2c.c: 207: {
  6900                           ;my_i2c.c: 208: blip2();
  6901  000314  EC31  F00E         	call	i2_blip2	;wreg free
  6902                           
  6903                           ;my_i2c.c: 210: if (SSPSTATbits.P == 1) {
  6904  000318  A8C7               	btfss	4039,4,c	;volatile
  6905  00031A  D05A               	goto	i2l3686
  6906                           
  6907                           ;my_i2c.c: 213: ic_ptr->event_count++;
  6908  00031C  0100               	movlb	0	; () banked
  6909  00031E  EE20 F020          	lfsr	2,32
  6910  000322  0100               	movlb	0	; () banked
  6911  000324  51D2               	movf	_ic_ptr& (0+255),w,b
  6912  000326  26D9               	addwf	fsr2l,f,c
  6913  000328  0100               	movlb	0	; () banked
  6914  00032A  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6915  00032C  22DA               	addwfc	fsr2h,f,c
  6916  00032E  2ADF               	incf	indf2,f,c
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;my_i2c.c: 214: if (data_read) {
  6920  000330  0100               	movlb	0	; () banked
  6921  000332  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6922  000334  B4D8               	btfsc	status,2,c
  6923  000336  D048               	goto	i2l3682
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;my_i2c.c: 215: if (SSPSTATbits.D_A == 1) {
  6927  000338  AAC7               	btfss	4039,5,c	;volatile
  6928  00033A  D025               	goto	i2l3680
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;my_i2c.c: 216: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6932  00033C  0100               	movlb	0	; () banked
  6933  00033E  EE20 F00E          	lfsr	2,14
  6934  000342  0100               	movlb	0	; () banked
  6935  000344  51D2               	movf	_ic_ptr& (0+255),w,b
  6936  000346  26D9               	addwf	fsr2l,f,c
  6937  000348  0100               	movlb	0	; () banked
  6938  00034A  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6939  00034C  22DA               	addwfc	fsr2h,f,c
  6940  00034E  50DF               	movf	indf2,w,c
  6941  000350  0100               	movlb	0	; () banked
  6942  000352  6F85               	movwf	??_i2c_int_handler& (0+255),b
  6943  000354  0100               	movlb	0	; () banked
  6944  000356  5185               	movf	??_i2c_int_handler& (0+255),w,b
  6945  000358  0D01               	mullw	1
  6946  00035A  50F3               	movf	prodl,w,c
  6947  00035C  0100               	movlb	0	; () banked
  6948  00035E  25D2               	addwf	_ic_ptr& (0+255),w,b
  6949  000360  6ED9               	movwf	fsr2l,c
  6950  000362  50F4               	movf	prodh,w,c
  6951  000364  0100               	movlb	0	; () banked
  6952  000366  21D3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6953  000368  6EDA               	movwf	fsr2h,c
  6954  00036A  0100               	movlb	0	; () banked
  6955  00036C  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;my_i2c.c: 217: ic_ptr->buflen++;
  6959  000370  0100               	movlb	0	; () banked
  6960  000372  EE20 F00E          	lfsr	2,14
  6961  000376  0100               	movlb	0	; () banked
  6962  000378  51D2               	movf	_ic_ptr& (0+255),w,b
  6963  00037A  26D9               	addwf	fsr2l,f,c
  6964  00037C  0100               	movlb	0	; () banked
  6965  00037E  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6966  000380  22DA               	addwfc	fsr2h,f,c
  6967  000382  2ADF               	incf	indf2,f,c
  6968  000384  D021               	goto	i2l3682
  6969  000386                     i2l3680:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;my_i2c.c: 220: ic_ptr->error_count++;
  6973  000386  0100               	movlb	0	; () banked
  6974  000388  EE20 F023          	lfsr	2,35
  6975  00038C  0100               	movlb	0	; () banked
  6976  00038E  51D2               	movf	_ic_ptr& (0+255),w,b
  6977  000390  26D9               	addwf	fsr2l,f,c
  6978  000392  0100               	movlb	0	; () banked
  6979  000394  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6980  000396  22DA               	addwfc	fsr2h,f,c
  6981  000398  2ADF               	incf	indf2,f,c
  6982                           
  6983                           ;my_i2c.c: 221: ic_ptr->error_code = 0x6;
  6984  00039A  0100               	movlb	0	; () banked
  6985  00039C  EE20 F022          	lfsr	2,34
  6986  0003A0  0100               	movlb	0	; () banked
  6987  0003A2  51D2               	movf	_ic_ptr& (0+255),w,b
  6988  0003A4  26D9               	addwf	fsr2l,f,c
  6989  0003A6  0100               	movlb	0	; () banked
  6990  0003A8  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  6991  0003AA  22DA               	addwfc	fsr2h,f,c
  6992  0003AC  0E06               	movlw	6
  6993  0003AE  6EDF               	movwf	indf2,c
  6994                           
  6995                           ;my_i2c.c: 222: ic_ptr->status = 0x5;
  6996  0003B0  0100               	movlb	0	; () banked
  6997  0003B2  EE20 F021          	lfsr	2,33
  6998  0003B6  0100               	movlb	0	; () banked
  6999  0003B8  51D2               	movf	_ic_ptr& (0+255),w,b
  7000  0003BA  26D9               	addwf	fsr2l,f,c
  7001  0003BC  0100               	movlb	0	; () banked
  7002  0003BE  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7003  0003C0  22DA               	addwfc	fsr2h,f,c
  7004  0003C2  0E05               	movlw	5
  7005  0003C4  6EDF               	movwf	indf2,c
  7006  0003C6  D0FC               	goto	L8
  7007  0003C8                     i2l3682:
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;my_i2c.c: 225: msg_ready = 1;
  7011  0003C8  0E01               	movlw	1
  7012  0003CA  0100               	movlb	0	; () banked
  7013  0003CC  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7014                           
  7015                           ; BSR set to: 0
  7016  0003CE  D0F8               	goto	L8
  7017  0003D0                     i2l3686:
  7018                           
  7019                           ;my_i2c.c: 229: else if (data_read)
  7020  0003D0  0100               	movlb	0	; () banked
  7021  0003D2  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7022  0003D4  B4D8               	btfsc	status,2,c
  7023  0003D6  D115               	goto	i2l301
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;my_i2c.c: 230: {
  7027                           ;my_i2c.c: 232: ic_ptr->event_count++;
  7028  0003D8  0100               	movlb	0	; () banked
  7029  0003DA  EE20 F020          	lfsr	2,32
  7030  0003DE  0100               	movlb	0	; () banked
  7031  0003E0  51D2               	movf	_ic_ptr& (0+255),w,b
  7032  0003E2  26D9               	addwf	fsr2l,f,c
  7033  0003E4  0100               	movlb	0	; () banked
  7034  0003E6  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7035  0003E8  22DA               	addwfc	fsr2h,f,c
  7036  0003EA  2ADF               	incf	indf2,f,c
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;my_i2c.c: 233: if (SSP1STATbits.D_A == 1) {
  7040  0003EC  AAC7               	btfss	4039,5,c	;volatile
  7041  0003EE  D025               	goto	i2l330
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;my_i2c.c: 234: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7045  0003F0  0100               	movlb	0	; () banked
  7046  0003F2  EE20 F00E          	lfsr	2,14
  7047  0003F6  0100               	movlb	0	; () banked
  7048  0003F8  51D2               	movf	_ic_ptr& (0+255),w,b
  7049  0003FA  26D9               	addwf	fsr2l,f,c
  7050  0003FC  0100               	movlb	0	; () banked
  7051  0003FE  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7052  000400  22DA               	addwfc	fsr2h,f,c
  7053  000402  50DF               	movf	indf2,w,c
  7054  000404  0100               	movlb	0	; () banked
  7055  000406  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7056  000408  0100               	movlb	0	; () banked
  7057  00040A  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7058  00040C  0D01               	mullw	1
  7059  00040E  50F3               	movf	prodl,w,c
  7060  000410  0100               	movlb	0	; () banked
  7061  000412  25D2               	addwf	_ic_ptr& (0+255),w,b
  7062  000414  6ED9               	movwf	fsr2l,c
  7063  000416  50F4               	movf	prodh,w,c
  7064  000418  0100               	movlb	0	; () banked
  7065  00041A  21D3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7066  00041C  6EDA               	movwf	fsr2h,c
  7067  00041E  0100               	movlb	0	; () banked
  7068  000420  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;my_i2c.c: 235: ic_ptr->buflen++;
  7072  000424  0100               	movlb	0	; () banked
  7073  000426  EE20 F00E          	lfsr	2,14
  7074  00042A  0100               	movlb	0	; () banked
  7075  00042C  51D2               	movf	_ic_ptr& (0+255),w,b
  7076  00042E  26D9               	addwf	fsr2l,f,c
  7077  000430  0100               	movlb	0	; () banked
  7078  000432  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7079  000434  22DA               	addwfc	fsr2h,f,c
  7080  000436  2ADF               	incf	indf2,f,c
  7081                           
  7082                           ;my_i2c.c: 236: }
  7083  000438  D0E4               	goto	i2l301
  7084  00043A                     i2l330:
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;my_i2c.c: 237: else
  7088                           ;my_i2c.c: 238: {
  7089                           ;my_i2c.c: 239: if (SSPSTATbits.R_W == 1)
  7090  00043A  A4C7               	btfss	4039,2,c	;volatile
  7091  00043C  D6B4               	goto	i2l3624
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;my_i2c.c: 240: {
  7095                           ;my_i2c.c: 241: blip();
  7096  00043E  EC39  F00E         	call	i2_blip	;wreg free
  7097                           
  7098                           ;my_i2c.c: 242: ic_ptr->status = 0x8;
  7099  000442  0100               	movlb	0	; () banked
  7100  000444  EE20 F021          	lfsr	2,33
  7101  000448  0100               	movlb	0	; () banked
  7102  00044A  51D2               	movf	_ic_ptr& (0+255),w,b
  7103  00044C  26D9               	addwf	fsr2l,f,c
  7104  00044E  0100               	movlb	0	; () banked
  7105  000450  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7106  000452  22DA               	addwfc	fsr2h,f,c
  7107  000454  0E08               	movlw	8
  7108  000456  6EDF               	movwf	indf2,c
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;my_i2c.c: 249: {
  7112                           ;my_i2c.c: 251: ic_ptr->outbuffer[0] = ic_ptr->buffer[0];
  7113                           
  7114                           ; BSR set to: 0
  7115                           
  7116                           ;my_i2c.c: 245: {
  7117                           ;my_i2c.c: 246: int l;
  7118                           ;my_i2c.c: 248: default:
  7119                           
  7120                           ;my_i2c.c: 244: switch( ic_ptr->buffer[0] )
  7121  000458  C0D2  FFD9         	movff	_ic_ptr,fsr2l
  7122  00045C  C0D3  FFDA         	movff	_ic_ptr+1,fsr2h
  7123  000460  0100               	movlb	0	; () banked
  7124  000462  EE10 F010          	lfsr	1,16
  7125  000466  0100               	movlb	0	; () banked
  7126  000468  51D2               	movf	_ic_ptr& (0+255),w,b
  7127  00046A  26E1               	addwf	fsr1l,f,c
  7128  00046C  0100               	movlb	0	; () banked
  7129  00046E  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7130  000470  22E2               	addwfc	fsr1h,f,c
  7131  000472  CFDF FFE7          	movff	indf2,indf1
  7132                           
  7133                           ;my_i2c.c: 252: ic_ptr->outbuffer[1] = ic_ptr->buffer[1];
  7134  000476  0100               	movlb	0	; () banked
  7135  000478  EE20 F001          	lfsr	2,1
  7136  00047C  0100               	movlb	0	; () banked
  7137  00047E  51D2               	movf	_ic_ptr& (0+255),w,b
  7138  000480  26D9               	addwf	fsr2l,f,c
  7139  000482  0100               	movlb	0	; () banked
  7140  000484  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7141  000486  22DA               	addwfc	fsr2h,f,c
  7142  000488  0100               	movlb	0	; () banked
  7143  00048A  EE10 F011          	lfsr	1,17
  7144  00048E  0100               	movlb	0	; () banked
  7145  000490  51D2               	movf	_ic_ptr& (0+255),w,b
  7146  000492  26E1               	addwf	fsr1l,f,c
  7147  000494  0100               	movlb	0	; () banked
  7148  000496  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7149  000498  22E2               	addwfc	fsr1h,f,c
  7150  00049A  CFDF FFE7          	movff	indf2,indf1
  7151                           
  7152                           ;my_i2c.c: 253: ic_ptr->outbuffer[2] = ic_ptr->buffer[2];
  7153  00049E  0100               	movlb	0	; () banked
  7154  0004A0  EE20 F002          	lfsr	2,2
  7155  0004A4  0100               	movlb	0	; () banked
  7156  0004A6  51D2               	movf	_ic_ptr& (0+255),w,b
  7157  0004A8  26D9               	addwf	fsr2l,f,c
  7158  0004AA  0100               	movlb	0	; () banked
  7159  0004AC  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7160  0004AE  22DA               	addwfc	fsr2h,f,c
  7161  0004B0  0100               	movlb	0	; () banked
  7162  0004B2  EE10 F012          	lfsr	1,18
  7163  0004B6  0100               	movlb	0	; () banked
  7164  0004B8  51D2               	movf	_ic_ptr& (0+255),w,b
  7165  0004BA  26E1               	addwf	fsr1l,f,c
  7166  0004BC  0100               	movlb	0	; () banked
  7167  0004BE  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7168  0004C0  22E2               	addwfc	fsr1h,f,c
  7169  0004C2  CFDF FFE7          	movff	indf2,indf1
  7170                           
  7171                           ;my_i2c.c: 254: ic_ptr->outbuffer[3] = ic_ptr->buffer[3];
  7172  0004C6  0100               	movlb	0	; () banked
  7173  0004C8  EE20 F003          	lfsr	2,3
  7174  0004CC  0100               	movlb	0	; () banked
  7175  0004CE  51D2               	movf	_ic_ptr& (0+255),w,b
  7176  0004D0  26D9               	addwf	fsr2l,f,c
  7177  0004D2  0100               	movlb	0	; () banked
  7178  0004D4  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7179  0004D6  22DA               	addwfc	fsr2h,f,c
  7180  0004D8  0100               	movlb	0	; () banked
  7181  0004DA  EE10 F013          	lfsr	1,19
  7182  0004DE  0100               	movlb	0	; () banked
  7183  0004E0  51D2               	movf	_ic_ptr& (0+255),w,b
  7184  0004E2  26E1               	addwf	fsr1l,f,c
  7185  0004E4  0100               	movlb	0	; () banked
  7186  0004E6  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7187  0004E8  22E2               	addwfc	fsr1h,f,c
  7188  0004EA  CFDF FFE7          	movff	indf2,indf1
  7189                           
  7190                           ;my_i2c.c: 255: ic_ptr->outbuffer[4] = ic_ptr->buffer[4];
  7191  0004EE  0100               	movlb	0	; () banked
  7192  0004F0  EE20 F004          	lfsr	2,4
  7193  0004F4  0100               	movlb	0	; () banked
  7194  0004F6  51D2               	movf	_ic_ptr& (0+255),w,b
  7195  0004F8  26D9               	addwf	fsr2l,f,c
  7196  0004FA  0100               	movlb	0	; () banked
  7197  0004FC  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7198  0004FE  22DA               	addwfc	fsr2h,f,c
  7199  000500  0100               	movlb	0	; () banked
  7200  000502  EE10 F014          	lfsr	1,20
  7201  000506  0100               	movlb	0	; () banked
  7202  000508  51D2               	movf	_ic_ptr& (0+255),w,b
  7203  00050A  26E1               	addwf	fsr1l,f,c
  7204  00050C  0100               	movlb	0	; () banked
  7205  00050E  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7206  000510  22E2               	addwfc	fsr1h,f,c
  7207  000512  CFDF FFE7          	movff	indf2,indf1
  7208                           
  7209                           ;my_i2c.c: 256: ic_ptr->outbuffer[5] = ic_ptr->buffer[5];
  7210  000516  0100               	movlb	0	; () banked
  7211  000518  EE20 F005          	lfsr	2,5
  7212  00051C  0100               	movlb	0	; () banked
  7213  00051E  51D2               	movf	_ic_ptr& (0+255),w,b
  7214  000520  26D9               	addwf	fsr2l,f,c
  7215  000522  0100               	movlb	0	; () banked
  7216  000524  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7217  000526  22DA               	addwfc	fsr2h,f,c
  7218  000528  0100               	movlb	0	; () banked
  7219  00052A  EE10 F015          	lfsr	1,21
  7220  00052E  0100               	movlb	0	; () banked
  7221  000530  51D2               	movf	_ic_ptr& (0+255),w,b
  7222  000532  26E1               	addwf	fsr1l,f,c
  7223  000534  0100               	movlb	0	; () banked
  7224  000536  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7225  000538  22E2               	addwfc	fsr1h,f,c
  7226  00053A  CFDF FFE7          	movff	indf2,indf1
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;my_i2c.c: 261: ic_ptr->outbuflen = 6;
  7230                           
  7231                           ; BSR set to: 0
  7232                           
  7233                           ; BSR set to: 0
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;my_i2c.c: 258: }
  7237                           ;my_i2c.c: 259: }
  7238                           
  7239                           ;my_i2c.c: 257: break;
  7240  00053E  0100               	movlb	0	; () banked
  7241  000540  EE20 F01F          	lfsr	2,31
  7242  000544  0100               	movlb	0	; () banked
  7243  000546  51D2               	movf	_ic_ptr& (0+255),w,b
  7244  000548  26D9               	addwf	fsr2l,f,c
  7245  00054A  0100               	movlb	0	; () banked
  7246  00054C  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7247  00054E  22DA               	addwfc	fsr2h,f,c
  7248  000550  0E06               	movlw	6
  7249  000552  6EDF               	movwf	indf2,c
  7250                           
  7251                           ;my_i2c.c: 262: ic_ptr->outbufind = 0;
  7252  000554  0100               	movlb	0	; () banked
  7253  000556  EE20 F01E          	lfsr	2,30
  7254  00055A  0100               	movlb	0	; () banked
  7255  00055C  51D2               	movf	_ic_ptr& (0+255),w,b
  7256  00055E  26D9               	addwf	fsr2l,f,c
  7257  000560  0100               	movlb	0	; () banked
  7258  000562  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7259  000564  22DA               	addwfc	fsr2h,f,c
  7260  000566  0E00               	movlw	0
  7261  000568  6EDF               	movwf	indf2,c
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;my_i2c.c: 263: msg_ready = 1;
  7265  00056A  0E01               	movlw	1
  7266  00056C  0100               	movlb	0	; () banked
  7267  00056E  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;my_i2c.c: 264: msg_to_send = 1;
  7271  000570  0E01               	movlw	1
  7272  000572  0100               	movlb	0	; () banked
  7273  000574  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;my_i2c.c: 266: data_read = 0;
  7277  000576  0E00               	movlw	0
  7278  000578  0100               	movlb	0	; () banked
  7279  00057A  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;my_i2c.c: 267: ic_ptr->outbufind = 0;
  7283  00057C  0100               	movlb	0	; () banked
  7284  00057E  EE20 F01E          	lfsr	2,30
  7285  000582  0100               	movlb	0	; () banked
  7286  000584  51D2               	movf	_ic_ptr& (0+255),w,b
  7287  000586  26D9               	addwf	fsr2l,f,c
  7288  000588  0100               	movlb	0	; () banked
  7289  00058A  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7290  00058C  22DA               	addwfc	fsr2h,f,c
  7291  00058E  0E00               	movlw	0
  7292  000590  6EDF               	movwf	indf2,c
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;my_i2c.c: 268: SSPBUF = ic_ptr->outbuffer[0];
  7296  000592  0100               	movlb	0	; () banked
  7297  000594  EE20 F010          	lfsr	2,16
  7298  000598  0100               	movlb	0	; () banked
  7299  00059A  51D2               	movf	_ic_ptr& (0+255),w,b
  7300  00059C  26D9               	addwf	fsr2l,f,c
  7301  00059E  0100               	movlb	0	; () banked
  7302  0005A0  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7303  0005A2  22DA               	addwfc	fsr2h,f,c
  7304  0005A4  50DF               	movf	indf2,w,c
  7305  0005A6  6EC9               	movwf	4041,c	;volatile
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;my_i2c.c: 269: ic_ptr->outbufind++;
  7309  0005A8  0100               	movlb	0	; () banked
  7310  0005AA  EE20 F01E          	lfsr	2,30
  7311  0005AE  0100               	movlb	0	; () banked
  7312  0005B0  51D2               	movf	_ic_ptr& (0+255),w,b
  7313  0005B2  26D9               	addwf	fsr2l,f,c
  7314  0005B4  0100               	movlb	0	; () banked
  7315  0005B6  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7316  0005B8  22DA               	addwfc	fsr2h,f,c
  7317  0005BA  2ADF               	incf	indf2,f,c
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;my_i2c.c: 270: SSPCON1bits.CKP = 1;
  7321  0005BC  88C6               	bsf	4038,4,c	;volatile
  7322                           
  7323                           ;my_i2c.c: 271: }
  7324  0005BE  D021               	goto	i2l301
  7325  0005C0                     L8:
  7326                           
  7327                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  7328  0005C0  0100               	movlb	0	; () banked
  7329  0005C2  EE20 F021          	lfsr	2,33
  7330  0005C6  0100               	movlb	0	; () banked
  7331  0005C8  51D2               	movf	_ic_ptr& (0+255),w,b
  7332  0005CA  26D9               	addwf	fsr2l,f,c
  7333  0005CC  0100               	movlb	0	; () banked
  7334  0005CE  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7335  0005D0  22DA               	addwfc	fsr2h,f,c
  7336  0005D2  0E05               	movlw	5
  7337  0005D4  D69D               	goto	L6
  7338  0005D6                     i2l3724:
  7339                           
  7340                           ; BSR set to: 0
  7341  0005D6  0100               	movlb	0	; () banked
  7342  0005D8  EE20 F021          	lfsr	2,33
  7343  0005DC  0100               	movlb	0	; () banked
  7344  0005DE  51D2               	movf	_ic_ptr& (0+255),w,b
  7345  0005E0  26D9               	addwf	fsr2l,f,c
  7346  0005E2  0100               	movlb	0	; () banked
  7347  0005E4  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7348  0005E6  22DA               	addwfc	fsr2h,f,c
  7349  0005E8  50DF               	movf	indf2,w,c
  7350                           
  7351                           ; Switch size 1, requested type "space"
  7352                           ; Number of cases is 4, Range of values is 5 to 8
  7353                           ; switch strategies available:
  7354                           ; Name         Instructions Cycles
  7355                           ; simple_byte           13     7 (average)
  7356                           ;	Chosen strategy is simple_byte
  7357  0005EA  0A05               	xorlw	5	; case 5
  7358  0005EC  B4D8               	btfsc	status,2,c
  7359  0005EE  D5AC               	goto	i2l303
  7360  0005F0  0A03               	xorlw	3	; case 6
  7361  0005F2  B4D8               	btfsc	status,2,c
  7362  0005F4  D5C2               	goto	i2l307
  7363  0005F6  0A01               	xorlw	1	; case 7
  7364  0005F8  B4D8               	btfsc	status,2,c
  7365  0005FA  D68C               	goto	i2l3664
  7366  0005FC  0A0F               	xorlw	15	; case 8
  7367  0005FE  B4D8               	btfsc	status,2,c
  7368  000600  D644               	goto	i2l3648
  7369  000602                     i2l301:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;my_i2c.c: 283: }
  7373                           ;my_i2c.c: 286: if (data_read || data_written) {
  7374  000602  0100               	movlb	0	; () banked
  7375  000604  678E               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7376  000606  D004               	goto	i2l339
  7377                           
  7378                           ; BSR set to: 0
  7379  000608  0100               	movlb	0	; () banked
  7380  00060A  5189               	movf	i2c_int_handler@data_written& (0+255),w,b
  7381  00060C  B4D8               	btfsc	status,2,c
  7382  00060E  D002               	goto	i2l3730
  7383  000610                     i2l339:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;my_i2c.c: 288: if (SSPCON1bits.CKP == 0) {
  7387  000610  A8C6               	btfss	4038,4,c	;volatile
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;my_i2c.c: 289: SSPCON1bits.CKP = 1;
  7391  000612  88C6               	bsf	4038,4,c	;volatile
  7392  000614                     i2l3730:
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;my_i2c.c: 290: }
  7396                           ;my_i2c.c: 291: }
  7397                           ;my_i2c.c: 296: if ((ic_ptr->buflen > 14 - 2) && (!msg_ready)) {
  7398  000614  0100               	movlb	0	; () banked
  7399  000616  EE20 F00E          	lfsr	2,14
  7400  00061A  0100               	movlb	0	; () banked
  7401  00061C  51D2               	movf	_ic_ptr& (0+255),w,b
  7402  00061E  26D9               	addwf	fsr2l,f,c
  7403  000620  0100               	movlb	0	; () banked
  7404  000622  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7405  000624  22DA               	addwfc	fsr2h,f,c
  7406  000626  0E0C               	movlw	12
  7407  000628  64DF               	cpfsgt	indf2,c
  7408  00062A  D023               	goto	i2l3736
  7409                           
  7410                           ; BSR set to: 0
  7411  00062C  0100               	movlb	0	; () banked
  7412  00062E  678D               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7413  000630  D020               	goto	i2l3736
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;my_i2c.c: 297: ic_ptr->status = 0x5;
  7417  000632  0100               	movlb	0	; () banked
  7418  000634  EE20 F021          	lfsr	2,33
  7419  000638  0100               	movlb	0	; () banked
  7420  00063A  51D2               	movf	_ic_ptr& (0+255),w,b
  7421  00063C  26D9               	addwf	fsr2l,f,c
  7422  00063E  0100               	movlb	0	; () banked
  7423  000640  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7424  000642  22DA               	addwfc	fsr2h,f,c
  7425  000644  0E05               	movlw	5
  7426  000646  6EDF               	movwf	indf2,c
  7427                           
  7428                           ;my_i2c.c: 298: ic_ptr->error_count++;
  7429  000648  0100               	movlb	0	; () banked
  7430  00064A  EE20 F023          	lfsr	2,35
  7431  00064E  0100               	movlb	0	; () banked
  7432  000650  51D2               	movf	_ic_ptr& (0+255),w,b
  7433  000652  26D9               	addwf	fsr2l,f,c
  7434  000654  0100               	movlb	0	; () banked
  7435  000656  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7436  000658  22DA               	addwfc	fsr2h,f,c
  7437  00065A  2ADF               	incf	indf2,f,c
  7438                           
  7439                           ;my_i2c.c: 299: ic_ptr->error_code = 0x7;
  7440  00065C  0100               	movlb	0	; () banked
  7441  00065E  EE20 F022          	lfsr	2,34
  7442  000662  0100               	movlb	0	; () banked
  7443  000664  51D2               	movf	_ic_ptr& (0+255),w,b
  7444  000666  26D9               	addwf	fsr2l,f,c
  7445  000668  0100               	movlb	0	; () banked
  7446  00066A  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7447  00066C  22DA               	addwfc	fsr2h,f,c
  7448  00066E  0E07               	movlw	7
  7449  000670  6EDF               	movwf	indf2,c
  7450  000672                     i2l3736:
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;my_i2c.c: 300: }
  7454                           ;my_i2c.c: 302: if (msg_ready) {
  7455  000672  0100               	movlb	0	; () banked
  7456  000674  518D               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7457  000676  B4D8               	btfsc	status,2,c
  7458  000678  D03F               	goto	i2l3744
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;my_i2c.c: 303: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7462  00067A  0100               	movlb	0	; () banked
  7463  00067C  EE20 F020          	lfsr	2,32
  7464  000680  0100               	movlb	0	; () banked
  7465  000682  51D2               	movf	_ic_ptr& (0+255),w,b
  7466  000684  26D9               	addwf	fsr2l,f,c
  7467  000686  0100               	movlb	0	; () banked
  7468  000688  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7469  00068A  22DA               	addwfc	fsr2h,f,c
  7470  00068C  0100               	movlb	0	; () banked
  7471  00068E  EE10 F00E          	lfsr	1,14
  7472  000692  0100               	movlb	0	; () banked
  7473  000694  51D2               	movf	_ic_ptr& (0+255),w,b
  7474  000696  26E1               	addwf	fsr1l,f,c
  7475  000698  0100               	movlb	0	; () banked
  7476  00069A  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7477  00069C  22E2               	addwfc	fsr1h,f,c
  7478  00069E  50E7               	movf	indf1,w,c
  7479  0006A0  0100               	movlb	0	; () banked
  7480  0006A2  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7481  0006A4  0100               	movlb	0	; () banked
  7482  0006A6  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7483  0006A8  0D01               	mullw	1
  7484  0006AA  50F3               	movf	prodl,w,c
  7485  0006AC  0100               	movlb	0	; () banked
  7486  0006AE  25D2               	addwf	_ic_ptr& (0+255),w,b
  7487  0006B0  6EE1               	movwf	fsr1l,c
  7488  0006B2  50F4               	movf	prodh,w,c
  7489  0006B4  0100               	movlb	0	; () banked
  7490  0006B6  21D3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7491  0006B8  6EE2               	movwf	fsr1h,c
  7492  0006BA  CFDF FFE7          	movff	indf2,indf1
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;my_i2c.c: 304: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7496  0006BE  0E28               	movlw	40
  7497  0006C0  0100               	movlb	0	; () banked
  7498  0006C2  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7499  0006C4  0100               	movlb	0	; () banked
  7500  0006C6  C0D3  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7501  0006CA  0100               	movlb	0	; () banked
  7502  0006CC  C0D2  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7503  0006D0  0100               	movlb	0	; () banked
  7504  0006D2  EE20 F00E          	lfsr	2,14
  7505  0006D6  0100               	movlb	0	; () banked
  7506  0006D8  51D2               	movf	_ic_ptr& (0+255),w,b
  7507  0006DA  26D9               	addwf	fsr2l,f,c
  7508  0006DC  0100               	movlb	0	; () banked
  7509  0006DE  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7510  0006E0  22DA               	addwfc	fsr2h,f,c
  7511  0006E2  50DF               	movf	indf2,w,c
  7512  0006E4  0100               	movlb	0	; () banked
  7513  0006E6  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7514  0006E8  0100               	movlb	0	; () banked
  7515  0006EA  2985               	incf	??_i2c_int_handler& (0+255),w,b
  7516  0006EC  EC5B  F00D         	call	_ToMainHigh_sendmsg
  7517                           
  7518                           ;my_i2c.c: 305: ic_ptr->buflen = 0;
  7519  0006F0  0100               	movlb	0	; () banked
  7520  0006F2  EE20 F00E          	lfsr	2,14
  7521  0006F6  D041               	goto	L7
  7522  0006F8                     i2l3744:
  7523                           
  7524                           ; BSR set to: 0
  7525  0006F8  0100               	movlb	0	; () banked
  7526  0006FA  EE20 F023          	lfsr	2,35
  7527  0006FE  0100               	movlb	0	; () banked
  7528  000700  51D2               	movf	_ic_ptr& (0+255),w,b
  7529  000702  26D9               	addwf	fsr2l,f,c
  7530  000704  0100               	movlb	0	; () banked
  7531  000706  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7532  000708  22DA               	addwfc	fsr2h,f,c
  7533  00070A  50DF               	movf	indf2,w,c
  7534  00070C  B4D8               	btfsc	status,2,c
  7535  00070E  D03D               	goto	i2l3752
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;my_i2c.c: 307: error_buf[0] = ic_ptr->error_count;
  7539  000710  0100               	movlb	0	; () banked
  7540  000712  EE20 F023          	lfsr	2,35
  7541  000716  0100               	movlb	0	; () banked
  7542  000718  51D2               	movf	_ic_ptr& (0+255),w,b
  7543  00071A  26D9               	addwf	fsr2l,f,c
  7544  00071C  0100               	movlb	0	; () banked
  7545  00071E  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7546  000720  22DA               	addwfc	fsr2h,f,c
  7547  000722  50DF               	movf	indf2,w,c
  7548  000724  0100               	movlb	0	; () banked
  7549  000726  6F86               	movwf	i2c_int_handler@error_buf& (0+255),b
  7550                           
  7551                           ;my_i2c.c: 308: error_buf[1] = ic_ptr->error_code;
  7552  000728  0100               	movlb	0	; () banked
  7553  00072A  EE20 F022          	lfsr	2,34
  7554  00072E  0100               	movlb	0	; () banked
  7555  000730  51D2               	movf	_ic_ptr& (0+255),w,b
  7556  000732  26D9               	addwf	fsr2l,f,c
  7557  000734  0100               	movlb	0	; () banked
  7558  000736  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7559  000738  22DA               	addwfc	fsr2h,f,c
  7560  00073A  50DF               	movf	indf2,w,c
  7561  00073C  0100               	movlb	0	; () banked
  7562  00073E  6F87               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7563                           
  7564                           ;my_i2c.c: 309: error_buf[2] = ic_ptr->event_count;
  7565  000740  0100               	movlb	0	; () banked
  7566  000742  EE20 F020          	lfsr	2,32
  7567  000746  0100               	movlb	0	; () banked
  7568  000748  51D2               	movf	_ic_ptr& (0+255),w,b
  7569  00074A  26D9               	addwf	fsr2l,f,c
  7570  00074C  0100               	movlb	0	; () banked
  7571  00074E  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7572  000750  22DA               	addwfc	fsr2h,f,c
  7573  000752  50DF               	movf	indf2,w,c
  7574  000754  0100               	movlb	0	; () banked
  7575  000756  6F88               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;my_i2c.c: 310: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7579  000758  0E29               	movlw	41
  7580  00075A  0100               	movlb	0	; () banked
  7581  00075C  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7582  00075E  0100               	movlb	0	; () banked
  7583  000760  0E00               	movlw	high i2c_int_handler@error_buf
  7584  000762  0100               	movlb	0	; () banked
  7585  000764  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7586  000766  0100               	movlb	0	; () banked
  7587  000768  0E86               	movlw	low i2c_int_handler@error_buf
  7588  00076A  0100               	movlb	0	; () banked
  7589  00076C  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7590  00076E  0E03               	movlw	3
  7591  000770  EC5B  F00D         	call	_ToMainHigh_sendmsg
  7592                           
  7593                           ;my_i2c.c: 311: ic_ptr->error_count = 0;
  7594  000774  0100               	movlb	0	; () banked
  7595  000776  EE20 F023          	lfsr	2,35
  7596  00077A                     L7:
  7597  00077A  0100               	movlb	0	; () banked
  7598  00077C  51D2               	movf	_ic_ptr& (0+255),w,b
  7599  00077E  26D9               	addwf	fsr2l,f,c
  7600  000780  0100               	movlb	0	; () banked
  7601  000782  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  7602  000784  22DA               	addwfc	fsr2h,f,c
  7603  000786  0E00               	movlw	0
  7604  000788  6EDF               	movwf	indf2,c
  7605  00078A                     i2l3752:
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;my_i2c.c: 312: }
  7609                           ;my_i2c.c: 313: if (msg_to_send) {
  7610  00078A  0100               	movlb	0	; () banked
  7611  00078C  518C               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7612  00078E  B4D8               	btfsc	status,2,c
  7613  000790  D00F               	goto	i2l3758
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;my_i2c.c: 315: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7617  000792  0E2A               	movlw	42
  7618  000794  0100               	movlb	0	; () banked
  7619  000796  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7620  000798  0100               	movlb	0	; () banked
  7621  00079A  C0D3  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7622  00079E  0100               	movlb	0	; () banked
  7623  0007A0  C0D2  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7624  0007A4  0E00               	movlw	0
  7625  0007A6  EC5B  F00D         	call	_ToMainHigh_sendmsg
  7626                           
  7627                           ;my_i2c.c: 316: msg_to_send = 0;
  7628  0007AA  0E00               	movlw	0
  7629  0007AC  0100               	movlb	0	; () banked
  7630  0007AE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7631  0007B0                     i2l3758:
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;my_i2c.c: 317: }
  7635                           ;my_i2c.c: 319: retrieve_sensor_values( sensor_bank_side , sensor_bank_front , sensor_ba
      +                          nk_ventril );
  7636  0007B0  0100               	movlb	0	; () banked
  7637  0007B2  0E00               	movlw	high i2c_int_handler@sensor_bank_side
  7638  0007B4  0100               	movlb	0	; () banked
  7639  0007B6  6F7E               	movwf	(retrieve_sensor_values@sensor_bank_side+1)& (0+255),b
  7640  0007B8  0100               	movlb	0	; () banked
  7641  0007BA  0EC4               	movlw	low i2c_int_handler@sensor_bank_side
  7642  0007BC  0100               	movlb	0	; () banked
  7643  0007BE  6F7D               	movwf	retrieve_sensor_values@sensor_bank_side& (0+255),b
  7644  0007C0  0E00               	movlw	high i2c_int_handler@sensor_bank_front
  7645  0007C2  0100               	movlb	0	; () banked
  7646  0007C4  6F80               	movwf	(retrieve_sensor_values@sensor_bank_front+1)& (0+255),b
  7647  0007C6  0E4F               	movlw	low i2c_int_handler@sensor_bank_front
  7648  0007C8  0100               	movlb	0	; () banked
  7649  0007CA  6F7F               	movwf	retrieve_sensor_values@sensor_bank_front& (0+255),b
  7650  0007CC  0101               	movlb	1	; () banked
  7651  0007CE  0E01               	movlw	high i2c_int_handler@sensor_bank_ventril
  7652  0007D0  0100               	movlb	0	; () banked
  7653  0007D2  6F82               	movwf	(retrieve_sensor_values@sensor_bank_ventril+1)& (0+255),b
  7654  0007D4  0101               	movlb	1	; () banked
  7655  0007D6  0E8A               	movlw	low i2c_int_handler@sensor_bank_ventril
  7656  0007D8  0100               	movlb	0	; () banked
  7657  0007DA  6F81               	movwf	retrieve_sensor_values@sensor_bank_ventril& (0+255),b
  7658  0007DC  EC8A  F00C         	call	_retrieve_sensor_values	;wreg free
  7659  0007E0  0012               	return	
  7660  0007E2                     __end_of_i2c_int_handler:
  7661                           	opt stack 0
  7662                           pclatu	equ	0xFFB
  7663                           pclath	equ	0xFFA
  7664                           tblptru	equ	0xFF8
  7665                           tblptrh	equ	0xFF7
  7666                           tblptrl	equ	0xFF6
  7667                           tablat	equ	0xFF5
  7668                           prodh	equ	0xFF4
  7669                           prodl	equ	0xFF3
  7670                           intcon	equ	0xFF2
  7671                           postinc0	equ	0xFEE
  7672                           fsr0h	equ	0xFEA
  7673                           fsr0l	equ	0xFE9
  7674                           wreg	equ	0xFE8
  7675                           indf1	equ	0xFE7
  7676                           fsr1h	equ	0xFE2
  7677                           fsr1l	equ	0xFE1
  7678                           bsr	equ	0xFE0
  7679                           indf2	equ	0xFDF
  7680                           postinc2	equ	0xFDE
  7681                           postdec2	equ	0xFDD
  7682                           fsr2h	equ	0xFDA
  7683                           fsr2l	equ	0xFD9
  7684                           status	equ	0xFD8
  7685                           
  7686 ;; *************** function i2_blip3 *****************
  7687 ;; Defined at:
  7688 ;;		line 32 in file "../src/debug.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;		None
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;		None               void
  7695 ;; Registers used:
  7696 ;;		None
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7706 ;;Total ram usage:        0 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_i2c_int_handler
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text43
  7716  001C5A                     __ptext43:
  7717                           	opt stack 0
  7718  001C5A                     i2_blip3:
  7719                           	opt stack 19
  7720                           
  7721                           ;debug.c: 34: LATDbits.LD6 = 0;
  7722                           
  7723                           ;incstack = 0
  7724  001C5A  9C8C               	bcf	3980,6,c	;volatile
  7725                           
  7726                           ;debug.c: 35: LATDbits.LD6 = 1;
  7727  001C5C  8C8C               	bsf	3980,6,c	;volatile
  7728                           
  7729                           ;debug.c: 36: LATDbits.LD6 = 0;
  7730  001C5E  9C8C               	bcf	3980,6,c	;volatile
  7731  001C60  0012               	return	
  7732  001C62                     __end_ofi2_blip3:
  7733                           	opt stack 0
  7734                           pclatu	equ	0xFFB
  7735                           pclath	equ	0xFFA
  7736                           tblptru	equ	0xFF8
  7737                           tblptrh	equ	0xFF7
  7738                           tblptrl	equ	0xFF6
  7739                           tablat	equ	0xFF5
  7740                           prodh	equ	0xFF4
  7741                           prodl	equ	0xFF3
  7742                           intcon	equ	0xFF2
  7743                           postinc0	equ	0xFEE
  7744                           fsr0h	equ	0xFEA
  7745                           fsr0l	equ	0xFE9
  7746                           wreg	equ	0xFE8
  7747                           indf1	equ	0xFE7
  7748                           fsr1h	equ	0xFE2
  7749                           fsr1l	equ	0xFE1
  7750                           bsr	equ	0xFE0
  7751                           indf2	equ	0xFDF
  7752                           postinc2	equ	0xFDE
  7753                           postdec2	equ	0xFDD
  7754                           fsr2h	equ	0xFDA
  7755                           fsr2l	equ	0xFD9
  7756                           status	equ	0xFD8
  7757                           
  7758 ;; *************** function i2_blip2 *****************
  7759 ;; Defined at:
  7760 ;;		line 25 in file "../src/debug.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;		None               void
  7767 ;; Registers used:
  7768 ;;		None
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;Total ram usage:        0 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_i2c_int_handler
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text44
  7788  001C62                     __ptext44:
  7789                           	opt stack 0
  7790  001C62                     i2_blip2:
  7791                           	opt stack 19
  7792                           
  7793                           ;debug.c: 27: LATDbits.LD5 = 0;
  7794                           
  7795                           ;incstack = 0
  7796  001C62  9A8C               	bcf	3980,5,c	;volatile
  7797                           
  7798                           ;debug.c: 28: LATDbits.LD5 = 1;
  7799  001C64  8A8C               	bsf	3980,5,c	;volatile
  7800                           
  7801                           ;debug.c: 29: LATDbits.LD5 = 0;
  7802  001C66  9A8C               	bcf	3980,5,c	;volatile
  7803  001C68  0012               	return	
  7804  001C6A                     __end_ofi2_blip2:
  7805                           	opt stack 0
  7806                           pclatu	equ	0xFFB
  7807                           pclath	equ	0xFFA
  7808                           tblptru	equ	0xFF8
  7809                           tblptrh	equ	0xFF7
  7810                           tblptrl	equ	0xFF6
  7811                           tablat	equ	0xFF5
  7812                           prodh	equ	0xFF4
  7813                           prodl	equ	0xFF3
  7814                           intcon	equ	0xFF2
  7815                           postinc0	equ	0xFEE
  7816                           fsr0h	equ	0xFEA
  7817                           fsr0l	equ	0xFE9
  7818                           wreg	equ	0xFE8
  7819                           indf1	equ	0xFE7
  7820                           fsr1h	equ	0xFE2
  7821                           fsr1l	equ	0xFE1
  7822                           bsr	equ	0xFE0
  7823                           indf2	equ	0xFDF
  7824                           postinc2	equ	0xFDE
  7825                           postdec2	equ	0xFDD
  7826                           fsr2h	equ	0xFDA
  7827                           fsr2l	equ	0xFD9
  7828                           status	equ	0xFD8
  7829                           
  7830 ;; *************** function i2_blip1 *****************
  7831 ;; Defined at:
  7832 ;;		line 18 in file "../src/debug.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;		None               void
  7839 ;; Registers used:
  7840 ;;		None
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; This function calls:
  7853 ;;		Nothing
  7854 ;; This function is called by:
  7855 ;;		_i2c_int_handler
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text45
  7860  001C6A                     __ptext45:
  7861                           	opt stack 0
  7862  001C6A                     i2_blip1:
  7863                           	opt stack 19
  7864                           
  7865                           ;debug.c: 20: LATDbits.LD4 = 0;
  7866                           
  7867                           ;incstack = 0
  7868  001C6A  988C               	bcf	3980,4,c	;volatile
  7869                           
  7870                           ;debug.c: 21: LATDbits.LD4 = 1;
  7871  001C6C  888C               	bsf	3980,4,c	;volatile
  7872                           
  7873                           ;debug.c: 22: LATDbits.LD4 = 0;
  7874  001C6E  988C               	bcf	3980,4,c	;volatile
  7875  001C70  0012               	return	
  7876  001C72                     __end_ofi2_blip1:
  7877                           	opt stack 0
  7878                           pclatu	equ	0xFFB
  7879                           pclath	equ	0xFFA
  7880                           tblptru	equ	0xFF8
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           prodh	equ	0xFF4
  7885                           prodl	equ	0xFF3
  7886                           intcon	equ	0xFF2
  7887                           postinc0	equ	0xFEE
  7888                           fsr0h	equ	0xFEA
  7889                           fsr0l	equ	0xFE9
  7890                           wreg	equ	0xFE8
  7891                           indf1	equ	0xFE7
  7892                           fsr1h	equ	0xFE2
  7893                           fsr1l	equ	0xFE1
  7894                           bsr	equ	0xFE0
  7895                           indf2	equ	0xFDF
  7896                           postinc2	equ	0xFDE
  7897                           postdec2	equ	0xFDD
  7898                           fsr2h	equ	0xFDA
  7899                           fsr2l	equ	0xFD9
  7900                           status	equ	0xFD8
  7901                           
  7902 ;; *************** function i2_blip *****************
  7903 ;; Defined at:
  7904 ;;		line 11 in file "../src/debug.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;		None               void
  7911 ;; Registers used:
  7912 ;;		None
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_i2c_int_handler
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text46
  7932  001C72                     __ptext46:
  7933                           	opt stack 0
  7934  001C72                     i2_blip:
  7935                           	opt stack 19
  7936                           
  7937                           ;debug.c: 13: LATDbits.LD2 = 0;
  7938                           
  7939                           ;incstack = 0
  7940  001C72  948C               	bcf	3980,2,c	;volatile
  7941                           
  7942                           ;debug.c: 14: LATDbits.LD2 = 1;
  7943  001C74  848C               	bsf	3980,2,c	;volatile
  7944                           
  7945                           ;debug.c: 15: LATDbits.LD2 = 0;
  7946  001C76  948C               	bcf	3980,2,c	;volatile
  7947  001C78  0012               	return	
  7948  001C7A                     __end_ofi2_blip:
  7949                           	opt stack 0
  7950                           pclatu	equ	0xFFB
  7951                           pclath	equ	0xFFA
  7952                           tblptru	equ	0xFF8
  7953                           tblptrh	equ	0xFF7
  7954                           tblptrl	equ	0xFF6
  7955                           tablat	equ	0xFF5
  7956                           prodh	equ	0xFF4
  7957                           prodl	equ	0xFF3
  7958                           intcon	equ	0xFF2
  7959                           postinc0	equ	0xFEE
  7960                           fsr0h	equ	0xFEA
  7961                           fsr0l	equ	0xFE9
  7962                           wreg	equ	0xFE8
  7963                           indf1	equ	0xFE7
  7964                           fsr1h	equ	0xFE2
  7965                           fsr1l	equ	0xFE1
  7966                           bsr	equ	0xFE0
  7967                           indf2	equ	0xFDF
  7968                           postinc2	equ	0xFDE
  7969                           postdec2	equ	0xFDD
  7970                           fsr2h	equ	0xFDA
  7971                           fsr2l	equ	0xFD9
  7972                           status	equ	0xFD8
  7973                           
  7974 ;; *************** function _retrieve_sensor_values *****************
  7975 ;; Defined at:
  7976 ;;		line 394 in file "../src/my_i2c.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  sensor_bank_    2   29[BANK0 ] PTR unsigned char 
  7979 ;;		 -> i2c_int_handler@sensor_bank_side(14), 
  7980 ;;  sensor_bank_    2   31[BANK0 ] PTR unsigned char 
  7981 ;;		 -> i2c_int_handler@sensor_bank_front(14), 
  7982 ;;  sensor_bank_    2   33[BANK0 ] PTR unsigned char 
  7983 ;;		 -> i2c_int_handler@sensor_bank_ventril(14), 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  i               2    0        int 
  7986 ;;  msgtype         1   36[BANK0 ] unsigned char 
  7987 ;;  length          1   35[BANK0 ] char 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;		None               void
  7990 ;; Registers used:
  7991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7997 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8000 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8001 ;;Total ram usage:        8 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    3
  8004 ;; This function calls:
  8005 ;;		_FromMainHigh_recvmsg
  8006 ;; This function is called by:
  8007 ;;		_i2c_int_handler
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text47
  8012  001914                     __ptext47:
  8013                           	opt stack 0
  8014  001914                     _retrieve_sensor_values:
  8015                           	opt stack 16
  8016                           
  8017                           ;my_i2c.c: 396: unsigned char msgtype = 40;
  8018                           
  8019                           ;incstack = 0
  8020  001914  0E28               	movlw	40
  8021  001916  0100               	movlb	0	; () banked
  8022  001918  6F84               	movwf	retrieve_sensor_values@msgtype& (0+255),b
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;my_i2c.c: 398: int i;
  8026                           ;my_i2c.c: 399: signed char length = FromMainHigh_recvmsg( 14 , &msgtype , (void *)senso
      +                          r_bank_side );
  8027  00191A  0100               	movlb	0	; () banked
  8028  00191C  0E00               	movlw	high retrieve_sensor_values@msgtype
  8029  00191E  0100               	movlb	0	; () banked
  8030  001920  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  8031  001922  0100               	movlb	0	; () banked
  8032  001924  0E84               	movlw	low retrieve_sensor_values@msgtype
  8033  001926  0100               	movlb	0	; () banked
  8034  001928  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  8035  00192A  0100               	movlb	0	; () banked
  8036  00192C  C07E  F07B         	movff	retrieve_sensor_values@sensor_bank_side+1,FromMainHigh_recvmsg@data+1
  8037  001930  0100               	movlb	0	; () banked
  8038  001932  C07D  F07A         	movff	retrieve_sensor_values@sensor_bank_side,FromMainHigh_recvmsg@data
  8039  001936  0E0E               	movlw	14
  8040  001938  ECF9  F00C         	call	_FromMainHigh_recvmsg
  8041  00193C  0100               	movlb	0	; () banked
  8042  00193E  6F83               	movwf	retrieve_sensor_values@length& (0+255),b
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;my_i2c.c: 407: }
  8046                           ;my_i2c.c: 411: *need_sensor_data = 1;
  8047                           
  8048                           ; BSR set to: 0
  8049                           
  8050                           ; BSR set to: 0
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;my_i2c.c: 403: }
  8054                           
  8055                           ; BSR set to: 0
  8056  001940  C0AF  FFD9         	movff	_need_sensor_data,fsr2l
  8057  001944  C0B0  FFDA         	movff	_need_sensor_data+1,fsr2h
  8058  001948  0E01               	movlw	1
  8059  00194A  6EDF               	movwf	indf2,c
  8060                           
  8061                           ; BSR set to: 0
  8062  00194C  0012               	return	
  8063  00194E                     __end_of_retrieve_sensor_values:
  8064                           	opt stack 0
  8065                           pclatu	equ	0xFFB
  8066                           pclath	equ	0xFFA
  8067                           tblptru	equ	0xFF8
  8068                           tblptrh	equ	0xFF7
  8069                           tblptrl	equ	0xFF6
  8070                           tablat	equ	0xFF5
  8071                           prodh	equ	0xFF4
  8072                           prodl	equ	0xFF3
  8073                           intcon	equ	0xFF2
  8074                           postinc0	equ	0xFEE
  8075                           fsr0h	equ	0xFEA
  8076                           fsr0l	equ	0xFE9
  8077                           wreg	equ	0xFE8
  8078                           indf1	equ	0xFE7
  8079                           fsr1h	equ	0xFE2
  8080                           fsr1l	equ	0xFE1
  8081                           bsr	equ	0xFE0
  8082                           indf2	equ	0xFDF
  8083                           postinc2	equ	0xFDE
  8084                           postdec2	equ	0xFDD
  8085                           fsr2h	equ	0xFDA
  8086                           fsr2l	equ	0xFD9
  8087                           status	equ	0xFD8
  8088                           
  8089 ;; *************** function _FromMainHigh_recvmsg *****************
  8090 ;; Defined at:
  8091 ;;		line 183 in file "../src/messages.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  maxlength       1    wreg     unsigned char 
  8094 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8095 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), 
  8096 ;;  data            2   26[BANK0 ] PTR void 
  8097 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@sensor_bank_side(14), 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      char 
  8102 ;; Registers used:
  8103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8113 ;;Total ram usage:        5 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    2
  8116 ;; This function calls:
  8117 ;;		i2_recv_msg
  8118 ;; This function is called by:
  8119 ;;		_retrieve_sensor_values
  8120 ;;		_timer0_int_handler
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text48
  8125  0019F2                     __ptext48:
  8126                           	opt stack 0
  8127  0019F2                     _FromMainHigh_recvmsg:
  8128                           	opt stack 17
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;incstack = 0
  8132                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8133  0019F2  0100               	movlb	0	; () banked
  8134  0019F4  6F7C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8135                           
  8136                           ; BSR set to: 0
  8137                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8138  0019F6  0104               	movlb	4	; () banked
  8139  0019F8  0E04               	movlw	high _FromMainHigh_MQ
  8140  0019FA  0100               	movlb	0	; () banked
  8141  0019FC  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8142  0019FE  0104               	movlb	4	; () banked
  8143  001A00  0E00               	movlw	low _FromMainHigh_MQ
  8144  001A02  0100               	movlb	0	; () banked
  8145  001A04  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  8146  001A06  C07C  F06C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8147  001A0A  0100               	movlb	0	; () banked
  8148  001A0C  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8149  001A10  0100               	movlb	0	; () banked
  8150  001A12  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8151  001A16  0100               	movlb	0	; () banked
  8152  001A18  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8153  001A1C  0100               	movlb	0	; () banked
  8154  001A1E  C07A  F06F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8155  001A22  ECB0  F006         	call	i2_recv_msg	;wreg free
  8156  001A26  0012               	return	
  8157  001A28                     __end_of_FromMainHigh_recvmsg:
  8158                           	opt stack 0
  8159                           pclatu	equ	0xFFB
  8160                           pclath	equ	0xFFA
  8161                           tblptru	equ	0xFF8
  8162                           tblptrh	equ	0xFF7
  8163                           tblptrl	equ	0xFF6
  8164                           tablat	equ	0xFF5
  8165                           prodh	equ	0xFF4
  8166                           prodl	equ	0xFF3
  8167                           intcon	equ	0xFF2
  8168                           postinc0	equ	0xFEE
  8169                           fsr0h	equ	0xFEA
  8170                           fsr0l	equ	0xFE9
  8171                           wreg	equ	0xFE8
  8172                           indf1	equ	0xFE7
  8173                           fsr1h	equ	0xFE2
  8174                           fsr1l	equ	0xFE1
  8175                           bsr	equ	0xFE0
  8176                           indf2	equ	0xFDF
  8177                           postinc2	equ	0xFDE
  8178                           postdec2	equ	0xFDD
  8179                           fsr2h	equ	0xFDA
  8180                           fsr2l	equ	0xFD9
  8181                           status	equ	0xFD8
  8182                           
  8183 ;; *************** function i2_recv_msg *****************
  8184 ;; Defined at:
  8185 ;;		line 63 in file "../src/messages.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8188 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8189 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8190 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8191 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  8192 ;;  data            2   15[BANK0 ] PTR void 
  8193 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8196 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8197 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8198 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8199 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      char 
  8202 ;; Registers used:
  8203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8209 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8212 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8213 ;;Total ram usage:       14 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:    1
  8216 ;; This function calls:
  8217 ;;		i2_memcpy
  8218 ;; This function is called by:
  8219 ;;		_FromMainHigh_recvmsg
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text49
  8224  000D60                     __ptext49:
  8225                           	opt stack 0
  8226  000D60                     i2_recv_msg:
  8227                           	opt stack 17
  8228                           
  8229                           ;messages.c: 64: unsigned char slot;
  8230                           ;messages.c: 68: msg *qmsg;
  8231                           ;messages.c: 69: size_t tlength;
  8232                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8233                           
  8234                           ;incstack = 0
  8235  000D60  0100               	movlb	0	; () banked
  8236  000D62  EE20 F089          	lfsr	2,137
  8237  000D66  0100               	movlb	0	; () banked
  8238  000D68  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8239  000D6A  26D9               	addwf	fsr2l,f,c
  8240  000D6C  0100               	movlb	0	; () banked
  8241  000D6E  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8242  000D70  22DA               	addwfc	fsr2h,f,c
  8243  000D72  50DF               	movf	indf2,w,c
  8244  000D74  0100               	movlb	0	; () banked
  8245  000D76  6F73               	movwf	i2recv_msg@slot& (0+255),b
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8249  000D78  0100               	movlb	0	; () banked
  8250  000D7A  5173               	movf	i2recv_msg@slot& (0+255),w,b
  8251  000D7C  0D11               	mullw	17
  8252  000D7E  50F3               	movf	prodl,w,c
  8253  000D80  0100               	movlb	0	; () banked
  8254  000D82  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8255  000D84  0100               	movlb	0	; () banked
  8256  000D86  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  8257  000D88  50F4               	movf	prodh,w,c
  8258  000D8A  0100               	movlb	0	; () banked
  8259  000D8C  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8260  000D8E  0100               	movlb	0	; () banked
  8261  000D90  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;messages.c: 74: if (qmsg->full == 1) {
  8265  000D92  0E01               	movlw	1
  8266  000D94  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8267  000D98  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8268  000D9C  62DF               	cpfseq	indf2,c
  8269  000D9E  D06D               	goto	i2l3334
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8273  000DA0  0100               	movlb	0	; () banked
  8274  000DA2  EE20 F001          	lfsr	2,1
  8275  000DA6  0100               	movlb	0	; () banked
  8276  000DA8  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8277  000DAA  26D9               	addwf	fsr2l,f,c
  8278  000DAC  0100               	movlb	0	; () banked
  8279  000DAE  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8280  000DB0  22DA               	addwfc	fsr2h,f,c
  8281  000DB2  50DF               	movf	indf2,w,c
  8282  000DB4  0100               	movlb	0	; () banked
  8283  000DB6  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8284  000DB8  B0D8               	btfsc	status,0,c
  8285  000DBA  D002               	goto	i2l3318
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;messages.c: 77: return (-3);
  8289  000DBC  0EFD               	movlw	253
  8290  000DBE  0012               	return	
  8291  000DC0                     i2l3318:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;messages.c: 78: }
  8295                           ;messages.c: 80: tlength = qmsg->length;
  8296  000DC0  0100               	movlb	0	; () banked
  8297  000DC2  EE20 F001          	lfsr	2,1
  8298  000DC6  0100               	movlb	0	; () banked
  8299  000DC8  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8300  000DCA  26D9               	addwf	fsr2l,f,c
  8301  000DCC  0100               	movlb	0	; () banked
  8302  000DCE  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8303  000DD0  22DA               	addwfc	fsr2h,f,c
  8304  000DD2  50DF               	movf	indf2,w,c
  8305  000DD4  0100               	movlb	0	; () banked
  8306  000DD6  6F71               	movwf	??i2_recv_msg& (0+255),b
  8307  000DD8  0100               	movlb	0	; () banked
  8308  000DDA  5171               	movf	??i2_recv_msg& (0+255),w,b
  8309  000DDC  0100               	movlb	0	; () banked
  8310  000DDE  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  8311  000DE0  0100               	movlb	0	; () banked
  8312  000DE2  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8316  000DE4  0100               	movlb	0	; () banked
  8317  000DE6  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8318  000DEA  0100               	movlb	0	; () banked
  8319  000DEC  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  8320  000DF0  0E03               	movlw	3
  8321  000DF2  0100               	movlb	0	; () banked
  8322  000DF4  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8323  000DF6  0100               	movlb	0	; () banked
  8324  000DF8  6F71               	movwf	??i2_recv_msg& (0+255),b
  8325  000DFA  0E00               	movlw	0
  8326  000DFC  0100               	movlb	0	; () banked
  8327  000DFE  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8328  000E00  0100               	movlb	0	; () banked
  8329  000E02  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  8330  000E04  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  8331  000E08  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8332  000E0C  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  8333  000E10  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8334  000E14  EC05  F00C         	call	i2_memcpy	;wreg free
  8335                           
  8336                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  8337  000E18  0100               	movlb	0	; () banked
  8338  000E1A  EE20 F089          	lfsr	2,137
  8339  000E1E  0100               	movlb	0	; () banked
  8340  000E20  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8341  000E22  26D9               	addwf	fsr2l,f,c
  8342  000E24  0100               	movlb	0	; () banked
  8343  000E26  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8344  000E28  22DA               	addwfc	fsr2h,f,c
  8345  000E2A  0100               	movlb	0	; () banked
  8346  000E2C  EE10 F089          	lfsr	1,137
  8347  000E30  0100               	movlb	0	; () banked
  8348  000E32  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8349  000E34  26E1               	addwf	fsr1l,f,c
  8350  000E36  0100               	movlb	0	; () banked
  8351  000E38  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8352  000E3A  22E2               	addwfc	fsr1h,f,c
  8353  000E3C  50E7               	movf	indf1,w,c
  8354  000E3E  0100               	movlb	0	; () banked
  8355  000E40  6F71               	movwf	??i2_recv_msg& (0+255),b
  8356  000E42  0100               	movlb	0	; () banked
  8357  000E44  2971               	incf	??i2_recv_msg& (0+255),w,b
  8358  000E46  0B07               	andlw	7
  8359  000E48  6EDF               	movwf	indf2,c
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8363  000E4A  0100               	movlb	0	; () banked
  8364  000E4C  EE20 F002          	lfsr	2,2
  8365  000E50  0100               	movlb	0	; () banked
  8366  000E52  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8367  000E54  26D9               	addwf	fsr2l,f,c
  8368  000E56  0100               	movlb	0	; () banked
  8369  000E58  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8370  000E5A  22DA               	addwfc	fsr2h,f,c
  8371  000E5C  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8372  000E60  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8373  000E64  CFDF FFE7          	movff	indf2,indf1
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;messages.c: 91: qmsg->full = 0;
  8377  000E68  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8378  000E6C  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8379  000E70  0E00               	movlw	0
  8380  000E72  6EDF               	movwf	indf2,c
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;messages.c: 92: return (tlength);
  8384  000E74  0100               	movlb	0	; () banked
  8385  000E76  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  8386  000E78  0012               	return	
  8387  000E7A                     i2l3334:
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;messages.c: 94: return (-4);
  8391  000E7A  0EFC               	movlw	252
  8392  000E7C  0012               	return	
  8393  000E7E                     __end_ofi2_recv_msg:
  8394                           	opt stack 0
  8395                           pclatu	equ	0xFFB
  8396                           pclath	equ	0xFFA
  8397                           tblptru	equ	0xFF8
  8398                           tblptrh	equ	0xFF7
  8399                           tblptrl	equ	0xFF6
  8400                           tablat	equ	0xFF5
  8401                           prodh	equ	0xFF4
  8402                           prodl	equ	0xFF3
  8403                           intcon	equ	0xFF2
  8404                           postinc0	equ	0xFEE
  8405                           fsr0h	equ	0xFEA
  8406                           fsr0l	equ	0xFE9
  8407                           wreg	equ	0xFE8
  8408                           indf1	equ	0xFE7
  8409                           fsr1h	equ	0xFE2
  8410                           fsr1l	equ	0xFE1
  8411                           bsr	equ	0xFE0
  8412                           indf2	equ	0xFDF
  8413                           postinc2	equ	0xFDE
  8414                           postdec2	equ	0xFDD
  8415                           fsr2h	equ	0xFDA
  8416                           fsr2l	equ	0xFD9
  8417                           status	equ	0xFD8
  8418                           
  8419 ;; *************** function _handle_start *****************
  8420 ;; Defined at:
  8421 ;;		line 72 in file "../src/my_i2c.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  data_read       1    wreg     unsigned char 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  data_read       1    0[BANK0 ] unsigned char 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;		None               void
  8428 ;; Registers used:
  8429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8439 ;;Total ram usage:        1 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; This function calls:
  8442 ;;		Nothing
  8443 ;; This function is called by:
  8444 ;;		_i2c_int_handler
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text50
  8449  00120A                     __ptext50:
  8450                           	opt stack 0
  8451  00120A                     _handle_start:
  8452                           	opt stack 19
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;incstack = 0
  8456                           ;handle_start@data_read stored from wreg
  8457  00120A  0100               	movlb	0	; () banked
  8458  00120C  6F60               	movwf	handle_start@data_read& (0+255),b
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8462  00120E  0100               	movlb	0	; () banked
  8463  001210  EE20 F020          	lfsr	2,32
  8464  001214  0100               	movlb	0	; () banked
  8465  001216  51D2               	movf	_ic_ptr& (0+255),w,b
  8466  001218  26D9               	addwf	fsr2l,f,c
  8467  00121A  0100               	movlb	0	; () banked
  8468  00121C  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  8469  00121E  22DA               	addwfc	fsr2h,f,c
  8470  001220  0E01               	movlw	1
  8471  001222  6EDF               	movwf	indf2,c
  8472                           
  8473                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8474  001224  0100               	movlb	0	; () banked
  8475  001226  EE20 F00E          	lfsr	2,14
  8476  00122A  0100               	movlb	0	; () banked
  8477  00122C  51D2               	movf	_ic_ptr& (0+255),w,b
  8478  00122E  26D9               	addwf	fsr2l,f,c
  8479  001230  0100               	movlb	0	; () banked
  8480  001232  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  8481  001234  22DA               	addwfc	fsr2h,f,c
  8482  001236  0E00               	movlw	0
  8483  001238  6EDF               	movwf	indf2,c
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;my_i2c.c: 76: if (data_read) {
  8487  00123A  0100               	movlb	0	; () banked
  8488  00123C  5160               	movf	handle_start@data_read& (0+255),w,b
  8489  00123E  B4D8               	btfsc	status,2,c
  8490  001240  D03D               	goto	i2l3534
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8494  001242  AAC7               	btfss	4039,5,c	;volatile
  8495  001244  D021               	goto	i2l285
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8499  001246  0100               	movlb	0	; () banked
  8500  001248  EE20 F021          	lfsr	2,33
  8501  00124C  0100               	movlb	0	; () banked
  8502  00124E  51D2               	movf	_ic_ptr& (0+255),w,b
  8503  001250  26D9               	addwf	fsr2l,f,c
  8504  001252  0100               	movlb	0	; () banked
  8505  001254  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  8506  001256  22DA               	addwfc	fsr2h,f,c
  8507  001258  0E05               	movlw	5
  8508  00125A  6EDF               	movwf	indf2,c
  8509                           
  8510                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8511  00125C  0100               	movlb	0	; () banked
  8512  00125E  EE20 F023          	lfsr	2,35
  8513  001262  0100               	movlb	0	; () banked
  8514  001264  51D2               	movf	_ic_ptr& (0+255),w,b
  8515  001266  26D9               	addwf	fsr2l,f,c
  8516  001268  0100               	movlb	0	; () banked
  8517  00126A  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  8518  00126C  22DA               	addwfc	fsr2h,f,c
  8519  00126E  2ADF               	incf	indf2,f,c
  8520                           
  8521                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8522  001270  0100               	movlb	0	; () banked
  8523  001272  EE20 F022          	lfsr	2,34
  8524  001276  0100               	movlb	0	; () banked
  8525  001278  51D2               	movf	_ic_ptr& (0+255),w,b
  8526  00127A  26D9               	addwf	fsr2l,f,c
  8527  00127C  0100               	movlb	0	; () banked
  8528  00127E  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  8529  001280  22DA               	addwfc	fsr2h,f,c
  8530  001282  0E05               	movlw	5
  8531  001284  6EDF               	movwf	indf2,c
  8532                           
  8533                           ;my_i2c.c: 83: } else {
  8534  001286  0012               	return	
  8535  001288                     i2l285:
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8539  001288  A4C7               	btfss	4039,2,c	;volatile
  8540  00128A  D00C               	goto	i2l3532
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8544  00128C  0100               	movlb	0	; () banked
  8545  00128E  EE20 F021          	lfsr	2,33
  8546  001292  0100               	movlb	0	; () banked
  8547  001294  51D2               	movf	_ic_ptr& (0+255),w,b
  8548  001296  26D9               	addwf	fsr2l,f,c
  8549  001298  0100               	movlb	0	; () banked
  8550  00129A  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  8551  00129C  22DA               	addwfc	fsr2h,f,c
  8552  00129E  0E08               	movlw	8
  8553  0012A0  6EDF               	movwf	indf2,c
  8554                           
  8555                           ;my_i2c.c: 87: } else {
  8556  0012A2  0012               	return	
  8557  0012A4                     i2l3532:
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  8561  0012A4  0100               	movlb	0	; () banked
  8562  0012A6  EE20 F021          	lfsr	2,33
  8563  0012AA  0100               	movlb	0	; () banked
  8564  0012AC  51D2               	movf	_ic_ptr& (0+255),w,b
  8565  0012AE  26D9               	addwf	fsr2l,f,c
  8566  0012B0  0100               	movlb	0	; () banked
  8567  0012B2  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  8568  0012B4  22DA               	addwfc	fsr2h,f,c
  8569  0012B6  0E07               	movlw	7
  8570  0012B8  6EDF               	movwf	indf2,c
  8571  0012BA  0012               	return	
  8572  0012BC                     i2l3534:
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  8576  0012BC  0100               	movlb	0	; () banked
  8577  0012BE  EE20 F021          	lfsr	2,33
  8578  0012C2  0100               	movlb	0	; () banked
  8579  0012C4  51D2               	movf	_ic_ptr& (0+255),w,b
  8580  0012C6  26D9               	addwf	fsr2l,f,c
  8581  0012C8  0100               	movlb	0	; () banked
  8582  0012CA  51D3               	movf	(_ic_ptr+1)& (0+255),w,b
  8583  0012CC  22DA               	addwfc	fsr2h,f,c
  8584  0012CE  0E06               	movlw	6
  8585  0012D0  6EDF               	movwf	indf2,c
  8586  0012D2  0012               	return	
  8587  0012D4                     __end_of_handle_start:
  8588                           	opt stack 0
  8589                           pclatu	equ	0xFFB
  8590                           pclath	equ	0xFFA
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           intcon	equ	0xFF2
  8598                           postinc0	equ	0xFEE
  8599                           fsr0h	equ	0xFEA
  8600                           fsr0l	equ	0xFE9
  8601                           wreg	equ	0xFE8
  8602                           indf1	equ	0xFE7
  8603                           fsr1h	equ	0xFE2
  8604                           fsr1l	equ	0xFE1
  8605                           bsr	equ	0xFE0
  8606                           indf2	equ	0xFDF
  8607                           postinc2	equ	0xFDE
  8608                           postdec2	equ	0xFDD
  8609                           fsr2h	equ	0xFDA
  8610                           fsr2l	equ	0xFD9
  8611                           status	equ	0xFD8
  8612                           
  8613 ;; *************** function _blip4 *****************
  8614 ;; Defined at:
  8615 ;;		line 39 in file "../src/debug.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;		None
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;		None
  8620 ;; Return value:  Size  Location     Type
  8621 ;;		None               void
  8622 ;; Registers used:
  8623 ;;		None
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/0
  8626 ;;		On exit  : 0/0
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8633 ;;Total ram usage:        0 bytes
  8634 ;; Hardware stack levels used:    1
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_i2c_int_handler
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text51
  8643  001C7A                     __ptext51:
  8644                           	opt stack 0
  8645  001C7A                     _blip4:
  8646                           	opt stack 19
  8647                           
  8648                           ;debug.c: 41: LATDbits.LD7 = 0;
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;incstack = 0
  8652  001C7A  9E8C               	bcf	3980,7,c	;volatile
  8653                           
  8654                           ;debug.c: 42: LATDbits.LD7 = 1;
  8655  001C7C  8E8C               	bsf	3980,7,c	;volatile
  8656                           
  8657                           ;debug.c: 43: LATDbits.LD7 = 0;
  8658  001C7E  9E8C               	bcf	3980,7,c	;volatile
  8659  001C80  0012               	return	
  8660  001C82                     __end_of_blip4:
  8661                           	opt stack 0
  8662                           pclatu	equ	0xFFB
  8663                           pclath	equ	0xFFA
  8664                           tblptru	equ	0xFF8
  8665                           tblptrh	equ	0xFF7
  8666                           tblptrl	equ	0xFF6
  8667                           tablat	equ	0xFF5
  8668                           prodh	equ	0xFF4
  8669                           prodl	equ	0xFF3
  8670                           intcon	equ	0xFF2
  8671                           postinc0	equ	0xFEE
  8672                           fsr0h	equ	0xFEA
  8673                           fsr0l	equ	0xFE9
  8674                           wreg	equ	0xFE8
  8675                           indf1	equ	0xFE7
  8676                           fsr1h	equ	0xFE2
  8677                           fsr1l	equ	0xFE1
  8678                           bsr	equ	0xFE0
  8679                           indf2	equ	0xFDF
  8680                           postinc2	equ	0xFDE
  8681                           postdec2	equ	0xFDD
  8682                           fsr2h	equ	0xFDA
  8683                           fsr2l	equ	0xFD9
  8684                           status	equ	0xFD8
  8685                           
  8686 ;; *************** function _ToMainHigh_sendmsg *****************
  8687 ;; Defined at:
  8688 ;;		line 126 in file "../src/messages.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  length          1    wreg     unsigned char 
  8691 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8692 ;;  data            2   23[BANK0 ] PTR void 
  8693 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  length          1   25[BANK0 ] unsigned char 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      char 
  8698 ;; Registers used:
  8699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8705 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8706 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8708 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;Total ram usage:        4 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    2
  8712 ;; This function calls:
  8713 ;;		i2_send_msg
  8714 ;; This function is called by:
  8715 ;;		_i2c_int_handler
  8716 ;;		_timer0_int_handler
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           	psect	text52
  8721  001AB6                     __ptext52:
  8722                           	opt stack 0
  8723  001AB6                     _ToMainHigh_sendmsg:
  8724                           	opt stack 17
  8725                           
  8726                           ;incstack = 0
  8727                           ;ToMainHigh_sendmsg@length stored from wreg
  8728  001AB6  0100               	movlb	0	; () banked
  8729  001AB8  6F79               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8733                           ;	Return value of _ToMainHigh_sendmsg is never used
  8734  001ABA  0102               	movlb	2	; () banked
  8735  001ABC  0E02               	movlw	high _ToMainHigh_MQ
  8736  001ABE  0100               	movlb	0	; () banked
  8737  001AC0  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8738  001AC2  0102               	movlb	2	; () banked
  8739  001AC4  0E00               	movlw	low _ToMainHigh_MQ
  8740  001AC6  0100               	movlb	0	; () banked
  8741  001AC8  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  8742  001ACA  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8743  001ACE  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8744  001AD2  0100               	movlb	0	; () banked
  8745  001AD4  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8746  001AD8  0100               	movlb	0	; () banked
  8747  001ADA  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8748  001ADE  ECB5  F007         	call	i2_send_msg	;wreg free
  8749  001AE2  0012               	return	
  8750  001AE4                     __end_of_ToMainHigh_sendmsg:
  8751                           	opt stack 0
  8752                           pclatu	equ	0xFFB
  8753                           pclath	equ	0xFFA
  8754                           tblptru	equ	0xFF8
  8755                           tblptrh	equ	0xFF7
  8756                           tblptrl	equ	0xFF6
  8757                           tablat	equ	0xFF5
  8758                           prodh	equ	0xFF4
  8759                           prodl	equ	0xFF3
  8760                           intcon	equ	0xFF2
  8761                           postinc0	equ	0xFEE
  8762                           fsr0h	equ	0xFEA
  8763                           fsr0l	equ	0xFE9
  8764                           wreg	equ	0xFE8
  8765                           indf1	equ	0xFE7
  8766                           fsr1h	equ	0xFE2
  8767                           fsr1l	equ	0xFE1
  8768                           bsr	equ	0xFE0
  8769                           indf2	equ	0xFDF
  8770                           postinc2	equ	0xFDE
  8771                           postdec2	equ	0xFDD
  8772                           fsr2h	equ	0xFDA
  8773                           fsr2l	equ	0xFD9
  8774                           status	equ	0xFD8
  8775                           
  8776 ;; *************** function i2_send_msg *****************
  8777 ;; Defined at:
  8778 ;;		line 24 in file "../src/messages.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8781 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8782 ;;  length          1   12[BANK0 ] unsigned char 
  8783 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8784 ;;  data            2   14[BANK0 ] PTR void 
  8785 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  8786 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8787 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8790 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8791 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8792 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8793 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      char 
  8796 ;; Registers used:
  8797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8803 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8804 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;Total ram usage:       12 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    1
  8810 ;; This function calls:
  8811 ;;		i2_memcpy
  8812 ;; This function is called by:
  8813 ;;		_ToMainHigh_sendmsg
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text53
  8818  000F6A                     __ptext53:
  8819                           	opt stack 0
  8820  000F6A                     i2_send_msg:
  8821                           	opt stack 17
  8822                           
  8823                           ;messages.c: 25: unsigned char slot;
  8824                           ;messages.c: 27: msg *qmsg;
  8825                           ;messages.c: 28: size_t tlength = length;
  8826                           
  8827                           ;incstack = 0
  8828  000F6A  0100               	movlb	0	; () banked
  8829  000F6C  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  8830  000F70  0100               	movlb	0	; () banked
  8831  000F72  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8835  000F74  0100               	movlb	0	; () banked
  8836  000F76  EE20 F088          	lfsr	2,136
  8837  000F7A  0100               	movlb	0	; () banked
  8838  000F7C  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8839  000F7E  26D9               	addwf	fsr2l,f,c
  8840  000F80  0100               	movlb	0	; () banked
  8841  000F82  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8842  000F84  22DA               	addwfc	fsr2h,f,c
  8843  000F86  50DF               	movf	indf2,w,c
  8844  000F88  0100               	movlb	0	; () banked
  8845  000F8A  6F73               	movwf	i2send_msg@slot& (0+255),b
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8849  000F8C  0100               	movlb	0	; () banked
  8850  000F8E  5173               	movf	i2send_msg@slot& (0+255),w,b
  8851  000F90  0D11               	mullw	17
  8852  000F92  50F3               	movf	prodl,w,c
  8853  000F94  0100               	movlb	0	; () banked
  8854  000F96  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  8855  000F98  0100               	movlb	0	; () banked
  8856  000F9A  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  8857  000F9C  50F4               	movf	prodh,w,c
  8858  000F9E  0100               	movlb	0	; () banked
  8859  000FA0  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8860  000FA2  0100               	movlb	0	; () banked
  8861  000FA4  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;messages.c: 41: if (qmsg->full != 0) {
  8865  000FA6  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8866  000FAA  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8867  000FAE  50DF               	movf	indf2,w,c
  8868  000FB0  B4D8               	btfsc	status,2,c
  8869  000FB2  D002               	goto	i2l3412
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;messages.c: 42: return (-1);
  8873  000FB4  0EFF               	movlw	255
  8874  000FB6  0012               	return	
  8875  000FB8                     i2l3412:
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;messages.c: 43: }
  8879                           ;messages.c: 46: qmsg->length = length;
  8880  000FB8  0100               	movlb	0	; () banked
  8881  000FBA  EE20 F001          	lfsr	2,1
  8882  000FBE  0100               	movlb	0	; () banked
  8883  000FC0  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8884  000FC2  26D9               	addwf	fsr2l,f,c
  8885  000FC4  0100               	movlb	0	; () banked
  8886  000FC6  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8887  000FC8  22DA               	addwfc	fsr2h,f,c
  8888  000FCA  0100               	movlb	0	; () banked
  8889  000FCC  C06C  FFDF         	movff	i2send_msg@length,indf2
  8890                           
  8891                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8892  000FD0  0100               	movlb	0	; () banked
  8893  000FD2  EE20 F002          	lfsr	2,2
  8894  000FD6  0100               	movlb	0	; () banked
  8895  000FD8  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8896  000FDA  26D9               	addwf	fsr2l,f,c
  8897  000FDC  0100               	movlb	0	; () banked
  8898  000FDE  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8899  000FE0  22DA               	addwfc	fsr2h,f,c
  8900  000FE2  0100               	movlb	0	; () banked
  8901  000FE4  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8905  000FE8  0E03               	movlw	3
  8906  000FEA  0100               	movlb	0	; () banked
  8907  000FEC  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  8908  000FEE  0100               	movlb	0	; () banked
  8909  000FF0  6F60               	movwf	i2memcpy@d1& (0+255),b
  8910  000FF2  0E00               	movlw	0
  8911  000FF4  0100               	movlb	0	; () banked
  8912  000FF6  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8913  000FF8  0100               	movlb	0	; () banked
  8914  000FFA  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  8915  000FFC  0100               	movlb	0	; () banked
  8916  000FFE  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8917  001002  0100               	movlb	0	; () banked
  8918  001004  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  8919  001008  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  8920  00100C  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8921  001010  EC05  F00C         	call	i2_memcpy	;wreg free
  8922                           
  8923                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  8924  001014  0100               	movlb	0	; () banked
  8925  001016  EE20 F088          	lfsr	2,136
  8926  00101A  0100               	movlb	0	; () banked
  8927  00101C  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8928  00101E  26D9               	addwf	fsr2l,f,c
  8929  001020  0100               	movlb	0	; () banked
  8930  001022  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8931  001024  22DA               	addwfc	fsr2h,f,c
  8932  001026  0100               	movlb	0	; () banked
  8933  001028  EE10 F088          	lfsr	1,136
  8934  00102C  0100               	movlb	0	; () banked
  8935  00102E  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8936  001030  26E1               	addwf	fsr1l,f,c
  8937  001032  0100               	movlb	0	; () banked
  8938  001034  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8939  001036  22E2               	addwfc	fsr1h,f,c
  8940  001038  50E7               	movf	indf1,w,c
  8941  00103A  0100               	movlb	0	; () banked
  8942  00103C  6F70               	movwf	??i2_send_msg& (0+255),b
  8943  00103E  0100               	movlb	0	; () banked
  8944  001040  2970               	incf	??i2_send_msg& (0+255),w,b
  8945  001042  0B07               	andlw	7
  8946  001044  6EDF               	movwf	indf2,c
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;messages.c: 59: qmsg->full = 1;
  8950  001046  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8951  00104A  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8952  00104E  0E01               	movlw	1
  8953  001050  6EDF               	movwf	indf2,c
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;messages.c: 60: return (1);
  8957  001052  0E01               	movlw	1
  8958  001054  0012               	return	
  8959  001056                     __end_ofi2_send_msg:
  8960                           	opt stack 0
  8961                           pclatu	equ	0xFFB
  8962                           pclath	equ	0xFFA
  8963                           tblptru	equ	0xFF8
  8964                           tblptrh	equ	0xFF7
  8965                           tblptrl	equ	0xFF6
  8966                           tablat	equ	0xFF5
  8967                           prodh	equ	0xFF4
  8968                           prodl	equ	0xFF3
  8969                           intcon	equ	0xFF2
  8970                           postinc0	equ	0xFEE
  8971                           fsr0h	equ	0xFEA
  8972                           fsr0l	equ	0xFE9
  8973                           wreg	equ	0xFE8
  8974                           indf1	equ	0xFE7
  8975                           fsr1h	equ	0xFE2
  8976                           fsr1l	equ	0xFE1
  8977                           bsr	equ	0xFE0
  8978                           indf2	equ	0xFDF
  8979                           postinc2	equ	0xFDE
  8980                           postdec2	equ	0xFDD
  8981                           fsr2h	equ	0xFDA
  8982                           fsr2l	equ	0xFD9
  8983                           status	equ	0xFD8
  8984                           
  8985 ;; *************** function i2_memcpy *****************
  8986 ;; Defined at:
  8987 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;  d1              2    0[BANK0 ] PTR void 
  8990 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8991 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  8992 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  8993 ;;  s1              2    2[BANK0 ] PTR const void 
  8994 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  8995 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  8996 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  8997 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8998 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), 
  8999 ;;		 -> ToMainLow_MQ(138), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  9000 ;;  n               2    4[BANK0 ] unsigned int 
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9003 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9004 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9005 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  9006 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  9007 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), 
  9008 ;;		 -> ToMainLow_MQ(138), main@uart_response(14), main@t1thread_data(2), main@ic(38), 
  9009 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9010 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9011 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9012 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  2    0[BANK0 ] PTR void 
  9015 ;; Registers used:
  9016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9022 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9023 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9026 ;;Total ram usage:       10 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		i2_send_msg
  9032 ;;		i2_recv_msg
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text54
  9037  00180A                     __ptext54:
  9038                           	opt stack 0
  9039  00180A                     i2_memcpy:
  9040                           	opt stack 17
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;incstack = 0
  9044  00180A  0100               	movlb	0	; () banked
  9045  00180C  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9046  001810  0100               	movlb	0	; () banked
  9047  001812  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  9048  001816  0100               	movlb	0	; () banked
  9049  001818  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9050  00181C  0100               	movlb	0	; () banked
  9051  00181E  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  9052  001822  D010               	goto	i2l3294
  9053  001824                     i2l3288:
  9054                           
  9055                           ; BSR set to: 0
  9056  001824  C068  FFD9         	movff	i2memcpy@s,fsr2l
  9057  001828  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  9058  00182C  C066  FFE1         	movff	i2memcpy@d,fsr1l
  9059  001830  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  9060  001834  CFDF FFE7          	movff	indf2,indf1
  9061                           
  9062                           ; BSR set to: 0
  9063  001838  0100               	movlb	0	; () banked
  9064  00183A  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  9065  00183C  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  9066                           
  9067                           ; BSR set to: 0
  9068  00183E  0100               	movlb	0	; () banked
  9069  001840  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  9070  001842  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  9071  001844                     i2l3294:
  9072                           
  9073                           ; BSR set to: 0
  9074  001844  0100               	movlb	0	; () banked
  9075  001846  0764               	decf	i2memcpy@n& (0+255),f,b
  9076  001848  A0D8               	btfss	status,0,c
  9077  00184A  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  9078  00184C  0100               	movlb	0	; () banked
  9079  00184E  2964               	incf	i2memcpy@n& (0+255),w,b
  9080  001850  B4D8               	btfsc	status,2,c
  9081  001852  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  9082  001854  B4D8               	btfsc	status,2,c
  9083                           
  9084                           ; BSR set to: 0
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;	Return value of i2_memcpy is never used
  9088  001856  0012               	return	
  9089  001858  D7E5               	goto	i2l3288
  9090  00185A                     __end_ofi2_memcpy:
  9091                           	opt stack 0
  9092                           pclatu	equ	0xFFB
  9093                           pclath	equ	0xFFA
  9094                           tblptru	equ	0xFF8
  9095                           tblptrh	equ	0xFF7
  9096                           tblptrl	equ	0xFF6
  9097                           tablat	equ	0xFF5
  9098                           prodh	equ	0xFF4
  9099                           prodl	equ	0xFF3
  9100                           intcon	equ	0xFF2
  9101                           postinc0	equ	0xFEE
  9102                           fsr0h	equ	0xFEA
  9103                           fsr0l	equ	0xFE9
  9104                           wreg	equ	0xFE8
  9105                           indf1	equ	0xFE7
  9106                           fsr1h	equ	0xFE2
  9107                           fsr1l	equ	0xFE1
  9108                           bsr	equ	0xFE0
  9109                           indf2	equ	0xFDF
  9110                           postinc2	equ	0xFDE
  9111                           postdec2	equ	0xFDD
  9112                           fsr2h	equ	0xFDA
  9113                           fsr2l	equ	0xFD9
  9114                           status	equ	0xFD8
  9115                           
  9116 ;; *************** function _SleepIfOkay *****************
  9117 ;; Defined at:
  9118 ;;		line 226 in file "../src/messages.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;		None
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;		None               void
  9125 ;; Registers used:
  9126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9136 ;;Total ram usage:        0 bytes
  9137 ;; Hardware stack levels used:    1
  9138 ;; Hardware stack levels required when called:    2
  9139 ;; This function calls:
  9140 ;;		_check_msg
  9141 ;;		_enter_sleep_mode
  9142 ;;		_in_high_int
  9143 ;;		_in_low_int
  9144 ;; This function is called by:
  9145 ;;		_InterruptHandlerHigh
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           	psect	text55
  9150  001702                     __ptext55:
  9151                           	opt stack 0
  9152  001702                     _SleepIfOkay:
  9153                           	opt stack 18
  9154                           
  9155                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;incstack = 0
  9159  001702  0100               	movlb	0	; () banked
  9160  001704  67B1               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9161  001706  D001               	goto	i2l2806
  9162  001708  0012               	return	
  9163  00170A                     i2l2806:
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;messages.c: 230: }
  9167                           ;messages.c: 233: if (in_low_int()) {
  9168  00170A  EC4D  F00C         	call	_in_low_int	;wreg free
  9169  00170E  0100               	movlb	0	; () banked
  9170  001710  5163               	movf	(?_in_low_int+1)& (0+255),w,b
  9171  001712  0100               	movlb	0	; () banked
  9172  001714  1162               	iorwf	?_in_low_int& (0+255),w,b
  9173  001716  A4D8               	btfss	status,2,c
  9174  001718  0012               	return	
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;messages.c: 235: }
  9178                           ;messages.c: 238: if (!in_high_int()) {
  9179                           
  9180                           ; BSR set to: 0
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;messages.c: 234: return;
  9184  00171A  EC05  F00E         	call	_in_high_int	;wreg free
  9185  00171E  0100               	movlb	0	; () banked
  9186  001720  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9187  001722  0100               	movlb	0	; () banked
  9188  001724  1160               	iorwf	?_in_high_int& (0+255),w,b
  9189  001726  B4D8               	btfsc	status,2,c
  9190  001728  0012               	return	
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;messages.c: 240: }
  9194                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9195                           
  9196                           ; BSR set to: 0
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;messages.c: 239: return;
  9200  00172A  0102               	movlb	2	; () banked
  9201  00172C  0E02               	movlw	high _ToMainHigh_MQ
  9202  00172E  0100               	movlb	0	; () banked
  9203  001730  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9204  001732  0102               	movlb	2	; () banked
  9205  001734  0E00               	movlw	low _ToMainHigh_MQ
  9206  001736  0100               	movlb	0	; () banked
  9207  001738  6F60               	movwf	check_msg@qptr& (0+255),b
  9208  00173A  EC14  F00D         	call	_check_msg	;wreg free
  9209  00173E  0900               	iorlw	0
  9210  001740  A4D8               	btfss	status,2,c
  9211  001742  0012               	return	
  9212                           
  9213                           ;messages.c: 247: }
  9214                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9215                           
  9216                           ;messages.c: 246: return;
  9217  001744  0101               	movlb	1	; () banked
  9218  001746  0E01               	movlw	high _ToMainLow_MQ
  9219  001748  0100               	movlb	0	; () banked
  9220  00174A  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9221  00174C  0101               	movlb	1	; () banked
  9222  00174E  0E00               	movlw	low _ToMainLow_MQ
  9223  001750  0100               	movlb	0	; () banked
  9224  001752  6F60               	movwf	check_msg@qptr& (0+255),b
  9225  001754  EC14  F00D         	call	_check_msg	;wreg free
  9226  001758  0900               	iorlw	0
  9227  00175A  B4D8               	btfsc	status,2,c
  9228                           
  9229                           ;messages.c: 250: }
  9230                           ;messages.c: 251: enter_sleep_mode();
  9231                           
  9232                           ;messages.c: 249: return;
  9233  00175C  EC41  F00E         	call	_enter_sleep_mode	;wreg free
  9234  001760  0012               	return	
  9235  001762                     __end_of_SleepIfOkay:
  9236                           	opt stack 0
  9237                           pclatu	equ	0xFFB
  9238                           pclath	equ	0xFFA
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           postinc0	equ	0xFEE
  9247                           fsr0h	equ	0xFEA
  9248                           fsr0l	equ	0xFE9
  9249                           wreg	equ	0xFE8
  9250                           indf1	equ	0xFE7
  9251                           fsr1h	equ	0xFE2
  9252                           fsr1l	equ	0xFE1
  9253                           bsr	equ	0xFE0
  9254                           indf2	equ	0xFDF
  9255                           postinc2	equ	0xFDE
  9256                           postdec2	equ	0xFDD
  9257                           fsr2h	equ	0xFDA
  9258                           fsr2l	equ	0xFD9
  9259                           status	equ	0xFD8
  9260                           
  9261 ;; *************** function _in_low_int *****************
  9262 ;; Defined at:
  9263 ;;		line 33 in file "../src/interrupts.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;		None
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;		None
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  2    2[BANK0 ] int 
  9270 ;; Registers used:
  9271 ;;		wreg, status,2, status,0, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9280 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9281 ;;Total ram usage:        2 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    1
  9284 ;; This function calls:
  9285 ;;		_in_high_int
  9286 ;; This function is called by:
  9287 ;;		_SleepIfOkay
  9288 ;;		_in_main
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text56
  9293  00189A                     __ptext56:
  9294                           	opt stack 0
  9295  00189A                     _in_low_int:
  9296                           	opt stack 18
  9297                           
  9298                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9299                           
  9300                           ;incstack = 0
  9301  00189A  ACF2               	btfss	intcon,6,c	;volatile
  9302  00189C  D007               	goto	i2l2426
  9303                           
  9304                           ;interrupts.c: 35: return (0);
  9305  00189E  0E00               	movlw	0
  9306  0018A0  0100               	movlb	0	; () banked
  9307  0018A2  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9308  0018A4  0E00               	movlw	0
  9309  0018A6  0100               	movlb	0	; () banked
  9310  0018A8  6F62               	movwf	?_in_low_int& (0+255),b
  9311  0018AA  0012               	return	
  9312  0018AC                     i2l2426:
  9313  0018AC  EC05  F00E         	call	_in_high_int	;wreg free
  9314  0018B0  0100               	movlb	0	; () banked
  9315  0018B2  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9316  0018B4  0100               	movlb	0	; () banked
  9317  0018B6  1160               	iorwf	?_in_high_int& (0+255),w,b
  9318  0018B8  B4D8               	btfsc	status,2,c
  9319  0018BA  D007               	goto	i2l2434
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;interrupts.c: 37: return (0);
  9323  0018BC  0E00               	movlw	0
  9324  0018BE  0100               	movlb	0	; () banked
  9325  0018C0  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9326  0018C2  0E00               	movlw	0
  9327  0018C4  0100               	movlb	0	; () banked
  9328  0018C6  6F62               	movwf	?_in_low_int& (0+255),b
  9329  0018C8  0012               	return	
  9330  0018CA                     i2l2434:
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;interrupts.c: 39: return (1);
  9334  0018CA  0E00               	movlw	0
  9335  0018CC  0100               	movlb	0	; () banked
  9336  0018CE  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9337  0018D0  0E01               	movlw	1
  9338  0018D2  0100               	movlb	0	; () banked
  9339  0018D4  6F62               	movwf	?_in_low_int& (0+255),b
  9340  0018D6  0012               	return	
  9341  0018D8                     __end_of_in_low_int:
  9342                           	opt stack 0
  9343                           pclatu	equ	0xFFB
  9344                           pclath	equ	0xFFA
  9345                           tblptru	equ	0xFF8
  9346                           tblptrh	equ	0xFF7
  9347                           tblptrl	equ	0xFF6
  9348                           tablat	equ	0xFF5
  9349                           prodh	equ	0xFF4
  9350                           prodl	equ	0xFF3
  9351                           intcon	equ	0xFF2
  9352                           postinc0	equ	0xFEE
  9353                           fsr0h	equ	0xFEA
  9354                           fsr0l	equ	0xFE9
  9355                           wreg	equ	0xFE8
  9356                           indf1	equ	0xFE7
  9357                           fsr1h	equ	0xFE2
  9358                           fsr1l	equ	0xFE1
  9359                           bsr	equ	0xFE0
  9360                           indf2	equ	0xFDF
  9361                           postinc2	equ	0xFDE
  9362                           postdec2	equ	0xFDD
  9363                           fsr2h	equ	0xFDA
  9364                           fsr2l	equ	0xFD9
  9365                           status	equ	0xFD8
  9366                           
  9367 ;; *************** function _in_high_int *****************
  9368 ;; Defined at:
  9369 ;;		line 25 in file "../src/interrupts.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  2    0[BANK0 ] int 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;Total ram usage:        2 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; This function calls:
  9390 ;;		Nothing
  9391 ;; This function is called by:
  9392 ;;		_in_low_int
  9393 ;;		_SleepIfOkay
  9394 ;;		_in_main
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398                           	psect	text57
  9399  001C0A                     __ptext57:
  9400                           	opt stack 0
  9401  001C0A                     _in_high_int:
  9402                           	opt stack 18
  9403                           
  9404                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;incstack = 0
  9408  001C0A  0E00               	movlw	0
  9409  001C0C  AEF2               	btfss	intcon,7,c	;volatile
  9410  001C0E  0E01               	movlw	1
  9411  001C10  0100               	movlb	0	; () banked
  9412  001C12  6F60               	movwf	?_in_high_int& (0+255),b
  9413  001C14  0100               	movlb	0	; () banked
  9414  001C16  6B61               	clrf	(?_in_high_int+1)& (0+255),b
  9415  001C18  0012               	return	
  9416  001C1A                     __end_of_in_high_int:
  9417                           	opt stack 0
  9418                           pclatu	equ	0xFFB
  9419                           pclath	equ	0xFFA
  9420                           tblptru	equ	0xFF8
  9421                           tblptrh	equ	0xFF7
  9422                           tblptrl	equ	0xFF6
  9423                           tablat	equ	0xFF5
  9424                           prodh	equ	0xFF4
  9425                           prodl	equ	0xFF3
  9426                           intcon	equ	0xFF2
  9427                           postinc0	equ	0xFEE
  9428                           fsr0h	equ	0xFEA
  9429                           fsr0l	equ	0xFE9
  9430                           wreg	equ	0xFE8
  9431                           indf1	equ	0xFE7
  9432                           fsr1h	equ	0xFE2
  9433                           fsr1l	equ	0xFE1
  9434                           bsr	equ	0xFE0
  9435                           indf2	equ	0xFDF
  9436                           postinc2	equ	0xFDE
  9437                           postdec2	equ	0xFDD
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function _enter_sleep_mode *****************
  9443 ;; Defined at:
  9444 ;;		line 202 in file "../src/messages.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;		None               void
  9451 ;; Registers used:
  9452 ;;		None
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_SleepIfOkay
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text58
  9472  001C82                     __ptext58:
  9473                           	opt stack 0
  9474  001C82                     _enter_sleep_mode:
  9475                           	opt stack 19
  9476                           
  9477                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;incstack = 0
  9481  001C82  8ED3               	bsf	4051,7,c	;volatile
  9482  001C84  0003               	sleep		;# 
  9483  001C86  0012               	return	
  9484  001C88                     __end_of_enter_sleep_mode:
  9485                           	opt stack 0
  9486                           pclatu	equ	0xFFB
  9487                           pclath	equ	0xFFA
  9488                           tblptru	equ	0xFF8
  9489                           tblptrh	equ	0xFF7
  9490                           tblptrl	equ	0xFF6
  9491                           tablat	equ	0xFF5
  9492                           prodh	equ	0xFF4
  9493                           prodl	equ	0xFF3
  9494                           intcon	equ	0xFF2
  9495                           postinc0	equ	0xFEE
  9496                           fsr0h	equ	0xFEA
  9497                           fsr0l	equ	0xFE9
  9498                           wreg	equ	0xFE8
  9499                           indf1	equ	0xFE7
  9500                           fsr1h	equ	0xFE2
  9501                           fsr1l	equ	0xFE1
  9502                           bsr	equ	0xFE0
  9503                           indf2	equ	0xFDF
  9504                           postinc2	equ	0xFDE
  9505                           postdec2	equ	0xFDD
  9506                           fsr2h	equ	0xFDA
  9507                           fsr2l	equ	0xFD9
  9508                           status	equ	0xFD8
  9509                           
  9510 ;; *************** function _check_msg *****************
  9511 ;; Defined at:
  9512 ;;		line 220 in file "../src/messages.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9515 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;		None
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  1    wreg      unsigned char 
  9520 ;; Registers used:
  9521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9531 ;;Total ram usage:        3 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_SleepIfOkay
  9537 ;;		_block_on_To_msgqueues
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text59
  9542  001A28                     __ptext59:
  9543                           	opt stack 0
  9544  001A28                     _check_msg:
  9545                           	opt stack 19
  9546                           
  9547                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9548                           
  9549                           ;incstack = 0
  9550  001A28  0100               	movlb	0	; () banked
  9551  001A2A  EE20 F089          	lfsr	2,137
  9552  001A2E  0100               	movlb	0	; () banked
  9553  001A30  5160               	movf	check_msg@qptr& (0+255),w,b
  9554  001A32  26D9               	addwf	fsr2l,f,c
  9555  001A34  0100               	movlb	0	; () banked
  9556  001A36  5161               	movf	(check_msg@qptr+1)& (0+255),w,b
  9557  001A38  22DA               	addwfc	fsr2h,f,c
  9558  001A3A  50DF               	movf	indf2,w,c
  9559  001A3C  0100               	movlb	0	; () banked
  9560  001A3E  6F62               	movwf	??_check_msg& (0+255),b
  9561  001A40  0100               	movlb	0	; () banked
  9562  001A42  5162               	movf	??_check_msg& (0+255),w,b
  9563  001A44  0D11               	mullw	17
  9564  001A46  50F3               	movf	prodl,w,c
  9565  001A48  0100               	movlb	0	; () banked
  9566  001A4A  2560               	addwf	check_msg@qptr& (0+255),w,b
  9567  001A4C  6ED9               	movwf	fsr2l,c
  9568  001A4E  50F4               	movf	prodh,w,c
  9569  001A50  0100               	movlb	0	; () banked
  9570  001A52  2161               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9571  001A54  6EDA               	movwf	fsr2h,c
  9572  001A56  50DF               	movf	indf2,w,c
  9573  001A58  0012               	return	
  9574  001A5A                     __end_of_check_msg:
  9575                           	opt stack 0
  9576  0000                     pclatu	equ	0xFFB
  9577                           pclath	equ	0xFFA
  9578                           tblptru	equ	0xFF8
  9579                           tblptrh	equ	0xFF7
  9580                           tblptrl	equ	0xFF6
  9581                           tablat	equ	0xFF5
  9582                           prodh	equ	0xFF4
  9583                           prodl	equ	0xFF3
  9584                           intcon	equ	0xFF2
  9585                           postinc0	equ	0xFEE
  9586                           fsr0h	equ	0xFEA
  9587                           fsr0l	equ	0xFE9
  9588                           wreg	equ	0xFE8
  9589                           indf1	equ	0xFE7
  9590                           fsr1h	equ	0xFE2
  9591                           fsr1l	equ	0xFE1
  9592                           bsr	equ	0xFE0
  9593                           indf2	equ	0xFDF
  9594                           postinc2	equ	0xFDE
  9595                           postdec2	equ	0xFDD
  9596                           fsr2h	equ	0xFDA
  9597                           fsr2l	equ	0xFD9
  9598                           status	equ	0xFD8
  9599                           pclatu	equ	0xFFB
  9600                           pclath	equ	0xFFA
  9601                           tblptru	equ	0xFF8
  9602                           tblptrh	equ	0xFF7
  9603                           tblptrl	equ	0xFF6
  9604                           tablat	equ	0xFF5
  9605                           prodh	equ	0xFF4
  9606                           prodl	equ	0xFF3
  9607                           intcon	equ	0xFF2
  9608                           postinc0	equ	0xFEE
  9609                           fsr0h	equ	0xFEA
  9610                           fsr0l	equ	0xFE9
  9611                           wreg	equ	0xFE8
  9612                           indf1	equ	0xFE7
  9613                           fsr1h	equ	0xFE2
  9614                           fsr1l	equ	0xFE1
  9615                           bsr	equ	0xFE0
  9616                           indf2	equ	0xFDF
  9617                           postinc2	equ	0xFDE
  9618                           postdec2	equ	0xFDD
  9619                           fsr2h	equ	0xFDA
  9620                           fsr2l	equ	0xFD9
  9621                           status	equ	0xFD8
  9622                           
  9623                           	psect	param0
  9624  0000                     pclatu	equ	0xFFB
  9625                           pclath	equ	0xFFA
  9626                           tblptru	equ	0xFF8
  9627                           tblptrh	equ	0xFF7
  9628                           tblptrl	equ	0xFF6
  9629                           tablat	equ	0xFF5
  9630                           prodh	equ	0xFF4
  9631                           prodl	equ	0xFF3
  9632                           intcon	equ	0xFF2
  9633                           postinc0	equ	0xFEE
  9634                           fsr0h	equ	0xFEA
  9635                           fsr0l	equ	0xFE9
  9636                           wreg	equ	0xFE8
  9637                           indf1	equ	0xFE7
  9638                           fsr1h	equ	0xFE2
  9639                           fsr1l	equ	0xFE1
  9640                           bsr	equ	0xFE0
  9641                           indf2	equ	0xFDF
  9642                           postinc2	equ	0xFDE
  9643                           postdec2	equ	0xFDD
  9644                           fsr2h	equ	0xFDA
  9645                           fsr2l	equ	0xFD9
  9646                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         640
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     71      93
    BANK0           160     61     116
    BANK1           256     35     187
    BANK2           256     79     217
    BANK3           256      0     138
    BANK4           256      0     138
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    retrieve_sensor_values@sensor_bank_ventril	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_ventril(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_front	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_front(COMRAM[14]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK2[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK3[136]), FromMainHigh_MQ.queue(BANK4[136]), ToMainHigh_MQ.queue(BANK2[136]), ToMainLow_MQ.queue(BANK1[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK4[138]), 
		 -> FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), main@msgbuffer(BANK2[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK3[136]), FromMainHigh_MQ.queue(BANK4[136]), ToMainHigh_MQ.queue(BANK2[136]), ToMainLow_MQ.queue(BANK1[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK4[138]), 
		 -> FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), main@msgbuffer(BANK2[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK3[14]), FromMainHigh_MQ.data(BANK4[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK4[14]), FromMainLow_MQ.queue.data(BANK3[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK4[138]), FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), 
		 -> ToMainLow_MQ(BANK1[138]), main@uart_response(BANK2[14]), main@t1thread_data(BANK2[2]), main@ic(BANK2[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK3[14]), FromMainHigh_MQ.data(BANK4[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK4[14]), FromMainLow_MQ.queue.data(BANK3[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK4[138]), FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), 
		 -> ToMainLow_MQ(BANK1[138]), main@uart_response(BANK2[14]), main@t1thread_data(BANK2[2]), main@ic(BANK2[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK2[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK2[15]), 

    uart_frame_message@inner	PTR unsigned char  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    uart_frame_message@outer	PTR unsigned char  size(2) Largest target is 18
		 -> uart_transmit_interrupt_handler@message(BANK0[18]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> main@uart_response(BANK2[14]), 

    retrieve_sensor_values@sensor_bank_side	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_side(BANK0[14]), 

    i2c_configure_slave@ptr_thingy	PTR unsigned char  size(2) Largest target is 1
		 -> main@need_sensor_data(BANK2[1]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@need_sensor_data(BANK2[1]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK2[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK2[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@sensor_bank_side(BANK0[14]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@uart_response(BANK2[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK2[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK2[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(BANK0[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 15
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), main@msgbuffer(BANK2[15]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK3[136]), FromMainHigh_MQ.queue(BANK4[136]), ToMainHigh_MQ.queue(BANK2[136]), ToMainLow_MQ.queue(BANK1[136]), 
		 -> FromMainHigh_MQ(BANK4[138]), FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK4[138]), FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), 

    sp__memcpy	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK3[136]), FromMainHigh_MQ.queue(BANK4[136]), ToMainHigh_MQ.queue(BANK2[136]), ToMainLow_MQ.queue(BANK1[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK4[138]), 
		 -> FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), main@msgbuffer(BANK2[15]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK2[14]), main@t1thread_data(BANK2[2]), main@ic(BANK2[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK3[136]), FromMainHigh_MQ.queue(BANK4[136]), ToMainHigh_MQ.queue(BANK2[136]), ToMainLow_MQ.queue(BANK1[136]), 
		 -> FromMainHigh_MQ(BANK4[138]), FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK4[138]), FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK4[138]), FromMainLow_MQ(BANK3[138]), ToMainHigh_MQ(BANK2[138]), ToMainLow_MQ(BANK1[138]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_retrieve_sensor_values
    _retrieve_sensor_values->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                83    83      0   12495
                                              0 BANK2     79    79      0
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    2710
                                             26 BANK1      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _send_uart_message                                    3     1      2    2380
                                             26 BANK1      3     1      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  3     1      2     127
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1829
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     158
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    6961
                                             54 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (6) _uart_transmit_interrupt_handler                     16    16      0    2082
                                             29 COMRAM    16    16      0
                _FromMainLow_recvmsg
                 _uart_frame_message
 ---------------------------------------------------------------------------------
 (7) _uart_frame_message                                   8     4      4     528
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    1252
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    1029
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_receive_interrupt_handler                      28    28      0    2757
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    2122
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2001
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     998
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     384
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    7458
                                             47 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    3286
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    12    12      0    3916
                                             37 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                              _blip4
                       _handle_start
             _retrieve_sensor_values
                             i2_blip
                            i2_blip1
                            i2_blip2
                            i2_blip3
 ---------------------------------------------------------------------------------
 (12) i2_blip3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_blip                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _retrieve_sensor_values                             10     4      6    1694
                                             29 BANK0      8     2      6
               _FromMainHigh_recvmsg
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1382
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1029
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _blip4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1611
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     998
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     384
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (12) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (13) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
     _uart_frame_message

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _blip4
     _handle_start
     _retrieve_sensor_values
       _FromMainHigh_recvmsg
         i2_recv_msg
           i2_memcpy
     i2_blip
     i2_blip1
     i2_blip2
     i2_blip3
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      8A      14       53.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8A      12       53.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100     4F      D9      10       84.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100     23      BB       8       73.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      74       5       72.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     47      5D       1       97.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     379       6        0.0%
DATA                 0      0     379       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 08 16:13:26 2014

                              ??_debug_configure 0198                  __size_of_retrieve_sensor_values 003A  
                       _MQ_Main_Willing_to_block 00B1                                      _SSPSTATbits 000FC7  
             uart_receive_interrupt_handler@done 0049                        __end_of_ToMainLow_recvmsg 19BC  
                                             bsr 000FE0                        __end_of_ToMainLow_sendmsg 1B82  
                                   __CFG_CP0$OFF 000000                                i2recv_msg@msgtype 006D  
                              i2recv_msg@tlength 0074                             ?_FromMainLow_recvmsg 0019  
                                            l112 08FE                                              l544 1B58  
                                            l545 1B5A                                              l572 190A  
                                            l573 190C                             ?_FromMainLow_sendmsg 01AE  
                           __size_of_WriteTimer0 0012                             __size_of_WriteTimer1 0012  
                               ??_uart_configure 0198                                   _FromMainLow_MQ 0300  
                                            prod 000FF3                                              wreg 000FE8  
                                     _TXSTA1bits 000FAD                                     __CFG_IESO$ON 000000  
                                   ?_in_high_int 0060                                  ReadTimer1@timer 0003  
                            i2recv_msg@maxlength 006C                                             l1121 16F8  
                                           l3304 17F4                                             l4122 0888  
                                           l4134 0904                                             l4118 087A  
                                           l3360 0ECC                                             l4128 08BA  
                                           l4136 091C                                             l4170 0A12  
                                           l4162 09EE                                             l4154 098A  
                                           l4156 09CE                                             l4182 0A52  
                                           l3464 1618                                             l4176 0A32  
                                           l4192 0A72                                             l3298 17D4  
                                           l3482 0CA2                                             l3562 16EA  
                                           l3554 16B4                                             l3556 16C0  
                                           l3558 16C6                                             l3498 0D5C  
                                           _LATB 000F8A                                             i1l52 007A  
                                    main@myByte1 028B                                      main@myByte2 028C  
                                _FromMainHigh_MQ 0400                                             _blip 1C52  
                                     i1_recv_msg 1138                                             _main 07E2  
                                           fsr0h 000FEA                                             fsr1h 000FE2  
                                           fsr0l 000FE9                                             fsr2h 000FDA  
                                           indf1 000FE7                                             fsr1l 000FE1  
                                           indf2 000FDF                                             fsr2l 000FD9  
                         __CFG_DSWDTOSC$T1OSCREF 000000                                      main@msgtype 02B2  
                                     i1_send_msg 12D4                                             pclat 000FFA  
                                           prodh 000FF4                                  __end_ofi2_blip1 1C72  
                                           prodl 000FF3                                  __end_ofi2_blip2 1C6A  
                                __end_ofi2_blip3 1C62                            handle_start@data_read 0060  
                                           start 00C0                                       i2_recv_msg 0D60  
                                     i2_send_msg 0F6A                     retrieve_sensor_values@length 0083  
                      ToMainHigh_recvmsg@msgtype 01B0                                   send_msg@length 01A4  
                    __size_of_timer0_int_handler 006E                                    __CFG_PLLDIV$3 000000  
         uart_receive_interrupt_handler@checksum 002D                            ??_FromMainLow_recvmsg 001D  
                                          ?_blip 0001                            ??_FromMainLow_sendmsg 01B1  
                                          ?_main 0001                                            _T0CON 000FD5  
                                          _T1CON 000FCD                                  __end_of___lwmod 1702  
                                     i1memcpy@d1 0001                                            i1l419 0C26  
                                          i2l301 0602                                            i2l303 0148  
                                          i2l330 043A                                            i2l307 017A  
                                          i2l339 0610                                            i2l285 1288  
                                     i1memcpy@s1 0003                      FromMainHigh_recvmsg@msgtype 0078  
                                          _TMR0H 000FD7                                            _TMR1H 000FCF  
                                          _TMR0L 000FD6                                            _TMR1L 000FCE  
                                          _TRISB 000F93                                            _TRISD 000F95  
                                     i2memcpy@d1 0060                                   __CFG_FCMEN$OFF 000000  
                                     i2memcpy@s1 0062                                     ?_init_queues 0001  
                      __size_of_enter_sleep_mode 0006                                            _blip1 1C4A  
                                          _blip2 1C42                                            _blip3 1C3A  
                                          _blip4 1C7A                           _retrieve_sensor_values 1914  
    uart_receive_interrupt_handler@message_count 0033                       ToMainLow_recvmsg@maxlength 01B4  
                        timer0_lthread@msgbuffer 019E                                   __CFG_T1DIG$OFF 000000  
                        i2c_configure_slave@addr 019A                             main@need_sensor_data 02AC  
                                          tablat 000FF5                          uart_frame_message@inner 0001  
                                          status 000FD8                          uart_frame_message@outer 0003  
                               __end_ofi1_memcpy 189A                                 __end_ofi2_memcpy 185A  
                                __initialization 1578                                     __end_of_blip 1C5A  
                                   __end_of_main 0AA8                                       _ReadTimer1 1BE6  
                    __size_of_timer1_int_handler 002C                       __size_of_ToMainLow_recvmsg 0036  
                     __size_of_ToMainLow_sendmsg 0024                    __size_of_FromMainHigh_recvmsg 0036  
                                 __CFG_OSC$HSPLL 000000                    __size_of_FromMainHigh_sendmsg 002E  
                                         ??_blip 0198                                           ??_main 01BB  
                                send_msg@msgtype 01A5                                    __activetblptr 000002  
                                send_msg@tlength 01A9                       FromMainLow_sendmsg@msgtype 01AE  
                           __end_of_handle_start 12D4                                           ?_blip1 0001  
                                         ?_blip2 0001                                           ?_blip3 0001  
                                         ?_blip4 0001                                           _T1GCON 000F9A  
                                      ??i2_blip1 0060                                        ??i2_blip2 0060  
                                      ??i2_blip3 0060                                           i1l3340 186C  
                                         i1l4060 0066                                           i1l2550 108E  
                                         i1l3346 1888                                           i1l2554 10BC  
                                         i1l4066 0070                                           i1l3436 117E  
                                         i1l3452 1206                                           i1l2556 10DC  
                                         i1l2558 110A                                           i1l3810 0B28  
                                         i1l3388 130C                                           i1l3812 0B2A  
                                         i1l3822 0B5C                                           i1l3906 13FC  
                                         i1l3846 0BDE                                           i1l3838 0BBA  
                                         i1l3790 0AEE                                       _OpenTimer0 1B38  
                                         i2l2434 18CA                                           i2l2426 18AC  
                                         i1l3866 0C3A                                       _OpenTimer1 18D8  
                                         i2l3412 0FB8                                           i2l4052 1462  
                                         i1l3796 0AF4                                           i2l3318 0DC0  
                                         i2l3334 0E7A                                           i2l4046 1458  
                                         i1l3798 0AFA                                           i1l3878 13AC  
                                 __CFG_WDTEN$OFF 000000                                           i2l3600 0132  
                                         i2l3532 12A4                                           i2l2806 170A  
                                         i2l3294 1844                                           i2l3534 12BC  
                                         i2l3606 0140                                           i2l3288 1824  
                                         i2l3624 01A6                                           i2l3730 0614  
                                         i2l3626 01D2                                           i2l3660 030A  
                                         i2l3636 020C                                           i2l3724 05D6  
                                         i2l3646 024A                                           i2l3752 078A  
                                         i2l3744 06F8                                           i2l3736 0672  
                                         i2l3680 0386                                           i2l3664 0314  
                                         i2l3648 028A                                           i2l3682 03C8  
                                         i2l3758 07B0                                           i2l3686 03D0  
                                         _RCREG1 000FAF                      __end_of_i2c_configure_slave 1986  
                                  ??_SleepIfOkay 0064                                           _OSCCON 000FD3  
                                         _SPBRG1 000FB0                                      ?i1_recv_msg 000B  
                                         _SSPADD 000FC8                                   __CFG_WPCFG$OFF 000000  
                                         _SSPBUF 000FC9                                           _TXREG1 000FAE  
                                    ?i1_send_msg 000B                                           i2_blip 1C72  
                             timer0_lthread@tptr 0198                                   __CFG_WPDIS$OFF 000000  
                        FromMainLow_recvmsg@data 001B                                      ?i2_recv_msg 006A  
                                    ?i2_send_msg 006A                                   __CFG_XINST$OFF 000000  
                     __end_of_uart_frame_message 1138                 ??_uart_receive_interrupt_handler 001B  
                ?_uart_receive_interrupt_handler 0001                                  _i2c_int_handler 00C4  
                                         _blink0 1C88                                 OpenTimer0@config 0198  
                                         _ic_ptr 00D2                                        ??___lwmod 019C  
                                  main@msgbuffer 028D                                 __end_of_init_i2c 1578  
                               OpenTimer1@config 019A                                           _memcpy 17BA  
                                         clear_0 157E                                           clear_1 158A  
                                         clear_2 1596                                           clear_3 15A2  
                                         clear_4 15AE                                           clear_5 15BA  
                                         main@ic 02B3                                 __end_of_recv_msg 0D60  
  uart_transmit_interrupt_handler@message_status 002D                                 __end_of_send_msg 0F6A  
                                   __pdataCOMRAM 005D                            timer0_int_handler@val 0081  
                        i2c_int_handler@i2c_data 008B                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
           uart_receive_interrupt_handler@msg_id 0034                                      init_queue@i 019A  
           uart_receive_interrupt_handler@status 002B                         ToMainLow_recvmsg@msgtype 01B0  
                           __size_of_in_high_int 0010                          FromMainLow_sendmsg@data 01AF  
                                _debug_configure 1C28             uart_transmit_interrupt_handler@index 004E  
                                     __accesstop 0060                          __end_of__initialization 15D2  
                     __end_of_ToMainHigh_recvmsg 19F2                       __end_of_ToMainHigh_sendmsg 1AE4  
                            uart_frame_message@i 0008                                  __CFG_IOL1WAY$ON 000000  
                           __CFG_WPEND$PAGE_WPFP 000000                                 _need_sensor_data 00AF  
        retrieve_sensor_values@sensor_bank_front 007F                      __end_of_init_timer1_lthread 1BD4  
                            __end_of_SleepIfOkay 1762                                   __pcstackCOMRAM 0001  
             i2c_int_handler@sensor_bank_ventril 018A                                      ?_ReadTimer1 0001  
                                  __end_of_blip1 1C52                                    __end_of_blip2 1C4A  
                                  __end_of_blip3 1C42                                    __end_of_blip4 1C82  
                send_uart_message@message_q_code 01B4                               __size_of_check_msg 0032  
                                __CFG_DSWDTPS$G2 000000                        timer0_int_handler@msgtype 007F  
                            __size_ofi1_recv_msg 00D2                              __size_ofi1_send_msg 00AA  
                                      ?i1_memcpy 0001                    __size_of_InterruptHandlerHigh 1498  
                    __end_of_InterruptHandlerLow 00C0                                        ?i2_memcpy 0060  
                                  _ToMainHigh_MQ 0200                              __size_ofi2_recv_msg 011E  
                               _enter_sleep_mode 1C82                              __size_ofi2_send_msg 00EC  
                           timer1_lthread@length 01B6                                          ??_blip1 0198  
                                        ??_blip2 0198                                          ??_blip3 0198  
                                        ??_blip4 0060                                    check_msg@qptr 0060  
                           timer1_lthread@retval 01BA                             __size_of_init_queues 0058  
                                     __pbssBANK0 009D                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                                     __pbssBANK4 0400                                      ?_OpenTimer0 0001  
                                    ?_OpenTimer1 0198                                          ?i2_blip 0001  
                        __end_of_i2c_int_handler 07E2                               timer1_lthread@tptr 01B2  
         retrieve_sensor_values@sensor_bank_side 007D                                          ?_blink0 0001  
                              recv_msg@maxlength 01A4                                  recv_msg@msgtype 01A5  
                                recv_msg@tlength 01AC                            __size_of_handle_start 00CA  
                               WriteTimer0@timer 0062                                          ?_memcpy 0198  
                               WriteTimer1@timer 0003                                    ??_WriteTimer0 0062  
                                  ??_WriteTimer1 0003                          __size_of_timer0_lthread 000E  
                        __size_of_timer1_lthread 0062                          ?_retrieve_sensor_values 007D  
                                     ??i1_memcpy 0007                                       ??i2_memcpy 0066  
                        __end_of_debug_configure 1C32                                          _SPBRGH1 000F7F  
                               i1send_msg@length 000D                 i2c_int_handler@sensor_bank_front 004F  
                                        _SSPCON1 000FC6                                          _SSPCON2 000FC5  
                                        _SSPSTAT 000FC7                              __size_of_ReadTimer1 0012  
                              __end_of_check_msg 1A5A                                          i2_blip1 1C6A  
                                        i2_blip2 1C62                                          i2_blip3 1C5A  
                                      ?_init_i2c 0198                                      _SleepIfOkay 1702  
                              _send_uart_message 1BA2                  i2c_int_handler@sensor_bank_side 00C4  
                                __size_ofi2_blip 0008                                        ?_recv_msg 01A2  
                                     _in_low_int 189A                                     _handle_start 120A  
                                        __Hparam 0000                                        ?_send_msg 01A2  
                                        __Lparam 0000                               ?_send_uart_message 01B2  
      uart_receive_interrupt_handler@status_2229 002C                       __end_of_timer0_int_handler 150E  
                    __end_of_FromMainLow_recvmsg 1B38                      __end_of_FromMainLow_sendmsg 1AB6  
                                        ___lwmod 16A2                                  __size_of_blink0 0004  
                                __CFG_STVREN$OFF 000000                              ??_send_uart_message 01B4  
                                        __pcinit 1578                                  __size_of_memcpy 0050  
                                     _init_queue 15DC                                          __ramtop 0F00  
                            __size_of_OpenTimer0 0026                              __size_of_OpenTimer1 003C  
                                        __ptext0 07E2                                          __ptext1 1B82  
                                        __ptext2 1640                                          __ptext3 1C88  
                                        __ptext4 16A2                                          __ptext5 1A5A  
                                        __ptext6 1C1A                                          __ptext7 1BA2  
                                        __ptext8 1A88                                          __ptext9 0E7E  
                 __end_of_retrieve_sensor_values 194E                                        _T0CONbits 000FD5  
                              OpenTimer1@config1 0198                                        _T1CONbits 000FCD  
                  i2c_configure_slave@ptr_thingy 0198                              __end_of_WriteTimer0 1C0A  
                            __end_of_WriteTimer1 1BE6                                          main@jjj 02AD  
                                 __pintcode_body 1422                     __end_of_FromMainHigh_recvmsg 1A28  
                           end_of_initialization 15D2                          timer1_lthread@msgbuffer 01B8  
                   __end_of_FromMainHigh_sendmsg 1A88                       FromMainHigh_sendmsg@length 01B1  
                      __end_of_send_uart_message 1BC2                                          memcpy@d 019E  
                                        memcpy@n 019C                                          memcpy@s 01A0  
                                     ??_init_i2c 019A                                     ??i1_recv_msg 0012  
                        __size_of_uart_configure 0020                      i2c_int_handler@data_written 0089  
                                  __Lmediumconst 0000                                          int_func 1422  
                                   ??i1_send_msg 0011         uart_receive_interrupt_handler@bad_end_id 0031  
     uart_receive_interrupt_handler@bad_start_id 0030                                 ?_i2c_int_handler 0001  
                                   ??i2_recv_msg 0071                                       ??_recv_msg 01A9  
                                   ??i2_send_msg 0070                                       ??_send_msg 01A8  
uart_receive_interrupt_handler@gooey_uart_center 001D                       __end_of_timer1_int_handler 1B10  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc2 000FDE                        ToMainHigh_sendmsg@msgtype 0076  
                                      _PORTBbits 000F81                                 __CFG_DSBOREN$OFF 000000  
                             _uart_frame_message 1056                               __end_ofi1_recv_msg 120A  
                               __CFG_CPUDIV$OSC1 000000                               __end_ofi1_send_msg 137E  
                    FromMainHigh_sendmsg@msgtype 01AE           __end_of_uart_receive_interrupt_handler 0C42  
        __size_of_uart_receive_interrupt_handler 019A                   _uart_receive_interrupt_handler 0AA8  
                               ?_debug_configure 0001                                        _TRISBbits 000F93  
                                      _TRISCbits 000F94                               __end_ofi2_recv_msg 0E7E  
                             __end_ofi2_send_msg 1056                              ?_uart_frame_message 0001  
                  FromMainHigh_recvmsg@maxlength 007C                         timer1_int_handler@result 001B  
                              __CFG_WPFP$PAGE_63 000000                                       main@length 02B1  
                                    ?_in_low_int 0062                                   __end_ofi2_blip 1C7A  
                          timer0_lthread@msgtype 019A                              __CFG_MSSP7B_EN$MSK7 000000  
                   __size_of_i2c_configure_slave 0038                         __end_of_enter_sleep_mode 1C88  
                                   ??_ReadTimer1 0003                             ??_uart_frame_message 0005  
                             _ToMainHigh_recvmsg 19BC                                        i1memcpy@d 0007  
                             _ToMainHigh_sendmsg 1AB6                                        i1memcpy@n 0005  
                                      i1memcpy@s 0009                                      _BAUDCONbits 000F7E  
                                 __end_of_blink0 1C8C                                    __pidataCOMRAM 1C8C  
                                 _timer0_lthread 1C1A                                      ?_init_queue 0198  
                                      i2memcpy@d 0066                                      _WriteTimer0 1BF8  
                                    _WriteTimer1 1BD4                                        i2memcpy@n 0064  
                                      i2memcpy@s 0068                                   _timer1_lthread 1640  
                                 __end_of_memcpy 180A                                _enable_interrupts 1C32  
                               __CFG_DSWDTEN$OFF 000000                              ?_ToMainHigh_recvmsg 01B0  
                       i2c_int_handler@data_read 008E                              ?_ToMainHigh_sendmsg 0076  
                             ?_enable_interrupts 0001                              start_initialization 1578  
                                  ??_in_high_int 0062     uart_receive_interrupt_handler@start_byte_bad 004D  
                              __size_ofi1_memcpy 0040                                __size_ofi2_memcpy 0050  
                      FromMainLow_sendmsg@length 01B1                              ??_enable_interrupts 0198  
                                   ??_OpenTimer0 0198                                     ??_OpenTimer1 0199  
                             __end_of_ReadTimer1 1BF8                  uart_receive_interrupt_handler@i 0035  
                     __size_of_send_uart_message 0020                                main@uart_response 029E  
         uart_transmit_interrupt_handler@message 00B2                                         ??i2_blip 0060  
                   __end_of_InterruptHandlerHigh 14A0                                       init_i2c@ic 0198  
                           ??_ToMainHigh_recvmsg 01B4                             ??_ToMainHigh_sendmsg 0079  
         uart_transmit_interrupt_handler@msgtype 002C                           __end_of_timer0_lthread 1C28  
                                       ??_blink0 0198                         i2c_int_handler@error_buf 0086  
                         __end_of_timer1_lthread 16A2                                 __CFG_LPT1OSC$OFF 000000  
                      __end_of_enable_interrupts 1C3A                                         ??_memcpy 019E  
                          timer1_lthread@msgtype 01B4                             _FromMainHigh_recvmsg 19F2  
            uart_receive_interrupt_handler@frame 009D              uart_receive_interrupt_handler@index 004B  
                           _FromMainHigh_sendmsg 1A5A              uart_receive_interrupt_handler@error 004A  
                   __size_of_init_timer1_lthread 0012                               __end_of_OpenTimer0 1B5E  
                             __end_of_OpenTimer1 1914                         i2c_int_handler@msg_ready 008D  
                                    __pbssCOMRAM 0048                                    ??_init_queues 019B  
                                  __pcstackBANK0 0060                                    __pcstackBANK1 0198  
                                  __pcstackBANK2 028A                              __size_of_in_low_int 003E  
                                       ?i2_blip1 0001                                         ?i2_blip2 0001  
                                       ?i2_blip3 0001                         ToMainLow_sendmsg@msgtype 0017  
                   __size_of_InterruptHandlerLow 00A8                              __end_of_in_high_int 1C1A  
                                 _uart_configure 1B82                                     ?_SleepIfOkay 0001  
                          ToMainLow_recvmsg@data 01B2                                     _ToMainLow_MQ 0100  
                            __size_of_init_queue 0064                                        _check_msg 1A28  
                                      __pnvBANK0 00D2                                __size_of_init_i2c 006A  
                                   recv_msg@data 01A7                                     recv_msg@qmsg 01AE  
                                   recv_msg@slot 01AB                                     recv_msg@qptr 01A2  
                              __size_of_recv_msg 011E                                        __pintcode 0008  
                              __size_of_send_msg 00EC                                  ?_timer0_lthread 0198  
                                       ?___lwmod 0198                            ?_FromMainHigh_recvmsg 0078  
                                ?_timer1_lthread 01B2                            ?_FromMainHigh_sendmsg 01AE  
                                    __pintcodelo 0018                           ToMainHigh_recvmsg@data 01B2  
                     i2c_int_handler@msg_to_send 008C                                WriteTimer0@timer0 0060  
                             _timer0_int_handler 14A0                       uart_frame_message@checksum 0007  
                              WriteTimer1@timer1 0001                             __CFG_RTCOSC$T1OSCREF 000000  
                          ToMainLow_sendmsg@data 0018                                   __size_of_blip1 0008  
                                 __size_of_blip2 0008                                   __size_of_blip3 0008  
                                 __size_of_blip4 0008                           __end_of_uart_configure 1BA2  
                            i1recv_msg@maxlength 000D                              ?_timer0_int_handler 0001  
   uart_receive_interrupt_handler@bad_counter_id 002E                              __end_of_init_queues 17BA  
                                       _LATBbits 000F8A                                         _LATDbits 000F8C  
                                     ?_check_msg 0060                                         _IPR1bits 000F9F  
                                       _PIE1bits 000F9D                    retrieve_sensor_values@msgtype 0084  
                                       _PIR1bits 000F9E                           ToMainHigh_sendmsg@data 0077  
                                       _RCONbits 000FD0                                 __CFG_WDTPS$32768 000000  
                                 i1recv_msg@data 0010                             ??_timer0_int_handler 007D  
                                 i1recv_msg@qmsg 0017                                   i1recv_msg@slot 0014  
                                 i1recv_msg@qptr 000B   uart_receive_interrupt_handler@received_counter 004C  
                   FromMainLow_recvmsg@maxlength 001D                       __size_of_enable_interrupts 0008  
                              i1send_msg@msgtype 000E                                i1send_msg@tlength 0012  
                     FromMainLow_recvmsg@msgtype 0019                     __size_of_FromMainLow_recvmsg 0028  
                   __size_of_FromMainLow_sendmsg 002E                             timer0_lthread@length 019C  
                             _timer1_int_handler 1AE4                                         i1_memcpy 185A  
                           _InterruptHandlerHigh 0008                                         i2_memcpy 180A  
                           timer0_lthread@msgval 01A0                         FromMainHigh_recvmsg@data 007A  
                                    _in_high_int 1C0A                                     send_msg@data 01A6  
                            _i2c_configure_slave 194E                                     send_msg@qmsg 01AC  
                                   send_msg@slot 01AB                                     send_msg@qptr 01A2  
                                ?_uart_configure 0001                              ?_timer1_int_handler 0001  
                               __size_ofi2_blip1 0008                                 __size_ofi2_blip2 0008  
                               __size_ofi2_blip3 0008                                         __Hparam0 0000  
                                   ??_in_low_int 0064                                         __Lparam0 0000  
                           ?_i2c_configure_slave 0198                                ?_enter_sleep_mode 0001  
                         ??_FromMainHigh_recvmsg 007C                           ??_FromMainHigh_sendmsg 01B1  
                           ??_timer1_int_handler 001B          __end_of_uart_transmit_interrupt_handler 1422  
       __size_of_uart_transmit_interrupt_handler 00A4                ??_uart_transmit_interrupt_handler 001E  
               ?_uart_transmit_interrupt_handler 0001                  _uart_transmit_interrupt_handler 137E  
                       __size_of_i2c_int_handler 071E                               ??_enter_sleep_mode 0060  
                               __size_of___lwmod 0060                                     ??_init_queue 019A  
                                   ?_WriteTimer0 0060                                     ?_WriteTimer1 0001  
                       FromMainHigh_sendmsg@data 01AF                          ToMainLow_sendmsg@length 001A  
                              main@t0thread_data 029C                   uart_frame_message@sent_counter 0048  
                          ?_InterruptHandlerHigh 0001              uart_transmit_interrupt_handler@data 001E  
            uart_transmit_interrupt_handler@done 005D                                i2send_msg@msgtype 006D  
                    ToMainHigh_recvmsg@maxlength 01B4                                i2send_msg@tlength 0071  
                        init_timer1_lthread@tptr 0198                                      _init_queues 1762  
                             __end_of_in_low_int 18D8                                         __ptext10 1BC2  
                                       __ptext11 1762                                         __ptext20 1C52  
                                       __ptext12 15DC                                         __ptext21 1986  
                                       __ptext13 150E                                       _T1GCONbits 000F9A  
                                       __ptext30 1B10                                         __ptext22 19BC  
                                       __ptext14 194E                                         __ptext31 1138  
                                       __ptext23 0C42                                         __ptext15 1C32  
                                       __ptext40 14A0                                         __ptext32 0AA8  
                                       __ptext24 17BA                                         __ptext16 1C28  
                                       __ptext41 1BF8                                         __ptext33 1AE4  
                                       __ptext25 18D8                                         __ptext17 1C3A  
                                       __ptext50 120A                                         __ptext42 00C4  
                                       __ptext34 1BD4                                         __ptext26 1B38  
                                       __ptext18 1C42                                         __ptext51 1C7A  
                                       __ptext43 1C5A                                         __ptext35 1B5E  
                                       __ptext19 1C4A                                         __ptext52 1AB6  
                                       __ptext44 1C62                                         __ptext36 12D4  
                                       __ptext28 137E                                         __ptext53 0F6A  
                                       __ptext45 1C6A                                         __ptext37 185A  
                                       __ptext29 1056                                         __ptext54 180A  
                                       __ptext46 1C72                                         __ptext38 1BE6  
                                       __ptext55 1702                                         __ptext47 1914  
                                       __ptext56 189A                                         __ptext48 19F2  
                                       __ptext57 1C0A                                         __ptext49 0D60  
                                       __ptext58 1C82                                         __ptext59 1A28  
                                 i1send_msg@data 000F                                   i1send_msg@qmsg 0015  
                                 i1send_msg@slot 0014                                   i1send_msg@qptr 000B  
                       timer0_int_handler@length 007D        retrieve_sensor_values@sensor_bank_ventril 0081  
                                       _init_i2c 150E                         __size_of_debug_configure 000A  
                            _init_timer1_lthread 1BC2                                    __size_of_blip 0008  
                                  __size_of_main 02C6                                main@t1thread_data 02AF  
                                    ??_check_msg 0062                               __end_of_init_queue 1640  
                           __size_of_SleepIfOkay 0060                                         _recv_msg 0C42  
                          ??_i2c_configure_slave 019A                                         _send_msg 0E7E  
  uart_receive_interrupt_handler@bad_checksum_id 0032                                   init_queue@qptr 0198  
                       ??_retrieve_sensor_values 0083                                   i2recv_msg@data 006F  
                    __size_of_uart_frame_message 00E2                                   i2recv_msg@qmsg 0076  
                                 i2recv_msg@slot 0073                                   i2recv_msg@qptr 006A  
                                   _SSP1STATbits 000FC7                              _InterruptHandlerLow 0018  
                           ?_init_timer1_lthread 0198                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                                         memcpy@d1 0198  
                                       memcpy@s1 019A                     i2c_int_handler@overrun_error 008A  
                               i2send_msg@length 006C                                         intlevel1 0000  
                                       intlevel2 0000                             ?_InterruptHandlerLow 0001  
                   send_uart_message@message_ptr 01B2                                 ___lwmod@dividend 0198  
                                     _RCSTA1bits 000FAC                                    ?_handle_start 0001  
                               ??_timer0_lthread 01A0                      __size_of_ToMainHigh_recvmsg 0036  
                    __size_of_ToMainHigh_sendmsg 002E                                       _OSCCONbits 000FD3  
                               ??_timer1_lthread 01BA                                i1recv_msg@msgtype 000E  
                              i1recv_msg@tlength 0015                         ToMainHigh_sendmsg@length 0079  
                          ??_init_timer1_lthread 019A                           ??_InterruptHandlerHigh 008F  
                              _ToMainLow_recvmsg 1986                                _ToMainLow_sendmsg 1B5E  
                             main@last_reg_recvd 028A                                  ___lwmod@divisor 019A  
                             ?_ToMainLow_recvmsg 01B0                                ??_i2c_int_handler 0085  
                                ___lwmod@counter 019C                               ?_ToMainLow_sendmsg 0017  
                                    _SSPCON1bits 000FC6                                      _SSPCON2bits 000FC5  
                                 i2send_msg@data 006E                            ??_InterruptHandlerLow 0037  
                            ??_ToMainLow_recvmsg 01B4                                   i2send_msg@qmsg 0074  
                                 i2send_msg@slot 0073                                   i2send_msg@qptr 006A  
                            ??_ToMainLow_sendmsg 001A                              _FromMainLow_recvmsg 1B10  
                                 ??_handle_start 0060                              _FromMainLow_sendmsg 1A88  
