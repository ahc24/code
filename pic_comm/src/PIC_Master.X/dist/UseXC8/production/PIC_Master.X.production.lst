

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 15 20:15:31 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    83                           	psect	param0,global,class=BANK0,space=1,delta=1
    84  0000                     
    85                           	psect	idataCOMRAM
    86  001E3C                     __pidataCOMRAM:
    87                           	opt stack 0
    88                           
    89                           ;initializer for uart_transmit_interrupt_handler@done
    90  001E3C  01                 	db	1
    91                           
    92                           	psect	idataBANK0
    93  001E3D                     __pidataBANK0:
    94                           	opt stack 0
    95                           
    96                           ;initializer for timer1_lthread@move_time
    97  001E3D  28                 	db	40
    98  0000                     _BAUDCONbits	set	3966
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR1bits	set	3999
   101  0000                     _LATB	set	3978
   102  0000                     _LATBbits	set	3978
   103  0000                     _LATDbits	set	3980
   104  0000                     _OSCCON	set	4051
   105  0000                     _OSCCONbits	set	4051
   106  0000                     _OSCTUNEbits	set	3995
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PORTBbits	set	3969
   110  0000                     _RCONbits	set	4048
   111  0000                     _RCREG1	set	4015
   112  0000                     _RCSTA1bits	set	4012
   113  0000                     _SPBRG1	set	4016
   114  0000                     _SPBRGH1	set	3967
   115  0000                     _SSP1STATbits	set	4039
   116  0000                     _SSPADD	set	4040
   117  0000                     _SSPBUF	set	4041
   118  0000                     _SSPCON1	set	4038
   119  0000                     _SSPCON1bits	set	4038
   120  0000                     _SSPCON2	set	4037
   121  0000                     _SSPCON2bits	set	4037
   122  0000                     _SSPSTAT	set	4039
   123  0000                     _SSPSTATbits	set	4039
   124  0000                     _T0CON	set	4053
   125  0000                     _T0CONbits	set	4053
   126  0000                     _T1CON	set	4045
   127  0000                     _T1CONbits	set	4045
   128  0000                     _T1GCON	set	3994
   129  0000                     _T1GCONbits	set	3994
   130  0000                     _TMR0H	set	4055
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR1H	set	4047
   133  0000                     _TMR1L	set	4046
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISCbits	set	3988
   137  0000                     _TRISD	set	3989
   138  0000                     _TXREG1	set	4014
   139  0000                     _TXSTA1bits	set	4013
   140                           
   141                           	psect	nvBANK0
   142  0000D3                     __pnvBANK0:
   143                           	opt stack 0
   144  0000D3                     _ic_ptr:
   145                           	opt stack 0
   146  0000D3                     	ds	2
   147                           
   148                           ; #config settings
   149  0000                     
   150                           	psect	cinit
   151  001616                     __pcinit:
   152                           	opt stack 0
   153  001616                     start_initialization:
   154                           	opt stack 0
   155  001616                     __initialization:
   156                           	opt stack 0
   157                           
   158                           ; Clear objects allocated to BANK5 (138 bytes)
   159  001616  EE05  F000         	lfsr	0,__pbssBANK5
   160  00161A  0E8A               	movlw	138
   161  00161C                     clear_0:
   162  00161C  6AEE               	clrf	postinc0,c
   163  00161E  06E8               	decf	wreg,f,c
   164  001620  E1FD               	bnz	clear_0
   165                           
   166                           ; Clear objects allocated to BANK4 (138 bytes)
   167  001622  EE04  F000         	lfsr	0,__pbssBANK4
   168  001626  0E8A               	movlw	138
   169  001628                     clear_1:
   170  001628  6AEE               	clrf	postinc0,c
   171  00162A  06E8               	decf	wreg,f,c
   172  00162C  E1FD               	bnz	clear_1
   173                           
   174                           ; Clear objects allocated to BANK3 (138 bytes)
   175  00162E  EE03  F000         	lfsr	0,__pbssBANK3
   176  001632  0E8A               	movlw	138
   177  001634                     clear_2:
   178  001634  6AEE               	clrf	postinc0,c
   179  001636  06E8               	decf	wreg,f,c
   180  001638  E1FD               	bnz	clear_2
   181                           
   182                           ; Clear objects allocated to BANK2 (138 bytes)
   183  00163A  EE02  F000         	lfsr	0,__pbssBANK2
   184  00163E  0E8A               	movlw	138
   185  001640                     clear_3:
   186  001640  6AEE               	clrf	postinc0,c
   187  001642  06E8               	decf	wreg,f,c
   188  001644  E1FD               	bnz	clear_3
   189                           
   190                           ; Clear objects allocated to BANK1 (14 bytes)
   191  001646  EE01  F092         	lfsr	0,__pbssBANK1
   192  00164A  0E0E               	movlw	14
   193  00164C                     clear_4:
   194  00164C  6AEE               	clrf	postinc0,c
   195  00164E  06E8               	decf	wreg,f,c
   196  001650  E1FD               	bnz	clear_4
   197                           
   198                           ; Clear objects allocated to BANK0 (54 bytes)
   199  001652  EE00  F09D         	lfsr	0,__pbssBANK0
   200  001656  0E36               	movlw	54
   201  001658                     clear_5:
   202  001658  6AEE               	clrf	postinc0,c
   203  00165A  06E8               	decf	wreg,f,c
   204  00165C  E1FD               	bnz	clear_5
   205                           
   206                           ; Clear objects allocated to COMRAM (21 bytes)
   207  00165E  EE00  F04A         	lfsr	0,__pbssCOMRAM
   208  001662  0E15               	movlw	21
   209  001664                     clear_6:
   210  001664  6AEE               	clrf	postinc0,c
   211  001666  06E8               	decf	wreg,f,c
   212  001668  E1FD               	bnz	clear_6
   213                           
   214                           ; Initialize objects allocated to BANK0 (1 bytes)
   215                           ; load TBLPTR registers with __pidataBANK0
   216  00166A  0E3D               	movlw	low __pidataBANK0
   217  00166C  6EF6               	movwf	tblptrl,c
   218  00166E  0E1E               	movlw	high __pidataBANK0
   219  001670  6EF7               	movwf	tblptrh,c
   220  001672  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   221  001674  6EF8               	movwf	tblptru,c
   222  001676  0009               	tblrd		*+	;fetch initializer
   223  001678  CFF5 F0D5          	movff	tablat,__pdataBANK0
   224                           
   225                           ; Initialize objects allocated to COMRAM (1 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227  00167C  0E3C               	movlw	low __pidataCOMRAM
   228  00167E  6EF6               	movwf	tblptrl,c
   229  001680  0E1E               	movlw	high __pidataCOMRAM
   230  001682  6EF7               	movwf	tblptrh,c
   231  001684  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232  001686  6EF8               	movwf	tblptru,c
   233  001688  0009               	tblrd		*+	;fetch initializer
   234  00168A  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   235  00168E                     end_of_initialization:
   236                           	opt stack 0
   237  00168E                     __end_of__initialization:
   238                           	opt stack 0
   239  00168E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  001690  6EF8               	movwf	tblptru,c
   241  001692  0100               	movlb	0
   242  001694  EFF1  F003         	goto	_main	;jump to C main() function
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           
   250                           	psect	bssCOMRAM
   251  00004A                     __pbssCOMRAM:
   252                           	opt stack 0
   253  00004A                     uart_frame_message@sent_counter:
   254                           	opt stack 0
   255  00004A                     	ds	1
   256  00004B                     uart_receive_interrupt_handler@done:
   257                           	opt stack 0
   258  00004B                     	ds	1
   259  00004C                     uart_receive_interrupt_handler@error:
   260                           	opt stack 0
   261  00004C                     	ds	1
   262  00004D                     uart_receive_interrupt_handler@index:
   263                           	opt stack 0
   264  00004D                     	ds	1
   265  00004E                     uart_receive_interrupt_handler@received_counter:
   266                           	opt stack 0
   267  00004E                     	ds	1
   268  00004F                     uart_receive_interrupt_handler@start_byte_bad:
   269                           	opt stack 0
   270  00004F                     	ds	1
   271  000050                     uart_transmit_interrupt_handler@index:
   272                           	opt stack 0
   273  000050                     	ds	1
   274  000051                     i2c_int_handler@sensor_bank_front:
   275                           	opt stack 0
   276  000051                     	ds	14
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           
   284                           	psect	dataCOMRAM
   285  00005F                     __pdataCOMRAM:
   286                           	opt stack 0
   287  00005F                     uart_transmit_interrupt_handler@done:
   288                           	opt stack 0
   289  00005F                     	ds	1
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           
   297                           	psect	bssBANK0
   298  00009D                     __pbssBANK0:
   299                           	opt stack 0
   300  00009D                     uart_receive_interrupt_handler@frame:
   301                           	opt stack 0
   302  00009D                     	ds	18
   303  0000AF                     _need_sensor_data:
   304                           	opt stack 0
   305  0000AF                     	ds	2
   306  0000B1                     _MQ_Main_Willing_to_block:
   307                           	opt stack 0
   308  0000B1                     	ds	1
   309  0000B2                     timer1_lthread@move_state:
   310                           	opt stack 0
   311  0000B2                     	ds	1
   312  0000B3                     uart_transmit_interrupt_handler@message:
   313                           	opt stack 0
   314  0000B3                     	ds	18
   315  0000C5                     i2c_int_handler@sensor_bank_side:
   316                           	opt stack 0
   317  0000C5                     	ds	14
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           
   325                           	psect	dataBANK0
   326  0000D5                     __pdataBANK0:
   327                           	opt stack 0
   328  0000D5                     timer1_lthread@move_time:
   329                           	opt stack 0
   330  0000D5                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           
   338                           	psect	bssBANK1
   339  000192                     __pbssBANK1:
   340                           	opt stack 0
   341  000192                     i2c_int_handler@sensor_bank_ventril:
   342                           	opt stack 0
   343  000192                     	ds	14
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           
   351                           	psect	bssBANK2
   352  000200                     __pbssBANK2:
   353                           	opt stack 0
   354  000200                     _ToMainLow_MQ:
   355                           	opt stack 0
   356  000200                     	ds	138
   357                           tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           tblptrl	equ	0xFF6
   360                           tablat	equ	0xFF5
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           
   364                           	psect	bssBANK3
   365  000300                     __pbssBANK3:
   366                           	opt stack 0
   367  000300                     _ToMainHigh_MQ:
   368                           	opt stack 0
   369  000300                     	ds	138
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           
   377                           	psect	bssBANK4
   378  000400                     __pbssBANK4:
   379                           	opt stack 0
   380  000400                     _FromMainLow_MQ:
   381                           	opt stack 0
   382  000400                     	ds	138
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           
   390                           	psect	bssBANK5
   391  000500                     __pbssBANK5:
   392                           	opt stack 0
   393  000500                     _FromMainHigh_MQ:
   394                           	opt stack 0
   395  000500                     	ds	138
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           
   403                           	psect	cstackBANK1
   404  000100                     __pcstackBANK1:
   405                           	opt stack 0
   406  000100                     ?___lwmod:
   407                           	opt stack 0
   408  000100                     OpenTimer0@config:
   409                           	opt stack 0
   410  000100                     OpenTimer1@config1:
   411                           	opt stack 0
   412  000100                     init_queue@qptr:
   413                           	opt stack 0
   414  000100                     init_i2c@ic:
   415                           	opt stack 0
   416  000100                     i2c_configure_slave@ptr_thingy:
   417                           	opt stack 0
   418  000100                     timer0_lthread@tptr:
   419                           	opt stack 0
   420  000100                     init_timer1_lthread@tptr:
   421                           	opt stack 0
   422  000100                     ___lwmod@dividend:
   423                           	opt stack 0
   424  000100                     memcpy@d1:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x0
   428  000100                     	ds	1
   429  000101                     ??_OpenTimer1:
   430                           
   431                           ; 0 bytes @ 0x1
   432  000101                     	ds	1
   433  000102                     init_queue@i:
   434                           	opt stack 0
   435  000102                     i2c_configure_slave@addr:
   436                           	opt stack 0
   437  000102                     OpenTimer1@config:
   438                           	opt stack 0
   439  000102                     timer0_lthread@msgtype:
   440                           	opt stack 0
   441  000102                     ___lwmod@divisor:
   442                           	opt stack 0
   443  000102                     memcpy@s1:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447  000102                     	ds	1
   448  000103                     
   449                           ; 0 bytes @ 0x3
   450  000103                     	ds	1
   451  000104                     ___lwmod@counter:
   452                           	opt stack 0
   453  000104                     timer0_lthread@length:
   454                           	opt stack 0
   455  000104                     memcpy@n:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x4
   459  000104                     	ds	2
   460  000106                     timer0_lthread@msgbuffer:
   461                           	opt stack 0
   462  000106                     memcpy@d:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x6
   466  000106                     	ds	2
   467  000108                     timer0_lthread@msgval:
   468                           	opt stack 0
   469  000108                     memcpy@s:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x8
   473  000108                     	ds	2
   474  00010A                     send_msg@qptr:
   475                           	opt stack 0
   476  00010A                     recv_msg@qptr:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0xA
   480  00010A                     	ds	2
   481  00010C                     send_msg@length:
   482                           	opt stack 0
   483  00010C                     recv_msg@maxlength:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0xC
   487  00010C                     	ds	1
   488  00010D                     send_msg@msgtype:
   489                           	opt stack 0
   490  00010D                     recv_msg@msgtype:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0xD
   494  00010D                     	ds	1
   495  00010E                     send_msg@data:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0xE
   499  00010E                     	ds	1
   500  00010F                     recv_msg@data:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0xF
   504  00010F                     	ds	1
   505  000110                     ??_send_msg:
   506                           
   507                           ; 0 bytes @ 0x10
   508  000110                     	ds	1
   509  000111                     ??_recv_msg:
   510  000111                     send_msg@tlength:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x11
   514  000111                     	ds	2
   515  000113                     send_msg@slot:
   516                           	opt stack 0
   517  000113                     recv_msg@slot:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x13
   521  000113                     	ds	1
   522  000114                     send_msg@qmsg:
   523                           	opt stack 0
   524  000114                     recv_msg@tlength:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x14
   528  000114                     	ds	2
   529  000116                     FromMainLow_sendmsg@msgtype:
   530                           	opt stack 0
   531  000116                     FromMainHigh_sendmsg@msgtype:
   532                           	opt stack 0
   533  000116                     recv_msg@qmsg:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x16
   537  000116                     	ds	1
   538  000117                     FromMainLow_sendmsg@data:
   539                           	opt stack 0
   540  000117                     FromMainHigh_sendmsg@data:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x17
   544  000117                     	ds	1
   545  000118                     ToMainLow_recvmsg@msgtype:
   546                           	opt stack 0
   547  000118                     ToMainHigh_recvmsg@msgtype:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x18
   551  000118                     	ds	1
   552  000119                     FromMainLow_sendmsg@length:
   553                           	opt stack 0
   554  000119                     FromMainHigh_sendmsg@length:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x19
   558  000119                     	ds	1
   559  00011A                     ToMainLow_recvmsg@data:
   560                           	opt stack 0
   561  00011A                     ToMainHigh_recvmsg@data:
   562                           	opt stack 0
   563  00011A                     send_uart_message@message_ptr:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x1A
   567  00011A                     	ds	2
   568  00011C                     ToMainLow_recvmsg@maxlength:
   569                           	opt stack 0
   570  00011C                     ToMainHigh_recvmsg@maxlength:
   571                           	opt stack 0
   572  00011C                     send_uart_message@message_q_code:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x1C
   576  00011C                     	ds	1
   577  00011D                     timer1_lthread@tptr:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x1D
   581  00011D                     	ds	2
   582  00011F                     timer1_lthread@msgtype:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x1F
   586  00011F                     	ds	2
   587  000121                     timer1_lthread@length:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x21
   591  000121                     	ds	2
   592  000123                     timer1_lthread@msgbuffer:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x23
   596  000123                     	ds	2
   597  000125                     timer1_lthread@move_msg:
   598                           	opt stack 0
   599                           
   600                           ; 14 bytes @ 0x25
   601  000125                     	ds	14
   602  000133                     timer1_lthread@retval:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x33
   606  000133                     	ds	1
   607  000134                     main@sensor_data:
   608                           	opt stack 0
   609                           
   610                           ; 14 bytes @ 0x34
   611  000134                     	ds	14
   612  000142                     main@last_reg_recvd:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x42
   616  000142                     	ds	1
   617  000143                     main@myByte1:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x43
   621  000143                     	ds	1
   622  000144                     main@myByte2:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x44
   626  000144                     	ds	1
   627  000145                     main@msgbuffer:
   628                           	opt stack 0
   629                           
   630                           ; 15 bytes @ 0x45
   631  000145                     	ds	15
   632  000154                     main@t0thread_data:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x54
   636  000154                     	ds	2
   637  000156                     main@uart_response:
   638                           	opt stack 0
   639                           
   640                           ; 14 bytes @ 0x56
   641  000156                     	ds	14
   642  000164                     main@need_sensor_data:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x64
   646  000164                     	ds	1
   647  000165                     main@jjj:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x65
   651  000165                     	ds	2
   652  000167                     main@z:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x67
   656  000167                     	ds	1
   657  000168                     main@t1thread_data:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x68
   661  000168                     	ds	2
   662  00016A                     main@length:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x6A
   666  00016A                     	ds	1
   667  00016B                     main@msgtype:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x6B
   671  00016B                     	ds	1
   672  00016C                     main@ic:
   673                           	opt stack 0
   674                           
   675                           ; 38 bytes @ 0x6C
   676  00016C                     	ds	38
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           
   684                           	psect	cstackBANK0
   685  000060                     __pcstackBANK0:
   686                           	opt stack 0
   687  000060                     ?_in_high_int:
   688                           	opt stack 0
   689  000060                     handle_start@data_read:
   690                           	opt stack 0
   691  000060                     check_msg@qptr:
   692                           	opt stack 0
   693  000060                     WriteTimer0@timer0:
   694                           	opt stack 0
   695  000060                     i2memcpy@d1:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x0
   699  000060                     	ds	2
   700  000062                     ??_check_msg:
   701  000062                     ?_in_low_int:
   702                           	opt stack 0
   703  000062                     WriteTimer0@timer:
   704                           	opt stack 0
   705  000062                     i2memcpy@s1:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x2
   709  000062                     	ds	2
   710  000064                     i2memcpy@n:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x4
   714  000064                     	ds	2
   715  000066                     i2memcpy@d:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x6
   719  000066                     	ds	2
   720  000068                     i2memcpy@s:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x8
   724  000068                     	ds	2
   725  00006A                     i2send_msg@qptr:
   726                           	opt stack 0
   727  00006A                     i2recv_msg@qptr:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0xA
   731  00006A                     	ds	2
   732  00006C                     i2send_msg@length:
   733                           	opt stack 0
   734  00006C                     i2recv_msg@maxlength:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0xC
   738  00006C                     	ds	1
   739  00006D                     i2send_msg@msgtype:
   740                           	opt stack 0
   741  00006D                     i2recv_msg@msgtype:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0xD
   745  00006D                     	ds	1
   746  00006E                     i2send_msg@data:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0xE
   750  00006E                     	ds	1
   751  00006F                     i2recv_msg@data:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0xF
   755  00006F                     	ds	1
   756  000070                     ??i2_send_msg:
   757                           
   758                           ; 0 bytes @ 0x10
   759  000070                     	ds	1
   760  000071                     ??i2_recv_msg:
   761  000071                     i2send_msg@tlength:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x11
   765  000071                     	ds	2
   766  000073                     i2send_msg@slot:
   767                           	opt stack 0
   768  000073                     i2recv_msg@slot:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x13
   772  000073                     	ds	1
   773  000074                     i2send_msg@qmsg:
   774                           	opt stack 0
   775  000074                     i2recv_msg@tlength:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x14
   779  000074                     	ds	2
   780  000076                     ToMainHigh_sendmsg@msgtype:
   781                           	opt stack 0
   782  000076                     i2recv_msg@qmsg:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x16
   786  000076                     	ds	1
   787  000077                     ToMainHigh_sendmsg@data:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x17
   791  000077                     	ds	1
   792  000078                     FromMainHigh_recvmsg@msgtype:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x18
   796  000078                     	ds	1
   797  000079                     ToMainHigh_sendmsg@length:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x19
   801  000079                     	ds	1
   802  00007A                     FromMainHigh_recvmsg@data:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x1A
   806  00007A                     	ds	2
   807  00007C                     FromMainHigh_recvmsg@maxlength:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x1C
   811  00007C                     	ds	1
   812  00007D                     retrieve_sensor_values@sensor_bank_side:
   813                           	opt stack 0
   814  00007D                     timer0_int_handler@length:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x1D
   818  00007D                     	ds	2
   819  00007F                     retrieve_sensor_values@sensor_bank_front:
   820                           	opt stack 0
   821  00007F                     timer0_int_handler@msgtype:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x1F
   825  00007F                     	ds	2
   826  000081                     retrieve_sensor_values@sensor_bank_ventril:
   827                           	opt stack 0
   828  000081                     timer0_int_handler@val:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x21
   832  000081                     	ds	2
   833  000083                     retrieve_sensor_values@length:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x23
   837  000083                     	ds	1
   838  000084                     retrieve_sensor_values@msgtype:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x24
   842  000084                     	ds	1
   843  000085                     ??_i2c_int_handler:
   844                           
   845                           ; 0 bytes @ 0x25
   846  000085                     	ds	1
   847  000086                     i2c_int_handler@error_buf:
   848                           	opt stack 0
   849                           
   850                           ; 3 bytes @ 0x26
   851  000086                     	ds	3
   852  000089                     i2c_int_handler@data_written:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x29
   856  000089                     	ds	1
   857  00008A                     i2c_int_handler@overrun_error:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x2A
   861  00008A                     	ds	1
   862  00008B                     i2c_int_handler@i2c_data:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x2B
   866  00008B                     	ds	1
   867  00008C                     i2c_int_handler@msg_to_send:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x2C
   871  00008C                     	ds	1
   872  00008D                     i2c_int_handler@msg_ready:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x2D
   876  00008D                     	ds	1
   877  00008E                     i2c_int_handler@data_read:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x2E
   881  00008E                     	ds	1
   882  00008F                     ??_InterruptHandlerHigh:
   883                           
   884                           ; 0 bytes @ 0x2F
   885  00008F                     	ds	14
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           
   893                           	psect	cstackCOMRAM
   894  000001                     __pcstackCOMRAM:
   895                           	opt stack 0
   896  000001                     ?_ReadTimer1:
   897                           	opt stack 0
   898  000001                     uart_frame_message@inner:
   899                           	opt stack 0
   900  000001                     WriteTimer1@timer1:
   901                           	opt stack 0
   902  000001                     i1memcpy@d1:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x0
   906  000001                     	ds	2
   907  000003                     uart_frame_message@outer:
   908                           	opt stack 0
   909  000003                     ReadTimer1@timer:
   910                           	opt stack 0
   911  000003                     WriteTimer1@timer:
   912                           	opt stack 0
   913  000003                     i1memcpy@s1:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x2
   917  000003                     	ds	2
   918  000005                     ??_uart_frame_message:
   919  000005                     i1memcpy@n:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x4
   923  000005                     	ds	2
   924  000007                     uart_frame_message@checksum:
   925                           	opt stack 0
   926  000007                     i1memcpy@d:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x6
   930  000007                     	ds	1
   931  000008                     uart_frame_message@i:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x7
   935  000008                     	ds	1
   936  000009                     i1memcpy@s:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x8
   940  000009                     	ds	2
   941  00000B                     i1send_msg@qptr:
   942                           	opt stack 0
   943  00000B                     i1recv_msg@qptr:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0xA
   947  00000B                     	ds	2
   948  00000D                     i1send_msg@length:
   949                           	opt stack 0
   950  00000D                     i1recv_msg@maxlength:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0xC
   954  00000D                     	ds	1
   955  00000E                     i1send_msg@msgtype:
   956                           	opt stack 0
   957  00000E                     i1recv_msg@msgtype:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0xD
   961  00000E                     	ds	1
   962  00000F                     i1send_msg@data:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0xE
   966  00000F                     	ds	1
   967  000010                     i1recv_msg@data:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0xF
   971  000010                     	ds	1
   972  000011                     ??i1_send_msg:
   973                           
   974                           ; 0 bytes @ 0x10
   975  000011                     	ds	1
   976  000012                     ??i1_recv_msg:
   977  000012                     i1send_msg@tlength:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x11
   981  000012                     	ds	2
   982  000014                     i1send_msg@slot:
   983                           	opt stack 0
   984  000014                     i1recv_msg@slot:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x13
   988  000014                     	ds	1
   989  000015                     i1send_msg@qmsg:
   990                           	opt stack 0
   991  000015                     i1recv_msg@tlength:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x14
   995  000015                     	ds	2
   996  000017                     ToMainLow_sendmsg@msgtype:
   997                           	opt stack 0
   998  000017                     i1recv_msg@qmsg:
   999                           	opt stack 0
  1000                           
  1001                           ; 2 bytes @ 0x16
  1002  000017                     	ds	1
  1003  000018                     ToMainLow_sendmsg@data:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x17
  1007  000018                     	ds	1
  1008  000019                     FromMainLow_recvmsg@msgtype:
  1009                           	opt stack 0
  1010                           
  1011                           ; 2 bytes @ 0x18
  1012  000019                     	ds	1
  1013  00001A                     ToMainLow_sendmsg@length:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x19
  1017  00001A                     	ds	1
  1018  00001B                     ??_uart_receive_interrupt_handler:
  1019  00001B                     FromMainLow_recvmsg@data:
  1020                           	opt stack 0
  1021  00001B                     timer1_int_handler@result:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x1A
  1025  00001B                     	ds	2
  1026  00001D                     FromMainLow_recvmsg@maxlength:
  1027                           	opt stack 0
  1028  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
  1029                           	opt stack 0
  1030                           
  1031                           ; 14 bytes @ 0x1C
  1032  00001D                     	ds	1
  1033  00001E                     uart_transmit_interrupt_handler@data:
  1034                           	opt stack 0
  1035                           
  1036                           ; 14 bytes @ 0x1D
  1037  00001E                     	ds	13
  1038  00002B                     uart_receive_interrupt_handler@status:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x2A
  1042  00002B                     	ds	1
  1043  00002C                     uart_receive_interrupt_handler@status_2231:
  1044                           	opt stack 0
  1045  00002C                     uart_transmit_interrupt_handler@msgtype:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x2B
  1049  00002C                     	ds	1
  1050  00002D                     uart_transmit_interrupt_handler@message_status:
  1051                           	opt stack 0
  1052  00002D                     uart_receive_interrupt_handler@bad_checksum_message:
  1053                           	opt stack 0
  1054                           
  1055                           ; 3 bytes @ 0x2C
  1056  00002D                     	ds	3
  1057  000030                     uart_receive_interrupt_handler@bad_counter_id:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0x2F
  1061  000030                     	ds	2
  1062  000032                     uart_receive_interrupt_handler@bad_start_id:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x31
  1066  000032                     	ds	1
  1067  000033                     uart_receive_interrupt_handler@bad_end_id:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x32
  1071  000033                     	ds	1
  1072  000034                     uart_receive_interrupt_handler@message_count:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x33
  1076  000034                     	ds	1
  1077  000035                     uart_receive_interrupt_handler@checksum:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x34
  1081  000035                     	ds	1
  1082  000036                     uart_receive_interrupt_handler@i:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x35
  1086  000036                     	ds	2
  1087  000038                     uart_receive_interrupt_handler@msg_id:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x37
  1091  000038                     	ds	1
  1092  000039                     ??_InterruptHandlerLow:
  1093                           
  1094                           ; 0 bytes @ 0x38
  1095  000039                     	ds	17
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           
  1103 ;;
  1104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1105 ;;
  1106 ;; *************** function _main *****************
  1107 ;; Defined at:
  1108 ;;		line 188 in file "../src/main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  uart_respons   14   86[BANK1 ] unsigned char [14]
  1113 ;;  jjj             2  101[BANK1 ] int 
  1114 ;;  ic             38  108[BANK1 ] struct __i2c_comm
  1115 ;;  msgbuffer      15   69[BANK1 ] unsigned char [15]
  1116 ;;  sensor_data    14   52[BANK1 ] unsigned char [14]
  1117 ;;  t1thread_dat    2  104[BANK1 ] struct __timer1_thread_s
  1118 ;;  t0thread_dat    2   84[BANK1 ] struct __timer0_thread_s
  1119 ;;  uthread_data    2    0        struct __uart_thread_str
  1120 ;;  msgtype         1  107[BANK1 ] unsigned char 
  1121 ;;  length          1  106[BANK1 ] char 
  1122 ;;  z               1  103[BANK1 ] unsigned char 
  1123 ;;  need_sensor_    1  100[BANK1 ] unsigned char 
  1124 ;;  myByte2         1   68[BANK1 ] unsigned char 
  1125 ;;  myByte1         1   67[BANK1 ] unsigned char 
  1126 ;;  last_reg_rec    1   66[BANK1 ] unsigned char 
  1127 ;;  i               1    0        unsigned char 
  1128 ;;  c               1    0        unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;		None               void
  1131 ;; Registers used:
  1132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1139 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1141 ;;      Totals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1142 ;;Total ram usage:       94 bytes
  1143 ;; Hardware stack levels required when called:   16
  1144 ;; This function calls:
  1145 ;;		_OpenTimer0
  1146 ;;		_OpenTimer1
  1147 ;;		_ToMainHigh_recvmsg
  1148 ;;		_ToMainLow_recvmsg
  1149 ;;		_blip
  1150 ;;		_blip1
  1151 ;;		_blip2
  1152 ;;		_blip3
  1153 ;;		_debug_configure
  1154 ;;		_enable_interrupts
  1155 ;;		_i2c_configure_slave
  1156 ;;		_init_i2c
  1157 ;;		_init_queues
  1158 ;;		_init_timer1_lthread
  1159 ;;		_send_uart_message
  1160 ;;		_timer0_lthread
  1161 ;;		_timer1_lthread
  1162 ;;		_uart_configure
  1163 ;; This function is called by:
  1164 ;;		Startup code after reset
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text0
  1169  0007E2                     __ptext0:
  1170                           	opt stack 0
  1171  0007E2                     _main:
  1172                           	opt stack 15
  1173                           
  1174                           ;main.c: 189: char c;
  1175                           ;main.c: 190: signed char length;
  1176                           ;main.c: 191: unsigned char msgtype;
  1177                           ;main.c: 192: unsigned char last_reg_recvd;
  1178                           ;main.c: 193: i2c_comm ic;
  1179                           ;main.c: 194: unsigned char msgbuffer[14 + 1];
  1180                           ;main.c: 195: unsigned char i;
  1181                           ;main.c: 196: uart_thread_struct uthread_data;
  1182                           ;main.c: 197: timer1_thread_struct t1thread_data;
  1183                           ;main.c: 198: timer0_thread_struct t0thread_data;
  1184                           ;main.c: 199: unsigned char need_sensor_data = 1;
  1185                           
  1186                           ;incstack = 0
  1187  0007E2  0E01               	movlw	1
  1188  0007E4  0101               	movlb	1	; () banked
  1189  0007E6  6F64               	movwf	main@need_sensor_data& (0+255),b
  1190                           
  1191                           ;main.c: 215: OSCCON = 0xE0;
  1192  0007E8  0EE0               	movlw	224
  1193  0007EA  6ED3               	movwf	4051,c	;volatile
  1194                           
  1195                           ; BSR set to: 1
  1196                           ;main.c: 223: OSCTUNEbits.PLLEN = 1;
  1197  0007EC  8C9B               	bsf	3995,6,c	;volatile
  1198                           
  1199                           ; BSR set to: 1
  1200                           ;main.c: 238: init_i2c(&ic);
  1201  0007EE  0101               	movlb	1	; () banked
  1202  0007F0  0E01               	movlw	high main@ic
  1203  0007F2  0101               	movlb	1	; () banked
  1204  0007F4  6F01               	movwf	(init_i2c@ic+1)& (0+255),b
  1205  0007F6  0101               	movlb	1	; () banked
  1206  0007F8  0E6C               	movlw	low main@ic
  1207  0007FA  0101               	movlb	1	; () banked
  1208  0007FC  6F00               	movwf	init_i2c@ic& (0+255),b
  1209  0007FE  ECC2  F00B         	call	_init_i2c	;wreg free
  1210                           
  1211                           ;main.c: 241: init_timer1_lthread(&t1thread_data);
  1212  000802  0101               	movlb	1	; () banked
  1213  000804  0E01               	movlw	high main@t1thread_data
  1214  000806  0101               	movlb	1	; () banked
  1215  000808  6F01               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1216  00080A  0101               	movlb	1	; () banked
  1217  00080C  0E68               	movlw	low main@t1thread_data
  1218  00080E  0101               	movlb	1	; () banked
  1219  000810  6F00               	movwf	init_timer1_lthread@tptr& (0+255),b
  1220  000812  ECB9  F00E         	call	_init_timer1_lthread	;wreg free
  1221                           
  1222                           ;main.c: 244: init_queues();
  1223  000816  EC89  F00C         	call	_init_queues	;wreg free
  1224                           
  1225                           ;main.c: 248: TRISB = 0x0;
  1226  00081A  0E00               	movlw	0
  1227  00081C  6E93               	movwf	3987,c	;volatile
  1228                           
  1229                           ;main.c: 249: LATB = 0x0;
  1230  00081E  0E00               	movlw	0
  1231  000820  6E8A               	movwf	3978,c	;volatile
  1232                           
  1233                           ;main.c: 262: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1234  000822  0E96               	movlw	150
  1235  000824  EC74  F00E         	call	_OpenTimer0
  1236                           
  1237                           ;main.c: 269: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1238  000828  0E00               	movlw	0
  1239  00082A  0101               	movlb	1	; () banked
  1240  00082C  6F00               	movwf	OpenTimer1@config1& (0+255),b
  1241  00082E  0E9B               	movlw	155
  1242  000830  EC44  F00D         	call	_OpenTimer1
  1243                           
  1244                           ;main.c: 278: IPR1bits.TMR1IP = 0;
  1245  000834  909F               	bcf	3999,0,c	;volatile
  1246                           
  1247                           ;main.c: 280: IPR1bits.RCIP = 0;
  1248  000836  9A9F               	bcf	3999,5,c	;volatile
  1249                           
  1250                           ;main.c: 283: IPR1bits.SSPIP = 1;
  1251  000838  869F               	bsf	3999,3,c	;volatile
  1252                           
  1253                           ;main.c: 292: i2c_configure_slave(0x9E,&need_sensor_data);
  1254  00083A  0101               	movlb	1	; () banked
  1255  00083C  0E01               	movlw	high main@need_sensor_data
  1256  00083E  0101               	movlb	1	; () banked
  1257  000840  6F01               	movwf	(i2c_configure_slave@ptr_thingy+1)& (0+255),b
  1258  000842  0101               	movlb	1	; () banked
  1259  000844  0E64               	movlw	low main@need_sensor_data
  1260  000846  0101               	movlb	1	; () banked
  1261  000848  6F00               	movwf	i2c_configure_slave@ptr_thingy& (0+255),b
  1262  00084A  0E9E               	movlw	158
  1263  00084C  EC7F  F00D         	call	_i2c_configure_slave
  1264                           
  1265                           ;main.c: 307: PIE1bits.SSPIE = 1;
  1266  000850  869D               	bsf	3997,3,c	;volatile
  1267                           
  1268                           ;main.c: 332: debug_configure();
  1269  000852  ECEC  F00E         	call	_debug_configure	;wreg free
  1270                           
  1271                           ;main.c: 333: blip();
  1272  000856  EC01  F00F         	call	_blip	;wreg free
  1273                           
  1274                           ;main.c: 334: blip1();
  1275  00085A  ECFD  F00E         	call	_blip1	;wreg free
  1276                           
  1277                           ;main.c: 335: blip2();
  1278  00085E  ECF9  F00E         	call	_blip2	;wreg free
  1279                           
  1280                           ;main.c: 336: blip3();
  1281  000862  ECF5  F00E         	call	_blip3	;wreg free
  1282                           
  1283                           ;main.c: 345: enable_interrupts();
  1284  000866  ECF1  F00E         	call	_enable_interrupts	;wreg free
  1285                           
  1286                           ;main.c: 358: uart_configure();
  1287  00086A  EC99  F00E         	call	_uart_configure	;wreg free
  1288                           
  1289                           ;main.c: 360: unsigned char myByte1 = 0x44;
  1290  00086E  0E44               	movlw	68
  1291  000870  0101               	movlb	1	; () banked
  1292  000872  6F43               	movwf	main@myByte1& (0+255),b
  1293                           
  1294                           ; BSR set to: 1
  1295                           ;main.c: 361: unsigned char myByte2 = 0x44;
  1296  000874  0E44               	movlw	68
  1297  000876  0101               	movlb	1	; () banked
  1298  000878  6F44               	movwf	main@myByte2& (0+255),b
  1299                           
  1300                           ; BSR set to: 1
  1301                           ;main.c: 369: unsigned char sensor_data[14];
  1302                           ;main.c: 370: sensor_data[0] = 0x03;
  1303  00087A  0E03               	movlw	3
  1304  00087C  0101               	movlb	1	; () banked
  1305  00087E  6F34               	movwf	main@sensor_data& (0+255),b
  1306                           
  1307                           ; BSR set to: 1
  1308                           ;main.c: 371: unsigned char z;
  1309                           ;main.c: 372: for(z=1;z<14;z++)
  1310  000880  0E01               	movlw	1
  1311  000882  0101               	movlb	1	; () banked
  1312  000884  6F67               	movwf	main@z& (0+255),b
  1313  000886  D00F               	goto	L3
  1314  000888                     l3810:
  1315                           
  1316                           ; BSR set to: 1
  1317                           ;main.c: 373: {
  1318                           ;main.c: 374: sensor_data[z] = 0x00;
  1319  000888  0101               	movlb	1	; () banked
  1320  00088A  5167               	movf	main@z& (0+255),w,b
  1321  00088C  0D01               	mullw	1
  1322  00088E  0101               	movlb	1	; () banked
  1323  000890  0E34               	movlw	low main@sensor_data
  1324  000892  24F3               	addwf	prodl,w,c
  1325  000894  6ED9               	movwf	fsr2l,c
  1326  000896  0101               	movlb	1	; () banked
  1327  000898  0E01               	movlw	high main@sensor_data
  1328  00089A  20F4               	addwfc	prodh,w,c
  1329  00089C  6EDA               	movwf	fsr2h,c
  1330  00089E  0E00               	movlw	0
  1331  0008A0  6EDF               	movwf	indf2,c
  1332                           
  1333                           ; BSR set to: 1
  1334  0008A2  0101               	movlb	1	; () banked
  1335  0008A4  2B67               	incf	main@z& (0+255),f,b
  1336  0008A6                     L3:
  1337                           
  1338                           ; BSR set to: 1
  1339  0008A6  0E0D               	movlw	13
  1340  0008A8  0101               	movlb	1	; () banked
  1341  0008AA  6567               	cpfsgt	main@z& (0+255),b
  1342  0008AC  D7ED               	goto	l3810
  1343  0008AE                     l3816:
  1344                           
  1345                           ;main.c: 390: if( need_sensor_data )
  1346  0008AE  0101               	movlb	1	; () banked
  1347  0008B0  5164               	movf	main@need_sensor_data& (0+255),w,b
  1348  0008B2  B4D8               	btfsc	status,2,c
  1349  0008B4  D003               	goto	l3820
  1350                           
  1351                           ; BSR set to: 1
  1352                           ;main.c: 391: {
  1353                           ;main.c: 394: need_sensor_data = 0;
  1354  0008B6  0E00               	movlw	0
  1355  0008B8  0101               	movlb	1	; () banked
  1356  0008BA  6F64               	movwf	main@need_sensor_data& (0+255),b
  1357  0008BC                     l3820:
  1358                           
  1359                           ; BSR set to: 1
  1360                           ;main.c: 395: }
  1361                           ;main.c: 405: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1362  0008BC  0101               	movlb	1	; () banked
  1363  0008BE  0E01               	movlw	high main@msgtype
  1364  0008C0  0101               	movlb	1	; () banked
  1365  0008C2  6F19               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1366  0008C4  0101               	movlb	1	; () banked
  1367  0008C6  0E6B               	movlw	low main@msgtype
  1368  0008C8  0101               	movlb	1	; () banked
  1369  0008CA  6F18               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1370  0008CC  0101               	movlb	1	; () banked
  1371  0008CE  0E01               	movlw	high main@msgbuffer
  1372  0008D0  0101               	movlb	1	; () banked
  1373  0008D2  6F1B               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1374  0008D4  0101               	movlb	1	; () banked
  1375  0008D6  0E45               	movlw	low main@msgbuffer
  1376  0008D8  0101               	movlb	1	; () banked
  1377  0008DA  6F1A               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1378  0008DC  0E0E               	movlw	14
  1379  0008DE  ECB6  F00D         	call	_ToMainHigh_recvmsg
  1380  0008E2  0101               	movlb	1	; () banked
  1381  0008E4  6F6A               	movwf	main@length& (0+255),b
  1382                           
  1383                           ; BSR set to: 1
  1384                           ;main.c: 406: if (length < 0) {
  1385  0008E6  0101               	movlb	1	; () banked
  1386  0008E8  BF6A               	btfsc	main@length& (0+255),7,b
  1387  0008EA  D031               	goto	l3834
  1388  0008EC  D024               	goto	l3832
  1389  0008EE                     l3826:
  1390                           
  1391                           ; BSR set to: 1
  1392                           ;main.c: 416: {
  1393                           ;main.c: 417: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1394  0008EE  0101               	movlb	1	; () banked
  1395  0008F0  0E01               	movlw	high main@t0thread_data
  1396  0008F2  0101               	movlb	1	; () banked
  1397  0008F4  6F01               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1398  0008F6  0101               	movlb	1	; () banked
  1399  0008F8  0E54               	movlw	low main@t0thread_data
  1400  0008FA  0101               	movlb	1	; () banked
  1401  0008FC  6F00               	movwf	timer0_lthread@tptr& (0+255),b
  1402  0008FE  0101               	movlb	1	; () banked
  1403  000900  C16B  F102         	movff	main@msgtype,timer0_lthread@msgtype
  1404  000904  0101               	movlb	1	; () banked
  1405  000906  6B03               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1406  000908  0101               	movlb	1	; () banked
  1407  00090A  516A               	movf	main@length& (0+255),w,b
  1408  00090C  0101               	movlb	1	; () banked
  1409  00090E  6F04               	movwf	timer0_lthread@length& (0+255),b
  1410  000910  0101               	movlb	1	; () banked
  1411  000912  6B05               	clrf	(timer0_lthread@length+1)& (0+255),b
  1412  000914  0101               	movlb	1	; () banked
  1413  000916  BF04               	btfsc	timer0_lthread@length& (0+255),7,b
  1414  000918  0705               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1415  00091A  0101               	movlb	1	; () banked
  1416  00091C  0E01               	movlw	high main@msgbuffer
  1417  00091E  0101               	movlb	1	; () banked
  1418  000920  6F07               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1419  000922  0101               	movlb	1	; () banked
  1420  000924  0E45               	movlw	low main@msgbuffer
  1421  000926  0101               	movlb	1	; () banked
  1422  000928  6F06               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1423  00092A  ECE5  F00E         	call	_timer0_lthread	;wreg free
  1424                           
  1425                           ;main.c: 418: break;
  1426  00092E  D00F               	goto	l3834
  1427  000930                     l114:
  1428                           
  1429                           ;main.c: 421: case 41:
  1430                           ;main.c: 422: {
  1431                           ;main.c: 425: last_reg_recvd = msgbuffer[0];
  1432  000930  C145  F142         	movff	main@msgbuffer,main@last_reg_recvd
  1433                           
  1434                           ;main.c: 426: break;
  1435  000934  D00C               	goto	l3834
  1436  000936                     l3832:
  1437  000936  0101               	movlb	1	; () banked
  1438  000938  516B               	movf	main@msgtype& (0+255),w,b
  1439                           
  1440                           ; Switch size 1, requested type "space"
  1441                           ; Number of cases is 4, Range of values is 10 to 42
  1442                           ; switch strategies available:
  1443                           ; Name         Instructions Cycles
  1444                           ; simple_byte           13     7 (average)
  1445                           ;	Chosen strategy is simple_byte
  1446  00093A  0A0A               	xorlw	10	; case 10
  1447  00093C  B4D8               	btfsc	status,2,c
  1448  00093E  D7D7               	goto	l3826
  1449  000940  0A22               	xorlw	34	; case 40
  1450  000942  B4D8               	btfsc	status,2,c
  1451  000944  D7F5               	goto	l114
  1452  000946  0A01               	xorlw	1	; case 41
  1453  000948  B4D8               	btfsc	status,2,c
  1454  00094A  D7F2               	goto	l114
  1455  00094C  0A03               	xorlw	3	; case 42
  1456  00094E                     l3834:
  1457                           
  1458                           ;main.c: 445: }
  1459                           ;main.c: 448: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1460  00094E  0101               	movlb	1	; () banked
  1461  000950  0E01               	movlw	high main@msgtype
  1462  000952  0101               	movlb	1	; () banked
  1463  000954  6F19               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1464  000956  0101               	movlb	1	; () banked
  1465  000958  0E6B               	movlw	low main@msgtype
  1466  00095A  0101               	movlb	1	; () banked
  1467  00095C  6F18               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1468  00095E  0101               	movlb	1	; () banked
  1469  000960  0E01               	movlw	high main@msgbuffer
  1470  000962  0101               	movlb	1	; () banked
  1471  000964  6F1B               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1472  000966  0101               	movlb	1	; () banked
  1473  000968  0E45               	movlw	low main@msgbuffer
  1474  00096A  0101               	movlb	1	; () banked
  1475  00096C  6F1A               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1476  00096E  0E0E               	movlw	14
  1477  000970  EC9B  F00D         	call	_ToMainLow_recvmsg
  1478  000974  0101               	movlb	1	; () banked
  1479  000976  6F6A               	movwf	main@length& (0+255),b
  1480                           
  1481                           ; BSR set to: 1
  1482                           ;main.c: 449: if (length < 0) {
  1483  000978  0101               	movlb	1	; () banked
  1484  00097A  BF6A               	btfsc	main@length& (0+255),7,b
  1485  00097C  D798               	goto	l3816
  1486                           
  1487                           ; BSR set to: 1
  1488                           ;main.c: 455: else
  1489                           ;main.c: 456: {
  1490                           ;main.c: 457: unsigned char uart_response[14];
  1491                           ;main.c: 458: int jjj;
  1492                           ;main.c: 459: for(jjj=0;jjj<14;jjj++)
  1493                           
  1494                           ; BSR set to: 1
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;main.c: 453: }
  1498                           ;main.c: 454: }
  1499                           
  1500                           ; BSR set to: 1
  1501  00097E  0E00               	movlw	0
  1502  000980  0101               	movlb	1	; () banked
  1503  000982  6F66               	movwf	(main@jjj+1)& (0+255),b
  1504  000984  0E00               	movlw	0
  1505  000986  0101               	movlb	1	; () banked
  1506  000988  6F65               	movwf	main@jjj& (0+255),b
  1507  00098A                     
  1508                           ; BSR set to: 1
  1509  00098A  0101               	movlb	1	; () banked
  1510  00098C  5166               	movf	(main@jjj+1)& (0+255),w,b
  1511  00098E  0A80               	xorlw	128
  1512  000990  0F80               	addlw	-128
  1513  000992  0E0E               	movlw	14
  1514  000994  B4D8               	btfsc	status,2,c
  1515  000996  5D65               	subwf	main@jjj& (0+255),w,b
  1516  000998  B0D8               	btfsc	status,0,c
  1517  00099A  D094               	goto	l3894
  1518                           
  1519                           ; BSR set to: 1
  1520                           ;main.c: 460: {
  1521                           ;main.c: 461: uart_response[jjj] = 0;
  1522                           
  1523                           ; BSR set to: 1
  1524                           
  1525                           ; BSR set to: 1
  1526  00099C  0101               	movlb	1	; () banked
  1527  00099E  0E56               	movlw	low main@uart_response
  1528  0009A0  0101               	movlb	1	; () banked
  1529  0009A2  2565               	addwf	main@jjj& (0+255),w,b
  1530  0009A4  6ED9               	movwf	fsr2l,c
  1531  0009A6  0101               	movlb	1	; () banked
  1532  0009A8  0E01               	movlw	high main@uart_response
  1533  0009AA  0101               	movlb	1	; () banked
  1534  0009AC  2166               	addwfc	(main@jjj+1)& (0+255),w,b
  1535  0009AE  6EDA               	movwf	fsr2h,c
  1536  0009B0  0E00               	movlw	0
  1537  0009B2  6EDF               	movwf	indf2,c
  1538                           
  1539                           ; BSR set to: 1
  1540  0009B4  0101               	movlb	1	; () banked
  1541  0009B6  4B65               	infsnz	main@jjj& (0+255),f,b
  1542  0009B8  2B66               	incf	(main@jjj+1)& (0+255),f,b
  1543  0009BA  D7E7               	goto	L2
  1544  0009BC                     l3852:
  1545                           
  1546                           ; BSR set to: 1
  1547                           ;main.c: 466: {
  1548                           ;main.c: 467: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1549  0009BC  0101               	movlb	1	; () banked
  1550  0009BE  0E01               	movlw	high main@t1thread_data
  1551  0009C0  0101               	movlb	1	; () banked
  1552  0009C2  6F1E               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1553  0009C4  0101               	movlb	1	; () banked
  1554  0009C6  0E68               	movlw	low main@t1thread_data
  1555  0009C8  0101               	movlb	1	; () banked
  1556  0009CA  6F1D               	movwf	timer1_lthread@tptr& (0+255),b
  1557  0009CC  0101               	movlb	1	; () banked
  1558  0009CE  C16B  F11F         	movff	main@msgtype,timer1_lthread@msgtype
  1559  0009D2  0101               	movlb	1	; () banked
  1560  0009D4  6B20               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1561  0009D6  0101               	movlb	1	; () banked
  1562  0009D8  516A               	movf	main@length& (0+255),w,b
  1563  0009DA  0101               	movlb	1	; () banked
  1564  0009DC  6F21               	movwf	timer1_lthread@length& (0+255),b
  1565  0009DE  0101               	movlb	1	; () banked
  1566  0009E0  6B22               	clrf	(timer1_lthread@length+1)& (0+255),b
  1567  0009E2  0101               	movlb	1	; () banked
  1568  0009E4  BF21               	btfsc	timer1_lthread@length& (0+255),7,b
  1569  0009E6  0722               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1570  0009E8  0101               	movlb	1	; () banked
  1571  0009EA  0E01               	movlw	high main@msgbuffer
  1572  0009EC  0101               	movlb	1	; () banked
  1573  0009EE  6F24               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1574  0009F0  0101               	movlb	1	; () banked
  1575  0009F2  0E45               	movlw	low main@msgbuffer
  1576  0009F4  0101               	movlb	1	; () banked
  1577  0009F6  6F23               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1578  0009F8  EC50  F006         	call	_timer1_lthread	;wreg free
  1579                           
  1580                           ;main.c: 468: break;
  1581  0009FC  D758               	goto	l3816
  1582  0009FE                     l3854:
  1583                           
  1584                           ;main.c: 473: {
  1585                           ;main.c: 474: uart_response[0] = 0xf1;
  1586  0009FE  0EF1               	movlw	241
  1587  000A00  0101               	movlb	1	; () banked
  1588  000A02  6F56               	movwf	main@uart_response& (0+255),b
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;main.c: 475: uart_response[1] = msgbuffer[0];
  1592  000A04  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1593                           
  1594                           ; BSR set to: 1
  1595                           ;main.c: 476: send_uart_message( uart_response );
  1596  000A08  0101               	movlb	1	; () banked
  1597  000A0A  0E01               	movlw	high main@uart_response
  1598  000A0C  0101               	movlb	1	; () banked
  1599  000A0E  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1600  000A10  0101               	movlb	1	; () banked
  1601  000A12  0E56               	movlw	low main@uart_response
  1602  000A14  0101               	movlb	1	; () banked
  1603  000A16  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1604  000A18  ECA9  F00E         	call	_send_uart_message	;wreg free
  1605                           
  1606                           ;main.c: 477: break;
  1607  000A1C  D748               	goto	l3816
  1608  000A1E                     l3860:
  1609                           
  1610                           ;main.c: 480: {
  1611                           ;main.c: 481: uart_response[0] = 0xf2;
  1612  000A1E  0EF2               	movlw	242
  1613  000A20  0101               	movlb	1	; () banked
  1614  000A22  6F56               	movwf	main@uart_response& (0+255),b
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;main.c: 482: uart_response[1] = msgbuffer[0];
  1618  000A24  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1619                           
  1620                           ; BSR set to: 1
  1621                           ;main.c: 483: uart_response[2] = msgbuffer[1];
  1622  000A28  C146  F158         	movff	main@msgbuffer+1,main@uart_response+2
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;main.c: 484: send_uart_message( uart_response );
  1626  000A2C  0101               	movlb	1	; () banked
  1627  000A2E  0E01               	movlw	high main@uart_response
  1628  000A30  0101               	movlb	1	; () banked
  1629  000A32  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1630  000A34  0101               	movlb	1	; () banked
  1631  000A36  0E56               	movlw	low main@uart_response
  1632  000A38  0101               	movlb	1	; () banked
  1633  000A3A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1634  000A3C  ECA9  F00E         	call	_send_uart_message	;wreg free
  1635                           
  1636                           ;main.c: 485: break;
  1637  000A40  D736               	goto	l3816
  1638  000A42                     l3868:
  1639                           
  1640                           ;main.c: 488: {
  1641                           ;main.c: 489: uart_response[0] = 0xf3;
  1642  000A42  0EF3               	movlw	243
  1643  000A44  0101               	movlb	1	; () banked
  1644  000A46  6F56               	movwf	main@uart_response& (0+255),b
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1648  000A48  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1649                           
  1650                           ; BSR set to: 1
  1651                           ;main.c: 491: send_uart_message( uart_response );
  1652  000A4C  0101               	movlb	1	; () banked
  1653  000A4E  0E01               	movlw	high main@uart_response
  1654  000A50  0101               	movlb	1	; () banked
  1655  000A52  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1656  000A54  0101               	movlb	1	; () banked
  1657  000A56  0E56               	movlw	low main@uart_response
  1658  000A58  0101               	movlb	1	; () banked
  1659  000A5A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1660  000A5C  ECA9  F00E         	call	_send_uart_message	;wreg free
  1661                           
  1662                           ;main.c: 492: break;
  1663  000A60  D726               	goto	l3816
  1664  000A62                     l3874:
  1665                           
  1666                           ;main.c: 495: {
  1667                           ;main.c: 496: uart_response[0] = 0xf4;
  1668  000A62  0EF4               	movlw	244
  1669  000A64  0101               	movlb	1	; () banked
  1670  000A66  6F56               	movwf	main@uart_response& (0+255),b
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;main.c: 497: uart_response[1] = msgbuffer[0];
  1674  000A68  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1675                           
  1676                           ; BSR set to: 1
  1677                           ;main.c: 498: send_uart_message( uart_response );
  1678  000A6C  0101               	movlb	1	; () banked
  1679  000A6E  0E01               	movlw	high main@uart_response
  1680  000A70  0101               	movlb	1	; () banked
  1681  000A72  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1682  000A74  0101               	movlb	1	; () banked
  1683  000A76  0E56               	movlw	low main@uart_response
  1684  000A78  0101               	movlb	1	; () banked
  1685  000A7A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1686  000A7C  ECA9  F00E         	call	_send_uart_message	;wreg free
  1687                           
  1688                           ;main.c: 499: break;
  1689  000A80  D716               	goto	l3816
  1690  000A82                     l3880:
  1691                           
  1692                           ;main.c: 503: {
  1693                           ;main.c: 504: uart_response[0] = 0x11;
  1694  000A82  0E11               	movlw	17
  1695  000A84  0101               	movlb	1	; () banked
  1696  000A86  6F56               	movwf	main@uart_response& (0+255),b
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;main.c: 505: uart_response[1] = msgbuffer[0];
  1700  000A88  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;main.c: 506: send_uart_message( uart_response );
  1704  000A8C  0101               	movlb	1	; () banked
  1705  000A8E  0E01               	movlw	high main@uart_response
  1706  000A90  0101               	movlb	1	; () banked
  1707  000A92  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1708  000A94  0101               	movlb	1	; () banked
  1709  000A96  0E56               	movlw	low main@uart_response
  1710  000A98  0101               	movlb	1	; () banked
  1711  000A9A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1712  000A9C  ECA9  F00E         	call	_send_uart_message	;wreg free
  1713                           
  1714                           ;main.c: 507: break;
  1715  000AA0  D706               	goto	l3816
  1716  000AA2                     l3886:
  1717                           
  1718                           ;main.c: 516: {
  1719                           ;main.c: 517: send_uart_message( sensor_data );
  1720  000AA2  0101               	movlb	1	; () banked
  1721  000AA4  0E01               	movlw	high main@sensor_data
  1722  000AA6  0101               	movlb	1	; () banked
  1723  000AA8  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1724  000AAA  0101               	movlb	1	; () banked
  1725  000AAC  0E34               	movlw	low main@sensor_data
  1726  000AAE  0101               	movlb	1	; () banked
  1727  000AB0  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1728  000AB2  ECA9  F00E         	call	_send_uart_message	;wreg free
  1729                           
  1730                           ;main.c: 518: break;
  1731  000AB6  D6FB               	goto	l3816
  1732  000AB8                     l3890:
  1733  000AB8  0101               	movlb	1	; () banked
  1734  000ABA  5145               	movf	main@msgbuffer& (0+255),w,b
  1735                           
  1736                           ; Switch size 1, requested type "space"
  1737                           ; Number of cases is 1, Range of values is 2 to 2
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte            4     3 (average)
  1741                           ;	Chosen strategy is simple_byte
  1742  000ABC  0A02               	xorlw	2	; case 2
  1743  000ABE  B4D8               	btfsc	status,2,c
  1744  000AC0  D7F0               	goto	l3886
  1745  000AC2  D6F5               	goto	l3816
  1746  000AC4                     l3894:
  1747                           
  1748                           ; BSR set to: 1
  1749  000AC4  0101               	movlb	1	; () banked
  1750  000AC6  516B               	movf	main@msgtype& (0+255),w,b
  1751                           
  1752                           ; Switch size 1, requested type "space"
  1753                           ; Number of cases is 8, Range of values is 11 to 36
  1754                           ; switch strategies available:
  1755                           ; Name         Instructions Cycles
  1756                           ; simple_byte           25    13 (average)
  1757                           ;	Chosen strategy is simple_byte
  1758  000AC8  0A0B               	xorlw	11	; case 11
  1759  000ACA  B4D8               	btfsc	status,2,c
  1760  000ACC  D777               	goto	l3852
  1761  000ACE  0A15               	xorlw	21	; case 30
  1762  000AD0  B4D8               	btfsc	status,2,c
  1763  000AD2  D795               	goto	l3854
  1764  000AD4  0A01               	xorlw	1	; case 31
  1765  000AD6  B4D8               	btfsc	status,2,c
  1766  000AD8  D7EF               	goto	l3890
  1767  000ADA  0A3F               	xorlw	63	; case 32
  1768  000ADC  B4D8               	btfsc	status,2,c
  1769  000ADE  D78F               	goto	l3854
  1770  000AE0  0A01               	xorlw	1	; case 33
  1771  000AE2  B4D8               	btfsc	status,2,c
  1772  000AE4  D79C               	goto	l3860
  1773  000AE6  0A03               	xorlw	3	; case 34
  1774  000AE8  B4D8               	btfsc	status,2,c
  1775  000AEA  D7AB               	goto	l3868
  1776  000AEC  0A01               	xorlw	1	; case 35
  1777  000AEE  B4D8               	btfsc	status,2,c
  1778  000AF0  D7B8               	goto	l3874
  1779  000AF2  0A07               	xorlw	7	; case 36
  1780  000AF4  B4D8               	btfsc	status,2,c
  1781  000AF6  D7C5               	goto	l3880
  1782  000AF8  D6DA               	goto	l3816
  1783  000AFA                     __end_of_main:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           prodh	equ	0xFF4
  1790                           prodl	equ	0xFF3
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           indf2	equ	0xFDF
  1794                           fsr2h	equ	0xFDA
  1795                           fsr2l	equ	0xFD9
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _uart_configure *****************
  1799 ;; Defined at:
  1800 ;;		line 22 in file "../src/my_uart.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;		None               void
  1807 ;; Registers used:
  1808 ;;		wreg, status,2
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:   11
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text1
  1829  001D32                     __ptext1:
  1830                           	opt stack 0
  1831  001D32                     _uart_configure:
  1832                           	opt stack 19
  1833                           
  1834                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1835                           
  1836                           ; BSR set to: 1
  1837                           ;incstack = 0
  1838  001D32  8E94               	bsf	3988,7,c	;volatile
  1839                           
  1840                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1841  001D34  9C94               	bcf	3988,6,c	;volatile
  1842                           
  1843                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1844  001D36  867E               	bsf	3966,3,c	;volatile
  1845                           
  1846                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1847  001D38  84AD               	bsf	4013,2,c	;volatile
  1848                           
  1849                           ;my_uart.c: 31: SPBRGH1 = 0x00;
  1850  001D3A  0E00               	movlw	0
  1851  001D3C  6E7F               	movwf	3967,c	;volatile
  1852                           
  1853                           ;my_uart.c: 32: SPBRG1 = 0xCF;
  1854  001D3E  0ECF               	movlw	207
  1855  001D40  6EB0               	movwf	4016,c	;volatile
  1856                           
  1857                           ;my_uart.c: 34: TXSTA1bits.SYNC = 0;
  1858  001D42  98AD               	bcf	4013,4,c	;volatile
  1859                           
  1860                           ;my_uart.c: 35: RCSTA1bits.SPEN = 1;
  1861  001D44  8EAC               	bsf	4012,7,c	;volatile
  1862                           
  1863                           ;my_uart.c: 38: IPR1bits.TX1IP = 0;
  1864  001D46  989F               	bcf	3999,4,c	;volatile
  1865                           
  1866                           ;my_uart.c: 40: PIE1bits.TX1IE = 0;
  1867  001D48  989D               	bcf	3997,4,c	;volatile
  1868                           
  1869                           ;my_uart.c: 41: PIE1bits.RC1IE = 1;
  1870  001D4A  8A9D               	bsf	3997,5,c	;volatile
  1871                           
  1872                           ;my_uart.c: 43: TXSTA1bits.TXEN = 1;
  1873  001D4C  8AAD               	bsf	4013,5,c	;volatile
  1874                           
  1875                           ;my_uart.c: 44: RCSTA1bits.CREN = 1;
  1876  001D4E  88AC               	bsf	4012,4,c	;volatile
  1877  001D50  0012               	return	
  1878  001D52                     __end_of_uart_configure:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           postinc0	equ	0xFEE
  1887                           wreg	equ	0xFE8
  1888                           indf2	equ	0xFDF
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8
  1892                           
  1893 ;; *************** function _timer1_lthread *****************
  1894 ;; Defined at:
  1895 ;;		line 16 in file "../src/timer1_thread.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  tptr            2   29[BANK1 ] PTR struct __timer1_thre
  1898 ;;		 -> main@t1thread_data(2), 
  1899 ;;  msgtype         2   31[BANK1 ] int 
  1900 ;;  length          2   33[BANK1 ] int 
  1901 ;;  msgbuffer       2   35[BANK1 ] PTR unsigned char 
  1902 ;;		 -> main@msgbuffer(15), 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  move_msg       14   37[BANK1 ] unsigned char [14]
  1905 ;;  retval          1   51[BANK1 ] char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2   29[BANK1 ] int 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1915 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1916 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;Total ram usage:       23 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:   15
  1922 ;; This function calls:
  1923 ;;		_FromMainHigh_sendmsg
  1924 ;;		___lwmod
  1925 ;;		_blink0
  1926 ;;		_send_uart_message
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text2
  1933  000CA0                     __ptext2:
  1934                           	opt stack 0
  1935  000CA0                     _timer1_lthread:
  1936                           	opt stack 15
  1937                           
  1938                           ;timer1_thread.c: 17: signed char retval;
  1939                           ;timer1_thread.c: 19: blink0();
  1940                           
  1941                           ;incstack = 0
  1942  000CA0  EC1C  F00F         	call	_blink0	;wreg free
  1943                           
  1944                           ;timer1_thread.c: 21: static unsigned char move_time = 40;
  1945                           ;timer1_thread.c: 23: unsigned char move_msg[14];
  1946                           ;timer1_thread.c: 24: move_msg[0] = 0x01;
  1947  000CA4  0E01               	movlw	1
  1948  000CA6  0101               	movlb	1	; () banked
  1949  000CA8  6F25               	movwf	timer1_lthread@move_msg& (0+255),b
  1950                           
  1951                           ;timer1_thread.c: 33: static unsigned char move_state = 0x00;
  1952                           ;timer1_thread.c: 34: switch(move_state)
  1953  000CAA  D084               	goto	l3746
  1954  000CAC                     l3692:
  1955                           
  1956                           ;timer1_thread.c: 37: {
  1957                           ;timer1_thread.c: 38: move_msg[1] = 127;
  1958  000CAC  0E7F               	movlw	127
  1959  000CAE  0101               	movlb	1	; () banked
  1960  000CB0  6F26               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  1961                           
  1962                           ;timer1_thread.c: 39: move_msg[2] = 127;
  1963  000CB2  0E7F               	movlw	127
  1964  000CB4  0101               	movlb	1	; () banked
  1965  000CB6  6F27               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;timer1_thread.c: 41: send_uart_message( move_msg );
  1969  000CB8  0101               	movlb	1	; () banked
  1970  000CBA  0E01               	movlw	high timer1_lthread@move_msg
  1971  000CBC  0101               	movlb	1	; () banked
  1972  000CBE  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1973  000CC0  0101               	movlb	1	; () banked
  1974  000CC2  0E25               	movlw	low timer1_lthread@move_msg
  1975  000CC4  0101               	movlb	1	; () banked
  1976  000CC6  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1977  000CC8  ECA9  F00E         	call	_send_uart_message	;wreg free
  1978                           
  1979                           ;timer1_thread.c: 43: move_time--;
  1980  000CCC  0100               	movlb	0	; () banked
  1981  000CCE  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;timer1_thread.c: 45: if(move_time==0)
  1985  000CD0  0100               	movlb	0	; () banked
  1986  000CD2  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  1987  000CD4  D081               	goto	l3748
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;timer1_thread.c: 46: {
  1991                           ;timer1_thread.c: 47: move_time = 40;
  1992  000CD6  0E28               	movlw	40
  1993  000CD8  0100               	movlb	0	; () banked
  1994  000CDA  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  1995                           
  1996                           ;timer1_thread.c: 48: move_state = 0x01;
  1997  000CDC  0E01               	movlw	1
  1998  000CDE  D067               	goto	L8
  1999  000CE0                     l3702:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;timer1_thread.c: 53: {
  2003                           ;timer1_thread.c: 54: move_msg[1] = (unsigned char)-128;
  2004  000CE0  0E80               	movlw	128
  2005  000CE2  0101               	movlb	1	; () banked
  2006  000CE4  6F26               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2007                           
  2008                           ;timer1_thread.c: 55: move_msg[2] = (unsigned char)-128;
  2009  000CE6  0E80               	movlw	128
  2010  000CE8  0101               	movlb	1	; () banked
  2011  000CEA  6F27               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;timer1_thread.c: 57: send_uart_message( move_msg );
  2015  000CEC  0101               	movlb	1	; () banked
  2016  000CEE  0E01               	movlw	high timer1_lthread@move_msg
  2017  000CF0  0101               	movlb	1	; () banked
  2018  000CF2  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2019  000CF4  0101               	movlb	1	; () banked
  2020  000CF6  0E25               	movlw	low timer1_lthread@move_msg
  2021  000CF8  0101               	movlb	1	; () banked
  2022  000CFA  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2023  000CFC  ECA9  F00E         	call	_send_uart_message	;wreg free
  2024                           
  2025                           ;timer1_thread.c: 59: move_time--;
  2026  000D00  0100               	movlb	0	; () banked
  2027  000D02  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;timer1_thread.c: 61: if(move_time==0)
  2031  000D04  0100               	movlb	0	; () banked
  2032  000D06  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2033  000D08  D067               	goto	l3748
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;timer1_thread.c: 62: {
  2037                           ;timer1_thread.c: 63: move_time = 40;
  2038  000D0A  0E28               	movlw	40
  2039  000D0C  0100               	movlb	0	; () banked
  2040  000D0E  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2041                           
  2042                           ;timer1_thread.c: 64: move_state = 0x02;
  2043  000D10  0E02               	movlw	2
  2044  000D12  D04D               	goto	L8
  2045  000D14                     l3712:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;timer1_thread.c: 69: {
  2049                           ;timer1_thread.c: 70: move_msg[1] = (unsigned char)-128;
  2050  000D14  0E80               	movlw	128
  2051  000D16  0101               	movlb	1	; () banked
  2052  000D18  6F26               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2053                           
  2054                           ;timer1_thread.c: 71: move_msg[2] = 127;
  2055  000D1A  0E7F               	movlw	127
  2056  000D1C  0101               	movlb	1	; () banked
  2057  000D1E  6F27               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;timer1_thread.c: 73: send_uart_message( move_msg );
  2061  000D20  0101               	movlb	1	; () banked
  2062  000D22  0E01               	movlw	high timer1_lthread@move_msg
  2063  000D24  0101               	movlb	1	; () banked
  2064  000D26  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2065  000D28  0101               	movlb	1	; () banked
  2066  000D2A  0E25               	movlw	low timer1_lthread@move_msg
  2067  000D2C  0101               	movlb	1	; () banked
  2068  000D2E  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2069  000D30  ECA9  F00E         	call	_send_uart_message	;wreg free
  2070                           
  2071                           ;timer1_thread.c: 75: move_time--;
  2072  000D34  0100               	movlb	0	; () banked
  2073  000D36  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;timer1_thread.c: 77: if(move_time==0)
  2077  000D38  0100               	movlb	0	; () banked
  2078  000D3A  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2079  000D3C  D04D               	goto	l3748
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;timer1_thread.c: 78: {
  2083                           ;timer1_thread.c: 79: move_time = 40;
  2084  000D3E  0E28               	movlw	40
  2085  000D40  0100               	movlb	0	; () banked
  2086  000D42  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2087                           
  2088                           ;timer1_thread.c: 80: move_state = 0x03;
  2089  000D44  0E03               	movlw	3
  2090  000D46  D033               	goto	L8
  2091  000D48                     l3722:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;timer1_thread.c: 85: {
  2095                           ;timer1_thread.c: 86: move_msg[1] = 127;
  2096  000D48  0E7F               	movlw	127
  2097  000D4A  0101               	movlb	1	; () banked
  2098  000D4C  6F26               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2099                           
  2100                           ;timer1_thread.c: 87: move_msg[2] = (unsigned char)-128;
  2101  000D4E  0E80               	movlw	128
  2102  000D50  0101               	movlb	1	; () banked
  2103  000D52  6F27               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2104                           
  2105                           ; BSR set to: 1
  2106                           ;timer1_thread.c: 88: send_uart_message( move_msg );
  2107  000D54  0101               	movlb	1	; () banked
  2108  000D56  0E01               	movlw	high timer1_lthread@move_msg
  2109  000D58  0101               	movlb	1	; () banked
  2110  000D5A  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2111  000D5C  0101               	movlb	1	; () banked
  2112  000D5E  0E25               	movlw	low timer1_lthread@move_msg
  2113  000D60  0101               	movlb	1	; () banked
  2114  000D62  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2115  000D64  ECA9  F00E         	call	_send_uart_message	;wreg free
  2116                           
  2117                           ;timer1_thread.c: 90: move_time--;
  2118  000D68  0100               	movlb	0	; () banked
  2119  000D6A  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;timer1_thread.c: 92: if(move_time==0)
  2123  000D6C  0100               	movlb	0	; () banked
  2124  000D6E  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2125  000D70  D033               	goto	l3748
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;timer1_thread.c: 93: {
  2129                           ;timer1_thread.c: 94: move_time = 40;
  2130  000D72  0E28               	movlw	40
  2131  000D74  0100               	movlb	0	; () banked
  2132  000D76  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2133                           
  2134                           ;timer1_thread.c: 95: move_state = 0x04;
  2135  000D78  0E04               	movlw	4
  2136  000D7A  D019               	goto	L8
  2137  000D7C                     l3732:
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;timer1_thread.c: 100: {
  2141                           ;timer1_thread.c: 101: move_msg[1] = 0;
  2142  000D7C  0E00               	movlw	0
  2143  000D7E  0101               	movlb	1	; () banked
  2144  000D80  6F26               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2145                           
  2146                           ;timer1_thread.c: 102: move_msg[2] = 0;
  2147  000D82  0E00               	movlw	0
  2148  000D84  0101               	movlb	1	; () banked
  2149  000D86  6F27               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;timer1_thread.c: 103: send_uart_message( move_msg );
  2153  000D88  0101               	movlb	1	; () banked
  2154  000D8A  0E01               	movlw	high timer1_lthread@move_msg
  2155  000D8C  0101               	movlb	1	; () banked
  2156  000D8E  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2157  000D90  0101               	movlb	1	; () banked
  2158  000D92  0E25               	movlw	low timer1_lthread@move_msg
  2159  000D94  0101               	movlb	1	; () banked
  2160  000D96  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2161  000D98  ECA9  F00E         	call	_send_uart_message	;wreg free
  2162                           
  2163                           ;timer1_thread.c: 105: move_time--;
  2164  000D9C  0100               	movlb	0	; () banked
  2165  000D9E  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;timer1_thread.c: 107: if(move_time==0)
  2169  000DA0  0100               	movlb	0	; () banked
  2170  000DA2  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2171  000DA4  D019               	goto	l3748
  2172  000DA6                     l3742:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;timer1_thread.c: 115: {
  2176                           ;timer1_thread.c: 116: move_time = 40;
  2177  000DA6  0E28               	movlw	40
  2178  000DA8  0100               	movlb	0	; () banked
  2179  000DAA  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2180                           
  2181                           ;timer1_thread.c: 117: move_state = 0x00;
  2182  000DAC  0E00               	movlw	0
  2183  000DAE                     L8:
  2184  000DAE  0100               	movlb	0	; () banked
  2185  000DB0  6FB2               	movwf	timer1_lthread@move_state& (0+255),b
  2186                           
  2187                           ;timer1_thread.c: 118: break;
  2188  000DB2  D012               	goto	l3748
  2189  000DB4                     l3746:
  2190  000DB4  0100               	movlb	0	; () banked
  2191  000DB6  51B2               	movf	timer1_lthread@move_state& (0+255),w,b
  2192                           
  2193                           ; Switch size 1, requested type "space"
  2194                           ; Number of cases is 5, Range of values is 0 to 4
  2195                           ; switch strategies available:
  2196                           ; Name         Instructions Cycles
  2197                           ; simple_byte           16     9 (average)
  2198                           ;	Chosen strategy is simple_byte
  2199  000DB8  0A00               	xorlw	0	; case 0
  2200  000DBA  B4D8               	btfsc	status,2,c
  2201  000DBC  D777               	goto	l3692
  2202  000DBE  0A01               	xorlw	1	; case 1
  2203  000DC0  B4D8               	btfsc	status,2,c
  2204  000DC2  D78E               	goto	l3702
  2205  000DC4  0A03               	xorlw	3	; case 2
  2206  000DC6  B4D8               	btfsc	status,2,c
  2207  000DC8  D7A5               	goto	l3712
  2208  000DCA  0A01               	xorlw	1	; case 3
  2209  000DCC  B4D8               	btfsc	status,2,c
  2210  000DCE  D7BC               	goto	l3722
  2211  000DD0  0A07               	xorlw	7	; case 4
  2212  000DD2  B4D8               	btfsc	status,2,c
  2213  000DD4  D7D3               	goto	l3732
  2214  000DD6  D7E7               	goto	l3742
  2215  000DD8                     l3748:
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;timer1_thread.c: 124: tptr->msgcount++;
  2219  000DD8  C11D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2220  000DDC  C11E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2221  000DE0  2ADE               	incf	postinc2,f,c
  2222  000DE2  0E00               	movlw	0
  2223  000DE4  22DD               	addwfc	postdec2,f,c
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;timer1_thread.c: 127: if ((tptr->msgcount % 10) == 9) {
  2227  000DE6  C11D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2228  000DEA  C11E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2229  000DEE  0101               	movlb	1	; () banked
  2230  000DF0  CFDE F100          	movff	postinc2,___lwmod@dividend
  2231  000DF4  0101               	movlb	1	; () banked
  2232  000DF6  CFDD F101          	movff	postdec2,___lwmod@dividend+1
  2233  000DFA  0E00               	movlw	0
  2234  000DFC  0101               	movlb	1	; () banked
  2235  000DFE  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
  2236  000E00  0E0A               	movlw	10
  2237  000E02  0101               	movlb	1	; () banked
  2238  000E04  6F02               	movwf	___lwmod@divisor& (0+255),b
  2239  000E06  EC29  F00C         	call	___lwmod	;wreg free
  2240  000E0A  0101               	movlb	1	; () banked
  2241  000E0C  5100               	movf	?___lwmod& (0+255),w,b
  2242  000E0E  0A09               	xorlw	9
  2243  000E10  0101               	movlb	1	; () banked
  2244  000E12  1101               	iorwf	(?___lwmod+1)& (0+255),w,b
  2245  000E14  A4D8               	btfss	status,2,c
  2246  000E16  0012               	return	
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;timer1_thread.c: 128: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void 
      +                          *) &(tptr->msgcount));
  2250  000E18  0E14               	movlw	20
  2251  000E1A  0101               	movlb	1	; () banked
  2252  000E1C  6F16               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2253  000E1E  0101               	movlb	1	; () banked
  2254  000E20  C11E  F118         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2255  000E24  0101               	movlb	1	; () banked
  2256  000E26  C11D  F117         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2257  000E2A  0E02               	movlw	2
  2258  000E2C  EC1C  F00E         	call	_FromMainHigh_sendmsg
  2259  000E30  0101               	movlb	1	; () banked
  2260  000E32  6F33               	movwf	timer1_lthread@retval& (0+255),b
  2261  000E34  0012               	return	
  2262  000E36                     __end_of_timer1_lthread:
  2263                           	opt stack 0
  2264                           tblptru	equ	0xFF8
  2265                           tblptrh	equ	0xFF7
  2266                           tblptrl	equ	0xFF6
  2267                           tablat	equ	0xFF5
  2268                           prodh	equ	0xFF4
  2269                           prodl	equ	0xFF3
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           indf2	equ	0xFDF
  2273                           postinc2	equ	0xFDE
  2274                           postdec2	equ	0xFDD
  2275                           fsr2h	equ	0xFDA
  2276                           fsr2l	equ	0xFD9
  2277                           status	equ	0xFD8
  2278                           
  2279 ;; *************** function _send_uart_message *****************
  2280 ;; Defined at:
  2281 ;;		line 186 in file "../src/my_uart.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  message_ptr     2   26[BANK1 ] PTR unsigned char 
  2284 ;;		 -> timer1_lthread@move_msg(14), main@uart_response(14), main@sensor_data(14), 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  message_q_co    1   28[BANK1 ] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      unsigned char 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2296 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2297 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2299 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2300 ;;Total ram usage:        3 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:   14
  2303 ;; This function calls:
  2304 ;;		_FromMainLow_sendmsg
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;;		_timer1_lthread
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text3
  2312  001D52                     __ptext3:
  2313                           	opt stack 0
  2314  001D52                     _send_uart_message:
  2315                           	opt stack 15
  2316                           
  2317                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(14,31,(void *) messa
      +                          ge_ptr );
  2318                           
  2319                           ; BSR set to: 1
  2320                           ;incstack = 0
  2321  001D52  0E1F               	movlw	31
  2322  001D54  0101               	movlb	1	; () banked
  2323  001D56  6F16               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2324  001D58  0101               	movlb	1	; () banked
  2325  001D5A  C11B  F118         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2326  001D5E  0101               	movlb	1	; () banked
  2327  001D60  C11A  F117         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2328  001D64  0E0E               	movlw	14
  2329  001D66  EC05  F00E         	call	_FromMainLow_sendmsg
  2330  001D6A  0101               	movlb	1	; () banked
  2331  001D6C  6F1C               	movwf	send_uart_message@message_q_code& (0+255),b
  2332                           
  2333                           ; BSR set to: 1
  2334                           ;my_uart.c: 193: }
  2335                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2336                           
  2337                           ; BSR set to: 1
  2338                           ;my_uart.c: 191: {
  2339                           ;my_uart.c: 192: return 0x02;
  2340                           ;	Return value of _send_uart_message is never used
  2341                           
  2342                           ;my_uart.c: 190: if( message_q_code == -1)
  2343  001D6E  889D               	bsf	3997,4,c	;volatile
  2344                           
  2345                           ; BSR set to: 1
  2346                           
  2347                           ;my_uart.c: 196: return 0x00;
  2348                           ;	Return value of _send_uart_message is never used
  2349  001D70  0012               	return	
  2350  001D72                     __end_of_send_uart_message:
  2351                           	opt stack 0
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           postinc0	equ	0xFEE
  2359                           wreg	equ	0xFE8
  2360                           indf2	equ	0xFDF
  2361                           postinc2	equ	0xFDE
  2362                           postdec2	equ	0xFDD
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function _FromMainLow_sendmsg *****************
  2368 ;; Defined at:
  2369 ;;		line 150 in file "../src/messages.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  length          1    wreg     unsigned char 
  2372 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2373 ;;  data            2   23[BANK1 ] PTR void 
  2374 ;;		 -> timer1_lthread@move_msg(14), main@uart_response(14), main@sensor_data(14), 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  length          1   25[BANK1 ] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      char 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2386 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2389 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2390 ;;Total ram usage:        4 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:   13
  2393 ;; This function calls:
  2394 ;;		_send_msg
  2395 ;; This function is called by:
  2396 ;;		_send_uart_message
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text4
  2401  001C0A                     __ptext4:
  2402                           	opt stack 0
  2403  001C0A                     _FromMainLow_sendmsg:
  2404                           	opt stack 15
  2405                           
  2406                           ; BSR set to: 1
  2407                           ;incstack = 0
  2408                           ;FromMainLow_sendmsg@length stored from wreg
  2409  001C0A  0101               	movlb	1	; () banked
  2410  001C0C  6F19               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2414  001C0E  0104               	movlb	4	; () banked
  2415  001C10  0E04               	movlw	high _FromMainLow_MQ
  2416  001C12  0101               	movlb	1	; () banked
  2417  001C14  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2418  001C16  0104               	movlb	4	; () banked
  2419  001C18  0E00               	movlw	low _FromMainLow_MQ
  2420  001C1A  0101               	movlb	1	; () banked
  2421  001C1C  6F0A               	movwf	send_msg@qptr& (0+255),b
  2422  001C1E  C119  F10C         	movff	FromMainLow_sendmsg@length,send_msg@length
  2423  001C22  C116  F10D         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2424  001C26  0101               	movlb	1	; () banked
  2425  001C28  C118  F10F         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2426  001C2C  0101               	movlb	1	; () banked
  2427  001C2E  C117  F10E         	movff	FromMainLow_sendmsg@data,send_msg@data
  2428  001C32  EC39  F008         	call	_send_msg	;wreg free
  2429  001C36  0012               	return	
  2430  001C38                     __end_of_FromMainLow_sendmsg:
  2431                           	opt stack 0
  2432                           tblptru	equ	0xFF8
  2433                           tblptrh	equ	0xFF7
  2434                           tblptrl	equ	0xFF6
  2435                           tablat	equ	0xFF5
  2436                           prodh	equ	0xFF4
  2437                           prodl	equ	0xFF3
  2438                           postinc0	equ	0xFEE
  2439                           wreg	equ	0xFE8
  2440                           indf2	equ	0xFDF
  2441                           postinc2	equ	0xFDE
  2442                           postdec2	equ	0xFDD
  2443                           fsr2h	equ	0xFDA
  2444                           fsr2l	equ	0xFD9
  2445                           status	equ	0xFD8
  2446                           
  2447 ;; *************** function _blink0 *****************
  2448 ;; Defined at:
  2449 ;;		line 46 in file "../src/debug.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;		None               void
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:   11
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_timer1_lthread
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text5
  2478  001E38                     __ptext5:
  2479                           	opt stack 0
  2480  001E38                     _blink0:
  2481                           	opt stack 18
  2482                           
  2483                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  2484                           
  2485                           ;incstack = 0
  2486  001E38  708A               	btg	3978,0,c	;volatile
  2487  001E3A  0012               	return	
  2488  001E3C                     __end_of_blink0:
  2489                           	opt stack 0
  2490                           tblptru	equ	0xFF8
  2491                           tblptrh	equ	0xFF7
  2492                           tblptrl	equ	0xFF6
  2493                           tablat	equ	0xFF5
  2494                           prodh	equ	0xFF4
  2495                           prodl	equ	0xFF3
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           indf2	equ	0xFDF
  2499                           postinc2	equ	0xFDE
  2500                           postdec2	equ	0xFDD
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function ___lwmod *****************
  2506 ;; Defined at:
  2507 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  dividend        2    0[BANK1 ] unsigned int 
  2510 ;;  divisor         2    2[BANK1 ] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  counter         1    4[BANK1 ] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  2    0[BANK1 ] unsigned int 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2522 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;Total ram usage:        5 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:   11
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_timer1_lthread
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text6
  2537  001852                     __ptext6:
  2538                           	opt stack 0
  2539  001852                     ___lwmod:
  2540                           	opt stack 18
  2541                           
  2542                           ;incstack = 0
  2543  001852  0101               	movlb	1	; () banked
  2544  001854  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2545  001856  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  2546  001858  B4D8               	btfsc	status,2,c
  2547  00185A  D026               	goto	l1143
  2548                           
  2549                           ; BSR set to: 1
  2550  00185C  0E01               	movlw	1
  2551  00185E  0101               	movlb	1	; () banked
  2552  001860  6F04               	movwf	___lwmod@counter& (0+255),b
  2553  001862  D006               	goto	l3564
  2554  001864                     l3562:
  2555                           
  2556                           ; BSR set to: 1
  2557  001864  0101               	movlb	1	; () banked
  2558  001866  90D8               	bcf	status,0,c
  2559  001868  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  2560  00186A  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2561  00186C  0101               	movlb	1	; () banked
  2562  00186E  2B04               	incf	___lwmod@counter& (0+255),f,b
  2563  001870                     l3564:
  2564                           
  2565                           ; BSR set to: 1
  2566  001870  0101               	movlb	1	; () banked
  2567  001872  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2568  001874  D7F7               	goto	l3562
  2569  001876                     l3566:
  2570                           
  2571                           ; BSR set to: 1
  2572  001876  0101               	movlb	1	; () banked
  2573  001878  5102               	movf	___lwmod@divisor& (0+255),w,b
  2574  00187A  0101               	movlb	1	; () banked
  2575  00187C  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  2576  00187E  0101               	movlb	1	; () banked
  2577  001880  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2578  001882  0101               	movlb	1	; () banked
  2579  001884  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2580  001886  A0D8               	btfss	status,0,c
  2581  001888  D008               	goto	l3570
  2582                           
  2583                           ; BSR set to: 1
  2584  00188A  0101               	movlb	1	; () banked
  2585  00188C  5102               	movf	___lwmod@divisor& (0+255),w,b
  2586  00188E  0101               	movlb	1	; () banked
  2587  001890  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  2588  001892  0101               	movlb	1	; () banked
  2589  001894  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2590  001896  0101               	movlb	1	; () banked
  2591  001898  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2592  00189A                     l3570:
  2593                           
  2594                           ; BSR set to: 1
  2595  00189A  0101               	movlb	1	; () banked
  2596  00189C  90D8               	bcf	status,0,c
  2597  00189E  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2598  0018A0  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  2599                           
  2600                           ; BSR set to: 1
  2601  0018A2  0101               	movlb	1	; () banked
  2602  0018A4  2F04               	decfsz	___lwmod@counter& (0+255),f,b
  2603  0018A6  D7E7               	goto	l3566
  2604  0018A8                     l1143:
  2605                           
  2606                           ; BSR set to: 1
  2607  0018A8  C100  F100         	movff	___lwmod@dividend,?___lwmod
  2608  0018AC  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  2609                           
  2610                           ; BSR set to: 1
  2611  0018B0  0012               	return	
  2612  0018B2                     __end_of___lwmod:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           indf2	equ	0xFDF
  2623                           postinc2	equ	0xFDE
  2624                           postdec2	equ	0xFDD
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _FromMainHigh_sendmsg *****************
  2630 ;; Defined at:
  2631 ;;		line 174 in file "../src/messages.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  length          1    wreg     unsigned char 
  2634 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2635 ;;  data            2   23[BANK1 ] PTR void 
  2636 ;;		 -> main@t1thread_data(2), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  length          1   25[BANK1 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      char 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2648 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;Total ram usage:        4 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:   13
  2655 ;; This function calls:
  2656 ;;		_send_msg
  2657 ;; This function is called by:
  2658 ;;		_timer1_lthread
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text7
  2663  001C38                     __ptext7:
  2664                           	opt stack 0
  2665  001C38                     _FromMainHigh_sendmsg:
  2666                           	opt stack 16
  2667                           
  2668                           ; BSR set to: 1
  2669                           ;incstack = 0
  2670                           ;FromMainHigh_sendmsg@length stored from wreg
  2671  001C38  0101               	movlb	1	; () banked
  2672  001C3A  6F19               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2676  001C3C  0105               	movlb	5	; () banked
  2677  001C3E  0E05               	movlw	high _FromMainHigh_MQ
  2678  001C40  0101               	movlb	1	; () banked
  2679  001C42  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2680  001C44  0105               	movlb	5	; () banked
  2681  001C46  0E00               	movlw	low _FromMainHigh_MQ
  2682  001C48  0101               	movlb	1	; () banked
  2683  001C4A  6F0A               	movwf	send_msg@qptr& (0+255),b
  2684  001C4C  C119  F10C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2685  001C50  C116  F10D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2686  001C54  0101               	movlb	1	; () banked
  2687  001C56  C118  F10F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2688  001C5A  0101               	movlb	1	; () banked
  2689  001C5C  C117  F10E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2690  001C60  EC39  F008         	call	_send_msg	;wreg free
  2691  001C64  0012               	return	
  2692  001C66                     __end_of_FromMainHigh_sendmsg:
  2693                           	opt stack 0
  2694                           tblptru	equ	0xFF8
  2695                           tblptrh	equ	0xFF7
  2696                           tblptrl	equ	0xFF6
  2697                           tablat	equ	0xFF5
  2698                           prodh	equ	0xFF4
  2699                           prodl	equ	0xFF3
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           indf2	equ	0xFDF
  2703                           postinc2	equ	0xFDE
  2704                           postdec2	equ	0xFDD
  2705                           fsr2h	equ	0xFDA
  2706                           fsr2l	equ	0xFD9
  2707                           status	equ	0xFD8
  2708                           
  2709 ;; *************** function _send_msg *****************
  2710 ;; Defined at:
  2711 ;;		line 24 in file "../src/messages.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2714 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2715 ;;  length          1   12[BANK1 ] unsigned char 
  2716 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2717 ;;  data            2   14[BANK1 ] PTR void 
  2718 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  2719 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  2720 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  2721 ;;		 -> main@t1thread_data(2), main@ic(38), 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2724 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  2725 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2726 ;;  tlength         2   17[BANK1 ] unsigned int 
  2727 ;;  slot            1   19[BANK1 ] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      char 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2737 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2741 ;;Total ram usage:       12 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:   12
  2744 ;; This function calls:
  2745 ;;		_memcpy
  2746 ;; This function is called by:
  2747 ;;		_FromMainLow_sendmsg
  2748 ;;		_FromMainHigh_sendmsg
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text8
  2753  001072                     __ptext8:
  2754                           	opt stack 0
  2755  001072                     _send_msg:
  2756                           	opt stack 15
  2757                           
  2758                           ;messages.c: 25: unsigned char slot;
  2759                           ;messages.c: 27: msg *qmsg;
  2760                           ;messages.c: 28: size_t tlength = length;
  2761                           
  2762                           ;incstack = 0
  2763  001072  0101               	movlb	1	; () banked
  2764  001074  C10C  F111         	movff	send_msg@length,send_msg@tlength
  2765  001078  0101               	movlb	1	; () banked
  2766  00107A  6B12               	clrf	(send_msg@tlength+1)& (0+255),b
  2767                           
  2768                           ; BSR set to: 1
  2769                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2770  00107C  0101               	movlb	1	; () banked
  2771  00107E  EE20 F088          	lfsr	2,136
  2772  001082  0101               	movlb	1	; () banked
  2773  001084  510A               	movf	send_msg@qptr& (0+255),w,b
  2774  001086  26D9               	addwf	fsr2l,f,c
  2775  001088  0101               	movlb	1	; () banked
  2776  00108A  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2777  00108C  22DA               	addwfc	fsr2h,f,c
  2778  00108E  50DF               	movf	indf2,w,c
  2779  001090  0101               	movlb	1	; () banked
  2780  001092  6F13               	movwf	send_msg@slot& (0+255),b
  2781                           
  2782                           ; BSR set to: 1
  2783                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2784  001094  0101               	movlb	1	; () banked
  2785  001096  5113               	movf	send_msg@slot& (0+255),w,b
  2786  001098  0D11               	mullw	17
  2787  00109A  50F3               	movf	prodl,w,c
  2788  00109C  0101               	movlb	1	; () banked
  2789  00109E  250A               	addwf	send_msg@qptr& (0+255),w,b
  2790  0010A0  0101               	movlb	1	; () banked
  2791  0010A2  6F14               	movwf	send_msg@qmsg& (0+255),b
  2792  0010A4  50F4               	movf	prodh,w,c
  2793  0010A6  0101               	movlb	1	; () banked
  2794  0010A8  210B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2795  0010AA  0101               	movlb	1	; () banked
  2796  0010AC  6F15               	movwf	(send_msg@qmsg+1)& (0+255),b
  2797                           
  2798                           ; BSR set to: 1
  2799                           ;messages.c: 41: if (qmsg->full != 0) {
  2800  0010AE  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2801  0010B2  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2802  0010B6  50DF               	movf	indf2,w,c
  2803  0010B8  B4D8               	btfsc	status,2,c
  2804  0010BA  D002               	goto	l3486
  2805                           
  2806                           ; BSR set to: 1
  2807                           ;messages.c: 42: return (-1);
  2808  0010BC  0EFF               	movlw	255
  2809  0010BE  0012               	return	
  2810  0010C0                     l3486:
  2811                           
  2812                           ; BSR set to: 1
  2813                           ;messages.c: 43: }
  2814                           ;messages.c: 46: qmsg->length = length;
  2815  0010C0  0101               	movlb	1	; () banked
  2816  0010C2  EE20 F001          	lfsr	2,1
  2817  0010C6  0101               	movlb	1	; () banked
  2818  0010C8  5114               	movf	send_msg@qmsg& (0+255),w,b
  2819  0010CA  26D9               	addwf	fsr2l,f,c
  2820  0010CC  0101               	movlb	1	; () banked
  2821  0010CE  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2822  0010D0  22DA               	addwfc	fsr2h,f,c
  2823  0010D2  0101               	movlb	1	; () banked
  2824  0010D4  C10C  FFDF         	movff	send_msg@length,indf2
  2825                           
  2826                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2827  0010D8  0101               	movlb	1	; () banked
  2828  0010DA  EE20 F002          	lfsr	2,2
  2829  0010DE  0101               	movlb	1	; () banked
  2830  0010E0  5114               	movf	send_msg@qmsg& (0+255),w,b
  2831  0010E2  26D9               	addwf	fsr2l,f,c
  2832  0010E4  0101               	movlb	1	; () banked
  2833  0010E6  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2834  0010E8  22DA               	addwfc	fsr2h,f,c
  2835  0010EA  0101               	movlb	1	; () banked
  2836  0010EC  C10D  FFDF         	movff	send_msg@msgtype,indf2
  2837                           
  2838                           ; BSR set to: 1
  2839                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2840  0010F0  0E03               	movlw	3
  2841  0010F2  0101               	movlb	1	; () banked
  2842  0010F4  2514               	addwf	send_msg@qmsg& (0+255),w,b
  2843  0010F6  0101               	movlb	1	; () banked
  2844  0010F8  6F00               	movwf	memcpy@d1& (0+255),b
  2845  0010FA  0E00               	movlw	0
  2846  0010FC  0101               	movlb	1	; () banked
  2847  0010FE  2115               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2848  001100  0101               	movlb	1	; () banked
  2849  001102  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  2850  001104  0101               	movlb	1	; () banked
  2851  001106  C10F  F103         	movff	send_msg@data+1,memcpy@s1+1
  2852  00110A  0101               	movlb	1	; () banked
  2853  00110C  C10E  F102         	movff	send_msg@data,memcpy@s1
  2854  001110  C111  F104         	movff	send_msg@tlength,memcpy@n
  2855  001114  C112  F105         	movff	send_msg@tlength+1,memcpy@n+1
  2856  001118  ECB5  F00C         	call	_memcpy	;wreg free
  2857                           
  2858                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  2859  00111C  0101               	movlb	1	; () banked
  2860  00111E  EE20 F088          	lfsr	2,136
  2861  001122  0101               	movlb	1	; () banked
  2862  001124  510A               	movf	send_msg@qptr& (0+255),w,b
  2863  001126  26D9               	addwf	fsr2l,f,c
  2864  001128  0101               	movlb	1	; () banked
  2865  00112A  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2866  00112C  22DA               	addwfc	fsr2h,f,c
  2867  00112E  0101               	movlb	1	; () banked
  2868  001130  EE10 F088          	lfsr	1,136
  2869  001134  0101               	movlb	1	; () banked
  2870  001136  510A               	movf	send_msg@qptr& (0+255),w,b
  2871  001138  26E1               	addwf	fsr1l,f,c
  2872  00113A  0101               	movlb	1	; () banked
  2873  00113C  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2874  00113E  22E2               	addwfc	fsr1h,f,c
  2875  001140  50E7               	movf	indf1,w,c
  2876  001142  0101               	movlb	1	; () banked
  2877  001144  6F10               	movwf	??_send_msg& (0+255),b
  2878  001146  0101               	movlb	1	; () banked
  2879  001148  2910               	incf	??_send_msg& (0+255),w,b
  2880  00114A  0B07               	andlw	7
  2881  00114C  6EDF               	movwf	indf2,c
  2882                           
  2883                           ; BSR set to: 1
  2884                           ;messages.c: 59: qmsg->full = 1;
  2885  00114E  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2886  001152  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2887  001156  0E01               	movlw	1
  2888  001158  6EDF               	movwf	indf2,c
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;messages.c: 60: return (1);
  2892  00115A  0E01               	movlw	1
  2893  00115C  0012               	return	
  2894  00115E                     __end_of_send_msg:
  2895                           	opt stack 0
  2896                           tblptru	equ	0xFF8
  2897                           tblptrh	equ	0xFF7
  2898                           tblptrl	equ	0xFF6
  2899                           tablat	equ	0xFF5
  2900                           prodh	equ	0xFF4
  2901                           prodl	equ	0xFF3
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           indf1	equ	0xFE7
  2905                           fsr1h	equ	0xFE2
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           postinc2	equ	0xFDE
  2909                           postdec2	equ	0xFDD
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           status	equ	0xFD8
  2913                           
  2914 ;; *************** function _timer0_lthread *****************
  2915 ;; Defined at:
  2916 ;;		line 9 in file "../src/timer0_thread.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2919 ;;		 -> main@t0thread_data(2), 
  2920 ;;  msgtype         2    2[BANK1 ] int 
  2921 ;;  length          2    4[BANK1 ] int 
  2922 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2923 ;;		 -> main@msgbuffer(15), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2926 ;;		 -> main@msgbuffer(15), 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  2    0[BANK1 ] int 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2936 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2939 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2940 ;;Total ram usage:       10 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:   11
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text9
  2951  001DCA                     __ptext9:
  2952                           	opt stack 0
  2953  001DCA                     _timer0_lthread:
  2954                           	opt stack 19
  2955                           
  2956                           ;timer0_thread.c: 10: unsigned int *msgval;
  2957                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2958                           
  2959                           ; BSR set to: 1
  2960                           ;incstack = 0
  2961  001DCA  0101               	movlb	1	; () banked
  2962  001DCC  C107  F109         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2963  001DD0  0101               	movlb	1	; () banked
  2964  001DD2  C106  F108         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2965                           
  2966                           ; BSR set to: 1
  2967  001DD6  0012               	return	
  2968  001DD8                     __end_of_timer0_lthread:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           prodh	equ	0xFF4
  2975                           prodl	equ	0xFF3
  2976                           postinc0	equ	0xFEE
  2977                           wreg	equ	0xFE8
  2978                           indf1	equ	0xFE7
  2979                           fsr1h	equ	0xFE2
  2980                           fsr1l	equ	0xFE1
  2981                           indf2	equ	0xFDF
  2982                           postinc2	equ	0xFDE
  2983                           postdec2	equ	0xFDD
  2984                           fsr2h	equ	0xFDA
  2985                           fsr2l	equ	0xFD9
  2986                           status	equ	0xFD8
  2987                           
  2988 ;; *************** function _init_timer1_lthread *****************
  2989 ;; Defined at:
  2990 ;;		line 8 in file "../src/timer1_thread.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2993 ;;		 -> main@t1thread_data(2), 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;		None               void
  2998 ;; Registers used:
  2999 ;;		wreg, fsr2l, fsr2h
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3005 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3009 ;;Total ram usage:        2 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:   11
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text10
  3020  001D72                     __ptext10:
  3021                           	opt stack 0
  3022  001D72                     _init_timer1_lthread:
  3023                           	opt stack 19
  3024                           
  3025                           ;timer1_thread.c: 9: tptr->msgcount = 0;
  3026                           
  3027                           ; BSR set to: 1
  3028                           ;incstack = 0
  3029  001D72  C100  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3030  001D76  C101  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3031  001D7A  0E00               	movlw	0
  3032  001D7C  6EDE               	movwf	postinc2,c
  3033  001D7E  0E00               	movlw	0
  3034  001D80  6EDD               	movwf	postdec2,c
  3035  001D82  0012               	return	
  3036  001D84                     __end_of_init_timer1_lthread:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           prodh	equ	0xFF4
  3043                           prodl	equ	0xFF3
  3044                           postinc0	equ	0xFEE
  3045                           wreg	equ	0xFE8
  3046                           indf1	equ	0xFE7
  3047                           fsr1h	equ	0xFE2
  3048                           fsr1l	equ	0xFE1
  3049                           indf2	equ	0xFDF
  3050                           postinc2	equ	0xFDE
  3051                           postdec2	equ	0xFDD
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8
  3055                           
  3056 ;; *************** function _init_queues *****************
  3057 ;; Defined at:
  3058 ;;		line 194 in file "../src/messages.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;		None               void
  3065 ;; Registers used:
  3066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:   12
  3079 ;; This function calls:
  3080 ;;		_init_queue
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text11
  3087  001912                     __ptext11:
  3088                           	opt stack 0
  3089  001912                     _init_queues:
  3090                           	opt stack 18
  3091                           
  3092                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3093                           
  3094                           ;incstack = 0
  3095  001912  0E00               	movlw	0
  3096  001914  0100               	movlb	0	; () banked
  3097  001916  6FB1               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3101  001918  0102               	movlb	2	; () banked
  3102  00191A  0E02               	movlw	high _ToMainLow_MQ
  3103  00191C  0101               	movlb	1	; () banked
  3104  00191E  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  3105  001920  0102               	movlb	2	; () banked
  3106  001922  0E00               	movlw	low _ToMainLow_MQ
  3107  001924  0101               	movlb	1	; () banked
  3108  001926  6F00               	movwf	init_queue@qptr& (0+255),b
  3109  001928  ECF7  F00B         	call	_init_queue	;wreg free
  3110                           
  3111                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3112  00192C  0103               	movlb	3	; () banked
  3113  00192E  0E03               	movlw	high _ToMainHigh_MQ
  3114  001930  0101               	movlb	1	; () banked
  3115  001932  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  3116  001934  0103               	movlb	3	; () banked
  3117  001936  0E00               	movlw	low _ToMainHigh_MQ
  3118  001938  0101               	movlb	1	; () banked
  3119  00193A  6F00               	movwf	init_queue@qptr& (0+255),b
  3120  00193C  ECF7  F00B         	call	_init_queue	;wreg free
  3121                           
  3122                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3123  001940  0104               	movlb	4	; () banked
  3124  001942  0E04               	movlw	high _FromMainLow_MQ
  3125  001944  0101               	movlb	1	; () banked
  3126  001946  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  3127  001948  0104               	movlb	4	; () banked
  3128  00194A  0E00               	movlw	low _FromMainLow_MQ
  3129  00194C  0101               	movlb	1	; () banked
  3130  00194E  6F00               	movwf	init_queue@qptr& (0+255),b
  3131  001950  ECF7  F00B         	call	_init_queue	;wreg free
  3132                           
  3133                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3134  001954  0105               	movlb	5	; () banked
  3135  001956  0E05               	movlw	high _FromMainHigh_MQ
  3136  001958  0101               	movlb	1	; () banked
  3137  00195A  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  3138  00195C  0105               	movlb	5	; () banked
  3139  00195E  0E00               	movlw	low _FromMainHigh_MQ
  3140  001960  0101               	movlb	1	; () banked
  3141  001962  6F00               	movwf	init_queue@qptr& (0+255),b
  3142  001964  ECF7  F00B         	call	_init_queue	;wreg free
  3143  001968  0012               	return	
  3144  00196A                     __end_of_init_queues:
  3145                           	opt stack 0
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           postinc0	equ	0xFEE
  3153                           wreg	equ	0xFE8
  3154                           indf1	equ	0xFE7
  3155                           fsr1h	equ	0xFE2
  3156                           fsr1l	equ	0xFE1
  3157                           indf2	equ	0xFDF
  3158                           postinc2	equ	0xFDE
  3159                           postdec2	equ	0xFDD
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function _init_queue *****************
  3165 ;; Defined at:
  3166 ;;		line 14 in file "../src/messages.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3169 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  i               1    2[BANK1 ] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3181 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;Total ram usage:        3 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:   11
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_init_queues
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text12
  3196  0017EE                     __ptext12:
  3197                           	opt stack 0
  3198  0017EE                     _init_queue:
  3199                           	opt stack 18
  3200                           
  3201                           ;messages.c: 15: unsigned char i;
  3202                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3203                           
  3204                           ;incstack = 0
  3205  0017EE  0101               	movlb	1	; () banked
  3206  0017F0  EE20 F088          	lfsr	2,136
  3207  0017F4  0101               	movlb	1	; () banked
  3208  0017F6  5100               	movf	init_queue@qptr& (0+255),w,b
  3209  0017F8  26D9               	addwf	fsr2l,f,c
  3210  0017FA  0101               	movlb	1	; () banked
  3211  0017FC  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3212  0017FE  22DA               	addwfc	fsr2h,f,c
  3213  001800  0E00               	movlw	0
  3214  001802  6EDF               	movwf	indf2,c
  3215                           
  3216                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3217  001804  0101               	movlb	1	; () banked
  3218  001806  EE20 F089          	lfsr	2,137
  3219  00180A  0101               	movlb	1	; () banked
  3220  00180C  5100               	movf	init_queue@qptr& (0+255),w,b
  3221  00180E  26D9               	addwf	fsr2l,f,c
  3222  001810  0101               	movlb	1	; () banked
  3223  001812  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3224  001814  22DA               	addwfc	fsr2h,f,c
  3225  001816  0E00               	movlw	0
  3226  001818  6EDF               	movwf	indf2,c
  3227                           
  3228                           ; BSR set to: 1
  3229                           ;messages.c: 19: for (i = 0; i < 8; i++) {
  3230  00181A  0E00               	movlw	0
  3231  00181C  0101               	movlb	1	; () banked
  3232  00181E  6F02               	movwf	init_queue@i& (0+255),b
  3233                           
  3234                           ; BSR set to: 1
  3235  001820  0E07               	movlw	7
  3236  001822  0101               	movlb	1	; () banked
  3237  001824  6502               	cpfsgt	init_queue@i& (0+255),b
  3238  001826  D001               	goto	l3514
  3239  001828  0012               	return	
  3240  00182A                     l3514:
  3241                           
  3242                           ; BSR set to: 1
  3243                           ;messages.c: 20: qptr->queue[i].full = 0;
  3244  00182A  0101               	movlb	1	; () banked
  3245  00182C  5102               	movf	init_queue@i& (0+255),w,b
  3246  00182E  0D11               	mullw	17
  3247  001830  50F3               	movf	prodl,w,c
  3248  001832  0101               	movlb	1	; () banked
  3249  001834  2500               	addwf	init_queue@qptr& (0+255),w,b
  3250  001836  6ED9               	movwf	fsr2l,c
  3251  001838  50F4               	movf	prodh,w,c
  3252  00183A  0101               	movlb	1	; () banked
  3253  00183C  2101               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3254  00183E  6EDA               	movwf	fsr2h,c
  3255  001840  0E00               	movlw	0
  3256  001842  6EDF               	movwf	indf2,c
  3257                           
  3258                           ; BSR set to: 1
  3259  001844  0101               	movlb	1	; () banked
  3260  001846  2B02               	incf	init_queue@i& (0+255),f,b
  3261                           
  3262                           ; BSR set to: 1
  3263  001848  0E07               	movlw	7
  3264  00184A  0101               	movlb	1	; () banked
  3265  00184C  6502               	cpfsgt	init_queue@i& (0+255),b
  3266  00184E  D7ED               	goto	l3514
  3267  001850  0012               	return	
  3268  001852                     __end_of_init_queue:
  3269                           	opt stack 0
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           prodh	equ	0xFF4
  3275                           prodl	equ	0xFF3
  3276                           postinc0	equ	0xFEE
  3277                           wreg	equ	0xFE8
  3278                           indf1	equ	0xFE7
  3279                           fsr1h	equ	0xFE2
  3280                           fsr1l	equ	0xFE1
  3281                           indf2	equ	0xFDF
  3282                           postinc2	equ	0xFDE
  3283                           postdec2	equ	0xFDD
  3284                           fsr2h	equ	0xFDA
  3285                           fsr2l	equ	0xFD9
  3286                           status	equ	0xFD8
  3287                           
  3288 ;; *************** function _init_i2c *****************
  3289 ;; Defined at:
  3290 ;;		line 327 in file "../src/my_i2c.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3293 ;;		 -> main@ic(38), 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3305 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;Total ram usage:        2 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:   11
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text13
  3320  001784                     __ptext13:
  3321                           	opt stack 0
  3322  001784                     _init_i2c:
  3323                           	opt stack 19
  3324                           
  3325                           ;my_i2c.c: 328: ic_ptr = ic;
  3326                           
  3327                           ; BSR set to: 1
  3328                           ;incstack = 0
  3329  001784  0101               	movlb	1	; () banked
  3330  001786  0100               	movlb	0	; () banked
  3331  001788  C101  F0D4         	movff	init_i2c@ic+1,_ic_ptr+1
  3332  00178C  0101               	movlb	1	; () banked
  3333  00178E  0100               	movlb	0	; () banked
  3334  001790  C100  F0D3         	movff	init_i2c@ic,_ic_ptr
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;my_i2c.c: 329: ic_ptr->buflen = 0;
  3338  001794  0100               	movlb	0	; () banked
  3339  001796  EE20 F00E          	lfsr	2,14
  3340  00179A  0100               	movlb	0	; () banked
  3341  00179C  51D3               	movf	_ic_ptr& (0+255),w,b
  3342  00179E  26D9               	addwf	fsr2l,f,c
  3343  0017A0  0100               	movlb	0	; () banked
  3344  0017A2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3345  0017A4  22DA               	addwfc	fsr2h,f,c
  3346  0017A6  0E00               	movlw	0
  3347  0017A8  6EDF               	movwf	indf2,c
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;my_i2c.c: 330: ic_ptr->event_count = 0;
  3351  0017AA  0100               	movlb	0	; () banked
  3352  0017AC  EE20 F020          	lfsr	2,32
  3353  0017B0  0100               	movlb	0	; () banked
  3354  0017B2  51D3               	movf	_ic_ptr& (0+255),w,b
  3355  0017B4  26D9               	addwf	fsr2l,f,c
  3356  0017B6  0100               	movlb	0	; () banked
  3357  0017B8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3358  0017BA  22DA               	addwfc	fsr2h,f,c
  3359  0017BC  0E00               	movlw	0
  3360  0017BE  6EDF               	movwf	indf2,c
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;my_i2c.c: 331: ic_ptr->status = 0x5;
  3364  0017C0  0100               	movlb	0	; () banked
  3365  0017C2  EE20 F021          	lfsr	2,33
  3366  0017C6  0100               	movlb	0	; () banked
  3367  0017C8  51D3               	movf	_ic_ptr& (0+255),w,b
  3368  0017CA  26D9               	addwf	fsr2l,f,c
  3369  0017CC  0100               	movlb	0	; () banked
  3370  0017CE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3371  0017D0  22DA               	addwfc	fsr2h,f,c
  3372  0017D2  0E05               	movlw	5
  3373  0017D4  6EDF               	movwf	indf2,c
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;my_i2c.c: 332: ic_ptr->error_count = 0;
  3377  0017D6  0100               	movlb	0	; () banked
  3378  0017D8  EE20 F023          	lfsr	2,35
  3379  0017DC  0100               	movlb	0	; () banked
  3380  0017DE  51D3               	movf	_ic_ptr& (0+255),w,b
  3381  0017E0  26D9               	addwf	fsr2l,f,c
  3382  0017E2  0100               	movlb	0	; () banked
  3383  0017E4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3384  0017E6  22DA               	addwfc	fsr2h,f,c
  3385  0017E8  0E00               	movlw	0
  3386  0017EA  6EDF               	movwf	indf2,c
  3387                           
  3388                           ; BSR set to: 0
  3389  0017EC  0012               	return	
  3390  0017EE                     __end_of_init_i2c:
  3391                           	opt stack 0
  3392                           tblptru	equ	0xFF8
  3393                           tblptrh	equ	0xFF7
  3394                           tblptrl	equ	0xFF6
  3395                           tablat	equ	0xFF5
  3396                           prodh	equ	0xFF4
  3397                           prodl	equ	0xFF3
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           indf1	equ	0xFE7
  3401                           fsr1h	equ	0xFE2
  3402                           fsr1l	equ	0xFE1
  3403                           indf2	equ	0xFDF
  3404                           postinc2	equ	0xFDE
  3405                           postdec2	equ	0xFDD
  3406                           fsr2h	equ	0xFDA
  3407                           fsr2l	equ	0xFD9
  3408                           status	equ	0xFD8
  3409                           
  3410 ;; *************** function _i2c_configure_slave *****************
  3411 ;; Defined at:
  3412 ;;		line 338 in file "../src/my_i2c.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  addr            1    wreg     unsigned char 
  3415 ;;  ptr_thingy      2    0[BANK1 ] PTR unsigned char 
  3416 ;;		 -> main@need_sensor_data(1), 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  addr            1    2[BANK1 ] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;		None               void
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3428 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3429 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;Total ram usage:        3 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:   11
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text14
  3443  001AFE                     __ptext14:
  3444                           	opt stack 0
  3445  001AFE                     _i2c_configure_slave:
  3446                           	opt stack 19
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;incstack = 0
  3450                           ;i2c_configure_slave@addr stored from wreg
  3451  001AFE  0101               	movlb	1	; () banked
  3452  001B00  6F02               	movwf	i2c_configure_slave@addr& (0+255),b
  3453                           
  3454                           ; BSR set to: 1
  3455                           ;my_i2c.c: 340: need_sensor_data = ptr_thingy;
  3456  001B02  0101               	movlb	1	; () banked
  3457  001B04  0100               	movlb	0	; () banked
  3458  001B06  C101  F0B0         	movff	i2c_configure_slave@ptr_thingy+1,_need_sensor_data+1
  3459  001B0A  0101               	movlb	1	; () banked
  3460  001B0C  0100               	movlb	0	; () banked
  3461  001B0E  C100  F0AF         	movff	i2c_configure_slave@ptr_thingy,_need_sensor_data
  3462                           
  3463                           ;my_i2c.c: 348: TRISBbits.TRISB4 = 1;
  3464  001B12  8893               	bsf	3987,4,c	;volatile
  3465                           
  3466                           ;my_i2c.c: 349: TRISBbits.TRISB5 = 1;
  3467  001B14  8A93               	bsf	3987,5,c	;volatile
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;my_i2c.c: 357: SSPADD = addr;
  3471  001B16  C102  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;my_i2c.c: 359: SSPSTAT = 0x0;
  3475  001B1A  0E00               	movlw	0
  3476  001B1C  6EC7               	movwf	4039,c	;volatile
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;my_i2c.c: 360: SSPCON1 = 0x0;
  3480  001B1E  0E00               	movlw	0
  3481  001B20  6EC6               	movwf	4038,c	;volatile
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;my_i2c.c: 361: SSPCON2 = 0x0;
  3485  001B22  0E00               	movlw	0
  3486  001B24  6EC5               	movwf	4037,c	;volatile
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;my_i2c.c: 362: SSPCON1 |= 0x0E;
  3490  001B26  0E0E               	movlw	14
  3491  001B28  12C6               	iorwf	4038,f,c	;volatile
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;my_i2c.c: 363: SSPSTAT |= 0b10000000;
  3495  001B2A  8EC7               	bsf	4039,7,c	;volatile
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;my_i2c.c: 378: PORTBbits.SCL1 = 1;
  3499  001B2C  8881               	bsf	3969,4,c	;volatile
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;my_i2c.c: 379: PORTBbits.SDA1 = 1;
  3503  001B2E  8A81               	bsf	3969,5,c	;volatile
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;my_i2c.c: 388: SSPCON2bits.SEN = 1;
  3507  001B30  80C5               	bsf	4037,0,c	;volatile
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;my_i2c.c: 389: SSPCON1 |= 0b00100000;
  3511  001B32  8AC6               	bsf	4038,5,c	;volatile
  3512                           
  3513                           ; BSR set to: 0
  3514  001B34  0012               	return	
  3515  001B36                     __end_of_i2c_configure_slave:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           prodh	equ	0xFF4
  3522                           prodl	equ	0xFF3
  3523                           postinc0	equ	0xFEE
  3524                           wreg	equ	0xFE8
  3525                           indf1	equ	0xFE7
  3526                           fsr1h	equ	0xFE2
  3527                           fsr1l	equ	0xFE1
  3528                           indf2	equ	0xFDF
  3529                           postinc2	equ	0xFDE
  3530                           postdec2	equ	0xFDD
  3531                           fsr2h	equ	0xFDA
  3532                           fsr2l	equ	0xFD9
  3533                           status	equ	0xFD8
  3534                           
  3535 ;; *************** function _enable_interrupts *****************
  3536 ;; Defined at:
  3537 ;;		line 14 in file "../src/interrupts.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;		None               void
  3544 ;; Registers used:
  3545 ;;		None
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:   11
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_main
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text15
  3566  001DE2                     __ptext15:
  3567                           	opt stack 0
  3568  001DE2                     _enable_interrupts:
  3569                           	opt stack 19
  3570                           
  3571                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;incstack = 0
  3575  001DE2  8ED0               	bsf	4048,7,c	;volatile
  3576                           
  3577                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3578  001DE4  8EF2               	bsf	intcon,7,c	;volatile
  3579                           
  3580                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3581  001DE6  8CF2               	bsf	intcon,6,c	;volatile
  3582  001DE8  0012               	return	
  3583  001DEA                     __end_of_enable_interrupts:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           indf1	equ	0xFE7
  3595                           fsr1h	equ	0xFE2
  3596                           fsr1l	equ	0xFE1
  3597                           indf2	equ	0xFDF
  3598                           postinc2	equ	0xFDE
  3599                           postdec2	equ	0xFDD
  3600                           fsr2h	equ	0xFDA
  3601                           fsr2l	equ	0xFD9
  3602                           status	equ	0xFD8
  3603                           
  3604 ;; *************** function _debug_configure *****************
  3605 ;; Defined at:
  3606 ;;		line 3 in file "../src/debug.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;		None               void
  3613 ;; Registers used:
  3614 ;;		wreg, status,2
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;Total ram usage:        0 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:   11
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text16
  3635  001DD8                     __ptext16:
  3636                           	opt stack 0
  3637  001DD8                     _debug_configure:
  3638                           	opt stack 19
  3639                           
  3640                           ;debug.c: 5: TRISD = 0x00;
  3641                           
  3642                           ;incstack = 0
  3643  001DD8  0E00               	movlw	0
  3644  001DDA  6E95               	movwf	3989,c	;volatile
  3645                           
  3646                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3647  001DDC  9093               	bcf	3987,0,c	;volatile
  3648                           
  3649                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3650  001DDE  9293               	bcf	3987,1,c	;volatile
  3651  001DE0  0012               	return	
  3652  001DE2                     __end_of_debug_configure:
  3653                           	opt stack 0
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           prodh	equ	0xFF4
  3659                           prodl	equ	0xFF3
  3660                           intcon	equ	0xFF2
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           indf1	equ	0xFE7
  3664                           fsr1h	equ	0xFE2
  3665                           fsr1l	equ	0xFE1
  3666                           indf2	equ	0xFDF
  3667                           postinc2	equ	0xFDE
  3668                           postdec2	equ	0xFDD
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _blip3 *****************
  3674 ;; Defined at:
  3675 ;;		line 32 in file "../src/debug.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		None
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:   11
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_main
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text17
  3704  001DEA                     __ptext17:
  3705                           	opt stack 0
  3706  001DEA                     _blip3:
  3707                           	opt stack 19
  3708                           
  3709                           ;debug.c: 34: LATDbits.LD6 = 0;
  3710                           
  3711                           ;incstack = 0
  3712  001DEA  9C8C               	bcf	3980,6,c	;volatile
  3713                           
  3714                           ;debug.c: 35: LATDbits.LD6 = 1;
  3715  001DEC  8C8C               	bsf	3980,6,c	;volatile
  3716                           
  3717                           ;debug.c: 36: LATDbits.LD6 = 0;
  3718  001DEE  9C8C               	bcf	3980,6,c	;volatile
  3719  001DF0  0012               	return	
  3720  001DF2                     __end_of_blip3:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           intcon	equ	0xFF2
  3729                           postinc0	equ	0xFEE
  3730                           wreg	equ	0xFE8
  3731                           indf1	equ	0xFE7
  3732                           fsr1h	equ	0xFE2
  3733                           fsr1l	equ	0xFE1
  3734                           indf2	equ	0xFDF
  3735                           postinc2	equ	0xFDE
  3736                           postdec2	equ	0xFDD
  3737                           fsr2h	equ	0xFDA
  3738                           fsr2l	equ	0xFD9
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function _blip2 *****************
  3742 ;; Defined at:
  3743 ;;		line 25 in file "../src/debug.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;		None               void
  3750 ;; Registers used:
  3751 ;;		None
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:   11
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text18
  3772  001DF2                     __ptext18:
  3773                           	opt stack 0
  3774  001DF2                     _blip2:
  3775                           	opt stack 19
  3776                           
  3777                           ;debug.c: 27: LATDbits.LD5 = 0;
  3778                           
  3779                           ;incstack = 0
  3780  001DF2  9A8C               	bcf	3980,5,c	;volatile
  3781                           
  3782                           ;debug.c: 28: LATDbits.LD5 = 1;
  3783  001DF4  8A8C               	bsf	3980,5,c	;volatile
  3784                           
  3785                           ;debug.c: 29: LATDbits.LD5 = 0;
  3786  001DF6  9A8C               	bcf	3980,5,c	;volatile
  3787  001DF8  0012               	return	
  3788  001DFA                     __end_of_blip2:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           prodh	equ	0xFF4
  3795                           prodl	equ	0xFF3
  3796                           intcon	equ	0xFF2
  3797                           postinc0	equ	0xFEE
  3798                           wreg	equ	0xFE8
  3799                           indf1	equ	0xFE7
  3800                           fsr1h	equ	0xFE2
  3801                           fsr1l	equ	0xFE1
  3802                           indf2	equ	0xFDF
  3803                           postinc2	equ	0xFDE
  3804                           postdec2	equ	0xFDD
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function _blip1 *****************
  3810 ;; Defined at:
  3811 ;;		line 18 in file "../src/debug.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;		None               void
  3818 ;; Registers used:
  3819 ;;		None
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:   11
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text19
  3840  001DFA                     __ptext19:
  3841                           	opt stack 0
  3842  001DFA                     _blip1:
  3843                           	opt stack 19
  3844                           
  3845                           ;debug.c: 20: LATDbits.LD4 = 0;
  3846                           
  3847                           ;incstack = 0
  3848  001DFA  988C               	bcf	3980,4,c	;volatile
  3849                           
  3850                           ;debug.c: 21: LATDbits.LD4 = 1;
  3851  001DFC  888C               	bsf	3980,4,c	;volatile
  3852                           
  3853                           ;debug.c: 22: LATDbits.LD4 = 0;
  3854  001DFE  988C               	bcf	3980,4,c	;volatile
  3855  001E00  0012               	return	
  3856  001E02                     __end_of_blip1:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           intcon	equ	0xFF2
  3865                           postinc0	equ	0xFEE
  3866                           wreg	equ	0xFE8
  3867                           indf1	equ	0xFE7
  3868                           fsr1h	equ	0xFE2
  3869                           fsr1l	equ	0xFE1
  3870                           indf2	equ	0xFDF
  3871                           postinc2	equ	0xFDE
  3872                           postdec2	equ	0xFDD
  3873                           fsr2h	equ	0xFDA
  3874                           fsr2l	equ	0xFD9
  3875                           status	equ	0xFD8
  3876                           
  3877 ;; *************** function _blip *****************
  3878 ;; Defined at:
  3879 ;;		line 11 in file "../src/debug.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;		None               void
  3886 ;; Registers used:
  3887 ;;		None
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3897 ;;Total ram usage:        0 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:   11
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text20
  3908  001E02                     __ptext20:
  3909                           	opt stack 0
  3910  001E02                     _blip:
  3911                           	opt stack 19
  3912                           
  3913                           ;debug.c: 13: LATDbits.LD2 = 0;
  3914                           
  3915                           ;incstack = 0
  3916  001E02  948C               	bcf	3980,2,c	;volatile
  3917                           
  3918                           ;debug.c: 14: LATDbits.LD2 = 1;
  3919  001E04  848C               	bsf	3980,2,c	;volatile
  3920                           
  3921                           ;debug.c: 15: LATDbits.LD2 = 0;
  3922  001E06  948C               	bcf	3980,2,c	;volatile
  3923  001E08  0012               	return	
  3924  001E0A                     __end_of_blip:
  3925                           	opt stack 0
  3926                           tblptru	equ	0xFF8
  3927                           tblptrh	equ	0xFF7
  3928                           tblptrl	equ	0xFF6
  3929                           tablat	equ	0xFF5
  3930                           prodh	equ	0xFF4
  3931                           prodl	equ	0xFF3
  3932                           intcon	equ	0xFF2
  3933                           postinc0	equ	0xFEE
  3934                           wreg	equ	0xFE8
  3935                           indf1	equ	0xFE7
  3936                           fsr1h	equ	0xFE2
  3937                           fsr1l	equ	0xFE1
  3938                           indf2	equ	0xFDF
  3939                           postinc2	equ	0xFDE
  3940                           postdec2	equ	0xFDD
  3941                           fsr2h	equ	0xFDA
  3942                           fsr2l	equ	0xFD9
  3943                           status	equ	0xFD8
  3944                           
  3945 ;; *************** function _ToMainLow_recvmsg *****************
  3946 ;; Defined at:
  3947 ;;		line 112 in file "../src/messages.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  maxlength       1    wreg     unsigned char 
  3950 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3951 ;;		 -> main@msgtype(1), 
  3952 ;;  data            2   26[BANK1 ] PTR void 
  3953 ;;		 -> main@msgbuffer(15), 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      char 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3965 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;Total ram usage:        5 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:   13
  3972 ;; This function calls:
  3973 ;;		_recv_msg
  3974 ;; This function is called by:
  3975 ;;		_main
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text21
  3980  001B36                     __ptext21:
  3981                           	opt stack 0
  3982  001B36                     _ToMainLow_recvmsg:
  3983                           	opt stack 17
  3984                           
  3985                           ;incstack = 0
  3986                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3987  001B36  0101               	movlb	1	; () banked
  3988  001B38  6F1C               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3992  001B3A  0102               	movlb	2	; () banked
  3993  001B3C  0E02               	movlw	high _ToMainLow_MQ
  3994  001B3E  0101               	movlb	1	; () banked
  3995  001B40  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  3996  001B42  0102               	movlb	2	; () banked
  3997  001B44  0E00               	movlw	low _ToMainLow_MQ
  3998  001B46  0101               	movlb	1	; () banked
  3999  001B48  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4000  001B4A  C11C  F10C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4001  001B4E  0101               	movlb	1	; () banked
  4002  001B50  C119  F10E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4003  001B54  0101               	movlb	1	; () banked
  4004  001B56  C118  F10D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4005  001B5A  0101               	movlb	1	; () banked
  4006  001B5C  C11B  F110         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4007  001B60  0101               	movlb	1	; () banked
  4008  001B62  C11A  F10F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4009  001B66  EC1B  F007         	call	_recv_msg	;wreg free
  4010  001B6A  0012               	return	
  4011  001B6C                     __end_of_ToMainLow_recvmsg:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           prodh	equ	0xFF4
  4018                           prodl	equ	0xFF3
  4019                           intcon	equ	0xFF2
  4020                           postinc0	equ	0xFEE
  4021                           wreg	equ	0xFE8
  4022                           indf1	equ	0xFE7
  4023                           fsr1h	equ	0xFE2
  4024                           fsr1l	equ	0xFE1
  4025                           indf2	equ	0xFDF
  4026                           postinc2	equ	0xFDE
  4027                           postdec2	equ	0xFDD
  4028                           fsr2h	equ	0xFDA
  4029                           fsr2l	equ	0xFD9
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function _ToMainHigh_recvmsg *****************
  4033 ;; Defined at:
  4034 ;;		line 135 in file "../src/messages.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  maxlength       1    wreg     unsigned char 
  4037 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4038 ;;		 -> main@msgtype(1), 
  4039 ;;  data            2   26[BANK1 ] PTR void 
  4040 ;;		 -> main@msgbuffer(15), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      char 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4052 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4053 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4055 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4056 ;;Total ram usage:        5 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:   13
  4059 ;; This function calls:
  4060 ;;		_recv_msg
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           	psect	text22
  4067  001B6C                     __ptext22:
  4068                           	opt stack 0
  4069  001B6C                     _ToMainHigh_recvmsg:
  4070                           	opt stack 17
  4071                           
  4072                           ;incstack = 0
  4073                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4074  001B6C  0101               	movlb	1	; () banked
  4075  001B6E  6F1C               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  4076                           
  4077                           ; BSR set to: 1
  4078                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4079  001B70  0103               	movlb	3	; () banked
  4080  001B72  0E03               	movlw	high _ToMainHigh_MQ
  4081  001B74  0101               	movlb	1	; () banked
  4082  001B76  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4083  001B78  0103               	movlb	3	; () banked
  4084  001B7A  0E00               	movlw	low _ToMainHigh_MQ
  4085  001B7C  0101               	movlb	1	; () banked
  4086  001B7E  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4087  001B80  C11C  F10C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4088  001B84  0101               	movlb	1	; () banked
  4089  001B86  C119  F10E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4090  001B8A  0101               	movlb	1	; () banked
  4091  001B8C  C118  F10D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4092  001B90  0101               	movlb	1	; () banked
  4093  001B92  C11B  F110         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4094  001B96  0101               	movlb	1	; () banked
  4095  001B98  C11A  F10F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4096  001B9C  EC1B  F007         	call	_recv_msg	;wreg free
  4097  001BA0  0012               	return	
  4098  001BA2                     __end_of_ToMainHigh_recvmsg:
  4099                           	opt stack 0
  4100                           tblptru	equ	0xFF8
  4101                           tblptrh	equ	0xFF7
  4102                           tblptrl	equ	0xFF6
  4103                           tablat	equ	0xFF5
  4104                           prodh	equ	0xFF4
  4105                           prodl	equ	0xFF3
  4106                           intcon	equ	0xFF2
  4107                           postinc0	equ	0xFEE
  4108                           wreg	equ	0xFE8
  4109                           indf1	equ	0xFE7
  4110                           fsr1h	equ	0xFE2
  4111                           fsr1l	equ	0xFE1
  4112                           indf2	equ	0xFDF
  4113                           postinc2	equ	0xFDE
  4114                           postdec2	equ	0xFDD
  4115                           fsr2h	equ	0xFDA
  4116                           fsr2l	equ	0xFD9
  4117                           status	equ	0xFD8
  4118                           
  4119 ;; *************** function _recv_msg *****************
  4120 ;; Defined at:
  4121 ;;		line 63 in file "../src/messages.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4124 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  4125 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4126 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4127 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  4128 ;;  data            2   15[BANK1 ] PTR void 
  4129 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4132 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4133 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  4134 ;;  tlength         2   20[BANK1 ] unsigned int 
  4135 ;;  slot            1   19[BANK1 ] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      char 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4145 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4147 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4148 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4149 ;;Total ram usage:       14 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:   12
  4152 ;; This function calls:
  4153 ;;		_memcpy
  4154 ;; This function is called by:
  4155 ;;		_ToMainLow_recvmsg
  4156 ;;		_ToMainHigh_recvmsg
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text23
  4161  000E36                     __ptext23:
  4162                           	opt stack 0
  4163  000E36                     _recv_msg:
  4164                           	opt stack 17
  4165                           
  4166                           ;messages.c: 64: unsigned char slot;
  4167                           ;messages.c: 68: msg *qmsg;
  4168                           ;messages.c: 69: size_t tlength;
  4169                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4170                           
  4171                           ;incstack = 0
  4172  000E36  0101               	movlb	1	; () banked
  4173  000E38  EE20 F089          	lfsr	2,137
  4174  000E3C  0101               	movlb	1	; () banked
  4175  000E3E  510A               	movf	recv_msg@qptr& (0+255),w,b
  4176  000E40  26D9               	addwf	fsr2l,f,c
  4177  000E42  0101               	movlb	1	; () banked
  4178  000E44  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4179  000E46  22DA               	addwfc	fsr2h,f,c
  4180  000E48  50DF               	movf	indf2,w,c
  4181  000E4A  0101               	movlb	1	; () banked
  4182  000E4C  6F13               	movwf	recv_msg@slot& (0+255),b
  4183                           
  4184                           ; BSR set to: 1
  4185                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4186  000E4E  0101               	movlb	1	; () banked
  4187  000E50  5113               	movf	recv_msg@slot& (0+255),w,b
  4188  000E52  0D11               	mullw	17
  4189  000E54  50F3               	movf	prodl,w,c
  4190  000E56  0101               	movlb	1	; () banked
  4191  000E58  250A               	addwf	recv_msg@qptr& (0+255),w,b
  4192  000E5A  0101               	movlb	1	; () banked
  4193  000E5C  6F16               	movwf	recv_msg@qmsg& (0+255),b
  4194  000E5E  50F4               	movf	prodh,w,c
  4195  000E60  0101               	movlb	1	; () banked
  4196  000E62  210B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4197  000E64  0101               	movlb	1	; () banked
  4198  000E66  6F17               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4199                           
  4200                           ; BSR set to: 1
  4201                           ;messages.c: 74: if (qmsg->full == 1) {
  4202  000E68  0E01               	movlw	1
  4203  000E6A  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4204  000E6E  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4205  000E72  62DF               	cpfseq	indf2,c
  4206  000E74  D06D               	goto	l3548
  4207                           
  4208                           ; BSR set to: 1
  4209                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4210  000E76  0101               	movlb	1	; () banked
  4211  000E78  EE20 F001          	lfsr	2,1
  4212  000E7C  0101               	movlb	1	; () banked
  4213  000E7E  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4214  000E80  26D9               	addwf	fsr2l,f,c
  4215  000E82  0101               	movlb	1	; () banked
  4216  000E84  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4217  000E86  22DA               	addwfc	fsr2h,f,c
  4218  000E88  50DF               	movf	indf2,w,c
  4219  000E8A  0101               	movlb	1	; () banked
  4220  000E8C  5D0C               	subwf	recv_msg@maxlength& (0+255),w,b
  4221  000E8E  B0D8               	btfsc	status,0,c
  4222  000E90  D002               	goto	l3532
  4223                           
  4224                           ; BSR set to: 1
  4225                           ;messages.c: 77: return (-3);
  4226  000E92  0EFD               	movlw	253
  4227  000E94  0012               	return	
  4228  000E96                     l3532:
  4229                           
  4230                           ; BSR set to: 1
  4231                           ;messages.c: 78: }
  4232                           ;messages.c: 80: tlength = qmsg->length;
  4233  000E96  0101               	movlb	1	; () banked
  4234  000E98  EE20 F001          	lfsr	2,1
  4235  000E9C  0101               	movlb	1	; () banked
  4236  000E9E  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4237  000EA0  26D9               	addwf	fsr2l,f,c
  4238  000EA2  0101               	movlb	1	; () banked
  4239  000EA4  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4240  000EA6  22DA               	addwfc	fsr2h,f,c
  4241  000EA8  50DF               	movf	indf2,w,c
  4242  000EAA  0101               	movlb	1	; () banked
  4243  000EAC  6F11               	movwf	??_recv_msg& (0+255),b
  4244  000EAE  0101               	movlb	1	; () banked
  4245  000EB0  5111               	movf	??_recv_msg& (0+255),w,b
  4246  000EB2  0101               	movlb	1	; () banked
  4247  000EB4  6F14               	movwf	recv_msg@tlength& (0+255),b
  4248  000EB6  0101               	movlb	1	; () banked
  4249  000EB8  6B15               	clrf	(recv_msg@tlength+1)& (0+255),b
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4253  000EBA  0101               	movlb	1	; () banked
  4254  000EBC  C110  F101         	movff	recv_msg@data+1,memcpy@d1+1
  4255  000EC0  0101               	movlb	1	; () banked
  4256  000EC2  C10F  F100         	movff	recv_msg@data,memcpy@d1
  4257  000EC6  0E03               	movlw	3
  4258  000EC8  0101               	movlb	1	; () banked
  4259  000ECA  2516               	addwf	recv_msg@qmsg& (0+255),w,b
  4260  000ECC  0101               	movlb	1	; () banked
  4261  000ECE  6F11               	movwf	??_recv_msg& (0+255),b
  4262  000ED0  0E00               	movlw	0
  4263  000ED2  0101               	movlb	1	; () banked
  4264  000ED4  2117               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4265  000ED6  0101               	movlb	1	; () banked
  4266  000ED8  6F12               	movwf	(??_recv_msg+1)& (0+255),b
  4267  000EDA  C111  F102         	movff	??_recv_msg,memcpy@s1
  4268  000EDE  C112  F103         	movff	??_recv_msg+1,memcpy@s1+1
  4269  000EE2  C114  F104         	movff	recv_msg@tlength,memcpy@n
  4270  000EE6  C115  F105         	movff	recv_msg@tlength+1,memcpy@n+1
  4271  000EEA  ECB5  F00C         	call	_memcpy	;wreg free
  4272                           
  4273                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  4274  000EEE  0101               	movlb	1	; () banked
  4275  000EF0  EE20 F089          	lfsr	2,137
  4276  000EF4  0101               	movlb	1	; () banked
  4277  000EF6  510A               	movf	recv_msg@qptr& (0+255),w,b
  4278  000EF8  26D9               	addwf	fsr2l,f,c
  4279  000EFA  0101               	movlb	1	; () banked
  4280  000EFC  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4281  000EFE  22DA               	addwfc	fsr2h,f,c
  4282  000F00  0101               	movlb	1	; () banked
  4283  000F02  EE10 F089          	lfsr	1,137
  4284  000F06  0101               	movlb	1	; () banked
  4285  000F08  510A               	movf	recv_msg@qptr& (0+255),w,b
  4286  000F0A  26E1               	addwf	fsr1l,f,c
  4287  000F0C  0101               	movlb	1	; () banked
  4288  000F0E  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4289  000F10  22E2               	addwfc	fsr1h,f,c
  4290  000F12  50E7               	movf	indf1,w,c
  4291  000F14  0101               	movlb	1	; () banked
  4292  000F16  6F11               	movwf	??_recv_msg& (0+255),b
  4293  000F18  0101               	movlb	1	; () banked
  4294  000F1A  2911               	incf	??_recv_msg& (0+255),w,b
  4295  000F1C  0B07               	andlw	7
  4296  000F1E  6EDF               	movwf	indf2,c
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4300  000F20  0101               	movlb	1	; () banked
  4301  000F22  EE20 F002          	lfsr	2,2
  4302  000F26  0101               	movlb	1	; () banked
  4303  000F28  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4304  000F2A  26D9               	addwf	fsr2l,f,c
  4305  000F2C  0101               	movlb	1	; () banked
  4306  000F2E  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4307  000F30  22DA               	addwfc	fsr2h,f,c
  4308  000F32  C10D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4309  000F36  C10E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4310  000F3A  CFDF FFE7          	movff	indf2,indf1
  4311                           
  4312                           ; BSR set to: 1
  4313                           ;messages.c: 91: qmsg->full = 0;
  4314  000F3E  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4315  000F42  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4316  000F46  0E00               	movlw	0
  4317  000F48  6EDF               	movwf	indf2,c
  4318                           
  4319                           ; BSR set to: 1
  4320                           ;messages.c: 92: return (tlength);
  4321  000F4A  0101               	movlb	1	; () banked
  4322  000F4C  5114               	movf	recv_msg@tlength& (0+255),w,b
  4323  000F4E  0012               	return	
  4324  000F50                     l3548:
  4325                           
  4326                           ; BSR set to: 1
  4327                           ;messages.c: 94: return (-4);
  4328  000F50  0EFC               	movlw	252
  4329  000F52  0012               	return	
  4330  000F54                     __end_of_recv_msg:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           intcon	equ	0xFF2
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           indf1	equ	0xFE7
  4342                           fsr1h	equ	0xFE2
  4343                           fsr1l	equ	0xFE1
  4344                           indf2	equ	0xFDF
  4345                           postinc2	equ	0xFDE
  4346                           postdec2	equ	0xFDD
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function _memcpy *****************
  4352 ;; Defined at:
  4353 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  d1              2    0[BANK1 ] PTR void 
  4356 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4357 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  4358 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  4359 ;;  s1              2    2[BANK1 ] PTR const void 
  4360 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4361 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4362 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  4363 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4364 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  4365 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  4366 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4367 ;;  n               2    4[BANK1 ] unsigned int 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4370 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4371 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4372 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  4373 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4374 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  4375 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  4376 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4377 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4378 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4379 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  4380 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  2    0[BANK1 ] PTR void 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4390 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4394 ;;Total ram usage:       10 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:   11
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_send_msg
  4401 ;;		_recv_msg
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text24
  4406  00196A                     __ptext24:
  4407                           	opt stack 0
  4408  00196A                     _memcpy:
  4409                           	opt stack 15
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;incstack = 0
  4413  00196A  0101               	movlb	1	; () banked
  4414  00196C  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
  4415  001970  0101               	movlb	1	; () banked
  4416  001972  C102  F108         	movff	memcpy@s1,memcpy@s
  4417  001976  0101               	movlb	1	; () banked
  4418  001978  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
  4419  00197C  0101               	movlb	1	; () banked
  4420  00197E  C100  F106         	movff	memcpy@d1,memcpy@d
  4421  001982  D010               	goto	l3472
  4422  001984                     l3466:
  4423                           
  4424                           ; BSR set to: 1
  4425  001984  C108  FFD9         	movff	memcpy@s,fsr2l
  4426  001988  C109  FFDA         	movff	memcpy@s+1,fsr2h
  4427  00198C  C106  FFE1         	movff	memcpy@d,fsr1l
  4428  001990  C107  FFE2         	movff	memcpy@d+1,fsr1h
  4429  001994  CFDF FFE7          	movff	indf2,indf1
  4430                           
  4431                           ; BSR set to: 1
  4432  001998  0101               	movlb	1	; () banked
  4433  00199A  4B08               	infsnz	memcpy@s& (0+255),f,b
  4434  00199C  2B09               	incf	(memcpy@s+1)& (0+255),f,b
  4435                           
  4436                           ; BSR set to: 1
  4437  00199E  0101               	movlb	1	; () banked
  4438  0019A0  4B06               	infsnz	memcpy@d& (0+255),f,b
  4439  0019A2  2B07               	incf	(memcpy@d+1)& (0+255),f,b
  4440  0019A4                     l3472:
  4441                           
  4442                           ; BSR set to: 1
  4443  0019A4  0101               	movlb	1	; () banked
  4444  0019A6  0704               	decf	memcpy@n& (0+255),f,b
  4445  0019A8  A0D8               	btfss	status,0,c
  4446  0019AA  0705               	decf	(memcpy@n+1)& (0+255),f,b
  4447  0019AC  0101               	movlb	1	; () banked
  4448  0019AE  2904               	incf	memcpy@n& (0+255),w,b
  4449  0019B0  B4D8               	btfsc	status,2,c
  4450  0019B2  2905               	incf	(memcpy@n+1)& (0+255),w,b
  4451  0019B4  B4D8               	btfsc	status,2,c
  4452                           
  4453                           ; BSR set to: 1
  4454                           
  4455                           ; BSR set to: 1
  4456                           ;	Return value of _memcpy is never used
  4457  0019B6  0012               	return	
  4458  0019B8  D7E5               	goto	l3466
  4459  0019BA                     __end_of_memcpy:
  4460                           	opt stack 0
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           indf1	equ	0xFE7
  4471                           fsr1h	equ	0xFE2
  4472                           fsr1l	equ	0xFE1
  4473                           indf2	equ	0xFDF
  4474                           postinc2	equ	0xFDE
  4475                           postdec2	equ	0xFDD
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function _OpenTimer1 *****************
  4481 ;; Defined at:
  4482 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  config          1    wreg     unsigned char 
  4485 ;;  config1         1    0[BANK1 ] unsigned char 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  config          1    2[BANK1 ] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;		None               void
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4497 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4499 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4500 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4501 ;;Total ram usage:        3 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:   11
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_main
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text25
  4512  001A88                     __ptext25:
  4513                           	opt stack 0
  4514  001A88                     _OpenTimer1:
  4515                           	opt stack 19
  4516                           
  4517                           ; BSR set to: 1
  4518                           ;incstack = 0
  4519                           ;OpenTimer1@config stored from wreg
  4520  001A88  0101               	movlb	1	; () banked
  4521  001A8A  6F02               	movwf	OpenTimer1@config& (0+255),b
  4522                           
  4523                           ; BSR set to: 1
  4524  001A8C  0101               	movlb	1	; () banked
  4525  001A8E  5100               	movf	OpenTimer1@config1& (0+255),w,b
  4526  001A90  0BF3               	andlw	243
  4527  001A92  6E9A               	movwf	3994,c	;volatile
  4528  001A94  C102  F101         	movff	OpenTimer1@config,??_OpenTimer1
  4529  001A98  0E7F               	movlw	127
  4530  001A9A  0101               	movlb	1	; () banked
  4531  001A9C  1701               	andwf	??_OpenTimer1& (0+255),f,b
  4532  001A9E  0101               	movlb	1	; () banked
  4533  001AA0  90D8               	bcf	status,0,c
  4534  001AA2  3501               	rlcf	??_OpenTimer1& (0+255),w,b
  4535  001AA4  6ECD               	movwf	4045,c	;volatile
  4536                           
  4537                           ; BSR set to: 1
  4538  001AA6  0E00               	movlw	0
  4539  001AA8  6ECF               	movwf	4047,c	;volatile
  4540                           
  4541                           ; BSR set to: 1
  4542  001AAA  0E00               	movlw	0
  4543  001AAC  6ECE               	movwf	4046,c	;volatile
  4544                           
  4545                           ; BSR set to: 1
  4546  001AAE  909E               	bcf	3998,0,c	;volatile
  4547                           
  4548                           ; BSR set to: 1
  4549  001AB0  0101               	movlb	1	; () banked
  4550  001AB2  AF02               	btfss	OpenTimer1@config& (0+255),7,b
  4551  001AB4  D002               	goto	l594
  4552                           
  4553                           ; BSR set to: 1
  4554  001AB6  809D               	bsf	3997,0,c	;volatile
  4555  001AB8  D001               	goto	l595
  4556  001ABA                     l594:
  4557                           
  4558                           ; BSR set to: 1
  4559  001ABA  909D               	bcf	3997,0,c	;volatile
  4560  001ABC                     l595:
  4561                           
  4562                           ; BSR set to: 1
  4563  001ABC  BE9A               	btfsc	3994,7,c	;volatile
  4564                           
  4565                           ; BSR set to: 1
  4566  001ABE  869A               	bsf	3994,3,c	;volatile
  4567                           
  4568                           ; BSR set to: 1
  4569  001AC0  80CD               	bsf	4045,0,c	;volatile
  4570                           
  4571                           ; BSR set to: 1
  4572  001AC2  0012               	return	
  4573  001AC4                     __end_of_OpenTimer1:
  4574                           	opt stack 0
  4575                           tblptru	equ	0xFF8
  4576                           tblptrh	equ	0xFF7
  4577                           tblptrl	equ	0xFF6
  4578                           tablat	equ	0xFF5
  4579                           prodh	equ	0xFF4
  4580                           prodl	equ	0xFF3
  4581                           intcon	equ	0xFF2
  4582                           postinc0	equ	0xFEE
  4583                           wreg	equ	0xFE8
  4584                           indf1	equ	0xFE7
  4585                           fsr1h	equ	0xFE2
  4586                           fsr1l	equ	0xFE1
  4587                           indf2	equ	0xFDF
  4588                           postinc2	equ	0xFDE
  4589                           postdec2	equ	0xFDD
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _OpenTimer0 *****************
  4595 ;; Defined at:
  4596 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  config          1    wreg     unsigned char 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  config          1    0[BANK1 ] unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;		None               void
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4613 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4614 ;;Total ram usage:        1 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:   11
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text26
  4625  001CE8                     __ptext26:
  4626                           	opt stack 0
  4627  001CE8                     _OpenTimer0:
  4628                           	opt stack 19
  4629                           
  4630                           ; BSR set to: 1
  4631                           ;incstack = 0
  4632                           ;OpenTimer0@config stored from wreg
  4633  001CE8  0101               	movlb	1	; () banked
  4634  001CEA  6F00               	movwf	OpenTimer0@config& (0+255),b
  4635                           
  4636                           ; BSR set to: 1
  4637  001CEC  0101               	movlb	1	; () banked
  4638  001CEE  5100               	movf	OpenTimer0@config& (0+255),w,b
  4639  001CF0  0B7F               	andlw	127
  4640  001CF2  6ED5               	movwf	4053,c	;volatile
  4641                           
  4642                           ; BSR set to: 1
  4643  001CF4  0E00               	movlw	0
  4644  001CF6  6ED7               	movwf	4055,c	;volatile
  4645                           
  4646                           ; BSR set to: 1
  4647  001CF8  0E00               	movlw	0
  4648  001CFA  6ED6               	movwf	4054,c	;volatile
  4649                           
  4650                           ; BSR set to: 1
  4651  001CFC  94F2               	bcf	intcon,2,c	;volatile
  4652                           
  4653                           ; BSR set to: 1
  4654  001CFE  0101               	movlb	1	; () banked
  4655  001D00  AF00               	btfss	OpenTimer0@config& (0+255),7,b
  4656  001D02  D002               	goto	l566
  4657                           
  4658                           ; BSR set to: 1
  4659  001D04  8AF2               	bsf	intcon,5,c	;volatile
  4660  001D06  D001               	goto	l567
  4661  001D08                     l566:
  4662                           
  4663                           ; BSR set to: 1
  4664  001D08  9AF2               	bcf	intcon,5,c	;volatile
  4665  001D0A                     l567:
  4666                           
  4667                           ; BSR set to: 1
  4668  001D0A  8ED5               	bsf	4053,7,c	;volatile
  4669                           
  4670                           ; BSR set to: 1
  4671  001D0C  0012               	return	
  4672  001D0E                     __end_of_OpenTimer0:
  4673                           	opt stack 0
  4674                           tblptru	equ	0xFF8
  4675                           tblptrh	equ	0xFF7
  4676                           tblptrl	equ	0xFF6
  4677                           tablat	equ	0xFF5
  4678                           prodh	equ	0xFF4
  4679                           prodl	equ	0xFF3
  4680                           intcon	equ	0xFF2
  4681                           postinc0	equ	0xFEE
  4682                           wreg	equ	0xFE8
  4683                           indf1	equ	0xFE7
  4684                           fsr1h	equ	0xFE2
  4685                           fsr1l	equ	0xFE1
  4686                           indf2	equ	0xFDF
  4687                           postinc2	equ	0xFDE
  4688                           postdec2	equ	0xFDD
  4689                           fsr2h	equ	0xFDA
  4690                           fsr2l	equ	0xFD9
  4691                           status	equ	0xFD8
  4692                           
  4693 ;; *************** function _InterruptHandlerLow *****************
  4694 ;; Defined at:
  4695 ;;		line 131 in file "../src/interrupts.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;		None               void
  4702 ;; Registers used:
  4703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4711 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4712 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4713 ;;Total ram usage:       17 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:   10
  4716 ;; This function calls:
  4717 ;;		_timer1_int_handler
  4718 ;;		_uart_receive_interrupt_handler
  4719 ;;		_uart_transmit_interrupt_handler
  4720 ;; This function is called by:
  4721 ;;		Interrupt level 1
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	intcodelo
  4726  000018                     __pintcodelo:
  4727                           	opt stack 0
  4728  000018                     _InterruptHandlerLow:
  4729                           	opt stack 15
  4730                           
  4731                           ; BSR set to: 1
  4732                           ;incstack = 0
  4733  000018  CFD8 F039          	movff	status,??_InterruptHandlerLow
  4734  00001C  CFE8 F03A          	movff	wreg,??_InterruptHandlerLow+1
  4735  000020  CFE0 F03B          	movff	bsr,??_InterruptHandlerLow+2
  4736  000024  CFFA F03C          	movff	pclath,??_InterruptHandlerLow+3
  4737  000028  CFFB F03D          	movff	pclatu,??_InterruptHandlerLow+4
  4738  00002C  CFE9 F03E          	movff	fsr0l,??_InterruptHandlerLow+5
  4739  000030  CFEA F03F          	movff	fsr0h,??_InterruptHandlerLow+6
  4740  000034  CFE1 F040          	movff	fsr1l,??_InterruptHandlerLow+7
  4741  000038  CFE2 F041          	movff	fsr1h,??_InterruptHandlerLow+8
  4742  00003C  CFD9 F042          	movff	fsr2l,??_InterruptHandlerLow+9
  4743  000040  CFDA F043          	movff	fsr2h,??_InterruptHandlerLow+10
  4744  000044  CFF3 F044          	movff	prodl,??_InterruptHandlerLow+11
  4745  000048  CFF4 F045          	movff	prodh,??_InterruptHandlerLow+12
  4746  00004C  CFF6 F046          	movff	tblptrl,??_InterruptHandlerLow+13
  4747  000050  CFF7 F047          	movff	tblptrh,??_InterruptHandlerLow+14
  4748  000054  CFF8 F048          	movff	tblptru,??_InterruptHandlerLow+15
  4749  000058  CFF5 F049          	movff	tablat,??_InterruptHandlerLow+16
  4750                           
  4751                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  4752  00005C  A09E               	btfss	3998,0,c	;volatile
  4753  00005E  D003               	goto	i1l3276
  4754                           
  4755                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  4756  000060  909E               	bcf	3998,0,c	;volatile
  4757                           
  4758                           ;interrupts.c: 139: timer1_int_handler();
  4759  000062  EC4A  F00E         	call	_timer1_int_handler	;wreg free
  4760  000066                     i1l3276:
  4761                           
  4762                           ;interrupts.c: 140: }
  4763                           ;interrupts.c: 143: if (PIR1bits.RCIF) {
  4764  000066  AA9E               	btfss	3998,5,c	;volatile
  4765  000068  D003               	goto	i1l3282
  4766                           
  4767                           ;interrupts.c: 144: PIR1bits.RCIF = 0;
  4768  00006A  9A9E               	bcf	3998,5,c	;volatile
  4769                           
  4770                           ;interrupts.c: 148: uart_receive_interrupt_handler();
  4771  00006C  EC7D  F005         	call	_uart_receive_interrupt_handler	;wreg free
  4772  000070                     i1l3282:
  4773                           
  4774                           ;interrupts.c: 149: }
  4775                           ;interrupts.c: 153: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4776  000070  B89E               	btfsc	3998,4,c	;volatile
  4777  000072  A89D               	btfss	3997,4,c	;volatile
  4778  000074  D002               	goto	i1l52
  4779                           
  4780                           ;interrupts.c: 154: {
  4781                           ;interrupts.c: 158: uart_transmit_interrupt_handler();
  4782  000076  ECB9  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4783  00007A                     i1l52:
  4784  00007A  C049  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4785  00007E  C048  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4786  000082  C047  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4787  000086  C046  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4788  00008A  C045  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4789  00008E  C044  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4790  000092  C043  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4791  000096  C042  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4792  00009A  C041  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4793  00009E  C040  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4794  0000A2  C03F  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4795  0000A6  C03E  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4796  0000AA  C03D  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4797  0000AE  C03C  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4798  0000B2  C03B  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4799  0000B6  C03A  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4800  0000BA  C039  FFD8         	movff	??_InterruptHandlerLow,status
  4801  0000BE  0010               	retfie	
  4802  0000C0                     __end_of_InterruptHandlerLow:
  4803                           	opt stack 0
  4804                           pclatu	equ	0xFFB
  4805                           pclath	equ	0xFFA
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           prodh	equ	0xFF4
  4811                           prodl	equ	0xFF3
  4812                           intcon	equ	0xFF2
  4813                           postinc0	equ	0xFEE
  4814                           fsr0h	equ	0xFEA
  4815                           fsr0l	equ	0xFE9
  4816                           wreg	equ	0xFE8
  4817                           indf1	equ	0xFE7
  4818                           fsr1h	equ	0xFE2
  4819                           fsr1l	equ	0xFE1
  4820                           bsr	equ	0xFE0
  4821                           indf2	equ	0xFDF
  4822                           postinc2	equ	0xFDE
  4823                           postdec2	equ	0xFDD
  4824                           fsr2h	equ	0xFDA
  4825                           fsr2l	equ	0xFD9
  4826                           status	equ	0xFD8
  4827                           
  4828 ;; *************** function _uart_transmit_interrupt_handler *****************
  4829 ;; Defined at:
  4830 ;;		line 200 in file "../src/my_uart.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  message_stat    1   44[COMRAM] char 
  4835 ;;  data           14   29[COMRAM] unsigned char [14]
  4836 ;;  msgtype         1   43[COMRAM] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;		None               void
  4839 ;; Registers used:
  4840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4847 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4849 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4850 ;;Total ram usage:       16 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    9
  4853 ;; This function calls:
  4854 ;;		_FromMainLow_recvmsg
  4855 ;;		_uart_frame_message
  4856 ;; This function is called by:
  4857 ;;		_InterruptHandlerLow
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text28
  4862  001572                     __ptext28:
  4863                           	opt stack 0
  4864  001572                     _uart_transmit_interrupt_handler:
  4865                           	opt stack 15
  4866                           
  4867                           ;my_uart.c: 203: static unsigned char done = 1;
  4868                           ;my_uart.c: 204: static unsigned char index = 0;
  4869                           ;my_uart.c: 206: unsigned char data[14];
  4870                           ;my_uart.c: 207: static unsigned char message[(14 + 2 + 2)];
  4871                           ;my_uart.c: 209: unsigned char msgtype = 31;
  4872                           
  4873                           ;incstack = 0
  4874  001572  0E1F               	movlw	31
  4875  001574  6E2C               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4876                           
  4877                           ;my_uart.c: 211: if( done )
  4878  001576  505F               	movf	uart_transmit_interrupt_handler@done,w,c
  4879  001578  B4D8               	btfsc	status,2,c
  4880  00157A  D03A               	goto	i1l3068
  4881                           
  4882                           ;my_uart.c: 212: {
  4883                           ;my_uart.c: 213: signed char message_status = FromMainLow_recvmsg(14,&msgtype, (void*)da
      +                          ta );
  4884  00157C  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4885  00157E  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4886  001580  0E2C               	movlw	low uart_transmit_interrupt_handler@msgtype
  4887  001582  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4888  001584  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4889  001586  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4890  001588  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4891  00158A  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4892  00158C  0E0E               	movlw	14
  4893  00158E  EC60  F00E         	call	_FromMainLow_recvmsg
  4894  001592  6E2D               	movwf	uart_transmit_interrupt_handler@message_status,c
  4895                           
  4896                           ;my_uart.c: 215: if( message_status == -4)
  4897  001594  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4898  001596  0AFC               	xorlw	252
  4899  001598  A4D8               	btfss	status,2,c
  4900  00159A  D002               	goto	i1l3040
  4901                           
  4902                           ;my_uart.c: 216: {
  4903                           ;my_uart.c: 218: PIE1bits.TX1IE = 0;
  4904  00159C  989D               	bcf	3997,4,c	;volatile
  4905                           
  4906                           ;my_uart.c: 219: }
  4907  00159E  0012               	return	
  4908  0015A0                     i1l3040:
  4909                           
  4910                           ;my_uart.c: 220: else if( message_status > 0 )
  4911  0015A0  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4912  0015A2  0A80               	xorlw	128
  4913  0015A4  0F7F               	addlw	-129
  4914  0015A6  A0D8               	btfss	status,0,c
  4915  0015A8  0012               	return	
  4916                           
  4917                           ;my_uart.c: 221: {
  4918                           ;my_uart.c: 222: uart_frame_message( data , message );
  4919  0015AA  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4920  0015AC  6E02               	movwf	uart_frame_message@inner+1,c
  4921  0015AE  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4922  0015B0  6E01               	movwf	uart_frame_message@inner,c
  4923  0015B2  0100               	movlb	0	; () banked
  4924  0015B4  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4925  0015B6  6E04               	movwf	uart_frame_message@outer+1,c
  4926  0015B8  0100               	movlb	0	; () banked
  4927  0015BA  0EB3               	movlw	low uart_transmit_interrupt_handler@message
  4928  0015BC  6E03               	movwf	uart_frame_message@outer,c
  4929  0015BE  EC25  F009         	call	_uart_frame_message	;wreg free
  4930                           
  4931                           ;my_uart.c: 223: index = 0;
  4932  0015C2  0E00               	movlw	0
  4933  0015C4  6E50               	movwf	uart_transmit_interrupt_handler@index,c
  4934                           
  4935                           ;my_uart.c: 224: done = 0;
  4936  0015C6  0E00               	movlw	0
  4937  0015C8  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4938                           
  4939                           ;my_uart.c: 226: TXREG1 = message[index];
  4940  0015CA  5050               	movf	uart_transmit_interrupt_handler@index,w,c
  4941  0015CC  0D01               	mullw	1
  4942  0015CE  0100               	movlb	0	; () banked
  4943  0015D0  0EB3               	movlw	low uart_transmit_interrupt_handler@message
  4944  0015D2  24F3               	addwf	prodl,w,c
  4945  0015D4  6ED9               	movwf	fsr2l,c
  4946  0015D6  0100               	movlb	0	; () banked
  4947  0015D8  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4948  0015DA  20F4               	addwfc	prodh,w,c
  4949  0015DC  6EDA               	movwf	fsr2h,c
  4950  0015DE  50DF               	movf	indf2,w,c
  4951  0015E0  6EAE               	movwf	4014,c	;volatile
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;my_uart.c: 227: index++;
  4955  0015E2  2A50               	incf	uart_transmit_interrupt_handler@index,f,c
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;my_uart.c: 228: if( index >= (14 + 2 + 2) )
  4959  0015E4  0E11               	movlw	17
  4960  0015E6  6450               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4961  0015E8  0012               	return	
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;my_uart.c: 229: {
  4965                           ;my_uart.c: 230: done = 1;
  4966  0015EA  0E01               	movlw	1
  4967  0015EC  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4968  0015EE  0012               	return	
  4969  0015F0                     i1l3068:
  4970                           
  4971                           ;my_uart.c: 247: else
  4972                           ;my_uart.c: 248: {
  4973                           ;my_uart.c: 250: TXREG1 = message[index];
  4974  0015F0  5050               	movf	uart_transmit_interrupt_handler@index,w,c
  4975  0015F2  0D01               	mullw	1
  4976  0015F4  0100               	movlb	0	; () banked
  4977  0015F6  0EB3               	movlw	low uart_transmit_interrupt_handler@message
  4978  0015F8  24F3               	addwf	prodl,w,c
  4979  0015FA  6ED9               	movwf	fsr2l,c
  4980  0015FC  0100               	movlb	0	; () banked
  4981  0015FE  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4982  001600  20F4               	addwfc	prodh,w,c
  4983  001602  6EDA               	movwf	fsr2h,c
  4984  001604  50DF               	movf	indf2,w,c
  4985  001606  6EAE               	movwf	4014,c	;volatile
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;my_uart.c: 251: index++;
  4989  001608  2A50               	incf	uart_transmit_interrupt_handler@index,f,c
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;my_uart.c: 252: if( index >= (14 + 2 + 2) )
  4993  00160A  0E11               	movlw	17
  4994  00160C  6450               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4995  00160E  0012               	return	
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;my_uart.c: 253: {
  4999                           ;my_uart.c: 254: done = 1;
  5000  001610  0E01               	movlw	1
  5001  001612  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  5002  001614  0012               	return	
  5003  001616                     __end_of_uart_transmit_interrupt_handler:
  5004                           	opt stack 0
  5005                           pclatu	equ	0xFFB
  5006                           pclath	equ	0xFFA
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           prodh	equ	0xFF4
  5012                           prodl	equ	0xFF3
  5013                           intcon	equ	0xFF2
  5014                           postinc0	equ	0xFEE
  5015                           fsr0h	equ	0xFEA
  5016                           fsr0l	equ	0xFE9
  5017                           wreg	equ	0xFE8
  5018                           indf1	equ	0xFE7
  5019                           fsr1h	equ	0xFE2
  5020                           fsr1l	equ	0xFE1
  5021                           bsr	equ	0xFE0
  5022                           indf2	equ	0xFDF
  5023                           postinc2	equ	0xFDE
  5024                           postdec2	equ	0xFDD
  5025                           fsr2h	equ	0xFDA
  5026                           fsr2l	equ	0xFD9
  5027                           status	equ	0xFD8
  5028                           
  5029 ;; *************** function _uart_frame_message *****************
  5030 ;; Defined at:
  5031 ;;		line 368 in file "../src/my_uart.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  inner           2    0[COMRAM] PTR unsigned char 
  5034 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  5035 ;;  outer           2    2[COMRAM] PTR unsigned char 
  5036 ;;		 -> uart_transmit_interrupt_handler@message(18), 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  i               1    7[COMRAM] unsigned char 
  5039 ;;  checksum        1    6[COMRAM] unsigned char 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;		None               void
  5042 ;; Registers used:
  5043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5052 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5053 ;;Total ram usage:        8 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    6
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_uart_transmit_interrupt_handler
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text29
  5064  00124A                     __ptext29:
  5065                           	opt stack 0
  5066  00124A                     _uart_frame_message:
  5067                           	opt stack 17
  5068                           
  5069                           ;my_uart.c: 370: static unsigned char sent_counter = 0;
  5070                           ;my_uart.c: 372: outer[0] = 0xff;
  5071                           
  5072                           ;incstack = 0
  5073  00124A  C003  FFD9         	movff	uart_frame_message@outer,fsr2l
  5074  00124E  C004  FFDA         	movff	uart_frame_message@outer+1,fsr2h
  5075  001252  0EFF               	movlw	255
  5076  001254  6EDF               	movwf	indf2,c
  5077                           
  5078                           ;my_uart.c: 373: outer[1] = sent_counter++;
  5079  001256  EE20 F001          	lfsr	2,1
  5080  00125A  5003               	movf	uart_frame_message@outer,w,c
  5081  00125C  26D9               	addwf	fsr2l,f,c
  5082  00125E  5004               	movf	uart_frame_message@outer+1,w,c
  5083  001260  22DA               	addwfc	fsr2h,f,c
  5084  001262  C04A  FFDF         	movff	uart_frame_message@sent_counter,indf2
  5085  001266  2A4A               	incf	uart_frame_message@sent_counter,f,c
  5086                           
  5087                           ;my_uart.c: 374: outer[(14 + 2 + 2)-1] = 0xfe;
  5088  001268  EE20 F011          	lfsr	2,17
  5089  00126C  5003               	movf	uart_frame_message@outer,w,c
  5090  00126E  26D9               	addwf	fsr2l,f,c
  5091  001270  5004               	movf	uart_frame_message@outer+1,w,c
  5092  001272  22DA               	addwfc	fsr2h,f,c
  5093  001274  0EFE               	movlw	254
  5094  001276  6EDF               	movwf	indf2,c
  5095                           
  5096                           ;my_uart.c: 376: unsigned char checksum = 0;
  5097  001278  0E00               	movlw	0
  5098  00127A  6E07               	movwf	uart_frame_message@checksum,c
  5099                           
  5100                           ;my_uart.c: 377: unsigned char i;
  5101                           ;my_uart.c: 378: for(i=0;i<14;i++)
  5102  00127C  0E00               	movlw	0
  5103  00127E  6E08               	movwf	uart_frame_message@i,c
  5104  001280  D049               	goto	L9
  5105  001282                     i1l2654:
  5106                           
  5107                           ;my_uart.c: 379: {
  5108                           ;my_uart.c: 380: if( inner[i] == 0xff || inner[i] == 0xfe )
  5109  001282  5008               	movf	uart_frame_message@i,w,c
  5110  001284  0D01               	mullw	1
  5111  001286  50F3               	movf	prodl,w,c
  5112  001288  2401               	addwf	uart_frame_message@inner,w,c
  5113  00128A  6ED9               	movwf	fsr2l,c
  5114  00128C  50F4               	movf	prodh,w,c
  5115  00128E  2002               	addwfc	uart_frame_message@inner+1,w,c
  5116  001290  6EDA               	movwf	fsr2h,c
  5117  001292  50DF               	movf	indf2,w,c
  5118  001294  0AFF               	xorlw	255
  5119  001296  B4D8               	btfsc	status,2,c
  5120  001298  D00B               	goto	i1l2658
  5121  00129A  5008               	movf	uart_frame_message@i,w,c
  5122  00129C  0D01               	mullw	1
  5123  00129E  50F3               	movf	prodl,w,c
  5124  0012A0  2401               	addwf	uart_frame_message@inner,w,c
  5125  0012A2  6ED9               	movwf	fsr2l,c
  5126  0012A4  50F4               	movf	prodh,w,c
  5127  0012A6  2002               	addwfc	uart_frame_message@inner+1,w,c
  5128  0012A8  6EDA               	movwf	fsr2h,c
  5129  0012AA  0EFE               	movlw	254
  5130  0012AC  62DF               	cpfseq	indf2,c
  5131  0012AE  D010               	goto	i1l2660
  5132  0012B0                     i1l2658:
  5133                           
  5134                           ;my_uart.c: 381: {
  5135                           ;my_uart.c: 382: outer[i+2] = 0xfd;
  5136  0012B0  5008               	movf	uart_frame_message@i,w,c
  5137  0012B2  6E05               	movwf	??_uart_frame_message& (0+255),c
  5138  0012B4  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  5139  0012B6  0E02               	movlw	2
  5140  0012B8  2605               	addwf	??_uart_frame_message,f,c
  5141  0012BA  0E00               	movlw	0
  5142  0012BC  2206               	addwfc	??_uart_frame_message+1,f,c
  5143  0012BE  5005               	movf	??_uart_frame_message,w,c
  5144  0012C0  2403               	addwf	uart_frame_message@outer,w,c
  5145  0012C2  6ED9               	movwf	fsr2l,c
  5146  0012C4  5006               	movf	??_uart_frame_message+1,w,c
  5147  0012C6  2004               	addwfc	uart_frame_message@outer+1,w,c
  5148  0012C8  6EDA               	movwf	fsr2h,c
  5149  0012CA  0EFD               	movlw	253
  5150  0012CC  6EDF               	movwf	indf2,c
  5151                           
  5152                           ;my_uart.c: 383: }
  5153  0012CE  D017               	goto	i1l2662
  5154  0012D0                     i1l2660:
  5155                           
  5156                           ;my_uart.c: 384: else
  5157                           ;my_uart.c: 385: {
  5158                           ;my_uart.c: 386: outer[i+2] = inner[i];
  5159  0012D0  5008               	movf	uart_frame_message@i,w,c
  5160  0012D2  0D01               	mullw	1
  5161  0012D4  50F3               	movf	prodl,w,c
  5162  0012D6  2401               	addwf	uart_frame_message@inner,w,c
  5163  0012D8  6ED9               	movwf	fsr2l,c
  5164  0012DA  50F4               	movf	prodh,w,c
  5165  0012DC  2002               	addwfc	uart_frame_message@inner+1,w,c
  5166  0012DE  6EDA               	movwf	fsr2h,c
  5167  0012E0  5008               	movf	uart_frame_message@i,w,c
  5168  0012E2  6E05               	movwf	??_uart_frame_message& (0+255),c
  5169  0012E4  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  5170  0012E6  0E02               	movlw	2
  5171  0012E8  2605               	addwf	??_uart_frame_message,f,c
  5172  0012EA  0E00               	movlw	0
  5173  0012EC  2206               	addwfc	??_uart_frame_message+1,f,c
  5174  0012EE  5005               	movf	??_uart_frame_message,w,c
  5175  0012F0  2403               	addwf	uart_frame_message@outer,w,c
  5176  0012F2  6EE1               	movwf	fsr1l,c
  5177  0012F4  5006               	movf	??_uart_frame_message+1,w,c
  5178  0012F6  2004               	addwfc	uart_frame_message@outer+1,w,c
  5179  0012F8  6EE2               	movwf	fsr1h,c
  5180  0012FA  CFDF FFE7          	movff	indf2,indf1
  5181  0012FE                     i1l2662:
  5182                           
  5183                           ;my_uart.c: 387: }
  5184                           ;my_uart.c: 388: checksum ^= inner[i];
  5185  0012FE  5008               	movf	uart_frame_message@i,w,c
  5186  001300  0D01               	mullw	1
  5187  001302  50F3               	movf	prodl,w,c
  5188  001304  2401               	addwf	uart_frame_message@inner,w,c
  5189  001306  6ED9               	movwf	fsr2l,c
  5190  001308  50F4               	movf	prodh,w,c
  5191  00130A  2002               	addwfc	uart_frame_message@inner+1,w,c
  5192  00130C  6EDA               	movwf	fsr2h,c
  5193  00130E  50DF               	movf	indf2,w,c
  5194  001310  1A07               	xorwf	uart_frame_message@checksum,f,c
  5195  001312  2A08               	incf	uart_frame_message@i,f,c
  5196  001314                     L9:
  5197  001314  0E0D               	movlw	13
  5198  001316  6408               	cpfsgt	uart_frame_message@i,c
  5199  001318  D7B4               	goto	i1l2654
  5200                           
  5201                           ;my_uart.c: 389: }
  5202                           ;my_uart.c: 390: outer[(14 + 2 + 2)-2] = checksum;
  5203  00131A  EE20 F010          	lfsr	2,16
  5204  00131E  5003               	movf	uart_frame_message@outer,w,c
  5205  001320  26D9               	addwf	fsr2l,f,c
  5206  001322  5004               	movf	uart_frame_message@outer+1,w,c
  5207  001324  22DA               	addwfc	fsr2h,f,c
  5208  001326  C007  FFDF         	movff	uart_frame_message@checksum,indf2
  5209  00132A  0012               	return	
  5210  00132C                     __end_of_uart_frame_message:
  5211                           	opt stack 0
  5212                           pclatu	equ	0xFFB
  5213                           pclath	equ	0xFFA
  5214                           tblptru	equ	0xFF8
  5215                           tblptrh	equ	0xFF7
  5216                           tblptrl	equ	0xFF6
  5217                           tablat	equ	0xFF5
  5218                           prodh	equ	0xFF4
  5219                           prodl	equ	0xFF3
  5220                           intcon	equ	0xFF2
  5221                           postinc0	equ	0xFEE
  5222                           fsr0h	equ	0xFEA
  5223                           fsr0l	equ	0xFE9
  5224                           wreg	equ	0xFE8
  5225                           indf1	equ	0xFE7
  5226                           fsr1h	equ	0xFE2
  5227                           fsr1l	equ	0xFE1
  5228                           bsr	equ	0xFE0
  5229                           indf2	equ	0xFDF
  5230                           postinc2	equ	0xFDE
  5231                           postdec2	equ	0xFDD
  5232                           fsr2h	equ	0xFDA
  5233                           fsr2l	equ	0xFD9
  5234                           status	equ	0xFD8
  5235                           
  5236 ;; *************** function _FromMainLow_recvmsg *****************
  5237 ;; Defined at:
  5238 ;;		line 159 in file "../src/messages.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  maxlength       1    wreg     unsigned char 
  5241 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5242 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5243 ;;  data            2   26[COMRAM] PTR void 
  5244 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  maxlength       1   28[COMRAM] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      char 
  5249 ;; Registers used:
  5250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;Total ram usage:        5 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    8
  5263 ;; This function calls:
  5264 ;;		i1_recv_msg
  5265 ;; This function is called by:
  5266 ;;		_uart_transmit_interrupt_handler
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text30
  5271  001CC0                     __ptext30:
  5272                           	opt stack 0
  5273  001CC0                     _FromMainLow_recvmsg:
  5274                           	opt stack 15
  5275                           
  5276                           ;incstack = 0
  5277                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5278  001CC0  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5279                           
  5280                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5281  001CC2  0104               	movlb	4	; () banked
  5282  001CC4  0E04               	movlw	high _FromMainLow_MQ
  5283  001CC6  6E0C               	movwf	i1recv_msg@qptr+1,c
  5284  001CC8  0104               	movlb	4	; () banked
  5285  001CCA  0E00               	movlw	low _FromMainLow_MQ
  5286  001CCC  6E0B               	movwf	i1recv_msg@qptr,c
  5287  001CCE  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5288  001CD2  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5289  001CD6  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5290  001CDA  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5291  001CDE  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5292  001CE2  EC96  F009         	call	i1_recv_msg	;wreg free
  5293  001CE6  0012               	return	
  5294  001CE8                     __end_of_FromMainLow_recvmsg:
  5295                           	opt stack 0
  5296                           pclatu	equ	0xFFB
  5297                           pclath	equ	0xFFA
  5298                           tblptru	equ	0xFF8
  5299                           tblptrh	equ	0xFF7
  5300                           tblptrl	equ	0xFF6
  5301                           tablat	equ	0xFF5
  5302                           prodh	equ	0xFF4
  5303                           prodl	equ	0xFF3
  5304                           intcon	equ	0xFF2
  5305                           postinc0	equ	0xFEE
  5306                           fsr0h	equ	0xFEA
  5307                           fsr0l	equ	0xFE9
  5308                           wreg	equ	0xFE8
  5309                           indf1	equ	0xFE7
  5310                           fsr1h	equ	0xFE2
  5311                           fsr1l	equ	0xFE1
  5312                           bsr	equ	0xFE0
  5313                           indf2	equ	0xFDF
  5314                           postinc2	equ	0xFDE
  5315                           postdec2	equ	0xFDD
  5316                           fsr2h	equ	0xFDA
  5317                           fsr2l	equ	0xFD9
  5318                           status	equ	0xFD8
  5319                           
  5320 ;; *************** function i1_recv_msg *****************
  5321 ;; Defined at:
  5322 ;;		line 63 in file "../src/messages.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5325 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5326 ;;  maxlength       1   12[COMRAM] unsigned char 
  5327 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5328 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  5329 ;;  data            2   15[COMRAM] PTR void 
  5330 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5333 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5334 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5335 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5336 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      char 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5346 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;Total ram usage:       14 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    7
  5353 ;; This function calls:
  5354 ;;		i1_memcpy
  5355 ;; This function is called by:
  5356 ;;		_FromMainLow_recvmsg
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text31
  5361  00132C                     __ptext31:
  5362                           	opt stack 0
  5363  00132C                     i1_recv_msg:
  5364                           	opt stack 15
  5365                           
  5366                           ;messages.c: 64: unsigned char slot;
  5367                           ;messages.c: 68: msg *qmsg;
  5368                           ;messages.c: 69: size_t tlength;
  5369                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5370                           
  5371                           ;incstack = 0
  5372  00132C  EE20 F089          	lfsr	2,137
  5373  001330  500B               	movf	i1recv_msg@qptr,w,c
  5374  001332  26D9               	addwf	fsr2l,f,c
  5375  001334  500C               	movf	i1recv_msg@qptr+1,w,c
  5376  001336  22DA               	addwfc	fsr2h,f,c
  5377  001338  50DF               	movf	indf2,w,c
  5378  00133A  6E14               	movwf	i1recv_msg@slot,c
  5379                           
  5380                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5381  00133C  5014               	movf	i1recv_msg@slot,w,c
  5382  00133E  0D11               	mullw	17
  5383  001340  50F3               	movf	prodl,w,c
  5384  001342  240B               	addwf	i1recv_msg@qptr,w,c
  5385  001344  6E17               	movwf	i1recv_msg@qmsg,c
  5386  001346  50F4               	movf	prodh,w,c
  5387  001348  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5388  00134A  6E18               	movwf	i1recv_msg@qmsg+1,c
  5389                           
  5390                           ;messages.c: 74: if (qmsg->full == 1) {
  5391  00134C  0E01               	movlw	1
  5392  00134E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5393  001352  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5394  001356  62DF               	cpfseq	indf2,c
  5395  001358  D050               	goto	i1l2518
  5396                           
  5397                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5398  00135A  EE20 F001          	lfsr	2,1
  5399  00135E  5017               	movf	i1recv_msg@qmsg,w,c
  5400  001360  26D9               	addwf	fsr2l,f,c
  5401  001362  5018               	movf	i1recv_msg@qmsg+1,w,c
  5402  001364  22DA               	addwfc	fsr2h,f,c
  5403  001366  50DF               	movf	indf2,w,c
  5404  001368  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5405  00136A  B0D8               	btfsc	status,0,c
  5406  00136C  D002               	goto	i1l2502
  5407                           
  5408                           ;messages.c: 77: return (-3);
  5409  00136E  0EFD               	movlw	253
  5410  001370  0012               	return	
  5411  001372                     i1l2502:
  5412                           
  5413                           ;messages.c: 78: }
  5414                           ;messages.c: 80: tlength = qmsg->length;
  5415  001372  EE20 F001          	lfsr	2,1
  5416  001376  5017               	movf	i1recv_msg@qmsg,w,c
  5417  001378  26D9               	addwf	fsr2l,f,c
  5418  00137A  5018               	movf	i1recv_msg@qmsg+1,w,c
  5419  00137C  22DA               	addwfc	fsr2h,f,c
  5420  00137E  50DF               	movf	indf2,w,c
  5421  001380  6E12               	movwf	??i1_recv_msg& (0+255),c
  5422  001382  5012               	movf	??i1_recv_msg,w,c
  5423  001384  6E15               	movwf	i1recv_msg@tlength,c
  5424  001386  6A16               	clrf	i1recv_msg@tlength+1,c
  5425                           
  5426                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5427  001388  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5428  00138C  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5429  001390  0E03               	movlw	3
  5430  001392  2417               	addwf	i1recv_msg@qmsg,w,c
  5431  001394  6E12               	movwf	??i1_recv_msg& (0+255),c
  5432  001396  0E00               	movlw	0
  5433  001398  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5434  00139A  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5435  00139C  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5436  0013A0  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5437  0013A4  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5438  0013A8  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5439  0013AC  EC05  F00D         	call	i1_memcpy	;wreg free
  5440                           
  5441                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  5442  0013B0  EE20 F089          	lfsr	2,137
  5443  0013B4  500B               	movf	i1recv_msg@qptr,w,c
  5444  0013B6  26D9               	addwf	fsr2l,f,c
  5445  0013B8  500C               	movf	i1recv_msg@qptr+1,w,c
  5446  0013BA  22DA               	addwfc	fsr2h,f,c
  5447  0013BC  EE10 F089          	lfsr	1,137
  5448  0013C0  500B               	movf	i1recv_msg@qptr,w,c
  5449  0013C2  26E1               	addwf	fsr1l,f,c
  5450  0013C4  500C               	movf	i1recv_msg@qptr+1,w,c
  5451  0013C6  22E2               	addwfc	fsr1h,f,c
  5452  0013C8  50E7               	movf	indf1,w,c
  5453  0013CA  6E12               	movwf	??i1_recv_msg& (0+255),c
  5454  0013CC  2812               	incf	??i1_recv_msg,w,c
  5455  0013CE  0B07               	andlw	7
  5456  0013D0  6EDF               	movwf	indf2,c
  5457                           
  5458                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5459  0013D2  EE20 F002          	lfsr	2,2
  5460  0013D6  5017               	movf	i1recv_msg@qmsg,w,c
  5461  0013D8  26D9               	addwf	fsr2l,f,c
  5462  0013DA  5018               	movf	i1recv_msg@qmsg+1,w,c
  5463  0013DC  22DA               	addwfc	fsr2h,f,c
  5464  0013DE  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5465  0013E2  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5466  0013E6  CFDF FFE7          	movff	indf2,indf1
  5467                           
  5468                           ;messages.c: 91: qmsg->full = 0;
  5469  0013EA  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5470  0013EE  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5471  0013F2  0E00               	movlw	0
  5472  0013F4  6EDF               	movwf	indf2,c
  5473                           
  5474                           ;messages.c: 92: return (tlength);
  5475  0013F6  5015               	movf	i1recv_msg@tlength,w,c
  5476  0013F8  0012               	return	
  5477  0013FA                     i1l2518:
  5478                           
  5479                           ;messages.c: 94: return (-4);
  5480  0013FA  0EFC               	movlw	252
  5481  0013FC  0012               	return	
  5482  0013FE                     __end_ofi1_recv_msg:
  5483                           	opt stack 0
  5484                           pclatu	equ	0xFFB
  5485                           pclath	equ	0xFFA
  5486                           tblptru	equ	0xFF8
  5487                           tblptrh	equ	0xFF7
  5488                           tblptrl	equ	0xFF6
  5489                           tablat	equ	0xFF5
  5490                           prodh	equ	0xFF4
  5491                           prodl	equ	0xFF3
  5492                           intcon	equ	0xFF2
  5493                           postinc0	equ	0xFEE
  5494                           fsr0h	equ	0xFEA
  5495                           fsr0l	equ	0xFE9
  5496                           wreg	equ	0xFE8
  5497                           indf1	equ	0xFE7
  5498                           fsr1h	equ	0xFE2
  5499                           fsr1l	equ	0xFE1
  5500                           bsr	equ	0xFE0
  5501                           indf2	equ	0xFDF
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _uart_receive_interrupt_handler *****************
  5509 ;; Defined at:
  5510 ;;		line 54 in file "../src/my_uart.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  bad_start_id    1   49[COMRAM] unsigned char 
  5515 ;;  message_coun    1   51[COMRAM] unsigned char 
  5516 ;;  status          1   42[COMRAM] unsigned char 
  5517 ;;  bad_end_id      1   50[COMRAM] unsigned char 
  5518 ;;  msg_id          1   55[COMRAM] unsigned char 
  5519 ;;  status          1   43[COMRAM] unsigned char 
  5520 ;;  bad_checksum    3   44[COMRAM] unsigned char [3]
  5521 ;;  bad_counter_    2   47[COMRAM] unsigned char [2]
  5522 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5523 ;;  i               2   53[COMRAM] int 
  5524 ;;  checksum        1   52[COMRAM] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;		None               void
  5527 ;; Registers used:
  5528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5535 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5537 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;Total ram usage:       30 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    9
  5541 ;; This function calls:
  5542 ;;		_ToMainLow_sendmsg
  5543 ;; This function is called by:
  5544 ;;		_InterruptHandlerLow
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text32
  5549  000AFA                     __ptext32:
  5550                           	opt stack 0
  5551  000AFA                     _uart_receive_interrupt_handler:
  5552                           	opt stack 15
  5553                           
  5554                           ;my_uart.c: 57: static unsigned char frame[(14 + 2 + 2)];
  5555                           ;my_uart.c: 58: static unsigned char index = 0;
  5556                           ;my_uart.c: 59: static unsigned char done = 0;
  5557                           ;my_uart.c: 60: static unsigned char received_counter = 0;
  5558                           ;my_uart.c: 62: static unsigned char start_byte_bad = 0;
  5559                           ;my_uart.c: 63: static unsigned char error = 0;
  5560                           ;my_uart.c: 65: if(!done)
  5561                           
  5562                           ;incstack = 0
  5563  000AFA  664B               	tstfsz	uart_receive_interrupt_handler@done,c
  5564  000AFC  D03F               	goto	i1l2972
  5565                           
  5566                           ;my_uart.c: 66: {
  5567                           ;my_uart.c: 67: frame[index] = RCREG1;
  5568  000AFE  504D               	movf	uart_receive_interrupt_handler@index,w,c
  5569  000B00  0D01               	mullw	1
  5570  000B02  0100               	movlb	0	; () banked
  5571  000B04  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5572  000B06  24F3               	addwf	prodl,w,c
  5573  000B08  6ED9               	movwf	fsr2l,c
  5574  000B0A  0100               	movlb	0	; () banked
  5575  000B0C  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5576  000B0E  20F4               	addwfc	prodh,w,c
  5577  000B10  6EDA               	movwf	fsr2h,c
  5578  000B12  CFAF FFDF          	movff	4015,indf2	;volatile
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;my_uart.c: 71: }
  5582                           ;my_uart.c: 72: if( index == 0 )
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;my_uart.c: 69: {
  5586  000B16  664D               	tstfsz	uart_receive_interrupt_handler@index,c
  5587  000B18  D019               	goto	i1l2958
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;my_uart.c: 73: {
  5591                           ;my_uart.c: 74: if( frame[0] != 0xff )
  5592  000B1A  0100               	movlb	0	; () banked
  5593  000B1C  299D               	incf	uart_receive_interrupt_handler@frame& (0+255),w,b
  5594  000B1E  B4D8               	btfsc	status,2,c
  5595  000B20  D012               	goto	i1l2956
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;my_uart.c: 75: {
  5599                           ;my_uart.c: 76: if( !start_byte_bad )
  5600  000B22  664F               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5601  000B24  D00D               	goto	i1l2950
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;my_uart.c: 77: {
  5605                           ;my_uart.c: 78: start_byte_bad = 1;
  5606  000B26  0E01               	movlw	1
  5607  000B28  6E4F               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;my_uart.c: 79: unsigned char bad_start_id = received_counter;
  5611  000B2A  C04E  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;my_uart.c: 80: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5615  000B2E  0E22               	movlw	34
  5616  000B30  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5617  000B32  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5618  000B34  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5619  000B36  0E32               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5620  000B38  6E18               	movwf	ToMainLow_sendmsg@data,c
  5621  000B3A  0E01               	movlw	1
  5622  000B3C  EC87  F00E         	call	_ToMainLow_sendmsg
  5623  000B40                     i1l2950:
  5624                           
  5625                           ;my_uart.c: 82: }
  5626                           ;my_uart.c: 83: index = 0;
  5627  000B40  0E00               	movlw	0
  5628  000B42  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5629  000B44  0012               	return	
  5630  000B46                     i1l2956:
  5631                           
  5632                           ;my_uart.c: 86: else
  5633                           ;my_uart.c: 87: {
  5634                           ;my_uart.c: 88: start_byte_bad = 0;
  5635  000B46  0E00               	movlw	0
  5636  000B48  6E4F               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5637  000B4A  D017               	goto	i1l2970
  5638  000B4C                     i1l2958:
  5639                           
  5640                           ;my_uart.c: 91: else if( index >= (14 + 2 + 2) - 1 )
  5641  000B4C  0E10               	movlw	16
  5642  000B4E  644D               	cpfsgt	uart_receive_interrupt_handler@index,c
  5643  000B50  D014               	goto	i1l2970
  5644                           
  5645                           ;my_uart.c: 92: {
  5646                           ;my_uart.c: 93: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5647  000B52  0100               	movlb	0	; () banked
  5648  000B54  51AE               	movf	(uart_receive_interrupt_handler@frame+17)& (0+255),w,b
  5649  000B56  0AFE               	xorlw	254
  5650  000B58  B4D8               	btfsc	status,2,c
  5651  000B5A  D00F               	goto	i1l2970
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;my_uart.c: 94: {
  5655                           ;my_uart.c: 96: index = 0;
  5656  000B5C  0E00               	movlw	0
  5657  000B5E  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;my_uart.c: 99: unsigned char bad_end_id = received_counter;
  5661  000B60  C04E  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;my_uart.c: 100: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5665  000B64  0E23               	movlw	35
  5666  000B66  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5667  000B68  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5668  000B6A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5669  000B6C  0E33               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5670  000B6E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5671  000B70  0E01               	movlw	1
  5672  000B72  EC87  F00E         	call	_ToMainLow_sendmsg
  5673                           
  5674                           ;my_uart.c: 101: error = 1;
  5675  000B76  0E01               	movlw	1
  5676  000B78  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5677  000B7A                     i1l2970:
  5678                           
  5679                           ;my_uart.c: 102: }
  5680                           ;my_uart.c: 103: }
  5681                           ;my_uart.c: 104: index++;
  5682  000B7A  2A4D               	incf	uart_receive_interrupt_handler@index,f,c
  5683  000B7C                     i1l2972:
  5684                           
  5685                           ;my_uart.c: 105: }
  5686                           ;my_uart.c: 107: if( index >= (14 + 2 + 2) )
  5687  000B7C  0E11               	movlw	17
  5688  000B7E  644D               	cpfsgt	uart_receive_interrupt_handler@index,c
  5689  000B80  0012               	return	
  5690                           
  5691                           ;my_uart.c: 108: {
  5692                           ;my_uart.c: 109: index = 0;
  5693  000B82  0E00               	movlw	0
  5694  000B84  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5695                           
  5696                           ;my_uart.c: 111: if( received_counter != frame[1] )
  5697  000B86  0100               	movlb	0	; () banked
  5698  000B88  519E               	movf	(uart_receive_interrupt_handler@frame+1)& (0+255),w,b
  5699  000B8A  184E               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5700  000B8C  B4D8               	btfsc	status,2,c
  5701  000B8E  D011               	goto	i1l2984
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;my_uart.c: 112: {
  5705                           ;my_uart.c: 114: unsigned char bad_counter_id[2];
  5706                           ;my_uart.c: 115: bad_counter_id[0] = received_counter;
  5707  000B90  C04E  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5708                           
  5709                           ;my_uart.c: 116: bad_counter_id[1] = frame[1];
  5710  000B94  C09E  F031         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;my_uart.c: 117: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5714  000B98  0E21               	movlw	33
  5715  000B9A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5716  000B9C  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5717  000B9E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5718  000BA0  0E30               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5719  000BA2  6E18               	movwf	ToMainLow_sendmsg@data,c
  5720  000BA4  0E02               	movlw	2
  5721  000BA6  EC87  F00E         	call	_ToMainLow_sendmsg
  5722                           
  5723                           ;my_uart.c: 120: received_counter = frame[1];
  5724  000BAA  C09E  F04E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@received_co
      +                          unter
  5725                           
  5726                           ;my_uart.c: 122: error = 1;
  5727  000BAE  0E01               	movlw	1
  5728  000BB0  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5729  000BB2                     i1l2984:
  5730                           
  5731                           ;my_uart.c: 123: }
  5732                           ;my_uart.c: 126: unsigned char gooey_uart_center[14];
  5733                           ;my_uart.c: 127: unsigned char checksum = 0;
  5734  000BB2  0E00               	movlw	0
  5735  000BB4  6E35               	movwf	uart_receive_interrupt_handler@checksum,c
  5736                           
  5737                           ;my_uart.c: 128: int i;
  5738                           ;my_uart.c: 129: for(i = 0; i < 14; i++)
  5739  000BB6  0E00               	movlw	0
  5740  000BB8  6E37               	movwf	uart_receive_interrupt_handler@i+1,c
  5741  000BBA  0E00               	movlw	0
  5742  000BBC  6E36               	movwf	uart_receive_interrupt_handler@i,c
  5743  000BBE  5037               	movf	uart_receive_interrupt_handler@i+1,w,c
  5744  000BC0  0A80               	xorlw	128
  5745  000BC2  0F80               	addlw	-128
  5746  000BC4  0E0E               	movlw	14
  5747  000BC6  B4D8               	btfsc	status,2,c
  5748  000BC8  5C36               	subwf	uart_receive_interrupt_handler@i,w,c
  5749  000BCA  B0D8               	btfsc	status,0,c
  5750  000BCC  D021               	goto	i1l3000
  5751                           
  5752                           ;my_uart.c: 130: {
  5753                           ;my_uart.c: 131: gooey_uart_center[i] = frame[i+2];
  5754  000BCE  0E02               	movlw	2
  5755  000BD0  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5756  000BD2  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5757  000BD4  0E00               	movlw	0
  5758  000BD6  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5759  000BD8  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5760  000BDA  0100               	movlb	0	; () banked
  5761  000BDC  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5762  000BDE  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5763  000BE0  6ED9               	movwf	fsr2l,c
  5764  000BE2  0100               	movlb	0	; () banked
  5765  000BE4  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5766  000BE6  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5767  000BE8  6EDA               	movwf	fsr2h,c
  5768  000BEA  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5769  000BEC  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5770  000BEE  6EE1               	movwf	fsr1l,c
  5771  000BF0  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5772  000BF2  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5773  000BF4  6EE2               	movwf	fsr1h,c
  5774  000BF6  CFDF FFE7          	movff	indf2,indf1
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;my_uart.c: 132: checksum ^= gooey_uart_center[i];
  5778  000BFA  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5779  000BFC  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5780  000BFE  6ED9               	movwf	fsr2l,c
  5781  000C00  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5782  000C02  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5783  000C04  6EDA               	movwf	fsr2h,c
  5784  000C06  50DF               	movf	indf2,w,c
  5785  000C08  1A35               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5786                           
  5787                           ; BSR set to: 0
  5788  000C0A  4A36               	infsnz	uart_receive_interrupt_handler@i,f,c
  5789  000C0C  2A37               	incf	uart_receive_interrupt_handler@i+1,f,c
  5790  000C0E  D7D7               	goto	L10
  5791  000C10                     i1l3000:
  5792                           
  5793                           ;my_uart.c: 133: }
  5794                           ;my_uart.c: 135: if( checksum != frame[(14 + 2 + 2) - 2] )
  5795  000C10  0100               	movlb	0	; () banked
  5796  000C12  51AD               	movf	(uart_receive_interrupt_handler@frame+16)& (0+255),w,b
  5797  000C14  1835               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5798  000C16  B4D8               	btfsc	status,2,c
  5799  000C18  D011               	goto	i1l3008
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;my_uart.c: 136: {
  5803                           ;my_uart.c: 138: unsigned char bad_checksum_message[3];
  5804                           ;my_uart.c: 139: bad_checksum_message[0] = received_counter;
  5805  000C1A  C04E  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_message
  5806                           
  5807                           ;my_uart.c: 140: bad_checksum_message[1] = frame[(14 + 2 + 2) - 2];
  5808  000C1E  C0AD  F02E         	movff	uart_receive_interrupt_handler@frame+16,uart_receive_interrupt_handler@bad_checks
      +                          um_message+1
  5809                           
  5810                           ;my_uart.c: 141: bad_checksum_message[2] = checksum;
  5811  000C22  C035  F02F         	movff	uart_receive_interrupt_handler@checksum,uart_receive_interrupt_handler@bad_checks
      +                          um_message+2
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;my_uart.c: 142: ToMainLow_sendmsg(3,32,(void *)&bad_checksum_message);
  5815  000C26  0E20               	movlw	32
  5816  000C28  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5817  000C2A  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_message
  5818  000C2C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5819  000C2E  0E2D               	movlw	low uart_receive_interrupt_handler@bad_checksum_message
  5820  000C30  6E18               	movwf	ToMainLow_sendmsg@data,c
  5821  000C32  0E03               	movlw	3
  5822  000C34  EC87  F00E         	call	_ToMainLow_sendmsg
  5823                           
  5824                           ;my_uart.c: 143: error = 1;
  5825  000C38  0E01               	movlw	1
  5826  000C3A  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5827  000C3C                     i1l3008:
  5828                           
  5829                           ;my_uart.c: 144: }
  5830                           ;my_uart.c: 149: if( !error )
  5831  000C3C  664C               	tstfsz	uart_receive_interrupt_handler@error,c
  5832  000C3E  D02C               	goto	i1l3028
  5833                           
  5834                           ;my_uart.c: 150: {
  5835                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5836  000C40  C01D  F038         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5837                           
  5838                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5839  000C44  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5840  000C46  0A11               	xorlw	17
  5841  000C48  B4D8               	btfsc	status,2,c
  5842  000C4A  D01C               	goto	i1l422
  5843  000C4C  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5844  000C4E  0AF1               	xorlw	241
  5845  000C50  B4D8               	btfsc	status,2,c
  5846  000C52  D018               	goto	i1l422
  5847  000C54  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5848  000C56  0AF2               	xorlw	242
  5849  000C58  B4D8               	btfsc	status,2,c
  5850  000C5A  D014               	goto	i1l422
  5851  000C5C  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5852  000C5E  0AF3               	xorlw	243
  5853  000C60  B4D8               	btfsc	status,2,c
  5854  000C62  D010               	goto	i1l422
  5855  000C64  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5856  000C66  0AF4               	xorlw	244
  5857  000C68  B4D8               	btfsc	status,2,c
  5858  000C6A  D00C               	goto	i1l422
  5859                           
  5860                           ;my_uart.c: 155: {
  5861                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5862  000C6C  C04E  F034         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5863                           
  5864                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5865  000C70  0E24               	movlw	36
  5866  000C72  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5867  000C74  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5868  000C76  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5869  000C78  0E34               	movlw	low uart_receive_interrupt_handler@message_count
  5870  000C7A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5871  000C7C  0E01               	movlw	1
  5872  000C7E  EC87  F00E         	call	_ToMainLow_sendmsg
  5873  000C82  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5874  000C84                     i1l422:
  5875                           
  5876                           ;my_uart.c: 158: }
  5877                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5878  000C84  0E1F               	movlw	31
  5879  000C86  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5880  000C88  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5881  000C8A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5882  000C8C  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5883  000C8E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5884  000C90  0E0E               	movlw	14
  5885  000C92  EC87  F00E         	call	_ToMainLow_sendmsg
  5886  000C96  6E2C               	movwf	uart_receive_interrupt_handler@status_2231,c
  5887  000C98                     i1l3028:
  5888                           
  5889                           ;my_uart.c: 171: }
  5890                           ;my_uart.c: 172: }
  5891                           ;my_uart.c: 174: received_counter++;
  5892  000C98  2A4E               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5893                           
  5894                           ;my_uart.c: 175: error = 0;
  5895  000C9A  0E00               	movlw	0
  5896  000C9C  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5897  000C9E  0012               	return	
  5898  000CA0                     __end_of_uart_receive_interrupt_handler:
  5899                           	opt stack 0
  5900                           pclatu	equ	0xFFB
  5901                           pclath	equ	0xFFA
  5902                           tblptru	equ	0xFF8
  5903                           tblptrh	equ	0xFF7
  5904                           tblptrl	equ	0xFF6
  5905                           tablat	equ	0xFF5
  5906                           prodh	equ	0xFF4
  5907                           prodl	equ	0xFF3
  5908                           intcon	equ	0xFF2
  5909                           postinc0	equ	0xFEE
  5910                           fsr0h	equ	0xFEA
  5911                           fsr0l	equ	0xFE9
  5912                           wreg	equ	0xFE8
  5913                           indf1	equ	0xFE7
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           bsr	equ	0xFE0
  5917                           indf2	equ	0xFDF
  5918                           postinc2	equ	0xFDE
  5919                           postdec2	equ	0xFDD
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8
  5923                           
  5924 ;; *************** function _timer1_int_handler *****************
  5925 ;; Defined at:
  5926 ;;		line 38 in file "../src/user_interrupts.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;		None
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  result          2   26[COMRAM] unsigned int 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;		None               void
  5933 ;; Registers used:
  5934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5943 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5944 ;;Total ram usage:        2 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    9
  5947 ;; This function calls:
  5948 ;;		_ReadTimer1
  5949 ;;		_ToMainLow_sendmsg
  5950 ;;		_WriteTimer1
  5951 ;; This function is called by:
  5952 ;;		_InterruptHandlerLow
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text33
  5957  001C94                     __ptext33:
  5958                           	opt stack 0
  5959  001C94                     _timer1_int_handler:
  5960                           	opt stack 15
  5961                           
  5962                           ;user_interrupts.c: 42: unsigned int result;
  5963                           ;user_interrupts.c: 49: result = ReadTimer1();
  5964                           
  5965                           ;incstack = 0
  5966  001C94  ECCB  F00E         	call	_ReadTimer1	;wreg free
  5967  001C98  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5968  001C9C  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5969                           
  5970                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5971  001CA0  0E0B               	movlw	11
  5972  001CA2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5973  001CA4  0E00               	movlw	0
  5974  001CA6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5975  001CA8  0E00               	movlw	0
  5976  001CAA  6E18               	movwf	ToMainLow_sendmsg@data,c
  5977  001CAC  0E00               	movlw	0
  5978  001CAE  EC87  F00E         	call	_ToMainLow_sendmsg
  5979                           
  5980                           ;user_interrupts.c: 53: WriteTimer1(0);
  5981  001CB2  0E00               	movlw	0
  5982  001CB4  6E02               	movwf	WriteTimer1@timer1+1,c
  5983  001CB6  0E00               	movlw	0
  5984  001CB8  6E01               	movwf	WriteTimer1@timer1,c
  5985  001CBA  ECC2  F00E         	call	_WriteTimer1	;wreg free
  5986  001CBE  0012               	return	
  5987  001CC0                     __end_of_timer1_int_handler:
  5988                           	opt stack 0
  5989                           pclatu	equ	0xFFB
  5990                           pclath	equ	0xFFA
  5991                           tblptru	equ	0xFF8
  5992                           tblptrh	equ	0xFF7
  5993                           tblptrl	equ	0xFF6
  5994                           tablat	equ	0xFF5
  5995                           prodh	equ	0xFF4
  5996                           prodl	equ	0xFF3
  5997                           intcon	equ	0xFF2
  5998                           postinc0	equ	0xFEE
  5999                           fsr0h	equ	0xFEA
  6000                           fsr0l	equ	0xFE9
  6001                           wreg	equ	0xFE8
  6002                           indf1	equ	0xFE7
  6003                           fsr1h	equ	0xFE2
  6004                           fsr1l	equ	0xFE1
  6005                           bsr	equ	0xFE0
  6006                           indf2	equ	0xFDF
  6007                           postinc2	equ	0xFDE
  6008                           postdec2	equ	0xFDD
  6009                           fsr2h	equ	0xFDA
  6010                           fsr2l	equ	0xFD9
  6011                           status	equ	0xFD8
  6012                           
  6013 ;; *************** function _WriteTimer1 *****************
  6014 ;; Defined at:
  6015 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  timer1          2    0[COMRAM] unsigned int 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  timer           2    2[COMRAM] struct Timers
  6020 ;; Return value:  Size  Location     Type
  6021 ;;		None               void
  6022 ;; Registers used:
  6023 ;;		None
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;Total ram usage:        4 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    6
  6036 ;; This function calls:
  6037 ;;		Nothing
  6038 ;; This function is called by:
  6039 ;;		_timer1_int_handler
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text34
  6044  001D84                     __ptext34:
  6045                           	opt stack 0
  6046  001D84                     _WriteTimer1:
  6047                           	opt stack 17
  6048                           
  6049                           ;incstack = 0
  6050  001D84  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6051  001D88  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6052  001D8C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6053  001D90  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6054  001D94  0012               	return	
  6055  001D96                     __end_of_WriteTimer1:
  6056                           	opt stack 0
  6057                           pclatu	equ	0xFFB
  6058                           pclath	equ	0xFFA
  6059                           tblptru	equ	0xFF8
  6060                           tblptrh	equ	0xFF7
  6061                           tblptrl	equ	0xFF6
  6062                           tablat	equ	0xFF5
  6063                           prodh	equ	0xFF4
  6064                           prodl	equ	0xFF3
  6065                           intcon	equ	0xFF2
  6066                           postinc0	equ	0xFEE
  6067                           fsr0h	equ	0xFEA
  6068                           fsr0l	equ	0xFE9
  6069                           wreg	equ	0xFE8
  6070                           indf1	equ	0xFE7
  6071                           fsr1h	equ	0xFE2
  6072                           fsr1l	equ	0xFE1
  6073                           bsr	equ	0xFE0
  6074                           indf2	equ	0xFDF
  6075                           postinc2	equ	0xFDE
  6076                           postdec2	equ	0xFDD
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function _ToMainLow_sendmsg *****************
  6082 ;; Defined at:
  6083 ;;		line 103 in file "../src/messages.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  length          1    wreg     unsigned char 
  6086 ;;  msgtype         1   22[COMRAM] unsigned char 
  6087 ;;  data            2   23[COMRAM] PTR void 
  6088 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_message(3)
      +, uart_receive_interrupt_handler@gooey_uart_center(14), 
  6089 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  length          1   25[COMRAM] unsigned char 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      char 
  6094 ;; Registers used:
  6095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6101 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;Total ram usage:        4 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    8
  6108 ;; This function calls:
  6109 ;;		i1_send_msg
  6110 ;; This function is called by:
  6111 ;;		_uart_receive_interrupt_handler
  6112 ;;		_timer1_int_handler
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text35
  6117  001D0E                     __ptext35:
  6118                           	opt stack 0
  6119  001D0E                     _ToMainLow_sendmsg:
  6120                           	opt stack 15
  6121                           
  6122                           ;incstack = 0
  6123                           ;ToMainLow_sendmsg@length stored from wreg
  6124  001D0E  6E1A               	movwf	ToMainLow_sendmsg@length,c
  6125                           
  6126                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6127  001D10  0102               	movlb	2	; () banked
  6128  001D12  0E02               	movlw	high _ToMainLow_MQ
  6129  001D14  6E0C               	movwf	i1send_msg@qptr+1,c
  6130  001D16  0102               	movlb	2	; () banked
  6131  001D18  0E00               	movlw	low _ToMainLow_MQ
  6132  001D1A  6E0B               	movwf	i1send_msg@qptr,c
  6133  001D1C  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6134  001D20  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6135  001D24  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6136  001D28  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6137  001D2C  EC64  F00A         	call	i1_send_msg	;wreg free
  6138  001D30  0012               	return	
  6139  001D32                     __end_of_ToMainLow_sendmsg:
  6140                           	opt stack 0
  6141                           pclatu	equ	0xFFB
  6142                           pclath	equ	0xFFA
  6143                           tblptru	equ	0xFF8
  6144                           tblptrh	equ	0xFF7
  6145                           tblptrl	equ	0xFF6
  6146                           tablat	equ	0xFF5
  6147                           prodh	equ	0xFF4
  6148                           prodl	equ	0xFF3
  6149                           intcon	equ	0xFF2
  6150                           postinc0	equ	0xFEE
  6151                           fsr0h	equ	0xFEA
  6152                           fsr0l	equ	0xFE9
  6153                           wreg	equ	0xFE8
  6154                           indf1	equ	0xFE7
  6155                           fsr1h	equ	0xFE2
  6156                           fsr1l	equ	0xFE1
  6157                           bsr	equ	0xFE0
  6158                           indf2	equ	0xFDF
  6159                           postinc2	equ	0xFDE
  6160                           postdec2	equ	0xFDD
  6161                           fsr2h	equ	0xFDA
  6162                           fsr2l	equ	0xFD9
  6163                           status	equ	0xFD8
  6164                           
  6165 ;; *************** function i1_send_msg *****************
  6166 ;; Defined at:
  6167 ;;		line 24 in file "../src/messages.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6170 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  6171 ;;  length          1   12[COMRAM] unsigned char 
  6172 ;;  msgtype         1   13[COMRAM] unsigned char 
  6173 ;;  data            2   14[COMRAM] PTR void 
  6174 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  6175 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6176 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  6177 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6180 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6181 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  6182 ;;  send_msg        2   17[COMRAM] unsigned int 
  6183 ;;  send_msg        1   19[COMRAM] unsigned char 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      char 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6193 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;Total ram usage:       12 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    7
  6200 ;; This function calls:
  6201 ;;		i1_memcpy
  6202 ;; This function is called by:
  6203 ;;		_ToMainLow_sendmsg
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text36
  6208  0014C8                     __ptext36:
  6209                           	opt stack 0
  6210  0014C8                     i1_send_msg:
  6211                           	opt stack 15
  6212                           
  6213                           ;messages.c: 25: unsigned char slot;
  6214                           ;messages.c: 27: msg *qmsg;
  6215                           ;messages.c: 28: size_t tlength = length;
  6216                           
  6217                           ;incstack = 0
  6218  0014C8  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6219  0014CC  6A13               	clrf	i1send_msg@tlength+1,c
  6220                           
  6221                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6222  0014CE  EE20 F088          	lfsr	2,136
  6223  0014D2  500B               	movf	i1send_msg@qptr,w,c
  6224  0014D4  26D9               	addwf	fsr2l,f,c
  6225  0014D6  500C               	movf	i1send_msg@qptr+1,w,c
  6226  0014D8  22DA               	addwfc	fsr2h,f,c
  6227  0014DA  50DF               	movf	indf2,w,c
  6228  0014DC  6E14               	movwf	i1send_msg@slot,c
  6229                           
  6230                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6231  0014DE  5014               	movf	i1send_msg@slot,w,c
  6232  0014E0  0D11               	mullw	17
  6233  0014E2  50F3               	movf	prodl,w,c
  6234  0014E4  240B               	addwf	i1send_msg@qptr,w,c
  6235  0014E6  6E15               	movwf	i1send_msg@qmsg,c
  6236  0014E8  50F4               	movf	prodh,w,c
  6237  0014EA  200C               	addwfc	i1send_msg@qptr+1,w,c
  6238  0014EC  6E16               	movwf	i1send_msg@qmsg+1,c
  6239                           
  6240                           ;messages.c: 41: if (qmsg->full != 0) {
  6241  0014EE  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6242  0014F2  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6243  0014F6  50DF               	movf	indf2,w,c
  6244  0014F8  B4D8               	btfsc	status,2,c
  6245  0014FA  D002               	goto	i1l2454
  6246                           
  6247                           ;messages.c: 42: return (-1);
  6248  0014FC  0EFF               	movlw	255
  6249  0014FE  0012               	return	
  6250  001500                     i1l2454:
  6251                           
  6252                           ;messages.c: 43: }
  6253                           ;messages.c: 46: qmsg->length = length;
  6254  001500  EE20 F001          	lfsr	2,1
  6255  001504  5015               	movf	i1send_msg@qmsg,w,c
  6256  001506  26D9               	addwf	fsr2l,f,c
  6257  001508  5016               	movf	i1send_msg@qmsg+1,w,c
  6258  00150A  22DA               	addwfc	fsr2h,f,c
  6259  00150C  C00D  FFDF         	movff	i1send_msg@length,indf2
  6260                           
  6261                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6262  001510  EE20 F002          	lfsr	2,2
  6263  001514  5015               	movf	i1send_msg@qmsg,w,c
  6264  001516  26D9               	addwf	fsr2l,f,c
  6265  001518  5016               	movf	i1send_msg@qmsg+1,w,c
  6266  00151A  22DA               	addwfc	fsr2h,f,c
  6267  00151C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6268                           
  6269                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6270  001520  0E03               	movlw	3
  6271  001522  2415               	addwf	i1send_msg@qmsg,w,c
  6272  001524  6E01               	movwf	i1memcpy@d1,c
  6273  001526  0E00               	movlw	0
  6274  001528  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6275  00152A  6E02               	movwf	i1memcpy@d1+1,c
  6276  00152C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6277  001530  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6278  001534  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6279  001538  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6280  00153C  EC05  F00D         	call	i1_memcpy	;wreg free
  6281                           
  6282                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  6283  001540  EE20 F088          	lfsr	2,136
  6284  001544  500B               	movf	i1send_msg@qptr,w,c
  6285  001546  26D9               	addwf	fsr2l,f,c
  6286  001548  500C               	movf	i1send_msg@qptr+1,w,c
  6287  00154A  22DA               	addwfc	fsr2h,f,c
  6288  00154C  EE10 F088          	lfsr	1,136
  6289  001550  500B               	movf	i1send_msg@qptr,w,c
  6290  001552  26E1               	addwf	fsr1l,f,c
  6291  001554  500C               	movf	i1send_msg@qptr+1,w,c
  6292  001556  22E2               	addwfc	fsr1h,f,c
  6293  001558  50E7               	movf	indf1,w,c
  6294  00155A  6E11               	movwf	??i1_send_msg& (0+255),c
  6295  00155C  2811               	incf	??i1_send_msg,w,c
  6296  00155E  0B07               	andlw	7
  6297  001560  6EDF               	movwf	indf2,c
  6298                           
  6299                           ;messages.c: 59: qmsg->full = 1;
  6300  001562  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6301  001566  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6302  00156A  0E01               	movlw	1
  6303  00156C  6EDF               	movwf	indf2,c
  6304                           
  6305                           ;messages.c: 60: return (1);
  6306  00156E  0E01               	movlw	1
  6307  001570  0012               	return	
  6308  001572                     __end_ofi1_send_msg:
  6309                           	opt stack 0
  6310                           pclatu	equ	0xFFB
  6311                           pclath	equ	0xFFA
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           prodh	equ	0xFF4
  6317                           prodl	equ	0xFF3
  6318                           intcon	equ	0xFF2
  6319                           postinc0	equ	0xFEE
  6320                           fsr0h	equ	0xFEA
  6321                           fsr0l	equ	0xFE9
  6322                           wreg	equ	0xFE8
  6323                           indf1	equ	0xFE7
  6324                           fsr1h	equ	0xFE2
  6325                           fsr1l	equ	0xFE1
  6326                           bsr	equ	0xFE0
  6327                           indf2	equ	0xFDF
  6328                           postinc2	equ	0xFDE
  6329                           postdec2	equ	0xFDD
  6330                           fsr2h	equ	0xFDA
  6331                           fsr2l	equ	0xFD9
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function i1_memcpy *****************
  6335 ;; Defined at:
  6336 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  d1              2    0[COMRAM] PTR void 
  6339 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6340 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  6341 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  6342 ;;  s1              2    2[COMRAM] PTR const void 
  6343 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6344 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6345 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  6346 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6347 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  6348 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  6349 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6350 ;;  n               2    4[COMRAM] unsigned int 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6353 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6354 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6355 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  6356 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6357 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  6358 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  6359 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6360 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6361 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6362 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  6363 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  2    0[COMRAM] PTR void 
  6366 ;; Registers used:
  6367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6373 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6374 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6376 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6377 ;;Total ram usage:       10 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:    6
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		i1_send_msg
  6384 ;;		i1_recv_msg
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text37
  6389  001A0A                     __ptext37:
  6390                           	opt stack 0
  6391  001A0A                     i1_memcpy:
  6392                           	opt stack 15
  6393                           
  6394                           ;incstack = 0
  6395  001A0A  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6396  001A0E  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6397  001A12  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6398  001A16  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6399  001A1A  D00E               	goto	i1l2428
  6400  001A1C                     i1l2422:
  6401  001A1C  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6402  001A20  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6403  001A24  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6404  001A28  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6405  001A2C  CFDF FFE7          	movff	indf2,indf1
  6406  001A30  4A09               	infsnz	i1memcpy@s,f,c
  6407  001A32  2A0A               	incf	i1memcpy@s+1,f,c
  6408  001A34  4A07               	infsnz	i1memcpy@d,f,c
  6409  001A36  2A08               	incf	i1memcpy@d+1,f,c
  6410  001A38                     i1l2428:
  6411  001A38  0605               	decf	i1memcpy@n,f,c
  6412  001A3A  A0D8               	btfss	status,0,c
  6413  001A3C  0606               	decf	i1memcpy@n+1,f,c
  6414  001A3E  2805               	incf	i1memcpy@n& (0+255),w,c
  6415  001A40  B4D8               	btfsc	status,2,c
  6416  001A42  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6417  001A44  B4D8               	btfsc	status,2,c
  6418                           
  6419                           ;	Return value of i1_memcpy is never used
  6420  001A46  0012               	return	
  6421  001A48  D7E9               	goto	i1l2422
  6422  001A4A                     __end_ofi1_memcpy:
  6423                           	opt stack 0
  6424                           pclatu	equ	0xFFB
  6425                           pclath	equ	0xFFA
  6426                           tblptru	equ	0xFF8
  6427                           tblptrh	equ	0xFF7
  6428                           tblptrl	equ	0xFF6
  6429                           tablat	equ	0xFF5
  6430                           prodh	equ	0xFF4
  6431                           prodl	equ	0xFF3
  6432                           intcon	equ	0xFF2
  6433                           postinc0	equ	0xFEE
  6434                           fsr0h	equ	0xFEA
  6435                           fsr0l	equ	0xFE9
  6436                           wreg	equ	0xFE8
  6437                           indf1	equ	0xFE7
  6438                           fsr1h	equ	0xFE2
  6439                           fsr1l	equ	0xFE1
  6440                           bsr	equ	0xFE0
  6441                           indf2	equ	0xFDF
  6442                           postinc2	equ	0xFDE
  6443                           postdec2	equ	0xFDD
  6444                           fsr2h	equ	0xFDA
  6445                           fsr2l	equ	0xFD9
  6446                           status	equ	0xFD8
  6447                           
  6448 ;; *************** function _ReadTimer1 *****************
  6449 ;; Defined at:
  6450 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;		None
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  timer           2    2[COMRAM] struct Timers
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  2    0[COMRAM] unsigned int 
  6457 ;; Registers used:
  6458 ;;		None
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6468 ;;Total ram usage:        4 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    6
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_timer1_int_handler
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text38
  6479  001D96                     __ptext38:
  6480                           	opt stack 0
  6481  001D96                     _ReadTimer1:
  6482                           	opt stack 17
  6483                           
  6484                           ;incstack = 0
  6485  001D96  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6486  001D9A  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6487  001D9E  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6488  001DA2  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6489  001DA6  0012               	return	
  6490  001DA8                     __end_of_ReadTimer1:
  6491                           	opt stack 0
  6492                           pclatu	equ	0xFFB
  6493                           pclath	equ	0xFFA
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           postinc0	equ	0xFEE
  6502                           fsr0h	equ	0xFEA
  6503                           fsr0l	equ	0xFE9
  6504                           wreg	equ	0xFE8
  6505                           indf1	equ	0xFE7
  6506                           fsr1h	equ	0xFE2
  6507                           fsr1l	equ	0xFE1
  6508                           bsr	equ	0xFE0
  6509                           indf2	equ	0xFDF
  6510                           postinc2	equ	0xFDE
  6511                           postdec2	equ	0xFDD
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _InterruptHandlerHigh *****************
  6517 ;; Defined at:
  6518 ;;		line 86 in file "../src/interrupts.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;		None               void
  6525 ;; Registers used:
  6526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6534 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6535 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6536 ;;Total ram usage:       14 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    5
  6539 ;; This function calls:
  6540 ;;		_SleepIfOkay
  6541 ;;		_i2c_int_handler
  6542 ;;		_timer0_int_handler
  6543 ;; This function is called by:
  6544 ;;		Interrupt level 2
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	intcode
  6549  000008                     __pintcode:
  6550                           	opt stack 0
  6551  000008                     _InterruptHandlerHigh:
  6552                           	opt stack 15
  6553                           
  6554                           ;incstack = 0
  6555  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh
  6556  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+1
  6557  000010  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+2
  6558  000014  EF4C  F00B         	goto	int_func
  6559                           pclatu	equ	0xFFB
  6560                           pclath	equ	0xFFA
  6561                           tblptru	equ	0xFF8
  6562                           tblptrh	equ	0xFF7
  6563                           tblptrl	equ	0xFF6
  6564                           tablat	equ	0xFF5
  6565                           prodh	equ	0xFF4
  6566                           prodl	equ	0xFF3
  6567                           intcon	equ	0xFF2
  6568                           postinc0	equ	0xFEE
  6569                           fsr0h	equ	0xFEA
  6570                           fsr0l	equ	0xFE9
  6571                           wreg	equ	0xFE8
  6572                           indf1	equ	0xFE7
  6573                           fsr1h	equ	0xFE2
  6574                           fsr1l	equ	0xFE1
  6575                           bsr	equ	0xFE0
  6576                           indf2	equ	0xFDF
  6577                           postinc2	equ	0xFDE
  6578                           postdec2	equ	0xFDD
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583                           	psect	intcode_body
  6584  001698                     __pintcode_body:
  6585                           	opt stack 15
  6586  001698                     int_func:
  6587                           	opt stack 15
  6588  001698  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+3
  6589  00169C  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+4
  6590  0016A0  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+5
  6591  0016A4  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+6
  6592  0016A8  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+7
  6593  0016AC  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+8
  6594  0016B0  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+9
  6595  0016B4  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+10
  6596  0016B8  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+11
  6597  0016BC  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+12
  6598  0016C0  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+13
  6599                           
  6600                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6601  0016C4  A69E               	btfss	3998,3,c	;volatile
  6602  0016C6  D003               	goto	i2l3262
  6603                           
  6604                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6605  0016C8  969E               	bcf	3998,3,c	;volatile
  6606                           
  6607                           ;interrupts.c: 98: i2c_int_handler();
  6608  0016CA  EC62  F000         	call	_i2c_int_handler	;wreg free
  6609  0016CE                     i2l3262:
  6610                           
  6611                           ;interrupts.c: 99: }
  6612                           ;interrupts.c: 102: if (INTCONbits.TMR0IF) {
  6613  0016CE  A4F2               	btfss	intcon,2,c	;volatile
  6614  0016D0  D003               	goto	i2l3268
  6615                           
  6616                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6617  0016D2  94F2               	bcf	intcon,2,c	;volatile
  6618                           
  6619                           ;interrupts.c: 108: timer0_int_handler();
  6620  0016D4  EC8B  F00B         	call	_timer0_int_handler	;wreg free
  6621  0016D8                     i2l3268:
  6622                           
  6623                           ;interrupts.c: 109: }
  6624                           ;interrupts.c: 118: SleepIfOkay();
  6625  0016D8  EC59  F00C         	call	_SleepIfOkay	;wreg free
  6626  0016DC  C09C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6627  0016E0  C09B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6628  0016E4  C09A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6629  0016E8  C099  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6630  0016EC  C098  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6631  0016F0  C097  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6632  0016F4  C096  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6633  0016F8  C095  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6634  0016FC  C094  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6635  001700  C093  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6636  001704  C092  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6637  001708  C091  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6638  00170C  C090  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6639  001710  C08F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6640  001714  0011               	retfie		f
  6641  001716                     __end_of_InterruptHandlerHigh:
  6642                           	opt stack 0
  6643                           pclatu	equ	0xFFB
  6644                           pclath	equ	0xFFA
  6645                           tblptru	equ	0xFF8
  6646                           tblptrh	equ	0xFF7
  6647                           tblptrl	equ	0xFF6
  6648                           tablat	equ	0xFF5
  6649                           prodh	equ	0xFF4
  6650                           prodl	equ	0xFF3
  6651                           intcon	equ	0xFF2
  6652                           postinc0	equ	0xFEE
  6653                           fsr0h	equ	0xFEA
  6654                           fsr0l	equ	0xFE9
  6655                           wreg	equ	0xFE8
  6656                           indf1	equ	0xFE7
  6657                           fsr1h	equ	0xFE2
  6658                           fsr1l	equ	0xFE1
  6659                           bsr	equ	0xFE0
  6660                           indf2	equ	0xFDF
  6661                           postinc2	equ	0xFDE
  6662                           postdec2	equ	0xFDD
  6663                           fsr2h	equ	0xFDA
  6664                           fsr2l	equ	0xFD9
  6665                           status	equ	0xFD8
  6666                           
  6667 ;; *************** function _timer0_int_handler *****************
  6668 ;; Defined at:
  6669 ;;		line 16 in file "../src/user_interrupts.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;  val             2   33[BANK0 ] unsigned int 
  6674 ;;  msgtype         2   31[BANK0 ] int 
  6675 ;;  length          2   29[BANK0 ] int 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;		None               void
  6678 ;; Registers used:
  6679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6686 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6688 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6689 ;;Total ram usage:        6 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    3
  6692 ;; This function calls:
  6693 ;;		_FromMainHigh_recvmsg
  6694 ;;		_ToMainHigh_sendmsg
  6695 ;;		_WriteTimer0
  6696 ;; This function is called by:
  6697 ;;		_InterruptHandlerHigh
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text40
  6702  001716                     __ptext40:
  6703                           	opt stack 0
  6704  001716                     _timer0_int_handler:
  6705                           	opt stack 16
  6706                           
  6707                           ;user_interrupts.c: 20: unsigned int val;
  6708                           ;user_interrupts.c: 21: int length, msgtype;
  6709                           ;user_interrupts.c: 25: WriteTimer0(0);
  6710                           
  6711                           ;incstack = 0
  6712  001716  0E00               	movlw	0
  6713  001718  0100               	movlb	0	; () banked
  6714  00171A  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6715  00171C  0E00               	movlw	0
  6716  00171E  0100               	movlb	0	; () banked
  6717  001720  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6718  001722  ECD4  F00E         	call	_WriteTimer0	;wreg free
  6719                           
  6720                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6721  001726  0100               	movlb	0	; () banked
  6722  001728  0E00               	movlw	high timer0_int_handler@msgtype
  6723  00172A  0100               	movlb	0	; () banked
  6724  00172C  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6725  00172E  0100               	movlb	0	; () banked
  6726  001730  0E7F               	movlw	low timer0_int_handler@msgtype
  6727  001732  0100               	movlb	0	; () banked
  6728  001734  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6729  001736  0100               	movlb	0	; () banked
  6730  001738  0E00               	movlw	high timer0_int_handler@val
  6731  00173A  0100               	movlb	0	; () banked
  6732  00173C  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6733  00173E  0100               	movlb	0	; () banked
  6734  001740  0E81               	movlw	low timer0_int_handler@val
  6735  001742  0100               	movlb	0	; () banked
  6736  001744  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6737  001746  0E02               	movlw	2
  6738  001748  ECD1  F00D         	call	_FromMainHigh_recvmsg
  6739  00174C  0100               	movlb	0	; () banked
  6740  00174E  6F7D               	movwf	timer0_int_handler@length& (0+255),b
  6741  001750  0100               	movlb	0	; () banked
  6742  001752  6B7E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6743  001754  0100               	movlb	0	; () banked
  6744  001756  BF7D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6745  001758  077E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6749  00175A  0100               	movlb	0	; () banked
  6750  00175C  517D               	movf	timer0_int_handler@length& (0+255),w,b
  6751  00175E  0A02               	xorlw	2
  6752  001760  117E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6753  001762  A4D8               	btfss	status,2,c
  6754  001764  0012               	return	
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6758  001766  0E0A               	movlw	10
  6759  001768  0100               	movlb	0	; () banked
  6760  00176A  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6761  00176C  0100               	movlb	0	; () banked
  6762  00176E  0E00               	movlw	high timer0_int_handler@val
  6763  001770  0100               	movlb	0	; () banked
  6764  001772  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6765  001774  0100               	movlb	0	; () banked
  6766  001776  0E81               	movlw	low timer0_int_handler@val
  6767  001778  0100               	movlb	0	; () banked
  6768  00177A  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6769  00177C  0E02               	movlw	2
  6770  00177E  EC33  F00E         	call	_ToMainHigh_sendmsg
  6771  001782  0012               	return	
  6772  001784                     __end_of_timer0_int_handler:
  6773                           	opt stack 0
  6774                           pclatu	equ	0xFFB
  6775                           pclath	equ	0xFFA
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           prodh	equ	0xFF4
  6781                           prodl	equ	0xFF3
  6782                           intcon	equ	0xFF2
  6783                           postinc0	equ	0xFEE
  6784                           fsr0h	equ	0xFEA
  6785                           fsr0l	equ	0xFE9
  6786                           wreg	equ	0xFE8
  6787                           indf1	equ	0xFE7
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           bsr	equ	0xFE0
  6791                           indf2	equ	0xFDF
  6792                           postinc2	equ	0xFDE
  6793                           postdec2	equ	0xFDD
  6794                           fsr2h	equ	0xFDA
  6795                           fsr2l	equ	0xFD9
  6796                           status	equ	0xFD8
  6797                           
  6798 ;; *************** function _WriteTimer0 *****************
  6799 ;; Defined at:
  6800 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  timer0          2    0[BANK0 ] unsigned int 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  timer           2    2[BANK0 ] struct Timers
  6805 ;; Return value:  Size  Location     Type
  6806 ;;		None               void
  6807 ;; Registers used:
  6808 ;;		None
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;Total ram usage:        4 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_timer0_int_handler
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text41
  6828  001DA8                     __ptext41:
  6829                           	opt stack 0
  6830  001DA8                     _WriteTimer0:
  6831                           	opt stack 18
  6832                           
  6833                           ;incstack = 0
  6834  001DA8  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6835  001DAC  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6836  001DB0  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6837  001DB4  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6838  001DB8  0012               	return	
  6839  001DBA                     __end_of_WriteTimer0:
  6840                           	opt stack 0
  6841                           pclatu	equ	0xFFB
  6842                           pclath	equ	0xFFA
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           postinc0	equ	0xFEE
  6851                           fsr0h	equ	0xFEA
  6852                           fsr0l	equ	0xFE9
  6853                           wreg	equ	0xFE8
  6854                           indf1	equ	0xFE7
  6855                           fsr1h	equ	0xFE2
  6856                           fsr1l	equ	0xFE1
  6857                           bsr	equ	0xFE0
  6858                           indf2	equ	0xFDF
  6859                           postinc2	equ	0xFDE
  6860                           postdec2	equ	0xFDD
  6861                           fsr2h	equ	0xFDA
  6862                           fsr2l	equ	0xFD9
  6863                           status	equ	0xFD8
  6864                           
  6865 ;; *************** function _i2c_int_handler *****************
  6866 ;; Defined at:
  6867 ;;		line 103 in file "../src/my_i2c.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;		None
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  l               2    0        int 
  6872 ;;  error_buf       3   38[BANK0 ] unsigned char [3]
  6873 ;;  data_read       1   46[BANK0 ] unsigned char 
  6874 ;;  msg_ready       1   45[BANK0 ] unsigned char 
  6875 ;;  msg_to_send     1   44[BANK0 ] unsigned char 
  6876 ;;  i2c_data        1   43[BANK0 ] unsigned char 
  6877 ;;  overrun_erro    1   42[BANK0 ] unsigned char 
  6878 ;;  data_written    1   41[BANK0 ] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;		None               void
  6881 ;; Registers used:
  6882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6889 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6891 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6892 ;;Total ram usage:       10 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    4
  6895 ;; This function calls:
  6896 ;;		_ToMainHigh_sendmsg
  6897 ;;		_blip4
  6898 ;;		_handle_start
  6899 ;;		_retrieve_sensor_values
  6900 ;;		i2_blip
  6901 ;;		i2_blip1
  6902 ;;		i2_blip2
  6903 ;;		i2_blip3
  6904 ;; This function is called by:
  6905 ;;		_InterruptHandlerHigh
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text42
  6910  0000C4                     __ptext42:
  6911                           	opt stack 0
  6912  0000C4                     _i2c_int_handler:
  6913                           	opt stack 15
  6914                           
  6915                           ;my_i2c.c: 104: blip1();
  6916                           
  6917                           ;incstack = 0
  6918  0000C4  EC0D  F00F         	call	i2_blip1	;wreg free
  6919                           
  6920                           ;my_i2c.c: 106: static unsigned char sensor_bank_side[14];
  6921                           ;my_i2c.c: 107: static unsigned char sensor_bank_front[14];
  6922                           ;my_i2c.c: 108: static unsigned char sensor_bank_ventril[14];
  6923                           ;my_i2c.c: 110: unsigned char i2c_data;
  6924                           ;my_i2c.c: 111: unsigned char data_read = 0;
  6925  0000C8  0E00               	movlw	0
  6926  0000CA  0100               	movlb	0	; () banked
  6927  0000CC  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;my_i2c.c: 112: unsigned char data_written = 0;
  6931  0000CE  0E00               	movlw	0
  6932  0000D0  0100               	movlb	0	; () banked
  6933  0000D2  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;my_i2c.c: 113: unsigned char msg_ready = 0;
  6937  0000D4  0E00               	movlw	0
  6938  0000D6  0100               	movlb	0	; () banked
  6939  0000D8  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;my_i2c.c: 114: unsigned char msg_to_send = 0;
  6943  0000DA  0E00               	movlw	0
  6944  0000DC  0100               	movlb	0	; () banked
  6945  0000DE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;my_i2c.c: 115: unsigned char overrun_error = 0;
  6949  0000E0  0E00               	movlw	0
  6950  0000E2  0100               	movlb	0	; () banked
  6951  0000E4  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;my_i2c.c: 116: unsigned char error_buf[3];
  6955                           ;my_i2c.c: 119: if (SSPCON1bits.SSPOV == 1) {
  6956  0000E6  ACC6               	btfss	4038,6,c	;volatile
  6957  0000E8  D024               	goto	i2l2738
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;my_i2c.c: 120: SSPCON1bits.SSPOV = 0;
  6961  0000EA  9CC6               	bcf	4038,6,c	;volatile
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;my_i2c.c: 124: ic_ptr->status = 0x5;
  6965  0000EC  0100               	movlb	0	; () banked
  6966  0000EE  EE20 F021          	lfsr	2,33
  6967  0000F2  0100               	movlb	0	; () banked
  6968  0000F4  51D3               	movf	_ic_ptr& (0+255),w,b
  6969  0000F6  26D9               	addwf	fsr2l,f,c
  6970  0000F8  0100               	movlb	0	; () banked
  6971  0000FA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  6972  0000FC  22DA               	addwfc	fsr2h,f,c
  6973  0000FE  0E05               	movlw	5
  6974  000100  6EDF               	movwf	indf2,c
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;my_i2c.c: 125: overrun_error = 1;
  6978  000102  0E01               	movlw	1
  6979  000104  0100               	movlb	0	; () banked
  6980  000106  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;my_i2c.c: 126: ic_ptr->error_count++;
  6984  000108  0100               	movlb	0	; () banked
  6985  00010A  EE20 F023          	lfsr	2,35
  6986  00010E  0100               	movlb	0	; () banked
  6987  000110  51D3               	movf	_ic_ptr& (0+255),w,b
  6988  000112  26D9               	addwf	fsr2l,f,c
  6989  000114  0100               	movlb	0	; () banked
  6990  000116  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  6991  000118  22DA               	addwfc	fsr2h,f,c
  6992  00011A  2ADF               	incf	indf2,f,c
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;my_i2c.c: 127: ic_ptr->error_code = 0x4;
  6996  00011C  0100               	movlb	0	; () banked
  6997  00011E  EE20 F022          	lfsr	2,34
  6998  000122  0100               	movlb	0	; () banked
  6999  000124  51D3               	movf	_ic_ptr& (0+255),w,b
  7000  000126  26D9               	addwf	fsr2l,f,c
  7001  000128  0100               	movlb	0	; () banked
  7002  00012A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7003  00012C  22DA               	addwfc	fsr2h,f,c
  7004  00012E  0E04               	movlw	4
  7005  000130  6EDF               	movwf	indf2,c
  7006  000132                     i2l2738:
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;my_i2c.c: 128: }
  7010                           ;my_i2c.c: 130: if (SSPSTATbits.BF == 1) {
  7011  000132  A0C7               	btfss	4039,0,c	;volatile
  7012  000134  D005               	goto	i2l2744
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;my_i2c.c: 131: i2c_data = SSPBUF;
  7016  000136  CFC9 F08B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 132: data_read = 1;
  7020  00013A  0E01               	movlw	1
  7021  00013C  0100               	movlb	0	; () banked
  7022  00013E  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7023  000140                     i2l2744:
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;my_i2c.c: 133: }
  7027                           ;my_i2c.c: 135: if (!overrun_error) {
  7028  000140  0100               	movlb	0	; () banked
  7029  000142  678A               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7030  000144  D25E               	goto	i2l304
  7031  000146  D247               	goto	i2l2862
  7032  000148                     i2l306:
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;my_i2c.c: 138: {
  7036                           ;my_i2c.c: 140: if (SSPSTATbits.S == 1) {
  7037  000148  A6C7               	btfss	4039,3,c	;volatile
  7038  00014A  D25B               	goto	i2l304
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;my_i2c.c: 141: handle_start(data_read);
  7042  00014C  0100               	movlb	0	; () banked
  7043  00014E  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7044  000150  ECFF  F009         	call	_handle_start
  7045                           
  7046                           ;my_i2c.c: 143: if (ic_ptr->status == 0x8) {
  7047  000154  0100               	movlb	0	; () banked
  7048  000156  EE20 F021          	lfsr	2,33
  7049  00015A  0100               	movlb	0	; () banked
  7050  00015C  51D3               	movf	_ic_ptr& (0+255),w,b
  7051  00015E  26D9               	addwf	fsr2l,f,c
  7052  000160  0100               	movlb	0	; () banked
  7053  000162  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7054  000164  22DA               	addwfc	fsr2h,f,c
  7055  000166  0E08               	movlw	8
  7056  000168  62DF               	cpfseq	indf2,c
  7057  00016A  D24B               	goto	i2l304
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;my_i2c.c: 144: data_read = 0;
  7061  00016C  0E00               	movlw	0
  7062  00016E  0100               	movlb	0	; () banked
  7063  000170  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7064                           
  7065                           ;my_i2c.c: 145: msg_to_send = 1;
  7066  000172  0E01               	movlw	1
  7067  000174  0100               	movlb	0	; () banked
  7068  000176  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7069  000178  D244               	goto	i2l304
  7070  00017A                     i2l310:
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;my_i2c.c: 151: {
  7074                           ;my_i2c.c: 154: if (SSPSTATbits.P == 1) {
  7075  00017A  A8C7               	btfss	4039,4,c	;volatile
  7076  00017C  D02A               	goto	i2l2764
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;my_i2c.c: 157: ic_ptr->event_count++;
  7080  00017E  0100               	movlb	0	; () banked
  7081  000180  EE20 F020          	lfsr	2,32
  7082  000184  0100               	movlb	0	; () banked
  7083  000186  51D3               	movf	_ic_ptr& (0+255),w,b
  7084  000188  26D9               	addwf	fsr2l,f,c
  7085  00018A  0100               	movlb	0	; () banked
  7086  00018C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7087  00018E  22DA               	addwfc	fsr2h,f,c
  7088  000190  2ADF               	incf	indf2,f,c
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;my_i2c.c: 158: if (data_read) {
  7092  000192  0100               	movlb	0	; () banked
  7093  000194  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7094  000196  B4D8               	btfsc	status,2,c
  7095  000198  D213               	goto	L15
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7099  00019A  BAC7               	btfsc	4039,5,c	;volatile
  7100  00019C  D004               	goto	i2l2762
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;my_i2c.c: 160: msg_ready = 1;
  7104  00019E  0E01               	movlw	1
  7105  0001A0  0100               	movlb	0	; () banked
  7106  0001A2  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7107                           
  7108                           ;my_i2c.c: 161: } else {
  7109  0001A4  D20D               	goto	L15
  7110  0001A6                     i2l2762:
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;my_i2c.c: 162: ic_ptr->error_count++;
  7114  0001A6  0100               	movlb	0	; () banked
  7115  0001A8  EE20 F023          	lfsr	2,35
  7116  0001AC  0100               	movlb	0	; () banked
  7117  0001AE  51D3               	movf	_ic_ptr& (0+255),w,b
  7118  0001B0  26D9               	addwf	fsr2l,f,c
  7119  0001B2  0100               	movlb	0	; () banked
  7120  0001B4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7121  0001B6  22DA               	addwfc	fsr2h,f,c
  7122  0001B8  2ADF               	incf	indf2,f,c
  7123                           
  7124                           ;my_i2c.c: 163: ic_ptr->error_code = 0x6;
  7125  0001BA  0100               	movlb	0	; () banked
  7126  0001BC  EE20 F022          	lfsr	2,34
  7127  0001C0  0100               	movlb	0	; () banked
  7128  0001C2  51D3               	movf	_ic_ptr& (0+255),w,b
  7129  0001C4  26D9               	addwf	fsr2l,f,c
  7130  0001C6  0100               	movlb	0	; () banked
  7131  0001C8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7132  0001CA  22DA               	addwfc	fsr2h,f,c
  7133  0001CC  0E06               	movlw	6
  7134  0001CE  6EDF               	movwf	indf2,c
  7135                           
  7136                           ; BSR set to: 0
  7137  0001D0  D1F7               	goto	L15
  7138  0001D2                     i2l2764:
  7139                           
  7140                           ; BSR set to: 0
  7141  0001D2  0100               	movlb	0	; () banked
  7142  0001D4  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7143  0001D6  B4D8               	btfsc	status,2,c
  7144  0001D8  D214               	goto	i2l304
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;my_i2c.c: 168: ic_ptr->event_count++;
  7148  0001DA  0100               	movlb	0	; () banked
  7149  0001DC  EE20 F020          	lfsr	2,32
  7150  0001E0  0100               	movlb	0	; () banked
  7151  0001E2  51D3               	movf	_ic_ptr& (0+255),w,b
  7152  0001E4  26D9               	addwf	fsr2l,f,c
  7153  0001E6  0100               	movlb	0	; () banked
  7154  0001E8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7155  0001EA  22DA               	addwfc	fsr2h,f,c
  7156  0001EC  2ADF               	incf	indf2,f,c
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;my_i2c.c: 169: if (SSPSTATbits.D_A == 0) {
  7160  0001EE  BAC7               	btfsc	4039,5,c	;volatile
  7161  0001F0  D02C               	goto	i2l2784
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;my_i2c.c: 170: if (SSPSTATbits.R_W == 0) {
  7165  0001F2  B4C7               	btfsc	4039,2,c	;volatile
  7166  0001F4  D00B               	goto	i2l2774
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;my_i2c.c: 171: ic_ptr->status = 0x7;
  7170  0001F6  0100               	movlb	0	; () banked
  7171  0001F8  EE20 F021          	lfsr	2,33
  7172  0001FC  0100               	movlb	0	; () banked
  7173  0001FE  51D3               	movf	_ic_ptr& (0+255),w,b
  7174  000200  26D9               	addwf	fsr2l,f,c
  7175  000202  0100               	movlb	0	; () banked
  7176  000204  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7177  000206  22DA               	addwfc	fsr2h,f,c
  7178  000208  0E07               	movlw	7
  7179  00020A  D082               	goto	L13
  7180  00020C                     i2l2774:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;my_i2c.c: 173: blip3();
  7184  00020C  EC05  F00F         	call	i2_blip3	;wreg free
  7185                           
  7186                           ;my_i2c.c: 174: ic_ptr->status = 0x8;
  7187  000210  0100               	movlb	0	; () banked
  7188  000212  EE20 F021          	lfsr	2,33
  7189  000216  0100               	movlb	0	; () banked
  7190  000218  51D3               	movf	_ic_ptr& (0+255),w,b
  7191  00021A  26D9               	addwf	fsr2l,f,c
  7192  00021C  0100               	movlb	0	; () banked
  7193  00021E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7194  000220  22DA               	addwfc	fsr2h,f,c
  7195  000222  0E08               	movlw	8
  7196  000224  6EDF               	movwf	indf2,c
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;my_i2c.c: 175: msg_to_send = 1;
  7200  000226  0E01               	movlw	1
  7201  000228  0100               	movlb	0	; () banked
  7202  00022A  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;my_i2c.c: 177: data_read = 0;
  7206  00022C  0E00               	movlw	0
  7207  00022E  0100               	movlb	0	; () banked
  7208  000230  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;my_i2c.c: 178: ic_ptr->outbufind = 0;
  7212  000232  0100               	movlb	0	; () banked
  7213  000234  EE20 F01E          	lfsr	2,30
  7214  000238  0100               	movlb	0	; () banked
  7215  00023A  51D3               	movf	_ic_ptr& (0+255),w,b
  7216  00023C  26D9               	addwf	fsr2l,f,c
  7217  00023E  0100               	movlb	0	; () banked
  7218  000240  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7219  000242  22DA               	addwfc	fsr2h,f,c
  7220  000244  0E00               	movlw	0
  7221  000246  6EDF               	movwf	indf2,c
  7222                           
  7223                           ;my_i2c.c: 179: goto l;
  7224  000248  D020               	goto	i2l2786
  7225  00024A                     i2l2784:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;my_i2c.c: 182: ic_ptr->error_count++;
  7229  00024A  0100               	movlb	0	; () banked
  7230  00024C  EE20 F023          	lfsr	2,35
  7231  000250  0100               	movlb	0	; () banked
  7232  000252  51D3               	movf	_ic_ptr& (0+255),w,b
  7233  000254  26D9               	addwf	fsr2l,f,c
  7234  000256  0100               	movlb	0	; () banked
  7235  000258  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7236  00025A  22DA               	addwfc	fsr2h,f,c
  7237  00025C  2ADF               	incf	indf2,f,c
  7238                           
  7239                           ;my_i2c.c: 183: ic_ptr->status = 0x5;
  7240  00025E  0100               	movlb	0	; () banked
  7241  000260  EE20 F021          	lfsr	2,33
  7242  000264  0100               	movlb	0	; () banked
  7243  000266  51D3               	movf	_ic_ptr& (0+255),w,b
  7244  000268  26D9               	addwf	fsr2l,f,c
  7245  00026A  0100               	movlb	0	; () banked
  7246  00026C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7247  00026E  22DA               	addwfc	fsr2h,f,c
  7248  000270  0E05               	movlw	5
  7249  000272  6EDF               	movwf	indf2,c
  7250                           
  7251                           ;my_i2c.c: 184: ic_ptr->error_code = 0x6;
  7252  000274  0100               	movlb	0	; () banked
  7253  000276  EE20 F022          	lfsr	2,34
  7254  00027A  0100               	movlb	0	; () banked
  7255  00027C  51D3               	movf	_ic_ptr& (0+255),w,b
  7256  00027E  26D9               	addwf	fsr2l,f,c
  7257  000280  0100               	movlb	0	; () banked
  7258  000282  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7259  000284  22DA               	addwfc	fsr2h,f,c
  7260  000286  0E06               	movlw	6
  7261  000288  D043               	goto	L13
  7262  00028A                     i2l2786:
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;my_i2c.c: 191: {
  7266                           ;my_i2c.c: 192: blip4();
  7267  00028A  EC15  F00F         	call	_blip4	;wreg free
  7268                           
  7269                           ;my_i2c.c: 194: if (ic_ptr->outbufind < 14) {
  7270  00028E  0100               	movlb	0	; () banked
  7271  000290  EE20 F01E          	lfsr	2,30
  7272  000294  0100               	movlb	0	; () banked
  7273  000296  51D3               	movf	_ic_ptr& (0+255),w,b
  7274  000298  26D9               	addwf	fsr2l,f,c
  7275  00029A  0100               	movlb	0	; () banked
  7276  00029C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7277  00029E  22DA               	addwfc	fsr2h,f,c
  7278  0002A0  50DF               	movf	indf2,w,c
  7279  0002A2  0100               	movlb	0	; () banked
  7280  0002A4  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7281  0002A6  0E0E               	movlw	14
  7282  0002A8  0100               	movlb	0	; () banked
  7283  0002AA  5D85               	subwf	??_i2c_int_handler& (0+255),w,b
  7284  0002AC  B0D8               	btfsc	status,0,c
  7285  0002AE  D02D               	goto	i2l2798
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;my_i2c.c: 195: blip4();
  7289  0002B0  EC15  F00F         	call	_blip4	;wreg free
  7290                           
  7291                           ;my_i2c.c: 196: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7292  0002B4  0100               	movlb	0	; () banked
  7293  0002B6  EE20 F01E          	lfsr	2,30
  7294  0002BA  0100               	movlb	0	; () banked
  7295  0002BC  51D3               	movf	_ic_ptr& (0+255),w,b
  7296  0002BE  26D9               	addwf	fsr2l,f,c
  7297  0002C0  0100               	movlb	0	; () banked
  7298  0002C2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7299  0002C4  22DA               	addwfc	fsr2h,f,c
  7300  0002C6  50DF               	movf	indf2,w,c
  7301  0002C8  0100               	movlb	0	; () banked
  7302  0002CA  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7303  0002CC  0100               	movlb	0	; () banked
  7304  0002CE  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7305  0002D0  0D01               	mullw	1
  7306  0002D2  0E10               	movlw	16
  7307  0002D4  26F3               	addwf	prodl,f,c
  7308  0002D6  0E00               	movlw	0
  7309  0002D8  22F4               	addwfc	prodh,f,c
  7310  0002DA  50F3               	movf	prodl,w,c
  7311  0002DC  0100               	movlb	0	; () banked
  7312  0002DE  25D3               	addwf	_ic_ptr& (0+255),w,b
  7313  0002E0  6ED9               	movwf	fsr2l,c
  7314  0002E2  50F4               	movf	prodh,w,c
  7315  0002E4  0100               	movlb	0	; () banked
  7316  0002E6  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7317  0002E8  6EDA               	movwf	fsr2h,c
  7318  0002EA  50DF               	movf	indf2,w,c
  7319  0002EC  6EC9               	movwf	4041,c	;volatile
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;my_i2c.c: 197: ic_ptr->outbufind++;
  7323  0002EE  0100               	movlb	0	; () banked
  7324  0002F0  EE20 F01E          	lfsr	2,30
  7325  0002F4  0100               	movlb	0	; () banked
  7326  0002F6  51D3               	movf	_ic_ptr& (0+255),w,b
  7327  0002F8  26D9               	addwf	fsr2l,f,c
  7328  0002FA  0100               	movlb	0	; () banked
  7329  0002FC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7330  0002FE  22DA               	addwfc	fsr2h,f,c
  7331  000300  2ADF               	incf	indf2,f,c
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;my_i2c.c: 198: data_written = 1;
  7335  000302  0E01               	movlw	1
  7336  000304  0100               	movlb	0	; () banked
  7337  000306  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  7338                           
  7339                           ;my_i2c.c: 199: } else {
  7340  000308  D17C               	goto	i2l304
  7341  00030A                     i2l2798:
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;my_i2c.c: 200: blip3();
  7345  00030A  EC05  F00F         	call	i2_blip3	;wreg free
  7346  00030E  D158               	goto	L15
  7347  000310                     L13:
  7348  000310  6EDF               	movwf	indf2,c
  7349  000312  D177               	goto	i2l304
  7350  000314                     i2l2802:
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;my_i2c.c: 207: {
  7354                           ;my_i2c.c: 208: blip2();
  7355  000314  EC09  F00F         	call	i2_blip2	;wreg free
  7356                           
  7357                           ;my_i2c.c: 210: if (SSPSTATbits.P == 1) {
  7358  000318  A8C7               	btfss	4039,4,c	;volatile
  7359  00031A  D05A               	goto	i2l2824
  7360                           
  7361                           ;my_i2c.c: 213: ic_ptr->event_count++;
  7362  00031C  0100               	movlb	0	; () banked
  7363  00031E  EE20 F020          	lfsr	2,32
  7364  000322  0100               	movlb	0	; () banked
  7365  000324  51D3               	movf	_ic_ptr& (0+255),w,b
  7366  000326  26D9               	addwf	fsr2l,f,c
  7367  000328  0100               	movlb	0	; () banked
  7368  00032A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7369  00032C  22DA               	addwfc	fsr2h,f,c
  7370  00032E  2ADF               	incf	indf2,f,c
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;my_i2c.c: 214: if (data_read) {
  7374  000330  0100               	movlb	0	; () banked
  7375  000332  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7376  000334  B4D8               	btfsc	status,2,c
  7377  000336  D048               	goto	i2l2820
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;my_i2c.c: 215: if (SSPSTATbits.D_A == 1) {
  7381  000338  AAC7               	btfss	4039,5,c	;volatile
  7382  00033A  D025               	goto	i2l2818
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;my_i2c.c: 216: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7386  00033C  0100               	movlb	0	; () banked
  7387  00033E  EE20 F00E          	lfsr	2,14
  7388  000342  0100               	movlb	0	; () banked
  7389  000344  51D3               	movf	_ic_ptr& (0+255),w,b
  7390  000346  26D9               	addwf	fsr2l,f,c
  7391  000348  0100               	movlb	0	; () banked
  7392  00034A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7393  00034C  22DA               	addwfc	fsr2h,f,c
  7394  00034E  50DF               	movf	indf2,w,c
  7395  000350  0100               	movlb	0	; () banked
  7396  000352  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7397  000354  0100               	movlb	0	; () banked
  7398  000356  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7399  000358  0D01               	mullw	1
  7400  00035A  50F3               	movf	prodl,w,c
  7401  00035C  0100               	movlb	0	; () banked
  7402  00035E  25D3               	addwf	_ic_ptr& (0+255),w,b
  7403  000360  6ED9               	movwf	fsr2l,c
  7404  000362  50F4               	movf	prodh,w,c
  7405  000364  0100               	movlb	0	; () banked
  7406  000366  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7407  000368  6EDA               	movwf	fsr2h,c
  7408  00036A  0100               	movlb	0	; () banked
  7409  00036C  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;my_i2c.c: 217: ic_ptr->buflen++;
  7413  000370  0100               	movlb	0	; () banked
  7414  000372  EE20 F00E          	lfsr	2,14
  7415  000376  0100               	movlb	0	; () banked
  7416  000378  51D3               	movf	_ic_ptr& (0+255),w,b
  7417  00037A  26D9               	addwf	fsr2l,f,c
  7418  00037C  0100               	movlb	0	; () banked
  7419  00037E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7420  000380  22DA               	addwfc	fsr2h,f,c
  7421  000382  2ADF               	incf	indf2,f,c
  7422  000384  D021               	goto	i2l2820
  7423  000386                     i2l2818:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;my_i2c.c: 220: ic_ptr->error_count++;
  7427  000386  0100               	movlb	0	; () banked
  7428  000388  EE20 F023          	lfsr	2,35
  7429  00038C  0100               	movlb	0	; () banked
  7430  00038E  51D3               	movf	_ic_ptr& (0+255),w,b
  7431  000390  26D9               	addwf	fsr2l,f,c
  7432  000392  0100               	movlb	0	; () banked
  7433  000394  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7434  000396  22DA               	addwfc	fsr2h,f,c
  7435  000398  2ADF               	incf	indf2,f,c
  7436                           
  7437                           ;my_i2c.c: 221: ic_ptr->error_code = 0x6;
  7438  00039A  0100               	movlb	0	; () banked
  7439  00039C  EE20 F022          	lfsr	2,34
  7440  0003A0  0100               	movlb	0	; () banked
  7441  0003A2  51D3               	movf	_ic_ptr& (0+255),w,b
  7442  0003A4  26D9               	addwf	fsr2l,f,c
  7443  0003A6  0100               	movlb	0	; () banked
  7444  0003A8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7445  0003AA  22DA               	addwfc	fsr2h,f,c
  7446  0003AC  0E06               	movlw	6
  7447  0003AE  6EDF               	movwf	indf2,c
  7448                           
  7449                           ;my_i2c.c: 222: ic_ptr->status = 0x5;
  7450  0003B0  0100               	movlb	0	; () banked
  7451  0003B2  EE20 F021          	lfsr	2,33
  7452  0003B6  0100               	movlb	0	; () banked
  7453  0003B8  51D3               	movf	_ic_ptr& (0+255),w,b
  7454  0003BA  26D9               	addwf	fsr2l,f,c
  7455  0003BC  0100               	movlb	0	; () banked
  7456  0003BE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7457  0003C0  22DA               	addwfc	fsr2h,f,c
  7458  0003C2  0E05               	movlw	5
  7459  0003C4  6EDF               	movwf	indf2,c
  7460  0003C6  D0FC               	goto	L15
  7461  0003C8                     i2l2820:
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;my_i2c.c: 225: msg_ready = 1;
  7465  0003C8  0E01               	movlw	1
  7466  0003CA  0100               	movlb	0	; () banked
  7467  0003CC  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7468                           
  7469                           ; BSR set to: 0
  7470  0003CE  D0F8               	goto	L15
  7471  0003D0                     i2l2824:
  7472                           
  7473                           ;my_i2c.c: 229: else if (data_read)
  7474  0003D0  0100               	movlb	0	; () banked
  7475  0003D2  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7476  0003D4  B4D8               	btfsc	status,2,c
  7477  0003D6  D115               	goto	i2l304
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;my_i2c.c: 230: {
  7481                           ;my_i2c.c: 232: ic_ptr->event_count++;
  7482  0003D8  0100               	movlb	0	; () banked
  7483  0003DA  EE20 F020          	lfsr	2,32
  7484  0003DE  0100               	movlb	0	; () banked
  7485  0003E0  51D3               	movf	_ic_ptr& (0+255),w,b
  7486  0003E2  26D9               	addwf	fsr2l,f,c
  7487  0003E4  0100               	movlb	0	; () banked
  7488  0003E6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7489  0003E8  22DA               	addwfc	fsr2h,f,c
  7490  0003EA  2ADF               	incf	indf2,f,c
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;my_i2c.c: 233: if (SSP1STATbits.D_A == 1) {
  7494  0003EC  AAC7               	btfss	4039,5,c	;volatile
  7495  0003EE  D025               	goto	i2l333
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;my_i2c.c: 234: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7499  0003F0  0100               	movlb	0	; () banked
  7500  0003F2  EE20 F00E          	lfsr	2,14
  7501  0003F6  0100               	movlb	0	; () banked
  7502  0003F8  51D3               	movf	_ic_ptr& (0+255),w,b
  7503  0003FA  26D9               	addwf	fsr2l,f,c
  7504  0003FC  0100               	movlb	0	; () banked
  7505  0003FE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7506  000400  22DA               	addwfc	fsr2h,f,c
  7507  000402  50DF               	movf	indf2,w,c
  7508  000404  0100               	movlb	0	; () banked
  7509  000406  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7510  000408  0100               	movlb	0	; () banked
  7511  00040A  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7512  00040C  0D01               	mullw	1
  7513  00040E  50F3               	movf	prodl,w,c
  7514  000410  0100               	movlb	0	; () banked
  7515  000412  25D3               	addwf	_ic_ptr& (0+255),w,b
  7516  000414  6ED9               	movwf	fsr2l,c
  7517  000416  50F4               	movf	prodh,w,c
  7518  000418  0100               	movlb	0	; () banked
  7519  00041A  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7520  00041C  6EDA               	movwf	fsr2h,c
  7521  00041E  0100               	movlb	0	; () banked
  7522  000420  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;my_i2c.c: 235: ic_ptr->buflen++;
  7526  000424  0100               	movlb	0	; () banked
  7527  000426  EE20 F00E          	lfsr	2,14
  7528  00042A  0100               	movlb	0	; () banked
  7529  00042C  51D3               	movf	_ic_ptr& (0+255),w,b
  7530  00042E  26D9               	addwf	fsr2l,f,c
  7531  000430  0100               	movlb	0	; () banked
  7532  000432  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7533  000434  22DA               	addwfc	fsr2h,f,c
  7534  000436  2ADF               	incf	indf2,f,c
  7535                           
  7536                           ;my_i2c.c: 236: }
  7537  000438  D0E4               	goto	i2l304
  7538  00043A                     i2l333:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;my_i2c.c: 237: else
  7542                           ;my_i2c.c: 238: {
  7543                           ;my_i2c.c: 239: if (SSPSTATbits.R_W == 1)
  7544  00043A  A4C7               	btfss	4039,2,c	;volatile
  7545  00043C  D6B4               	goto	i2l2762
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;my_i2c.c: 240: {
  7549                           ;my_i2c.c: 241: blip();
  7550  00043E  EC11  F00F         	call	i2_blip	;wreg free
  7551                           
  7552                           ;my_i2c.c: 242: ic_ptr->status = 0x8;
  7553  000442  0100               	movlb	0	; () banked
  7554  000444  EE20 F021          	lfsr	2,33
  7555  000448  0100               	movlb	0	; () banked
  7556  00044A  51D3               	movf	_ic_ptr& (0+255),w,b
  7557  00044C  26D9               	addwf	fsr2l,f,c
  7558  00044E  0100               	movlb	0	; () banked
  7559  000450  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7560  000452  22DA               	addwfc	fsr2h,f,c
  7561  000454  0E08               	movlw	8
  7562  000456  6EDF               	movwf	indf2,c
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;my_i2c.c: 249: {
  7566                           ;my_i2c.c: 251: ic_ptr->outbuffer[0] = ic_ptr->buffer[0];
  7567                           
  7568                           ; BSR set to: 0
  7569                           
  7570                           ;my_i2c.c: 245: {
  7571                           ;my_i2c.c: 246: int l;
  7572                           ;my_i2c.c: 248: default:
  7573                           
  7574                           ;my_i2c.c: 244: switch( ic_ptr->buffer[0] )
  7575  000458  C0D3  FFD9         	movff	_ic_ptr,fsr2l
  7576  00045C  C0D4  FFDA         	movff	_ic_ptr+1,fsr2h
  7577  000460  0100               	movlb	0	; () banked
  7578  000462  EE10 F010          	lfsr	1,16
  7579  000466  0100               	movlb	0	; () banked
  7580  000468  51D3               	movf	_ic_ptr& (0+255),w,b
  7581  00046A  26E1               	addwf	fsr1l,f,c
  7582  00046C  0100               	movlb	0	; () banked
  7583  00046E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7584  000470  22E2               	addwfc	fsr1h,f,c
  7585  000472  CFDF FFE7          	movff	indf2,indf1
  7586                           
  7587                           ;my_i2c.c: 252: ic_ptr->outbuffer[1] = ic_ptr->buffer[1];
  7588  000476  0100               	movlb	0	; () banked
  7589  000478  EE20 F001          	lfsr	2,1
  7590  00047C  0100               	movlb	0	; () banked
  7591  00047E  51D3               	movf	_ic_ptr& (0+255),w,b
  7592  000480  26D9               	addwf	fsr2l,f,c
  7593  000482  0100               	movlb	0	; () banked
  7594  000484  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7595  000486  22DA               	addwfc	fsr2h,f,c
  7596  000488  0100               	movlb	0	; () banked
  7597  00048A  EE10 F011          	lfsr	1,17
  7598  00048E  0100               	movlb	0	; () banked
  7599  000490  51D3               	movf	_ic_ptr& (0+255),w,b
  7600  000492  26E1               	addwf	fsr1l,f,c
  7601  000494  0100               	movlb	0	; () banked
  7602  000496  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7603  000498  22E2               	addwfc	fsr1h,f,c
  7604  00049A  CFDF FFE7          	movff	indf2,indf1
  7605                           
  7606                           ;my_i2c.c: 253: ic_ptr->outbuffer[2] = ic_ptr->buffer[2];
  7607  00049E  0100               	movlb	0	; () banked
  7608  0004A0  EE20 F002          	lfsr	2,2
  7609  0004A4  0100               	movlb	0	; () banked
  7610  0004A6  51D3               	movf	_ic_ptr& (0+255),w,b
  7611  0004A8  26D9               	addwf	fsr2l,f,c
  7612  0004AA  0100               	movlb	0	; () banked
  7613  0004AC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7614  0004AE  22DA               	addwfc	fsr2h,f,c
  7615  0004B0  0100               	movlb	0	; () banked
  7616  0004B2  EE10 F012          	lfsr	1,18
  7617  0004B6  0100               	movlb	0	; () banked
  7618  0004B8  51D3               	movf	_ic_ptr& (0+255),w,b
  7619  0004BA  26E1               	addwf	fsr1l,f,c
  7620  0004BC  0100               	movlb	0	; () banked
  7621  0004BE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7622  0004C0  22E2               	addwfc	fsr1h,f,c
  7623  0004C2  CFDF FFE7          	movff	indf2,indf1
  7624                           
  7625                           ;my_i2c.c: 254: ic_ptr->outbuffer[3] = ic_ptr->buffer[3];
  7626  0004C6  0100               	movlb	0	; () banked
  7627  0004C8  EE20 F003          	lfsr	2,3
  7628  0004CC  0100               	movlb	0	; () banked
  7629  0004CE  51D3               	movf	_ic_ptr& (0+255),w,b
  7630  0004D0  26D9               	addwf	fsr2l,f,c
  7631  0004D2  0100               	movlb	0	; () banked
  7632  0004D4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7633  0004D6  22DA               	addwfc	fsr2h,f,c
  7634  0004D8  0100               	movlb	0	; () banked
  7635  0004DA  EE10 F013          	lfsr	1,19
  7636  0004DE  0100               	movlb	0	; () banked
  7637  0004E0  51D3               	movf	_ic_ptr& (0+255),w,b
  7638  0004E2  26E1               	addwf	fsr1l,f,c
  7639  0004E4  0100               	movlb	0	; () banked
  7640  0004E6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7641  0004E8  22E2               	addwfc	fsr1h,f,c
  7642  0004EA  CFDF FFE7          	movff	indf2,indf1
  7643                           
  7644                           ;my_i2c.c: 255: ic_ptr->outbuffer[4] = ic_ptr->buffer[4];
  7645  0004EE  0100               	movlb	0	; () banked
  7646  0004F0  EE20 F004          	lfsr	2,4
  7647  0004F4  0100               	movlb	0	; () banked
  7648  0004F6  51D3               	movf	_ic_ptr& (0+255),w,b
  7649  0004F8  26D9               	addwf	fsr2l,f,c
  7650  0004FA  0100               	movlb	0	; () banked
  7651  0004FC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7652  0004FE  22DA               	addwfc	fsr2h,f,c
  7653  000500  0100               	movlb	0	; () banked
  7654  000502  EE10 F014          	lfsr	1,20
  7655  000506  0100               	movlb	0	; () banked
  7656  000508  51D3               	movf	_ic_ptr& (0+255),w,b
  7657  00050A  26E1               	addwf	fsr1l,f,c
  7658  00050C  0100               	movlb	0	; () banked
  7659  00050E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7660  000510  22E2               	addwfc	fsr1h,f,c
  7661  000512  CFDF FFE7          	movff	indf2,indf1
  7662                           
  7663                           ;my_i2c.c: 256: ic_ptr->outbuffer[5] = ic_ptr->buffer[5];
  7664  000516  0100               	movlb	0	; () banked
  7665  000518  EE20 F005          	lfsr	2,5
  7666  00051C  0100               	movlb	0	; () banked
  7667  00051E  51D3               	movf	_ic_ptr& (0+255),w,b
  7668  000520  26D9               	addwf	fsr2l,f,c
  7669  000522  0100               	movlb	0	; () banked
  7670  000524  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7671  000526  22DA               	addwfc	fsr2h,f,c
  7672  000528  0100               	movlb	0	; () banked
  7673  00052A  EE10 F015          	lfsr	1,21
  7674  00052E  0100               	movlb	0	; () banked
  7675  000530  51D3               	movf	_ic_ptr& (0+255),w,b
  7676  000532  26E1               	addwf	fsr1l,f,c
  7677  000534  0100               	movlb	0	; () banked
  7678  000536  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7679  000538  22E2               	addwfc	fsr1h,f,c
  7680  00053A  CFDF FFE7          	movff	indf2,indf1
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;my_i2c.c: 261: ic_ptr->outbuflen = 6;
  7684                           
  7685                           ; BSR set to: 0
  7686                           
  7687                           ; BSR set to: 0
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;my_i2c.c: 258: }
  7691                           ;my_i2c.c: 259: }
  7692                           
  7693                           ;my_i2c.c: 257: break;
  7694  00053E  0100               	movlb	0	; () banked
  7695  000540  EE20 F01F          	lfsr	2,31
  7696  000544  0100               	movlb	0	; () banked
  7697  000546  51D3               	movf	_ic_ptr& (0+255),w,b
  7698  000548  26D9               	addwf	fsr2l,f,c
  7699  00054A  0100               	movlb	0	; () banked
  7700  00054C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7701  00054E  22DA               	addwfc	fsr2h,f,c
  7702  000550  0E06               	movlw	6
  7703  000552  6EDF               	movwf	indf2,c
  7704                           
  7705                           ;my_i2c.c: 262: ic_ptr->outbufind = 0;
  7706  000554  0100               	movlb	0	; () banked
  7707  000556  EE20 F01E          	lfsr	2,30
  7708  00055A  0100               	movlb	0	; () banked
  7709  00055C  51D3               	movf	_ic_ptr& (0+255),w,b
  7710  00055E  26D9               	addwf	fsr2l,f,c
  7711  000560  0100               	movlb	0	; () banked
  7712  000562  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7713  000564  22DA               	addwfc	fsr2h,f,c
  7714  000566  0E00               	movlw	0
  7715  000568  6EDF               	movwf	indf2,c
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;my_i2c.c: 263: msg_ready = 1;
  7719  00056A  0E01               	movlw	1
  7720  00056C  0100               	movlb	0	; () banked
  7721  00056E  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;my_i2c.c: 264: msg_to_send = 1;
  7725  000570  0E01               	movlw	1
  7726  000572  0100               	movlb	0	; () banked
  7727  000574  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;my_i2c.c: 266: data_read = 0;
  7731  000576  0E00               	movlw	0
  7732  000578  0100               	movlb	0	; () banked
  7733  00057A  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;my_i2c.c: 267: ic_ptr->outbufind = 0;
  7737  00057C  0100               	movlb	0	; () banked
  7738  00057E  EE20 F01E          	lfsr	2,30
  7739  000582  0100               	movlb	0	; () banked
  7740  000584  51D3               	movf	_ic_ptr& (0+255),w,b
  7741  000586  26D9               	addwf	fsr2l,f,c
  7742  000588  0100               	movlb	0	; () banked
  7743  00058A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7744  00058C  22DA               	addwfc	fsr2h,f,c
  7745  00058E  0E00               	movlw	0
  7746  000590  6EDF               	movwf	indf2,c
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;my_i2c.c: 268: SSPBUF = ic_ptr->outbuffer[0];
  7750  000592  0100               	movlb	0	; () banked
  7751  000594  EE20 F010          	lfsr	2,16
  7752  000598  0100               	movlb	0	; () banked
  7753  00059A  51D3               	movf	_ic_ptr& (0+255),w,b
  7754  00059C  26D9               	addwf	fsr2l,f,c
  7755  00059E  0100               	movlb	0	; () banked
  7756  0005A0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7757  0005A2  22DA               	addwfc	fsr2h,f,c
  7758  0005A4  50DF               	movf	indf2,w,c
  7759  0005A6  6EC9               	movwf	4041,c	;volatile
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;my_i2c.c: 269: ic_ptr->outbufind++;
  7763  0005A8  0100               	movlb	0	; () banked
  7764  0005AA  EE20 F01E          	lfsr	2,30
  7765  0005AE  0100               	movlb	0	; () banked
  7766  0005B0  51D3               	movf	_ic_ptr& (0+255),w,b
  7767  0005B2  26D9               	addwf	fsr2l,f,c
  7768  0005B4  0100               	movlb	0	; () banked
  7769  0005B6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7770  0005B8  22DA               	addwfc	fsr2h,f,c
  7771  0005BA  2ADF               	incf	indf2,f,c
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;my_i2c.c: 270: SSPCON1bits.CKP = 1;
  7775  0005BC  88C6               	bsf	4038,4,c	;volatile
  7776                           
  7777                           ;my_i2c.c: 271: }
  7778  0005BE  D021               	goto	i2l304
  7779  0005C0                     L15:
  7780                           
  7781                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  7782  0005C0  0100               	movlb	0	; () banked
  7783  0005C2  EE20 F021          	lfsr	2,33
  7784  0005C6  0100               	movlb	0	; () banked
  7785  0005C8  51D3               	movf	_ic_ptr& (0+255),w,b
  7786  0005CA  26D9               	addwf	fsr2l,f,c
  7787  0005CC  0100               	movlb	0	; () banked
  7788  0005CE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7789  0005D0  22DA               	addwfc	fsr2h,f,c
  7790  0005D2  0E05               	movlw	5
  7791  0005D4  D69D               	goto	L13
  7792  0005D6                     i2l2862:
  7793                           
  7794                           ; BSR set to: 0
  7795  0005D6  0100               	movlb	0	; () banked
  7796  0005D8  EE20 F021          	lfsr	2,33
  7797  0005DC  0100               	movlb	0	; () banked
  7798  0005DE  51D3               	movf	_ic_ptr& (0+255),w,b
  7799  0005E0  26D9               	addwf	fsr2l,f,c
  7800  0005E2  0100               	movlb	0	; () banked
  7801  0005E4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7802  0005E6  22DA               	addwfc	fsr2h,f,c
  7803  0005E8  50DF               	movf	indf2,w,c
  7804                           
  7805                           ; Switch size 1, requested type "space"
  7806                           ; Number of cases is 4, Range of values is 5 to 8
  7807                           ; switch strategies available:
  7808                           ; Name         Instructions Cycles
  7809                           ; simple_byte           13     7 (average)
  7810                           ;	Chosen strategy is simple_byte
  7811  0005EA  0A05               	xorlw	5	; case 5
  7812  0005EC  B4D8               	btfsc	status,2,c
  7813  0005EE  D5AC               	goto	i2l306
  7814  0005F0  0A03               	xorlw	3	; case 6
  7815  0005F2  B4D8               	btfsc	status,2,c
  7816  0005F4  D5C2               	goto	i2l310
  7817  0005F6  0A01               	xorlw	1	; case 7
  7818  0005F8  B4D8               	btfsc	status,2,c
  7819  0005FA  D68C               	goto	i2l2802
  7820  0005FC  0A0F               	xorlw	15	; case 8
  7821  0005FE  B4D8               	btfsc	status,2,c
  7822  000600  D644               	goto	i2l2786
  7823  000602                     i2l304:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;my_i2c.c: 283: }
  7827                           ;my_i2c.c: 286: if (data_read || data_written) {
  7828  000602  0100               	movlb	0	; () banked
  7829  000604  678E               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7830  000606  D004               	goto	i2l342
  7831                           
  7832                           ; BSR set to: 0
  7833  000608  0100               	movlb	0	; () banked
  7834  00060A  5189               	movf	i2c_int_handler@data_written& (0+255),w,b
  7835  00060C  B4D8               	btfsc	status,2,c
  7836  00060E  D002               	goto	i2l2868
  7837  000610                     i2l342:
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;my_i2c.c: 288: if (SSPCON1bits.CKP == 0) {
  7841  000610  A8C6               	btfss	4038,4,c	;volatile
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;my_i2c.c: 289: SSPCON1bits.CKP = 1;
  7845  000612  88C6               	bsf	4038,4,c	;volatile
  7846  000614                     i2l2868:
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;my_i2c.c: 290: }
  7850                           ;my_i2c.c: 291: }
  7851                           ;my_i2c.c: 296: if ((ic_ptr->buflen > 14 - 2) && (!msg_ready)) {
  7852  000614  0100               	movlb	0	; () banked
  7853  000616  EE20 F00E          	lfsr	2,14
  7854  00061A  0100               	movlb	0	; () banked
  7855  00061C  51D3               	movf	_ic_ptr& (0+255),w,b
  7856  00061E  26D9               	addwf	fsr2l,f,c
  7857  000620  0100               	movlb	0	; () banked
  7858  000622  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7859  000624  22DA               	addwfc	fsr2h,f,c
  7860  000626  0E0C               	movlw	12
  7861  000628  64DF               	cpfsgt	indf2,c
  7862  00062A  D023               	goto	i2l2874
  7863                           
  7864                           ; BSR set to: 0
  7865  00062C  0100               	movlb	0	; () banked
  7866  00062E  678D               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7867  000630  D020               	goto	i2l2874
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;my_i2c.c: 297: ic_ptr->status = 0x5;
  7871  000632  0100               	movlb	0	; () banked
  7872  000634  EE20 F021          	lfsr	2,33
  7873  000638  0100               	movlb	0	; () banked
  7874  00063A  51D3               	movf	_ic_ptr& (0+255),w,b
  7875  00063C  26D9               	addwf	fsr2l,f,c
  7876  00063E  0100               	movlb	0	; () banked
  7877  000640  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7878  000642  22DA               	addwfc	fsr2h,f,c
  7879  000644  0E05               	movlw	5
  7880  000646  6EDF               	movwf	indf2,c
  7881                           
  7882                           ;my_i2c.c: 298: ic_ptr->error_count++;
  7883  000648  0100               	movlb	0	; () banked
  7884  00064A  EE20 F023          	lfsr	2,35
  7885  00064E  0100               	movlb	0	; () banked
  7886  000650  51D3               	movf	_ic_ptr& (0+255),w,b
  7887  000652  26D9               	addwf	fsr2l,f,c
  7888  000654  0100               	movlb	0	; () banked
  7889  000656  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7890  000658  22DA               	addwfc	fsr2h,f,c
  7891  00065A  2ADF               	incf	indf2,f,c
  7892                           
  7893                           ;my_i2c.c: 299: ic_ptr->error_code = 0x7;
  7894  00065C  0100               	movlb	0	; () banked
  7895  00065E  EE20 F022          	lfsr	2,34
  7896  000662  0100               	movlb	0	; () banked
  7897  000664  51D3               	movf	_ic_ptr& (0+255),w,b
  7898  000666  26D9               	addwf	fsr2l,f,c
  7899  000668  0100               	movlb	0	; () banked
  7900  00066A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7901  00066C  22DA               	addwfc	fsr2h,f,c
  7902  00066E  0E07               	movlw	7
  7903  000670  6EDF               	movwf	indf2,c
  7904  000672                     i2l2874:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;my_i2c.c: 300: }
  7908                           ;my_i2c.c: 302: if (msg_ready) {
  7909  000672  0100               	movlb	0	; () banked
  7910  000674  518D               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7911  000676  B4D8               	btfsc	status,2,c
  7912  000678  D03F               	goto	i2l2882
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;my_i2c.c: 303: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7916  00067A  0100               	movlb	0	; () banked
  7917  00067C  EE20 F020          	lfsr	2,32
  7918  000680  0100               	movlb	0	; () banked
  7919  000682  51D3               	movf	_ic_ptr& (0+255),w,b
  7920  000684  26D9               	addwf	fsr2l,f,c
  7921  000686  0100               	movlb	0	; () banked
  7922  000688  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7923  00068A  22DA               	addwfc	fsr2h,f,c
  7924  00068C  0100               	movlb	0	; () banked
  7925  00068E  EE10 F00E          	lfsr	1,14
  7926  000692  0100               	movlb	0	; () banked
  7927  000694  51D3               	movf	_ic_ptr& (0+255),w,b
  7928  000696  26E1               	addwf	fsr1l,f,c
  7929  000698  0100               	movlb	0	; () banked
  7930  00069A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7931  00069C  22E2               	addwfc	fsr1h,f,c
  7932  00069E  50E7               	movf	indf1,w,c
  7933  0006A0  0100               	movlb	0	; () banked
  7934  0006A2  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7935  0006A4  0100               	movlb	0	; () banked
  7936  0006A6  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7937  0006A8  0D01               	mullw	1
  7938  0006AA  50F3               	movf	prodl,w,c
  7939  0006AC  0100               	movlb	0	; () banked
  7940  0006AE  25D3               	addwf	_ic_ptr& (0+255),w,b
  7941  0006B0  6EE1               	movwf	fsr1l,c
  7942  0006B2  50F4               	movf	prodh,w,c
  7943  0006B4  0100               	movlb	0	; () banked
  7944  0006B6  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7945  0006B8  6EE2               	movwf	fsr1h,c
  7946  0006BA  CFDF FFE7          	movff	indf2,indf1
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;my_i2c.c: 304: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7950  0006BE  0E28               	movlw	40
  7951  0006C0  0100               	movlb	0	; () banked
  7952  0006C2  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7953  0006C4  0100               	movlb	0	; () banked
  7954  0006C6  C0D4  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7955  0006CA  0100               	movlb	0	; () banked
  7956  0006CC  C0D3  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7957  0006D0  0100               	movlb	0	; () banked
  7958  0006D2  EE20 F00E          	lfsr	2,14
  7959  0006D6  0100               	movlb	0	; () banked
  7960  0006D8  51D3               	movf	_ic_ptr& (0+255),w,b
  7961  0006DA  26D9               	addwf	fsr2l,f,c
  7962  0006DC  0100               	movlb	0	; () banked
  7963  0006DE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7964  0006E0  22DA               	addwfc	fsr2h,f,c
  7965  0006E2  50DF               	movf	indf2,w,c
  7966  0006E4  0100               	movlb	0	; () banked
  7967  0006E6  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7968  0006E8  0100               	movlb	0	; () banked
  7969  0006EA  2985               	incf	??_i2c_int_handler& (0+255),w,b
  7970  0006EC  EC33  F00E         	call	_ToMainHigh_sendmsg
  7971                           
  7972                           ;my_i2c.c: 305: ic_ptr->buflen = 0;
  7973  0006F0  0100               	movlb	0	; () banked
  7974  0006F2  EE20 F00E          	lfsr	2,14
  7975  0006F6  D041               	goto	L14
  7976  0006F8                     i2l2882:
  7977                           
  7978                           ; BSR set to: 0
  7979  0006F8  0100               	movlb	0	; () banked
  7980  0006FA  EE20 F023          	lfsr	2,35
  7981  0006FE  0100               	movlb	0	; () banked
  7982  000700  51D3               	movf	_ic_ptr& (0+255),w,b
  7983  000702  26D9               	addwf	fsr2l,f,c
  7984  000704  0100               	movlb	0	; () banked
  7985  000706  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7986  000708  22DA               	addwfc	fsr2h,f,c
  7987  00070A  50DF               	movf	indf2,w,c
  7988  00070C  B4D8               	btfsc	status,2,c
  7989  00070E  D03D               	goto	i2l2890
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;my_i2c.c: 307: error_buf[0] = ic_ptr->error_count;
  7993  000710  0100               	movlb	0	; () banked
  7994  000712  EE20 F023          	lfsr	2,35
  7995  000716  0100               	movlb	0	; () banked
  7996  000718  51D3               	movf	_ic_ptr& (0+255),w,b
  7997  00071A  26D9               	addwf	fsr2l,f,c
  7998  00071C  0100               	movlb	0	; () banked
  7999  00071E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8000  000720  22DA               	addwfc	fsr2h,f,c
  8001  000722  50DF               	movf	indf2,w,c
  8002  000724  0100               	movlb	0	; () banked
  8003  000726  6F86               	movwf	i2c_int_handler@error_buf& (0+255),b
  8004                           
  8005                           ;my_i2c.c: 308: error_buf[1] = ic_ptr->error_code;
  8006  000728  0100               	movlb	0	; () banked
  8007  00072A  EE20 F022          	lfsr	2,34
  8008  00072E  0100               	movlb	0	; () banked
  8009  000730  51D3               	movf	_ic_ptr& (0+255),w,b
  8010  000732  26D9               	addwf	fsr2l,f,c
  8011  000734  0100               	movlb	0	; () banked
  8012  000736  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8013  000738  22DA               	addwfc	fsr2h,f,c
  8014  00073A  50DF               	movf	indf2,w,c
  8015  00073C  0100               	movlb	0	; () banked
  8016  00073E  6F87               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8017                           
  8018                           ;my_i2c.c: 309: error_buf[2] = ic_ptr->event_count;
  8019  000740  0100               	movlb	0	; () banked
  8020  000742  EE20 F020          	lfsr	2,32
  8021  000746  0100               	movlb	0	; () banked
  8022  000748  51D3               	movf	_ic_ptr& (0+255),w,b
  8023  00074A  26D9               	addwf	fsr2l,f,c
  8024  00074C  0100               	movlb	0	; () banked
  8025  00074E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8026  000750  22DA               	addwfc	fsr2h,f,c
  8027  000752  50DF               	movf	indf2,w,c
  8028  000754  0100               	movlb	0	; () banked
  8029  000756  6F88               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;my_i2c.c: 310: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8033  000758  0E29               	movlw	41
  8034  00075A  0100               	movlb	0	; () banked
  8035  00075C  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8036  00075E  0100               	movlb	0	; () banked
  8037  000760  0E00               	movlw	high i2c_int_handler@error_buf
  8038  000762  0100               	movlb	0	; () banked
  8039  000764  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8040  000766  0100               	movlb	0	; () banked
  8041  000768  0E86               	movlw	low i2c_int_handler@error_buf
  8042  00076A  0100               	movlb	0	; () banked
  8043  00076C  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8044  00076E  0E03               	movlw	3
  8045  000770  EC33  F00E         	call	_ToMainHigh_sendmsg
  8046                           
  8047                           ;my_i2c.c: 311: ic_ptr->error_count = 0;
  8048  000774  0100               	movlb	0	; () banked
  8049  000776  EE20 F023          	lfsr	2,35
  8050  00077A                     L14:
  8051  00077A  0100               	movlb	0	; () banked
  8052  00077C  51D3               	movf	_ic_ptr& (0+255),w,b
  8053  00077E  26D9               	addwf	fsr2l,f,c
  8054  000780  0100               	movlb	0	; () banked
  8055  000782  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8056  000784  22DA               	addwfc	fsr2h,f,c
  8057  000786  0E00               	movlw	0
  8058  000788  6EDF               	movwf	indf2,c
  8059  00078A                     i2l2890:
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;my_i2c.c: 312: }
  8063                           ;my_i2c.c: 313: if (msg_to_send) {
  8064  00078A  0100               	movlb	0	; () banked
  8065  00078C  518C               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8066  00078E  B4D8               	btfsc	status,2,c
  8067  000790  D00F               	goto	i2l2896
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;my_i2c.c: 315: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8071  000792  0E2A               	movlw	42
  8072  000794  0100               	movlb	0	; () banked
  8073  000796  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8074  000798  0100               	movlb	0	; () banked
  8075  00079A  C0D4  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8076  00079E  0100               	movlb	0	; () banked
  8077  0007A0  C0D3  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8078  0007A4  0E00               	movlw	0
  8079  0007A6  EC33  F00E         	call	_ToMainHigh_sendmsg
  8080                           
  8081                           ;my_i2c.c: 316: msg_to_send = 0;
  8082  0007AA  0E00               	movlw	0
  8083  0007AC  0100               	movlb	0	; () banked
  8084  0007AE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8085  0007B0                     i2l2896:
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;my_i2c.c: 317: }
  8089                           ;my_i2c.c: 319: retrieve_sensor_values( sensor_bank_side , sensor_bank_front , sensor_ba
      +                          nk_ventril );
  8090  0007B0  0100               	movlb	0	; () banked
  8091  0007B2  0E00               	movlw	high i2c_int_handler@sensor_bank_side
  8092  0007B4  0100               	movlb	0	; () banked
  8093  0007B6  6F7E               	movwf	(retrieve_sensor_values@sensor_bank_side+1)& (0+255),b
  8094  0007B8  0100               	movlb	0	; () banked
  8095  0007BA  0EC5               	movlw	low i2c_int_handler@sensor_bank_side
  8096  0007BC  0100               	movlb	0	; () banked
  8097  0007BE  6F7D               	movwf	retrieve_sensor_values@sensor_bank_side& (0+255),b
  8098  0007C0  0E00               	movlw	high i2c_int_handler@sensor_bank_front
  8099  0007C2  0100               	movlb	0	; () banked
  8100  0007C4  6F80               	movwf	(retrieve_sensor_values@sensor_bank_front+1)& (0+255),b
  8101  0007C6  0E51               	movlw	low i2c_int_handler@sensor_bank_front
  8102  0007C8  0100               	movlb	0	; () banked
  8103  0007CA  6F7F               	movwf	retrieve_sensor_values@sensor_bank_front& (0+255),b
  8104  0007CC  0101               	movlb	1	; () banked
  8105  0007CE  0E01               	movlw	high i2c_int_handler@sensor_bank_ventril
  8106  0007D0  0100               	movlb	0	; () banked
  8107  0007D2  6F82               	movwf	(retrieve_sensor_values@sensor_bank_ventril+1)& (0+255),b
  8108  0007D4  0101               	movlb	1	; () banked
  8109  0007D6  0E92               	movlw	low i2c_int_handler@sensor_bank_ventril
  8110  0007D8  0100               	movlb	0	; () banked
  8111  0007DA  6F81               	movwf	retrieve_sensor_values@sensor_bank_ventril& (0+255),b
  8112  0007DC  EC62  F00D         	call	_retrieve_sensor_values	;wreg free
  8113  0007E0  0012               	return	
  8114  0007E2                     __end_of_i2c_int_handler:
  8115                           	opt stack 0
  8116                           pclatu	equ	0xFFB
  8117                           pclath	equ	0xFFA
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           postinc0	equ	0xFEE
  8126                           fsr0h	equ	0xFEA
  8127                           fsr0l	equ	0xFE9
  8128                           wreg	equ	0xFE8
  8129                           indf1	equ	0xFE7
  8130                           fsr1h	equ	0xFE2
  8131                           fsr1l	equ	0xFE1
  8132                           bsr	equ	0xFE0
  8133                           indf2	equ	0xFDF
  8134                           postinc2	equ	0xFDE
  8135                           postdec2	equ	0xFDD
  8136                           fsr2h	equ	0xFDA
  8137                           fsr2l	equ	0xFD9
  8138                           status	equ	0xFD8
  8139                           
  8140 ;; *************** function i2_blip3 *****************
  8141 ;; Defined at:
  8142 ;;		line 32 in file "../src/debug.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;		None
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;		None
  8147 ;; Return value:  Size  Location     Type
  8148 ;;		None               void
  8149 ;; Registers used:
  8150 ;;		None
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;Total ram usage:        0 bytes
  8161 ;; Hardware stack levels used:    1
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_i2c_int_handler
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text43
  8170  001E0A                     __ptext43:
  8171                           	opt stack 0
  8172  001E0A                     i2_blip3:
  8173                           	opt stack 18
  8174                           
  8175                           ;debug.c: 34: LATDbits.LD6 = 0;
  8176                           
  8177                           ;incstack = 0
  8178  001E0A  9C8C               	bcf	3980,6,c	;volatile
  8179                           
  8180                           ;debug.c: 35: LATDbits.LD6 = 1;
  8181  001E0C  8C8C               	bsf	3980,6,c	;volatile
  8182                           
  8183                           ;debug.c: 36: LATDbits.LD6 = 0;
  8184  001E0E  9C8C               	bcf	3980,6,c	;volatile
  8185  001E10  0012               	return	
  8186  001E12                     __end_ofi2_blip3:
  8187                           	opt stack 0
  8188                           pclatu	equ	0xFFB
  8189                           pclath	equ	0xFFA
  8190                           tblptru	equ	0xFF8
  8191                           tblptrh	equ	0xFF7
  8192                           tblptrl	equ	0xFF6
  8193                           tablat	equ	0xFF5
  8194                           prodh	equ	0xFF4
  8195                           prodl	equ	0xFF3
  8196                           intcon	equ	0xFF2
  8197                           postinc0	equ	0xFEE
  8198                           fsr0h	equ	0xFEA
  8199                           fsr0l	equ	0xFE9
  8200                           wreg	equ	0xFE8
  8201                           indf1	equ	0xFE7
  8202                           fsr1h	equ	0xFE2
  8203                           fsr1l	equ	0xFE1
  8204                           bsr	equ	0xFE0
  8205                           indf2	equ	0xFDF
  8206                           postinc2	equ	0xFDE
  8207                           postdec2	equ	0xFDD
  8208                           fsr2h	equ	0xFDA
  8209                           fsr2l	equ	0xFD9
  8210                           status	equ	0xFD8
  8211                           
  8212 ;; *************** function i2_blip2 *****************
  8213 ;; Defined at:
  8214 ;;		line 25 in file "../src/debug.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;		None               void
  8221 ;; Registers used:
  8222 ;;		None
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8232 ;;Total ram usage:        0 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_i2c_int_handler
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text44
  8242  001E12                     __ptext44:
  8243                           	opt stack 0
  8244  001E12                     i2_blip2:
  8245                           	opt stack 18
  8246                           
  8247                           ;debug.c: 27: LATDbits.LD5 = 0;
  8248                           
  8249                           ;incstack = 0
  8250  001E12  9A8C               	bcf	3980,5,c	;volatile
  8251                           
  8252                           ;debug.c: 28: LATDbits.LD5 = 1;
  8253  001E14  8A8C               	bsf	3980,5,c	;volatile
  8254                           
  8255                           ;debug.c: 29: LATDbits.LD5 = 0;
  8256  001E16  9A8C               	bcf	3980,5,c	;volatile
  8257  001E18  0012               	return	
  8258  001E1A                     __end_ofi2_blip2:
  8259                           	opt stack 0
  8260                           pclatu	equ	0xFFB
  8261                           pclath	equ	0xFFA
  8262                           tblptru	equ	0xFF8
  8263                           tblptrh	equ	0xFF7
  8264                           tblptrl	equ	0xFF6
  8265                           tablat	equ	0xFF5
  8266                           prodh	equ	0xFF4
  8267                           prodl	equ	0xFF3
  8268                           intcon	equ	0xFF2
  8269                           postinc0	equ	0xFEE
  8270                           fsr0h	equ	0xFEA
  8271                           fsr0l	equ	0xFE9
  8272                           wreg	equ	0xFE8
  8273                           indf1	equ	0xFE7
  8274                           fsr1h	equ	0xFE2
  8275                           fsr1l	equ	0xFE1
  8276                           bsr	equ	0xFE0
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           fsr2h	equ	0xFDA
  8281                           fsr2l	equ	0xFD9
  8282                           status	equ	0xFD8
  8283                           
  8284 ;; *************** function i2_blip1 *****************
  8285 ;; Defined at:
  8286 ;;		line 18 in file "../src/debug.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;		None               void
  8293 ;; Registers used:
  8294 ;;		None
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8304 ;;Total ram usage:        0 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_i2c_int_handler
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text45
  8314  001E1A                     __ptext45:
  8315                           	opt stack 0
  8316  001E1A                     i2_blip1:
  8317                           	opt stack 18
  8318                           
  8319                           ;debug.c: 20: LATDbits.LD4 = 0;
  8320                           
  8321                           ;incstack = 0
  8322  001E1A  988C               	bcf	3980,4,c	;volatile
  8323                           
  8324                           ;debug.c: 21: LATDbits.LD4 = 1;
  8325  001E1C  888C               	bsf	3980,4,c	;volatile
  8326                           
  8327                           ;debug.c: 22: LATDbits.LD4 = 0;
  8328  001E1E  988C               	bcf	3980,4,c	;volatile
  8329  001E20  0012               	return	
  8330  001E22                     __end_ofi2_blip1:
  8331                           	opt stack 0
  8332                           pclatu	equ	0xFFB
  8333                           pclath	equ	0xFFA
  8334                           tblptru	equ	0xFF8
  8335                           tblptrh	equ	0xFF7
  8336                           tblptrl	equ	0xFF6
  8337                           tablat	equ	0xFF5
  8338                           prodh	equ	0xFF4
  8339                           prodl	equ	0xFF3
  8340                           intcon	equ	0xFF2
  8341                           postinc0	equ	0xFEE
  8342                           fsr0h	equ	0xFEA
  8343                           fsr0l	equ	0xFE9
  8344                           wreg	equ	0xFE8
  8345                           indf1	equ	0xFE7
  8346                           fsr1h	equ	0xFE2
  8347                           fsr1l	equ	0xFE1
  8348                           bsr	equ	0xFE0
  8349                           indf2	equ	0xFDF
  8350                           postinc2	equ	0xFDE
  8351                           postdec2	equ	0xFDD
  8352                           fsr2h	equ	0xFDA
  8353                           fsr2l	equ	0xFD9
  8354                           status	equ	0xFD8
  8355                           
  8356 ;; *************** function i2_blip *****************
  8357 ;; Defined at:
  8358 ;;		line 11 in file "../src/debug.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;		None               void
  8365 ;; Registers used:
  8366 ;;		None
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8376 ;;Total ram usage:        0 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; This function calls:
  8379 ;;		Nothing
  8380 ;; This function is called by:
  8381 ;;		_i2c_int_handler
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           	psect	text46
  8386  001E22                     __ptext46:
  8387                           	opt stack 0
  8388  001E22                     i2_blip:
  8389                           	opt stack 18
  8390                           
  8391                           ;debug.c: 13: LATDbits.LD2 = 0;
  8392                           
  8393                           ;incstack = 0
  8394  001E22  948C               	bcf	3980,2,c	;volatile
  8395                           
  8396                           ;debug.c: 14: LATDbits.LD2 = 1;
  8397  001E24  848C               	bsf	3980,2,c	;volatile
  8398                           
  8399                           ;debug.c: 15: LATDbits.LD2 = 0;
  8400  001E26  948C               	bcf	3980,2,c	;volatile
  8401  001E28  0012               	return	
  8402  001E2A                     __end_ofi2_blip:
  8403                           	opt stack 0
  8404                           pclatu	equ	0xFFB
  8405                           pclath	equ	0xFFA
  8406                           tblptru	equ	0xFF8
  8407                           tblptrh	equ	0xFF7
  8408                           tblptrl	equ	0xFF6
  8409                           tablat	equ	0xFF5
  8410                           prodh	equ	0xFF4
  8411                           prodl	equ	0xFF3
  8412                           intcon	equ	0xFF2
  8413                           postinc0	equ	0xFEE
  8414                           fsr0h	equ	0xFEA
  8415                           fsr0l	equ	0xFE9
  8416                           wreg	equ	0xFE8
  8417                           indf1	equ	0xFE7
  8418                           fsr1h	equ	0xFE2
  8419                           fsr1l	equ	0xFE1
  8420                           bsr	equ	0xFE0
  8421                           indf2	equ	0xFDF
  8422                           postinc2	equ	0xFDE
  8423                           postdec2	equ	0xFDD
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function _retrieve_sensor_values *****************
  8429 ;; Defined at:
  8430 ;;		line 394 in file "../src/my_i2c.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  sensor_bank_    2   29[BANK0 ] PTR unsigned char 
  8433 ;;		 -> i2c_int_handler@sensor_bank_side(14), 
  8434 ;;  sensor_bank_    2   31[BANK0 ] PTR unsigned char 
  8435 ;;		 -> i2c_int_handler@sensor_bank_front(14), 
  8436 ;;  sensor_bank_    2   33[BANK0 ] PTR unsigned char 
  8437 ;;		 -> i2c_int_handler@sensor_bank_ventril(14), 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  i               2    0        int 
  8440 ;;  msgtype         1   36[BANK0 ] unsigned char 
  8441 ;;  length          1   35[BANK0 ] char 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;		None               void
  8444 ;; Registers used:
  8445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8452 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8455 ;;Total ram usage:        8 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    3
  8458 ;; This function calls:
  8459 ;;		_FromMainHigh_recvmsg
  8460 ;; This function is called by:
  8461 ;;		_i2c_int_handler
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text47
  8466  001AC4                     __ptext47:
  8467                           	opt stack 0
  8468  001AC4                     _retrieve_sensor_values:
  8469                           	opt stack 15
  8470                           
  8471                           ;my_i2c.c: 396: unsigned char msgtype = 40;
  8472                           
  8473                           ;incstack = 0
  8474  001AC4  0E28               	movlw	40
  8475  001AC6  0100               	movlb	0	; () banked
  8476  001AC8  6F84               	movwf	retrieve_sensor_values@msgtype& (0+255),b
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;my_i2c.c: 398: int i;
  8480                           ;my_i2c.c: 399: signed char length = FromMainHigh_recvmsg( 14 , &msgtype , (void *)senso
      +                          r_bank_side );
  8481  001ACA  0100               	movlb	0	; () banked
  8482  001ACC  0E00               	movlw	high retrieve_sensor_values@msgtype
  8483  001ACE  0100               	movlb	0	; () banked
  8484  001AD0  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  8485  001AD2  0100               	movlb	0	; () banked
  8486  001AD4  0E84               	movlw	low retrieve_sensor_values@msgtype
  8487  001AD6  0100               	movlb	0	; () banked
  8488  001AD8  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  8489  001ADA  0100               	movlb	0	; () banked
  8490  001ADC  C07E  F07B         	movff	retrieve_sensor_values@sensor_bank_side+1,FromMainHigh_recvmsg@data+1
  8491  001AE0  0100               	movlb	0	; () banked
  8492  001AE2  C07D  F07A         	movff	retrieve_sensor_values@sensor_bank_side,FromMainHigh_recvmsg@data
  8493  001AE6  0E0E               	movlw	14
  8494  001AE8  ECD1  F00D         	call	_FromMainHigh_recvmsg
  8495  001AEC  0100               	movlb	0	; () banked
  8496  001AEE  6F83               	movwf	retrieve_sensor_values@length& (0+255),b
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;my_i2c.c: 407: }
  8500                           ;my_i2c.c: 411: *need_sensor_data = 1;
  8501                           
  8502                           ; BSR set to: 0
  8503                           
  8504                           ; BSR set to: 0
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;my_i2c.c: 403: }
  8508                           
  8509                           ; BSR set to: 0
  8510  001AF0  C0AF  FFD9         	movff	_need_sensor_data,fsr2l
  8511  001AF4  C0B0  FFDA         	movff	_need_sensor_data+1,fsr2h
  8512  001AF8  0E01               	movlw	1
  8513  001AFA  6EDF               	movwf	indf2,c
  8514                           
  8515                           ; BSR set to: 0
  8516  001AFC  0012               	return	
  8517  001AFE                     __end_of_retrieve_sensor_values:
  8518                           	opt stack 0
  8519                           pclatu	equ	0xFFB
  8520                           pclath	equ	0xFFA
  8521                           tblptru	equ	0xFF8
  8522                           tblptrh	equ	0xFF7
  8523                           tblptrl	equ	0xFF6
  8524                           tablat	equ	0xFF5
  8525                           prodh	equ	0xFF4
  8526                           prodl	equ	0xFF3
  8527                           intcon	equ	0xFF2
  8528                           postinc0	equ	0xFEE
  8529                           fsr0h	equ	0xFEA
  8530                           fsr0l	equ	0xFE9
  8531                           wreg	equ	0xFE8
  8532                           indf1	equ	0xFE7
  8533                           fsr1h	equ	0xFE2
  8534                           fsr1l	equ	0xFE1
  8535                           bsr	equ	0xFE0
  8536                           indf2	equ	0xFDF
  8537                           postinc2	equ	0xFDE
  8538                           postdec2	equ	0xFDD
  8539                           fsr2h	equ	0xFDA
  8540                           fsr2l	equ	0xFD9
  8541                           status	equ	0xFD8
  8542                           
  8543 ;; *************** function _FromMainHigh_recvmsg *****************
  8544 ;; Defined at:
  8545 ;;		line 183 in file "../src/messages.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;  maxlength       1    wreg     unsigned char 
  8548 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8549 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), 
  8550 ;;  data            2   26[BANK0 ] PTR void 
  8551 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@sensor_bank_side(14), 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      char 
  8556 ;; Registers used:
  8557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8567 ;;Total ram usage:        5 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    2
  8570 ;; This function calls:
  8571 ;;		i2_recv_msg
  8572 ;; This function is called by:
  8573 ;;		_retrieve_sensor_values
  8574 ;;		_timer0_int_handler
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text48
  8579  001BA2                     __ptext48:
  8580                           	opt stack 0
  8581  001BA2                     _FromMainHigh_recvmsg:
  8582                           	opt stack 16
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;incstack = 0
  8586                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8587  001BA2  0100               	movlb	0	; () banked
  8588  001BA4  6F7C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8592  001BA6  0105               	movlb	5	; () banked
  8593  001BA8  0E05               	movlw	high _FromMainHigh_MQ
  8594  001BAA  0100               	movlb	0	; () banked
  8595  001BAC  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8596  001BAE  0105               	movlb	5	; () banked
  8597  001BB0  0E00               	movlw	low _FromMainHigh_MQ
  8598  001BB2  0100               	movlb	0	; () banked
  8599  001BB4  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  8600  001BB6  C07C  F06C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8601  001BBA  0100               	movlb	0	; () banked
  8602  001BBC  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8603  001BC0  0100               	movlb	0	; () banked
  8604  001BC2  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8605  001BC6  0100               	movlb	0	; () banked
  8606  001BC8  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8607  001BCC  0100               	movlb	0	; () banked
  8608  001BCE  C07A  F06F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8609  001BD2  ECAA  F007         	call	i2_recv_msg	;wreg free
  8610  001BD6  0012               	return	
  8611  001BD8                     __end_of_FromMainHigh_recvmsg:
  8612                           	opt stack 0
  8613                           pclatu	equ	0xFFB
  8614                           pclath	equ	0xFFA
  8615                           tblptru	equ	0xFF8
  8616                           tblptrh	equ	0xFF7
  8617                           tblptrl	equ	0xFF6
  8618                           tablat	equ	0xFF5
  8619                           prodh	equ	0xFF4
  8620                           prodl	equ	0xFF3
  8621                           intcon	equ	0xFF2
  8622                           postinc0	equ	0xFEE
  8623                           fsr0h	equ	0xFEA
  8624                           fsr0l	equ	0xFE9
  8625                           wreg	equ	0xFE8
  8626                           indf1	equ	0xFE7
  8627                           fsr1h	equ	0xFE2
  8628                           fsr1l	equ	0xFE1
  8629                           bsr	equ	0xFE0
  8630                           indf2	equ	0xFDF
  8631                           postinc2	equ	0xFDE
  8632                           postdec2	equ	0xFDD
  8633                           fsr2h	equ	0xFDA
  8634                           fsr2l	equ	0xFD9
  8635                           status	equ	0xFD8
  8636                           
  8637 ;; *************** function i2_recv_msg *****************
  8638 ;; Defined at:
  8639 ;;		line 63 in file "../src/messages.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8642 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8643 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8644 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8645 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  8646 ;;  data            2   15[BANK0 ] PTR void 
  8647 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8650 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8651 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8652 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8653 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  1    wreg      char 
  8656 ;; Registers used:
  8657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8663 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8664 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8666 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8667 ;;Total ram usage:       14 bytes
  8668 ;; Hardware stack levels used:    1
  8669 ;; Hardware stack levels required when called:    1
  8670 ;; This function calls:
  8671 ;;		i2_memcpy
  8672 ;; This function is called by:
  8673 ;;		_FromMainHigh_recvmsg
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text49
  8678  000F54                     __ptext49:
  8679                           	opt stack 0
  8680  000F54                     i2_recv_msg:
  8681                           	opt stack 16
  8682                           
  8683                           ;messages.c: 64: unsigned char slot;
  8684                           ;messages.c: 68: msg *qmsg;
  8685                           ;messages.c: 69: size_t tlength;
  8686                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8687                           
  8688                           ;incstack = 0
  8689  000F54  0100               	movlb	0	; () banked
  8690  000F56  EE20 F089          	lfsr	2,137
  8691  000F5A  0100               	movlb	0	; () banked
  8692  000F5C  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8693  000F5E  26D9               	addwf	fsr2l,f,c
  8694  000F60  0100               	movlb	0	; () banked
  8695  000F62  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8696  000F64  22DA               	addwfc	fsr2h,f,c
  8697  000F66  50DF               	movf	indf2,w,c
  8698  000F68  0100               	movlb	0	; () banked
  8699  000F6A  6F73               	movwf	i2recv_msg@slot& (0+255),b
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8703  000F6C  0100               	movlb	0	; () banked
  8704  000F6E  5173               	movf	i2recv_msg@slot& (0+255),w,b
  8705  000F70  0D11               	mullw	17
  8706  000F72  50F3               	movf	prodl,w,c
  8707  000F74  0100               	movlb	0	; () banked
  8708  000F76  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8709  000F78  0100               	movlb	0	; () banked
  8710  000F7A  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  8711  000F7C  50F4               	movf	prodh,w,c
  8712  000F7E  0100               	movlb	0	; () banked
  8713  000F80  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8714  000F82  0100               	movlb	0	; () banked
  8715  000F84  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;messages.c: 74: if (qmsg->full == 1) {
  8719  000F86  0E01               	movlw	1
  8720  000F88  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8721  000F8C  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8722  000F90  62DF               	cpfseq	indf2,c
  8723  000F92  D06D               	goto	i2l2416
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8727  000F94  0100               	movlb	0	; () banked
  8728  000F96  EE20 F001          	lfsr	2,1
  8729  000F9A  0100               	movlb	0	; () banked
  8730  000F9C  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8731  000F9E  26D9               	addwf	fsr2l,f,c
  8732  000FA0  0100               	movlb	0	; () banked
  8733  000FA2  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8734  000FA4  22DA               	addwfc	fsr2h,f,c
  8735  000FA6  50DF               	movf	indf2,w,c
  8736  000FA8  0100               	movlb	0	; () banked
  8737  000FAA  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8738  000FAC  B0D8               	btfsc	status,0,c
  8739  000FAE  D002               	goto	i2l2400
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;messages.c: 77: return (-3);
  8743  000FB0  0EFD               	movlw	253
  8744  000FB2  0012               	return	
  8745  000FB4                     i2l2400:
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;messages.c: 78: }
  8749                           ;messages.c: 80: tlength = qmsg->length;
  8750  000FB4  0100               	movlb	0	; () banked
  8751  000FB6  EE20 F001          	lfsr	2,1
  8752  000FBA  0100               	movlb	0	; () banked
  8753  000FBC  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8754  000FBE  26D9               	addwf	fsr2l,f,c
  8755  000FC0  0100               	movlb	0	; () banked
  8756  000FC2  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8757  000FC4  22DA               	addwfc	fsr2h,f,c
  8758  000FC6  50DF               	movf	indf2,w,c
  8759  000FC8  0100               	movlb	0	; () banked
  8760  000FCA  6F71               	movwf	??i2_recv_msg& (0+255),b
  8761  000FCC  0100               	movlb	0	; () banked
  8762  000FCE  5171               	movf	??i2_recv_msg& (0+255),w,b
  8763  000FD0  0100               	movlb	0	; () banked
  8764  000FD2  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  8765  000FD4  0100               	movlb	0	; () banked
  8766  000FD6  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8770  000FD8  0100               	movlb	0	; () banked
  8771  000FDA  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8772  000FDE  0100               	movlb	0	; () banked
  8773  000FE0  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  8774  000FE4  0E03               	movlw	3
  8775  000FE6  0100               	movlb	0	; () banked
  8776  000FE8  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8777  000FEA  0100               	movlb	0	; () banked
  8778  000FEC  6F71               	movwf	??i2_recv_msg& (0+255),b
  8779  000FEE  0E00               	movlw	0
  8780  000FF0  0100               	movlb	0	; () banked
  8781  000FF2  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8782  000FF4  0100               	movlb	0	; () banked
  8783  000FF6  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  8784  000FF8  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  8785  000FFC  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8786  001000  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  8787  001004  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8788  001008  ECDD  F00C         	call	i2_memcpy	;wreg free
  8789                           
  8790                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  8791  00100C  0100               	movlb	0	; () banked
  8792  00100E  EE20 F089          	lfsr	2,137
  8793  001012  0100               	movlb	0	; () banked
  8794  001014  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8795  001016  26D9               	addwf	fsr2l,f,c
  8796  001018  0100               	movlb	0	; () banked
  8797  00101A  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8798  00101C  22DA               	addwfc	fsr2h,f,c
  8799  00101E  0100               	movlb	0	; () banked
  8800  001020  EE10 F089          	lfsr	1,137
  8801  001024  0100               	movlb	0	; () banked
  8802  001026  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8803  001028  26E1               	addwf	fsr1l,f,c
  8804  00102A  0100               	movlb	0	; () banked
  8805  00102C  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8806  00102E  22E2               	addwfc	fsr1h,f,c
  8807  001030  50E7               	movf	indf1,w,c
  8808  001032  0100               	movlb	0	; () banked
  8809  001034  6F71               	movwf	??i2_recv_msg& (0+255),b
  8810  001036  0100               	movlb	0	; () banked
  8811  001038  2971               	incf	??i2_recv_msg& (0+255),w,b
  8812  00103A  0B07               	andlw	7
  8813  00103C  6EDF               	movwf	indf2,c
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8817  00103E  0100               	movlb	0	; () banked
  8818  001040  EE20 F002          	lfsr	2,2
  8819  001044  0100               	movlb	0	; () banked
  8820  001046  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8821  001048  26D9               	addwf	fsr2l,f,c
  8822  00104A  0100               	movlb	0	; () banked
  8823  00104C  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8824  00104E  22DA               	addwfc	fsr2h,f,c
  8825  001050  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8826  001054  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8827  001058  CFDF FFE7          	movff	indf2,indf1
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;messages.c: 91: qmsg->full = 0;
  8831  00105C  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8832  001060  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8833  001064  0E00               	movlw	0
  8834  001066  6EDF               	movwf	indf2,c
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;messages.c: 92: return (tlength);
  8838  001068  0100               	movlb	0	; () banked
  8839  00106A  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  8840  00106C  0012               	return	
  8841  00106E                     i2l2416:
  8842                           
  8843                           ; BSR set to: 0
  8844                           ;messages.c: 94: return (-4);
  8845  00106E  0EFC               	movlw	252
  8846  001070  0012               	return	
  8847  001072                     __end_ofi2_recv_msg:
  8848                           	opt stack 0
  8849                           pclatu	equ	0xFFB
  8850                           pclath	equ	0xFFA
  8851                           tblptru	equ	0xFF8
  8852                           tblptrh	equ	0xFF7
  8853                           tblptrl	equ	0xFF6
  8854                           tablat	equ	0xFF5
  8855                           prodh	equ	0xFF4
  8856                           prodl	equ	0xFF3
  8857                           intcon	equ	0xFF2
  8858                           postinc0	equ	0xFEE
  8859                           fsr0h	equ	0xFEA
  8860                           fsr0l	equ	0xFE9
  8861                           wreg	equ	0xFE8
  8862                           indf1	equ	0xFE7
  8863                           fsr1h	equ	0xFE2
  8864                           fsr1l	equ	0xFE1
  8865                           bsr	equ	0xFE0
  8866                           indf2	equ	0xFDF
  8867                           postinc2	equ	0xFDE
  8868                           postdec2	equ	0xFDD
  8869                           fsr2h	equ	0xFDA
  8870                           fsr2l	equ	0xFD9
  8871                           status	equ	0xFD8
  8872                           
  8873 ;; *************** function _handle_start *****************
  8874 ;; Defined at:
  8875 ;;		line 72 in file "../src/my_i2c.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  data_read       1    wreg     unsigned char 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;  data_read       1    0[BANK0 ] unsigned char 
  8880 ;; Return value:  Size  Location     Type
  8881 ;;		None               void
  8882 ;; Registers used:
  8883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8893 ;;Total ram usage:        1 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_i2c_int_handler
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text50
  8903  0013FE                     __ptext50:
  8904                           	opt stack 0
  8905  0013FE                     _handle_start:
  8906                           	opt stack 18
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;incstack = 0
  8910                           ;handle_start@data_read stored from wreg
  8911  0013FE  0100               	movlb	0	; () banked
  8912  001400  6F60               	movwf	handle_start@data_read& (0+255),b
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8916  001402  0100               	movlb	0	; () banked
  8917  001404  EE20 F020          	lfsr	2,32
  8918  001408  0100               	movlb	0	; () banked
  8919  00140A  51D3               	movf	_ic_ptr& (0+255),w,b
  8920  00140C  26D9               	addwf	fsr2l,f,c
  8921  00140E  0100               	movlb	0	; () banked
  8922  001410  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8923  001412  22DA               	addwfc	fsr2h,f,c
  8924  001414  0E01               	movlw	1
  8925  001416  6EDF               	movwf	indf2,c
  8926                           
  8927                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8928  001418  0100               	movlb	0	; () banked
  8929  00141A  EE20 F00E          	lfsr	2,14
  8930  00141E  0100               	movlb	0	; () banked
  8931  001420  51D3               	movf	_ic_ptr& (0+255),w,b
  8932  001422  26D9               	addwf	fsr2l,f,c
  8933  001424  0100               	movlb	0	; () banked
  8934  001426  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8935  001428  22DA               	addwfc	fsr2h,f,c
  8936  00142A  0E00               	movlw	0
  8937  00142C  6EDF               	movwf	indf2,c
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;my_i2c.c: 76: if (data_read) {
  8941  00142E  0100               	movlb	0	; () banked
  8942  001430  5160               	movf	handle_start@data_read& (0+255),w,b
  8943  001432  B4D8               	btfsc	status,2,c
  8944  001434  D03D               	goto	i2l2626
  8945                           
  8946                           ; BSR set to: 0
  8947                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8948  001436  AAC7               	btfss	4039,5,c	;volatile
  8949  001438  D021               	goto	i2l288
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8953  00143A  0100               	movlb	0	; () banked
  8954  00143C  EE20 F021          	lfsr	2,33
  8955  001440  0100               	movlb	0	; () banked
  8956  001442  51D3               	movf	_ic_ptr& (0+255),w,b
  8957  001444  26D9               	addwf	fsr2l,f,c
  8958  001446  0100               	movlb	0	; () banked
  8959  001448  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8960  00144A  22DA               	addwfc	fsr2h,f,c
  8961  00144C  0E05               	movlw	5
  8962  00144E  6EDF               	movwf	indf2,c
  8963                           
  8964                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8965  001450  0100               	movlb	0	; () banked
  8966  001452  EE20 F023          	lfsr	2,35
  8967  001456  0100               	movlb	0	; () banked
  8968  001458  51D3               	movf	_ic_ptr& (0+255),w,b
  8969  00145A  26D9               	addwf	fsr2l,f,c
  8970  00145C  0100               	movlb	0	; () banked
  8971  00145E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8972  001460  22DA               	addwfc	fsr2h,f,c
  8973  001462  2ADF               	incf	indf2,f,c
  8974                           
  8975                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8976  001464  0100               	movlb	0	; () banked
  8977  001466  EE20 F022          	lfsr	2,34
  8978  00146A  0100               	movlb	0	; () banked
  8979  00146C  51D3               	movf	_ic_ptr& (0+255),w,b
  8980  00146E  26D9               	addwf	fsr2l,f,c
  8981  001470  0100               	movlb	0	; () banked
  8982  001472  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8983  001474  22DA               	addwfc	fsr2h,f,c
  8984  001476  0E05               	movlw	5
  8985  001478  6EDF               	movwf	indf2,c
  8986                           
  8987                           ;my_i2c.c: 83: } else {
  8988  00147A  0012               	return	
  8989  00147C                     i2l288:
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8993  00147C  A4C7               	btfss	4039,2,c	;volatile
  8994  00147E  D00C               	goto	i2l2624
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8998  001480  0100               	movlb	0	; () banked
  8999  001482  EE20 F021          	lfsr	2,33
  9000  001486  0100               	movlb	0	; () banked
  9001  001488  51D3               	movf	_ic_ptr& (0+255),w,b
  9002  00148A  26D9               	addwf	fsr2l,f,c
  9003  00148C  0100               	movlb	0	; () banked
  9004  00148E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9005  001490  22DA               	addwfc	fsr2h,f,c
  9006  001492  0E08               	movlw	8
  9007  001494  6EDF               	movwf	indf2,c
  9008                           
  9009                           ;my_i2c.c: 87: } else {
  9010  001496  0012               	return	
  9011  001498                     i2l2624:
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  9015  001498  0100               	movlb	0	; () banked
  9016  00149A  EE20 F021          	lfsr	2,33
  9017  00149E  0100               	movlb	0	; () banked
  9018  0014A0  51D3               	movf	_ic_ptr& (0+255),w,b
  9019  0014A2  26D9               	addwf	fsr2l,f,c
  9020  0014A4  0100               	movlb	0	; () banked
  9021  0014A6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9022  0014A8  22DA               	addwfc	fsr2h,f,c
  9023  0014AA  0E07               	movlw	7
  9024  0014AC  6EDF               	movwf	indf2,c
  9025  0014AE  0012               	return	
  9026  0014B0                     i2l2626:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  9030  0014B0  0100               	movlb	0	; () banked
  9031  0014B2  EE20 F021          	lfsr	2,33
  9032  0014B6  0100               	movlb	0	; () banked
  9033  0014B8  51D3               	movf	_ic_ptr& (0+255),w,b
  9034  0014BA  26D9               	addwf	fsr2l,f,c
  9035  0014BC  0100               	movlb	0	; () banked
  9036  0014BE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9037  0014C0  22DA               	addwfc	fsr2h,f,c
  9038  0014C2  0E06               	movlw	6
  9039  0014C4  6EDF               	movwf	indf2,c
  9040  0014C6  0012               	return	
  9041  0014C8                     __end_of_handle_start:
  9042                           	opt stack 0
  9043                           pclatu	equ	0xFFB
  9044                           pclath	equ	0xFFA
  9045                           tblptru	equ	0xFF8
  9046                           tblptrh	equ	0xFF7
  9047                           tblptrl	equ	0xFF6
  9048                           tablat	equ	0xFF5
  9049                           prodh	equ	0xFF4
  9050                           prodl	equ	0xFF3
  9051                           intcon	equ	0xFF2
  9052                           postinc0	equ	0xFEE
  9053                           fsr0h	equ	0xFEA
  9054                           fsr0l	equ	0xFE9
  9055                           wreg	equ	0xFE8
  9056                           indf1	equ	0xFE7
  9057                           fsr1h	equ	0xFE2
  9058                           fsr1l	equ	0xFE1
  9059                           bsr	equ	0xFE0
  9060                           indf2	equ	0xFDF
  9061                           postinc2	equ	0xFDE
  9062                           postdec2	equ	0xFDD
  9063                           fsr2h	equ	0xFDA
  9064                           fsr2l	equ	0xFD9
  9065                           status	equ	0xFD8
  9066                           
  9067 ;; *************** function _blip4 *****************
  9068 ;; Defined at:
  9069 ;;		line 39 in file "../src/debug.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;		None               void
  9076 ;; Registers used:
  9077 ;;		None
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_i2c_int_handler
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text51
  9097  001E2A                     __ptext51:
  9098                           	opt stack 0
  9099  001E2A                     _blip4:
  9100                           	opt stack 18
  9101                           
  9102                           ;debug.c: 41: LATDbits.LD7 = 0;
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;incstack = 0
  9106  001E2A  9E8C               	bcf	3980,7,c	;volatile
  9107                           
  9108                           ;debug.c: 42: LATDbits.LD7 = 1;
  9109  001E2C  8E8C               	bsf	3980,7,c	;volatile
  9110                           
  9111                           ;debug.c: 43: LATDbits.LD7 = 0;
  9112  001E2E  9E8C               	bcf	3980,7,c	;volatile
  9113  001E30  0012               	return	
  9114  001E32                     __end_of_blip4:
  9115                           	opt stack 0
  9116                           pclatu	equ	0xFFB
  9117                           pclath	equ	0xFFA
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           intcon	equ	0xFF2
  9125                           postinc0	equ	0xFEE
  9126                           fsr0h	equ	0xFEA
  9127                           fsr0l	equ	0xFE9
  9128                           wreg	equ	0xFE8
  9129                           indf1	equ	0xFE7
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           bsr	equ	0xFE0
  9133                           indf2	equ	0xFDF
  9134                           postinc2	equ	0xFDE
  9135                           postdec2	equ	0xFDD
  9136                           fsr2h	equ	0xFDA
  9137                           fsr2l	equ	0xFD9
  9138                           status	equ	0xFD8
  9139                           
  9140 ;; *************** function _ToMainHigh_sendmsg *****************
  9141 ;; Defined at:
  9142 ;;		line 126 in file "../src/messages.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  length          1    wreg     unsigned char 
  9145 ;;  msgtype         1   22[BANK0 ] unsigned char 
  9146 ;;  data            2   23[BANK0 ] PTR void 
  9147 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  length          1   25[BANK0 ] unsigned char 
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      char 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9159 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9162 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9163 ;;Total ram usage:        4 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:    2
  9166 ;; This function calls:
  9167 ;;		i2_send_msg
  9168 ;; This function is called by:
  9169 ;;		_i2c_int_handler
  9170 ;;		_timer0_int_handler
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text52
  9175  001C66                     __ptext52:
  9176                           	opt stack 0
  9177  001C66                     _ToMainHigh_sendmsg:
  9178                           	opt stack 16
  9179                           
  9180                           ;incstack = 0
  9181                           ;ToMainHigh_sendmsg@length stored from wreg
  9182  001C66  0100               	movlb	0	; () banked
  9183  001C68  6F79               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9187                           ;	Return value of _ToMainHigh_sendmsg is never used
  9188  001C6A  0103               	movlb	3	; () banked
  9189  001C6C  0E03               	movlw	high _ToMainHigh_MQ
  9190  001C6E  0100               	movlb	0	; () banked
  9191  001C70  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9192  001C72  0103               	movlb	3	; () banked
  9193  001C74  0E00               	movlw	low _ToMainHigh_MQ
  9194  001C76  0100               	movlb	0	; () banked
  9195  001C78  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  9196  001C7A  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  9197  001C7E  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9198  001C82  0100               	movlb	0	; () banked
  9199  001C84  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9200  001C88  0100               	movlb	0	; () banked
  9201  001C8A  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9202  001C8E  ECAF  F008         	call	i2_send_msg	;wreg free
  9203  001C92  0012               	return	
  9204  001C94                     __end_of_ToMainHigh_sendmsg:
  9205                           	opt stack 0
  9206                           pclatu	equ	0xFFB
  9207                           pclath	equ	0xFFA
  9208                           tblptru	equ	0xFF8
  9209                           tblptrh	equ	0xFF7
  9210                           tblptrl	equ	0xFF6
  9211                           tablat	equ	0xFF5
  9212                           prodh	equ	0xFF4
  9213                           prodl	equ	0xFF3
  9214                           intcon	equ	0xFF2
  9215                           postinc0	equ	0xFEE
  9216                           fsr0h	equ	0xFEA
  9217                           fsr0l	equ	0xFE9
  9218                           wreg	equ	0xFE8
  9219                           indf1	equ	0xFE7
  9220                           fsr1h	equ	0xFE2
  9221                           fsr1l	equ	0xFE1
  9222                           bsr	equ	0xFE0
  9223                           indf2	equ	0xFDF
  9224                           postinc2	equ	0xFDE
  9225                           postdec2	equ	0xFDD
  9226                           fsr2h	equ	0xFDA
  9227                           fsr2l	equ	0xFD9
  9228                           status	equ	0xFD8
  9229                           
  9230 ;; *************** function i2_send_msg *****************
  9231 ;; Defined at:
  9232 ;;		line 24 in file "../src/messages.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9235 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  9236 ;;  length          1   12[BANK0 ] unsigned char 
  9237 ;;  msgtype         1   13[BANK0 ] unsigned char 
  9238 ;;  data            2   14[BANK0 ] PTR void 
  9239 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  9240 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9241 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  9242 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  9245 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9246 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  9247 ;;  send_msg        2   17[BANK0 ] unsigned int 
  9248 ;;  send_msg        1   19[BANK0 ] unsigned char 
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  1    wreg      char 
  9251 ;; Registers used:
  9252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9258 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9259 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9261 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9262 ;;Total ram usage:       12 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:    1
  9265 ;; This function calls:
  9266 ;;		i2_memcpy
  9267 ;; This function is called by:
  9268 ;;		_ToMainHigh_sendmsg
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text53
  9273  00115E                     __ptext53:
  9274                           	opt stack 0
  9275  00115E                     i2_send_msg:
  9276                           	opt stack 16
  9277                           
  9278                           ;messages.c: 25: unsigned char slot;
  9279                           ;messages.c: 27: msg *qmsg;
  9280                           ;messages.c: 28: size_t tlength = length;
  9281                           
  9282                           ;incstack = 0
  9283  00115E  0100               	movlb	0	; () banked
  9284  001160  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  9285  001164  0100               	movlb	0	; () banked
  9286  001166  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9290  001168  0100               	movlb	0	; () banked
  9291  00116A  EE20 F088          	lfsr	2,136
  9292  00116E  0100               	movlb	0	; () banked
  9293  001170  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9294  001172  26D9               	addwf	fsr2l,f,c
  9295  001174  0100               	movlb	0	; () banked
  9296  001176  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9297  001178  22DA               	addwfc	fsr2h,f,c
  9298  00117A  50DF               	movf	indf2,w,c
  9299  00117C  0100               	movlb	0	; () banked
  9300  00117E  6F73               	movwf	i2send_msg@slot& (0+255),b
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9304  001180  0100               	movlb	0	; () banked
  9305  001182  5173               	movf	i2send_msg@slot& (0+255),w,b
  9306  001184  0D11               	mullw	17
  9307  001186  50F3               	movf	prodl,w,c
  9308  001188  0100               	movlb	0	; () banked
  9309  00118A  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  9310  00118C  0100               	movlb	0	; () banked
  9311  00118E  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  9312  001190  50F4               	movf	prodh,w,c
  9313  001192  0100               	movlb	0	; () banked
  9314  001194  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9315  001196  0100               	movlb	0	; () banked
  9316  001198  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;messages.c: 41: if (qmsg->full != 0) {
  9320  00119A  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9321  00119E  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9322  0011A2  50DF               	movf	indf2,w,c
  9323  0011A4  B4D8               	btfsc	status,2,c
  9324  0011A6  D002               	goto	i2l2478
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;messages.c: 42: return (-1);
  9328  0011A8  0EFF               	movlw	255
  9329  0011AA  0012               	return	
  9330  0011AC                     i2l2478:
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;messages.c: 43: }
  9334                           ;messages.c: 46: qmsg->length = length;
  9335  0011AC  0100               	movlb	0	; () banked
  9336  0011AE  EE20 F001          	lfsr	2,1
  9337  0011B2  0100               	movlb	0	; () banked
  9338  0011B4  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  9339  0011B6  26D9               	addwf	fsr2l,f,c
  9340  0011B8  0100               	movlb	0	; () banked
  9341  0011BA  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9342  0011BC  22DA               	addwfc	fsr2h,f,c
  9343  0011BE  0100               	movlb	0	; () banked
  9344  0011C0  C06C  FFDF         	movff	i2send_msg@length,indf2
  9345                           
  9346                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9347  0011C4  0100               	movlb	0	; () banked
  9348  0011C6  EE20 F002          	lfsr	2,2
  9349  0011CA  0100               	movlb	0	; () banked
  9350  0011CC  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  9351  0011CE  26D9               	addwf	fsr2l,f,c
  9352  0011D0  0100               	movlb	0	; () banked
  9353  0011D2  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9354  0011D4  22DA               	addwfc	fsr2h,f,c
  9355  0011D6  0100               	movlb	0	; () banked
  9356  0011D8  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9360  0011DC  0E03               	movlw	3
  9361  0011DE  0100               	movlb	0	; () banked
  9362  0011E0  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  9363  0011E2  0100               	movlb	0	; () banked
  9364  0011E4  6F60               	movwf	i2memcpy@d1& (0+255),b
  9365  0011E6  0E00               	movlw	0
  9366  0011E8  0100               	movlb	0	; () banked
  9367  0011EA  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9368  0011EC  0100               	movlb	0	; () banked
  9369  0011EE  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  9370  0011F0  0100               	movlb	0	; () banked
  9371  0011F2  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9372  0011F6  0100               	movlb	0	; () banked
  9373  0011F8  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  9374  0011FC  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  9375  001200  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9376  001204  ECDD  F00C         	call	i2_memcpy	;wreg free
  9377                           
  9378                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  9379  001208  0100               	movlb	0	; () banked
  9380  00120A  EE20 F088          	lfsr	2,136
  9381  00120E  0100               	movlb	0	; () banked
  9382  001210  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9383  001212  26D9               	addwf	fsr2l,f,c
  9384  001214  0100               	movlb	0	; () banked
  9385  001216  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9386  001218  22DA               	addwfc	fsr2h,f,c
  9387  00121A  0100               	movlb	0	; () banked
  9388  00121C  EE10 F088          	lfsr	1,136
  9389  001220  0100               	movlb	0	; () banked
  9390  001222  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9391  001224  26E1               	addwf	fsr1l,f,c
  9392  001226  0100               	movlb	0	; () banked
  9393  001228  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9394  00122A  22E2               	addwfc	fsr1h,f,c
  9395  00122C  50E7               	movf	indf1,w,c
  9396  00122E  0100               	movlb	0	; () banked
  9397  001230  6F70               	movwf	??i2_send_msg& (0+255),b
  9398  001232  0100               	movlb	0	; () banked
  9399  001234  2970               	incf	??i2_send_msg& (0+255),w,b
  9400  001236  0B07               	andlw	7
  9401  001238  6EDF               	movwf	indf2,c
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;messages.c: 59: qmsg->full = 1;
  9405  00123A  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9406  00123E  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9407  001242  0E01               	movlw	1
  9408  001244  6EDF               	movwf	indf2,c
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;messages.c: 60: return (1);
  9412  001246  0E01               	movlw	1
  9413  001248  0012               	return	
  9414  00124A                     __end_ofi2_send_msg:
  9415                           	opt stack 0
  9416                           pclatu	equ	0xFFB
  9417                           pclath	equ	0xFFA
  9418                           tblptru	equ	0xFF8
  9419                           tblptrh	equ	0xFF7
  9420                           tblptrl	equ	0xFF6
  9421                           tablat	equ	0xFF5
  9422                           prodh	equ	0xFF4
  9423                           prodl	equ	0xFF3
  9424                           intcon	equ	0xFF2
  9425                           postinc0	equ	0xFEE
  9426                           fsr0h	equ	0xFEA
  9427                           fsr0l	equ	0xFE9
  9428                           wreg	equ	0xFE8
  9429                           indf1	equ	0xFE7
  9430                           fsr1h	equ	0xFE2
  9431                           fsr1l	equ	0xFE1
  9432                           bsr	equ	0xFE0
  9433                           indf2	equ	0xFDF
  9434                           postinc2	equ	0xFDE
  9435                           postdec2	equ	0xFDD
  9436                           fsr2h	equ	0xFDA
  9437                           fsr2l	equ	0xFD9
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function i2_memcpy *****************
  9441 ;; Defined at:
  9442 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  d1              2    0[BANK0 ] PTR void 
  9445 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9446 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9447 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9448 ;;  s1              2    2[BANK0 ] PTR const void 
  9449 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9450 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9451 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  9452 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9453 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  9454 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  9455 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9456 ;;  n               2    4[BANK0 ] unsigned int 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9459 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9460 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9461 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  9462 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9463 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  9464 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  9465 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9466 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9467 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9468 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9469 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  2    0[BANK0 ] PTR void 
  9472 ;; Registers used:
  9473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9480 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9482 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9483 ;;Total ram usage:       10 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; This function calls:
  9486 ;;		Nothing
  9487 ;; This function is called by:
  9488 ;;		i2_send_msg
  9489 ;;		i2_recv_msg
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text54
  9494  0019BA                     __ptext54:
  9495                           	opt stack 0
  9496  0019BA                     i2_memcpy:
  9497                           	opt stack 16
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;incstack = 0
  9501  0019BA  0100               	movlb	0	; () banked
  9502  0019BC  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9503  0019C0  0100               	movlb	0	; () banked
  9504  0019C2  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  9505  0019C6  0100               	movlb	0	; () banked
  9506  0019C8  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9507  0019CC  0100               	movlb	0	; () banked
  9508  0019CE  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  9509  0019D2  D010               	goto	i2l2362
  9510  0019D4                     i2l2356:
  9511                           
  9512                           ; BSR set to: 0
  9513  0019D4  C068  FFD9         	movff	i2memcpy@s,fsr2l
  9514  0019D8  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  9515  0019DC  C066  FFE1         	movff	i2memcpy@d,fsr1l
  9516  0019E0  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  9517  0019E4  CFDF FFE7          	movff	indf2,indf1
  9518                           
  9519                           ; BSR set to: 0
  9520  0019E8  0100               	movlb	0	; () banked
  9521  0019EA  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  9522  0019EC  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  9523                           
  9524                           ; BSR set to: 0
  9525  0019EE  0100               	movlb	0	; () banked
  9526  0019F0  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  9527  0019F2  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  9528  0019F4                     i2l2362:
  9529                           
  9530                           ; BSR set to: 0
  9531  0019F4  0100               	movlb	0	; () banked
  9532  0019F6  0764               	decf	i2memcpy@n& (0+255),f,b
  9533  0019F8  A0D8               	btfss	status,0,c
  9534  0019FA  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  9535  0019FC  0100               	movlb	0	; () banked
  9536  0019FE  2964               	incf	i2memcpy@n& (0+255),w,b
  9537  001A00  B4D8               	btfsc	status,2,c
  9538  001A02  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  9539  001A04  B4D8               	btfsc	status,2,c
  9540                           
  9541                           ; BSR set to: 0
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;	Return value of i2_memcpy is never used
  9545  001A06  0012               	return	
  9546  001A08  D7E5               	goto	i2l2356
  9547  001A0A                     __end_ofi2_memcpy:
  9548                           	opt stack 0
  9549                           pclatu	equ	0xFFB
  9550                           pclath	equ	0xFFA
  9551                           tblptru	equ	0xFF8
  9552                           tblptrh	equ	0xFF7
  9553                           tblptrl	equ	0xFF6
  9554                           tablat	equ	0xFF5
  9555                           prodh	equ	0xFF4
  9556                           prodl	equ	0xFF3
  9557                           intcon	equ	0xFF2
  9558                           postinc0	equ	0xFEE
  9559                           fsr0h	equ	0xFEA
  9560                           fsr0l	equ	0xFE9
  9561                           wreg	equ	0xFE8
  9562                           indf1	equ	0xFE7
  9563                           fsr1h	equ	0xFE2
  9564                           fsr1l	equ	0xFE1
  9565                           bsr	equ	0xFE0
  9566                           indf2	equ	0xFDF
  9567                           postinc2	equ	0xFDE
  9568                           postdec2	equ	0xFDD
  9569                           fsr2h	equ	0xFDA
  9570                           fsr2l	equ	0xFD9
  9571                           status	equ	0xFD8
  9572                           
  9573 ;; *************** function _SleepIfOkay *****************
  9574 ;; Defined at:
  9575 ;;		line 226 in file "../src/messages.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;		None
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;		None
  9580 ;; Return value:  Size  Location     Type
  9581 ;;		None               void
  9582 ;; Registers used:
  9583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9593 ;;Total ram usage:        0 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    2
  9596 ;; This function calls:
  9597 ;;		_check_msg
  9598 ;;		_enter_sleep_mode
  9599 ;;		_in_high_int
  9600 ;;		_in_low_int
  9601 ;; This function is called by:
  9602 ;;		_InterruptHandlerHigh
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text55
  9607  0018B2                     __ptext55:
  9608                           	opt stack 0
  9609  0018B2                     _SleepIfOkay:
  9610                           	opt stack 17
  9611                           
  9612                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;incstack = 0
  9616  0018B2  0100               	movlb	0	; () banked
  9617  0018B4  67B1               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9618  0018B6  D001               	goto	i2l2910
  9619  0018B8  0012               	return	
  9620  0018BA                     i2l2910:
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;messages.c: 230: }
  9624                           ;messages.c: 233: if (in_low_int()) {
  9625  0018BA  EC25  F00D         	call	_in_low_int	;wreg free
  9626  0018BE  0100               	movlb	0	; () banked
  9627  0018C0  5163               	movf	(?_in_low_int+1)& (0+255),w,b
  9628  0018C2  0100               	movlb	0	; () banked
  9629  0018C4  1162               	iorwf	?_in_low_int& (0+255),w,b
  9630  0018C6  A4D8               	btfss	status,2,c
  9631  0018C8  0012               	return	
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;messages.c: 235: }
  9635                           ;messages.c: 238: if (!in_high_int()) {
  9636                           
  9637                           ; BSR set to: 0
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;messages.c: 234: return;
  9641  0018CA  ECDD  F00E         	call	_in_high_int	;wreg free
  9642  0018CE  0100               	movlb	0	; () banked
  9643  0018D0  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9644  0018D2  0100               	movlb	0	; () banked
  9645  0018D4  1160               	iorwf	?_in_high_int& (0+255),w,b
  9646  0018D6  B4D8               	btfsc	status,2,c
  9647  0018D8  0012               	return	
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;messages.c: 240: }
  9651                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9652                           
  9653                           ; BSR set to: 0
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;messages.c: 239: return;
  9657  0018DA  0103               	movlb	3	; () banked
  9658  0018DC  0E03               	movlw	high _ToMainHigh_MQ
  9659  0018DE  0100               	movlb	0	; () banked
  9660  0018E0  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9661  0018E2  0103               	movlb	3	; () banked
  9662  0018E4  0E00               	movlw	low _ToMainHigh_MQ
  9663  0018E6  0100               	movlb	0	; () banked
  9664  0018E8  6F60               	movwf	check_msg@qptr& (0+255),b
  9665  0018EA  ECEC  F00D         	call	_check_msg	;wreg free
  9666  0018EE  0900               	iorlw	0
  9667  0018F0  A4D8               	btfss	status,2,c
  9668  0018F2  0012               	return	
  9669                           
  9670                           ;messages.c: 247: }
  9671                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9672                           
  9673                           ;messages.c: 246: return;
  9674  0018F4  0102               	movlb	2	; () banked
  9675  0018F6  0E02               	movlw	high _ToMainLow_MQ
  9676  0018F8  0100               	movlb	0	; () banked
  9677  0018FA  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9678  0018FC  0102               	movlb	2	; () banked
  9679  0018FE  0E00               	movlw	low _ToMainLow_MQ
  9680  001900  0100               	movlb	0	; () banked
  9681  001902  6F60               	movwf	check_msg@qptr& (0+255),b
  9682  001904  ECEC  F00D         	call	_check_msg	;wreg free
  9683  001908  0900               	iorlw	0
  9684  00190A  B4D8               	btfsc	status,2,c
  9685                           
  9686                           ;messages.c: 250: }
  9687                           ;messages.c: 251: enter_sleep_mode();
  9688                           
  9689                           ;messages.c: 249: return;
  9690  00190C  EC19  F00F         	call	_enter_sleep_mode	;wreg free
  9691  001910  0012               	return	
  9692  001912                     __end_of_SleepIfOkay:
  9693                           	opt stack 0
  9694                           pclatu	equ	0xFFB
  9695                           pclath	equ	0xFFA
  9696                           tblptru	equ	0xFF8
  9697                           tblptrh	equ	0xFF7
  9698                           tblptrl	equ	0xFF6
  9699                           tablat	equ	0xFF5
  9700                           prodh	equ	0xFF4
  9701                           prodl	equ	0xFF3
  9702                           intcon	equ	0xFF2
  9703                           postinc0	equ	0xFEE
  9704                           fsr0h	equ	0xFEA
  9705                           fsr0l	equ	0xFE9
  9706                           wreg	equ	0xFE8
  9707                           indf1	equ	0xFE7
  9708                           fsr1h	equ	0xFE2
  9709                           fsr1l	equ	0xFE1
  9710                           bsr	equ	0xFE0
  9711                           indf2	equ	0xFDF
  9712                           postinc2	equ	0xFDE
  9713                           postdec2	equ	0xFDD
  9714                           fsr2h	equ	0xFDA
  9715                           fsr2l	equ	0xFD9
  9716                           status	equ	0xFD8
  9717                           
  9718 ;; *************** function _in_low_int *****************
  9719 ;; Defined at:
  9720 ;;		line 33 in file "../src/interrupts.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;		None
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;		None
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  2    2[BANK0 ] int 
  9727 ;; Registers used:
  9728 ;;		wreg, status,2, status,0, cstack
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9738 ;;Total ram usage:        2 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:    1
  9741 ;; This function calls:
  9742 ;;		_in_high_int
  9743 ;; This function is called by:
  9744 ;;		_SleepIfOkay
  9745 ;;		_in_main
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text56
  9750  001A4A                     __ptext56:
  9751                           	opt stack 0
  9752  001A4A                     _in_low_int:
  9753                           	opt stack 17
  9754                           
  9755                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9756                           
  9757                           ;incstack = 0
  9758  001A4A  ACF2               	btfss	intcon,6,c	;volatile
  9759  001A4C  D007               	goto	i2l2530
  9760                           
  9761                           ;interrupts.c: 35: return (0);
  9762  001A4E  0E00               	movlw	0
  9763  001A50  0100               	movlb	0	; () banked
  9764  001A52  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9765  001A54  0E00               	movlw	0
  9766  001A56  0100               	movlb	0	; () banked
  9767  001A58  6F62               	movwf	?_in_low_int& (0+255),b
  9768  001A5A  0012               	return	
  9769  001A5C                     i2l2530:
  9770  001A5C  ECDD  F00E         	call	_in_high_int	;wreg free
  9771  001A60  0100               	movlb	0	; () banked
  9772  001A62  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9773  001A64  0100               	movlb	0	; () banked
  9774  001A66  1160               	iorwf	?_in_high_int& (0+255),w,b
  9775  001A68  B4D8               	btfsc	status,2,c
  9776  001A6A  D007               	goto	i2l2538
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;interrupts.c: 37: return (0);
  9780  001A6C  0E00               	movlw	0
  9781  001A6E  0100               	movlb	0	; () banked
  9782  001A70  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9783  001A72  0E00               	movlw	0
  9784  001A74  0100               	movlb	0	; () banked
  9785  001A76  6F62               	movwf	?_in_low_int& (0+255),b
  9786  001A78  0012               	return	
  9787  001A7A                     i2l2538:
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;interrupts.c: 39: return (1);
  9791  001A7A  0E00               	movlw	0
  9792  001A7C  0100               	movlb	0	; () banked
  9793  001A7E  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9794  001A80  0E01               	movlw	1
  9795  001A82  0100               	movlb	0	; () banked
  9796  001A84  6F62               	movwf	?_in_low_int& (0+255),b
  9797  001A86  0012               	return	
  9798  001A88                     __end_of_in_low_int:
  9799                           	opt stack 0
  9800                           pclatu	equ	0xFFB
  9801                           pclath	equ	0xFFA
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           postinc0	equ	0xFEE
  9810                           fsr0h	equ	0xFEA
  9811                           fsr0l	equ	0xFE9
  9812                           wreg	equ	0xFE8
  9813                           indf1	equ	0xFE7
  9814                           fsr1h	equ	0xFE2
  9815                           fsr1l	equ	0xFE1
  9816                           bsr	equ	0xFE0
  9817                           indf2	equ	0xFDF
  9818                           postinc2	equ	0xFDE
  9819                           postdec2	equ	0xFDD
  9820                           fsr2h	equ	0xFDA
  9821                           fsr2l	equ	0xFD9
  9822                           status	equ	0xFD8
  9823                           
  9824 ;; *************** function _in_high_int *****************
  9825 ;; Defined at:
  9826 ;;		line 25 in file "../src/interrupts.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;		None
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;		None
  9831 ;; Return value:  Size  Location     Type
  9832 ;;                  2    0[BANK0 ] int 
  9833 ;; Registers used:
  9834 ;;		wreg, status,2
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9844 ;;Total ram usage:        2 bytes
  9845 ;; Hardware stack levels used:    1
  9846 ;; This function calls:
  9847 ;;		Nothing
  9848 ;; This function is called by:
  9849 ;;		_in_low_int
  9850 ;;		_SleepIfOkay
  9851 ;;		_in_main
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           	psect	text57
  9856  001DBA                     __ptext57:
  9857                           	opt stack 0
  9858  001DBA                     _in_high_int:
  9859                           	opt stack 17
  9860                           
  9861                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;incstack = 0
  9865  001DBA  0E00               	movlw	0
  9866  001DBC  AEF2               	btfss	intcon,7,c	;volatile
  9867  001DBE  0E01               	movlw	1
  9868  001DC0  0100               	movlb	0	; () banked
  9869  001DC2  6F60               	movwf	?_in_high_int& (0+255),b
  9870  001DC4  0100               	movlb	0	; () banked
  9871  001DC6  6B61               	clrf	(?_in_high_int+1)& (0+255),b
  9872  001DC8  0012               	return	
  9873  001DCA                     __end_of_in_high_int:
  9874                           	opt stack 0
  9875                           pclatu	equ	0xFFB
  9876                           pclath	equ	0xFFA
  9877                           tblptru	equ	0xFF8
  9878                           tblptrh	equ	0xFF7
  9879                           tblptrl	equ	0xFF6
  9880                           tablat	equ	0xFF5
  9881                           prodh	equ	0xFF4
  9882                           prodl	equ	0xFF3
  9883                           intcon	equ	0xFF2
  9884                           postinc0	equ	0xFEE
  9885                           fsr0h	equ	0xFEA
  9886                           fsr0l	equ	0xFE9
  9887                           wreg	equ	0xFE8
  9888                           indf1	equ	0xFE7
  9889                           fsr1h	equ	0xFE2
  9890                           fsr1l	equ	0xFE1
  9891                           bsr	equ	0xFE0
  9892                           indf2	equ	0xFDF
  9893                           postinc2	equ	0xFDE
  9894                           postdec2	equ	0xFDD
  9895                           fsr2h	equ	0xFDA
  9896                           fsr2l	equ	0xFD9
  9897                           status	equ	0xFD8
  9898                           
  9899 ;; *************** function _enter_sleep_mode *****************
  9900 ;; Defined at:
  9901 ;;		line 202 in file "../src/messages.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;		None
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;		None
  9906 ;; Return value:  Size  Location     Type
  9907 ;;		None               void
  9908 ;; Registers used:
  9909 ;;		None
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9919 ;;Total ram usage:        0 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; This function calls:
  9922 ;;		Nothing
  9923 ;; This function is called by:
  9924 ;;		_SleepIfOkay
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928                           	psect	text58
  9929  001E32                     __ptext58:
  9930                           	opt stack 0
  9931  001E32                     _enter_sleep_mode:
  9932                           	opt stack 18
  9933                           
  9934                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9935                           
  9936                           ; BSR set to: 0
  9937                           ;incstack = 0
  9938  001E32  8ED3               	bsf	4051,7,c	;volatile
  9939  001E34  0003               	sleep		;# 
  9940  001E36  0012               	return	
  9941  001E38                     __end_of_enter_sleep_mode:
  9942                           	opt stack 0
  9943                           pclatu	equ	0xFFB
  9944                           pclath	equ	0xFFA
  9945                           tblptru	equ	0xFF8
  9946                           tblptrh	equ	0xFF7
  9947                           tblptrl	equ	0xFF6
  9948                           tablat	equ	0xFF5
  9949                           prodh	equ	0xFF4
  9950                           prodl	equ	0xFF3
  9951                           intcon	equ	0xFF2
  9952                           postinc0	equ	0xFEE
  9953                           fsr0h	equ	0xFEA
  9954                           fsr0l	equ	0xFE9
  9955                           wreg	equ	0xFE8
  9956                           indf1	equ	0xFE7
  9957                           fsr1h	equ	0xFE2
  9958                           fsr1l	equ	0xFE1
  9959                           bsr	equ	0xFE0
  9960                           indf2	equ	0xFDF
  9961                           postinc2	equ	0xFDE
  9962                           postdec2	equ	0xFDD
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function _check_msg *****************
  9968 ;; Defined at:
  9969 ;;		line 220 in file "../src/messages.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9972 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;		None
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  1    wreg      unsigned char 
  9977 ;; Registers used:
  9978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9987 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9988 ;;Total ram usage:        3 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; This function calls:
  9991 ;;		Nothing
  9992 ;; This function is called by:
  9993 ;;		_SleepIfOkay
  9994 ;;		_block_on_To_msgqueues
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           	psect	text59
  9999  001BD8                     __ptext59:
 10000                           	opt stack 0
 10001  001BD8                     _check_msg:
 10002                           	opt stack 18
 10003                           
 10004                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
 10005                           
 10006                           ;incstack = 0
 10007  001BD8  0100               	movlb	0	; () banked
 10008  001BDA  EE20 F089          	lfsr	2,137
 10009  001BDE  0100               	movlb	0	; () banked
 10010  001BE0  5160               	movf	check_msg@qptr& (0+255),w,b
 10011  001BE2  26D9               	addwf	fsr2l,f,c
 10012  001BE4  0100               	movlb	0	; () banked
 10013  001BE6  5161               	movf	(check_msg@qptr+1)& (0+255),w,b
 10014  001BE8  22DA               	addwfc	fsr2h,f,c
 10015  001BEA  50DF               	movf	indf2,w,c
 10016  001BEC  0100               	movlb	0	; () banked
 10017  001BEE  6F62               	movwf	??_check_msg& (0+255),b
 10018  001BF0  0100               	movlb	0	; () banked
 10019  001BF2  5162               	movf	??_check_msg& (0+255),w,b
 10020  001BF4  0D11               	mullw	17
 10021  001BF6  50F3               	movf	prodl,w,c
 10022  001BF8  0100               	movlb	0	; () banked
 10023  001BFA  2560               	addwf	check_msg@qptr& (0+255),w,b
 10024  001BFC  6ED9               	movwf	fsr2l,c
 10025  001BFE  50F4               	movf	prodh,w,c
 10026  001C00  0100               	movlb	0	; () banked
 10027  001C02  2161               	addwfc	(check_msg@qptr+1)& (0+255),w,b
 10028  001C04  6EDA               	movwf	fsr2h,c
 10029  001C06  50DF               	movf	indf2,w,c
 10030  001C08  0012               	return	
 10031  001C0A                     __end_of_check_msg:
 10032                           	opt stack 0
 10033  0000                     pclatu	equ	0xFFB
 10034                           pclath	equ	0xFFA
 10035                           tblptru	equ	0xFF8
 10036                           tblptrh	equ	0xFF7
 10037                           tblptrl	equ	0xFF6
 10038                           tablat	equ	0xFF5
 10039                           prodh	equ	0xFF4
 10040                           prodl	equ	0xFF3
 10041                           intcon	equ	0xFF2
 10042                           postinc0	equ	0xFEE
 10043                           fsr0h	equ	0xFEA
 10044                           fsr0l	equ	0xFE9
 10045                           wreg	equ	0xFE8
 10046                           indf1	equ	0xFE7
 10047                           fsr1h	equ	0xFE2
 10048                           fsr1l	equ	0xFE1
 10049                           bsr	equ	0xFE0
 10050                           indf2	equ	0xFDF
 10051                           postinc2	equ	0xFDE
 10052                           postdec2	equ	0xFDD
 10053                           fsr2h	equ	0xFDA
 10054                           fsr2l	equ	0xFD9
 10055                           status	equ	0xFD8
 10056                           pclatu	equ	0xFFB
 10057                           pclath	equ	0xFFA
 10058                           tblptru	equ	0xFF8
 10059                           tblptrh	equ	0xFF7
 10060                           tblptrl	equ	0xFF6
 10061                           tablat	equ	0xFF5
 10062                           prodh	equ	0xFF4
 10063                           prodl	equ	0xFF3
 10064                           intcon	equ	0xFF2
 10065                           postinc0	equ	0xFEE
 10066                           fsr0h	equ	0xFEA
 10067                           fsr0l	equ	0xFE9
 10068                           wreg	equ	0xFE8
 10069                           indf1	equ	0xFE7
 10070                           fsr1h	equ	0xFE2
 10071                           fsr1l	equ	0xFE1
 10072                           bsr	equ	0xFE0
 10073                           indf2	equ	0xFDF
 10074                           postinc2	equ	0xFDE
 10075                           postdec2	equ	0xFDD
 10076                           fsr2h	equ	0xFDA
 10077                           fsr2l	equ	0xFD9
 10078                           status	equ	0xFD8
 10079                           
 10080                           	psect	param0
 10081  0000                     pclatu	equ	0xFFB
 10082                           pclath	equ	0xFFA
 10083                           tblptru	equ	0xFF8
 10084                           tblptrh	equ	0xFF7
 10085                           tblptrl	equ	0xFF6
 10086                           tablat	equ	0xFF5
 10087                           prodh	equ	0xFF4
 10088                           prodl	equ	0xFF3
 10089                           intcon	equ	0xFF2
 10090                           postinc0	equ	0xFEE
 10091                           fsr0h	equ	0xFEA
 10092                           fsr0l	equ	0xFE9
 10093                           wreg	equ	0xFE8
 10094                           indf1	equ	0xFE7
 10095                           fsr1h	equ	0xFE2
 10096                           fsr1l	equ	0xFE1
 10097                           bsr	equ	0xFE0
 10098                           indf2	equ	0xFDF
 10099                           postinc2	equ	0xFDE
 10100                           postdec2	equ	0xFDD
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         641
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      95
    BANK0           160     61     118
    BANK1           256    146     160
    BANK2           256      0     138
    BANK3           256      0     138
    BANK4           256      0     138
    BANK5           256      0     138
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    retrieve_sensor_values@sensor_bank_ventril	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_ventril(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_front	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_front(COMRAM[14]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK2[14]), ToMainHigh_MQ.data(BANK3[14]), FromMainLow_MQ.data(BANK4[14]), FromMainHigh_MQ.data(BANK5[14]), 
		 -> ToMainLow_MQ.queue.data(BANK2[14]), ToMainHigh_MQ.queue.data(BANK3[14]), FromMainHigh_MQ.queue.data(BANK5[14]), FromMainLow_MQ.queue.data(BANK4[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@move_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), 
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK2[14]), ToMainHigh_MQ.data(BANK3[14]), FromMainLow_MQ.data(BANK4[14]), FromMainHigh_MQ.data(BANK5[14]), 
		 -> ToMainLow_MQ.queue.data(BANK2[14]), ToMainHigh_MQ.queue.data(BANK3[14]), FromMainHigh_MQ.queue.data(BANK5[14]), FromMainLow_MQ.queue.data(BANK4[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@move_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), 
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    uart_frame_message@inner	PTR unsigned char  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    uart_frame_message@outer	PTR unsigned char  size(2) Largest target is 18
		 -> uart_transmit_interrupt_handler@message(BANK0[18]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> timer1_lthread@move_msg(BANK1[14]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_side	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_side(BANK0[14]), 

    i2c_configure_slave@ptr_thingy	PTR unsigned char  size(2) Largest target is 1
		 -> main@need_sensor_data(BANK1[1]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@need_sensor_data(BANK1[1]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@sensor_bank_side(BANK0[14]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> timer1_lthread@move_msg(BANK1[14]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 15
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), main@msgbuffer(BANK1[15]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    sp__memcpy	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@move_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_retrieve_sensor_values
    _retrieve_sensor_values->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                98    98      0   16402
                                             52 BANK1     94    94      0
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      23    15      8    6017
                                             29 BANK1     23    15      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (2) _send_uart_message                                    3     1      2    2770
                                             26 BANK1      3     1      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _FromMainLow_sendmsg                                  4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (4) _send_msg                                            12     6      6    1798
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  3     1      2     127
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1829
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     158
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    5357
                                             56 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                     16    16      0    1629
                                             29 COMRAM    16    16      0
                _FromMainLow_recvmsg
                 _uart_frame_message
 ---------------------------------------------------------------------------------
 (8) _uart_frame_message                                   8     4      4     528
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4     907
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      30    30      0    2088
                                             26 COMRAM    30    30      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    1640
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    1521
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    5548
                                             47 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    2441
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    12    12      0    2851
                                             37 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                              _blip4
                       _handle_start
             _retrieve_sensor_values
                             i2_blip
                            i2_blip1
                            i2_blip2
                            i2_blip3
 ---------------------------------------------------------------------------------
 (13) i2_blip3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _retrieve_sensor_values                             10     4      6    1246
                                             29 BANK0      8     2      6
               _FromMainHigh_recvmsg
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1013
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7     735
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _blip4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1203
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     713
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
     _blink0
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
     _uart_frame_message

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _blip4
     _handle_start
     _retrieve_sensor_values
       _FromMainHigh_recvmsg
         i2_recv_msg
           i2_memcpy
     i2_blip
     i2_blip1
     i2_blip2
     i2_blip3
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      8A      16       53.9%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      8A      14       53.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8A      12       53.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      8A      10       53.9%
BITBANK1           100      0       0       7        0.0%
BANK1              100     92      A0       8       62.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      76       5       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39D       6        0.0%
DATA                 0      0     39D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 15 20:15:31 2014

                                 ??_debug_configure 0100                     __size_of_retrieve_sensor_values 003A  
                          _MQ_Main_Willing_to_block 00B1                                         _SSPSTATbits 000FC7  
                uart_receive_interrupt_handler@done 004B                           __end_of_ToMainLow_recvmsg 1B6C  
                                                bsr 000FE0                           __end_of_ToMainLow_sendmsg 1D32  
                                      __CFG_CP0$OFF 000000                                   i2recv_msg@msgtype 006D  
                                 i2recv_msg@tlength 0074                                ?_FromMainLow_recvmsg 0019  
                                               l114 0930                                                 l566 1D08  
                                               l567 1D0A                                                 l594 1ABA  
                                               l595 1ABC                                ?_FromMainLow_sendmsg 0116  
                              __size_of_WriteTimer0 0012                                __size_of_WriteTimer1 0012  
                                  ??_uart_configure 0100                                      _FromMainLow_MQ 0400  
                                               prod 000FF3                                                 wreg 000FE8  
                                        _TXSTA1bits 000FAD                                        __CFG_IESO$ON 000000  
                                      ?_in_high_int 0060                                     ReadTimer1@timer 0003  
                               i2recv_msg@maxlength 006C                                                l1143 18A8  
                                              l3514 182A                                                l3532 0E96  
                                              l3702 0CE0                                                l3472 19A4  
                                              l3712 0D14                                                l3466 1984  
                                              l3570 189A                                                l3562 1864  
                                              l3722 0D48                                                l3810 0888  
                                              l3548 0F50                                                l3564 1870  
                                              l3732 0D7C                                                l3820 08BC  
                                              l3486 10C0                                                l3566 1876  
                                              l3742 0DA6                                                l3832 0936  
                                              l3816 08AE                                                l3746 0DB4  
                                              l3826 08EE                                                l3834 094E  
                                              l3748 0DD8                                                l3692 0CAC  
                                              l3860 0A1E                                                l3852 09BC  
                                              l3854 09FE                                                l3880 0A82  
                                              l3890 0AB8                                                l3874 0A62  
                                              l3868 0A42                                                l3886 0AA2  
                                              l3894 0AC4                                                _LATB 000F8A  
                                              i1l52 007A                                         main@myByte1 0143  
                                       main@myByte2 0144                                     _FromMainHigh_MQ 0500  
                                              _blip 1E02                                          i1_recv_msg 132C  
                                              _main 07E2                                                fsr0h 000FEA  
                                              fsr1h 000FE2                                                fsr0l 000FE9  
                                              fsr2h 000FDA                                                indf1 000FE7  
                                              fsr1l 000FE1                                                indf2 000FDF  
                                              fsr2l 000FD9                              __CFG_DSWDTOSC$T1OSCREF 000000  
                                       main@msgtype 016B                                          i1_send_msg 14C8  
                                              pclat 000FFA                                                prodh 000FF4  
                                   __end_ofi2_blip1 1E22                                                prodl 000FF3  
                                   __end_ofi2_blip2 1E1A                                     __end_ofi2_blip3 1E12  
                             handle_start@data_read 0060                                                start 00C0  
                                        i2_recv_msg 0F54                                          i2_send_msg 115E  
                      retrieve_sensor_values@length 0083                           ToMainHigh_recvmsg@msgtype 0118  
                                    send_msg@length 010C                         __size_of_timer0_int_handler 006E  
                                     __CFG_PLLDIV$3 000000              uart_receive_interrupt_handler@checksum 0035  
                             ??_FromMainLow_recvmsg 001D                                               ?_blip 0001  
                             ??_FromMainLow_sendmsg 0119                                               ?_main 0001  
                                             _T0CON 000FD5                                               _T1CON 000FCD  
                                             i1l422 0C84                                     __end_of___lwmod 18B2  
                                        i1memcpy@d1 0001                                               i2l310 017A  
                                             i2l304 0602                                               i2l306 0148  
                                             i2l333 043A                                               i2l342 0610  
                                             i2l288 147C                                          i1memcpy@s1 0003  
                       FromMainHigh_recvmsg@msgtype 0078                                               _TMR0H 000FD7  
                                             _TMR1H 000FCF                                               _TMR0L 000FD6  
                                             _TMR1L 000FCE                                               _TRISB 000F93  
                                             _TRISD 000F95                                          i2memcpy@d1 0060  
                                    __CFG_FCMEN$OFF 000000                                          i2memcpy@s1 0062  
                                      ?_init_queues 0001                           __size_of_enter_sleep_mode 0006  
                                             _blip1 1DFA                                               _blip2 1DF2  
                                             _blip3 1DEA                                               _blip4 1E2A  
                            _retrieve_sensor_values 1AC4         uart_receive_interrupt_handler@message_count 0034  
                        ToMainLow_recvmsg@maxlength 011C                                               main@z 0167  
                           timer0_lthread@msgbuffer 0106                                      __CFG_T1DIG$OFF 000000  
                           i2c_configure_slave@addr 0102                                main@need_sensor_data 0164  
                                             tablat 000FF5                             uart_frame_message@inner 0001  
                                             status 000FD8                             uart_frame_message@outer 0003  
                                  __end_ofi1_memcpy 1A4A                                    __end_ofi2_memcpy 1A0A  
                                   __initialization 1616                                        __end_of_blip 1E0A  
                                      __end_of_main 0AFA                                          _ReadTimer1 1D96  
                       __size_of_timer1_int_handler 002C                          __size_of_ToMainLow_recvmsg 0036  
                        __size_of_ToMainLow_sendmsg 0024                       __size_of_FromMainHigh_recvmsg 0036  
                                    __CFG_OSC$HSPLL 000000                       __size_of_FromMainHigh_sendmsg 002E  
                                            ??_blip 0100                                              ??_main 0134  
                                   send_msg@msgtype 010D                                       __activetblptr 000002  
                                   send_msg@tlength 0111                          FromMainLow_sendmsg@msgtype 0116  
                              __end_of_handle_start 14C8                                              ?_blip1 0001  
                                            ?_blip2 0001                                              ?_blip3 0001  
                                            ?_blip4 0001                                              _T1GCON 000F9A  
                                         ??i2_blip1 0060                                           ??i2_blip2 0060  
                                         ??i2_blip3 0060                                              i1l3000 0C10  
                                            i1l3008 0C3C                                              i1l3040 15A0  
                                            i1l3028 0C98                                              i1l2422 1A1C  
                                            i1l2502 1372                                              i1l2428 1A38  
                                            i1l3068 15F0                                              i1l2454 1500  
                                            i1l2518 13FA                                              i1l3282 0070  
                                            i1l2660 12D0                                              i1l3276 0066  
                                            i1l2662 12FE                                              i1l2654 1282  
                                            i1l2658 12B0                                              i1l2950 0B40  
                                            i2l2400 0FB4                                              i1l2970 0B7A  
                                            i1l2956 0B46                                              i1l2972 0B7C  
                                            i1l2958 0B4C                                              i2l2416 106E  
                                            i1l2984 0BB2                                          _OpenTimer0 1CE8  
                                            i2l2530 1A5C                                              i2l2362 19F4  
                                        _OpenTimer1 1A88                                              i2l2356 19D4  
                                            i2l3262 16CE                                      __CFG_WDTEN$OFF 000000  
                                            i2l2624 1498                                              i2l2538 1A7A  
                                            i2l2626 14B0                                              i2l2802 0314  
                                            i2l2820 03C8                                              i2l3268 16D8  
                                            i2l2910 18BA                                              i2l2478 11AC  
                                            i2l2824 03D0                                              i2l2744 0140  
                                            i2l2818 0386                                              i2l2762 01A6  
                                            i2l2738 0132                                              i2l2764 01D2  
                                            i2l2774 020C                                              i2l2862 05D6  
                                            i2l2784 024A                                              i2l2890 078A  
                                            i2l2882 06F8                                              i2l2874 0672  
                                            i2l2786 028A                                              i2l2868 0614  
                                            i2l2798 030A                                              i2l2896 07B0  
                                            _RCREG1 000FAF                         __end_of_i2c_configure_slave 1B36  
                                     ??_SleepIfOkay 0064                                              _OSCCON 000FD3  
                                            _SPBRG1 000FB0                                         ?i1_recv_msg 000B  
                                            _SSPADD 000FC8                                      __CFG_WPCFG$OFF 000000  
                                            _SSPBUF 000FC9                                              _TXREG1 000FAE  
                                       ?i1_send_msg 000B                                              i2_blip 1E22  
                                timer0_lthread@tptr 0100                                      __CFG_WPDIS$OFF 000000  
                           FromMainLow_recvmsg@data 001B                                         ?i2_recv_msg 006A  
                                       ?i2_send_msg 006A                                      __CFG_XINST$OFF 000000  
                        __end_of_uart_frame_message 132C                    ??_uart_receive_interrupt_handler 001B  
                   ?_uart_receive_interrupt_handler 0001                                     _i2c_int_handler 00C4  
                                            _blink0 1E38                                    OpenTimer0@config 0100  
                                            _ic_ptr 00D3                                           ??___lwmod 0104  
                                     main@msgbuffer 0145                                    __end_of_init_i2c 17EE  
                                  OpenTimer1@config 0102                                              _memcpy 196A  
                                            clear_0 161C                                              clear_1 1628  
                                            clear_2 1634                                              clear_3 1640  
                                            clear_4 164C                                              clear_5 1658  
                                            clear_6 1664                                              main@ic 016C  
                                  __end_of_recv_msg 0F54       uart_transmit_interrupt_handler@message_status 002D  
                                  __end_of_send_msg 115E                              timer1_lthread@move_msg 0125  
                                      __pdataCOMRAM 005F                               timer0_int_handler@val 0081  
                           i2c_int_handler@i2c_data 008B                                              tblptrh 000FF7  
                                            tblptrl 000FF6                                              tblptru 000FF8  
              uart_receive_interrupt_handler@msg_id 0038                                         init_queue@i 0102  
              uart_receive_interrupt_handler@status 002B                            ToMainLow_recvmsg@msgtype 0118  
                              __size_of_in_high_int 0010                             FromMainLow_sendmsg@data 0117  
                                   _debug_configure 1DD8                uart_transmit_interrupt_handler@index 0050  
                                        __accesstop 0060                             __end_of__initialization 168E  
                        __end_of_ToMainHigh_recvmsg 1BA2                          __end_of_ToMainHigh_sendmsg 1C94  
                               uart_frame_message@i 0008                                     __CFG_IOL1WAY$ON 000000  
                              __CFG_WPEND$PAGE_WPFP 000000                                    _need_sensor_data 00AF  
           retrieve_sensor_values@sensor_bank_front 007F                         __end_of_init_timer1_lthread 1D84  
                               __end_of_SleepIfOkay 1912                                      __pcstackCOMRAM 0001  
                i2c_int_handler@sensor_bank_ventril 0192                                        __pidataBANK0 1E3D  
                                       ?_ReadTimer1 0001                                       __end_of_blip1 1E02  
                                     __end_of_blip2 1DFA                                       __end_of_blip3 1DF2  
                                     __end_of_blip4 1E32                     send_uart_message@message_q_code 011C  
                                __size_of_check_msg 0032                                     __CFG_DSWDTPS$G2 000000  
                         timer0_int_handler@msgtype 007F                                 __size_ofi1_recv_msg 00D2  
                               __size_ofi1_send_msg 00AA                                           ?i1_memcpy 0001  
                     __size_of_InterruptHandlerHigh 170E                         __end_of_InterruptHandlerLow 00C0  
                                         ?i2_memcpy 0060                                       _ToMainHigh_MQ 0300  
                               __size_ofi2_recv_msg 011E                                    _enter_sleep_mode 1E32  
                               __size_ofi2_send_msg 00EC                                timer1_lthread@length 0121  
                                           ??_blip1 0100                                             ??_blip2 0100  
                                           ??_blip3 0100                                             ??_blip4 0060  
                                     check_msg@qptr 0060                                timer1_lthread@retval 0133  
                              __size_of_init_queues 0058                                          __pbssBANK0 009D  
                                        __pbssBANK1 0192                                          __pbssBANK2 0200  
                                        __pbssBANK3 0300                                          __pbssBANK4 0400  
                                        __pbssBANK5 0500                                         ?_OpenTimer0 0001  
                                       ?_OpenTimer1 0100                                             ?i2_blip 0001  
                           __end_of_i2c_int_handler 07E2                                  timer1_lthread@tptr 011D  
            retrieve_sensor_values@sensor_bank_side 007D                                             ?_blink0 0001  
                                 recv_msg@maxlength 010C                                     recv_msg@msgtype 010D  
                                   recv_msg@tlength 0114                               __size_of_handle_start 00CA  
                                  WriteTimer0@timer 0062                                             ?_memcpy 0100  
                                  WriteTimer1@timer 0003                                       ??_WriteTimer0 0062  
                                     ??_WriteTimer1 0003                             __size_of_timer0_lthread 000E  
                           __size_of_timer1_lthread 0196                             ?_retrieve_sensor_values 007D  
                                        ??i1_memcpy 0007                                          ??i2_memcpy 0066  
                           __end_of_debug_configure 1DE2                                             _SPBRGH1 000F7F  
                                  i1send_msg@length 000D                    i2c_int_handler@sensor_bank_front 0051  
                                           _SSPCON1 000FC6                                             _SSPCON2 000FC5  
                                           _SSPSTAT 000FC7                                 __size_of_ReadTimer1 0012  
                                 __end_of_check_msg 1C0A                                             i2_blip1 1E1A  
                                           i2_blip2 1E12                                             i2_blip3 1E0A  
                                         ?_init_i2c 0100                                         _SleepIfOkay 18B2  
                                 _send_uart_message 1D52                     i2c_int_handler@sensor_bank_side 00C5  
                                   __size_ofi2_blip 0008                                           ?_recv_msg 010A  
                                        _in_low_int 1A4A                                        _handle_start 13FE  
                                           __Hparam 0000                                           ?_send_msg 010A  
                                           __Lparam 0000                                  ?_send_uart_message 011A  
         uart_receive_interrupt_handler@status_2231 002C                          __end_of_timer0_int_handler 1784  
                       __end_of_FromMainLow_recvmsg 1CE8                         __end_of_FromMainLow_sendmsg 1C38  
                                           ___lwmod 1852                                     __size_of_blink0 0004  
                                   __CFG_STVREN$OFF 000000                                 ??_send_uart_message 011C  
                                           __pcinit 1616                                     __size_of_memcpy 0050  
                                        _init_queue 17EE                                             __ramtop 0F00  
                               __size_of_OpenTimer0 0026                                 __size_of_OpenTimer1 003C  
                                           __ptext0 07E2                                             __ptext1 1D32  
                                           __ptext2 0CA0                                             __ptext3 1D52  
                                           __ptext4 1C0A                                             __ptext5 1E38  
                                           __ptext6 1852                                             __ptext7 1C38  
                                           __ptext8 1072                                             __ptext9 1DCA  
                    __end_of_retrieve_sensor_values 1AFE                                           _T0CONbits 000FD5  
                                 OpenTimer1@config1 0100                                           _T1CONbits 000FCD  
                     i2c_configure_slave@ptr_thingy 0100                                 __end_of_WriteTimer0 1DBA  
                               __end_of_WriteTimer1 1D96                                             main@jjj 0165  
                                    __pintcode_body 1698                        __end_of_FromMainHigh_recvmsg 1BD8  
                              end_of_initialization 168E                             timer1_lthread@msgbuffer 0123  
                      __end_of_FromMainHigh_sendmsg 1C66                          FromMainHigh_sendmsg@length 0119  
                         __end_of_send_uart_message 1D72                             timer1_lthread@move_time 00D5  
                                           memcpy@d 0106                                             memcpy@n 0104  
                                           memcpy@s 0108                                          ??_init_i2c 0102  
                                      ??i1_recv_msg 0012                             __size_of_uart_configure 0020  
                       i2c_int_handler@data_written 0089                                       __Lmediumconst 0000  
                                           int_func 1698                                        ??i1_send_msg 0011  
          uart_receive_interrupt_handler@bad_end_id 0033          uart_receive_interrupt_handler@bad_start_id 0032  
                                  ?_i2c_int_handler 0001                                        ??i2_recv_msg 0071  
                                        ??_recv_msg 0111                                        ??i2_send_msg 0070  
                                        ??_send_msg 0110     uart_receive_interrupt_handler@gooey_uart_center 001D  
                        __end_of_timer1_int_handler 1CC0                                             postdec2 000FDD  
                                           postinc0 000FEE                                             postinc2 000FDE  
                         ToMainHigh_sendmsg@msgtype 0076                                           _PORTBbits 000F81  
                                  __CFG_DSBOREN$OFF 000000                                  _uart_frame_message 124A  
                                __end_ofi1_recv_msg 13FE                                    __CFG_CPUDIV$OSC1 000000  
                                __end_ofi1_send_msg 1572                         FromMainHigh_sendmsg@msgtype 0116  
            __end_of_uart_receive_interrupt_handler 0CA0             __size_of_uart_receive_interrupt_handler 01A6  
                    _uart_receive_interrupt_handler 0AFA                                    ?_debug_configure 0001  
                                         _TRISBbits 000F93                                           _TRISCbits 000F94  
                                __end_ofi2_recv_msg 1072                                  __end_ofi2_send_msg 124A  
                               ?_uart_frame_message 0001                       FromMainHigh_recvmsg@maxlength 007C  
                          timer1_int_handler@result 001B                                   __CFG_WPFP$PAGE_63 000000  
                                        main@length 016A                                         ?_in_low_int 0062  
                                    __end_ofi2_blip 1E2A                               timer0_lthread@msgtype 0102  
                               __CFG_MSSP7B_EN$MSK7 000000                        __size_of_i2c_configure_slave 0038  
                          __end_of_enter_sleep_mode 1E38                                        ??_ReadTimer1 0003  
                              ??_uart_frame_message 0005                                  _ToMainHigh_recvmsg 1B6C  
                                         i1memcpy@d 0007                                  _ToMainHigh_sendmsg 1C66  
                                         i1memcpy@n 0005                                           i1memcpy@s 0009  
                                       _BAUDCONbits 000F7E                                      __end_of_blink0 1E3C  
                                     __pidataCOMRAM 1E3C                                      _timer0_lthread 1DCA  
                                       ?_init_queue 0100                                           i2memcpy@d 0066  
                                       _WriteTimer0 1DA8                                         _WriteTimer1 1D84  
                                         i2memcpy@n 0064                                           i2memcpy@s 0068  
                                    _timer1_lthread 0CA0                                      __end_of_memcpy 19BA  
                                 _enable_interrupts 1DE2                                    __CFG_DSWDTEN$OFF 000000  
                               ?_ToMainHigh_recvmsg 0118                            i2c_int_handler@data_read 008E  
                               ?_ToMainHigh_sendmsg 0076                                  ?_enable_interrupts 0001  
                               start_initialization 1616                                       ??_in_high_int 0062  
      uart_receive_interrupt_handler@start_byte_bad 004F                                   __size_ofi1_memcpy 0040  
                                 __size_ofi2_memcpy 0050                           FromMainLow_sendmsg@length 0119  
                               ??_enable_interrupts 0100                                        ??_OpenTimer0 0100  
                                      ??_OpenTimer1 0101                                  __end_of_ReadTimer1 1DA8  
                   uart_receive_interrupt_handler@i 0036                          __size_of_send_uart_message 0020  
                                 main@uart_response 0156              uart_transmit_interrupt_handler@message 00B3  
                                          ??i2_blip 0060                        __end_of_InterruptHandlerHigh 1716  
                                        init_i2c@ic 0100                                ??_ToMainHigh_recvmsg 011C  
                              ??_ToMainHigh_sendmsg 0079              uart_transmit_interrupt_handler@msgtype 002C  
                            __end_of_timer0_lthread 1DD8                                            ??_blink0 0100  
                          i2c_int_handler@error_buf 0086                                         __pdataBANK0 00D5  
                            __end_of_timer1_lthread 0E36                                    __CFG_LPT1OSC$OFF 000000  
                         __end_of_enable_interrupts 1DEA                                            ??_memcpy 0106  
                             timer1_lthread@msgtype 011F                                _FromMainHigh_recvmsg 1BA2  
uart_receive_interrupt_handler@bad_checksum_message 002D                 uart_receive_interrupt_handler@frame 009D  
               uart_receive_interrupt_handler@index 004D                                _FromMainHigh_sendmsg 1C38  
               uart_receive_interrupt_handler@error 004C                        __size_of_init_timer1_lthread 0012  
                                __end_of_OpenTimer0 1D0E                                  __end_of_OpenTimer1 1AC4  
                          i2c_int_handler@msg_ready 008D                                         __pbssCOMRAM 004A  
                                     ??_init_queues 0103                                       __pcstackBANK0 0060  
                                     __pcstackBANK1 0100                                 __size_of_in_low_int 003E  
                                          ?i2_blip1 0001                                            ?i2_blip2 0001  
                                          ?i2_blip3 0001                            ToMainLow_sendmsg@msgtype 0017  
                      __size_of_InterruptHandlerLow 00A8                                 __end_of_in_high_int 1DCA  
                                    _uart_configure 1D32                                        ?_SleepIfOkay 0001  
                             ToMainLow_recvmsg@data 011A                                        _ToMainLow_MQ 0200  
                               __size_of_init_queue 0064                                           _check_msg 1BD8  
                                         __pnvBANK0 00D3                                   __size_of_init_i2c 006A  
                                      recv_msg@data 010F                                        recv_msg@qmsg 0116  
                                      recv_msg@slot 0113                                        recv_msg@qptr 010A  
                                 __size_of_recv_msg 011E                                           __pintcode 0008  
                                 __size_of_send_msg 00EC                                     ?_timer0_lthread 0100  
                                          ?___lwmod 0100                               ?_FromMainHigh_recvmsg 0078  
                                   ?_timer1_lthread 011D                               ?_FromMainHigh_sendmsg 0116  
                                       __pintcodelo 0018                              ToMainHigh_recvmsg@data 011A  
                        i2c_int_handler@msg_to_send 008C                                   WriteTimer0@timer0 0060  
                                _timer0_int_handler 1716                          uart_frame_message@checksum 0007  
                                 WriteTimer1@timer1 0001                                __CFG_RTCOSC$T1OSCREF 000000  
                             ToMainLow_sendmsg@data 0018                                      __size_of_blip1 0008  
                                    __size_of_blip2 0008                                      __size_of_blip3 0008  
                                    __size_of_blip4 0008                              __end_of_uart_configure 1D52  
                               i1recv_msg@maxlength 000D                                 ?_timer0_int_handler 0001  
      uart_receive_interrupt_handler@bad_counter_id 0030                                 __end_of_init_queues 196A  
                                          _LATBbits 000F8A                                            _LATDbits 000F8C  
                                        ?_check_msg 0060                                            _IPR1bits 000F9F  
                                          _PIE1bits 000F9D                       retrieve_sensor_values@msgtype 0084  
                                          _PIR1bits 000F9E                              ToMainHigh_sendmsg@data 0077  
                                          _RCONbits 000FD0                                    __CFG_WDTPS$32768 000000  
                                    i1recv_msg@data 0010                                ??_timer0_int_handler 007D  
                                    i1recv_msg@qmsg 0017                                      i1recv_msg@slot 0014  
                                    i1recv_msg@qptr 000B      uart_receive_interrupt_handler@received_counter 004E  
                      FromMainLow_recvmsg@maxlength 001D                          __size_of_enable_interrupts 0008  
                                 i1send_msg@msgtype 000E                                   i1send_msg@tlength 0012  
                        FromMainLow_recvmsg@msgtype 0019                        __size_of_FromMainLow_recvmsg 0028  
                      __size_of_FromMainLow_sendmsg 002E                                timer0_lthread@length 0104  
                                _timer1_int_handler 1C94                                            i1_memcpy 1A0A  
                              _InterruptHandlerHigh 0008                                            i2_memcpy 19BA  
                              timer0_lthread@msgval 0108                            FromMainHigh_recvmsg@data 007A  
                                       _in_high_int 1DBA                                        send_msg@data 010E  
                               _i2c_configure_slave 1AFE                                        send_msg@qmsg 0114  
                                      send_msg@slot 0113                                        send_msg@qptr 010A  
                                   ?_uart_configure 0001                                 ?_timer1_int_handler 0001  
                                  __size_ofi2_blip1 0008                                    __size_ofi2_blip2 0008  
                                  __size_ofi2_blip3 0008                                            __Hparam0 0000  
                                      ??_in_low_int 0064                                            __Lparam0 0000  
                              ?_i2c_configure_slave 0100                                   ?_enter_sleep_mode 0001  
                            ??_FromMainHigh_recvmsg 007C                              ??_FromMainHigh_sendmsg 0119  
                              ??_timer1_int_handler 001B             __end_of_uart_transmit_interrupt_handler 1616  
          __size_of_uart_transmit_interrupt_handler 00A4                   ??_uart_transmit_interrupt_handler 001E  
                  ?_uart_transmit_interrupt_handler 0001                     _uart_transmit_interrupt_handler 1572  
                          __size_of_i2c_int_handler 071E                                  ??_enter_sleep_mode 0060  
                                  __size_of___lwmod 0060                                        ??_init_queue 0102  
                                      ?_WriteTimer0 0060                                        ?_WriteTimer1 0001  
                          FromMainHigh_sendmsg@data 0117                             ToMainLow_sendmsg@length 001A  
                                 main@t0thread_data 0154                      uart_frame_message@sent_counter 004A  
                             ?_InterruptHandlerHigh 0001                 uart_transmit_interrupt_handler@data 001E  
               uart_transmit_interrupt_handler@done 005F                                   i2send_msg@msgtype 006D  
                       ToMainHigh_recvmsg@maxlength 011C                                   i2send_msg@tlength 0071  
                           init_timer1_lthread@tptr 0100                                         _init_queues 1912  
                                __end_of_in_low_int 1A88                                            __ptext10 1D72  
                                          __ptext11 1912                                            __ptext20 1E02  
                                          __ptext12 17EE                                            __ptext21 1B36  
                                          __ptext13 1784                                          _T1GCONbits 000F9A  
                                          __ptext30 1CC0                                            __ptext22 1B6C  
                                          __ptext14 1AFE                                            __ptext31 132C  
                                          __ptext23 0E36                                            __ptext15 1DE2  
                                          __ptext40 1716                                            __ptext32 0AFA  
                                          __ptext24 196A                                            __ptext16 1DD8  
                                          __ptext41 1DA8                                            __ptext33 1C94  
                                          __ptext25 1A88                                            __ptext17 1DEA  
                                          __ptext50 13FE                                            __ptext42 00C4  
                                          __ptext34 1D84                                            __ptext26 1CE8  
                                          __ptext18 1DF2                                            __ptext51 1E2A  
                                          __ptext43 1E0A                                            __ptext35 1D0E  
                                          __ptext19 1DFA                                            __ptext52 1C66  
                                          __ptext44 1E12                                            __ptext36 14C8  
                                          __ptext28 1572                                            __ptext53 115E  
                                          __ptext45 1E1A                                            __ptext37 1A0A  
                                          __ptext29 124A                                            __ptext54 19BA  
                                          __ptext46 1E22                                            __ptext38 1D96  
                                          __ptext55 18B2                                            __ptext47 1AC4  
                                          __ptext56 1A4A                                            __ptext48 1BA2  
                                          __ptext57 1DBA                                            __ptext49 0F54  
                                          __ptext58 1E32                                            __ptext59 1BD8  
                                    i1send_msg@data 000F                                      i1send_msg@qmsg 0015  
                                    i1send_msg@slot 0014                                      i1send_msg@qptr 000B  
                          timer0_int_handler@length 007D           retrieve_sensor_values@sensor_bank_ventril 0081  
                                          _init_i2c 1784                            __size_of_debug_configure 000A  
                               _init_timer1_lthread 1D72                                       __size_of_blip 0008  
                                     __size_of_main 0318                                   main@t1thread_data 0168  
                                       ??_check_msg 0062                                  __end_of_init_queue 1852  
                              __size_of_SleepIfOkay 0060                                            _recv_msg 0E36  
                             ??_i2c_configure_slave 0102                                            _send_msg 1072  
                                    init_queue@qptr 0100                            ??_retrieve_sensor_values 0083  
                                    i2recv_msg@data 006F                         __size_of_uart_frame_message 00E2  
                                    i2recv_msg@qmsg 0076                                      i2recv_msg@slot 0073  
                                    i2recv_msg@qptr 006A                                        _SSP1STATbits 000FC7  
                               _InterruptHandlerLow 0018                                ?_init_timer1_lthread 0100  
                                   main@sensor_data 0134                                         _OSCTUNEbits 000F9B  
                                        _INTCONbits 000FF2                                            memcpy@d1 0100  
                                          memcpy@s1 0102                            timer1_lthread@move_state 00B2  
                      i2c_int_handler@overrun_error 008A                                    i2send_msg@length 006C  
                                          intlevel1 0000                                            intlevel2 0000  
                              ?_InterruptHandlerLow 0001                        send_uart_message@message_ptr 011A  
                                  ___lwmod@dividend 0100                                          _RCSTA1bits 000FAC  
                                     ?_handle_start 0001                                    ??_timer0_lthread 0108  
                       __size_of_ToMainHigh_recvmsg 0036                         __size_of_ToMainHigh_sendmsg 002E  
                                        _OSCCONbits 000FD3                                    ??_timer1_lthread 0125  
                                 i1recv_msg@msgtype 000E                                   i1recv_msg@tlength 0015  
                          ToMainHigh_sendmsg@length 0079                               ??_init_timer1_lthread 0102  
                            ??_InterruptHandlerHigh 008F                                   _ToMainLow_recvmsg 1B36  
                                 _ToMainLow_sendmsg 1D0E                                  main@last_reg_recvd 0142  
                                   ___lwmod@divisor 0102                                  ?_ToMainLow_recvmsg 0118  
                                 ??_i2c_int_handler 0085                                     ___lwmod@counter 0104  
                                ?_ToMainLow_sendmsg 0017                                         _SSPCON1bits 000FC6  
                                       _SSPCON2bits 000FC5                                      i2send_msg@data 006E  
                             ??_InterruptHandlerLow 0039                                 ??_ToMainLow_recvmsg 011C  
                                    i2send_msg@qmsg 0074                                      i2send_msg@slot 0073  
                                    i2send_msg@qptr 006A                                 ??_ToMainLow_sendmsg 001A  
                               _FromMainLow_recvmsg 1CC0                                      ??_handle_start 0060  
                               _FromMainLow_sendmsg 1C0A  
