

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Nov 10 19:31:09 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	param0,global,class=BANK0,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001F40                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for uart_transmit_interrupt_handler@done
    88  001F40  01                 	db	1
    89  0000                     _BAUDCONbits	set	3966
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATB	set	3978
    93  0000                     _LATBbits	set	3978
    94  0000                     _LATDbits	set	3980
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _OSCTUNEbits	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIR1bits	set	3998
   100  0000                     _PORTBbits	set	3969
   101  0000                     _RCONbits	set	4048
   102  0000                     _RCREG1	set	4015
   103  0000                     _RCSTA1bits	set	4012
   104  0000                     _SPBRG1	set	4016
   105  0000                     _SPBRGH1	set	3967
   106  0000                     _SSP1STATbits	set	4039
   107  0000                     _SSPADD	set	4040
   108  0000                     _SSPBUF	set	4041
   109  0000                     _SSPCON1	set	4038
   110  0000                     _SSPCON1bits	set	4038
   111  0000                     _SSPCON2	set	4037
   112  0000                     _SSPCON2bits	set	4037
   113  0000                     _SSPSTAT	set	4039
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _T0CON	set	4053
   116  0000                     _T0CONbits	set	4053
   117  0000                     _T1CON	set	4045
   118  0000                     _T1CONbits	set	4045
   119  0000                     _T1GCON	set	3994
   120  0000                     _T1GCONbits	set	3994
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR1H	set	4047
   124  0000                     _TMR1L	set	4046
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISBbits	set	3987
   127  0000                     _TRISCbits	set	3988
   128  0000                     _TRISD	set	3989
   129  0000                     _TXREG1	set	4014
   130  0000                     _TXSTA1bits	set	4013
   131                           
   132                           	psect	nvBANK0
   133  0000C6                     __pnvBANK0:
   134                           	opt stack 0
   135  0000C6                     _ic_ptr:
   136                           	opt stack 0
   137  0000C6                     	ds	2
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  0019B8                     __pcinit:
   143                           	opt stack 0
   144  0019B8                     start_initialization:
   145                           	opt stack 0
   146  0019B8                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK3 (87 bytes)
   150  0019B8  EE03  F000         	lfsr	0,__pbssBANK3
   151  0019BC  0E57               	movlw	87
   152  0019BE                     clear_0:
   153  0019BE  6AEE               	clrf	postinc0,c
   154  0019C0  06E8               	decf	wreg,f,c
   155  0019C2  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK2 (174 bytes)
   158  0019C4  EE02  F000         	lfsr	0,__pbssBANK2
   159  0019C8  0EAE               	movlw	174
   160  0019CA                     clear_1:
   161  0019CA  6AEE               	clrf	postinc0,c
   162  0019CC  06E8               	decf	wreg,f,c
   163  0019CE  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to BANK1 (87 bytes)
   166  0019D0  EE01  F081         	lfsr	0,__pbssBANK1
   167  0019D4  0E57               	movlw	87
   168  0019D6                     clear_2:
   169  0019D6  6AEE               	clrf	postinc0,c
   170  0019D8  06E8               	decf	wreg,f,c
   171  0019DA  E1FD               	bnz	clear_2
   172                           
   173                           ; Clear objects allocated to BANK0 (37 bytes)
   174  0019DC  EE00  F0A1         	lfsr	0,__pbssBANK0
   175  0019E0  0E25               	movlw	37
   176  0019E2                     clear_3:
   177  0019E2  6AEE               	clrf	postinc0,c
   178  0019E4  06E8               	decf	wreg,f,c
   179  0019E6  E1FD               	bnz	clear_3
   180                           
   181                           ; Clear objects allocated to COMRAM (9 bytes)
   182  0019E8  EE00  F04A         	lfsr	0,__pbssCOMRAM
   183  0019EC  0E09               	movlw	9
   184  0019EE                     clear_4:
   185  0019EE  6AEE               	clrf	postinc0,c
   186  0019F0  06E8               	decf	wreg,f,c
   187  0019F2  E1FD               	bnz	clear_4
   188                           
   189                           ; Initialize objects allocated to COMRAM (1 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191  0019F4  0E40               	movlw	low __pidataCOMRAM
   192  0019F6  6EF6               	movwf	tblptrl,c
   193  0019F8  0E1F               	movlw	high __pidataCOMRAM
   194  0019FA  6EF7               	movwf	tblptrh,c
   195  0019FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196  0019FE  6EF8               	movwf	tblptru,c
   197  001A00  0009               	tblrd		*+	;fetch initializer
   198  001A02  CFF5 F053          	movff	tablat,__pdataCOMRAM
   199  001A06                     end_of_initialization:
   200                           	opt stack 0
   201  001A06                     __end_of__initialization:
   202                           	opt stack 0
   203  001A06  0E00               	movlw	low (__Lmediumconst shr (0+16))
   204  001A08  6EF8               	movwf	tblptru,c
   205  001A0A  0100               	movlb	0
   206  001A0C  EFA6  F003         	goto	_main	;jump to C main() function
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	bssCOMRAM
   215  00004A                     __pbssCOMRAM:
   216                           	opt stack 0
   217  00004A                     _need_sensor_data:
   218                           	opt stack 0
   219  00004A                     	ds	2
   220  00004C                     uart_frame_message@sent_counter:
   221                           	opt stack 0
   222  00004C                     	ds	1
   223  00004D                     uart_receive_interrupt_handler@done:
   224                           	opt stack 0
   225  00004D                     	ds	1
   226  00004E                     uart_receive_interrupt_handler@error:
   227                           	opt stack 0
   228  00004E                     	ds	1
   229  00004F                     uart_receive_interrupt_handler@index:
   230                           	opt stack 0
   231  00004F                     	ds	1
   232  000050                     uart_receive_interrupt_handler@received_counter:
   233                           	opt stack 0
   234  000050                     	ds	1
   235  000051                     uart_receive_interrupt_handler@start_byte_bad:
   236                           	opt stack 0
   237  000051                     	ds	1
   238  000052                     uart_transmit_interrupt_handler@index:
   239                           	opt stack 0
   240  000052                     	ds	1
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           
   248                           	psect	dataCOMRAM
   249  000053                     __pdataCOMRAM:
   250                           	opt stack 0
   251  000053                     uart_transmit_interrupt_handler@done:
   252                           	opt stack 0
   253  000053                     	ds	1
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           
   261                           	psect	bssBANK0
   262  0000A1                     __pbssBANK0:
   263                           	opt stack 0
   264  0000A1                     uart_receive_interrupt_handler@frame:
   265                           	opt stack 0
   266  0000A1                     	ds	18
   267  0000B3                     _MQ_Main_Willing_to_block:
   268                           	opt stack 0
   269  0000B3                     	ds	1
   270  0000B4                     uart_transmit_interrupt_handler@message:
   271                           	opt stack 0
   272  0000B4                     	ds	18
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           
   280                           	psect	bssBANK1
   281  000181                     __pbssBANK1:
   282                           	opt stack 0
   283  000181                     _ToMainLow_MQ:
   284                           	opt stack 0
   285  000181                     	ds	87
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           
   293                           	psect	bssBANK2
   294  000200                     __pbssBANK2:
   295                           	opt stack 0
   296  000200                     _FromMainLow_MQ:
   297                           	opt stack 0
   298  000200                     	ds	87
   299  000257                     _ToMainHigh_MQ:
   300                           	opt stack 0
   301  000257                     	ds	87
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	bssBANK3
   310  000300                     __pbssBANK3:
   311                           	opt stack 0
   312  000300                     _FromMainHigh_MQ:
   313                           	opt stack 0
   314  000300                     	ds	87
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	cstackBANK1
   323  000100                     __pcstackBANK1:
   324                           	opt stack 0
   325  000100                     timer0_lthread@msgval:
   326                           	opt stack 0
   327  000100                     memcpy@d:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x0
   331  000100                     	ds	2
   332  000102                     memcpy@s:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x2
   336  000102                     	ds	2
   337  000104                     send_msg@qptr:
   338                           	opt stack 0
   339  000104                     recv_msg@qptr:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x4
   343  000104                     	ds	2
   344  000106                     send_msg@length:
   345                           	opt stack 0
   346  000106                     recv_msg@maxlength:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x6
   350  000106                     	ds	1
   351  000107                     send_msg@msgtype:
   352                           	opt stack 0
   353  000107                     recv_msg@msgtype:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x7
   357  000107                     	ds	1
   358  000108                     send_msg@data:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x8
   362  000108                     	ds	1
   363  000109                     recv_msg@data:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x9
   367  000109                     	ds	1
   368  00010A                     send_msg@tlength:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0xA
   372  00010A                     	ds	1
   373  00010B                     recv_msg@slot:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0xB
   377  00010B                     	ds	1
   378  00010C                     send_msg@slot:
   379                           	opt stack 0
   380  00010C                     recv_msg@tlength:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0xC
   384  00010C                     	ds	1
   385  00010D                     send_msg@qmsg:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0xD
   389  00010D                     	ds	1
   390  00010E                     recv_msg@qmsg:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0xE
   394  00010E                     	ds	1
   395  00010F                     FromMainLow_sendmsg@msgtype:
   396                           	opt stack 0
   397  00010F                     FromMainHigh_sendmsg@msgtype:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0xF
   401  00010F                     	ds	1
   402  000110                     ToMainLow_recvmsg@msgtype:
   403                           	opt stack 0
   404  000110                     ToMainHigh_recvmsg@msgtype:
   405                           	opt stack 0
   406  000110                     FromMainLow_sendmsg@data:
   407                           	opt stack 0
   408  000110                     FromMainHigh_sendmsg@data:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x10
   412  000110                     	ds	2
   413  000112                     ToMainLow_recvmsg@data:
   414                           	opt stack 0
   415  000112                     ToMainHigh_recvmsg@data:
   416                           	opt stack 0
   417  000112                     send_uart_message@message_ptr:
   418                           	opt stack 0
   419  000112                     timer1_lthread@tptr:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x12
   423  000112                     	ds	2
   424  000114                     timer1_lthread@msgtype:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x14
   428  000114                     	ds	2
   429  000116                     timer1_lthread@length:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x16
   433  000116                     	ds	2
   434  000118                     timer1_lthread@msgbuffer:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x18
   438  000118                     	ds	2
   439  00011A                     main@motor_data:
   440                           	opt stack 0
   441                           
   442                           ; 14 bytes @ 0x1A
   443  00011A                     	ds	14
   444  000128                     main@sensor_data:
   445                           	opt stack 0
   446                           
   447                           ; 14 bytes @ 0x28
   448  000128                     	ds	14
   449  000136                     main@last_reg_recvd:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x36
   453  000136                     	ds	1
   454  000137                     main@msgbuffer:
   455                           	opt stack 0
   456                           
   457                           ; 15 bytes @ 0x37
   458  000137                     	ds	15
   459  000146                     main@t0thread_data:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x46
   463  000146                     	ds	2
   464  000148                     main@uart_response:
   465                           	opt stack 0
   466                           
   467                           ; 14 bytes @ 0x48
   468  000148                     	ds	14
   469  000156                     main@t1thread_data:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x56
   473  000156                     	ds	2
   474  000158                     main@length:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x58
   478  000158                     	ds	1
   479  000159                     main@msgtype:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x59
   483  000159                     	ds	1
   484  00015A                     main@i:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x5A
   488  00015A                     	ds	1
   489  00015B                     main@ic:
   490                           	opt stack 0
   491                           
   492                           ; 38 bytes @ 0x5B
   493  00015B                     	ds	38
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           
   501                           	psect	cstackBANK0
   502  000060                     __pcstackBANK0:
   503                           	opt stack 0
   504  000060                     ?_in_high_int:
   505                           	opt stack 0
   506  000060                     ?i2___awmod:
   507                           	opt stack 0
   508  000060                     handle_start@data_read:
   509                           	opt stack 0
   510  000060                     check_msg@qptr:
   511                           	opt stack 0
   512  000060                     start_i2c_slave_reply@msg:
   513                           	opt stack 0
   514  000060                     WriteTimer0@timer0:
   515                           	opt stack 0
   516  000060                     i2memcpy@d1:
   517                           	opt stack 0
   518  000060                     i2___awmod@dividend:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x0
   522  000060                     	ds	2
   523  000062                     ??_check_msg:
   524  000062                     ?_in_low_int:
   525                           	opt stack 0
   526  000062                     start_i2c_slave_reply@length:
   527                           	opt stack 0
   528  000062                     WriteTimer0@timer:
   529                           	opt stack 0
   530  000062                     i2memcpy@s1:
   531                           	opt stack 0
   532  000062                     i2___awmod@divisor:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x2
   536  000062                     	ds	2
   537  000064                     i2___awmod@counter:
   538                           	opt stack 0
   539  000064                     i2memcpy@n:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x4
   543  000064                     	ds	1
   544  000065                     i2___awmod@sign:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x5
   548  000065                     	ds	1
   549  000066                     i2memcpy@d:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x6
   553  000066                     	ds	2
   554  000068                     i2memcpy@s:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x8
   558  000068                     	ds	2
   559  00006A                     i2send_msg@qptr:
   560                           	opt stack 0
   561  00006A                     i2recv_msg@qptr:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0xA
   565  00006A                     	ds	2
   566  00006C                     i2send_msg@length:
   567                           	opt stack 0
   568  00006C                     i2recv_msg@maxlength:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0xC
   572  00006C                     	ds	1
   573  00006D                     i2send_msg@msgtype:
   574                           	opt stack 0
   575  00006D                     i2recv_msg@msgtype:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0xD
   579  00006D                     	ds	1
   580  00006E                     i2send_msg@data:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0xE
   584  00006E                     	ds	1
   585  00006F                     i2recv_msg@data:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0xF
   589  00006F                     	ds	1
   590  000070                     ??i2_send_msg:
   591                           
   592                           ; 0 bytes @ 0x10
   593  000070                     	ds	1
   594  000071                     ??i2_recv_msg:
   595  000071                     i2send_msg@tlength:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x11
   599  000071                     	ds	2
   600  000073                     i2send_msg@slot:
   601                           	opt stack 0
   602  000073                     i2recv_msg@slot:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x13
   606  000073                     	ds	1
   607  000074                     i2send_msg@qmsg:
   608                           	opt stack 0
   609  000074                     i2recv_msg@tlength:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x14
   613  000074                     	ds	2
   614  000076                     ToMainHigh_sendmsg@msgtype:
   615                           	opt stack 0
   616  000076                     i2recv_msg@qmsg:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x16
   620  000076                     	ds	1
   621  000077                     ToMainHigh_sendmsg@data:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x17
   625  000077                     	ds	1
   626  000078                     FromMainHigh_recvmsg@msgtype:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x18
   630  000078                     	ds	1
   631  000079                     ToMainHigh_sendmsg@length:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x19
   635  000079                     	ds	1
   636  00007A                     FromMainHigh_recvmsg@data:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x1A
   640  00007A                     	ds	2
   641  00007C                     FromMainHigh_recvmsg@maxlength:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x1C
   645  00007C                     	ds	1
   646  00007D                     ??_i2c_int_handler:
   647  00007D                     timer0_int_handler@length:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x1D
   651  00007D                     	ds	1
   652  00007E                     i2c_int_handler@length:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x1E
   656  00007E                     	ds	1
   657  00007F                     timer0_int_handler@msgtype:
   658                           	opt stack 0
   659  00007F                     i2c_int_handler@error_buf:
   660                           	opt stack 0
   661                           
   662                           ; 3 bytes @ 0x1F
   663  00007F                     	ds	2
   664  000081                     timer0_int_handler@val:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x21
   668  000081                     	ds	1
   669  000082                     i2c_int_handler@data_written:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x22
   673  000082                     	ds	1
   674  000083                     i2c_int_handler@overrun_error:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x23
   678  000083                     	ds	1
   679  000084                     i2c_int_handler@need_data:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x24
   683  000084                     	ds	1
   684  000085                     i2c_int_handler@i2c_data:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x25
   688  000085                     	ds	1
   689  000086                     i2c_int_handler@msg_to_send:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x26
   693  000086                     	ds	1
   694  000087                     i2c_int_handler@msg_type:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x27
   698  000087                     	ds	1
   699  000088                     i2c_int_handler@msg_ready:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x28
   703  000088                     	ds	1
   704  000089                     i2c_int_handler@data_read:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0x29
   708  000089                     	ds	1
   709  00008A                     ??_InterruptHandlerHigh:
   710                           
   711                           ; 0 bytes @ 0x2A
   712  00008A                     	ds	14
   713  000098                     ?___awmod:
   714                           	opt stack 0
   715  000098                     ?___lwmod:
   716                           	opt stack 0
   717  000098                     i2c_configure_slave@addr:
   718                           	opt stack 0
   719  000098                     OpenTimer0@config:
   720                           	opt stack 0
   721  000098                     OpenTimer1@config1:
   722                           	opt stack 0
   723  000098                     init_queue@qptr:
   724                           	opt stack 0
   725  000098                     init_i2c@ic:
   726                           	opt stack 0
   727  000098                     timer0_lthread@tptr:
   728                           	opt stack 0
   729  000098                     init_timer1_lthread@tptr:
   730                           	opt stack 0
   731  000098                     ___awmod@dividend:
   732                           	opt stack 0
   733  000098                     ___lwmod@dividend:
   734                           	opt stack 0
   735  000098                     memcpy@d1:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x38
   739  000098                     	ds	1
   740  000099                     ??_OpenTimer1:
   741                           
   742                           ; 0 bytes @ 0x39
   743  000099                     	ds	1
   744  00009A                     init_queue@i:
   745                           	opt stack 0
   746  00009A                     OpenTimer1@config:
   747                           	opt stack 0
   748  00009A                     timer0_lthread@msgtype:
   749                           	opt stack 0
   750  00009A                     ___awmod@divisor:
   751                           	opt stack 0
   752  00009A                     ___lwmod@divisor:
   753                           	opt stack 0
   754  00009A                     memcpy@s1:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x3A
   758  00009A                     	ds	1
   759  00009B                     
   760                           ; 0 bytes @ 0x3B
   761  00009B                     	ds	1
   762  00009C                     ___awmod@counter:
   763                           	opt stack 0
   764  00009C                     ___lwmod@counter:
   765                           	opt stack 0
   766  00009C                     timer0_lthread@length:
   767                           	opt stack 0
   768  00009C                     memcpy@n:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x3C
   772  00009C                     	ds	1
   773  00009D                     ___awmod@sign:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x3D
   777  00009D                     	ds	1
   778  00009E                     ??_send_msg:
   779  00009E                     ??_recv_msg:
   780  00009E                     timer0_lthread@msgbuffer:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x3E
   784  00009E                     	ds	1
   785  00009F                     FromMainLow_sendmsg@length:
   786                           	opt stack 0
   787  00009F                     FromMainHigh_sendmsg@length:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x3F
   791  00009F                     	ds	1
   792  0000A0                     ToMainLow_recvmsg@maxlength:
   793                           	opt stack 0
   794  0000A0                     ToMainHigh_recvmsg@maxlength:
   795                           	opt stack 0
   796  0000A0                     send_uart_message@message_q_code:
   797                           	opt stack 0
   798  0000A0                     timer1_lthread@retval:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x40
   802  0000A0                     	ds	1
   803  0000A1                     tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           
   810                           ; 0 bytes @ 0x41
   811                           
   812                           	psect	cstackCOMRAM
   813  000001                     __pcstackCOMRAM:
   814                           	opt stack 0
   815  000001                     ?_ReadTimer1:
   816                           	opt stack 0
   817  000001                     ?i1___awmod:
   818                           	opt stack 0
   819  000001                     uart_frame_message@inner:
   820                           	opt stack 0
   821  000001                     WriteTimer1@timer1:
   822                           	opt stack 0
   823  000001                     i1memcpy@d1:
   824                           	opt stack 0
   825  000001                     i1___awmod@dividend:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x0
   829  000001                     	ds	2
   830  000003                     uart_frame_message@outer:
   831                           	opt stack 0
   832  000003                     ReadTimer1@timer:
   833                           	opt stack 0
   834  000003                     WriteTimer1@timer:
   835                           	opt stack 0
   836  000003                     i1memcpy@s1:
   837                           	opt stack 0
   838  000003                     i1___awmod@divisor:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x2
   842  000003                     	ds	2
   843  000005                     ??_uart_frame_message:
   844  000005                     i1___awmod@counter:
   845                           	opt stack 0
   846  000005                     i1memcpy@n:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x4
   850  000005                     	ds	1
   851  000006                     i1___awmod@sign:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x5
   855  000006                     	ds	1
   856  000007                     uart_frame_message@checksum:
   857                           	opt stack 0
   858  000007                     i1memcpy@d:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x6
   862  000007                     	ds	1
   863  000008                     uart_frame_message@i:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x7
   867  000008                     	ds	1
   868  000009                     i1memcpy@s:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x8
   872  000009                     	ds	2
   873  00000B                     i1send_msg@qptr:
   874                           	opt stack 0
   875  00000B                     i1recv_msg@qptr:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0xA
   879  00000B                     	ds	2
   880  00000D                     i1send_msg@length:
   881                           	opt stack 0
   882  00000D                     i1recv_msg@maxlength:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0xC
   886  00000D                     	ds	1
   887  00000E                     i1send_msg@msgtype:
   888                           	opt stack 0
   889  00000E                     i1recv_msg@msgtype:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0xD
   893  00000E                     	ds	1
   894  00000F                     i1send_msg@data:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0xE
   898  00000F                     	ds	1
   899  000010                     i1recv_msg@data:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0xF
   903  000010                     	ds	1
   904  000011                     ??i1_send_msg:
   905                           
   906                           ; 0 bytes @ 0x10
   907  000011                     	ds	1
   908  000012                     ??i1_recv_msg:
   909  000012                     i1send_msg@tlength:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x11
   913  000012                     	ds	2
   914  000014                     i1send_msg@slot:
   915                           	opt stack 0
   916  000014                     i1recv_msg@slot:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x13
   920  000014                     	ds	1
   921  000015                     i1send_msg@qmsg:
   922                           	opt stack 0
   923  000015                     i1recv_msg@tlength:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x14
   927  000015                     	ds	2
   928  000017                     ToMainLow_sendmsg@msgtype:
   929                           	opt stack 0
   930  000017                     i1recv_msg@qmsg:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x16
   934  000017                     	ds	1
   935  000018                     ToMainLow_sendmsg@data:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x17
   939  000018                     	ds	1
   940  000019                     FromMainLow_recvmsg@msgtype:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x18
   944  000019                     	ds	1
   945  00001A                     ToMainLow_sendmsg@length:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x19
   949  00001A                     	ds	1
   950  00001B                     ??_uart_receive_interrupt_handler:
   951  00001B                     FromMainLow_recvmsg@data:
   952                           	opt stack 0
   953  00001B                     timer1_int_handler@result:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x1A
   957  00001B                     	ds	2
   958  00001D                     FromMainLow_recvmsg@maxlength:
   959                           	opt stack 0
   960  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   961                           	opt stack 0
   962                           
   963                           ; 14 bytes @ 0x1C
   964  00001D                     	ds	1
   965  00001E                     uart_transmit_interrupt_handler@data:
   966                           	opt stack 0
   967                           
   968                           ; 14 bytes @ 0x1D
   969  00001E                     	ds	13
   970  00002B                     uart_receive_interrupt_handler@status:
   971                           	opt stack 0
   972                           
   973                           ; 1 bytes @ 0x2A
   974  00002B                     	ds	1
   975  00002C                     uart_receive_interrupt_handler@status_2215:
   976                           	opt stack 0
   977  00002C                     uart_transmit_interrupt_handler@msgtype:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x2B
   981  00002C                     	ds	1
   982  00002D                     uart_transmit_interrupt_handler@message_status:
   983                           	opt stack 0
   984  00002D                     uart_receive_interrupt_handler@bad_checksum_message:
   985                           	opt stack 0
   986                           
   987                           ; 3 bytes @ 0x2C
   988  00002D                     	ds	3
   989  000030                     uart_receive_interrupt_handler@bad_counter_id:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x2F
   993  000030                     	ds	2
   994  000032                     uart_receive_interrupt_handler@bad_start_id:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x31
   998  000032                     	ds	1
   999  000033                     uart_receive_interrupt_handler@bad_end_id:
  1000                           	opt stack 0
  1001                           
  1002                           ; 1 bytes @ 0x32
  1003  000033                     	ds	1
  1004  000034                     uart_receive_interrupt_handler@message_count:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x33
  1008  000034                     	ds	1
  1009  000035                     uart_receive_interrupt_handler@checksum:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x34
  1013  000035                     	ds	1
  1014  000036                     uart_receive_interrupt_handler@msg_id:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x35
  1018  000036                     	ds	1
  1019  000037                     uart_receive_interrupt_handler@i:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x36
  1023  000037                     	ds	2
  1024  000039                     ??_InterruptHandlerLow:
  1025                           
  1026                           ; 0 bytes @ 0x38
  1027  000039                     	ds	17
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           
  1035 ;;
  1036 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1037 ;;
  1038 ;; *************** function _main *****************
  1039 ;; Defined at:
  1040 ;;		line 188 in file "../src/main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  uart_respons   14   72[BANK1 ] unsigned char [14]
  1045 ;;  ic             38   91[BANK1 ] struct __i2c_comm
  1046 ;;  msgbuffer      15   55[BANK1 ] unsigned char [15]
  1047 ;;  sensor_data    14   40[BANK1 ] unsigned char [14]
  1048 ;;  motor_data     14   26[BANK1 ] unsigned char [14]
  1049 ;;  t1thread_dat    2   86[BANK1 ] struct __timer1_thread_s
  1050 ;;  t0thread_dat    2   70[BANK1 ] struct __timer0_thread_s
  1051 ;;  uthread_data    2    0        struct __uart_thread_str
  1052 ;;  i               1   90[BANK1 ] unsigned char 
  1053 ;;  msgtype         1   89[BANK1 ] unsigned char 
  1054 ;;  length          1   88[BANK1 ] char 
  1055 ;;  last_reg_rec    1   54[BANK1 ] unsigned char 
  1056 ;;  c               1    0        unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;		None               void
  1059 ;; Registers used:
  1060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1067 ;;      Locals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1069 ;;      Totals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1070 ;;Total ram usage:      103 bytes
  1071 ;; Hardware stack levels required when called:   14
  1072 ;; This function calls:
  1073 ;;		_OpenTimer0
  1074 ;;		_OpenTimer1
  1075 ;;		_ToMainHigh_recvmsg
  1076 ;;		_ToMainLow_recvmsg
  1077 ;;		_blip
  1078 ;;		_blip1
  1079 ;;		_blip2
  1080 ;;		_blip3
  1081 ;;		_blip4
  1082 ;;		_debug_configure
  1083 ;;		_enable_interrupts
  1084 ;;		_i2c_configure_slave
  1085 ;;		_init_i2c
  1086 ;;		_init_queues
  1087 ;;		_init_timer1_lthread
  1088 ;;		_send_uart_message
  1089 ;;		_timer0_lthread
  1090 ;;		_timer1_lthread
  1091 ;;		_uart_configure
  1092 ;; This function is called by:
  1093 ;;		Startup code after reset
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text0
  1098  00074C                     __ptext0:
  1099                           	opt stack 0
  1100  00074C                     _main:
  1101                           	opt stack 17
  1102                           
  1103                           ;main.c: 189: char c;
  1104                           ;main.c: 190: signed char length;
  1105                           ;main.c: 191: unsigned char msgtype;
  1106                           ;main.c: 192: unsigned char last_reg_recvd;
  1107                           ;main.c: 193: i2c_comm ic;
  1108                           ;main.c: 194: unsigned char msgbuffer[14 + 1];
  1109                           ;main.c: 195: unsigned char i;
  1110                           ;main.c: 196: uart_thread_struct uthread_data;
  1111                           ;main.c: 197: timer1_thread_struct t1thread_data;
  1112                           ;main.c: 198: timer0_thread_struct t0thread_data;
  1113                           ;main.c: 214: OSCCON = 0xE0;
  1114                           
  1115                           ;incstack = 0
  1116  00074C  0EE0               	movlw	224
  1117  00074E  6ED3               	movwf	4051,c	;volatile
  1118                           
  1119                           ;main.c: 222: OSCTUNEbits.PLLEN = 1;
  1120  000750  8C9B               	bsf	3995,6,c	;volatile
  1121                           
  1122                           ;main.c: 237: init_i2c(&ic);
  1123  000752  0101               	movlb	1	; () banked
  1124  000754  0E01               	movlw	high main@ic
  1125  000756  0100               	movlb	0	; () banked
  1126  000758  6F99               	movwf	(init_i2c@ic+1)& (0+255),b
  1127  00075A  0101               	movlb	1	; () banked
  1128  00075C  0E5B               	movlw	low main@ic
  1129  00075E  0100               	movlb	0	; () banked
  1130  000760  6F98               	movwf	init_i2c@ic& (0+255),b
  1131  000762  ECE6  F00B         	call	_init_i2c	;wreg free
  1132                           
  1133                           ;main.c: 240: init_timer1_lthread(&t1thread_data);
  1134  000766  0101               	movlb	1	; () banked
  1135  000768  0E01               	movlw	high main@t1thread_data
  1136  00076A  0100               	movlb	0	; () banked
  1137  00076C  6F99               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1138  00076E  0101               	movlb	1	; () banked
  1139  000770  0E56               	movlw	low main@t1thread_data
  1140  000772  0100               	movlb	0	; () banked
  1141  000774  6F98               	movwf	init_timer1_lthread@tptr& (0+255),b
  1142  000776  EC46  F00F         	call	_init_timer1_lthread	;wreg free
  1143                           
  1144                           ;main.c: 243: init_queues();
  1145  00077A  EC08  F00D         	call	_init_queues	;wreg free
  1146                           
  1147                           ;main.c: 247: TRISB = 0x0;
  1148  00077E  0E00               	movlw	0
  1149  000780  6E93               	movwf	3987,c	;volatile
  1150                           
  1151                           ;main.c: 248: LATB = 0x0;
  1152  000782  0E00               	movlw	0
  1153  000784  6E8A               	movwf	3978,c	;volatile
  1154                           
  1155                           ;main.c: 261: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1156  000786  0E96               	movlw	150
  1157  000788  ECF8  F00E         	call	_OpenTimer0
  1158                           
  1159                           ;main.c: 268: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1160  00078C  0E00               	movlw	0
  1161  00078E  0100               	movlb	0	; () banked
  1162  000790  6F98               	movwf	OpenTimer1@config1& (0+255),b
  1163  000792  0E9B               	movlw	155
  1164  000794  ECED  F00D         	call	_OpenTimer1
  1165                           
  1166                           ;main.c: 277: IPR1bits.TMR1IP = 0;
  1167  000798  909F               	bcf	3999,0,c	;volatile
  1168                           
  1169                           ;main.c: 279: IPR1bits.RCIP = 0;
  1170  00079A  9A9F               	bcf	3999,5,c	;volatile
  1171                           
  1172                           ;main.c: 282: IPR1bits.SSPIP = 1;
  1173  00079C  869F               	bsf	3999,3,c	;volatile
  1174                           
  1175                           ;main.c: 291: i2c_configure_slave(0x9E);
  1176  00079E  0E9E               	movlw	158
  1177  0007A0  ECD0  F00E         	call	_i2c_configure_slave
  1178                           
  1179                           ;main.c: 306: PIE1bits.SSPIE = 1;
  1180  0007A4  869D               	bsf	3997,3,c	;volatile
  1181                           
  1182                           ;main.c: 332: debug_configure();
  1183  0007A6  EC72  F00F         	call	_debug_configure	;wreg free
  1184                           
  1185                           ;main.c: 333: blip();
  1186  0007AA  EC8B  F00F         	call	_blip	;wreg free
  1187                           
  1188                           ;main.c: 334: blip1();
  1189  0007AE  EC87  F00F         	call	_blip1	;wreg free
  1190                           
  1191                           ;main.c: 335: blip2();
  1192  0007B2  EC83  F00F         	call	_blip2	;wreg free
  1193                           
  1194                           ;main.c: 336: blip3();
  1195  0007B6  EC7F  F00F         	call	_blip3	;wreg free
  1196                           
  1197                           ;main.c: 337: blip4();
  1198  0007BA  EC7B  F00F         	call	_blip4	;wreg free
  1199                           
  1200                           ;main.c: 347: enable_interrupts();
  1201  0007BE  EC77  F00F         	call	_enable_interrupts	;wreg free
  1202                           
  1203                           ;main.c: 360: uart_configure();
  1204  0007C2  EC1D  F00F         	call	_uart_configure	;wreg free
  1205                           
  1206                           ;main.c: 370: unsigned char sensor_data[14];
  1207                           ;main.c: 371: sensor_data[0] = 0x05;
  1208  0007C6  0E05               	movlw	5
  1209  0007C8  0101               	movlb	1	; () banked
  1210  0007CA  6F28               	movwf	main@sensor_data& (0+255),b
  1211                           
  1212                           ; BSR set to: 1
  1213                           ;main.c: 372: for(i=1;i<14;i++)
  1214  0007CC  0E01               	movlw	1
  1215  0007CE  0101               	movlb	1	; () banked
  1216  0007D0  6F5A               	movwf	main@i& (0+255),b
  1217  0007D2  D00F               	goto	L2
  1218  0007D4                     l4219:
  1219                           
  1220                           ; BSR set to: 1
  1221                           ;main.c: 373: {
  1222                           ;main.c: 374: sensor_data[i] = 0x00;
  1223  0007D4  0101               	movlb	1	; () banked
  1224  0007D6  515A               	movf	main@i& (0+255),w,b
  1225  0007D8  0D01               	mullw	1
  1226  0007DA  0101               	movlb	1	; () banked
  1227  0007DC  0E28               	movlw	low main@sensor_data
  1228  0007DE  24F3               	addwf	prodl,w,c
  1229  0007E0  6ED9               	movwf	fsr2l,c
  1230  0007E2  0101               	movlb	1	; () banked
  1231  0007E4  0E01               	movlw	high main@sensor_data
  1232  0007E6  20F4               	addwfc	prodh,w,c
  1233  0007E8  6EDA               	movwf	fsr2h,c
  1234  0007EA  0E00               	movlw	0
  1235  0007EC  6EDF               	movwf	indf2,c
  1236                           
  1237                           ; BSR set to: 1
  1238  0007EE  0101               	movlb	1	; () banked
  1239  0007F0  2B5A               	incf	main@i& (0+255),f,b
  1240  0007F2                     L2:
  1241                           
  1242                           ; BSR set to: 1
  1243  0007F2  0E0D               	movlw	13
  1244  0007F4  0101               	movlb	1	; () banked
  1245  0007F6  655A               	cpfsgt	main@i& (0+255),b
  1246  0007F8  D7ED               	goto	l4219
  1247                           
  1248                           ; BSR set to: 1
  1249                           ;main.c: 375: }
  1250                           ;main.c: 378: unsigned char motor_data[14];
  1251                           ;main.c: 379: motor_data[0] = 0x07;
  1252                           
  1253                           ; BSR set to: 1
  1254  0007FA  0E07               	movlw	7
  1255  0007FC  0101               	movlb	1	; () banked
  1256  0007FE  6F1A               	movwf	main@motor_data& (0+255),b
  1257                           
  1258                           ;main.c: 380: for(i=1;i<14;i++)
  1259  000800  0E01               	movlw	1
  1260  000802  0101               	movlb	1	; () banked
  1261  000804  6F5A               	movwf	main@i& (0+255),b
  1262  000806  D00F               	goto	L3
  1263  000808                     l4231:
  1264                           
  1265                           ; BSR set to: 1
  1266                           ;main.c: 381: {
  1267                           ;main.c: 382: motor_data[i] = 0x00;
  1268  000808  0101               	movlb	1	; () banked
  1269  00080A  515A               	movf	main@i& (0+255),w,b
  1270  00080C  0D01               	mullw	1
  1271  00080E  0101               	movlb	1	; () banked
  1272  000810  0E1A               	movlw	low main@motor_data
  1273  000812  24F3               	addwf	prodl,w,c
  1274  000814  6ED9               	movwf	fsr2l,c
  1275  000816  0101               	movlb	1	; () banked
  1276  000818  0E01               	movlw	high main@motor_data
  1277  00081A  20F4               	addwfc	prodh,w,c
  1278  00081C  6EDA               	movwf	fsr2h,c
  1279  00081E  0E00               	movlw	0
  1280  000820  6EDF               	movwf	indf2,c
  1281                           
  1282                           ; BSR set to: 1
  1283  000822  0101               	movlb	1	; () banked
  1284  000824  2B5A               	incf	main@i& (0+255),f,b
  1285  000826                     L3:
  1286                           
  1287                           ; BSR set to: 1
  1288  000826  0E0D               	movlw	13
  1289  000828  0101               	movlb	1	; () banked
  1290  00082A  655A               	cpfsgt	main@i& (0+255),b
  1291  00082C  D7ED               	goto	l4231
  1292  00082E                     l4237:
  1293                           
  1294                           ;main.c: 409: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1295  00082E  0101               	movlb	1	; () banked
  1296  000830  0E01               	movlw	high main@msgtype
  1297  000832  0101               	movlb	1	; () banked
  1298  000834  6F11               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1299  000836  0101               	movlb	1	; () banked
  1300  000838  0E59               	movlw	low main@msgtype
  1301  00083A  0101               	movlb	1	; () banked
  1302  00083C  6F10               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1303  00083E  0101               	movlb	1	; () banked
  1304  000840  0E01               	movlw	high main@msgbuffer
  1305  000842  0101               	movlb	1	; () banked
  1306  000844  6F13               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1307  000846  0101               	movlb	1	; () banked
  1308  000848  0E37               	movlw	low main@msgbuffer
  1309  00084A  0101               	movlb	1	; () banked
  1310  00084C  6F12               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1311  00084E  0E0E               	movlw	14
  1312  000850  EC26  F00E         	call	_ToMainHigh_recvmsg
  1313  000854  0101               	movlb	1	; () banked
  1314  000856  6F58               	movwf	main@length& (0+255),b
  1315                           
  1316                           ; BSR set to: 1
  1317                           ;main.c: 410: if (length < 0) {
  1318  000858  0101               	movlb	1	; () banked
  1319  00085A  BF58               	btfsc	main@length& (0+255),7,b
  1320  00085C  D045               	goto	l4255
  1321  00085E  D036               	goto	l4253
  1322  000860                     l4243:
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;main.c: 420: {
  1326                           ;main.c: 421: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1327  000860  0101               	movlb	1	; () banked
  1328  000862  0E01               	movlw	high main@t0thread_data
  1329  000864  0100               	movlb	0	; () banked
  1330  000866  6F99               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1331  000868  0101               	movlb	1	; () banked
  1332  00086A  0E46               	movlw	low main@t0thread_data
  1333  00086C  0100               	movlb	0	; () banked
  1334  00086E  6F98               	movwf	timer0_lthread@tptr& (0+255),b
  1335  000870  0101               	movlb	1	; () banked
  1336  000872  0100               	movlb	0	; () banked
  1337  000874  C159  F09A         	movff	main@msgtype,timer0_lthread@msgtype
  1338  000878  0100               	movlb	0	; () banked
  1339  00087A  6B9B               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1340  00087C  0101               	movlb	1	; () banked
  1341  00087E  5158               	movf	main@length& (0+255),w,b
  1342  000880  0100               	movlb	0	; () banked
  1343  000882  6F9C               	movwf	timer0_lthread@length& (0+255),b
  1344  000884  0100               	movlb	0	; () banked
  1345  000886  6B9D               	clrf	(timer0_lthread@length+1)& (0+255),b
  1346  000888  0100               	movlb	0	; () banked
  1347  00088A  BF9C               	btfsc	timer0_lthread@length& (0+255),7,b
  1348  00088C  079D               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1349  00088E  0101               	movlb	1	; () banked
  1350  000890  0E01               	movlw	high main@msgbuffer
  1351  000892  0100               	movlb	0	; () banked
  1352  000894  6F9F               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1353  000896  0101               	movlb	1	; () banked
  1354  000898  0E37               	movlw	low main@msgbuffer
  1355  00089A  0100               	movlb	0	; () banked
  1356  00089C  6F9E               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1357  00089E  EC3D  F00F         	call	_timer0_lthread	;wreg free
  1358                           
  1359                           ;main.c: 422: break;
  1360  0008A2  D022               	goto	l4255
  1361  0008A4                     l4245:
  1362                           
  1363                           ;main.c: 425: {
  1364                           ;main.c: 426: send_uart_message(msgbuffer);
  1365  0008A4  0101               	movlb	1	; () banked
  1366  0008A6  0E01               	movlw	high main@msgbuffer
  1367  0008A8  0101               	movlb	1	; () banked
  1368  0008AA  6F13               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1369  0008AC  0101               	movlb	1	; () banked
  1370  0008AE  0E37               	movlw	low main@msgbuffer
  1371  0008B0  0101               	movlb	1	; () banked
  1372  0008B2  6F12               	movwf	send_uart_message@message_ptr& (0+255),b
  1373  0008B4  EC2D  F00F         	call	_send_uart_message	;wreg free
  1374  0008B8                     l4247:
  1375                           
  1376                           ;main.c: 429: {
  1377                           ;main.c: 432: last_reg_recvd = msgbuffer[0];
  1378  0008B8  C137  F136         	movff	main@msgbuffer,main@last_reg_recvd
  1379                           
  1380                           ;main.c: 433: break;
  1381  0008BC  D015               	goto	l4255
  1382  0008BE                     l4249:
  1383  0008BE  0101               	movlb	1	; () banked
  1384  0008C0  5137               	movf	main@msgbuffer& (0+255),w,b
  1385                           
  1386                           ; Switch size 1, requested type "space"
  1387                           ; Number of cases is 2, Range of values is 4 to 6
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte            7     4 (average)
  1391                           ;	Chosen strategy is simple_byte
  1392  0008C2  0A04               	xorlw	4	; case 4
  1393  0008C4  B4D8               	btfsc	status,2,c
  1394  0008C6  D010               	goto	l4255
  1395  0008C8  0A02               	xorlw	2	; case 6
  1396  0008CA  D00E               	goto	l4255
  1397  0008CC                     l4253:
  1398                           
  1399                           ; BSR set to: 1
  1400  0008CC  0101               	movlb	1	; () banked
  1401  0008CE  5159               	movf	main@msgtype& (0+255),w,b
  1402                           
  1403                           ; Switch size 1, requested type "space"
  1404                           ; Number of cases is 4, Range of values is 10 to 42
  1405                           ; switch strategies available:
  1406                           ; Name         Instructions Cycles
  1407                           ; simple_byte           13     7 (average)
  1408                           ;	Chosen strategy is simple_byte
  1409  0008D0  0A0A               	xorlw	10	; case 10
  1410  0008D2  B4D8               	btfsc	status,2,c
  1411  0008D4  D7C5               	goto	l4243
  1412  0008D6  0A22               	xorlw	34	; case 40
  1413  0008D8  B4D8               	btfsc	status,2,c
  1414  0008DA  D7E4               	goto	l4245
  1415  0008DC  0A01               	xorlw	1	; case 41
  1416  0008DE  B4D8               	btfsc	status,2,c
  1417  0008E0  D7EB               	goto	l4247
  1418  0008E2  0A03               	xorlw	3	; case 42
  1419  0008E4  B4D8               	btfsc	status,2,c
  1420  0008E6  D7EB               	goto	l4249
  1421  0008E8                     l4255:
  1422                           
  1423                           ;main.c: 461: }
  1424                           ;main.c: 464: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1425  0008E8  0101               	movlb	1	; () banked
  1426  0008EA  0E01               	movlw	high main@msgtype
  1427  0008EC  0101               	movlb	1	; () banked
  1428  0008EE  6F11               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1429  0008F0  0101               	movlb	1	; () banked
  1430  0008F2  0E59               	movlw	low main@msgtype
  1431  0008F4  0101               	movlb	1	; () banked
  1432  0008F6  6F10               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1433  0008F8  0101               	movlb	1	; () banked
  1434  0008FA  0E01               	movlw	high main@msgbuffer
  1435  0008FC  0101               	movlb	1	; () banked
  1436  0008FE  6F13               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1437  000900  0101               	movlb	1	; () banked
  1438  000902  0E37               	movlw	low main@msgbuffer
  1439  000904  0101               	movlb	1	; () banked
  1440  000906  6F12               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1441  000908  0E0E               	movlw	14
  1442  00090A  EC0B  F00E         	call	_ToMainLow_recvmsg
  1443  00090E  0101               	movlb	1	; () banked
  1444  000910  6F58               	movwf	main@length& (0+255),b
  1445                           
  1446                           ; BSR set to: 1
  1447                           ;main.c: 465: if (length < 0) {
  1448  000912  0101               	movlb	1	; () banked
  1449  000914  BF58               	btfsc	main@length& (0+255),7,b
  1450  000916  D78B               	goto	l4237
  1451                           
  1452                           ; BSR set to: 1
  1453                           ;main.c: 471: else
  1454                           ;main.c: 472: {
  1455                           ;main.c: 473: unsigned char uart_response[14];
  1456                           ;main.c: 474: for(i=0;i<14;i++)
  1457                           
  1458                           ; BSR set to: 1
  1459                           
  1460                           ; BSR set to: 1
  1461                           ;main.c: 469: }
  1462                           ;main.c: 470: }
  1463                           
  1464                           ; BSR set to: 1
  1465  000918  0E00               	movlw	0
  1466  00091A  0101               	movlb	1	; () banked
  1467  00091C  6F5A               	movwf	main@i& (0+255),b
  1468                           
  1469                           ; BSR set to: 1
  1470  00091E  0E0D               	movlw	13
  1471  000920  0101               	movlb	1	; () banked
  1472  000922  655A               	cpfsgt	main@i& (0+255),b
  1473  000924  D001               	goto	l4267
  1474  000926  D098               	goto	l4315
  1475  000928                     l4267:
  1476                           
  1477                           ; BSR set to: 1
  1478                           ;main.c: 475: {
  1479                           ;main.c: 476: uart_response[i] = 0;
  1480  000928  0101               	movlb	1	; () banked
  1481  00092A  515A               	movf	main@i& (0+255),w,b
  1482  00092C  0D01               	mullw	1
  1483  00092E  0101               	movlb	1	; () banked
  1484  000930  0E48               	movlw	low main@uart_response
  1485  000932  24F3               	addwf	prodl,w,c
  1486  000934  6ED9               	movwf	fsr2l,c
  1487  000936  0101               	movlb	1	; () banked
  1488  000938  0E01               	movlw	high main@uart_response
  1489  00093A  20F4               	addwfc	prodh,w,c
  1490  00093C  6EDA               	movwf	fsr2h,c
  1491  00093E  0E00               	movlw	0
  1492  000940  6EDF               	movwf	indf2,c
  1493                           
  1494                           ; BSR set to: 1
  1495  000942  0101               	movlb	1	; () banked
  1496  000944  2B5A               	incf	main@i& (0+255),f,b
  1497                           
  1498                           ; BSR set to: 1
  1499  000946  0E0D               	movlw	13
  1500  000948  0101               	movlb	1	; () banked
  1501  00094A  655A               	cpfsgt	main@i& (0+255),b
  1502  00094C  D7ED               	goto	l4267
  1503  00094E  D084               	goto	l4315
  1504  000950                     l4273:
  1505                           
  1506                           ; BSR set to: 1
  1507                           ;main.c: 481: {
  1508                           ;main.c: 482: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1509  000950  0101               	movlb	1	; () banked
  1510  000952  0E01               	movlw	high main@t1thread_data
  1511  000954  0101               	movlb	1	; () banked
  1512  000956  6F13               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1513  000958  0101               	movlb	1	; () banked
  1514  00095A  0E56               	movlw	low main@t1thread_data
  1515  00095C  0101               	movlb	1	; () banked
  1516  00095E  6F12               	movwf	timer1_lthread@tptr& (0+255),b
  1517  000960  0101               	movlb	1	; () banked
  1518  000962  C159  F114         	movff	main@msgtype,timer1_lthread@msgtype
  1519  000966  0101               	movlb	1	; () banked
  1520  000968  6B15               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1521  00096A  0101               	movlb	1	; () banked
  1522  00096C  5158               	movf	main@length& (0+255),w,b
  1523  00096E  0101               	movlb	1	; () banked
  1524  000970  6F16               	movwf	timer1_lthread@length& (0+255),b
  1525  000972  0101               	movlb	1	; () banked
  1526  000974  6B17               	clrf	(timer1_lthread@length+1)& (0+255),b
  1527  000976  0101               	movlb	1	; () banked
  1528  000978  BF16               	btfsc	timer1_lthread@length& (0+255),7,b
  1529  00097A  0717               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1530  00097C  0101               	movlb	1	; () banked
  1531  00097E  0E01               	movlw	high main@msgbuffer
  1532  000980  0101               	movlb	1	; () banked
  1533  000982  6F19               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1534  000984  0101               	movlb	1	; () banked
  1535  000986  0E37               	movlw	low main@msgbuffer
  1536  000988  0101               	movlb	1	; () banked
  1537  00098A  6F18               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1538  00098C  EC4B  F00C         	call	_timer1_lthread	;wreg free
  1539                           
  1540                           ;main.c: 483: break;
  1541  000990  D74E               	goto	l4237
  1542  000992                     l4275:
  1543                           
  1544                           ;main.c: 488: {
  1545                           ;main.c: 489: uart_response[0] = 0xf1;
  1546  000992  0EF1               	movlw	241
  1547  000994  0101               	movlb	1	; () banked
  1548  000996  6F48               	movwf	main@uart_response& (0+255),b
  1549                           
  1550                           ; BSR set to: 1
  1551                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1552  000998  C137  F149         	movff	main@msgbuffer,main@uart_response+1
  1553                           
  1554                           ; BSR set to: 1
  1555                           ;main.c: 491: send_uart_message( uart_response );
  1556  00099C  0101               	movlb	1	; () banked
  1557  00099E  0E01               	movlw	high main@uart_response
  1558  0009A0  0101               	movlb	1	; () banked
  1559  0009A2  6F13               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1560  0009A4  0101               	movlb	1	; () banked
  1561  0009A6  0E48               	movlw	low main@uart_response
  1562  0009A8  0101               	movlb	1	; () banked
  1563  0009AA  6F12               	movwf	send_uart_message@message_ptr& (0+255),b
  1564  0009AC  EC2D  F00F         	call	_send_uart_message	;wreg free
  1565                           
  1566                           ;main.c: 492: break;
  1567  0009B0  D73E               	goto	l4237
  1568  0009B2                     l4281:
  1569                           
  1570                           ;main.c: 495: {
  1571                           ;main.c: 496: uart_response[0] = 0xf2;
  1572  0009B2  0EF2               	movlw	242
  1573  0009B4  0101               	movlb	1	; () banked
  1574  0009B6  6F48               	movwf	main@uart_response& (0+255),b
  1575                           
  1576                           ; BSR set to: 1
  1577                           ;main.c: 497: uart_response[1] = msgbuffer[0];
  1578  0009B8  C137  F149         	movff	main@msgbuffer,main@uart_response+1
  1579                           
  1580                           ; BSR set to: 1
  1581                           ;main.c: 498: uart_response[2] = msgbuffer[1];
  1582  0009BC  C138  F14A         	movff	main@msgbuffer+1,main@uart_response+2
  1583                           
  1584                           ; BSR set to: 1
  1585                           ;main.c: 499: send_uart_message( uart_response );
  1586  0009C0  0101               	movlb	1	; () banked
  1587  0009C2  0E01               	movlw	high main@uart_response
  1588  0009C4  0101               	movlb	1	; () banked
  1589  0009C6  6F13               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1590  0009C8  0101               	movlb	1	; () banked
  1591  0009CA  0E48               	movlw	low main@uart_response
  1592  0009CC  0101               	movlb	1	; () banked
  1593  0009CE  6F12               	movwf	send_uart_message@message_ptr& (0+255),b
  1594  0009D0  EC2D  F00F         	call	_send_uart_message	;wreg free
  1595                           
  1596                           ;main.c: 500: break;
  1597  0009D4  D72C               	goto	l4237
  1598  0009D6                     l4289:
  1599                           
  1600                           ;main.c: 503: {
  1601                           ;main.c: 504: uart_response[0] = 0xf3;
  1602  0009D6  0EF3               	movlw	243
  1603  0009D8  0101               	movlb	1	; () banked
  1604  0009DA  6F48               	movwf	main@uart_response& (0+255),b
  1605                           
  1606                           ; BSR set to: 1
  1607                           ;main.c: 505: uart_response[1] = msgbuffer[0];
  1608  0009DC  C137  F149         	movff	main@msgbuffer,main@uart_response+1
  1609                           
  1610                           ; BSR set to: 1
  1611                           ;main.c: 506: send_uart_message( uart_response );
  1612  0009E0  0101               	movlb	1	; () banked
  1613  0009E2  0E01               	movlw	high main@uart_response
  1614  0009E4  0101               	movlb	1	; () banked
  1615  0009E6  6F13               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1616  0009E8  0101               	movlb	1	; () banked
  1617  0009EA  0E48               	movlw	low main@uart_response
  1618  0009EC  0101               	movlb	1	; () banked
  1619  0009EE  6F12               	movwf	send_uart_message@message_ptr& (0+255),b
  1620  0009F0  EC2D  F00F         	call	_send_uart_message	;wreg free
  1621                           
  1622                           ;main.c: 507: break;
  1623  0009F4  D71C               	goto	l4237
  1624  0009F6                     l4295:
  1625                           
  1626                           ;main.c: 510: {
  1627                           ;main.c: 511: uart_response[0] = 0xf4;
  1628  0009F6  0EF4               	movlw	244
  1629  0009F8  0101               	movlb	1	; () banked
  1630  0009FA  6F48               	movwf	main@uart_response& (0+255),b
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;main.c: 512: uart_response[1] = msgbuffer[0];
  1634  0009FC  C137  F149         	movff	main@msgbuffer,main@uart_response+1
  1635                           
  1636                           ; BSR set to: 1
  1637                           ;main.c: 513: send_uart_message( uart_response );
  1638  000A00  0101               	movlb	1	; () banked
  1639  000A02  0E01               	movlw	high main@uart_response
  1640  000A04  0101               	movlb	1	; () banked
  1641  000A06  6F13               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1642  000A08  0101               	movlb	1	; () banked
  1643  000A0A  0E48               	movlw	low main@uart_response
  1644  000A0C  0101               	movlb	1	; () banked
  1645  000A0E  6F12               	movwf	send_uart_message@message_ptr& (0+255),b
  1646  000A10  EC2D  F00F         	call	_send_uart_message	;wreg free
  1647                           
  1648                           ;main.c: 514: break;
  1649  000A14  D70C               	goto	l4237
  1650  000A16                     l4301:
  1651                           
  1652                           ;main.c: 518: {
  1653                           ;main.c: 519: uart_response[0] = 0x11;
  1654  000A16  0E11               	movlw	17
  1655  000A18  0101               	movlb	1	; () banked
  1656  000A1A  6F48               	movwf	main@uart_response& (0+255),b
  1657                           
  1658                           ; BSR set to: 1
  1659                           ;main.c: 520: uart_response[1] = msgbuffer[0];
  1660  000A1C  C137  F149         	movff	main@msgbuffer,main@uart_response+1
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;main.c: 521: send_uart_message( uart_response );
  1664  000A20  0101               	movlb	1	; () banked
  1665  000A22  0E01               	movlw	high main@uart_response
  1666  000A24  0101               	movlb	1	; () banked
  1667  000A26  6F13               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1668  000A28  0101               	movlb	1	; () banked
  1669  000A2A  0E48               	movlw	low main@uart_response
  1670  000A2C  0101               	movlb	1	; () banked
  1671  000A2E  6F12               	movwf	send_uart_message@message_ptr& (0+255),b
  1672  000A30  EC2D  F00F         	call	_send_uart_message	;wreg free
  1673                           
  1674                           ;main.c: 522: break;
  1675  000A34  D6FC               	goto	l4237
  1676  000A36                     l4307:
  1677                           
  1678                           ;main.c: 531: {
  1679                           ;main.c: 532: send_uart_message( sensor_data );
  1680  000A36  0101               	movlb	1	; () banked
  1681  000A38  0E01               	movlw	high main@sensor_data
  1682  000A3A  0101               	movlb	1	; () banked
  1683  000A3C  6F13               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1684  000A3E  0101               	movlb	1	; () banked
  1685  000A40  0E28               	movlw	low main@sensor_data
  1686  000A42  0101               	movlb	1	; () banked
  1687  000A44  6F12               	movwf	send_uart_message@message_ptr& (0+255),b
  1688  000A46  EC2D  F00F         	call	_send_uart_message	;wreg free
  1689                           
  1690                           ;main.c: 533: break;
  1691  000A4A  D6F1               	goto	l4237
  1692  000A4C                     l4311:
  1693  000A4C  0101               	movlb	1	; () banked
  1694  000A4E  5137               	movf	main@msgbuffer& (0+255),w,b
  1695                           
  1696                           ; Switch size 1, requested type "space"
  1697                           ; Number of cases is 1, Range of values is 2 to 2
  1698                           ; switch strategies available:
  1699                           ; Name         Instructions Cycles
  1700                           ; simple_byte            4     3 (average)
  1701                           ;	Chosen strategy is simple_byte
  1702  000A50  0A02               	xorlw	2	; case 2
  1703  000A52  B4D8               	btfsc	status,2,c
  1704  000A54  D7F0               	goto	l4307
  1705  000A56  D6EB               	goto	l4237
  1706  000A58                     l4315:
  1707                           
  1708                           ; BSR set to: 1
  1709  000A58  0101               	movlb	1	; () banked
  1710  000A5A  5159               	movf	main@msgtype& (0+255),w,b
  1711                           
  1712                           ; Switch size 1, requested type "space"
  1713                           ; Number of cases is 8, Range of values is 11 to 36
  1714                           ; switch strategies available:
  1715                           ; Name         Instructions Cycles
  1716                           ; simple_byte           25    13 (average)
  1717                           ;	Chosen strategy is simple_byte
  1718  000A5C  0A0B               	xorlw	11	; case 11
  1719  000A5E  B4D8               	btfsc	status,2,c
  1720  000A60  D777               	goto	l4273
  1721  000A62  0A15               	xorlw	21	; case 30
  1722  000A64  B4D8               	btfsc	status,2,c
  1723  000A66  D795               	goto	l4275
  1724  000A68  0A01               	xorlw	1	; case 31
  1725  000A6A  B4D8               	btfsc	status,2,c
  1726  000A6C  D7EF               	goto	l4311
  1727  000A6E  0A3F               	xorlw	63	; case 32
  1728  000A70  B4D8               	btfsc	status,2,c
  1729  000A72  D78F               	goto	l4275
  1730  000A74  0A01               	xorlw	1	; case 33
  1731  000A76  B4D8               	btfsc	status,2,c
  1732  000A78  D79C               	goto	l4281
  1733  000A7A  0A03               	xorlw	3	; case 34
  1734  000A7C  B4D8               	btfsc	status,2,c
  1735  000A7E  D7AB               	goto	l4289
  1736  000A80  0A01               	xorlw	1	; case 35
  1737  000A82  B4D8               	btfsc	status,2,c
  1738  000A84  D7B8               	goto	l4295
  1739  000A86  0A07               	xorlw	7	; case 36
  1740  000A88  B4D8               	btfsc	status,2,c
  1741  000A8A  D7C5               	goto	l4301
  1742  000A8C  D6D0               	goto	l4237
  1743  000A8E                     __end_of_main:
  1744                           	opt stack 0
  1745                           tblptru	equ	0xFF8
  1746                           tblptrh	equ	0xFF7
  1747                           tblptrl	equ	0xFF6
  1748                           tablat	equ	0xFF5
  1749                           prodh	equ	0xFF4
  1750                           prodl	equ	0xFF3
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           indf2	equ	0xFDF
  1754                           fsr2h	equ	0xFDA
  1755                           fsr2l	equ	0xFD9
  1756                           status	equ	0xFD8
  1757                           
  1758 ;; *************** function _uart_configure *****************
  1759 ;; Defined at:
  1760 ;;		line 22 in file "../src/my_uart.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;		None               void
  1767 ;; Registers used:
  1768 ;;		wreg, status,2
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:   10
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text1
  1789  001E3A                     __ptext1:
  1790                           	opt stack 0
  1791  001E3A                     _uart_configure:
  1792                           	opt stack 20
  1793                           
  1794                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1795                           
  1796                           ; BSR set to: 1
  1797                           ;incstack = 0
  1798  001E3A  8E94               	bsf	3988,7,c	;volatile
  1799                           
  1800                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1801  001E3C  9C94               	bcf	3988,6,c	;volatile
  1802                           
  1803                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1804  001E3E  867E               	bsf	3966,3,c	;volatile
  1805                           
  1806                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1807  001E40  84AD               	bsf	4013,2,c	;volatile
  1808                           
  1809                           ;my_uart.c: 31: SPBRGH1 = 0x00;
  1810  001E42  0E00               	movlw	0
  1811  001E44  6E7F               	movwf	3967,c	;volatile
  1812                           
  1813                           ;my_uart.c: 32: SPBRG1 = 0xCF;
  1814  001E46  0ECF               	movlw	207
  1815  001E48  6EB0               	movwf	4016,c	;volatile
  1816                           
  1817                           ;my_uart.c: 34: TXSTA1bits.SYNC = 0;
  1818  001E4A  98AD               	bcf	4013,4,c	;volatile
  1819                           
  1820                           ;my_uart.c: 35: RCSTA1bits.SPEN = 1;
  1821  001E4C  8EAC               	bsf	4012,7,c	;volatile
  1822                           
  1823                           ;my_uart.c: 38: IPR1bits.TX1IP = 0;
  1824  001E4E  989F               	bcf	3999,4,c	;volatile
  1825                           
  1826                           ;my_uart.c: 40: PIE1bits.TX1IE = 0;
  1827  001E50  989D               	bcf	3997,4,c	;volatile
  1828                           
  1829                           ;my_uart.c: 41: PIE1bits.RC1IE = 1;
  1830  001E52  8A9D               	bsf	3997,5,c	;volatile
  1831                           
  1832                           ;my_uart.c: 43: TXSTA1bits.TXEN = 1;
  1833  001E54  8AAD               	bsf	4013,5,c	;volatile
  1834                           
  1835                           ;my_uart.c: 44: RCSTA1bits.CREN = 1;
  1836  001E56  88AC               	bsf	4012,4,c	;volatile
  1837  001E58  0012               	return	
  1838  001E5A                     __end_of_uart_configure:
  1839                           	opt stack 0
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           prodh	equ	0xFF4
  1845                           prodl	equ	0xFF3
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           indf2	equ	0xFDF
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8
  1852                           
  1853 ;; *************** function _timer1_lthread *****************
  1854 ;; Defined at:
  1855 ;;		line 16 in file "../src/timer1_thread.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  tptr            2   18[BANK1 ] PTR struct __timer1_thre
  1858 ;;		 -> main@t1thread_data(2), 
  1859 ;;  msgtype         2   20[BANK1 ] int 
  1860 ;;  length          2   22[BANK1 ] int 
  1861 ;;  msgbuffer       2   24[BANK1 ] PTR unsigned char 
  1862 ;;		 -> main@msgbuffer(15), 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  retval          1   64[BANK0 ] char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  2   18[BANK1 ] int 
  1867 ;; Registers used:
  1868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1874 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;Total ram usage:        9 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:   13
  1881 ;; This function calls:
  1882 ;;		_FromMainHigh_sendmsg
  1883 ;;		___lwmod
  1884 ;;		_blink0
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text2
  1891  001896                     __ptext2:
  1892                           	opt stack 0
  1893  001896                     _timer1_lthread:
  1894                           	opt stack 17
  1895                           
  1896                           ;timer1_thread.c: 17: signed char retval;
  1897                           ;timer1_thread.c: 19: blink0();
  1898                           
  1899                           ;incstack = 0
  1900  001896  EC9E  F00F         	call	_blink0	;wreg free
  1901                           
  1902                           ;timer1_thread.c: 136: tptr->msgcount++;
  1903  00189A  C112  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1904  00189E  C113  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1905  0018A2  2ADE               	incf	postinc2,f,c
  1906  0018A4  0E00               	movlw	0
  1907  0018A6  22DD               	addwfc	postdec2,f,c
  1908                           
  1909                           ;timer1_thread.c: 139: if ((tptr->msgcount % 10) == 9) {
  1910  0018A8  C112  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1911  0018AC  C113  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1912  0018B0  0100               	movlb	0	; () banked
  1913  0018B2  CFDE F098          	movff	postinc2,___lwmod@dividend
  1914  0018B6  0100               	movlb	0	; () banked
  1915  0018B8  CFDD F099          	movff	postdec2,___lwmod@dividend+1
  1916  0018BC  0E00               	movlw	0
  1917  0018BE  0100               	movlb	0	; () banked
  1918  0018C0  6F9B               	movwf	(___lwmod@divisor+1)& (0+255),b
  1919  0018C2  0E0A               	movlw	10
  1920  0018C4  0100               	movlb	0	; () banked
  1921  0018C6  6F9A               	movwf	___lwmod@divisor& (0+255),b
  1922  0018C8  EC7C  F00C         	call	___lwmod	;wreg free
  1923  0018CC  0100               	movlb	0	; () banked
  1924  0018CE  5198               	movf	?___lwmod& (0+255),w,b
  1925  0018D0  0A09               	xorlw	9
  1926  0018D2  0100               	movlb	0	; () banked
  1927  0018D4  1199               	iorwf	(?___lwmod+1)& (0+255),w,b
  1928  0018D6  A4D8               	btfss	status,2,c
  1929  0018D8  0012               	return	
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;timer1_thread.c: 140: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void 
      +                          *) &(tptr->msgcount));
  1933  0018DA  0E14               	movlw	20
  1934  0018DC  0101               	movlb	1	; () banked
  1935  0018DE  6F0F               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1936  0018E0  0101               	movlb	1	; () banked
  1937  0018E2  C113  F111         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1938  0018E6  0101               	movlb	1	; () banked
  1939  0018E8  C112  F110         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1940  0018EC  0E02               	movlw	2
  1941  0018EE  EC75  F00E         	call	_FromMainHigh_sendmsg
  1942  0018F2  0100               	movlb	0	; () banked
  1943  0018F4  6FA0               	movwf	timer1_lthread@retval& (0+255),b
  1944  0018F6  0012               	return	
  1945  0018F8                     __end_of_timer1_lthread:
  1946                           	opt stack 0
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           prodh	equ	0xFF4
  1952                           prodl	equ	0xFF3
  1953                           postinc0	equ	0xFEE
  1954                           wreg	equ	0xFE8
  1955                           indf2	equ	0xFDF
  1956                           postinc2	equ	0xFDE
  1957                           postdec2	equ	0xFDD
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8
  1961                           
  1962 ;; *************** function _blink0 *****************
  1963 ;; Defined at:
  1964 ;;		line 46 in file "../src/debug.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;		None               void
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:   10
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_timer1_lthread
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text3
  1993  001F3C                     __ptext3:
  1994                           	opt stack 0
  1995  001F3C                     _blink0:
  1996                           	opt stack 19
  1997                           
  1998                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;incstack = 0
  2002  001F3C  708A               	btg	3978,0,c	;volatile
  2003  001F3E  0012               	return	
  2004  001F40                     __end_of_blink0:
  2005                           	opt stack 0
  2006                           tblptru	equ	0xFF8
  2007                           tblptrh	equ	0xFF7
  2008                           tblptrl	equ	0xFF6
  2009                           tablat	equ	0xFF5
  2010                           prodh	equ	0xFF4
  2011                           prodl	equ	0xFF3
  2012                           postinc0	equ	0xFEE
  2013                           wreg	equ	0xFE8
  2014                           indf2	equ	0xFDF
  2015                           postinc2	equ	0xFDE
  2016                           postdec2	equ	0xFDD
  2017                           fsr2h	equ	0xFDA
  2018                           fsr2l	equ	0xFD9
  2019                           status	equ	0xFD8
  2020                           
  2021 ;; *************** function ___lwmod *****************
  2022 ;; Defined at:
  2023 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  dividend        2   56[BANK0 ] unsigned int 
  2026 ;;  divisor         2   58[BANK0 ] unsigned int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  counter         1   60[BANK0 ] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  2   56[BANK0 ] unsigned int 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2038 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;Total ram usage:        5 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:   10
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_timer1_lthread
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text4
  2053  0018F8                     __ptext4:
  2054                           	opt stack 0
  2055  0018F8                     ___lwmod:
  2056                           	opt stack 19
  2057                           
  2058                           ;incstack = 0
  2059  0018F8  0100               	movlb	0	; () banked
  2060  0018FA  519B               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2061  0018FC  119A               	iorwf	___lwmod@divisor& (0+255),w,b
  2062  0018FE  B4D8               	btfsc	status,2,c
  2063  001900  D026               	goto	l1124
  2064                           
  2065                           ; BSR set to: 0
  2066  001902  0E01               	movlw	1
  2067  001904  0100               	movlb	0	; () banked
  2068  001906  6F9C               	movwf	___lwmod@counter& (0+255),b
  2069  001908  D006               	goto	l2803
  2070  00190A                     l2801:
  2071                           
  2072                           ; BSR set to: 0
  2073  00190A  0100               	movlb	0	; () banked
  2074  00190C  90D8               	bcf	status,0,c
  2075  00190E  379A               	rlcf	___lwmod@divisor& (0+255),f,b
  2076  001910  379B               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2077  001912  0100               	movlb	0	; () banked
  2078  001914  2B9C               	incf	___lwmod@counter& (0+255),f,b
  2079  001916                     l2803:
  2080                           
  2081                           ; BSR set to: 0
  2082  001916  0100               	movlb	0	; () banked
  2083  001918  AF9B               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2084  00191A  D7F7               	goto	l2801
  2085  00191C                     l2805:
  2086                           
  2087                           ; BSR set to: 0
  2088  00191C  0100               	movlb	0	; () banked
  2089  00191E  519A               	movf	___lwmod@divisor& (0+255),w,b
  2090  001920  0100               	movlb	0	; () banked
  2091  001922  5D98               	subwf	___lwmod@dividend& (0+255),w,b
  2092  001924  0100               	movlb	0	; () banked
  2093  001926  519B               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2094  001928  0100               	movlb	0	; () banked
  2095  00192A  5999               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2096  00192C  A0D8               	btfss	status,0,c
  2097  00192E  D008               	goto	l2809
  2098                           
  2099                           ; BSR set to: 0
  2100  001930  0100               	movlb	0	; () banked
  2101  001932  519A               	movf	___lwmod@divisor& (0+255),w,b
  2102  001934  0100               	movlb	0	; () banked
  2103  001936  5F98               	subwf	___lwmod@dividend& (0+255),f,b
  2104  001938  0100               	movlb	0	; () banked
  2105  00193A  519B               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2106  00193C  0100               	movlb	0	; () banked
  2107  00193E  5B99               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2108  001940                     l2809:
  2109                           
  2110                           ; BSR set to: 0
  2111  001940  0100               	movlb	0	; () banked
  2112  001942  90D8               	bcf	status,0,c
  2113  001944  339B               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2114  001946  339A               	rrcf	___lwmod@divisor& (0+255),f,b
  2115                           
  2116                           ; BSR set to: 0
  2117  001948  0100               	movlb	0	; () banked
  2118  00194A  2F9C               	decfsz	___lwmod@counter& (0+255),f,b
  2119  00194C  D7E7               	goto	l2805
  2120  00194E                     l1124:
  2121                           
  2122                           ; BSR set to: 0
  2123  00194E  C098  F098         	movff	___lwmod@dividend,?___lwmod
  2124  001952  C099  F099         	movff	___lwmod@dividend+1,?___lwmod+1
  2125                           
  2126                           ; BSR set to: 0
  2127  001956  0012               	return	
  2128  001958                     __end_of___lwmod:
  2129                           	opt stack 0
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           prodh	equ	0xFF4
  2135                           prodl	equ	0xFF3
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           indf2	equ	0xFDF
  2139                           postinc2	equ	0xFDE
  2140                           postdec2	equ	0xFDD
  2141                           fsr2h	equ	0xFDA
  2142                           fsr2l	equ	0xFD9
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function _FromMainHigh_sendmsg *****************
  2146 ;; Defined at:
  2147 ;;		line 174 in file "../src/messages.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  length          1    wreg     unsigned char 
  2150 ;;  msgtype         1   15[BANK1 ] unsigned char 
  2151 ;;  data            2   16[BANK1 ] PTR void 
  2152 ;;		 -> main@t1thread_data(2), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  length          1   63[BANK0 ] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      char 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2164 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2167 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2168 ;;Total ram usage:        4 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:   12
  2171 ;; This function calls:
  2172 ;;		_send_msg
  2173 ;; This function is called by:
  2174 ;;		_timer1_lthread
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text5
  2179  001CEA                     __ptext5:
  2180                           	opt stack 0
  2181  001CEA                     _FromMainHigh_sendmsg:
  2182                           	opt stack 17
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;incstack = 0
  2186                           ;FromMainHigh_sendmsg@length stored from wreg
  2187  001CEA  0100               	movlb	0	; () banked
  2188  001CEC  6F9F               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2192  001CEE  0103               	movlb	3	; () banked
  2193  001CF0  0E03               	movlw	high _FromMainHigh_MQ
  2194  001CF2  0101               	movlb	1	; () banked
  2195  001CF4  6F05               	movwf	(send_msg@qptr+1)& (0+255),b
  2196  001CF6  0103               	movlb	3	; () banked
  2197  001CF8  0E00               	movlw	low _FromMainHigh_MQ
  2198  001CFA  0101               	movlb	1	; () banked
  2199  001CFC  6F04               	movwf	send_msg@qptr& (0+255),b
  2200  001CFE  C09F  F106         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2201  001D02  C10F  F107         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2202  001D06  0101               	movlb	1	; () banked
  2203  001D08  C111  F109         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2204  001D0C  0101               	movlb	1	; () banked
  2205  001D0E  C110  F108         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2206  001D12  EC5A  F007         	call	_send_msg	;wreg free
  2207  001D16  0012               	return	
  2208  001D18                     __end_of_FromMainHigh_sendmsg:
  2209                           	opt stack 0
  2210                           tblptru	equ	0xFF8
  2211                           tblptrh	equ	0xFF7
  2212                           tblptrl	equ	0xFF6
  2213                           tablat	equ	0xFF5
  2214                           prodh	equ	0xFF4
  2215                           prodl	equ	0xFF3
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           indf2	equ	0xFDF
  2219                           postinc2	equ	0xFDE
  2220                           postdec2	equ	0xFDD
  2221                           fsr2h	equ	0xFDA
  2222                           fsr2l	equ	0xFD9
  2223                           status	equ	0xFD8
  2224                           
  2225 ;; *************** function _timer0_lthread *****************
  2226 ;; Defined at:
  2227 ;;		line 9 in file "../src/timer0_thread.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2230 ;;		 -> main@t0thread_data(2), 
  2231 ;;  msgtype         2   58[BANK0 ] int 
  2232 ;;  length          2   60[BANK0 ] int 
  2233 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2234 ;;		 -> main@msgbuffer(15), 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  msgval          2    0[BANK1 ] PTR unsigned int 
  2237 ;;		 -> main@msgbuffer(15), 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  2   56[BANK0 ] int 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2247 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;      Totals:         0       8       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;Total ram usage:       10 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:   10
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text6
  2262  001E7A                     __ptext6:
  2263                           	opt stack 0
  2264  001E7A                     _timer0_lthread:
  2265                           	opt stack 20
  2266                           
  2267                           ;timer0_thread.c: 10: unsigned int *msgval;
  2268                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2269                           
  2270                           ;incstack = 0
  2271  001E7A  0100               	movlb	0	; () banked
  2272  001E7C  0101               	movlb	1	; () banked
  2273  001E7E  C09F  F101         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2274  001E82  0100               	movlb	0	; () banked
  2275  001E84  0101               	movlb	1	; () banked
  2276  001E86  C09E  F100         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2277                           
  2278                           ; BSR set to: 1
  2279  001E8A  0012               	return	
  2280  001E8C                     __end_of_timer0_lthread:
  2281                           	opt stack 0
  2282                           tblptru	equ	0xFF8
  2283                           tblptrh	equ	0xFF7
  2284                           tblptrl	equ	0xFF6
  2285                           tablat	equ	0xFF5
  2286                           prodh	equ	0xFF4
  2287                           prodl	equ	0xFF3
  2288                           postinc0	equ	0xFEE
  2289                           wreg	equ	0xFE8
  2290                           indf2	equ	0xFDF
  2291                           postinc2	equ	0xFDE
  2292                           postdec2	equ	0xFDD
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8
  2296                           
  2297 ;; *************** function _send_uart_message *****************
  2298 ;; Defined at:
  2299 ;;		line 186 in file "../src/my_uart.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  message_ptr     2   18[BANK1 ] PTR unsigned char 
  2302 ;;		 -> main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  message_q_co    1   64[BANK0 ] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      unsigned char 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2314 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;Total ram usage:        3 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:   13
  2321 ;; This function calls:
  2322 ;;		_FromMainLow_sendmsg
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text7
  2329  001E5A                     __ptext7:
  2330                           	opt stack 0
  2331  001E5A                     _send_uart_message:
  2332                           	opt stack 17
  2333                           
  2334                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(14,31,(void *) messa
      +                          ge_ptr );
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;incstack = 0
  2338  001E5A  0E1F               	movlw	31
  2339  001E5C  0101               	movlb	1	; () banked
  2340  001E5E  6F0F               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2341  001E60  0101               	movlb	1	; () banked
  2342  001E62  C113  F111         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2343  001E66  0101               	movlb	1	; () banked
  2344  001E68  C112  F110         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2345  001E6C  0E0E               	movlw	14
  2346  001E6E  EC8C  F00E         	call	_FromMainLow_sendmsg
  2347  001E72  0100               	movlb	0	; () banked
  2348  001E74  6FA0               	movwf	send_uart_message@message_q_code& (0+255),b
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;my_uart.c: 193: }
  2352                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;my_uart.c: 191: {
  2356                           ;my_uart.c: 192: return 0x02;
  2357                           ;	Return value of _send_uart_message is never used
  2358                           
  2359                           ;my_uart.c: 190: if( message_q_code == -1)
  2360  001E76  889D               	bsf	3997,4,c	;volatile
  2361                           
  2362                           ; BSR set to: 0
  2363                           
  2364                           ;my_uart.c: 196: return 0x00;
  2365                           ;	Return value of _send_uart_message is never used
  2366  001E78  0012               	return	
  2367  001E7A                     __end_of_send_uart_message:
  2368                           	opt stack 0
  2369                           tblptru	equ	0xFF8
  2370                           tblptrh	equ	0xFF7
  2371                           tblptrl	equ	0xFF6
  2372                           tablat	equ	0xFF5
  2373                           prodh	equ	0xFF4
  2374                           prodl	equ	0xFF3
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           indf2	equ	0xFDF
  2378                           postinc2	equ	0xFDE
  2379                           postdec2	equ	0xFDD
  2380                           fsr2h	equ	0xFDA
  2381                           fsr2l	equ	0xFD9
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _FromMainLow_sendmsg *****************
  2385 ;; Defined at:
  2386 ;;		line 150 in file "../src/messages.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  length          1    wreg     unsigned char 
  2389 ;;  msgtype         1   15[BANK1 ] unsigned char 
  2390 ;;  data            2   16[BANK1 ] PTR void 
  2391 ;;		 -> main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  length          1   63[BANK0 ] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      char 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2403 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;Total ram usage:        4 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:   12
  2410 ;; This function calls:
  2411 ;;		_send_msg
  2412 ;; This function is called by:
  2413 ;;		_send_uart_message
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text8
  2418  001D18                     __ptext8:
  2419                           	opt stack 0
  2420  001D18                     _FromMainLow_sendmsg:
  2421                           	opt stack 17
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;incstack = 0
  2425                           ;FromMainLow_sendmsg@length stored from wreg
  2426  001D18  0100               	movlb	0	; () banked
  2427  001D1A  6F9F               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2431  001D1C  0102               	movlb	2	; () banked
  2432  001D1E  0E02               	movlw	high _FromMainLow_MQ
  2433  001D20  0101               	movlb	1	; () banked
  2434  001D22  6F05               	movwf	(send_msg@qptr+1)& (0+255),b
  2435  001D24  0102               	movlb	2	; () banked
  2436  001D26  0E00               	movlw	low _FromMainLow_MQ
  2437  001D28  0101               	movlb	1	; () banked
  2438  001D2A  6F04               	movwf	send_msg@qptr& (0+255),b
  2439  001D2C  C09F  F106         	movff	FromMainLow_sendmsg@length,send_msg@length
  2440  001D30  C10F  F107         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2441  001D34  0101               	movlb	1	; () banked
  2442  001D36  C111  F109         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2443  001D3A  0101               	movlb	1	; () banked
  2444  001D3C  C110  F108         	movff	FromMainLow_sendmsg@data,send_msg@data
  2445  001D40  EC5A  F007         	call	_send_msg	;wreg free
  2446  001D44  0012               	return	
  2447  001D46                     __end_of_FromMainLow_sendmsg:
  2448                           	opt stack 0
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           prodh	equ	0xFF4
  2454                           prodl	equ	0xFF3
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           indf2	equ	0xFDF
  2458                           postinc2	equ	0xFDE
  2459                           postdec2	equ	0xFDD
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _send_msg *****************
  2465 ;; Defined at:
  2466 ;;		line 24 in file "../src/messages.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  2469 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2470 ;;  length          1    6[BANK1 ] unsigned char 
  2471 ;;  msgtype         1    7[BANK1 ] unsigned char 
  2472 ;;  data            2    8[BANK1 ] PTR void 
  2473 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  2474 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  2475 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  2476 ;;		 -> main@t1thread_data(2), main@ic(38), 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  qmsg            2   13[BANK1 ] PTR struct __msg
  2479 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  2480 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2481 ;;  tlength         2   10[BANK1 ] unsigned int 
  2482 ;;  slot            1   12[BANK1 ] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      char 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2492 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2493 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2495 ;;      Totals:         0       1      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;Total ram usage:       12 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:   11
  2499 ;; This function calls:
  2500 ;;		___awmod
  2501 ;;		_memcpy
  2502 ;; This function is called by:
  2503 ;;		_FromMainLow_sendmsg
  2504 ;;		_FromMainHigh_sendmsg
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text9
  2509  000EB4                     __ptext9:
  2510                           	opt stack 0
  2511  000EB4                     _send_msg:
  2512                           	opt stack 17
  2513                           
  2514                           ;messages.c: 25: unsigned char slot;
  2515                           ;messages.c: 27: msg *qmsg;
  2516                           ;messages.c: 28: size_t tlength = length;
  2517                           
  2518                           ;incstack = 0
  2519  000EB4  0101               	movlb	1	; () banked
  2520  000EB6  C106  F10A         	movff	send_msg@length,send_msg@tlength
  2521  000EBA  0101               	movlb	1	; () banked
  2522  000EBC  6B0B               	clrf	(send_msg@tlength+1)& (0+255),b
  2523                           
  2524                           ; BSR set to: 1
  2525                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2526  000EBE  0101               	movlb	1	; () banked
  2527  000EC0  EE20 F055          	lfsr	2,85
  2528  000EC4  0101               	movlb	1	; () banked
  2529  000EC6  5104               	movf	send_msg@qptr& (0+255),w,b
  2530  000EC8  26D9               	addwf	fsr2l,f,c
  2531  000ECA  0101               	movlb	1	; () banked
  2532  000ECC  5105               	movf	(send_msg@qptr+1)& (0+255),w,b
  2533  000ECE  22DA               	addwfc	fsr2h,f,c
  2534  000ED0  50DF               	movf	indf2,w,c
  2535  000ED2  0101               	movlb	1	; () banked
  2536  000ED4  6F0C               	movwf	send_msg@slot& (0+255),b
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2540  000ED6  0101               	movlb	1	; () banked
  2541  000ED8  510C               	movf	send_msg@slot& (0+255),w,b
  2542  000EDA  0D11               	mullw	17
  2543  000EDC  50F3               	movf	prodl,w,c
  2544  000EDE  0101               	movlb	1	; () banked
  2545  000EE0  2504               	addwf	send_msg@qptr& (0+255),w,b
  2546  000EE2  0101               	movlb	1	; () banked
  2547  000EE4  6F0D               	movwf	send_msg@qmsg& (0+255),b
  2548  000EE6  50F4               	movf	prodh,w,c
  2549  000EE8  0101               	movlb	1	; () banked
  2550  000EEA  2105               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2551  000EEC  0101               	movlb	1	; () banked
  2552  000EEE  6F0E               	movwf	(send_msg@qmsg+1)& (0+255),b
  2553                           
  2554                           ; BSR set to: 1
  2555                           ;messages.c: 41: if (qmsg->full != 0) {
  2556  000EF0  C10D  FFD9         	movff	send_msg@qmsg,fsr2l
  2557  000EF4  C10E  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2558  000EF8  50DF               	movf	indf2,w,c
  2559  000EFA  B4D8               	btfsc	status,2,c
  2560  000EFC  D002               	goto	l3595
  2561                           
  2562                           ; BSR set to: 1
  2563                           ;messages.c: 42: return (-1);
  2564  000EFE  0EFF               	movlw	255
  2565  000F00  0012               	return	
  2566  000F02                     l3595:
  2567                           
  2568                           ; BSR set to: 1
  2569                           ;messages.c: 43: }
  2570                           ;messages.c: 46: qmsg->length = length;
  2571  000F02  0101               	movlb	1	; () banked
  2572  000F04  EE20 F001          	lfsr	2,1
  2573  000F08  0101               	movlb	1	; () banked
  2574  000F0A  510D               	movf	send_msg@qmsg& (0+255),w,b
  2575  000F0C  26D9               	addwf	fsr2l,f,c
  2576  000F0E  0101               	movlb	1	; () banked
  2577  000F10  510E               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2578  000F12  22DA               	addwfc	fsr2h,f,c
  2579  000F14  0101               	movlb	1	; () banked
  2580  000F16  C106  FFDF         	movff	send_msg@length,indf2
  2581                           
  2582                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2583  000F1A  0101               	movlb	1	; () banked
  2584  000F1C  EE20 F002          	lfsr	2,2
  2585  000F20  0101               	movlb	1	; () banked
  2586  000F22  510D               	movf	send_msg@qmsg& (0+255),w,b
  2587  000F24  26D9               	addwf	fsr2l,f,c
  2588  000F26  0101               	movlb	1	; () banked
  2589  000F28  510E               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2590  000F2A  22DA               	addwfc	fsr2h,f,c
  2591  000F2C  0101               	movlb	1	; () banked
  2592  000F2E  C107  FFDF         	movff	send_msg@msgtype,indf2
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2596  000F32  0E03               	movlw	3
  2597  000F34  0101               	movlb	1	; () banked
  2598  000F36  250D               	addwf	send_msg@qmsg& (0+255),w,b
  2599  000F38  0100               	movlb	0	; () banked
  2600  000F3A  6F98               	movwf	memcpy@d1& (0+255),b
  2601  000F3C  0E00               	movlw	0
  2602  000F3E  0101               	movlb	1	; () banked
  2603  000F40  210E               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2604  000F42  0100               	movlb	0	; () banked
  2605  000F44  6F99               	movwf	(memcpy@d1+1)& (0+255),b
  2606  000F46  0101               	movlb	1	; () banked
  2607  000F48  0100               	movlb	0	; () banked
  2608  000F4A  C109  F09B         	movff	send_msg@data+1,memcpy@s1+1
  2609  000F4E  0101               	movlb	1	; () banked
  2610  000F50  0100               	movlb	0	; () banked
  2611  000F52  C108  F09A         	movff	send_msg@data,memcpy@s1
  2612  000F56  C10A  F09C         	movff	send_msg@tlength,memcpy@n
  2613  000F5A  C10B  F09D         	movff	send_msg@tlength+1,memcpy@n+1
  2614  000F5E  EC34  F00D         	call	_memcpy	;wreg free
  2615                           
  2616                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2617  000F62  0101               	movlb	1	; () banked
  2618  000F64  EE20 F055          	lfsr	2,85
  2619  000F68  0101               	movlb	1	; () banked
  2620  000F6A  5104               	movf	send_msg@qptr& (0+255),w,b
  2621  000F6C  26D9               	addwf	fsr2l,f,c
  2622  000F6E  0101               	movlb	1	; () banked
  2623  000F70  5105               	movf	(send_msg@qptr+1)& (0+255),w,b
  2624  000F72  22DA               	addwfc	fsr2h,f,c
  2625  000F74  0101               	movlb	1	; () banked
  2626  000F76  EE10 F055          	lfsr	1,85
  2627  000F7A  0101               	movlb	1	; () banked
  2628  000F7C  5104               	movf	send_msg@qptr& (0+255),w,b
  2629  000F7E  26E1               	addwf	fsr1l,f,c
  2630  000F80  0101               	movlb	1	; () banked
  2631  000F82  5105               	movf	(send_msg@qptr+1)& (0+255),w,b
  2632  000F84  22E2               	addwfc	fsr1h,f,c
  2633  000F86  50E7               	movf	indf1,w,c
  2634  000F88  0100               	movlb	0	; () banked
  2635  000F8A  6F9E               	movwf	??_send_msg& (0+255),b
  2636  000F8C  0E01               	movlw	1
  2637  000F8E  0100               	movlb	0	; () banked
  2638  000F90  259E               	addwf	??_send_msg& (0+255),w,b
  2639  000F92  0100               	movlb	0	; () banked
  2640  000F94  6F98               	movwf	___awmod@dividend& (0+255),b
  2641  000F96  0100               	movlb	0	; () banked
  2642  000F98  6B99               	clrf	(___awmod@dividend+1)& (0+255),b
  2643  000F9A  0E00               	movlw	0
  2644  000F9C  2399               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2645  000F9E  0E00               	movlw	0
  2646  000FA0  0100               	movlb	0	; () banked
  2647  000FA2  6F9B               	movwf	(___awmod@divisor+1)& (0+255),b
  2648  000FA4  0E05               	movlw	5
  2649  000FA6  0100               	movlb	0	; () banked
  2650  000FA8  6F9A               	movwf	___awmod@divisor& (0+255),b
  2651  000FAA  ECB2  F009         	call	___awmod	;wreg free
  2652  000FAE  0100               	movlb	0	; () banked
  2653  000FB0  5198               	movf	?___awmod& (0+255),w,b
  2654  000FB2  6EDF               	movwf	indf2,c
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;messages.c: 59: qmsg->full = 1;
  2658  000FB4  C10D  FFD9         	movff	send_msg@qmsg,fsr2l
  2659  000FB8  C10E  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2660  000FBC  0E01               	movlw	1
  2661  000FBE  6EDF               	movwf	indf2,c
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;messages.c: 60: return (1);
  2665  000FC0  0E01               	movlw	1
  2666  000FC2  0012               	return	
  2667  000FC4                     __end_of_send_msg:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodh	equ	0xFF4
  2674                           prodl	equ	0xFF3
  2675                           postinc0	equ	0xFEE
  2676                           wreg	equ	0xFE8
  2677                           indf1	equ	0xFE7
  2678                           fsr1h	equ	0xFE2
  2679                           fsr1l	equ	0xFE1
  2680                           indf2	equ	0xFDF
  2681                           postinc2	equ	0xFDE
  2682                           postdec2	equ	0xFDD
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function _init_timer1_lthread *****************
  2688 ;; Defined at:
  2689 ;;		line 8 in file "../src/timer1_thread.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2692 ;;		 -> main@t1thread_data(2), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;		None               void
  2697 ;; Registers used:
  2698 ;;		wreg, fsr2l, fsr2h
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:   10
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text10
  2719  001E8C                     __ptext10:
  2720                           	opt stack 0
  2721  001E8C                     _init_timer1_lthread:
  2722                           	opt stack 20
  2723                           
  2724                           ;timer1_thread.c: 9: tptr->msgcount = 0;
  2725                           
  2726                           ;incstack = 0
  2727  001E8C  C098  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2728  001E90  C099  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2729  001E94  0E00               	movlw	0
  2730  001E96  6EDE               	movwf	postinc2,c
  2731  001E98  0E00               	movlw	0
  2732  001E9A  6EDD               	movwf	postdec2,c
  2733  001E9C  0012               	return	
  2734  001E9E                     __end_of_init_timer1_lthread:
  2735                           	opt stack 0
  2736                           tblptru	equ	0xFF8
  2737                           tblptrh	equ	0xFF7
  2738                           tblptrl	equ	0xFF6
  2739                           tablat	equ	0xFF5
  2740                           prodh	equ	0xFF4
  2741                           prodl	equ	0xFF3
  2742                           postinc0	equ	0xFEE
  2743                           wreg	equ	0xFE8
  2744                           indf1	equ	0xFE7
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           indf2	equ	0xFDF
  2748                           postinc2	equ	0xFDE
  2749                           postdec2	equ	0xFDD
  2750                           fsr2h	equ	0xFDA
  2751                           fsr2l	equ	0xFD9
  2752                           status	equ	0xFD8
  2753                           
  2754 ;; *************** function _init_queues *****************
  2755 ;; Defined at:
  2756 ;;		line 194 in file "../src/messages.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;		None               void
  2763 ;; Registers used:
  2764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:   11
  2777 ;; This function calls:
  2778 ;;		_init_queue
  2779 ;; This function is called by:
  2780 ;;		_main
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text11
  2785  001A10                     __ptext11:
  2786                           	opt stack 0
  2787  001A10                     _init_queues:
  2788                           	opt stack 19
  2789                           
  2790                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2791                           
  2792                           ;incstack = 0
  2793  001A10  0E00               	movlw	0
  2794  001A12  0100               	movlb	0	; () banked
  2795  001A14  6FB3               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2799  001A16  0101               	movlb	1	; () banked
  2800  001A18  0E01               	movlw	high _ToMainLow_MQ
  2801  001A1A  0100               	movlb	0	; () banked
  2802  001A1C  6F99               	movwf	(init_queue@qptr+1)& (0+255),b
  2803  001A1E  0101               	movlb	1	; () banked
  2804  001A20  0E81               	movlw	low _ToMainLow_MQ
  2805  001A22  0100               	movlb	0	; () banked
  2806  001A24  6F98               	movwf	init_queue@qptr& (0+255),b
  2807  001A26  EC19  F00C         	call	_init_queue	;wreg free
  2808                           
  2809                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2810  001A2A  0102               	movlb	2	; () banked
  2811  001A2C  0E02               	movlw	high _ToMainHigh_MQ
  2812  001A2E  0100               	movlb	0	; () banked
  2813  001A30  6F99               	movwf	(init_queue@qptr+1)& (0+255),b
  2814  001A32  0102               	movlb	2	; () banked
  2815  001A34  0E57               	movlw	low _ToMainHigh_MQ
  2816  001A36  0100               	movlb	0	; () banked
  2817  001A38  6F98               	movwf	init_queue@qptr& (0+255),b
  2818  001A3A  EC19  F00C         	call	_init_queue	;wreg free
  2819                           
  2820                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2821  001A3E  0102               	movlb	2	; () banked
  2822  001A40  0E02               	movlw	high _FromMainLow_MQ
  2823  001A42  0100               	movlb	0	; () banked
  2824  001A44  6F99               	movwf	(init_queue@qptr+1)& (0+255),b
  2825  001A46  0102               	movlb	2	; () banked
  2826  001A48  0E00               	movlw	low _FromMainLow_MQ
  2827  001A4A  0100               	movlb	0	; () banked
  2828  001A4C  6F98               	movwf	init_queue@qptr& (0+255),b
  2829  001A4E  EC19  F00C         	call	_init_queue	;wreg free
  2830                           
  2831                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2832  001A52  0103               	movlb	3	; () banked
  2833  001A54  0E03               	movlw	high _FromMainHigh_MQ
  2834  001A56  0100               	movlb	0	; () banked
  2835  001A58  6F99               	movwf	(init_queue@qptr+1)& (0+255),b
  2836  001A5A  0103               	movlb	3	; () banked
  2837  001A5C  0E00               	movlw	low _FromMainHigh_MQ
  2838  001A5E  0100               	movlb	0	; () banked
  2839  001A60  6F98               	movwf	init_queue@qptr& (0+255),b
  2840  001A62  EC19  F00C         	call	_init_queue	;wreg free
  2841  001A66  0012               	return	
  2842  001A68                     __end_of_init_queues:
  2843                           	opt stack 0
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           prodh	equ	0xFF4
  2849                           prodl	equ	0xFF3
  2850                           postinc0	equ	0xFEE
  2851                           wreg	equ	0xFE8
  2852                           indf1	equ	0xFE7
  2853                           fsr1h	equ	0xFE2
  2854                           fsr1l	equ	0xFE1
  2855                           indf2	equ	0xFDF
  2856                           postinc2	equ	0xFDE
  2857                           postdec2	equ	0xFDD
  2858                           fsr2h	equ	0xFDA
  2859                           fsr2l	equ	0xFD9
  2860                           status	equ	0xFD8
  2861                           
  2862 ;; *************** function _init_queue *****************
  2863 ;; Defined at:
  2864 ;;		line 14 in file "../src/messages.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2867 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  i               1   58[BANK0 ] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;		None               void
  2872 ;; Registers used:
  2873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2883 ;;Total ram usage:        3 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:   10
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_init_queues
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text12
  2894  001832                     __ptext12:
  2895                           	opt stack 0
  2896  001832                     _init_queue:
  2897                           	opt stack 19
  2898                           
  2899                           ;messages.c: 15: unsigned char i;
  2900                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2901                           
  2902                           ;incstack = 0
  2903  001832  0100               	movlb	0	; () banked
  2904  001834  EE20 F055          	lfsr	2,85
  2905  001838  0100               	movlb	0	; () banked
  2906  00183A  5198               	movf	init_queue@qptr& (0+255),w,b
  2907  00183C  26D9               	addwf	fsr2l,f,c
  2908  00183E  0100               	movlb	0	; () banked
  2909  001840  5199               	movf	(init_queue@qptr+1)& (0+255),w,b
  2910  001842  22DA               	addwfc	fsr2h,f,c
  2911  001844  0E00               	movlw	0
  2912  001846  6EDF               	movwf	indf2,c
  2913                           
  2914                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2915  001848  0100               	movlb	0	; () banked
  2916  00184A  EE20 F056          	lfsr	2,86
  2917  00184E  0100               	movlb	0	; () banked
  2918  001850  5198               	movf	init_queue@qptr& (0+255),w,b
  2919  001852  26D9               	addwf	fsr2l,f,c
  2920  001854  0100               	movlb	0	; () banked
  2921  001856  5199               	movf	(init_queue@qptr+1)& (0+255),w,b
  2922  001858  22DA               	addwfc	fsr2h,f,c
  2923  00185A  0E00               	movlw	0
  2924  00185C  6EDF               	movwf	indf2,c
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2928  00185E  0E00               	movlw	0
  2929  001860  0100               	movlb	0	; () banked
  2930  001862  6F9A               	movwf	init_queue@i& (0+255),b
  2931                           
  2932                           ; BSR set to: 0
  2933  001864  0E04               	movlw	4
  2934  001866  0100               	movlb	0	; () banked
  2935  001868  659A               	cpfsgt	init_queue@i& (0+255),b
  2936  00186A  D001               	goto	l2677
  2937  00186C  0012               	return	
  2938  00186E                     l2677:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;messages.c: 20: qptr->queue[i].full = 0;
  2942  00186E  0100               	movlb	0	; () banked
  2943  001870  519A               	movf	init_queue@i& (0+255),w,b
  2944  001872  0D11               	mullw	17
  2945  001874  50F3               	movf	prodl,w,c
  2946  001876  0100               	movlb	0	; () banked
  2947  001878  2598               	addwf	init_queue@qptr& (0+255),w,b
  2948  00187A  6ED9               	movwf	fsr2l,c
  2949  00187C  50F4               	movf	prodh,w,c
  2950  00187E  0100               	movlb	0	; () banked
  2951  001880  2199               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2952  001882  6EDA               	movwf	fsr2h,c
  2953  001884  0E00               	movlw	0
  2954  001886  6EDF               	movwf	indf2,c
  2955                           
  2956                           ; BSR set to: 0
  2957  001888  0100               	movlb	0	; () banked
  2958  00188A  2B9A               	incf	init_queue@i& (0+255),f,b
  2959                           
  2960                           ; BSR set to: 0
  2961  00188C  0E04               	movlw	4
  2962  00188E  0100               	movlb	0	; () banked
  2963  001890  659A               	cpfsgt	init_queue@i& (0+255),b
  2964  001892  D7ED               	goto	l2677
  2965  001894  0012               	return	
  2966  001896                     __end_of_init_queue:
  2967                           	opt stack 0
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           indf1	equ	0xFE7
  2977                           fsr1h	equ	0xFE2
  2978                           fsr1l	equ	0xFE1
  2979                           indf2	equ	0xFDF
  2980                           postinc2	equ	0xFDE
  2981                           postdec2	equ	0xFDD
  2982                           fsr2h	equ	0xFDA
  2983                           fsr2l	equ	0xFD9
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function _init_i2c *****************
  2987 ;; Defined at:
  2988 ;;		line 372 in file "../src/my_i2c.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2991 ;;		 -> main@ic(38), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;		None               void
  2996 ;; Registers used:
  2997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;Total ram usage:        2 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:   10
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text13
  3018  0017CC                     __ptext13:
  3019                           	opt stack 0
  3020  0017CC                     _init_i2c:
  3021                           	opt stack 20
  3022                           
  3023                           ;my_i2c.c: 373: ic_ptr = ic;
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;incstack = 0
  3027  0017CC  0100               	movlb	0	; () banked
  3028  0017CE  C099  F0C7         	movff	init_i2c@ic+1,_ic_ptr+1
  3029  0017D2  0100               	movlb	0	; () banked
  3030  0017D4  C098  F0C6         	movff	init_i2c@ic,_ic_ptr
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;my_i2c.c: 374: ic_ptr->buflen = 0;
  3034  0017D8  0100               	movlb	0	; () banked
  3035  0017DA  EE20 F00E          	lfsr	2,14
  3036  0017DE  0100               	movlb	0	; () banked
  3037  0017E0  51C6               	movf	_ic_ptr& (0+255),w,b
  3038  0017E2  26D9               	addwf	fsr2l,f,c
  3039  0017E4  0100               	movlb	0	; () banked
  3040  0017E6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3041  0017E8  22DA               	addwfc	fsr2h,f,c
  3042  0017EA  0E00               	movlw	0
  3043  0017EC  6EDF               	movwf	indf2,c
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;my_i2c.c: 375: ic_ptr->event_count = 0;
  3047  0017EE  0100               	movlb	0	; () banked
  3048  0017F0  EE20 F020          	lfsr	2,32
  3049  0017F4  0100               	movlb	0	; () banked
  3050  0017F6  51C6               	movf	_ic_ptr& (0+255),w,b
  3051  0017F8  26D9               	addwf	fsr2l,f,c
  3052  0017FA  0100               	movlb	0	; () banked
  3053  0017FC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3054  0017FE  22DA               	addwfc	fsr2h,f,c
  3055  001800  0E00               	movlw	0
  3056  001802  6EDF               	movwf	indf2,c
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;my_i2c.c: 376: ic_ptr->status = 0x5;
  3060  001804  0100               	movlb	0	; () banked
  3061  001806  EE20 F021          	lfsr	2,33
  3062  00180A  0100               	movlb	0	; () banked
  3063  00180C  51C6               	movf	_ic_ptr& (0+255),w,b
  3064  00180E  26D9               	addwf	fsr2l,f,c
  3065  001810  0100               	movlb	0	; () banked
  3066  001812  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3067  001814  22DA               	addwfc	fsr2h,f,c
  3068  001816  0E05               	movlw	5
  3069  001818  6EDF               	movwf	indf2,c
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;my_i2c.c: 377: ic_ptr->error_count = 0;
  3073  00181A  0100               	movlb	0	; () banked
  3074  00181C  EE20 F023          	lfsr	2,35
  3075  001820  0100               	movlb	0	; () banked
  3076  001822  51C6               	movf	_ic_ptr& (0+255),w,b
  3077  001824  26D9               	addwf	fsr2l,f,c
  3078  001826  0100               	movlb	0	; () banked
  3079  001828  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3080  00182A  22DA               	addwfc	fsr2h,f,c
  3081  00182C  0E00               	movlw	0
  3082  00182E  6EDF               	movwf	indf2,c
  3083                           
  3084                           ; BSR set to: 0
  3085  001830  0012               	return	
  3086  001832                     __end_of_init_i2c:
  3087                           	opt stack 0
  3088                           tblptru	equ	0xFF8
  3089                           tblptrh	equ	0xFF7
  3090                           tblptrl	equ	0xFF6
  3091                           tablat	equ	0xFF5
  3092                           prodh	equ	0xFF4
  3093                           prodl	equ	0xFF3
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           indf1	equ	0xFE7
  3097                           fsr1h	equ	0xFE2
  3098                           fsr1l	equ	0xFE1
  3099                           indf2	equ	0xFDF
  3100                           postinc2	equ	0xFDE
  3101                           postdec2	equ	0xFDD
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8
  3105                           
  3106 ;; *************** function _i2c_configure_slave *****************
  3107 ;; Defined at:
  3108 ;;		line 383 in file "../src/my_i2c.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  addr            1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  addr            1   56[BANK0 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;		None               void
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;Total ram usage:        1 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:   10
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text14
  3137  001DA0                     __ptext14:
  3138                           	opt stack 0
  3139  001DA0                     _i2c_configure_slave:
  3140                           	opt stack 20
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;incstack = 0
  3144                           ;i2c_configure_slave@addr stored from wreg
  3145  001DA0  0100               	movlb	0	; () banked
  3146  001DA2  6F98               	movwf	i2c_configure_slave@addr& (0+255),b
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;my_i2c.c: 392: TRISBbits.TRISB4 = 1;
  3150  001DA4  8893               	bsf	3987,4,c	;volatile
  3151                           
  3152                           ;my_i2c.c: 393: TRISBbits.TRISB5 = 1;
  3153  001DA6  8A93               	bsf	3987,5,c	;volatile
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;my_i2c.c: 401: SSPADD = addr;
  3157  001DA8  C098  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;my_i2c.c: 403: SSPSTAT = 0x0;
  3161  001DAC  0E00               	movlw	0
  3162  001DAE  6EC7               	movwf	4039,c	;volatile
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;my_i2c.c: 404: SSPCON1 = 0x0;
  3166  001DB0  0E00               	movlw	0
  3167  001DB2  6EC6               	movwf	4038,c	;volatile
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;my_i2c.c: 405: SSPCON2 = 0x0;
  3171  001DB4  0E00               	movlw	0
  3172  001DB6  6EC5               	movwf	4037,c	;volatile
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;my_i2c.c: 406: SSPCON1 |= 0x0E;
  3176  001DB8  0E0E               	movlw	14
  3177  001DBA  12C6               	iorwf	4038,f,c	;volatile
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;my_i2c.c: 407: SSPSTAT |= 0b10000000;
  3181  001DBC  8EC7               	bsf	4039,7,c	;volatile
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;my_i2c.c: 422: PORTBbits.SCL1 = 1;
  3185  001DBE  8881               	bsf	3969,4,c	;volatile
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;my_i2c.c: 423: PORTBbits.SDA1 = 1;
  3189  001DC0  8A81               	bsf	3969,5,c	;volatile
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;my_i2c.c: 432: SSPCON2bits.SEN = 1;
  3193  001DC2  80C5               	bsf	4037,0,c	;volatile
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;my_i2c.c: 433: SSPCON1 |= 0b00100000;
  3197  001DC4  8AC6               	bsf	4038,5,c	;volatile
  3198                           
  3199                           ; BSR set to: 0
  3200  001DC6  0012               	return	
  3201  001DC8                     __end_of_i2c_configure_slave:
  3202                           	opt stack 0
  3203                           tblptru	equ	0xFF8
  3204                           tblptrh	equ	0xFF7
  3205                           tblptrl	equ	0xFF6
  3206                           tablat	equ	0xFF5
  3207                           prodh	equ	0xFF4
  3208                           prodl	equ	0xFF3
  3209                           postinc0	equ	0xFEE
  3210                           wreg	equ	0xFE8
  3211                           indf1	equ	0xFE7
  3212                           fsr1h	equ	0xFE2
  3213                           fsr1l	equ	0xFE1
  3214                           indf2	equ	0xFDF
  3215                           postinc2	equ	0xFDE
  3216                           postdec2	equ	0xFDD
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8
  3220                           
  3221 ;; *************** function _enable_interrupts *****************
  3222 ;; Defined at:
  3223 ;;		line 14 in file "../src/interrupts.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;		None               void
  3230 ;; Registers used:
  3231 ;;		None
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:   10
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_main
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text15
  3252  001EEE                     __ptext15:
  3253                           	opt stack 0
  3254  001EEE                     _enable_interrupts:
  3255                           	opt stack 20
  3256                           
  3257                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;incstack = 0
  3261  001EEE  8ED0               	bsf	4048,7,c	;volatile
  3262                           
  3263                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3264  001EF0  8EF2               	bsf	intcon,7,c	;volatile
  3265                           
  3266                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3267  001EF2  8CF2               	bsf	intcon,6,c	;volatile
  3268  001EF4  0012               	return	
  3269  001EF6                     __end_of_enable_interrupts:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           intcon	equ	0xFF2
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           indf1	equ	0xFE7
  3281                           fsr1h	equ	0xFE2
  3282                           fsr1l	equ	0xFE1
  3283                           indf2	equ	0xFDF
  3284                           postinc2	equ	0xFDE
  3285                           postdec2	equ	0xFDD
  3286                           fsr2h	equ	0xFDA
  3287                           fsr2l	equ	0xFD9
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function _debug_configure *****************
  3291 ;; Defined at:
  3292 ;;		line 3 in file "../src/debug.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg, status,2
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:   10
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text16
  3321  001EE4                     __ptext16:
  3322                           	opt stack 0
  3323  001EE4                     _debug_configure:
  3324                           	opt stack 20
  3325                           
  3326                           ;debug.c: 5: TRISD = 0x00;
  3327                           
  3328                           ;incstack = 0
  3329  001EE4  0E00               	movlw	0
  3330  001EE6  6E95               	movwf	3989,c	;volatile
  3331                           
  3332                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3333  001EE8  9093               	bcf	3987,0,c	;volatile
  3334                           
  3335                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3336  001EEA  9293               	bcf	3987,1,c	;volatile
  3337  001EEC  0012               	return	
  3338  001EEE                     __end_of_debug_configure:
  3339                           	opt stack 0
  3340                           tblptru	equ	0xFF8
  3341                           tblptrh	equ	0xFF7
  3342                           tblptrl	equ	0xFF6
  3343                           tablat	equ	0xFF5
  3344                           prodh	equ	0xFF4
  3345                           prodl	equ	0xFF3
  3346                           intcon	equ	0xFF2
  3347                           postinc0	equ	0xFEE
  3348                           wreg	equ	0xFE8
  3349                           indf1	equ	0xFE7
  3350                           fsr1h	equ	0xFE2
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _blip4 *****************
  3360 ;; Defined at:
  3361 ;;		line 39 in file "../src/debug.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;		None               void
  3368 ;; Registers used:
  3369 ;;		None
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;Total ram usage:        0 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:   10
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text17
  3390  001EF6                     __ptext17:
  3391                           	opt stack 0
  3392  001EF6                     _blip4:
  3393                           	opt stack 20
  3394                           
  3395                           ;debug.c: 41: LATDbits.LD7 = 0;
  3396                           
  3397                           ;incstack = 0
  3398  001EF6  9E8C               	bcf	3980,7,c	;volatile
  3399                           
  3400                           ;debug.c: 42: LATDbits.LD7 = 1;
  3401  001EF8  8E8C               	bsf	3980,7,c	;volatile
  3402                           
  3403                           ;debug.c: 43: LATDbits.LD7 = 0;
  3404  001EFA  9E8C               	bcf	3980,7,c	;volatile
  3405  001EFC  0012               	return	
  3406  001EFE                     __end_of_blip4:
  3407                           	opt stack 0
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           prodh	equ	0xFF4
  3413                           prodl	equ	0xFF3
  3414                           intcon	equ	0xFF2
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           indf1	equ	0xFE7
  3418                           fsr1h	equ	0xFE2
  3419                           fsr1l	equ	0xFE1
  3420                           indf2	equ	0xFDF
  3421                           postinc2	equ	0xFDE
  3422                           postdec2	equ	0xFDD
  3423                           fsr2h	equ	0xFDA
  3424                           fsr2l	equ	0xFD9
  3425                           status	equ	0xFD8
  3426                           
  3427 ;; *************** function _blip3 *****************
  3428 ;; Defined at:
  3429 ;;		line 32 in file "../src/debug.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;		None               void
  3436 ;; Registers used:
  3437 ;;		None
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3447 ;;Total ram usage:        0 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:   10
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text18
  3458  001EFE                     __ptext18:
  3459                           	opt stack 0
  3460  001EFE                     _blip3:
  3461                           	opt stack 20
  3462                           
  3463                           ;debug.c: 34: LATDbits.LD6 = 0;
  3464                           
  3465                           ;incstack = 0
  3466  001EFE  9C8C               	bcf	3980,6,c	;volatile
  3467                           
  3468                           ;debug.c: 35: LATDbits.LD6 = 1;
  3469  001F00  8C8C               	bsf	3980,6,c	;volatile
  3470                           
  3471                           ;debug.c: 36: LATDbits.LD6 = 0;
  3472  001F02  9C8C               	bcf	3980,6,c	;volatile
  3473  001F04  0012               	return	
  3474  001F06                     __end_of_blip3:
  3475                           	opt stack 0
  3476                           tblptru	equ	0xFF8
  3477                           tblptrh	equ	0xFF7
  3478                           tblptrl	equ	0xFF6
  3479                           tablat	equ	0xFF5
  3480                           prodh	equ	0xFF4
  3481                           prodl	equ	0xFF3
  3482                           intcon	equ	0xFF2
  3483                           postinc0	equ	0xFEE
  3484                           wreg	equ	0xFE8
  3485                           indf1	equ	0xFE7
  3486                           fsr1h	equ	0xFE2
  3487                           fsr1l	equ	0xFE1
  3488                           indf2	equ	0xFDF
  3489                           postinc2	equ	0xFDE
  3490                           postdec2	equ	0xFDD
  3491                           fsr2h	equ	0xFDA
  3492                           fsr2l	equ	0xFD9
  3493                           status	equ	0xFD8
  3494                           
  3495 ;; *************** function _blip2 *****************
  3496 ;; Defined at:
  3497 ;;		line 25 in file "../src/debug.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;		None               void
  3504 ;; Registers used:
  3505 ;;		None
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:   10
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text19
  3526  001F06                     __ptext19:
  3527                           	opt stack 0
  3528  001F06                     _blip2:
  3529                           	opt stack 20
  3530                           
  3531                           ;debug.c: 27: LATDbits.LD5 = 0;
  3532                           
  3533                           ;incstack = 0
  3534  001F06  9A8C               	bcf	3980,5,c	;volatile
  3535                           
  3536                           ;debug.c: 28: LATDbits.LD5 = 1;
  3537  001F08  8A8C               	bsf	3980,5,c	;volatile
  3538                           
  3539                           ;debug.c: 29: LATDbits.LD5 = 0;
  3540  001F0A  9A8C               	bcf	3980,5,c	;volatile
  3541  001F0C  0012               	return	
  3542  001F0E                     __end_of_blip2:
  3543                           	opt stack 0
  3544                           tblptru	equ	0xFF8
  3545                           tblptrh	equ	0xFF7
  3546                           tblptrl	equ	0xFF6
  3547                           tablat	equ	0xFF5
  3548                           prodh	equ	0xFF4
  3549                           prodl	equ	0xFF3
  3550                           intcon	equ	0xFF2
  3551                           postinc0	equ	0xFEE
  3552                           wreg	equ	0xFE8
  3553                           indf1	equ	0xFE7
  3554                           fsr1h	equ	0xFE2
  3555                           fsr1l	equ	0xFE1
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           postdec2	equ	0xFDD
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _blip1 *****************
  3564 ;; Defined at:
  3565 ;;		line 18 in file "../src/debug.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;		None               void
  3572 ;; Registers used:
  3573 ;;		None
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:   10
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text20
  3594  001F0E                     __ptext20:
  3595                           	opt stack 0
  3596  001F0E                     _blip1:
  3597                           	opt stack 20
  3598                           
  3599                           ;debug.c: 20: LATDbits.LD4 = 0;
  3600                           
  3601                           ;incstack = 0
  3602  001F0E  988C               	bcf	3980,4,c	;volatile
  3603                           
  3604                           ;debug.c: 21: LATDbits.LD4 = 1;
  3605  001F10  888C               	bsf	3980,4,c	;volatile
  3606                           
  3607                           ;debug.c: 22: LATDbits.LD4 = 0;
  3608  001F12  988C               	bcf	3980,4,c	;volatile
  3609  001F14  0012               	return	
  3610  001F16                     __end_of_blip1:
  3611                           	opt stack 0
  3612                           tblptru	equ	0xFF8
  3613                           tblptrh	equ	0xFF7
  3614                           tblptrl	equ	0xFF6
  3615                           tablat	equ	0xFF5
  3616                           prodh	equ	0xFF4
  3617                           prodl	equ	0xFF3
  3618                           intcon	equ	0xFF2
  3619                           postinc0	equ	0xFEE
  3620                           wreg	equ	0xFE8
  3621                           indf1	equ	0xFE7
  3622                           fsr1h	equ	0xFE2
  3623                           fsr1l	equ	0xFE1
  3624                           indf2	equ	0xFDF
  3625                           postinc2	equ	0xFDE
  3626                           postdec2	equ	0xFDD
  3627                           fsr2h	equ	0xFDA
  3628                           fsr2l	equ	0xFD9
  3629                           status	equ	0xFD8
  3630                           
  3631 ;; *************** function _blip *****************
  3632 ;; Defined at:
  3633 ;;		line 11 in file "../src/debug.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;		None               void
  3640 ;; Registers used:
  3641 ;;		None
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:   10
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text21
  3662  001F16                     __ptext21:
  3663                           	opt stack 0
  3664  001F16                     _blip:
  3665                           	opt stack 20
  3666                           
  3667                           ;debug.c: 13: LATDbits.LD2 = 0;
  3668                           
  3669                           ;incstack = 0
  3670  001F16  948C               	bcf	3980,2,c	;volatile
  3671                           
  3672                           ;debug.c: 14: LATDbits.LD2 = 1;
  3673  001F18  848C               	bsf	3980,2,c	;volatile
  3674                           
  3675                           ;debug.c: 15: LATDbits.LD2 = 0;
  3676  001F1A  948C               	bcf	3980,2,c	;volatile
  3677  001F1C  0012               	return	
  3678  001F1E                     __end_of_blip:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           tblptrh	equ	0xFF7
  3682                           tblptrl	equ	0xFF6
  3683                           tablat	equ	0xFF5
  3684                           prodh	equ	0xFF4
  3685                           prodl	equ	0xFF3
  3686                           intcon	equ	0xFF2
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           indf1	equ	0xFE7
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           postinc2	equ	0xFDE
  3694                           postdec2	equ	0xFDD
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function _ToMainLow_recvmsg *****************
  3700 ;; Defined at:
  3701 ;;		line 112 in file "../src/messages.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  maxlength       1    wreg     unsigned char 
  3704 ;;  msgtype         2   16[BANK1 ] PTR unsigned char 
  3705 ;;		 -> main@msgtype(1), 
  3706 ;;  data            2   18[BANK1 ] PTR void 
  3707 ;;		 -> main@msgbuffer(15), 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  maxlength       1   64[BANK0 ] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      char 
  3712 ;; Registers used:
  3713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3719 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3722 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3723 ;;Total ram usage:        5 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:   12
  3726 ;; This function calls:
  3727 ;;		_recv_msg
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text22
  3734  001C16                     __ptext22:
  3735                           	opt stack 0
  3736  001C16                     _ToMainLow_recvmsg:
  3737                           	opt stack 18
  3738                           
  3739                           ;incstack = 0
  3740                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3741  001C16  0100               	movlb	0	; () banked
  3742  001C18  6FA0               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3746  001C1A  0101               	movlb	1	; () banked
  3747  001C1C  0E01               	movlw	high _ToMainLow_MQ
  3748  001C1E  0101               	movlb	1	; () banked
  3749  001C20  6F05               	movwf	(recv_msg@qptr+1)& (0+255),b
  3750  001C22  0101               	movlb	1	; () banked
  3751  001C24  0E81               	movlw	low _ToMainLow_MQ
  3752  001C26  0101               	movlb	1	; () banked
  3753  001C28  6F04               	movwf	recv_msg@qptr& (0+255),b
  3754  001C2A  C0A0  F106         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3755  001C2E  0101               	movlb	1	; () banked
  3756  001C30  C111  F108         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3757  001C34  0101               	movlb	1	; () banked
  3758  001C36  C110  F107         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3759  001C3A  0101               	movlb	1	; () banked
  3760  001C3C  C113  F10A         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3761  001C40  0101               	movlb	1	; () banked
  3762  001C42  C112  F109         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3763  001C46  EC1A  F006         	call	_recv_msg	;wreg free
  3764  001C4A  0012               	return	
  3765  001C4C                     __end_of_ToMainLow_recvmsg:
  3766                           	opt stack 0
  3767                           tblptru	equ	0xFF8
  3768                           tblptrh	equ	0xFF7
  3769                           tblptrl	equ	0xFF6
  3770                           tablat	equ	0xFF5
  3771                           prodh	equ	0xFF4
  3772                           prodl	equ	0xFF3
  3773                           intcon	equ	0xFF2
  3774                           postinc0	equ	0xFEE
  3775                           wreg	equ	0xFE8
  3776                           indf1	equ	0xFE7
  3777                           fsr1h	equ	0xFE2
  3778                           fsr1l	equ	0xFE1
  3779                           indf2	equ	0xFDF
  3780                           postinc2	equ	0xFDE
  3781                           postdec2	equ	0xFDD
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _ToMainHigh_recvmsg *****************
  3787 ;; Defined at:
  3788 ;;		line 135 in file "../src/messages.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  maxlength       1    wreg     unsigned char 
  3791 ;;  msgtype         2   16[BANK1 ] PTR unsigned char 
  3792 ;;		 -> main@msgtype(1), 
  3793 ;;  data            2   18[BANK1 ] PTR void 
  3794 ;;		 -> main@msgbuffer(15), 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  maxlength       1   64[BANK0 ] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      char 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3806 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;Total ram usage:        5 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:   12
  3813 ;; This function calls:
  3814 ;;		_recv_msg
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text23
  3821  001C4C                     __ptext23:
  3822                           	opt stack 0
  3823  001C4C                     _ToMainHigh_recvmsg:
  3824                           	opt stack 18
  3825                           
  3826                           ;incstack = 0
  3827                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3828  001C4C  0100               	movlb	0	; () banked
  3829  001C4E  6FA0               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3833  001C50  0102               	movlb	2	; () banked
  3834  001C52  0E02               	movlw	high _ToMainHigh_MQ
  3835  001C54  0101               	movlb	1	; () banked
  3836  001C56  6F05               	movwf	(recv_msg@qptr+1)& (0+255),b
  3837  001C58  0102               	movlb	2	; () banked
  3838  001C5A  0E57               	movlw	low _ToMainHigh_MQ
  3839  001C5C  0101               	movlb	1	; () banked
  3840  001C5E  6F04               	movwf	recv_msg@qptr& (0+255),b
  3841  001C60  C0A0  F106         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3842  001C64  0101               	movlb	1	; () banked
  3843  001C66  C111  F108         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3844  001C6A  0101               	movlb	1	; () banked
  3845  001C6C  C110  F107         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3846  001C70  0101               	movlb	1	; () banked
  3847  001C72  C113  F10A         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3848  001C76  0101               	movlb	1	; () banked
  3849  001C78  C112  F109         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3850  001C7C  EC1A  F006         	call	_recv_msg	;wreg free
  3851  001C80  0012               	return	
  3852  001C82                     __end_of_ToMainHigh_recvmsg:
  3853                           	opt stack 0
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           prodh	equ	0xFF4
  3859                           prodl	equ	0xFF3
  3860                           intcon	equ	0xFF2
  3861                           postinc0	equ	0xFEE
  3862                           wreg	equ	0xFE8
  3863                           indf1	equ	0xFE7
  3864                           fsr1h	equ	0xFE2
  3865                           fsr1l	equ	0xFE1
  3866                           indf2	equ	0xFDF
  3867                           postinc2	equ	0xFDE
  3868                           postdec2	equ	0xFDD
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873 ;; *************** function _recv_msg *****************
  3874 ;; Defined at:
  3875 ;;		line 63 in file "../src/messages.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  3878 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3879 ;;  maxlength       1    6[BANK1 ] unsigned char 
  3880 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  3881 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  3882 ;;		 -> main@msgtype(1), 
  3883 ;;  data            2    9[BANK1 ] PTR void 
  3884 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), main@msgbuffer(15), 
  3885 ;;		 -> main@ic(38), 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  qmsg            2   14[BANK1 ] PTR struct __msg
  3888 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3889 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3890 ;;  tlength         2   12[BANK1 ] unsigned int 
  3891 ;;  slot            1   11[BANK1 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      char 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3901 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3904 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3905 ;;Total ram usage:       14 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:   11
  3908 ;; This function calls:
  3909 ;;		___awmod
  3910 ;;		_memcpy
  3911 ;; This function is called by:
  3912 ;;		_ToMainLow_recvmsg
  3913 ;;		_ToMainHigh_recvmsg
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text24
  3918  000C34                     __ptext24:
  3919                           	opt stack 0
  3920  000C34                     _recv_msg:
  3921                           	opt stack 18
  3922                           
  3923                           ;messages.c: 64: unsigned char slot;
  3924                           ;messages.c: 68: msg *qmsg;
  3925                           ;messages.c: 69: size_t tlength;
  3926                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3927                           
  3928                           ;incstack = 0
  3929  000C34  0101               	movlb	1	; () banked
  3930  000C36  EE20 F056          	lfsr	2,86
  3931  000C3A  0101               	movlb	1	; () banked
  3932  000C3C  5104               	movf	recv_msg@qptr& (0+255),w,b
  3933  000C3E  26D9               	addwf	fsr2l,f,c
  3934  000C40  0101               	movlb	1	; () banked
  3935  000C42  5105               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3936  000C44  22DA               	addwfc	fsr2h,f,c
  3937  000C46  50DF               	movf	indf2,w,c
  3938  000C48  0101               	movlb	1	; () banked
  3939  000C4A  6F0B               	movwf	recv_msg@slot& (0+255),b
  3940                           
  3941                           ; BSR set to: 1
  3942                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3943  000C4C  0101               	movlb	1	; () banked
  3944  000C4E  510B               	movf	recv_msg@slot& (0+255),w,b
  3945  000C50  0D11               	mullw	17
  3946  000C52  50F3               	movf	prodl,w,c
  3947  000C54  0101               	movlb	1	; () banked
  3948  000C56  2504               	addwf	recv_msg@qptr& (0+255),w,b
  3949  000C58  0101               	movlb	1	; () banked
  3950  000C5A  6F0E               	movwf	recv_msg@qmsg& (0+255),b
  3951  000C5C  50F4               	movf	prodh,w,c
  3952  000C5E  0101               	movlb	1	; () banked
  3953  000C60  2105               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3954  000C62  0101               	movlb	1	; () banked
  3955  000C64  6F0F               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;messages.c: 74: if (qmsg->full == 1) {
  3959  000C66  0E01               	movlw	1
  3960  000C68  C10E  FFD9         	movff	recv_msg@qmsg,fsr2l
  3961  000C6C  C10F  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3962  000C70  62DF               	cpfseq	indf2,c
  3963  000C72  D07F               	goto	l3747
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3967  000C74  0101               	movlb	1	; () banked
  3968  000C76  EE20 F001          	lfsr	2,1
  3969  000C7A  0101               	movlb	1	; () banked
  3970  000C7C  510E               	movf	recv_msg@qmsg& (0+255),w,b
  3971  000C7E  26D9               	addwf	fsr2l,f,c
  3972  000C80  0101               	movlb	1	; () banked
  3973  000C82  510F               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3974  000C84  22DA               	addwfc	fsr2h,f,c
  3975  000C86  50DF               	movf	indf2,w,c
  3976  000C88  0101               	movlb	1	; () banked
  3977  000C8A  5D06               	subwf	recv_msg@maxlength& (0+255),w,b
  3978  000C8C  B0D8               	btfsc	status,0,c
  3979  000C8E  D002               	goto	l3731
  3980                           
  3981                           ; BSR set to: 1
  3982                           ;messages.c: 77: return (-3);
  3983  000C90  0EFD               	movlw	253
  3984  000C92  0012               	return	
  3985  000C94                     l3731:
  3986                           
  3987                           ; BSR set to: 1
  3988                           ;messages.c: 78: }
  3989                           ;messages.c: 80: tlength = qmsg->length;
  3990  000C94  0101               	movlb	1	; () banked
  3991  000C96  EE20 F001          	lfsr	2,1
  3992  000C9A  0101               	movlb	1	; () banked
  3993  000C9C  510E               	movf	recv_msg@qmsg& (0+255),w,b
  3994  000C9E  26D9               	addwf	fsr2l,f,c
  3995  000CA0  0101               	movlb	1	; () banked
  3996  000CA2  510F               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3997  000CA4  22DA               	addwfc	fsr2h,f,c
  3998  000CA6  50DF               	movf	indf2,w,c
  3999  000CA8  0100               	movlb	0	; () banked
  4000  000CAA  6F9E               	movwf	??_recv_msg& (0+255),b
  4001  000CAC  0100               	movlb	0	; () banked
  4002  000CAE  519E               	movf	??_recv_msg& (0+255),w,b
  4003  000CB0  0101               	movlb	1	; () banked
  4004  000CB2  6F0C               	movwf	recv_msg@tlength& (0+255),b
  4005  000CB4  0101               	movlb	1	; () banked
  4006  000CB6  6B0D               	clrf	(recv_msg@tlength+1)& (0+255),b
  4007                           
  4008                           ; BSR set to: 1
  4009                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4010  000CB8  0101               	movlb	1	; () banked
  4011  000CBA  0100               	movlb	0	; () banked
  4012  000CBC  C10A  F099         	movff	recv_msg@data+1,memcpy@d1+1
  4013  000CC0  0101               	movlb	1	; () banked
  4014  000CC2  0100               	movlb	0	; () banked
  4015  000CC4  C109  F098         	movff	recv_msg@data,memcpy@d1
  4016  000CC8  0E03               	movlw	3
  4017  000CCA  0101               	movlb	1	; () banked
  4018  000CCC  250E               	addwf	recv_msg@qmsg& (0+255),w,b
  4019  000CCE  0100               	movlb	0	; () banked
  4020  000CD0  6F9E               	movwf	??_recv_msg& (0+255),b
  4021  000CD2  0E00               	movlw	0
  4022  000CD4  0101               	movlb	1	; () banked
  4023  000CD6  210F               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4024  000CD8  0100               	movlb	0	; () banked
  4025  000CDA  6F9F               	movwf	(??_recv_msg+1)& (0+255),b
  4026  000CDC  C09E  F09A         	movff	??_recv_msg,memcpy@s1
  4027  000CE0  C09F  F09B         	movff	??_recv_msg+1,memcpy@s1+1
  4028  000CE4  C10C  F09C         	movff	recv_msg@tlength,memcpy@n
  4029  000CE8  C10D  F09D         	movff	recv_msg@tlength+1,memcpy@n+1
  4030  000CEC  EC34  F00D         	call	_memcpy	;wreg free
  4031                           
  4032                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4033  000CF0  0101               	movlb	1	; () banked
  4034  000CF2  EE20 F056          	lfsr	2,86
  4035  000CF6  0101               	movlb	1	; () banked
  4036  000CF8  5104               	movf	recv_msg@qptr& (0+255),w,b
  4037  000CFA  26D9               	addwf	fsr2l,f,c
  4038  000CFC  0101               	movlb	1	; () banked
  4039  000CFE  5105               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4040  000D00  22DA               	addwfc	fsr2h,f,c
  4041  000D02  0101               	movlb	1	; () banked
  4042  000D04  EE10 F056          	lfsr	1,86
  4043  000D08  0101               	movlb	1	; () banked
  4044  000D0A  5104               	movf	recv_msg@qptr& (0+255),w,b
  4045  000D0C  26E1               	addwf	fsr1l,f,c
  4046  000D0E  0101               	movlb	1	; () banked
  4047  000D10  5105               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4048  000D12  22E2               	addwfc	fsr1h,f,c
  4049  000D14  50E7               	movf	indf1,w,c
  4050  000D16  0100               	movlb	0	; () banked
  4051  000D18  6F9E               	movwf	??_recv_msg& (0+255),b
  4052  000D1A  0E01               	movlw	1
  4053  000D1C  0100               	movlb	0	; () banked
  4054  000D1E  259E               	addwf	??_recv_msg& (0+255),w,b
  4055  000D20  0100               	movlb	0	; () banked
  4056  000D22  6F98               	movwf	___awmod@dividend& (0+255),b
  4057  000D24  0100               	movlb	0	; () banked
  4058  000D26  6B99               	clrf	(___awmod@dividend+1)& (0+255),b
  4059  000D28  0E00               	movlw	0
  4060  000D2A  2399               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4061  000D2C  0E00               	movlw	0
  4062  000D2E  0100               	movlb	0	; () banked
  4063  000D30  6F9B               	movwf	(___awmod@divisor+1)& (0+255),b
  4064  000D32  0E05               	movlw	5
  4065  000D34  0100               	movlb	0	; () banked
  4066  000D36  6F9A               	movwf	___awmod@divisor& (0+255),b
  4067  000D38  ECB2  F009         	call	___awmod	;wreg free
  4068  000D3C  0100               	movlb	0	; () banked
  4069  000D3E  5198               	movf	?___awmod& (0+255),w,b
  4070  000D40  6EDF               	movwf	indf2,c
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4074  000D42  0101               	movlb	1	; () banked
  4075  000D44  EE20 F002          	lfsr	2,2
  4076  000D48  0101               	movlb	1	; () banked
  4077  000D4A  510E               	movf	recv_msg@qmsg& (0+255),w,b
  4078  000D4C  26D9               	addwf	fsr2l,f,c
  4079  000D4E  0101               	movlb	1	; () banked
  4080  000D50  510F               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4081  000D52  22DA               	addwfc	fsr2h,f,c
  4082  000D54  C107  FFE1         	movff	recv_msg@msgtype,fsr1l
  4083  000D58  C108  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4084  000D5C  CFDF FFE7          	movff	indf2,indf1
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;messages.c: 91: qmsg->full = 0;
  4088  000D60  C10E  FFD9         	movff	recv_msg@qmsg,fsr2l
  4089  000D64  C10F  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4090  000D68  0E00               	movlw	0
  4091  000D6A  6EDF               	movwf	indf2,c
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;messages.c: 92: return (tlength);
  4095  000D6C  0101               	movlb	1	; () banked
  4096  000D6E  510C               	movf	recv_msg@tlength& (0+255),w,b
  4097  000D70  0012               	return	
  4098  000D72                     l3747:
  4099                           
  4100                           ; BSR set to: 1
  4101                           ;messages.c: 94: return (-4);
  4102  000D72  0EFC               	movlw	252
  4103  000D74  0012               	return	
  4104  000D76                     __end_of_recv_msg:
  4105                           	opt stack 0
  4106                           tblptru	equ	0xFF8
  4107                           tblptrh	equ	0xFF7
  4108                           tblptrl	equ	0xFF6
  4109                           tablat	equ	0xFF5
  4110                           prodh	equ	0xFF4
  4111                           prodl	equ	0xFF3
  4112                           intcon	equ	0xFF2
  4113                           postinc0	equ	0xFEE
  4114                           wreg	equ	0xFE8
  4115                           indf1	equ	0xFE7
  4116                           fsr1h	equ	0xFE2
  4117                           fsr1l	equ	0xFE1
  4118                           indf2	equ	0xFDF
  4119                           postinc2	equ	0xFDE
  4120                           postdec2	equ	0xFDD
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function _memcpy *****************
  4126 ;; Defined at:
  4127 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  d1              2   56[BANK0 ] PTR void 
  4130 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4131 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  4132 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4133 ;;		 -> main@ic(38), 
  4134 ;;  s1              2   58[BANK0 ] PTR const void 
  4135 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4136 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4137 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  4138 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4139 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4140 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  4141 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4142 ;;  n               2   60[BANK0 ] unsigned int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  4145 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4146 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4147 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  4148 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4149 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4150 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  4151 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4152 ;;  d               2    0[BANK1 ] PTR unsigned char 
  4153 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4154 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  4155 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4156 ;;		 -> main@ic(38), 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  2   56[BANK0 ] PTR void 
  4159 ;; Registers used:
  4160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4166 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4167 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4169 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4170 ;;Total ram usage:       10 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:   10
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_send_msg
  4177 ;;		_recv_msg
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text25
  4182  001A68                     __ptext25:
  4183                           	opt stack 0
  4184  001A68                     _memcpy:
  4185                           	opt stack 17
  4186                           
  4187                           ; BSR set to: 1
  4188                           ;incstack = 0
  4189  001A68  0100               	movlb	0	; () banked
  4190  001A6A  0101               	movlb	1	; () banked
  4191  001A6C  C09B  F103         	movff	memcpy@s1+1,memcpy@s+1
  4192  001A70  0100               	movlb	0	; () banked
  4193  001A72  0101               	movlb	1	; () banked
  4194  001A74  C09A  F102         	movff	memcpy@s1,memcpy@s
  4195  001A78  0100               	movlb	0	; () banked
  4196  001A7A  0101               	movlb	1	; () banked
  4197  001A7C  C099  F101         	movff	memcpy@d1+1,memcpy@d+1
  4198  001A80  0100               	movlb	0	; () banked
  4199  001A82  0101               	movlb	1	; () banked
  4200  001A84  C098  F100         	movff	memcpy@d1,memcpy@d
  4201  001A88  D010               	goto	l3545
  4202  001A8A                     l3539:
  4203  001A8A  C102  FFD9         	movff	memcpy@s,fsr2l
  4204  001A8E  C103  FFDA         	movff	memcpy@s+1,fsr2h
  4205  001A92  C100  FFE1         	movff	memcpy@d,fsr1l
  4206  001A96  C101  FFE2         	movff	memcpy@d+1,fsr1h
  4207  001A9A  CFDF FFE7          	movff	indf2,indf1
  4208  001A9E  0101               	movlb	1	; () banked
  4209  001AA0  4B02               	infsnz	memcpy@s& (0+255),f,b
  4210  001AA2  2B03               	incf	(memcpy@s+1)& (0+255),f,b
  4211                           
  4212                           ; BSR set to: 1
  4213  001AA4  0101               	movlb	1	; () banked
  4214  001AA6  4B00               	infsnz	memcpy@d& (0+255),f,b
  4215  001AA8  2B01               	incf	(memcpy@d+1)& (0+255),f,b
  4216  001AAA                     l3545:
  4217                           
  4218                           ; BSR set to: 1
  4219  001AAA  0100               	movlb	0	; () banked
  4220  001AAC  079C               	decf	memcpy@n& (0+255),f,b
  4221  001AAE  A0D8               	btfss	status,0,c
  4222  001AB0  079D               	decf	(memcpy@n+1)& (0+255),f,b
  4223  001AB2  0100               	movlb	0	; () banked
  4224  001AB4  299C               	incf	memcpy@n& (0+255),w,b
  4225  001AB6  B4D8               	btfsc	status,2,c
  4226  001AB8  299D               	incf	(memcpy@n+1)& (0+255),w,b
  4227  001ABA  B4D8               	btfsc	status,2,c
  4228                           
  4229                           ; BSR set to: 0
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;	Return value of _memcpy is never used
  4233  001ABC  0012               	return	
  4234  001ABE  D7E5               	goto	l3539
  4235  001AC0                     __end_of_memcpy:
  4236                           	opt stack 0
  4237                           tblptru	equ	0xFF8
  4238                           tblptrh	equ	0xFF7
  4239                           tblptrl	equ	0xFF6
  4240                           tablat	equ	0xFF5
  4241                           prodh	equ	0xFF4
  4242                           prodl	equ	0xFF3
  4243                           intcon	equ	0xFF2
  4244                           postinc0	equ	0xFEE
  4245                           wreg	equ	0xFE8
  4246                           indf1	equ	0xFE7
  4247                           fsr1h	equ	0xFE2
  4248                           fsr1l	equ	0xFE1
  4249                           indf2	equ	0xFDF
  4250                           postinc2	equ	0xFDE
  4251                           postdec2	equ	0xFDD
  4252                           fsr2h	equ	0xFDA
  4253                           fsr2l	equ	0xFD9
  4254                           status	equ	0xFD8
  4255                           
  4256 ;; *************** function ___awmod *****************
  4257 ;; Defined at:
  4258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  dividend        2   56[BANK0 ] int 
  4261 ;;  divisor         2   58[BANK0 ] int 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  sign            1   61[BANK0 ] unsigned char 
  4264 ;;  counter         1   60[BANK0 ] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2   56[BANK0 ] int 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0, prodl
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4274 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4277 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4278 ;;Total ram usage:        6 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:   10
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_send_msg
  4285 ;;		_recv_msg
  4286 ;;		i1_send_msg
  4287 ;;		i2_send_msg
  4288 ;;		i1_recv_msg
  4289 ;;		i2_recv_msg
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text26
  4294  001364                     __ptext26:
  4295                           	opt stack 0
  4296  001364                     ___awmod:
  4297                           	opt stack 17
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;incstack = 0
  4301  001364  0E00               	movlw	0
  4302  001366  0100               	movlb	0	; () banked
  4303  001368  6F9D               	movwf	___awmod@sign& (0+255),b
  4304                           
  4305                           ; BSR set to: 0
  4306  00136A  0100               	movlb	0	; () banked
  4307  00136C  5199               	movf	(___awmod@dividend+1)& (0+255),w,b
  4308  00136E  0A80               	xorlw	128
  4309  001370  6EF3               	movwf	prodl,c
  4310  001372  0E80               	movlw	128
  4311  001374  5CF3               	subwf	prodl,w,c
  4312  001376  0E00               	movlw	0
  4313  001378  B4D8               	btfsc	status,2,c
  4314  00137A  5D98               	subwf	___awmod@dividend& (0+255),w,b
  4315  00137C  B0D8               	btfsc	status,0,c
  4316  00137E  D009               	goto	l3555
  4317                           
  4318                           ; BSR set to: 0
  4319  001380  0100               	movlb	0	; () banked
  4320  001382  6D98               	negf	___awmod@dividend& (0+255),b
  4321  001384  0100               	movlb	0	; () banked
  4322  001386  1F99               	comf	(___awmod@dividend+1)& (0+255),f,b
  4323  001388  B0D8               	btfsc	status,0,c
  4324  00138A  2B99               	incf	(___awmod@dividend+1)& (0+255),f,b
  4325                           
  4326                           ; BSR set to: 0
  4327  00138C  0E01               	movlw	1
  4328  00138E  0100               	movlb	0	; () banked
  4329  001390  6F9D               	movwf	___awmod@sign& (0+255),b
  4330  001392                     l3555:
  4331                           
  4332                           ; BSR set to: 0
  4333  001392  0100               	movlb	0	; () banked
  4334  001394  519B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4335  001396  0A80               	xorlw	128
  4336  001398  6EF3               	movwf	prodl,c
  4337  00139A  0E80               	movlw	128
  4338  00139C  5CF3               	subwf	prodl,w,c
  4339  00139E  0E00               	movlw	0
  4340  0013A0  B4D8               	btfsc	status,2,c
  4341  0013A2  5D9A               	subwf	___awmod@divisor& (0+255),w,b
  4342  0013A4  B0D8               	btfsc	status,0,c
  4343  0013A6  D006               	goto	l3559
  4344                           
  4345                           ; BSR set to: 0
  4346  0013A8  0100               	movlb	0	; () banked
  4347  0013AA  6D9A               	negf	___awmod@divisor& (0+255),b
  4348  0013AC  0100               	movlb	0	; () banked
  4349  0013AE  1F9B               	comf	(___awmod@divisor+1)& (0+255),f,b
  4350  0013B0  B0D8               	btfsc	status,0,c
  4351  0013B2  2B9B               	incf	(___awmod@divisor+1)& (0+255),f,b
  4352  0013B4                     l3559:
  4353                           
  4354                           ; BSR set to: 0
  4355  0013B4  0100               	movlb	0	; () banked
  4356  0013B6  519B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4357  0013B8  119A               	iorwf	___awmod@divisor& (0+255),w,b
  4358  0013BA  B4D8               	btfsc	status,2,c
  4359  0013BC  D026               	goto	l3575
  4360                           
  4361                           ; BSR set to: 0
  4362  0013BE  0E01               	movlw	1
  4363  0013C0  0100               	movlb	0	; () banked
  4364  0013C2  6F9C               	movwf	___awmod@counter& (0+255),b
  4365  0013C4  D006               	goto	l3565
  4366  0013C6                     l3563:
  4367                           
  4368                           ; BSR set to: 0
  4369  0013C6  0100               	movlb	0	; () banked
  4370  0013C8  90D8               	bcf	status,0,c
  4371  0013CA  379A               	rlcf	___awmod@divisor& (0+255),f,b
  4372  0013CC  379B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4373  0013CE  0100               	movlb	0	; () banked
  4374  0013D0  2B9C               	incf	___awmod@counter& (0+255),f,b
  4375  0013D2                     l3565:
  4376                           
  4377                           ; BSR set to: 0
  4378  0013D2  0100               	movlb	0	; () banked
  4379  0013D4  AF9B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4380  0013D6  D7F7               	goto	l3563
  4381  0013D8                     l3567:
  4382                           
  4383                           ; BSR set to: 0
  4384  0013D8  0100               	movlb	0	; () banked
  4385  0013DA  519A               	movf	___awmod@divisor& (0+255),w,b
  4386  0013DC  0100               	movlb	0	; () banked
  4387  0013DE  5D98               	subwf	___awmod@dividend& (0+255),w,b
  4388  0013E0  0100               	movlb	0	; () banked
  4389  0013E2  519B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4390  0013E4  0100               	movlb	0	; () banked
  4391  0013E6  5999               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4392  0013E8  A0D8               	btfss	status,0,c
  4393  0013EA  D008               	goto	l3571
  4394                           
  4395                           ; BSR set to: 0
  4396  0013EC  0100               	movlb	0	; () banked
  4397  0013EE  519A               	movf	___awmod@divisor& (0+255),w,b
  4398  0013F0  0100               	movlb	0	; () banked
  4399  0013F2  5F98               	subwf	___awmod@dividend& (0+255),f,b
  4400  0013F4  0100               	movlb	0	; () banked
  4401  0013F6  519B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4402  0013F8  0100               	movlb	0	; () banked
  4403  0013FA  5B99               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4404  0013FC                     l3571:
  4405                           
  4406                           ; BSR set to: 0
  4407  0013FC  0100               	movlb	0	; () banked
  4408  0013FE  90D8               	bcf	status,0,c
  4409  001400  339B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4410  001402  339A               	rrcf	___awmod@divisor& (0+255),f,b
  4411                           
  4412                           ; BSR set to: 0
  4413  001404  0100               	movlb	0	; () banked
  4414  001406  2F9C               	decfsz	___awmod@counter& (0+255),f,b
  4415  001408  D7E7               	goto	l3567
  4416  00140A                     l3575:
  4417                           
  4418                           ; BSR set to: 0
  4419  00140A  0100               	movlb	0	; () banked
  4420  00140C  519D               	movf	___awmod@sign& (0+255),w,b
  4421  00140E  B4D8               	btfsc	status,2,c
  4422  001410  D006               	goto	l3579
  4423                           
  4424                           ; BSR set to: 0
  4425  001412  0100               	movlb	0	; () banked
  4426  001414  6D98               	negf	___awmod@dividend& (0+255),b
  4427  001416  0100               	movlb	0	; () banked
  4428  001418  1F99               	comf	(___awmod@dividend+1)& (0+255),f,b
  4429  00141A  B0D8               	btfsc	status,0,c
  4430  00141C  2B99               	incf	(___awmod@dividend+1)& (0+255),f,b
  4431  00141E                     l3579:
  4432                           
  4433                           ; BSR set to: 0
  4434  00141E  C098  F098         	movff	___awmod@dividend,?___awmod
  4435  001422  C099  F099         	movff	___awmod@dividend+1,?___awmod+1
  4436  001426  0012               	return	
  4437  001428                     __end_of___awmod:
  4438                           	opt stack 0
  4439                           tblptru	equ	0xFF8
  4440                           tblptrh	equ	0xFF7
  4441                           tblptrl	equ	0xFF6
  4442                           tablat	equ	0xFF5
  4443                           prodh	equ	0xFF4
  4444                           prodl	equ	0xFF3
  4445                           intcon	equ	0xFF2
  4446                           postinc0	equ	0xFEE
  4447                           wreg	equ	0xFE8
  4448                           indf1	equ	0xFE7
  4449                           fsr1h	equ	0xFE2
  4450                           fsr1l	equ	0xFE1
  4451                           indf2	equ	0xFDF
  4452                           postinc2	equ	0xFDE
  4453                           postdec2	equ	0xFDD
  4454                           fsr2h	equ	0xFDA
  4455                           fsr2l	equ	0xFD9
  4456                           status	equ	0xFD8
  4457                           
  4458 ;; *************** function _OpenTimer1 *****************
  4459 ;; Defined at:
  4460 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  config          1    wreg     unsigned char 
  4463 ;;  config1         1   56[BANK0 ] unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  config          1   58[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;		None               void
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4475 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;Total ram usage:        3 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   10
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_main
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text27
  4490  001BDA                     __ptext27:
  4491                           	opt stack 0
  4492  001BDA                     _OpenTimer1:
  4493                           	opt stack 20
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;incstack = 0
  4497                           ;OpenTimer1@config stored from wreg
  4498  001BDA  0100               	movlb	0	; () banked
  4499  001BDC  6F9A               	movwf	OpenTimer1@config& (0+255),b
  4500                           
  4501                           ; BSR set to: 0
  4502  001BDE  0100               	movlb	0	; () banked
  4503  001BE0  5198               	movf	OpenTimer1@config1& (0+255),w,b
  4504  001BE2  0BF3               	andlw	243
  4505  001BE4  6E9A               	movwf	3994,c	;volatile
  4506  001BE6  C09A  F099         	movff	OpenTimer1@config,??_OpenTimer1
  4507  001BEA  0E7F               	movlw	127
  4508  001BEC  0100               	movlb	0	; () banked
  4509  001BEE  1799               	andwf	??_OpenTimer1& (0+255),f,b
  4510  001BF0  0100               	movlb	0	; () banked
  4511  001BF2  90D8               	bcf	status,0,c
  4512  001BF4  3599               	rlcf	??_OpenTimer1& (0+255),w,b
  4513  001BF6  6ECD               	movwf	4045,c	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516  001BF8  0E00               	movlw	0
  4517  001BFA  6ECF               	movwf	4047,c	;volatile
  4518                           
  4519                           ; BSR set to: 0
  4520  001BFC  0E00               	movlw	0
  4521  001BFE  6ECE               	movwf	4046,c	;volatile
  4522                           
  4523                           ; BSR set to: 0
  4524  001C00  909E               	bcf	3998,0,c	;volatile
  4525                           
  4526                           ; BSR set to: 0
  4527  001C02  0100               	movlb	0	; () banked
  4528  001C04  AF9A               	btfss	OpenTimer1@config& (0+255),7,b
  4529  001C06  D002               	goto	l575
  4530                           
  4531                           ; BSR set to: 0
  4532  001C08  809D               	bsf	3997,0,c	;volatile
  4533  001C0A  D001               	goto	l576
  4534  001C0C                     l575:
  4535                           
  4536                           ; BSR set to: 0
  4537  001C0C  909D               	bcf	3997,0,c	;volatile
  4538  001C0E                     l576:
  4539                           
  4540                           ; BSR set to: 0
  4541  001C0E  BE9A               	btfsc	3994,7,c	;volatile
  4542                           
  4543                           ; BSR set to: 0
  4544  001C10  869A               	bsf	3994,3,c	;volatile
  4545                           
  4546                           ; BSR set to: 0
  4547  001C12  80CD               	bsf	4045,0,c	;volatile
  4548                           
  4549                           ; BSR set to: 0
  4550  001C14  0012               	return	
  4551  001C16                     __end_of_OpenTimer1:
  4552                           	opt stack 0
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           prodh	equ	0xFF4
  4558                           prodl	equ	0xFF3
  4559                           intcon	equ	0xFF2
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           indf1	equ	0xFE7
  4563                           fsr1h	equ	0xFE2
  4564                           fsr1l	equ	0xFE1
  4565                           indf2	equ	0xFDF
  4566                           postinc2	equ	0xFDE
  4567                           postdec2	equ	0xFDD
  4568                           fsr2h	equ	0xFDA
  4569                           fsr2l	equ	0xFD9
  4570                           status	equ	0xFD8
  4571                           
  4572 ;; *************** function _OpenTimer0 *****************
  4573 ;; Defined at:
  4574 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  config          1    wreg     unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  config          1   56[BANK0 ] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;		None               void
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4591 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4592 ;;Total ram usage:        1 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:   10
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text28
  4603  001DF0                     __ptext28:
  4604                           	opt stack 0
  4605  001DF0                     _OpenTimer0:
  4606                           	opt stack 20
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;incstack = 0
  4610                           ;OpenTimer0@config stored from wreg
  4611  001DF0  0100               	movlb	0	; () banked
  4612  001DF2  6F98               	movwf	OpenTimer0@config& (0+255),b
  4613                           
  4614                           ; BSR set to: 0
  4615  001DF4  0100               	movlb	0	; () banked
  4616  001DF6  5198               	movf	OpenTimer0@config& (0+255),w,b
  4617  001DF8  0B7F               	andlw	127
  4618  001DFA  6ED5               	movwf	4053,c	;volatile
  4619                           
  4620                           ; BSR set to: 0
  4621  001DFC  0E00               	movlw	0
  4622  001DFE  6ED7               	movwf	4055,c	;volatile
  4623                           
  4624                           ; BSR set to: 0
  4625  001E00  0E00               	movlw	0
  4626  001E02  6ED6               	movwf	4054,c	;volatile
  4627                           
  4628                           ; BSR set to: 0
  4629  001E04  94F2               	bcf	intcon,2,c	;volatile
  4630                           
  4631                           ; BSR set to: 0
  4632  001E06  0100               	movlb	0	; () banked
  4633  001E08  AF98               	btfss	OpenTimer0@config& (0+255),7,b
  4634  001E0A  D002               	goto	l547
  4635                           
  4636                           ; BSR set to: 0
  4637  001E0C  8AF2               	bsf	intcon,5,c	;volatile
  4638  001E0E  D001               	goto	l548
  4639  001E10                     l547:
  4640                           
  4641                           ; BSR set to: 0
  4642  001E10  9AF2               	bcf	intcon,5,c	;volatile
  4643  001E12                     l548:
  4644                           
  4645                           ; BSR set to: 0
  4646  001E12  8ED5               	bsf	4053,7,c	;volatile
  4647                           
  4648                           ; BSR set to: 0
  4649  001E14  0012               	return	
  4650  001E16                     __end_of_OpenTimer0:
  4651                           	opt stack 0
  4652                           tblptru	equ	0xFF8
  4653                           tblptrh	equ	0xFF7
  4654                           tblptrl	equ	0xFF6
  4655                           tablat	equ	0xFF5
  4656                           prodh	equ	0xFF4
  4657                           prodl	equ	0xFF3
  4658                           intcon	equ	0xFF2
  4659                           postinc0	equ	0xFEE
  4660                           wreg	equ	0xFE8
  4661                           indf1	equ	0xFE7
  4662                           fsr1h	equ	0xFE2
  4663                           fsr1l	equ	0xFE1
  4664                           indf2	equ	0xFDF
  4665                           postinc2	equ	0xFDE
  4666                           postdec2	equ	0xFDD
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671 ;; *************** function _InterruptHandlerLow *****************
  4672 ;; Defined at:
  4673 ;;		line 131 in file "../src/interrupts.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;		None               void
  4680 ;; Registers used:
  4681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;Total ram usage:       17 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; Hardware stack levels required when called:    9
  4694 ;; This function calls:
  4695 ;;		_timer1_int_handler
  4696 ;;		_uart_receive_interrupt_handler
  4697 ;;		_uart_transmit_interrupt_handler
  4698 ;; This function is called by:
  4699 ;;		Interrupt level 1
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	intcodelo
  4704  000018                     __pintcodelo:
  4705                           	opt stack 0
  4706  000018                     _InterruptHandlerLow:
  4707                           	opt stack 17
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;incstack = 0
  4711  000018  CFD8 F039          	movff	status,??_InterruptHandlerLow
  4712  00001C  CFE8 F03A          	movff	wreg,??_InterruptHandlerLow+1
  4713  000020  CFE0 F03B          	movff	bsr,??_InterruptHandlerLow+2
  4714  000024  CFFA F03C          	movff	pclath,??_InterruptHandlerLow+3
  4715  000028  CFFB F03D          	movff	pclatu,??_InterruptHandlerLow+4
  4716  00002C  CFE9 F03E          	movff	fsr0l,??_InterruptHandlerLow+5
  4717  000030  CFEA F03F          	movff	fsr0h,??_InterruptHandlerLow+6
  4718  000034  CFE1 F040          	movff	fsr1l,??_InterruptHandlerLow+7
  4719  000038  CFE2 F041          	movff	fsr1h,??_InterruptHandlerLow+8
  4720  00003C  CFD9 F042          	movff	fsr2l,??_InterruptHandlerLow+9
  4721  000040  CFDA F043          	movff	fsr2h,??_InterruptHandlerLow+10
  4722  000044  CFF3 F044          	movff	prodl,??_InterruptHandlerLow+11
  4723  000048  CFF4 F045          	movff	prodh,??_InterruptHandlerLow+12
  4724  00004C  CFF6 F046          	movff	tblptrl,??_InterruptHandlerLow+13
  4725  000050  CFF7 F047          	movff	tblptrh,??_InterruptHandlerLow+14
  4726  000054  CFF8 F048          	movff	tblptru,??_InterruptHandlerLow+15
  4727  000058  CFF5 F049          	movff	tablat,??_InterruptHandlerLow+16
  4728                           
  4729                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  4730  00005C  A09E               	btfss	3998,0,c	;volatile
  4731  00005E  D003               	goto	i1l4155
  4732                           
  4733                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  4734  000060  909E               	bcf	3998,0,c	;volatile
  4735                           
  4736                           ;interrupts.c: 139: timer1_int_handler();
  4737  000062  ECBA  F00E         	call	_timer1_int_handler	;wreg free
  4738  000066                     i1l4155:
  4739                           
  4740                           ;interrupts.c: 140: }
  4741                           ;interrupts.c: 143: if (PIR1bits.RCIF) {
  4742  000066  AA9E               	btfss	3998,5,c	;volatile
  4743  000068  D003               	goto	i1l4161
  4744                           
  4745                           ;interrupts.c: 144: PIR1bits.RCIF = 0;
  4746  00006A  9A9E               	bcf	3998,5,c	;volatile
  4747                           
  4748                           ;interrupts.c: 148: uart_receive_interrupt_handler();
  4749  00006C  EC47  F005         	call	_uart_receive_interrupt_handler	;wreg free
  4750  000070                     i1l4161:
  4751                           
  4752                           ;interrupts.c: 149: }
  4753                           ;interrupts.c: 153: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4754  000070  B89E               	btfsc	3998,4,c	;volatile
  4755  000072  A89D               	btfss	3997,4,c	;volatile
  4756  000074  D002               	goto	i1l52
  4757                           
  4758                           ;interrupts.c: 154: {
  4759                           ;interrupts.c: 158: uart_transmit_interrupt_handler();
  4760  000076  ECD6  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4761  00007A                     i1l52:
  4762  00007A  C049  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4763  00007E  C048  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4764  000082  C047  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4765  000086  C046  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4766  00008A  C045  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4767  00008E  C044  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4768  000092  C043  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4769  000096  C042  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4770  00009A  C041  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4771  00009E  C040  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4772  0000A2  C03F  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4773  0000A6  C03E  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4774  0000AA  C03D  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4775  0000AE  C03C  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4776  0000B2  C03B  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4777  0000B6  C03A  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4778  0000BA  C039  FFD8         	movff	??_InterruptHandlerLow,status
  4779  0000BE  0010               	retfie	
  4780  0000C0                     __end_of_InterruptHandlerLow:
  4781                           	opt stack 0
  4782                           pclatu	equ	0xFFB
  4783                           pclath	equ	0xFFA
  4784                           tblptru	equ	0xFF8
  4785                           tblptrh	equ	0xFF7
  4786                           tblptrl	equ	0xFF6
  4787                           tablat	equ	0xFF5
  4788                           prodh	equ	0xFF4
  4789                           prodl	equ	0xFF3
  4790                           intcon	equ	0xFF2
  4791                           postinc0	equ	0xFEE
  4792                           fsr0h	equ	0xFEA
  4793                           fsr0l	equ	0xFE9
  4794                           wreg	equ	0xFE8
  4795                           indf1	equ	0xFE7
  4796                           fsr1h	equ	0xFE2
  4797                           fsr1l	equ	0xFE1
  4798                           bsr	equ	0xFE0
  4799                           indf2	equ	0xFDF
  4800                           postinc2	equ	0xFDE
  4801                           postdec2	equ	0xFDD
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _uart_transmit_interrupt_handler *****************
  4807 ;; Defined at:
  4808 ;;		line 200 in file "../src/my_uart.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  message_stat    1   44[COMRAM] char 
  4813 ;;  data           14   29[COMRAM] unsigned char [14]
  4814 ;;  msgtype         1   43[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;		None               void
  4817 ;; Registers used:
  4818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;Total ram usage:       16 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    8
  4831 ;; This function calls:
  4832 ;;		_FromMainLow_recvmsg
  4833 ;;		_uart_frame_message
  4834 ;; This function is called by:
  4835 ;;		_InterruptHandlerLow
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text30
  4840  0015AC                     __ptext30:
  4841                           	opt stack 0
  4842  0015AC                     _uart_transmit_interrupt_handler:
  4843                           	opt stack 17
  4844                           
  4845                           ;my_uart.c: 203: static unsigned char done = 1;
  4846                           ;my_uart.c: 204: static unsigned char index = 0;
  4847                           ;my_uart.c: 206: unsigned char data[14];
  4848                           ;my_uart.c: 207: static unsigned char message[(14 + 2 + 2)];
  4849                           ;my_uart.c: 209: unsigned char msgtype = 31;
  4850                           
  4851                           ;incstack = 0
  4852  0015AC  0E1F               	movlw	31
  4853  0015AE  6E2C               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4854                           
  4855                           ;my_uart.c: 211: if( done )
  4856  0015B0  5053               	movf	uart_transmit_interrupt_handler@done,w,c
  4857  0015B2  B4D8               	btfsc	status,2,c
  4858  0015B4  D03A               	goto	i1l4103
  4859                           
  4860                           ;my_uart.c: 212: {
  4861                           ;my_uart.c: 213: signed char message_status = FromMainLow_recvmsg(14,&msgtype, (void*)da
      +                          ta );
  4862  0015B6  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4863  0015B8  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4864  0015BA  0E2C               	movlw	low uart_transmit_interrupt_handler@msgtype
  4865  0015BC  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4866  0015BE  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4867  0015C0  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4868  0015C2  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4869  0015C4  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4870  0015C6  0E0E               	movlw	14
  4871  0015C8  ECE4  F00E         	call	_FromMainLow_recvmsg
  4872  0015CC  6E2D               	movwf	uart_transmit_interrupt_handler@message_status,c
  4873                           
  4874                           ;my_uart.c: 215: if( message_status == -4)
  4875  0015CE  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4876  0015D0  0AFC               	xorlw	252
  4877  0015D2  A4D8               	btfss	status,2,c
  4878  0015D4  D002               	goto	i1l4075
  4879                           
  4880                           ;my_uart.c: 216: {
  4881                           ;my_uart.c: 218: PIE1bits.TX1IE = 0;
  4882  0015D6  989D               	bcf	3997,4,c	;volatile
  4883                           
  4884                           ;my_uart.c: 219: }
  4885  0015D8  0012               	return	
  4886  0015DA                     i1l4075:
  4887                           
  4888                           ;my_uart.c: 220: else if( message_status > 0 )
  4889  0015DA  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4890  0015DC  0A80               	xorlw	128
  4891  0015DE  0F7F               	addlw	-129
  4892  0015E0  A0D8               	btfss	status,0,c
  4893  0015E2  0012               	return	
  4894                           
  4895                           ;my_uart.c: 221: {
  4896                           ;my_uart.c: 222: uart_frame_message( data , message );
  4897  0015E4  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4898  0015E6  6E02               	movwf	uart_frame_message@inner+1,c
  4899  0015E8  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4900  0015EA  6E01               	movwf	uart_frame_message@inner,c
  4901  0015EC  0100               	movlb	0	; () banked
  4902  0015EE  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4903  0015F0  6E04               	movwf	uart_frame_message@outer+1,c
  4904  0015F2  0100               	movlb	0	; () banked
  4905  0015F4  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4906  0015F6  6E03               	movwf	uart_frame_message@outer,c
  4907  0015F8  ECDC  F008         	call	_uart_frame_message	;wreg free
  4908                           
  4909                           ;my_uart.c: 223: index = 0;
  4910  0015FC  0E00               	movlw	0
  4911  0015FE  6E52               	movwf	uart_transmit_interrupt_handler@index,c
  4912                           
  4913                           ;my_uart.c: 224: done = 0;
  4914  001600  0E00               	movlw	0
  4915  001602  6E53               	movwf	uart_transmit_interrupt_handler@done,c
  4916                           
  4917                           ;my_uart.c: 226: TXREG1 = message[index];
  4918  001604  5052               	movf	uart_transmit_interrupt_handler@index,w,c
  4919  001606  0D01               	mullw	1
  4920  001608  0100               	movlb	0	; () banked
  4921  00160A  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4922  00160C  24F3               	addwf	prodl,w,c
  4923  00160E  6ED9               	movwf	fsr2l,c
  4924  001610  0100               	movlb	0	; () banked
  4925  001612  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4926  001614  20F4               	addwfc	prodh,w,c
  4927  001616  6EDA               	movwf	fsr2h,c
  4928  001618  50DF               	movf	indf2,w,c
  4929  00161A  6EAE               	movwf	4014,c	;volatile
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;my_uart.c: 227: index++;
  4933  00161C  2A52               	incf	uart_transmit_interrupt_handler@index,f,c
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;my_uart.c: 228: if( index >= (14 + 2 + 2) )
  4937  00161E  0E11               	movlw	17
  4938  001620  6452               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4939  001622  0012               	return	
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;my_uart.c: 229: {
  4943                           ;my_uart.c: 230: done = 1;
  4944  001624  0E01               	movlw	1
  4945  001626  6E53               	movwf	uart_transmit_interrupt_handler@done,c
  4946  001628  0012               	return	
  4947  00162A                     i1l4103:
  4948                           
  4949                           ;my_uart.c: 247: else
  4950                           ;my_uart.c: 248: {
  4951                           ;my_uart.c: 250: TXREG1 = message[index];
  4952  00162A  5052               	movf	uart_transmit_interrupt_handler@index,w,c
  4953  00162C  0D01               	mullw	1
  4954  00162E  0100               	movlb	0	; () banked
  4955  001630  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4956  001632  24F3               	addwf	prodl,w,c
  4957  001634  6ED9               	movwf	fsr2l,c
  4958  001636  0100               	movlb	0	; () banked
  4959  001638  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4960  00163A  20F4               	addwfc	prodh,w,c
  4961  00163C  6EDA               	movwf	fsr2h,c
  4962  00163E  50DF               	movf	indf2,w,c
  4963  001640  6EAE               	movwf	4014,c	;volatile
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;my_uart.c: 251: index++;
  4967  001642  2A52               	incf	uart_transmit_interrupt_handler@index,f,c
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;my_uart.c: 252: if( index >= (14 + 2 + 2) )
  4971  001644  0E11               	movlw	17
  4972  001646  6452               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4973  001648  0012               	return	
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;my_uart.c: 253: {
  4977                           ;my_uart.c: 254: done = 1;
  4978  00164A  0E01               	movlw	1
  4979  00164C  6E53               	movwf	uart_transmit_interrupt_handler@done,c
  4980  00164E  0012               	return	
  4981  001650                     __end_of_uart_transmit_interrupt_handler:
  4982                           	opt stack 0
  4983                           pclatu	equ	0xFFB
  4984                           pclath	equ	0xFFA
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           intcon	equ	0xFF2
  4992                           postinc0	equ	0xFEE
  4993                           fsr0h	equ	0xFEA
  4994                           fsr0l	equ	0xFE9
  4995                           wreg	equ	0xFE8
  4996                           indf1	equ	0xFE7
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           bsr	equ	0xFE0
  5000                           indf2	equ	0xFDF
  5001                           postinc2	equ	0xFDE
  5002                           postdec2	equ	0xFDD
  5003                           fsr2h	equ	0xFDA
  5004                           fsr2l	equ	0xFD9
  5005                           status	equ	0xFD8
  5006                           
  5007 ;; *************** function _uart_frame_message *****************
  5008 ;; Defined at:
  5009 ;;		line 368 in file "../src/my_uart.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  inner           2    0[COMRAM] PTR unsigned char 
  5012 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  5013 ;;  outer           2    2[COMRAM] PTR unsigned char 
  5014 ;;		 -> uart_transmit_interrupt_handler@message(18), 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  i               1    7[COMRAM] unsigned char 
  5017 ;;  checksum        1    6[COMRAM] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;		None               void
  5020 ;; Registers used:
  5021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5031 ;;Total ram usage:        8 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    5
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_uart_transmit_interrupt_handler
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text31
  5042  0011B8                     __ptext31:
  5043                           	opt stack 0
  5044  0011B8                     _uart_frame_message:
  5045                           	opt stack 19
  5046                           
  5047                           ;my_uart.c: 370: static unsigned char sent_counter = 0;
  5048                           ;my_uart.c: 372: outer[0] = 0xff;
  5049                           
  5050                           ;incstack = 0
  5051  0011B8  C003  FFD9         	movff	uart_frame_message@outer,fsr2l
  5052  0011BC  C004  FFDA         	movff	uart_frame_message@outer+1,fsr2h
  5053  0011C0  0EFF               	movlw	255
  5054  0011C2  6EDF               	movwf	indf2,c
  5055                           
  5056                           ;my_uart.c: 373: outer[1] = sent_counter++;
  5057  0011C4  EE20 F001          	lfsr	2,1
  5058  0011C8  5003               	movf	uart_frame_message@outer,w,c
  5059  0011CA  26D9               	addwf	fsr2l,f,c
  5060  0011CC  5004               	movf	uart_frame_message@outer+1,w,c
  5061  0011CE  22DA               	addwfc	fsr2h,f,c
  5062  0011D0  C04C  FFDF         	movff	uart_frame_message@sent_counter,indf2
  5063  0011D4  2A4C               	incf	uart_frame_message@sent_counter,f,c
  5064                           
  5065                           ;my_uart.c: 374: outer[(14 + 2 + 2)-1] = 0xfe;
  5066  0011D6  EE20 F011          	lfsr	2,17
  5067  0011DA  5003               	movf	uart_frame_message@outer,w,c
  5068  0011DC  26D9               	addwf	fsr2l,f,c
  5069  0011DE  5004               	movf	uart_frame_message@outer+1,w,c
  5070  0011E0  22DA               	addwfc	fsr2h,f,c
  5071  0011E2  0EFE               	movlw	254
  5072  0011E4  6EDF               	movwf	indf2,c
  5073                           
  5074                           ;my_uart.c: 376: unsigned char checksum = 0;
  5075  0011E6  0E00               	movlw	0
  5076  0011E8  6E07               	movwf	uart_frame_message@checksum,c
  5077                           
  5078                           ;my_uart.c: 377: unsigned char i;
  5079                           ;my_uart.c: 378: for(i=0;i<14;i++)
  5080  0011EA  0E00               	movlw	0
  5081  0011EC  6E08               	movwf	uart_frame_message@i,c
  5082  0011EE  D049               	goto	L4
  5083  0011F0                     i1l2777:
  5084                           
  5085                           ;my_uart.c: 379: {
  5086                           ;my_uart.c: 380: if( inner[i] == 0xff || inner[i] == 0xfe )
  5087  0011F0  5008               	movf	uart_frame_message@i,w,c
  5088  0011F2  0D01               	mullw	1
  5089  0011F4  50F3               	movf	prodl,w,c
  5090  0011F6  2401               	addwf	uart_frame_message@inner,w,c
  5091  0011F8  6ED9               	movwf	fsr2l,c
  5092  0011FA  50F4               	movf	prodh,w,c
  5093  0011FC  2002               	addwfc	uart_frame_message@inner+1,w,c
  5094  0011FE  6EDA               	movwf	fsr2h,c
  5095  001200  50DF               	movf	indf2,w,c
  5096  001202  0AFF               	xorlw	255
  5097  001204  B4D8               	btfsc	status,2,c
  5098  001206  D00B               	goto	i1l2781
  5099  001208  5008               	movf	uart_frame_message@i,w,c
  5100  00120A  0D01               	mullw	1
  5101  00120C  50F3               	movf	prodl,w,c
  5102  00120E  2401               	addwf	uart_frame_message@inner,w,c
  5103  001210  6ED9               	movwf	fsr2l,c
  5104  001212  50F4               	movf	prodh,w,c
  5105  001214  2002               	addwfc	uart_frame_message@inner+1,w,c
  5106  001216  6EDA               	movwf	fsr2h,c
  5107  001218  0EFE               	movlw	254
  5108  00121A  62DF               	cpfseq	indf2,c
  5109  00121C  D010               	goto	i1l2783
  5110  00121E                     i1l2781:
  5111                           
  5112                           ;my_uart.c: 381: {
  5113                           ;my_uart.c: 382: outer[i+2] = 0xfd;
  5114  00121E  5008               	movf	uart_frame_message@i,w,c
  5115  001220  6E05               	movwf	??_uart_frame_message& (0+255),c
  5116  001222  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  5117  001224  0E02               	movlw	2
  5118  001226  2605               	addwf	??_uart_frame_message,f,c
  5119  001228  0E00               	movlw	0
  5120  00122A  2206               	addwfc	??_uart_frame_message+1,f,c
  5121  00122C  5005               	movf	??_uart_frame_message,w,c
  5122  00122E  2403               	addwf	uart_frame_message@outer,w,c
  5123  001230  6ED9               	movwf	fsr2l,c
  5124  001232  5006               	movf	??_uart_frame_message+1,w,c
  5125  001234  2004               	addwfc	uart_frame_message@outer+1,w,c
  5126  001236  6EDA               	movwf	fsr2h,c
  5127  001238  0EFD               	movlw	253
  5128  00123A  6EDF               	movwf	indf2,c
  5129                           
  5130                           ;my_uart.c: 383: }
  5131  00123C  D017               	goto	i1l2785
  5132  00123E                     i1l2783:
  5133                           
  5134                           ;my_uart.c: 384: else
  5135                           ;my_uart.c: 385: {
  5136                           ;my_uart.c: 386: outer[i+2] = inner[i];
  5137  00123E  5008               	movf	uart_frame_message@i,w,c
  5138  001240  0D01               	mullw	1
  5139  001242  50F3               	movf	prodl,w,c
  5140  001244  2401               	addwf	uart_frame_message@inner,w,c
  5141  001246  6ED9               	movwf	fsr2l,c
  5142  001248  50F4               	movf	prodh,w,c
  5143  00124A  2002               	addwfc	uart_frame_message@inner+1,w,c
  5144  00124C  6EDA               	movwf	fsr2h,c
  5145  00124E  5008               	movf	uart_frame_message@i,w,c
  5146  001250  6E05               	movwf	??_uart_frame_message& (0+255),c
  5147  001252  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  5148  001254  0E02               	movlw	2
  5149  001256  2605               	addwf	??_uart_frame_message,f,c
  5150  001258  0E00               	movlw	0
  5151  00125A  2206               	addwfc	??_uart_frame_message+1,f,c
  5152  00125C  5005               	movf	??_uart_frame_message,w,c
  5153  00125E  2403               	addwf	uart_frame_message@outer,w,c
  5154  001260  6EE1               	movwf	fsr1l,c
  5155  001262  5006               	movf	??_uart_frame_message+1,w,c
  5156  001264  2004               	addwfc	uart_frame_message@outer+1,w,c
  5157  001266  6EE2               	movwf	fsr1h,c
  5158  001268  CFDF FFE7          	movff	indf2,indf1
  5159  00126C                     i1l2785:
  5160                           
  5161                           ;my_uart.c: 387: }
  5162                           ;my_uart.c: 388: checksum ^= inner[i];
  5163  00126C  5008               	movf	uart_frame_message@i,w,c
  5164  00126E  0D01               	mullw	1
  5165  001270  50F3               	movf	prodl,w,c
  5166  001272  2401               	addwf	uart_frame_message@inner,w,c
  5167  001274  6ED9               	movwf	fsr2l,c
  5168  001276  50F4               	movf	prodh,w,c
  5169  001278  2002               	addwfc	uart_frame_message@inner+1,w,c
  5170  00127A  6EDA               	movwf	fsr2h,c
  5171  00127C  50DF               	movf	indf2,w,c
  5172  00127E  1A07               	xorwf	uart_frame_message@checksum,f,c
  5173  001280  2A08               	incf	uart_frame_message@i,f,c
  5174  001282                     L4:
  5175  001282  0E0D               	movlw	13
  5176  001284  6408               	cpfsgt	uart_frame_message@i,c
  5177  001286  D7B4               	goto	i1l2777
  5178                           
  5179                           ;my_uart.c: 389: }
  5180                           ;my_uart.c: 390: outer[(14 + 2 + 2)-2] = checksum;
  5181  001288  EE20 F010          	lfsr	2,16
  5182  00128C  5003               	movf	uart_frame_message@outer,w,c
  5183  00128E  26D9               	addwf	fsr2l,f,c
  5184  001290  5004               	movf	uart_frame_message@outer+1,w,c
  5185  001292  22DA               	addwfc	fsr2h,f,c
  5186  001294  C007  FFDF         	movff	uart_frame_message@checksum,indf2
  5187  001298  0012               	return	
  5188  00129A                     __end_of_uart_frame_message:
  5189                           	opt stack 0
  5190                           pclatu	equ	0xFFB
  5191                           pclath	equ	0xFFA
  5192                           tblptru	equ	0xFF8
  5193                           tblptrh	equ	0xFF7
  5194                           tblptrl	equ	0xFF6
  5195                           tablat	equ	0xFF5
  5196                           prodh	equ	0xFF4
  5197                           prodl	equ	0xFF3
  5198                           intcon	equ	0xFF2
  5199                           postinc0	equ	0xFEE
  5200                           fsr0h	equ	0xFEA
  5201                           fsr0l	equ	0xFE9
  5202                           wreg	equ	0xFE8
  5203                           indf1	equ	0xFE7
  5204                           fsr1h	equ	0xFE2
  5205                           fsr1l	equ	0xFE1
  5206                           bsr	equ	0xFE0
  5207                           indf2	equ	0xFDF
  5208                           postinc2	equ	0xFDE
  5209                           postdec2	equ	0xFDD
  5210                           fsr2h	equ	0xFDA
  5211                           fsr2l	equ	0xFD9
  5212                           status	equ	0xFD8
  5213                           
  5214 ;; *************** function _FromMainLow_recvmsg *****************
  5215 ;; Defined at:
  5216 ;;		line 159 in file "../src/messages.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  maxlength       1    wreg     unsigned char 
  5219 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5220 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5221 ;;  data            2   26[COMRAM] PTR void 
  5222 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  maxlength       1   28[COMRAM] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      char 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5237 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5238 ;;Total ram usage:        5 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    7
  5241 ;; This function calls:
  5242 ;;		i1_recv_msg
  5243 ;; This function is called by:
  5244 ;;		_uart_transmit_interrupt_handler
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text32
  5249  001DC8                     __ptext32:
  5250                           	opt stack 0
  5251  001DC8                     _FromMainLow_recvmsg:
  5252                           	opt stack 17
  5253                           
  5254                           ;incstack = 0
  5255                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5256  001DC8  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5257                           
  5258                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5259  001DCA  0102               	movlb	2	; () banked
  5260  001DCC  0E02               	movlw	high _FromMainLow_MQ
  5261  001DCE  6E0C               	movwf	i1recv_msg@qptr+1,c
  5262  001DD0  0102               	movlb	2	; () banked
  5263  001DD2  0E00               	movlw	low _FromMainLow_MQ
  5264  001DD4  6E0B               	movwf	i1recv_msg@qptr,c
  5265  001DD6  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5266  001DDA  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5267  001DDE  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5268  001DE2  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5269  001DE6  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5270  001DEA  EC68  F008         	call	i1_recv_msg	;wreg free
  5271  001DEE  0012               	return	
  5272  001DF0                     __end_of_FromMainLow_recvmsg:
  5273                           	opt stack 0
  5274                           pclatu	equ	0xFFB
  5275                           pclath	equ	0xFFA
  5276                           tblptru	equ	0xFF8
  5277                           tblptrh	equ	0xFF7
  5278                           tblptrl	equ	0xFF6
  5279                           tablat	equ	0xFF5
  5280                           prodh	equ	0xFF4
  5281                           prodl	equ	0xFF3
  5282                           intcon	equ	0xFF2
  5283                           postinc0	equ	0xFEE
  5284                           fsr0h	equ	0xFEA
  5285                           fsr0l	equ	0xFE9
  5286                           wreg	equ	0xFE8
  5287                           indf1	equ	0xFE7
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           bsr	equ	0xFE0
  5291                           indf2	equ	0xFDF
  5292                           postinc2	equ	0xFDE
  5293                           postdec2	equ	0xFDD
  5294                           fsr2h	equ	0xFDA
  5295                           fsr2l	equ	0xFD9
  5296                           status	equ	0xFD8
  5297                           
  5298 ;; *************** function i1_recv_msg *****************
  5299 ;; Defined at:
  5300 ;;		line 63 in file "../src/messages.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5303 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5304 ;;  maxlength       1   12[COMRAM] unsigned char 
  5305 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5306 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  5307 ;;		 -> main@msgtype(1), 
  5308 ;;  data            2   15[COMRAM] PTR void 
  5309 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), main@msgbuffer(15), 
  5310 ;;		 -> main@ic(38), 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5313 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5314 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5315 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5316 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      char 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5326 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5327 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5329 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5330 ;;Total ram usage:       14 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    6
  5333 ;; This function calls:
  5334 ;;		i1___awmod
  5335 ;;		i1_memcpy
  5336 ;; This function is called by:
  5337 ;;		_FromMainLow_recvmsg
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text33
  5342  0010D0                     __ptext33:
  5343                           	opt stack 0
  5344  0010D0                     i1_recv_msg:
  5345                           	opt stack 17
  5346                           
  5347                           ;messages.c: 64: unsigned char slot;
  5348                           ;messages.c: 68: msg *qmsg;
  5349                           ;messages.c: 69: size_t tlength;
  5350                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5351                           
  5352                           ;incstack = 0
  5353  0010D0  EE20 F056          	lfsr	2,86
  5354  0010D4  500B               	movf	i1recv_msg@qptr,w,c
  5355  0010D6  26D9               	addwf	fsr2l,f,c
  5356  0010D8  500C               	movf	i1recv_msg@qptr+1,w,c
  5357  0010DA  22DA               	addwfc	fsr2h,f,c
  5358  0010DC  50DF               	movf	indf2,w,c
  5359  0010DE  6E14               	movwf	i1recv_msg@slot,c
  5360                           
  5361                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5362  0010E0  5014               	movf	i1recv_msg@slot,w,c
  5363  0010E2  0D11               	mullw	17
  5364  0010E4  50F3               	movf	prodl,w,c
  5365  0010E6  240B               	addwf	i1recv_msg@qptr,w,c
  5366  0010E8  6E17               	movwf	i1recv_msg@qmsg,c
  5367  0010EA  50F4               	movf	prodh,w,c
  5368  0010EC  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5369  0010EE  6E18               	movwf	i1recv_msg@qmsg+1,c
  5370                           
  5371                           ;messages.c: 74: if (qmsg->full == 1) {
  5372  0010F0  0E01               	movlw	1
  5373  0010F2  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5374  0010F6  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5375  0010FA  62DF               	cpfseq	indf2,c
  5376  0010FC  D05B               	goto	i1l3683
  5377                           
  5378                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5379  0010FE  EE20 F001          	lfsr	2,1
  5380  001102  5017               	movf	i1recv_msg@qmsg,w,c
  5381  001104  26D9               	addwf	fsr2l,f,c
  5382  001106  5018               	movf	i1recv_msg@qmsg+1,w,c
  5383  001108  22DA               	addwfc	fsr2h,f,c
  5384  00110A  50DF               	movf	indf2,w,c
  5385  00110C  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5386  00110E  B0D8               	btfsc	status,0,c
  5387  001110  D002               	goto	i1l3667
  5388                           
  5389                           ;messages.c: 77: return (-3);
  5390  001112  0EFD               	movlw	253
  5391  001114  0012               	return	
  5392  001116                     i1l3667:
  5393                           
  5394                           ;messages.c: 78: }
  5395                           ;messages.c: 80: tlength = qmsg->length;
  5396  001116  EE20 F001          	lfsr	2,1
  5397  00111A  5017               	movf	i1recv_msg@qmsg,w,c
  5398  00111C  26D9               	addwf	fsr2l,f,c
  5399  00111E  5018               	movf	i1recv_msg@qmsg+1,w,c
  5400  001120  22DA               	addwfc	fsr2h,f,c
  5401  001122  50DF               	movf	indf2,w,c
  5402  001124  6E12               	movwf	??i1_recv_msg& (0+255),c
  5403  001126  5012               	movf	??i1_recv_msg,w,c
  5404  001128  6E15               	movwf	i1recv_msg@tlength,c
  5405  00112A  6A16               	clrf	i1recv_msg@tlength+1,c
  5406                           
  5407                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5408  00112C  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5409  001130  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5410  001134  0E03               	movlw	3
  5411  001136  2417               	addwf	i1recv_msg@qmsg,w,c
  5412  001138  6E12               	movwf	??i1_recv_msg& (0+255),c
  5413  00113A  0E00               	movlw	0
  5414  00113C  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5415  00113E  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5416  001140  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5417  001144  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5418  001148  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5419  00114C  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5420  001150  ECAE  F00D         	call	i1_memcpy	;wreg free
  5421                           
  5422                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5423  001154  EE20 F056          	lfsr	2,86
  5424  001158  500B               	movf	i1recv_msg@qptr,w,c
  5425  00115A  26D9               	addwf	fsr2l,f,c
  5426  00115C  500C               	movf	i1recv_msg@qptr+1,w,c
  5427  00115E  22DA               	addwfc	fsr2h,f,c
  5428  001160  EE10 F056          	lfsr	1,86
  5429  001164  500B               	movf	i1recv_msg@qptr,w,c
  5430  001166  26E1               	addwf	fsr1l,f,c
  5431  001168  500C               	movf	i1recv_msg@qptr+1,w,c
  5432  00116A  22E2               	addwfc	fsr1h,f,c
  5433  00116C  50E7               	movf	indf1,w,c
  5434  00116E  6E12               	movwf	??i1_recv_msg& (0+255),c
  5435  001170  0E01               	movlw	1
  5436  001172  2412               	addwf	??i1_recv_msg,w,c
  5437  001174  6E01               	movwf	i1___awmod@dividend,c
  5438  001176  6A02               	clrf	i1___awmod@dividend+1,c
  5439  001178  0E00               	movlw	0
  5440  00117A  2202               	addwfc	i1___awmod@dividend+1,f,c
  5441  00117C  0E00               	movlw	0
  5442  00117E  6E04               	movwf	i1___awmod@divisor+1,c
  5443  001180  0E05               	movlw	5
  5444  001182  6E03               	movwf	i1___awmod@divisor,c
  5445  001184  EC28  F00B         	call	i1___awmod	;wreg free
  5446  001188  5001               	movf	?i1___awmod,w,c
  5447  00118A  6EDF               	movwf	indf2,c
  5448                           
  5449                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5450  00118C  EE20 F002          	lfsr	2,2
  5451  001190  5017               	movf	i1recv_msg@qmsg,w,c
  5452  001192  26D9               	addwf	fsr2l,f,c
  5453  001194  5018               	movf	i1recv_msg@qmsg+1,w,c
  5454  001196  22DA               	addwfc	fsr2h,f,c
  5455  001198  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5456  00119C  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5457  0011A0  CFDF FFE7          	movff	indf2,indf1
  5458                           
  5459                           ;messages.c: 91: qmsg->full = 0;
  5460  0011A4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5461  0011A8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5462  0011AC  0E00               	movlw	0
  5463  0011AE  6EDF               	movwf	indf2,c
  5464                           
  5465                           ;messages.c: 92: return (tlength);
  5466  0011B0  5015               	movf	i1recv_msg@tlength,w,c
  5467  0011B2  0012               	return	
  5468  0011B4                     i1l3683:
  5469                           
  5470                           ;messages.c: 94: return (-4);
  5471  0011B4  0EFC               	movlw	252
  5472  0011B6  0012               	return	
  5473  0011B8                     __end_ofi1_recv_msg:
  5474                           	opt stack 0
  5475                           pclatu	equ	0xFFB
  5476                           pclath	equ	0xFFA
  5477                           tblptru	equ	0xFF8
  5478                           tblptrh	equ	0xFF7
  5479                           tblptrl	equ	0xFF6
  5480                           tablat	equ	0xFF5
  5481                           prodh	equ	0xFF4
  5482                           prodl	equ	0xFF3
  5483                           intcon	equ	0xFF2
  5484                           postinc0	equ	0xFEE
  5485                           fsr0h	equ	0xFEA
  5486                           fsr0l	equ	0xFE9
  5487                           wreg	equ	0xFE8
  5488                           indf1	equ	0xFE7
  5489                           fsr1h	equ	0xFE2
  5490                           fsr1l	equ	0xFE1
  5491                           bsr	equ	0xFE0
  5492                           indf2	equ	0xFDF
  5493                           postinc2	equ	0xFDE
  5494                           postdec2	equ	0xFDD
  5495                           fsr2h	equ	0xFDA
  5496                           fsr2l	equ	0xFD9
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _uart_receive_interrupt_handler *****************
  5500 ;; Defined at:
  5501 ;;		line 54 in file "../src/my_uart.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  bad_start_id    1   49[COMRAM] unsigned char 
  5506 ;;  message_coun    1   51[COMRAM] unsigned char 
  5507 ;;  status          1   42[COMRAM] unsigned char 
  5508 ;;  bad_end_id      1   50[COMRAM] unsigned char 
  5509 ;;  msg_id          1   53[COMRAM] unsigned char 
  5510 ;;  status          1   43[COMRAM] unsigned char 
  5511 ;;  bad_checksum    3   44[COMRAM] unsigned char [3]
  5512 ;;  bad_counter_    2   47[COMRAM] unsigned char [2]
  5513 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5514 ;;  i               2   54[COMRAM] int 
  5515 ;;  checksum        1   52[COMRAM] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;		None               void
  5518 ;; Registers used:
  5519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5529 ;;Total ram usage:       30 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    8
  5532 ;; This function calls:
  5533 ;;		_ToMainLow_sendmsg
  5534 ;; This function is called by:
  5535 ;;		_InterruptHandlerLow
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text34
  5540  000A8E                     __ptext34:
  5541                           	opt stack 0
  5542  000A8E                     _uart_receive_interrupt_handler:
  5543                           	opt stack 17
  5544                           
  5545                           ;my_uart.c: 57: static unsigned char frame[(14 + 2 + 2)];
  5546                           ;my_uart.c: 58: static unsigned char index = 0;
  5547                           ;my_uart.c: 59: static unsigned char done = 0;
  5548                           ;my_uart.c: 60: static unsigned char received_counter = 0;
  5549                           ;my_uart.c: 62: static unsigned char start_byte_bad = 0;
  5550                           ;my_uart.c: 63: static unsigned char error = 0;
  5551                           ;my_uart.c: 65: if(!done)
  5552                           
  5553                           ;incstack = 0
  5554  000A8E  664D               	tstfsz	uart_receive_interrupt_handler@done,c
  5555  000A90  D03F               	goto	i1l4007
  5556                           
  5557                           ;my_uart.c: 66: {
  5558                           ;my_uart.c: 67: frame[index] = RCREG1;
  5559  000A92  504F               	movf	uart_receive_interrupt_handler@index,w,c
  5560  000A94  0D01               	mullw	1
  5561  000A96  0100               	movlb	0	; () banked
  5562  000A98  0EA1               	movlw	low uart_receive_interrupt_handler@frame
  5563  000A9A  24F3               	addwf	prodl,w,c
  5564  000A9C  6ED9               	movwf	fsr2l,c
  5565  000A9E  0100               	movlb	0	; () banked
  5566  000AA0  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5567  000AA2  20F4               	addwfc	prodh,w,c
  5568  000AA4  6EDA               	movwf	fsr2h,c
  5569  000AA6  CFAF FFDF          	movff	4015,indf2	;volatile
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;my_uart.c: 71: }
  5573                           ;my_uart.c: 72: if( index == 0 )
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;my_uart.c: 69: {
  5577  000AAA  664F               	tstfsz	uart_receive_interrupt_handler@index,c
  5578  000AAC  D019               	goto	i1l3993
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;my_uart.c: 73: {
  5582                           ;my_uart.c: 74: if( frame[0] != 0xff )
  5583  000AAE  0100               	movlb	0	; () banked
  5584  000AB0  29A1               	incf	uart_receive_interrupt_handler@frame& (0+255),w,b
  5585  000AB2  B4D8               	btfsc	status,2,c
  5586  000AB4  D012               	goto	i1l3991
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;my_uart.c: 75: {
  5590                           ;my_uart.c: 76: if( !start_byte_bad )
  5591  000AB6  6651               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5592  000AB8  D00D               	goto	i1l3985
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;my_uart.c: 77: {
  5596                           ;my_uart.c: 78: start_byte_bad = 1;
  5597  000ABA  0E01               	movlw	1
  5598  000ABC  6E51               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;my_uart.c: 79: unsigned char bad_start_id = received_counter;
  5602  000ABE  C050  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;my_uart.c: 80: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5606  000AC2  0E22               	movlw	34
  5607  000AC4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5608  000AC6  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5609  000AC8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5610  000ACA  0E32               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5611  000ACC  6E18               	movwf	ToMainLow_sendmsg@data,c
  5612  000ACE  0E01               	movlw	1
  5613  000AD0  EC0B  F00F         	call	_ToMainLow_sendmsg
  5614  000AD4                     i1l3985:
  5615                           
  5616                           ;my_uart.c: 82: }
  5617                           ;my_uart.c: 83: index = 0;
  5618  000AD4  0E00               	movlw	0
  5619  000AD6  6E4F               	movwf	uart_receive_interrupt_handler@index,c
  5620  000AD8  0012               	return	
  5621  000ADA                     i1l3991:
  5622                           
  5623                           ;my_uart.c: 86: else
  5624                           ;my_uart.c: 87: {
  5625                           ;my_uart.c: 88: start_byte_bad = 0;
  5626  000ADA  0E00               	movlw	0
  5627  000ADC  6E51               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5628  000ADE  D017               	goto	i1l4005
  5629  000AE0                     i1l3993:
  5630                           
  5631                           ;my_uart.c: 91: else if( index >= (14 + 2 + 2) - 1 )
  5632  000AE0  0E10               	movlw	16
  5633  000AE2  644F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5634  000AE4  D014               	goto	i1l4005
  5635                           
  5636                           ;my_uart.c: 92: {
  5637                           ;my_uart.c: 93: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5638  000AE6  0100               	movlb	0	; () banked
  5639  000AE8  51B2               	movf	(uart_receive_interrupt_handler@frame+17)& (0+255),w,b
  5640  000AEA  0AFE               	xorlw	254
  5641  000AEC  B4D8               	btfsc	status,2,c
  5642  000AEE  D00F               	goto	i1l4005
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;my_uart.c: 94: {
  5646                           ;my_uart.c: 96: index = 0;
  5647  000AF0  0E00               	movlw	0
  5648  000AF2  6E4F               	movwf	uart_receive_interrupt_handler@index,c
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;my_uart.c: 99: unsigned char bad_end_id = received_counter;
  5652  000AF4  C050  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;my_uart.c: 100: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5656  000AF8  0E23               	movlw	35
  5657  000AFA  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5658  000AFC  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5659  000AFE  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5660  000B00  0E33               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5661  000B02  6E18               	movwf	ToMainLow_sendmsg@data,c
  5662  000B04  0E01               	movlw	1
  5663  000B06  EC0B  F00F         	call	_ToMainLow_sendmsg
  5664                           
  5665                           ;my_uart.c: 101: error = 1;
  5666  000B0A  0E01               	movlw	1
  5667  000B0C  6E4E               	movwf	uart_receive_interrupt_handler@error,c
  5668  000B0E                     i1l4005:
  5669                           
  5670                           ;my_uart.c: 102: }
  5671                           ;my_uart.c: 103: }
  5672                           ;my_uart.c: 104: index++;
  5673  000B0E  2A4F               	incf	uart_receive_interrupt_handler@index,f,c
  5674  000B10                     i1l4007:
  5675                           
  5676                           ;my_uart.c: 105: }
  5677                           ;my_uart.c: 107: if( index >= (14 + 2 + 2) )
  5678  000B10  0E11               	movlw	17
  5679  000B12  644F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5680  000B14  0012               	return	
  5681                           
  5682                           ;my_uart.c: 108: {
  5683                           ;my_uart.c: 109: index = 0;
  5684  000B16  0E00               	movlw	0
  5685  000B18  6E4F               	movwf	uart_receive_interrupt_handler@index,c
  5686                           
  5687                           ;my_uart.c: 111: if( received_counter != frame[1] )
  5688  000B1A  0100               	movlb	0	; () banked
  5689  000B1C  51A2               	movf	(uart_receive_interrupt_handler@frame+1)& (0+255),w,b
  5690  000B1E  1850               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5691  000B20  B4D8               	btfsc	status,2,c
  5692  000B22  D011               	goto	i1l4019
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;my_uart.c: 112: {
  5696                           ;my_uart.c: 114: unsigned char bad_counter_id[2];
  5697                           ;my_uart.c: 115: bad_counter_id[0] = received_counter;
  5698  000B24  C050  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5699                           
  5700                           ;my_uart.c: 116: bad_counter_id[1] = frame[1];
  5701  000B28  C0A2  F031         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;my_uart.c: 117: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5705  000B2C  0E21               	movlw	33
  5706  000B2E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5707  000B30  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5708  000B32  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5709  000B34  0E30               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5710  000B36  6E18               	movwf	ToMainLow_sendmsg@data,c
  5711  000B38  0E02               	movlw	2
  5712  000B3A  EC0B  F00F         	call	_ToMainLow_sendmsg
  5713                           
  5714                           ;my_uart.c: 120: received_counter = frame[1];
  5715  000B3E  C0A2  F050         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@received_co
      +                          unter
  5716                           
  5717                           ;my_uart.c: 122: error = 1;
  5718  000B42  0E01               	movlw	1
  5719  000B44  6E4E               	movwf	uart_receive_interrupt_handler@error,c
  5720  000B46                     i1l4019:
  5721                           
  5722                           ;my_uart.c: 123: }
  5723                           ;my_uart.c: 126: unsigned char gooey_uart_center[14];
  5724                           ;my_uart.c: 127: unsigned char checksum = 0;
  5725  000B46  0E00               	movlw	0
  5726  000B48  6E35               	movwf	uart_receive_interrupt_handler@checksum,c
  5727                           
  5728                           ;my_uart.c: 128: int i;
  5729                           ;my_uart.c: 129: for(i = 0; i < 14; i++)
  5730  000B4A  0E00               	movlw	0
  5731  000B4C  6E38               	movwf	uart_receive_interrupt_handler@i+1,c
  5732  000B4E  0E00               	movlw	0
  5733  000B50  6E37               	movwf	uart_receive_interrupt_handler@i,c
  5734  000B52  5038               	movf	uart_receive_interrupt_handler@i+1,w,c
  5735  000B54  0A80               	xorlw	128
  5736  000B56  0F80               	addlw	-128
  5737  000B58  0E0E               	movlw	14
  5738  000B5A  B4D8               	btfsc	status,2,c
  5739  000B5C  5C37               	subwf	uart_receive_interrupt_handler@i,w,c
  5740  000B5E  B0D8               	btfsc	status,0,c
  5741  000B60  D021               	goto	i1l4035
  5742                           
  5743                           ;my_uart.c: 130: {
  5744                           ;my_uart.c: 131: gooey_uart_center[i] = frame[i+2];
  5745  000B62  0E02               	movlw	2
  5746  000B64  2437               	addwf	uart_receive_interrupt_handler@i,w,c
  5747  000B66  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5748  000B68  0E00               	movlw	0
  5749  000B6A  2038               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5750  000B6C  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5751  000B6E  0100               	movlb	0	; () banked
  5752  000B70  0EA1               	movlw	low uart_receive_interrupt_handler@frame
  5753  000B72  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5754  000B74  6ED9               	movwf	fsr2l,c
  5755  000B76  0100               	movlb	0	; () banked
  5756  000B78  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5757  000B7A  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5758  000B7C  6EDA               	movwf	fsr2h,c
  5759  000B7E  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5760  000B80  2437               	addwf	uart_receive_interrupt_handler@i,w,c
  5761  000B82  6EE1               	movwf	fsr1l,c
  5762  000B84  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5763  000B86  2038               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5764  000B88  6EE2               	movwf	fsr1h,c
  5765  000B8A  CFDF FFE7          	movff	indf2,indf1
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;my_uart.c: 132: checksum ^= gooey_uart_center[i];
  5769  000B8E  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5770  000B90  2437               	addwf	uart_receive_interrupt_handler@i,w,c
  5771  000B92  6ED9               	movwf	fsr2l,c
  5772  000B94  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5773  000B96  2038               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5774  000B98  6EDA               	movwf	fsr2h,c
  5775  000B9A  50DF               	movf	indf2,w,c
  5776  000B9C  1A35               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5777                           
  5778                           ; BSR set to: 0
  5779  000B9E  4A37               	infsnz	uart_receive_interrupt_handler@i,f,c
  5780  000BA0  2A38               	incf	uart_receive_interrupt_handler@i+1,f,c
  5781  000BA2  D7D7               	goto	L5
  5782  000BA4                     i1l4035:
  5783                           
  5784                           ;my_uart.c: 133: }
  5785                           ;my_uart.c: 135: if( checksum != frame[(14 + 2 + 2) - 2] )
  5786  000BA4  0100               	movlb	0	; () banked
  5787  000BA6  51B1               	movf	(uart_receive_interrupt_handler@frame+16)& (0+255),w,b
  5788  000BA8  1835               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5789  000BAA  B4D8               	btfsc	status,2,c
  5790  000BAC  D011               	goto	i1l4043
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;my_uart.c: 136: {
  5794                           ;my_uart.c: 138: unsigned char bad_checksum_message[3];
  5795                           ;my_uart.c: 139: bad_checksum_message[0] = received_counter;
  5796  000BAE  C050  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_message
  5797                           
  5798                           ;my_uart.c: 140: bad_checksum_message[1] = frame[(14 + 2 + 2) - 2];
  5799  000BB2  C0B1  F02E         	movff	uart_receive_interrupt_handler@frame+16,uart_receive_interrupt_handler@bad_checks
      +                          um_message+1
  5800                           
  5801                           ;my_uart.c: 141: bad_checksum_message[2] = checksum;
  5802  000BB6  C035  F02F         	movff	uart_receive_interrupt_handler@checksum,uart_receive_interrupt_handler@bad_checks
      +                          um_message+2
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;my_uart.c: 142: ToMainLow_sendmsg(3,32,(void *)&bad_checksum_message);
  5806  000BBA  0E20               	movlw	32
  5807  000BBC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5808  000BBE  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_message
  5809  000BC0  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5810  000BC2  0E2D               	movlw	low uart_receive_interrupt_handler@bad_checksum_message
  5811  000BC4  6E18               	movwf	ToMainLow_sendmsg@data,c
  5812  000BC6  0E03               	movlw	3
  5813  000BC8  EC0B  F00F         	call	_ToMainLow_sendmsg
  5814                           
  5815                           ;my_uart.c: 143: error = 1;
  5816  000BCC  0E01               	movlw	1
  5817  000BCE  6E4E               	movwf	uart_receive_interrupt_handler@error,c
  5818  000BD0                     i1l4043:
  5819                           
  5820                           ;my_uart.c: 144: }
  5821                           ;my_uart.c: 149: if( !error )
  5822  000BD0  664E               	tstfsz	uart_receive_interrupt_handler@error,c
  5823  000BD2  D02C               	goto	i1l4063
  5824                           
  5825                           ;my_uart.c: 150: {
  5826                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5827  000BD4  C01D  F036         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5828                           
  5829                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5830  000BD8  5036               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5831  000BDA  0A11               	xorlw	17
  5832  000BDC  B4D8               	btfsc	status,2,c
  5833  000BDE  D01C               	goto	i1l422
  5834  000BE0  5036               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5835  000BE2  0AF1               	xorlw	241
  5836  000BE4  B4D8               	btfsc	status,2,c
  5837  000BE6  D018               	goto	i1l422
  5838  000BE8  5036               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5839  000BEA  0AF2               	xorlw	242
  5840  000BEC  B4D8               	btfsc	status,2,c
  5841  000BEE  D014               	goto	i1l422
  5842  000BF0  5036               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5843  000BF2  0AF3               	xorlw	243
  5844  000BF4  B4D8               	btfsc	status,2,c
  5845  000BF6  D010               	goto	i1l422
  5846  000BF8  5036               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5847  000BFA  0AF4               	xorlw	244
  5848  000BFC  B4D8               	btfsc	status,2,c
  5849  000BFE  D00C               	goto	i1l422
  5850                           
  5851                           ;my_uart.c: 155: {
  5852                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5853  000C00  C050  F034         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5854                           
  5855                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5856  000C04  0E24               	movlw	36
  5857  000C06  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5858  000C08  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5859  000C0A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5860  000C0C  0E34               	movlw	low uart_receive_interrupt_handler@message_count
  5861  000C0E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5862  000C10  0E01               	movlw	1
  5863  000C12  EC0B  F00F         	call	_ToMainLow_sendmsg
  5864  000C16  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5865  000C18                     i1l422:
  5866                           
  5867                           ;my_uart.c: 158: }
  5868                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5869  000C18  0E1F               	movlw	31
  5870  000C1A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5871  000C1C  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5872  000C1E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5873  000C20  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5874  000C22  6E18               	movwf	ToMainLow_sendmsg@data,c
  5875  000C24  0E0E               	movlw	14
  5876  000C26  EC0B  F00F         	call	_ToMainLow_sendmsg
  5877  000C2A  6E2C               	movwf	uart_receive_interrupt_handler@status_2215,c
  5878  000C2C                     i1l4063:
  5879                           
  5880                           ;my_uart.c: 171: }
  5881                           ;my_uart.c: 172: }
  5882                           ;my_uart.c: 174: received_counter++;
  5883  000C2C  2A50               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5884                           
  5885                           ;my_uart.c: 175: error = 0;
  5886  000C2E  0E00               	movlw	0
  5887  000C30  6E4E               	movwf	uart_receive_interrupt_handler@error,c
  5888  000C32  0012               	return	
  5889  000C34                     __end_of_uart_receive_interrupt_handler:
  5890                           	opt stack 0
  5891                           pclatu	equ	0xFFB
  5892                           pclath	equ	0xFFA
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           postinc0	equ	0xFEE
  5901                           fsr0h	equ	0xFEA
  5902                           fsr0l	equ	0xFE9
  5903                           wreg	equ	0xFE8
  5904                           indf1	equ	0xFE7
  5905                           fsr1h	equ	0xFE2
  5906                           fsr1l	equ	0xFE1
  5907                           bsr	equ	0xFE0
  5908                           indf2	equ	0xFDF
  5909                           postinc2	equ	0xFDE
  5910                           postdec2	equ	0xFDD
  5911                           fsr2h	equ	0xFDA
  5912                           fsr2l	equ	0xFD9
  5913                           status	equ	0xFD8
  5914                           
  5915 ;; *************** function _timer1_int_handler *****************
  5916 ;; Defined at:
  5917 ;;		line 38 in file "../src/user_interrupts.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;		None
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  result          2   26[COMRAM] unsigned int 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;		None               void
  5924 ;; Registers used:
  5925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5935 ;;Total ram usage:        2 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    8
  5938 ;; This function calls:
  5939 ;;		_ReadTimer1
  5940 ;;		_ToMainLow_sendmsg
  5941 ;;		_WriteTimer1
  5942 ;; This function is called by:
  5943 ;;		_InterruptHandlerLow
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text35
  5948  001D74                     __ptext35:
  5949                           	opt stack 0
  5950  001D74                     _timer1_int_handler:
  5951                           	opt stack 17
  5952                           
  5953                           ;user_interrupts.c: 42: unsigned int result;
  5954                           ;user_interrupts.c: 49: result = ReadTimer1();
  5955                           
  5956                           ;incstack = 0
  5957  001D74  EC58  F00F         	call	_ReadTimer1	;wreg free
  5958  001D78  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5959  001D7C  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5960                           
  5961                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5962  001D80  0E0B               	movlw	11
  5963  001D82  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5964  001D84  0E00               	movlw	0
  5965  001D86  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5966  001D88  0E00               	movlw	0
  5967  001D8A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5968  001D8C  0E00               	movlw	0
  5969  001D8E  EC0B  F00F         	call	_ToMainLow_sendmsg
  5970                           
  5971                           ;user_interrupts.c: 53: WriteTimer1(0);
  5972  001D92  0E00               	movlw	0
  5973  001D94  6E02               	movwf	WriteTimer1@timer1+1,c
  5974  001D96  0E00               	movlw	0
  5975  001D98  6E01               	movwf	WriteTimer1@timer1,c
  5976  001D9A  EC4F  F00F         	call	_WriteTimer1	;wreg free
  5977  001D9E  0012               	return	
  5978  001DA0                     __end_of_timer1_int_handler:
  5979                           	opt stack 0
  5980                           pclatu	equ	0xFFB
  5981                           pclath	equ	0xFFA
  5982                           tblptru	equ	0xFF8
  5983                           tblptrh	equ	0xFF7
  5984                           tblptrl	equ	0xFF6
  5985                           tablat	equ	0xFF5
  5986                           prodh	equ	0xFF4
  5987                           prodl	equ	0xFF3
  5988                           intcon	equ	0xFF2
  5989                           postinc0	equ	0xFEE
  5990                           fsr0h	equ	0xFEA
  5991                           fsr0l	equ	0xFE9
  5992                           wreg	equ	0xFE8
  5993                           indf1	equ	0xFE7
  5994                           fsr1h	equ	0xFE2
  5995                           fsr1l	equ	0xFE1
  5996                           bsr	equ	0xFE0
  5997                           indf2	equ	0xFDF
  5998                           postinc2	equ	0xFDE
  5999                           postdec2	equ	0xFDD
  6000                           fsr2h	equ	0xFDA
  6001                           fsr2l	equ	0xFD9
  6002                           status	equ	0xFD8
  6003                           
  6004 ;; *************** function _WriteTimer1 *****************
  6005 ;; Defined at:
  6006 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  timer1          2    0[COMRAM] unsigned int 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  timer           2    2[COMRAM] struct Timers
  6011 ;; Return value:  Size  Location     Type
  6012 ;;		None               void
  6013 ;; Registers used:
  6014 ;;		None
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6024 ;;Total ram usage:        4 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; Hardware stack levels required when called:    5
  6027 ;; This function calls:
  6028 ;;		Nothing
  6029 ;; This function is called by:
  6030 ;;		_timer1_int_handler
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text36
  6035  001E9E                     __ptext36:
  6036                           	opt stack 0
  6037  001E9E                     _WriteTimer1:
  6038                           	opt stack 19
  6039                           
  6040                           ;incstack = 0
  6041  001E9E  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6042  001EA2  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6043  001EA6  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6044  001EAA  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6045  001EAE  0012               	return	
  6046  001EB0                     __end_of_WriteTimer1:
  6047                           	opt stack 0
  6048                           pclatu	equ	0xFFB
  6049                           pclath	equ	0xFFA
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           postinc0	equ	0xFEE
  6058                           fsr0h	equ	0xFEA
  6059                           fsr0l	equ	0xFE9
  6060                           wreg	equ	0xFE8
  6061                           indf1	equ	0xFE7
  6062                           fsr1h	equ	0xFE2
  6063                           fsr1l	equ	0xFE1
  6064                           bsr	equ	0xFE0
  6065                           indf2	equ	0xFDF
  6066                           postinc2	equ	0xFDE
  6067                           postdec2	equ	0xFDD
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function _ToMainLow_sendmsg *****************
  6073 ;; Defined at:
  6074 ;;		line 103 in file "../src/messages.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  length          1    wreg     unsigned char 
  6077 ;;  msgtype         1   22[COMRAM] unsigned char 
  6078 ;;  data            2   23[COMRAM] PTR void 
  6079 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_message(3)
      +, uart_receive_interrupt_handler@gooey_uart_center(14), 
  6080 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;  length          1   25[COMRAM] unsigned char 
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  1    wreg      char 
  6085 ;; Registers used:
  6086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6092 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6095 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6096 ;;Total ram usage:        4 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:    7
  6099 ;; This function calls:
  6100 ;;		i1_send_msg
  6101 ;; This function is called by:
  6102 ;;		_uart_receive_interrupt_handler
  6103 ;;		_timer1_int_handler
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           	psect	text37
  6108  001E16                     __ptext37:
  6109                           	opt stack 0
  6110  001E16                     _ToMainLow_sendmsg:
  6111                           	opt stack 17
  6112                           
  6113                           ;incstack = 0
  6114                           ;ToMainLow_sendmsg@length stored from wreg
  6115  001E16  6E1A               	movwf	ToMainLow_sendmsg@length,c
  6116                           
  6117                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6118  001E18  0101               	movlb	1	; () banked
  6119  001E1A  0E01               	movlw	high _ToMainLow_MQ
  6120  001E1C  6E0C               	movwf	i1send_msg@qptr+1,c
  6121  001E1E  0101               	movlb	1	; () banked
  6122  001E20  0E81               	movlw	low _ToMainLow_MQ
  6123  001E22  6E0B               	movwf	i1send_msg@qptr,c
  6124  001E24  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6125  001E28  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6126  001E2C  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6127  001E30  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6128  001E34  EC76  F00A         	call	i1_send_msg	;wreg free
  6129  001E38  0012               	return	
  6130  001E3A                     __end_of_ToMainLow_sendmsg:
  6131                           	opt stack 0
  6132                           pclatu	equ	0xFFB
  6133                           pclath	equ	0xFFA
  6134                           tblptru	equ	0xFF8
  6135                           tblptrh	equ	0xFF7
  6136                           tblptrl	equ	0xFF6
  6137                           tablat	equ	0xFF5
  6138                           prodh	equ	0xFF4
  6139                           prodl	equ	0xFF3
  6140                           intcon	equ	0xFF2
  6141                           postinc0	equ	0xFEE
  6142                           fsr0h	equ	0xFEA
  6143                           fsr0l	equ	0xFE9
  6144                           wreg	equ	0xFE8
  6145                           indf1	equ	0xFE7
  6146                           fsr1h	equ	0xFE2
  6147                           fsr1l	equ	0xFE1
  6148                           bsr	equ	0xFE0
  6149                           indf2	equ	0xFDF
  6150                           postinc2	equ	0xFDE
  6151                           postdec2	equ	0xFDD
  6152                           fsr2h	equ	0xFDA
  6153                           fsr2l	equ	0xFD9
  6154                           status	equ	0xFD8
  6155                           
  6156 ;; *************** function i1_send_msg *****************
  6157 ;; Defined at:
  6158 ;;		line 24 in file "../src/messages.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6161 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  6162 ;;  length          1   12[COMRAM] unsigned char 
  6163 ;;  msgtype         1   13[COMRAM] unsigned char 
  6164 ;;  data            2   14[COMRAM] PTR void 
  6165 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  6166 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6167 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  6168 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6171 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6172 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  6173 ;;  send_msg        2   17[COMRAM] unsigned int 
  6174 ;;  send_msg        1   19[COMRAM] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      char 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6184 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6185 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6187 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;Total ram usage:       12 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    6
  6191 ;; This function calls:
  6192 ;;		i1___awmod
  6193 ;;		i1_memcpy
  6194 ;; This function is called by:
  6195 ;;		_ToMainLow_sendmsg
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text38
  6200  0014EC                     __ptext38:
  6201                           	opt stack 0
  6202  0014EC                     i1_send_msg:
  6203                           	opt stack 17
  6204                           
  6205                           ;messages.c: 25: unsigned char slot;
  6206                           ;messages.c: 27: msg *qmsg;
  6207                           ;messages.c: 28: size_t tlength = length;
  6208                           
  6209                           ;incstack = 0
  6210  0014EC  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6211  0014F0  6A13               	clrf	i1send_msg@tlength+1,c
  6212                           
  6213                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6214  0014F2  EE20 F055          	lfsr	2,85
  6215  0014F6  500B               	movf	i1send_msg@qptr,w,c
  6216  0014F8  26D9               	addwf	fsr2l,f,c
  6217  0014FA  500C               	movf	i1send_msg@qptr+1,w,c
  6218  0014FC  22DA               	addwfc	fsr2h,f,c
  6219  0014FE  50DF               	movf	indf2,w,c
  6220  001500  6E14               	movwf	i1send_msg@slot,c
  6221                           
  6222                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6223  001502  5014               	movf	i1send_msg@slot,w,c
  6224  001504  0D11               	mullw	17
  6225  001506  50F3               	movf	prodl,w,c
  6226  001508  240B               	addwf	i1send_msg@qptr,w,c
  6227  00150A  6E15               	movwf	i1send_msg@qmsg,c
  6228  00150C  50F4               	movf	prodh,w,c
  6229  00150E  200C               	addwfc	i1send_msg@qptr+1,w,c
  6230  001510  6E16               	movwf	i1send_msg@qmsg+1,c
  6231                           
  6232                           ;messages.c: 41: if (qmsg->full != 0) {
  6233  001512  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6234  001516  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6235  00151A  50DF               	movf	indf2,w,c
  6236  00151C  B4D8               	btfsc	status,2,c
  6237  00151E  D002               	goto	i1l3619
  6238                           
  6239                           ;messages.c: 42: return (-1);
  6240  001520  0EFF               	movlw	255
  6241  001522  0012               	return	
  6242  001524                     i1l3619:
  6243                           
  6244                           ;messages.c: 43: }
  6245                           ;messages.c: 46: qmsg->length = length;
  6246  001524  EE20 F001          	lfsr	2,1
  6247  001528  5015               	movf	i1send_msg@qmsg,w,c
  6248  00152A  26D9               	addwf	fsr2l,f,c
  6249  00152C  5016               	movf	i1send_msg@qmsg+1,w,c
  6250  00152E  22DA               	addwfc	fsr2h,f,c
  6251  001530  C00D  FFDF         	movff	i1send_msg@length,indf2
  6252                           
  6253                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6254  001534  EE20 F002          	lfsr	2,2
  6255  001538  5015               	movf	i1send_msg@qmsg,w,c
  6256  00153A  26D9               	addwf	fsr2l,f,c
  6257  00153C  5016               	movf	i1send_msg@qmsg+1,w,c
  6258  00153E  22DA               	addwfc	fsr2h,f,c
  6259  001540  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6260                           
  6261                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6262  001544  0E03               	movlw	3
  6263  001546  2415               	addwf	i1send_msg@qmsg,w,c
  6264  001548  6E01               	movwf	i1memcpy@d1,c
  6265  00154A  0E00               	movlw	0
  6266  00154C  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6267  00154E  6E02               	movwf	i1memcpy@d1+1,c
  6268  001550  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6269  001554  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6270  001558  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6271  00155C  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6272  001560  ECAE  F00D         	call	i1_memcpy	;wreg free
  6273                           
  6274                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6275  001564  EE20 F055          	lfsr	2,85
  6276  001568  500B               	movf	i1send_msg@qptr,w,c
  6277  00156A  26D9               	addwf	fsr2l,f,c
  6278  00156C  500C               	movf	i1send_msg@qptr+1,w,c
  6279  00156E  22DA               	addwfc	fsr2h,f,c
  6280  001570  EE10 F055          	lfsr	1,85
  6281  001574  500B               	movf	i1send_msg@qptr,w,c
  6282  001576  26E1               	addwf	fsr1l,f,c
  6283  001578  500C               	movf	i1send_msg@qptr+1,w,c
  6284  00157A  22E2               	addwfc	fsr1h,f,c
  6285  00157C  50E7               	movf	indf1,w,c
  6286  00157E  6E11               	movwf	??i1_send_msg& (0+255),c
  6287  001580  0E01               	movlw	1
  6288  001582  2411               	addwf	??i1_send_msg,w,c
  6289  001584  6E01               	movwf	i1___awmod@dividend,c
  6290  001586  6A02               	clrf	i1___awmod@dividend+1,c
  6291  001588  0E00               	movlw	0
  6292  00158A  2202               	addwfc	i1___awmod@dividend+1,f,c
  6293  00158C  0E00               	movlw	0
  6294  00158E  6E04               	movwf	i1___awmod@divisor+1,c
  6295  001590  0E05               	movlw	5
  6296  001592  6E03               	movwf	i1___awmod@divisor,c
  6297  001594  EC28  F00B         	call	i1___awmod	;wreg free
  6298  001598  5001               	movf	?i1___awmod,w,c
  6299  00159A  6EDF               	movwf	indf2,c
  6300                           
  6301                           ;messages.c: 59: qmsg->full = 1;
  6302  00159C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6303  0015A0  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6304  0015A4  0E01               	movlw	1
  6305  0015A6  6EDF               	movwf	indf2,c
  6306                           
  6307                           ;messages.c: 60: return (1);
  6308  0015A8  0E01               	movlw	1
  6309  0015AA  0012               	return	
  6310  0015AC                     __end_ofi1_send_msg:
  6311                           	opt stack 0
  6312                           pclatu	equ	0xFFB
  6313                           pclath	equ	0xFFA
  6314                           tblptru	equ	0xFF8
  6315                           tblptrh	equ	0xFF7
  6316                           tblptrl	equ	0xFF6
  6317                           tablat	equ	0xFF5
  6318                           prodh	equ	0xFF4
  6319                           prodl	equ	0xFF3
  6320                           intcon	equ	0xFF2
  6321                           postinc0	equ	0xFEE
  6322                           fsr0h	equ	0xFEA
  6323                           fsr0l	equ	0xFE9
  6324                           wreg	equ	0xFE8
  6325                           indf1	equ	0xFE7
  6326                           fsr1h	equ	0xFE2
  6327                           fsr1l	equ	0xFE1
  6328                           bsr	equ	0xFE0
  6329                           indf2	equ	0xFDF
  6330                           postinc2	equ	0xFDE
  6331                           postdec2	equ	0xFDD
  6332                           fsr2h	equ	0xFDA
  6333                           fsr2l	equ	0xFD9
  6334                           status	equ	0xFD8
  6335                           
  6336 ;; *************** function i1_memcpy *****************
  6337 ;; Defined at:
  6338 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  d1              2    0[COMRAM] PTR void 
  6341 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6342 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  6343 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6344 ;;		 -> main@ic(38), 
  6345 ;;  s1              2    2[COMRAM] PTR const void 
  6346 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6347 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6348 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  6349 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6350 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  6351 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  6352 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6353 ;;  n               2    4[COMRAM] unsigned int 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6356 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6357 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6358 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  6359 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6360 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  6361 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  6362 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6363 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6364 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6365 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  6366 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6367 ;;		 -> main@ic(38), 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  2    0[COMRAM] PTR void 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6377 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6380 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6381 ;;Total ram usage:       10 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    5
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		i1_send_msg
  6388 ;;		i1_recv_msg
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text39
  6393  001B5C                     __ptext39:
  6394                           	opt stack 0
  6395  001B5C                     i1_memcpy:
  6396                           	opt stack 17
  6397                           
  6398                           ;incstack = 0
  6399  001B5C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6400  001B60  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6401  001B64  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6402  001B68  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6403  001B6C  D00E               	goto	i1l2425
  6404  001B6E                     i1l2419:
  6405  001B6E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6406  001B72  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6407  001B76  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6408  001B7A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6409  001B7E  CFDF FFE7          	movff	indf2,indf1
  6410  001B82  4A09               	infsnz	i1memcpy@s,f,c
  6411  001B84  2A0A               	incf	i1memcpy@s+1,f,c
  6412  001B86  4A07               	infsnz	i1memcpy@d,f,c
  6413  001B88  2A08               	incf	i1memcpy@d+1,f,c
  6414  001B8A                     i1l2425:
  6415  001B8A  0605               	decf	i1memcpy@n,f,c
  6416  001B8C  A0D8               	btfss	status,0,c
  6417  001B8E  0606               	decf	i1memcpy@n+1,f,c
  6418  001B90  2805               	incf	i1memcpy@n& (0+255),w,c
  6419  001B92  B4D8               	btfsc	status,2,c
  6420  001B94  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6421  001B96  B4D8               	btfsc	status,2,c
  6422                           
  6423                           ;	Return value of i1_memcpy is never used
  6424  001B98  0012               	return	
  6425  001B9A  D7E9               	goto	i1l2419
  6426  001B9C                     __end_ofi1_memcpy:
  6427                           	opt stack 0
  6428                           pclatu	equ	0xFFB
  6429                           pclath	equ	0xFFA
  6430                           tblptru	equ	0xFF8
  6431                           tblptrh	equ	0xFF7
  6432                           tblptrl	equ	0xFF6
  6433                           tablat	equ	0xFF5
  6434                           prodh	equ	0xFF4
  6435                           prodl	equ	0xFF3
  6436                           intcon	equ	0xFF2
  6437                           postinc0	equ	0xFEE
  6438                           fsr0h	equ	0xFEA
  6439                           fsr0l	equ	0xFE9
  6440                           wreg	equ	0xFE8
  6441                           indf1	equ	0xFE7
  6442                           fsr1h	equ	0xFE2
  6443                           fsr1l	equ	0xFE1
  6444                           bsr	equ	0xFE0
  6445                           indf2	equ	0xFDF
  6446                           postinc2	equ	0xFDE
  6447                           postdec2	equ	0xFDD
  6448                           fsr2h	equ	0xFDA
  6449                           fsr2l	equ	0xFD9
  6450                           status	equ	0xFD8
  6451                           
  6452 ;; *************** function i1___awmod *****************
  6453 ;; Defined at:
  6454 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  dividend        2    0[COMRAM] int 
  6457 ;;  divisor         2    2[COMRAM] int 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  __awmod         1    5[COMRAM] unsigned char 
  6460 ;;  __awmod         1    4[COMRAM] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  2    0[COMRAM] int 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2, status,0, prodl
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6473 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6474 ;;Total ram usage:        6 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    5
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		i1_send_msg
  6481 ;;		i1_recv_msg
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text40
  6486  001650                     __ptext40:
  6487                           	opt stack 0
  6488  001650                     i1___awmod:
  6489                           	opt stack 17
  6490                           
  6491                           ;incstack = 0
  6492  001650  0E00               	movlw	0
  6493  001652  6E06               	movwf	i1___awmod@sign,c
  6494  001654  5002               	movf	i1___awmod@dividend+1,w,c
  6495  001656  0A80               	xorlw	128
  6496  001658  6EF3               	movwf	prodl,c
  6497  00165A  0E80               	movlw	128
  6498  00165C  5CF3               	subwf	prodl,w,c
  6499  00165E  0E00               	movlw	0
  6500  001660  B4D8               	btfsc	status,2,c
  6501  001662  5C01               	subwf	i1___awmod@dividend,w,c
  6502  001664  B0D8               	btfsc	status,0,c
  6503  001666  D006               	goto	i1l2445
  6504  001668  6C01               	negf	i1___awmod@dividend,c
  6505  00166A  1E02               	comf	i1___awmod@dividend+1,f,c
  6506  00166C  B0D8               	btfsc	status,0,c
  6507  00166E  2A02               	incf	i1___awmod@dividend+1,f,c
  6508  001670  0E01               	movlw	1
  6509  001672  6E06               	movwf	i1___awmod@sign,c
  6510  001674                     i1l2445:
  6511  001674  5004               	movf	i1___awmod@divisor+1,w,c
  6512  001676  0A80               	xorlw	128
  6513  001678  6EF3               	movwf	prodl,c
  6514  00167A  0E80               	movlw	128
  6515  00167C  5CF3               	subwf	prodl,w,c
  6516  00167E  0E00               	movlw	0
  6517  001680  B4D8               	btfsc	status,2,c
  6518  001682  5C03               	subwf	i1___awmod@divisor,w,c
  6519  001684  B0D8               	btfsc	status,0,c
  6520  001686  D004               	goto	i1l2449
  6521  001688  6C03               	negf	i1___awmod@divisor,c
  6522  00168A  1E04               	comf	i1___awmod@divisor+1,f,c
  6523  00168C  B0D8               	btfsc	status,0,c
  6524  00168E  2A04               	incf	i1___awmod@divisor+1,f,c
  6525  001690                     i1l2449:
  6526  001690  5004               	movf	i1___awmod@divisor+1,w,c
  6527  001692  1003               	iorwf	i1___awmod@divisor,w,c
  6528  001694  B4D8               	btfsc	status,2,c
  6529  001696  D018               	goto	i1l2465
  6530  001698  0E01               	movlw	1
  6531  00169A  6E05               	movwf	i1___awmod@counter,c
  6532  00169C  D004               	goto	i1l2455
  6533  00169E                     i1l2453:
  6534  00169E  90D8               	bcf	status,0,c
  6535  0016A0  3603               	rlcf	i1___awmod@divisor,f,c
  6536  0016A2  3604               	rlcf	i1___awmod@divisor+1,f,c
  6537  0016A4  2A05               	incf	i1___awmod@counter,f,c
  6538  0016A6                     i1l2455:
  6539  0016A6  AE04               	btfss	i1___awmod@divisor+1,7,c
  6540  0016A8  D7FA               	goto	i1l2453
  6541  0016AA                     i1l2457:
  6542  0016AA  5003               	movf	i1___awmod@divisor,w,c
  6543  0016AC  5C01               	subwf	i1___awmod@dividend,w,c
  6544  0016AE  5004               	movf	i1___awmod@divisor+1,w,c
  6545  0016B0  5802               	subwfb	i1___awmod@dividend+1,w,c
  6546  0016B2  A0D8               	btfss	status,0,c
  6547  0016B4  D004               	goto	i1l2461
  6548  0016B6  5003               	movf	i1___awmod@divisor,w,c
  6549  0016B8  5E01               	subwf	i1___awmod@dividend,f,c
  6550  0016BA  5004               	movf	i1___awmod@divisor+1,w,c
  6551  0016BC  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6552  0016BE                     i1l2461:
  6553  0016BE  90D8               	bcf	status,0,c
  6554  0016C0  3204               	rrcf	i1___awmod@divisor+1,f,c
  6555  0016C2  3203               	rrcf	i1___awmod@divisor,f,c
  6556  0016C4  2E05               	decfsz	i1___awmod@counter,f,c
  6557  0016C6  D7F1               	goto	i1l2457
  6558  0016C8                     i1l2465:
  6559  0016C8  5006               	movf	i1___awmod@sign,w,c
  6560  0016CA  B4D8               	btfsc	status,2,c
  6561  0016CC  D004               	goto	i1l2469
  6562  0016CE  6C01               	negf	i1___awmod@dividend,c
  6563  0016D0  1E02               	comf	i1___awmod@dividend+1,f,c
  6564  0016D2  B0D8               	btfsc	status,0,c
  6565  0016D4  2A02               	incf	i1___awmod@dividend+1,f,c
  6566  0016D6                     i1l2469:
  6567  0016D6  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6568  0016DA  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6569  0016DE  0012               	return	
  6570  0016E0                     __end_ofi1___awmod:
  6571                           	opt stack 0
  6572                           pclatu	equ	0xFFB
  6573                           pclath	equ	0xFFA
  6574                           tblptru	equ	0xFF8
  6575                           tblptrh	equ	0xFF7
  6576                           tblptrl	equ	0xFF6
  6577                           tablat	equ	0xFF5
  6578                           prodh	equ	0xFF4
  6579                           prodl	equ	0xFF3
  6580                           intcon	equ	0xFF2
  6581                           postinc0	equ	0xFEE
  6582                           fsr0h	equ	0xFEA
  6583                           fsr0l	equ	0xFE9
  6584                           wreg	equ	0xFE8
  6585                           indf1	equ	0xFE7
  6586                           fsr1h	equ	0xFE2
  6587                           fsr1l	equ	0xFE1
  6588                           bsr	equ	0xFE0
  6589                           indf2	equ	0xFDF
  6590                           postinc2	equ	0xFDE
  6591                           postdec2	equ	0xFDD
  6592                           fsr2h	equ	0xFDA
  6593                           fsr2l	equ	0xFD9
  6594                           status	equ	0xFD8
  6595                           
  6596 ;; *************** function _ReadTimer1 *****************
  6597 ;; Defined at:
  6598 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;		None
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  timer           2    2[COMRAM] struct Timers
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  2    0[COMRAM] unsigned int 
  6605 ;; Registers used:
  6606 ;;		None
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;Total ram usage:        4 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    5
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_timer1_int_handler
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text41
  6627  001EB0                     __ptext41:
  6628                           	opt stack 0
  6629  001EB0                     _ReadTimer1:
  6630                           	opt stack 19
  6631                           
  6632                           ;incstack = 0
  6633  001EB0  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6634  001EB4  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6635  001EB8  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6636  001EBC  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6637  001EC0  0012               	return	
  6638  001EC2                     __end_of_ReadTimer1:
  6639                           	opt stack 0
  6640                           pclatu	equ	0xFFB
  6641                           pclath	equ	0xFFA
  6642                           tblptru	equ	0xFF8
  6643                           tblptrh	equ	0xFF7
  6644                           tblptrl	equ	0xFF6
  6645                           tablat	equ	0xFF5
  6646                           prodh	equ	0xFF4
  6647                           prodl	equ	0xFF3
  6648                           intcon	equ	0xFF2
  6649                           postinc0	equ	0xFEE
  6650                           fsr0h	equ	0xFEA
  6651                           fsr0l	equ	0xFE9
  6652                           wreg	equ	0xFE8
  6653                           indf1	equ	0xFE7
  6654                           fsr1h	equ	0xFE2
  6655                           fsr1l	equ	0xFE1
  6656                           bsr	equ	0xFE0
  6657                           indf2	equ	0xFDF
  6658                           postinc2	equ	0xFDE
  6659                           postdec2	equ	0xFDD
  6660                           fsr2h	equ	0xFDA
  6661                           fsr2l	equ	0xFD9
  6662                           status	equ	0xFD8
  6663                           
  6664 ;; *************** function _InterruptHandlerHigh *****************
  6665 ;; Defined at:
  6666 ;;		line 86 in file "../src/interrupts.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;		None
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;		None
  6671 ;; Return value:  Size  Location     Type
  6672 ;;		None               void
  6673 ;; Registers used:
  6674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6682 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6683 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6684 ;;Total ram usage:       14 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    4
  6687 ;; This function calls:
  6688 ;;		_SleepIfOkay
  6689 ;;		_i2c_int_handler
  6690 ;;		_timer0_int_handler
  6691 ;; This function is called by:
  6692 ;;		Interrupt level 2
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	intcode
  6697  000008                     __pintcode:
  6698                           	opt stack 0
  6699  000008                     _InterruptHandlerHigh:
  6700                           	opt stack 17
  6701                           
  6702                           ;incstack = 0
  6703  000008  CFFA F08A          	movff	pclath,??_InterruptHandlerHigh
  6704  00000C  CFFB F08B          	movff	pclatu,??_InterruptHandlerHigh+1
  6705  000010  CFE9 F08C          	movff	fsr0l,??_InterruptHandlerHigh+2
  6706  000014  EF70  F00B         	goto	int_func
  6707                           pclatu	equ	0xFFB
  6708                           pclath	equ	0xFFA
  6709                           tblptru	equ	0xFF8
  6710                           tblptrh	equ	0xFF7
  6711                           tblptrl	equ	0xFF6
  6712                           tablat	equ	0xFF5
  6713                           prodh	equ	0xFF4
  6714                           prodl	equ	0xFF3
  6715                           intcon	equ	0xFF2
  6716                           postinc0	equ	0xFEE
  6717                           fsr0h	equ	0xFEA
  6718                           fsr0l	equ	0xFE9
  6719                           wreg	equ	0xFE8
  6720                           indf1	equ	0xFE7
  6721                           fsr1h	equ	0xFE2
  6722                           fsr1l	equ	0xFE1
  6723                           bsr	equ	0xFE0
  6724                           indf2	equ	0xFDF
  6725                           postinc2	equ	0xFDE
  6726                           postdec2	equ	0xFDD
  6727                           fsr2h	equ	0xFDA
  6728                           fsr2l	equ	0xFD9
  6729                           status	equ	0xFD8
  6730                           
  6731                           	psect	intcode_body
  6732  0016E0                     __pintcode_body:
  6733                           	opt stack 17
  6734  0016E0                     int_func:
  6735                           	opt stack 17
  6736  0016E0  CFEA F08D          	movff	fsr0h,??_InterruptHandlerHigh+3
  6737  0016E4  CFE1 F08E          	movff	fsr1l,??_InterruptHandlerHigh+4
  6738  0016E8  CFE2 F08F          	movff	fsr1h,??_InterruptHandlerHigh+5
  6739  0016EC  CFD9 F090          	movff	fsr2l,??_InterruptHandlerHigh+6
  6740  0016F0  CFDA F091          	movff	fsr2h,??_InterruptHandlerHigh+7
  6741  0016F4  CFF3 F092          	movff	prodl,??_InterruptHandlerHigh+8
  6742  0016F8  CFF4 F093          	movff	prodh,??_InterruptHandlerHigh+9
  6743  0016FC  CFF6 F094          	movff	tblptrl,??_InterruptHandlerHigh+10
  6744  001700  CFF7 F095          	movff	tblptrh,??_InterruptHandlerHigh+11
  6745  001704  CFF8 F096          	movff	tblptru,??_InterruptHandlerHigh+12
  6746  001708  CFF5 F097          	movff	tablat,??_InterruptHandlerHigh+13
  6747                           
  6748                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6749  00170C  A69E               	btfss	3998,3,c	;volatile
  6750  00170E  D003               	goto	i2l4141
  6751                           
  6752                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6753  001710  969E               	bcf	3998,3,c	;volatile
  6754                           
  6755                           ;interrupts.c: 98: i2c_int_handler();
  6756  001712  EC62  F000         	call	_i2c_int_handler	;wreg free
  6757  001716                     i2l4141:
  6758                           
  6759                           ;interrupts.c: 99: }
  6760                           ;interrupts.c: 102: if (INTCONbits.TMR0IF) {
  6761  001716  A4F2               	btfss	intcon,2,c	;volatile
  6762  001718  D003               	goto	i2l4147
  6763                           
  6764                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6765  00171A  94F2               	bcf	intcon,2,c	;volatile
  6766                           
  6767                           ;interrupts.c: 108: timer0_int_handler();
  6768  00171C  ECAF  F00B         	call	_timer0_int_handler	;wreg free
  6769  001720                     i2l4147:
  6770                           
  6771                           ;interrupts.c: 109: }
  6772                           ;interrupts.c: 118: SleepIfOkay();
  6773  001720  ECAC  F00C         	call	_SleepIfOkay	;wreg free
  6774  001724  C097  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6775  001728  C096  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6776  00172C  C095  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6777  001730  C094  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6778  001734  C093  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6779  001738  C092  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6780  00173C  C091  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6781  001740  C090  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6782  001744  C08F  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6783  001748  C08E  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6784  00174C  C08D  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6785  001750  C08C  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6786  001754  C08B  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6787  001758  C08A  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6788  00175C  0011               	retfie		f
  6789  00175E                     __end_of_InterruptHandlerHigh:
  6790                           	opt stack 0
  6791                           pclatu	equ	0xFFB
  6792                           pclath	equ	0xFFA
  6793                           tblptru	equ	0xFF8
  6794                           tblptrh	equ	0xFF7
  6795                           tblptrl	equ	0xFF6
  6796                           tablat	equ	0xFF5
  6797                           prodh	equ	0xFF4
  6798                           prodl	equ	0xFF3
  6799                           intcon	equ	0xFF2
  6800                           postinc0	equ	0xFEE
  6801                           fsr0h	equ	0xFEA
  6802                           fsr0l	equ	0xFE9
  6803                           wreg	equ	0xFE8
  6804                           indf1	equ	0xFE7
  6805                           fsr1h	equ	0xFE2
  6806                           fsr1l	equ	0xFE1
  6807                           bsr	equ	0xFE0
  6808                           indf2	equ	0xFDF
  6809                           postinc2	equ	0xFDE
  6810                           postdec2	equ	0xFDD
  6811                           fsr2h	equ	0xFDA
  6812                           fsr2l	equ	0xFD9
  6813                           status	equ	0xFD8
  6814                           
  6815 ;; *************** function _timer0_int_handler *****************
  6816 ;; Defined at:
  6817 ;;		line 16 in file "../src/user_interrupts.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;		None
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  val             2   33[BANK0 ] unsigned int 
  6822 ;;  msgtype         2   31[BANK0 ] int 
  6823 ;;  length          2   29[BANK0 ] int 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;		None               void
  6826 ;; Registers used:
  6827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6834 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6836 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6837 ;;Total ram usage:        6 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    3
  6840 ;; This function calls:
  6841 ;;		_FromMainHigh_recvmsg
  6842 ;;		_ToMainHigh_sendmsg
  6843 ;;		_WriteTimer0
  6844 ;; This function is called by:
  6845 ;;		_InterruptHandlerHigh
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text43
  6850  00175E                     __ptext43:
  6851                           	opt stack 0
  6852  00175E                     _timer0_int_handler:
  6853                           	opt stack 17
  6854                           
  6855                           ;user_interrupts.c: 20: unsigned int val;
  6856                           ;user_interrupts.c: 21: int length, msgtype;
  6857                           ;user_interrupts.c: 25: WriteTimer0(0);
  6858                           
  6859                           ;incstack = 0
  6860  00175E  0E00               	movlw	0
  6861  001760  0100               	movlb	0	; () banked
  6862  001762  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6863  001764  0E00               	movlw	0
  6864  001766  0100               	movlb	0	; () banked
  6865  001768  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6866  00176A  EC61  F00F         	call	_WriteTimer0	;wreg free
  6867                           
  6868                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6869  00176E  0100               	movlb	0	; () banked
  6870  001770  0E00               	movlw	high timer0_int_handler@msgtype
  6871  001772  0100               	movlb	0	; () banked
  6872  001774  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6873  001776  0100               	movlb	0	; () banked
  6874  001778  0E7F               	movlw	low timer0_int_handler@msgtype
  6875  00177A  0100               	movlb	0	; () banked
  6876  00177C  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6877  00177E  0100               	movlb	0	; () banked
  6878  001780  0E00               	movlw	high timer0_int_handler@val
  6879  001782  0100               	movlb	0	; () banked
  6880  001784  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6881  001786  0100               	movlb	0	; () banked
  6882  001788  0E81               	movlw	low timer0_int_handler@val
  6883  00178A  0100               	movlb	0	; () banked
  6884  00178C  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6885  00178E  0E02               	movlw	2
  6886  001790  EC41  F00E         	call	_FromMainHigh_recvmsg
  6887  001794  0100               	movlb	0	; () banked
  6888  001796  6F7D               	movwf	timer0_int_handler@length& (0+255),b
  6889  001798  0100               	movlb	0	; () banked
  6890  00179A  6B7E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6891  00179C  0100               	movlb	0	; () banked
  6892  00179E  BF7D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6893  0017A0  077E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6897  0017A2  0100               	movlb	0	; () banked
  6898  0017A4  517D               	movf	timer0_int_handler@length& (0+255),w,b
  6899  0017A6  0A02               	xorlw	2
  6900  0017A8  117E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6901  0017AA  A4D8               	btfss	status,2,c
  6902  0017AC  0012               	return	
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6906  0017AE  0E0A               	movlw	10
  6907  0017B0  0100               	movlb	0	; () banked
  6908  0017B2  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6909  0017B4  0100               	movlb	0	; () banked
  6910  0017B6  0E00               	movlw	high timer0_int_handler@val
  6911  0017B8  0100               	movlb	0	; () banked
  6912  0017BA  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6913  0017BC  0100               	movlb	0	; () banked
  6914  0017BE  0E81               	movlw	low timer0_int_handler@val
  6915  0017C0  0100               	movlb	0	; () banked
  6916  0017C2  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6917  0017C4  0E02               	movlw	2
  6918  0017C6  ECA3  F00E         	call	_ToMainHigh_sendmsg
  6919  0017CA  0012               	return	
  6920  0017CC                     __end_of_timer0_int_handler:
  6921                           	opt stack 0
  6922                           pclatu	equ	0xFFB
  6923                           pclath	equ	0xFFA
  6924                           tblptru	equ	0xFF8
  6925                           tblptrh	equ	0xFF7
  6926                           tblptrl	equ	0xFF6
  6927                           tablat	equ	0xFF5
  6928                           prodh	equ	0xFF4
  6929                           prodl	equ	0xFF3
  6930                           intcon	equ	0xFF2
  6931                           postinc0	equ	0xFEE
  6932                           fsr0h	equ	0xFEA
  6933                           fsr0l	equ	0xFE9
  6934                           wreg	equ	0xFE8
  6935                           indf1	equ	0xFE7
  6936                           fsr1h	equ	0xFE2
  6937                           fsr1l	equ	0xFE1
  6938                           bsr	equ	0xFE0
  6939                           indf2	equ	0xFDF
  6940                           postinc2	equ	0xFDE
  6941                           postdec2	equ	0xFDD
  6942                           fsr2h	equ	0xFDA
  6943                           fsr2l	equ	0xFD9
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function _WriteTimer0 *****************
  6947 ;; Defined at:
  6948 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  timer0          2    0[BANK0 ] unsigned int 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  timer           2    2[BANK0 ] struct Timers
  6953 ;; Return value:  Size  Location     Type
  6954 ;;		None               void
  6955 ;; Registers used:
  6956 ;;		None
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6963 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;Total ram usage:        4 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_timer0_int_handler
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text44
  6976  001EC2                     __ptext44:
  6977                           	opt stack 0
  6978  001EC2                     _WriteTimer0:
  6979                           	opt stack 19
  6980                           
  6981                           ;incstack = 0
  6982  001EC2  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6983  001EC6  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6984  001ECA  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6985  001ECE  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6986  001ED2  0012               	return	
  6987  001ED4                     __end_of_WriteTimer0:
  6988                           	opt stack 0
  6989                           pclatu	equ	0xFFB
  6990                           pclath	equ	0xFFA
  6991                           tblptru	equ	0xFF8
  6992                           tblptrh	equ	0xFF7
  6993                           tblptrl	equ	0xFF6
  6994                           tablat	equ	0xFF5
  6995                           prodh	equ	0xFF4
  6996                           prodl	equ	0xFF3
  6997                           intcon	equ	0xFF2
  6998                           postinc0	equ	0xFEE
  6999                           fsr0h	equ	0xFEA
  7000                           fsr0l	equ	0xFE9
  7001                           wreg	equ	0xFE8
  7002                           indf1	equ	0xFE7
  7003                           fsr1h	equ	0xFE2
  7004                           fsr1l	equ	0xFE1
  7005                           bsr	equ	0xFE0
  7006                           indf2	equ	0xFDF
  7007                           postinc2	equ	0xFDE
  7008                           postdec2	equ	0xFDD
  7009                           fsr2h	equ	0xFDA
  7010                           fsr2l	equ	0xFD9
  7011                           status	equ	0xFD8
  7012                           
  7013 ;; *************** function _i2c_int_handler *****************
  7014 ;; Defined at:
  7015 ;;		line 108 in file "../src/my_i2c.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;		None
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  msg_type        1   39[BANK0 ] unsigned char 
  7020 ;;  length          1   30[BANK0 ] unsigned char 
  7021 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  7022 ;;  data_read       1   41[BANK0 ] unsigned char 
  7023 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  7024 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  7025 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  7026 ;;  need_data       1   36[BANK0 ] unsigned char 
  7027 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  7028 ;;  data_written    1   34[BANK0 ] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;		None               void
  7031 ;; Registers used:
  7032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7042 ;;Total ram usage:       13 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    3
  7045 ;; This function calls:
  7046 ;;		_FromMainHigh_recvmsg
  7047 ;;		_ToMainHigh_sendmsg
  7048 ;;		_handle_start
  7049 ;;		_start_i2c_slave_reply
  7050 ;;		i2_blip
  7051 ;;		i2_blip1
  7052 ;;		i2_blip2
  7053 ;; This function is called by:
  7054 ;;		_InterruptHandlerHigh
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           	psect	text45
  7059  0000C4                     __ptext45:
  7060                           	opt stack 0
  7061  0000C4                     _i2c_int_handler:
  7062                           	opt stack 17
  7063                           
  7064                           ;my_i2c.c: 112: unsigned char i2c_data;
  7065                           ;my_i2c.c: 113: unsigned char data_read = 0;
  7066                           
  7067                           ;incstack = 0
  7068  0000C4  0E00               	movlw	0
  7069  0000C6  0100               	movlb	0	; () banked
  7070  0000C8  6F89               	movwf	i2c_int_handler@data_read& (0+255),b
  7071                           
  7072                           ;my_i2c.c: 114: unsigned char data_written = 0;
  7073  0000CA  0E00               	movlw	0
  7074  0000CC  0100               	movlb	0	; () banked
  7075  0000CE  6F82               	movwf	i2c_int_handler@data_written& (0+255),b
  7076                           
  7077                           ;my_i2c.c: 115: unsigned char msg_ready = 0;
  7078  0000D0  0E00               	movlw	0
  7079  0000D2  0100               	movlb	0	; () banked
  7080  0000D4  6F88               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7081                           
  7082                           ;my_i2c.c: 116: unsigned char msg_to_send = 0;
  7083  0000D6  0E00               	movlw	0
  7084  0000D8  0100               	movlb	0	; () banked
  7085  0000DA  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7086                           
  7087                           ;my_i2c.c: 117: unsigned char overrun_error = 0;
  7088  0000DC  0E00               	movlw	0
  7089  0000DE  0100               	movlb	0	; () banked
  7090  0000E0  6F83               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7091                           
  7092                           ;my_i2c.c: 118: unsigned char error_buf[3];
  7093                           ;my_i2c.c: 119: unsigned char need_data = 1;
  7094  0000E2  0E01               	movlw	1
  7095  0000E4  0100               	movlb	0	; () banked
  7096  0000E6  6F84               	movwf	i2c_int_handler@need_data& (0+255),b
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;my_i2c.c: 122: if (SSPCON1bits.SSPOV == 1) {
  7100  0000E8  ACC6               	btfss	4038,6,c	;volatile
  7101  0000EA  D024               	goto	i2l3789
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;my_i2c.c: 123: SSPCON1bits.SSPOV = 0;
  7105  0000EC  9CC6               	bcf	4038,6,c	;volatile
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;my_i2c.c: 127: ic_ptr->status = 0x5;
  7109  0000EE  0100               	movlb	0	; () banked
  7110  0000F0  EE20 F021          	lfsr	2,33
  7111  0000F4  0100               	movlb	0	; () banked
  7112  0000F6  51C6               	movf	_ic_ptr& (0+255),w,b
  7113  0000F8  26D9               	addwf	fsr2l,f,c
  7114  0000FA  0100               	movlb	0	; () banked
  7115  0000FC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7116  0000FE  22DA               	addwfc	fsr2h,f,c
  7117  000100  0E05               	movlw	5
  7118  000102  6EDF               	movwf	indf2,c
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;my_i2c.c: 128: overrun_error = 1;
  7122  000104  0E01               	movlw	1
  7123  000106  0100               	movlb	0	; () banked
  7124  000108  6F83               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;my_i2c.c: 129: ic_ptr->error_count++;
  7128  00010A  0100               	movlb	0	; () banked
  7129  00010C  EE20 F023          	lfsr	2,35
  7130  000110  0100               	movlb	0	; () banked
  7131  000112  51C6               	movf	_ic_ptr& (0+255),w,b
  7132  000114  26D9               	addwf	fsr2l,f,c
  7133  000116  0100               	movlb	0	; () banked
  7134  000118  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7135  00011A  22DA               	addwfc	fsr2h,f,c
  7136  00011C  2ADF               	incf	indf2,f,c
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;my_i2c.c: 130: ic_ptr->error_code = 0x4;
  7140  00011E  0100               	movlb	0	; () banked
  7141  000120  EE20 F022          	lfsr	2,34
  7142  000124  0100               	movlb	0	; () banked
  7143  000126  51C6               	movf	_ic_ptr& (0+255),w,b
  7144  000128  26D9               	addwf	fsr2l,f,c
  7145  00012A  0100               	movlb	0	; () banked
  7146  00012C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7147  00012E  22DA               	addwfc	fsr2h,f,c
  7148  000130  0E04               	movlw	4
  7149  000132  6EDF               	movwf	indf2,c
  7150  000134                     i2l3789:
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;my_i2c.c: 131: }
  7154                           ;my_i2c.c: 133: if (SSPSTATbits.BF == 1) {
  7155  000134  A0C7               	btfss	4039,0,c	;volatile
  7156  000136  D005               	goto	i2l3795
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;my_i2c.c: 134: i2c_data = SSPBUF;
  7160  000138  CFC9 F085          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;my_i2c.c: 135: data_read = 1;
  7164  00013C  0E01               	movlw	1
  7165  00013E  0100               	movlb	0	; () banked
  7166  000140  6F89               	movwf	i2c_int_handler@data_read& (0+255),b
  7167  000142                     i2l3795:
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;my_i2c.c: 136: }
  7171                           ;my_i2c.c: 139: if (!overrun_error) {
  7172  000142  0100               	movlb	0	; () banked
  7173  000144  6783               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7174  000146  D209               	goto	i2l296
  7175  000148  D1F2               	goto	i2l3907
  7176  00014A                     i2l298:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;my_i2c.c: 142: {
  7180                           ;my_i2c.c: 144: if (SSPSTATbits.S == 1) {
  7181  00014A  A6C7               	btfss	4039,3,c	;volatile
  7182  00014C  D206               	goto	i2l296
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;my_i2c.c: 145: handle_start(data_read);
  7186  00014E  0100               	movlb	0	; () banked
  7187  000150  5189               	movf	i2c_int_handler@data_read& (0+255),w,b
  7188  000152  EC4D  F009         	call	_handle_start
  7189                           
  7190                           ;my_i2c.c: 147: if (ic_ptr->status == 0x8) {
  7191  000156  0100               	movlb	0	; () banked
  7192  000158  EE20 F021          	lfsr	2,33
  7193  00015C  0100               	movlb	0	; () banked
  7194  00015E  51C6               	movf	_ic_ptr& (0+255),w,b
  7195  000160  26D9               	addwf	fsr2l,f,c
  7196  000162  0100               	movlb	0	; () banked
  7197  000164  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7198  000166  22DA               	addwfc	fsr2h,f,c
  7199  000168  0E08               	movlw	8
  7200  00016A  62DF               	cpfseq	indf2,c
  7201  00016C  D1F6               	goto	i2l296
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;my_i2c.c: 148: data_read = 0;
  7205  00016E  0E00               	movlw	0
  7206  000170  0100               	movlb	0	; () banked
  7207  000172  6F89               	movwf	i2c_int_handler@data_read& (0+255),b
  7208                           
  7209                           ;my_i2c.c: 149: msg_to_send = 1;
  7210  000174  0E01               	movlw	1
  7211  000176  0100               	movlb	0	; () banked
  7212  000178  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7213  00017A  D1EF               	goto	i2l296
  7214  00017C                     i2l302:
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;my_i2c.c: 155: {
  7218                           ;my_i2c.c: 158: if (SSPSTATbits.P == 1) {
  7219  00017C  A8C7               	btfss	4039,4,c	;volatile
  7220  00017E  D034               	goto	i2l3815
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;my_i2c.c: 161: ic_ptr->event_count++;
  7224  000180  0100               	movlb	0	; () banked
  7225  000182  EE20 F020          	lfsr	2,32
  7226  000186  0100               	movlb	0	; () banked
  7227  000188  51C6               	movf	_ic_ptr& (0+255),w,b
  7228  00018A  26D9               	addwf	fsr2l,f,c
  7229  00018C  0100               	movlb	0	; () banked
  7230  00018E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7231  000190  22DA               	addwfc	fsr2h,f,c
  7232  000192  2ADF               	incf	indf2,f,c
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;my_i2c.c: 162: if (data_read) {
  7236  000194  0100               	movlb	0	; () banked
  7237  000196  5189               	movf	i2c_int_handler@data_read& (0+255),w,b
  7238  000198  B4D8               	btfsc	status,2,c
  7239  00019A  D01B               	goto	i2l304
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;my_i2c.c: 163: if (SSPSTATbits.D_A == 0) {
  7243  00019C  BAC7               	btfsc	4039,5,c	;volatile
  7244  00019E  D004               	goto	i2l3813
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;my_i2c.c: 164: msg_ready = 1;
  7248  0001A0  0E01               	movlw	1
  7249  0001A2  0100               	movlb	0	; () banked
  7250  0001A4  6F88               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7251                           
  7252                           ;my_i2c.c: 165: } else {
  7253  0001A6  D015               	goto	i2l304
  7254  0001A8                     i2l3813:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;my_i2c.c: 166: ic_ptr->error_count++;
  7258  0001A8  0100               	movlb	0	; () banked
  7259  0001AA  EE20 F023          	lfsr	2,35
  7260  0001AE  0100               	movlb	0	; () banked
  7261  0001B0  51C6               	movf	_ic_ptr& (0+255),w,b
  7262  0001B2  26D9               	addwf	fsr2l,f,c
  7263  0001B4  0100               	movlb	0	; () banked
  7264  0001B6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7265  0001B8  22DA               	addwfc	fsr2h,f,c
  7266  0001BA  2ADF               	incf	indf2,f,c
  7267                           
  7268                           ;my_i2c.c: 167: ic_ptr->error_code = 0x6;
  7269  0001BC  0100               	movlb	0	; () banked
  7270  0001BE  EE20 F022          	lfsr	2,34
  7271  0001C2  0100               	movlb	0	; () banked
  7272  0001C4  51C6               	movf	_ic_ptr& (0+255),w,b
  7273  0001C6  26D9               	addwf	fsr2l,f,c
  7274  0001C8  0100               	movlb	0	; () banked
  7275  0001CA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7276  0001CC  22DA               	addwfc	fsr2h,f,c
  7277  0001CE  0E06               	movlw	6
  7278  0001D0                     L13:
  7279  0001D0  6EDF               	movwf	indf2,c
  7280  0001D2                     i2l304:
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;my_i2c.c: 168: }
  7284                           ;my_i2c.c: 169: }
  7285                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7286  0001D2  0100               	movlb	0	; () banked
  7287  0001D4  EE20 F021          	lfsr	2,33
  7288  0001D8  0100               	movlb	0	; () banked
  7289  0001DA  51C6               	movf	_ic_ptr& (0+255),w,b
  7290  0001DC  26D9               	addwf	fsr2l,f,c
  7291  0001DE  0100               	movlb	0	; () banked
  7292  0001E0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7293  0001E2  22DA               	addwfc	fsr2h,f,c
  7294  0001E4  0E05               	movlw	5
  7295  0001E6  D103               	goto	L8
  7296  0001E8                     i2l3815:
  7297                           
  7298                           ; BSR set to: 0
  7299  0001E8  0100               	movlb	0	; () banked
  7300  0001EA  5189               	movf	i2c_int_handler@data_read& (0+255),w,b
  7301  0001EC  B4D8               	btfsc	status,2,c
  7302  0001EE  D1B5               	goto	i2l296
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;my_i2c.c: 172: ic_ptr->event_count++;
  7306  0001F0  0100               	movlb	0	; () banked
  7307  0001F2  EE20 F020          	lfsr	2,32
  7308  0001F6  0100               	movlb	0	; () banked
  7309  0001F8  51C6               	movf	_ic_ptr& (0+255),w,b
  7310  0001FA  26D9               	addwf	fsr2l,f,c
  7311  0001FC  0100               	movlb	0	; () banked
  7312  0001FE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7313  000200  22DA               	addwfc	fsr2h,f,c
  7314  000202  2ADF               	incf	indf2,f,c
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;my_i2c.c: 173: if (SSPSTATbits.D_A == 0)
  7318  000204  BAC7               	btfsc	4039,5,c	;volatile
  7319  000206  D02A               	goto	i2l3831
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;my_i2c.c: 174: {
  7323                           ;my_i2c.c: 175: if (SSPSTATbits.R_W == 0)
  7324  000208  B4C7               	btfsc	4039,2,c	;volatile
  7325  00020A  D00B               	goto	i2l3825
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;my_i2c.c: 176: {
  7329                           ;my_i2c.c: 177: ic_ptr->status = 0x7;
  7330  00020C  0100               	movlb	0	; () banked
  7331  00020E  EE20 F021          	lfsr	2,33
  7332  000212  0100               	movlb	0	; () banked
  7333  000214  51C6               	movf	_ic_ptr& (0+255),w,b
  7334  000216  26D9               	addwf	fsr2l,f,c
  7335  000218  0100               	movlb	0	; () banked
  7336  00021A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7337  00021C  22DA               	addwfc	fsr2h,f,c
  7338  00021E  0E07               	movlw	7
  7339  000220  D0E6               	goto	L8
  7340  000222                     i2l3825:
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;my_i2c.c: 179: else
  7344                           ;my_i2c.c: 180: {
  7345                           ;my_i2c.c: 181: ic_ptr->status = 0x8;
  7346  000222  0100               	movlb	0	; () banked
  7347  000224  EE20 F021          	lfsr	2,33
  7348  000228  0100               	movlb	0	; () banked
  7349  00022A  51C6               	movf	_ic_ptr& (0+255),w,b
  7350  00022C  26D9               	addwf	fsr2l,f,c
  7351  00022E  0100               	movlb	0	; () banked
  7352  000230  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7353  000232  22DA               	addwfc	fsr2h,f,c
  7354  000234  0E08               	movlw	8
  7355  000236  6EDF               	movwf	indf2,c
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;my_i2c.c: 182: msg_to_send = 1;
  7359  000238  0E01               	movlw	1
  7360  00023A  0100               	movlb	0	; () banked
  7361  00023C  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;my_i2c.c: 184: data_read = 0;
  7365  00023E  0E00               	movlw	0
  7366  000240  0100               	movlb	0	; () banked
  7367  000242  6F89               	movwf	i2c_int_handler@data_read& (0+255),b
  7368                           
  7369                           ;my_i2c.c: 185: ic_ptr->outbufind = 0;
  7370  000244  0100               	movlb	0	; () banked
  7371  000246  EE20 F01E          	lfsr	2,30
  7372  00024A  0100               	movlb	0	; () banked
  7373  00024C  51C6               	movf	_ic_ptr& (0+255),w,b
  7374  00024E  26D9               	addwf	fsr2l,f,c
  7375  000250  0100               	movlb	0	; () banked
  7376  000252  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7377  000254  22DA               	addwfc	fsr2h,f,c
  7378  000256  0E00               	movlw	0
  7379  000258  6EDF               	movwf	indf2,c
  7380                           
  7381                           ;my_i2c.c: 186: goto l;
  7382  00025A  D020               	goto	i2l3833
  7383  00025C                     i2l3831:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;my_i2c.c: 189: else
  7387                           ;my_i2c.c: 190: {
  7388                           ;my_i2c.c: 191: ic_ptr->error_count++;
  7389  00025C  0100               	movlb	0	; () banked
  7390  00025E  EE20 F023          	lfsr	2,35
  7391  000262  0100               	movlb	0	; () banked
  7392  000264  51C6               	movf	_ic_ptr& (0+255),w,b
  7393  000266  26D9               	addwf	fsr2l,f,c
  7394  000268  0100               	movlb	0	; () banked
  7395  00026A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7396  00026C  22DA               	addwfc	fsr2h,f,c
  7397  00026E  2ADF               	incf	indf2,f,c
  7398                           
  7399                           ;my_i2c.c: 192: ic_ptr->status = 0x5;
  7400  000270  0100               	movlb	0	; () banked
  7401  000272  EE20 F021          	lfsr	2,33
  7402  000276  0100               	movlb	0	; () banked
  7403  000278  51C6               	movf	_ic_ptr& (0+255),w,b
  7404  00027A  26D9               	addwf	fsr2l,f,c
  7405  00027C  0100               	movlb	0	; () banked
  7406  00027E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7407  000280  22DA               	addwfc	fsr2h,f,c
  7408  000282  0E05               	movlw	5
  7409  000284  6EDF               	movwf	indf2,c
  7410                           
  7411                           ;my_i2c.c: 193: ic_ptr->error_code = 0x6;
  7412  000286  0100               	movlb	0	; () banked
  7413  000288  EE20 F022          	lfsr	2,34
  7414  00028C  0100               	movlb	0	; () banked
  7415  00028E  51C6               	movf	_ic_ptr& (0+255),w,b
  7416  000290  26D9               	addwf	fsr2l,f,c
  7417  000292  0100               	movlb	0	; () banked
  7418  000294  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7419  000296  22DA               	addwfc	fsr2h,f,c
  7420  000298  0E06               	movlw	6
  7421  00029A  D0A9               	goto	L8
  7422  00029C                     i2l3833:
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;my_i2c.c: 200: {
  7426                           ;my_i2c.c: 201: blip();
  7427  00029C  EC97  F00F         	call	i2_blip	;wreg free
  7428                           
  7429                           ;my_i2c.c: 202: if (ic_ptr->outbufind < 14)
  7430  0002A0  0100               	movlb	0	; () banked
  7431  0002A2  EE20 F01E          	lfsr	2,30
  7432  0002A6  0100               	movlb	0	; () banked
  7433  0002A8  51C6               	movf	_ic_ptr& (0+255),w,b
  7434  0002AA  26D9               	addwf	fsr2l,f,c
  7435  0002AC  0100               	movlb	0	; () banked
  7436  0002AE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7437  0002B0  22DA               	addwfc	fsr2h,f,c
  7438  0002B2  50DF               	movf	indf2,w,c
  7439  0002B4  0100               	movlb	0	; () banked
  7440  0002B6  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  7441  0002B8  0E0E               	movlw	14
  7442  0002BA  0100               	movlb	0	; () banked
  7443  0002BC  5D7D               	subwf	??_i2c_int_handler& (0+255),w,b
  7444  0002BE  B0D8               	btfsc	status,0,c
  7445  0002C0  D02D               	goto	i2l3845
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;my_i2c.c: 203: {
  7449                           ;my_i2c.c: 204: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7450  0002C2  0100               	movlb	0	; () banked
  7451  0002C4  EE20 F01E          	lfsr	2,30
  7452  0002C8  0100               	movlb	0	; () banked
  7453  0002CA  51C6               	movf	_ic_ptr& (0+255),w,b
  7454  0002CC  26D9               	addwf	fsr2l,f,c
  7455  0002CE  0100               	movlb	0	; () banked
  7456  0002D0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7457  0002D2  22DA               	addwfc	fsr2h,f,c
  7458  0002D4  50DF               	movf	indf2,w,c
  7459  0002D6  0100               	movlb	0	; () banked
  7460  0002D8  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  7461  0002DA  0100               	movlb	0	; () banked
  7462  0002DC  517D               	movf	??_i2c_int_handler& (0+255),w,b
  7463  0002DE  0D01               	mullw	1
  7464  0002E0  0E10               	movlw	16
  7465  0002E2  26F3               	addwf	prodl,f,c
  7466  0002E4  0E00               	movlw	0
  7467  0002E6  22F4               	addwfc	prodh,f,c
  7468  0002E8  50F3               	movf	prodl,w,c
  7469  0002EA  0100               	movlb	0	; () banked
  7470  0002EC  25C6               	addwf	_ic_ptr& (0+255),w,b
  7471  0002EE  6ED9               	movwf	fsr2l,c
  7472  0002F0  50F4               	movf	prodh,w,c
  7473  0002F2  0100               	movlb	0	; () banked
  7474  0002F4  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7475  0002F6  6EDA               	movwf	fsr2h,c
  7476  0002F8  50DF               	movf	indf2,w,c
  7477  0002FA  6EC9               	movwf	4041,c	;volatile
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;my_i2c.c: 205: ic_ptr->outbufind++;
  7481  0002FC  0100               	movlb	0	; () banked
  7482  0002FE  EE20 F01E          	lfsr	2,30
  7483  000302  0100               	movlb	0	; () banked
  7484  000304  51C6               	movf	_ic_ptr& (0+255),w,b
  7485  000306  26D9               	addwf	fsr2l,f,c
  7486  000308  0100               	movlb	0	; () banked
  7487  00030A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7488  00030C  22DA               	addwfc	fsr2h,f,c
  7489  00030E  2ADF               	incf	indf2,f,c
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;my_i2c.c: 206: data_written = 1;
  7493  000310  0E01               	movlw	1
  7494  000312  0100               	movlb	0	; () banked
  7495  000314  6F82               	movwf	i2c_int_handler@data_written& (0+255),b
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;my_i2c.c: 207: blip1();
  7499  000316  EC93  F00F         	call	i2_blip1	;wreg free
  7500                           
  7501                           ;my_i2c.c: 208: }
  7502  00031A  D11F               	goto	i2l296
  7503  00031C                     i2l3845:
  7504                           
  7505                           ;my_i2c.c: 209: else
  7506                           ;my_i2c.c: 210: {
  7507                           ;my_i2c.c: 212: ic_ptr->status = 0x5;
  7508  00031C  0100               	movlb	0	; () banked
  7509  00031E  EE20 F021          	lfsr	2,33
  7510  000322  0100               	movlb	0	; () banked
  7511  000324  51C6               	movf	_ic_ptr& (0+255),w,b
  7512  000326  26D9               	addwf	fsr2l,f,c
  7513  000328  0100               	movlb	0	; () banked
  7514  00032A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7515  00032C  22DA               	addwfc	fsr2h,f,c
  7516  00032E  0E05               	movlw	5
  7517  000330  6EDF               	movwf	indf2,c
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;my_i2c.c: 213: blip2();
  7521  000332  EC8F  F00F         	call	i2_blip2	;wreg free
  7522  000336  D111               	goto	i2l296
  7523  000338                     i2l317:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;my_i2c.c: 218: {
  7527                           ;my_i2c.c: 220: if (SSPSTATbits.P == 1)
  7528  000338  A8C7               	btfss	4039,4,c	;volatile
  7529  00033A  D05B               	goto	i2l3867
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;my_i2c.c: 221: {
  7533                           ;my_i2c.c: 224: ic_ptr->event_count++;
  7534  00033C  0100               	movlb	0	; () banked
  7535  00033E  EE20 F020          	lfsr	2,32
  7536  000342  0100               	movlb	0	; () banked
  7537  000344  51C6               	movf	_ic_ptr& (0+255),w,b
  7538  000346  26D9               	addwf	fsr2l,f,c
  7539  000348  0100               	movlb	0	; () banked
  7540  00034A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7541  00034C  22DA               	addwfc	fsr2h,f,c
  7542  00034E  2ADF               	incf	indf2,f,c
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;my_i2c.c: 225: if (data_read)
  7546  000350  0100               	movlb	0	; () banked
  7547  000352  5189               	movf	i2c_int_handler@data_read& (0+255),w,b
  7548  000354  B4D8               	btfsc	status,2,c
  7549  000356  D047               	goto	i2l3863
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;my_i2c.c: 226: {
  7553                           ;my_i2c.c: 227: if (SSPSTATbits.D_A == 1)
  7554  000358  AAC7               	btfss	4039,5,c	;volatile
  7555  00035A  D025               	goto	i2l3861
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;my_i2c.c: 228: {
  7559                           ;my_i2c.c: 230: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7560  00035C  0100               	movlb	0	; () banked
  7561  00035E  EE20 F00E          	lfsr	2,14
  7562  000362  0100               	movlb	0	; () banked
  7563  000364  51C6               	movf	_ic_ptr& (0+255),w,b
  7564  000366  26D9               	addwf	fsr2l,f,c
  7565  000368  0100               	movlb	0	; () banked
  7566  00036A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7567  00036C  22DA               	addwfc	fsr2h,f,c
  7568  00036E  50DF               	movf	indf2,w,c
  7569  000370  0100               	movlb	0	; () banked
  7570  000372  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  7571  000374  0100               	movlb	0	; () banked
  7572  000376  517D               	movf	??_i2c_int_handler& (0+255),w,b
  7573  000378  0D01               	mullw	1
  7574  00037A  50F3               	movf	prodl,w,c
  7575  00037C  0100               	movlb	0	; () banked
  7576  00037E  25C6               	addwf	_ic_ptr& (0+255),w,b
  7577  000380  6ED9               	movwf	fsr2l,c
  7578  000382  50F4               	movf	prodh,w,c
  7579  000384  0100               	movlb	0	; () banked
  7580  000386  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7581  000388  6EDA               	movwf	fsr2h,c
  7582  00038A  0100               	movlb	0	; () banked
  7583  00038C  C085  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;my_i2c.c: 231: ic_ptr->buflen++;
  7587  000390  0100               	movlb	0	; () banked
  7588  000392  EE20 F00E          	lfsr	2,14
  7589  000396  0100               	movlb	0	; () banked
  7590  000398  51C6               	movf	_ic_ptr& (0+255),w,b
  7591  00039A  26D9               	addwf	fsr2l,f,c
  7592  00039C  0100               	movlb	0	; () banked
  7593  00039E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7594  0003A0  22DA               	addwfc	fsr2h,f,c
  7595  0003A2  2ADF               	incf	indf2,f,c
  7596  0003A4  D020               	goto	i2l3863
  7597  0003A6                     i2l3861:
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;my_i2c.c: 234: else
  7601                           ;my_i2c.c: 235: {
  7602                           ;my_i2c.c: 237: ic_ptr->error_count++;
  7603  0003A6  0100               	movlb	0	; () banked
  7604  0003A8  EE20 F023          	lfsr	2,35
  7605  0003AC  0100               	movlb	0	; () banked
  7606  0003AE  51C6               	movf	_ic_ptr& (0+255),w,b
  7607  0003B0  26D9               	addwf	fsr2l,f,c
  7608  0003B2  0100               	movlb	0	; () banked
  7609  0003B4  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7610  0003B6  22DA               	addwfc	fsr2h,f,c
  7611  0003B8  2ADF               	incf	indf2,f,c
  7612                           
  7613                           ;my_i2c.c: 238: ic_ptr->error_code = 0x6;
  7614  0003BA  0100               	movlb	0	; () banked
  7615  0003BC  EE20 F022          	lfsr	2,34
  7616  0003C0  0100               	movlb	0	; () banked
  7617  0003C2  51C6               	movf	_ic_ptr& (0+255),w,b
  7618  0003C4  26D9               	addwf	fsr2l,f,c
  7619  0003C6  0100               	movlb	0	; () banked
  7620  0003C8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7621  0003CA  22DA               	addwfc	fsr2h,f,c
  7622  0003CC  0E06               	movlw	6
  7623  0003CE  6EDF               	movwf	indf2,c
  7624                           
  7625                           ;my_i2c.c: 239: ic_ptr->status = 0x5;
  7626  0003D0  0100               	movlb	0	; () banked
  7627  0003D2  EE20 F021          	lfsr	2,33
  7628  0003D6  0100               	movlb	0	; () banked
  7629  0003D8  51C6               	movf	_ic_ptr& (0+255),w,b
  7630  0003DA  26D9               	addwf	fsr2l,f,c
  7631  0003DC  0100               	movlb	0	; () banked
  7632  0003DE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7633  0003E0  22DA               	addwfc	fsr2h,f,c
  7634  0003E2  0E05               	movlw	5
  7635  0003E4  D6F5               	goto	L13
  7636  0003E6                     i2l3863:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;my_i2c.c: 242: else
  7640                           ;my_i2c.c: 243: {
  7641                           ;my_i2c.c: 245: msg_ready = 1;
  7642  0003E6  0E01               	movlw	1
  7643  0003E8  0100               	movlb	0	; () banked
  7644  0003EA  6F88               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7645                           
  7646                           ; BSR set to: 0
  7647  0003EC  D6F2               	goto	i2l304
  7648  0003EE                     L8:
  7649  0003EE  6EDF               	movwf	indf2,c
  7650                           
  7651                           ;my_i2c.c: 248: }
  7652  0003F0  D0B4               	goto	i2l296
  7653  0003F2                     i2l3867:
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;my_i2c.c: 249: else if (data_read)
  7657  0003F2  0100               	movlb	0	; () banked
  7658  0003F4  5189               	movf	i2c_int_handler@data_read& (0+255),w,b
  7659  0003F6  B4D8               	btfsc	status,2,c
  7660  0003F8  D0B0               	goto	i2l296
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;my_i2c.c: 250: {
  7664                           ;my_i2c.c: 251: ic_ptr->event_count++;
  7665  0003FA  0100               	movlb	0	; () banked
  7666  0003FC  EE20 F020          	lfsr	2,32
  7667  000400  0100               	movlb	0	; () banked
  7668  000402  51C6               	movf	_ic_ptr& (0+255),w,b
  7669  000404  26D9               	addwf	fsr2l,f,c
  7670  000406  0100               	movlb	0	; () banked
  7671  000408  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7672  00040A  22DA               	addwfc	fsr2h,f,c
  7673  00040C  2ADF               	incf	indf2,f,c
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;my_i2c.c: 252: if (SSP1STATbits.D_A == 1)
  7677  00040E  AAC7               	btfss	4039,5,c	;volatile
  7678  000410  D01E               	goto	i2l325
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;my_i2c.c: 253: {
  7682                           ;my_i2c.c: 255: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7683  000412  0100               	movlb	0	; () banked
  7684  000414  EE20 F00E          	lfsr	2,14
  7685  000418  0100               	movlb	0	; () banked
  7686  00041A  51C6               	movf	_ic_ptr& (0+255),w,b
  7687  00041C  26D9               	addwf	fsr2l,f,c
  7688  00041E  0100               	movlb	0	; () banked
  7689  000420  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7690  000422  22DA               	addwfc	fsr2h,f,c
  7691  000424  50DF               	movf	indf2,w,c
  7692  000426  0100               	movlb	0	; () banked
  7693  000428  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  7694  00042A  0100               	movlb	0	; () banked
  7695  00042C  517D               	movf	??_i2c_int_handler& (0+255),w,b
  7696  00042E  0D01               	mullw	1
  7697  000430  50F3               	movf	prodl,w,c
  7698  000432  0100               	movlb	0	; () banked
  7699  000434  25C6               	addwf	_ic_ptr& (0+255),w,b
  7700  000436  6ED9               	movwf	fsr2l,c
  7701  000438  50F4               	movf	prodh,w,c
  7702  00043A  0100               	movlb	0	; () banked
  7703  00043C  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7704  00043E  6EDA               	movwf	fsr2h,c
  7705  000440  0100               	movlb	0	; () banked
  7706  000442  C085  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;my_i2c.c: 256: ic_ptr->buflen++;
  7710  000446  0100               	movlb	0	; () banked
  7711  000448  EE20 F00E          	lfsr	2,14
  7712  00044C  D03E               	goto	L10
  7713  00044E                     i2l325:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;my_i2c.c: 258: else
  7717                           ;my_i2c.c: 259: {
  7718                           ;my_i2c.c: 260: if (SSPSTATbits.R_W == 1)
  7719  00044E  A4C7               	btfss	4039,2,c	;volatile
  7720  000450  D6AB               	goto	i2l3813
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;my_i2c.c: 261: {
  7724                           ;my_i2c.c: 263: if( ic_ptr->buffer[0] == 0x06 || ic_ptr->buffer[0] == 0x01 )
  7725  000452  C0C6  FFD9         	movff	_ic_ptr,fsr2l
  7726  000456  C0C7  FFDA         	movff	_ic_ptr+1,fsr2h
  7727  00045A  50DF               	movf	indf2,w,c
  7728  00045C  0A06               	xorlw	6
  7729  00045E  B4D8               	btfsc	status,2,c
  7730  000460  D007               	goto	i2l3881
  7731                           
  7732                           ; BSR set to: 0
  7733  000462  0E01               	movlw	1
  7734  000464  C0C6  FFD9         	movff	_ic_ptr,fsr2l
  7735  000468  C0C7  FFDA         	movff	_ic_ptr+1,fsr2h
  7736  00046C  62DF               	cpfseq	indf2,c
  7737  00046E  D035               	goto	i2l3895
  7738  000470                     i2l3881:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;my_i2c.c: 264: {
  7742                           ;my_i2c.c: 265: ic_ptr->status = 0x8;
  7743  000470  0100               	movlb	0	; () banked
  7744  000472  EE20 F021          	lfsr	2,33
  7745  000476  0100               	movlb	0	; () banked
  7746  000478  51C6               	movf	_ic_ptr& (0+255),w,b
  7747  00047A  26D9               	addwf	fsr2l,f,c
  7748  00047C  0100               	movlb	0	; () banked
  7749  00047E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7750  000480  22DA               	addwfc	fsr2h,f,c
  7751  000482  0E08               	movlw	8
  7752  000484  6EDF               	movwf	indf2,c
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;my_i2c.c: 266: msg_ready = 1;
  7756  000486  0E01               	movlw	1
  7757  000488  0100               	movlb	0	; () banked
  7758  00048A  6F88               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;my_i2c.c: 267: msg_to_send = 1;
  7762  00048C  0E01               	movlw	1
  7763  00048E  0100               	movlb	0	; () banked
  7764  000490  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;my_i2c.c: 269: data_read = 0;
  7768  000492  0E00               	movlw	0
  7769  000494  0100               	movlb	0	; () banked
  7770  000496  6F89               	movwf	i2c_int_handler@data_read& (0+255),b
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;my_i2c.c: 270: ic_ptr->outbufind = 0;
  7774  000498  0100               	movlb	0	; () banked
  7775  00049A  EE20 F01E          	lfsr	2,30
  7776  00049E  0100               	movlb	0	; () banked
  7777  0004A0  51C6               	movf	_ic_ptr& (0+255),w,b
  7778  0004A2  26D9               	addwf	fsr2l,f,c
  7779  0004A4  0100               	movlb	0	; () banked
  7780  0004A6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7781  0004A8  22DA               	addwfc	fsr2h,f,c
  7782  0004AA  0E00               	movlw	0
  7783  0004AC  6EDF               	movwf	indf2,c
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;my_i2c.c: 271: SSPBUF = ic_ptr->outbuffer[0];
  7787  0004AE  0100               	movlb	0	; () banked
  7788  0004B0  EE20 F010          	lfsr	2,16
  7789  0004B4  0100               	movlb	0	; () banked
  7790  0004B6  51C6               	movf	_ic_ptr& (0+255),w,b
  7791  0004B8  26D9               	addwf	fsr2l,f,c
  7792  0004BA  0100               	movlb	0	; () banked
  7793  0004BC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7794  0004BE  22DA               	addwfc	fsr2h,f,c
  7795  0004C0  50DF               	movf	indf2,w,c
  7796  0004C2  6EC9               	movwf	4041,c	;volatile
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;my_i2c.c: 272: ic_ptr->outbufind++;
  7800  0004C4  0100               	movlb	0	; () banked
  7801  0004C6  EE20 F01E          	lfsr	2,30
  7802  0004CA                     L10:
  7803  0004CA  0100               	movlb	0	; () banked
  7804  0004CC  51C6               	movf	_ic_ptr& (0+255),w,b
  7805  0004CE  26D9               	addwf	fsr2l,f,c
  7806  0004D0  0100               	movlb	0	; () banked
  7807  0004D2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7808  0004D4  22DA               	addwfc	fsr2h,f,c
  7809  0004D6  2ADF               	incf	indf2,f,c
  7810                           
  7811                           ;my_i2c.c: 275: }
  7812  0004D8  D040               	goto	i2l296
  7813  0004DA                     i2l3895:
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;my_i2c.c: 276: else
  7817                           ;my_i2c.c: 277: {
  7818                           ;my_i2c.c: 278: if( ic_ptr->outbufind < 14 )
  7819  0004DA  0100               	movlb	0	; () banked
  7820  0004DC  EE20 F01E          	lfsr	2,30
  7821  0004E0  0100               	movlb	0	; () banked
  7822  0004E2  51C6               	movf	_ic_ptr& (0+255),w,b
  7823  0004E4  26D9               	addwf	fsr2l,f,c
  7824  0004E6  0100               	movlb	0	; () banked
  7825  0004E8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7826  0004EA  22DA               	addwfc	fsr2h,f,c
  7827  0004EC  50DF               	movf	indf2,w,c
  7828  0004EE  0100               	movlb	0	; () banked
  7829  0004F0  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  7830  0004F2  0E0E               	movlw	14
  7831  0004F4  0100               	movlb	0	; () banked
  7832  0004F6  5D7D               	subwf	??_i2c_int_handler& (0+255),w,b
  7833  0004F8  B0D8               	btfsc	status,0,c
  7834  0004FA  D00E               	goto	i2l3901
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;my_i2c.c: 279: {
  7838                           ;my_i2c.c: 280: ic_ptr->outbufind++;
  7839  0004FC  0100               	movlb	0	; () banked
  7840  0004FE  EE20 F01E          	lfsr	2,30
  7841  000502  0100               	movlb	0	; () banked
  7842  000504  51C6               	movf	_ic_ptr& (0+255),w,b
  7843  000506  26D9               	addwf	fsr2l,f,c
  7844  000508  0100               	movlb	0	; () banked
  7845  00050A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7846  00050C  22DA               	addwfc	fsr2h,f,c
  7847  00050E  2ADF               	incf	indf2,f,c
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;my_i2c.c: 281: data_read = 0;
  7851  000510  0E00               	movlw	0
  7852  000512  0100               	movlb	0	; () banked
  7853  000514  6F89               	movwf	i2c_int_handler@data_read& (0+255),b
  7854                           
  7855                           ;my_i2c.c: 282: }
  7856  000516  D021               	goto	i2l296
  7857  000518                     i2l3901:
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;my_i2c.c: 283: else
  7861                           ;my_i2c.c: 284: {
  7862                           ;my_i2c.c: 285: ic_ptr->outbufind = 0;
  7863  000518  0100               	movlb	0	; () banked
  7864  00051A  EE20 F01E          	lfsr	2,30
  7865  00051E  0100               	movlb	0	; () banked
  7866  000520  51C6               	movf	_ic_ptr& (0+255),w,b
  7867  000522  26D9               	addwf	fsr2l,f,c
  7868  000524  0100               	movlb	0	; () banked
  7869  000526  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7870  000528  22DA               	addwfc	fsr2h,f,c
  7871  00052A  0E00               	movlw	0
  7872  00052C  D651               	goto	L13
  7873  00052E                     i2l3907:
  7874                           
  7875                           ; BSR set to: 0
  7876  00052E  0100               	movlb	0	; () banked
  7877  000530  EE20 F021          	lfsr	2,33
  7878  000534  0100               	movlb	0	; () banked
  7879  000536  51C6               	movf	_ic_ptr& (0+255),w,b
  7880  000538  26D9               	addwf	fsr2l,f,c
  7881  00053A  0100               	movlb	0	; () banked
  7882  00053C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7883  00053E  22DA               	addwfc	fsr2h,f,c
  7884  000540  50DF               	movf	indf2,w,c
  7885                           
  7886                           ; Switch size 1, requested type "space"
  7887                           ; Number of cases is 4, Range of values is 5 to 8
  7888                           ; switch strategies available:
  7889                           ; Name         Instructions Cycles
  7890                           ; simple_byte           13     7 (average)
  7891                           ;	Chosen strategy is simple_byte
  7892  000542  0A05               	xorlw	5	; case 5
  7893  000544  B4D8               	btfsc	status,2,c
  7894  000546  D601               	goto	i2l298
  7895  000548  0A03               	xorlw	3	; case 6
  7896  00054A  B4D8               	btfsc	status,2,c
  7897  00054C  D617               	goto	i2l302
  7898  00054E  0A01               	xorlw	1	; case 7
  7899  000550  B4D8               	btfsc	status,2,c
  7900  000552  D6F2               	goto	i2l317
  7901  000554  0A0F               	xorlw	15	; case 8
  7902  000556  B4D8               	btfsc	status,2,c
  7903  000558  D6A1               	goto	i2l3833
  7904  00055A                     i2l296:
  7905                           
  7906                           ;my_i2c.c: 303: }
  7907                           ;my_i2c.c: 306: if (data_read || data_written) {
  7908  00055A  0100               	movlb	0	; () banked
  7909  00055C  6789               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7910  00055E  D004               	goto	i2l337
  7911                           
  7912                           ; BSR set to: 0
  7913  000560  0100               	movlb	0	; () banked
  7914  000562  5182               	movf	i2c_int_handler@data_written& (0+255),w,b
  7915  000564  B4D8               	btfsc	status,2,c
  7916  000566  D002               	goto	i2l3913
  7917  000568                     i2l337:
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;my_i2c.c: 308: if (SSPCON1bits.CKP == 0) {
  7921  000568  A8C6               	btfss	4038,4,c	;volatile
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;my_i2c.c: 309: SSPCON1bits.CKP = 1;
  7925  00056A  88C6               	bsf	4038,4,c	;volatile
  7926  00056C                     i2l3913:
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;my_i2c.c: 311: }
  7930                           ;my_i2c.c: 312: }
  7931                           ;my_i2c.c: 317: if ((ic_ptr->buflen > 14) && (!msg_ready))
  7932  00056C  0100               	movlb	0	; () banked
  7933  00056E  EE20 F00E          	lfsr	2,14
  7934  000572  0100               	movlb	0	; () banked
  7935  000574  51C6               	movf	_ic_ptr& (0+255),w,b
  7936  000576  26D9               	addwf	fsr2l,f,c
  7937  000578  0100               	movlb	0	; () banked
  7938  00057A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7939  00057C  22DA               	addwfc	fsr2h,f,c
  7940  00057E  0E0E               	movlw	14
  7941  000580  64DF               	cpfsgt	indf2,c
  7942  000582  D023               	goto	i2l3919
  7943                           
  7944                           ; BSR set to: 0
  7945  000584  0100               	movlb	0	; () banked
  7946  000586  6788               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7947  000588  D020               	goto	i2l3919
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;my_i2c.c: 318: {
  7951                           ;my_i2c.c: 320: ic_ptr->status = 0x5;
  7952  00058A  0100               	movlb	0	; () banked
  7953  00058C  EE20 F021          	lfsr	2,33
  7954  000590  0100               	movlb	0	; () banked
  7955  000592  51C6               	movf	_ic_ptr& (0+255),w,b
  7956  000594  26D9               	addwf	fsr2l,f,c
  7957  000596  0100               	movlb	0	; () banked
  7958  000598  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7959  00059A  22DA               	addwfc	fsr2h,f,c
  7960  00059C  0E05               	movlw	5
  7961  00059E  6EDF               	movwf	indf2,c
  7962                           
  7963                           ;my_i2c.c: 321: ic_ptr->error_count++;
  7964  0005A0  0100               	movlb	0	; () banked
  7965  0005A2  EE20 F023          	lfsr	2,35
  7966  0005A6  0100               	movlb	0	; () banked
  7967  0005A8  51C6               	movf	_ic_ptr& (0+255),w,b
  7968  0005AA  26D9               	addwf	fsr2l,f,c
  7969  0005AC  0100               	movlb	0	; () banked
  7970  0005AE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7971  0005B0  22DA               	addwfc	fsr2h,f,c
  7972  0005B2  2ADF               	incf	indf2,f,c
  7973                           
  7974                           ;my_i2c.c: 322: ic_ptr->error_code = 0x7;
  7975  0005B4  0100               	movlb	0	; () banked
  7976  0005B6  EE20 F022          	lfsr	2,34
  7977  0005BA  0100               	movlb	0	; () banked
  7978  0005BC  51C6               	movf	_ic_ptr& (0+255),w,b
  7979  0005BE  26D9               	addwf	fsr2l,f,c
  7980  0005C0  0100               	movlb	0	; () banked
  7981  0005C2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7982  0005C4  22DA               	addwfc	fsr2h,f,c
  7983  0005C6  0E07               	movlw	7
  7984  0005C8  6EDF               	movwf	indf2,c
  7985  0005CA                     i2l3919:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;my_i2c.c: 323: }
  7989                           ;my_i2c.c: 325: if (msg_ready)
  7990  0005CA  0100               	movlb	0	; () banked
  7991  0005CC  5188               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7992  0005CE  B4D8               	btfsc	status,2,c
  7993  0005D0  D032               	goto	i2l3927
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;my_i2c.c: 326: {
  7997                           ;my_i2c.c: 327: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7998  0005D2  0100               	movlb	0	; () banked
  7999  0005D4  EE20 F020          	lfsr	2,32
  8000  0005D8  0100               	movlb	0	; () banked
  8001  0005DA  51C6               	movf	_ic_ptr& (0+255),w,b
  8002  0005DC  26D9               	addwf	fsr2l,f,c
  8003  0005DE  0100               	movlb	0	; () banked
  8004  0005E0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8005  0005E2  22DA               	addwfc	fsr2h,f,c
  8006  0005E4  0100               	movlb	0	; () banked
  8007  0005E6  EE10 F00E          	lfsr	1,14
  8008  0005EA  0100               	movlb	0	; () banked
  8009  0005EC  51C6               	movf	_ic_ptr& (0+255),w,b
  8010  0005EE  26E1               	addwf	fsr1l,f,c
  8011  0005F0  0100               	movlb	0	; () banked
  8012  0005F2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8013  0005F4  22E2               	addwfc	fsr1h,f,c
  8014  0005F6  50E7               	movf	indf1,w,c
  8015  0005F8  0100               	movlb	0	; () banked
  8016  0005FA  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  8017  0005FC  0100               	movlb	0	; () banked
  8018  0005FE  517D               	movf	??_i2c_int_handler& (0+255),w,b
  8019  000600  0D01               	mullw	1
  8020  000602  50F3               	movf	prodl,w,c
  8021  000604  0100               	movlb	0	; () banked
  8022  000606  25C6               	addwf	_ic_ptr& (0+255),w,b
  8023  000608  6EE1               	movwf	fsr1l,c
  8024  00060A  50F4               	movf	prodh,w,c
  8025  00060C  0100               	movlb	0	; () banked
  8026  00060E  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8027  000610  6EE2               	movwf	fsr1h,c
  8028  000612  CFDF FFE7          	movff	indf2,indf1
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;my_i2c.c: 328: ToMainHigh_sendmsg(14, 40, (void *) ic_ptr->buffer);
  8032  000616  0E28               	movlw	40
  8033  000618  0100               	movlb	0	; () banked
  8034  00061A  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8035  00061C  0100               	movlb	0	; () banked
  8036  00061E  C0C7  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8037  000622  0100               	movlb	0	; () banked
  8038  000624  C0C6  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8039  000628  0E0E               	movlw	14
  8040  00062A  ECA3  F00E         	call	_ToMainHigh_sendmsg
  8041                           
  8042                           ;my_i2c.c: 329: ic_ptr->buflen = 0;
  8043  00062E  0100               	movlb	0	; () banked
  8044  000630  EE20 F00E          	lfsr	2,14
  8045  000634  D041               	goto	L11
  8046  000636                     i2l3927:
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;my_i2c.c: 331: else if (ic_ptr->error_count >= 1)
  8050  000636  0100               	movlb	0	; () banked
  8051  000638  EE20 F023          	lfsr	2,35
  8052  00063C  0100               	movlb	0	; () banked
  8053  00063E  51C6               	movf	_ic_ptr& (0+255),w,b
  8054  000640  26D9               	addwf	fsr2l,f,c
  8055  000642  0100               	movlb	0	; () banked
  8056  000644  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8057  000646  22DA               	addwfc	fsr2h,f,c
  8058  000648  50DF               	movf	indf2,w,c
  8059  00064A  B4D8               	btfsc	status,2,c
  8060  00064C  D03D               	goto	i2l3935
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;my_i2c.c: 332: {
  8064                           ;my_i2c.c: 333: error_buf[0] = ic_ptr->error_count;
  8065  00064E  0100               	movlb	0	; () banked
  8066  000650  EE20 F023          	lfsr	2,35
  8067  000654  0100               	movlb	0	; () banked
  8068  000656  51C6               	movf	_ic_ptr& (0+255),w,b
  8069  000658  26D9               	addwf	fsr2l,f,c
  8070  00065A  0100               	movlb	0	; () banked
  8071  00065C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8072  00065E  22DA               	addwfc	fsr2h,f,c
  8073  000660  50DF               	movf	indf2,w,c
  8074  000662  0100               	movlb	0	; () banked
  8075  000664  6F7F               	movwf	i2c_int_handler@error_buf& (0+255),b
  8076                           
  8077                           ;my_i2c.c: 334: error_buf[1] = ic_ptr->error_code;
  8078  000666  0100               	movlb	0	; () banked
  8079  000668  EE20 F022          	lfsr	2,34
  8080  00066C  0100               	movlb	0	; () banked
  8081  00066E  51C6               	movf	_ic_ptr& (0+255),w,b
  8082  000670  26D9               	addwf	fsr2l,f,c
  8083  000672  0100               	movlb	0	; () banked
  8084  000674  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8085  000676  22DA               	addwfc	fsr2h,f,c
  8086  000678  50DF               	movf	indf2,w,c
  8087  00067A  0100               	movlb	0	; () banked
  8088  00067C  6F80               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8089                           
  8090                           ;my_i2c.c: 335: error_buf[2] = ic_ptr->event_count;
  8091  00067E  0100               	movlb	0	; () banked
  8092  000680  EE20 F020          	lfsr	2,32
  8093  000684  0100               	movlb	0	; () banked
  8094  000686  51C6               	movf	_ic_ptr& (0+255),w,b
  8095  000688  26D9               	addwf	fsr2l,f,c
  8096  00068A  0100               	movlb	0	; () banked
  8097  00068C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8098  00068E  22DA               	addwfc	fsr2h,f,c
  8099  000690  50DF               	movf	indf2,w,c
  8100  000692  0100               	movlb	0	; () banked
  8101  000694  6F81               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;my_i2c.c: 336: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8105  000696  0E29               	movlw	41
  8106  000698  0100               	movlb	0	; () banked
  8107  00069A  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8108  00069C  0100               	movlb	0	; () banked
  8109  00069E  0E00               	movlw	high i2c_int_handler@error_buf
  8110  0006A0  0100               	movlb	0	; () banked
  8111  0006A2  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8112  0006A4  0100               	movlb	0	; () banked
  8113  0006A6  0E7F               	movlw	low i2c_int_handler@error_buf
  8114  0006A8  0100               	movlb	0	; () banked
  8115  0006AA  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8116  0006AC  0E03               	movlw	3
  8117  0006AE  ECA3  F00E         	call	_ToMainHigh_sendmsg
  8118                           
  8119                           ;my_i2c.c: 337: ic_ptr->error_count = 0;
  8120  0006B2  0100               	movlb	0	; () banked
  8121  0006B4  EE20 F023          	lfsr	2,35
  8122  0006B8                     L11:
  8123  0006B8  0100               	movlb	0	; () banked
  8124  0006BA  51C6               	movf	_ic_ptr& (0+255),w,b
  8125  0006BC  26D9               	addwf	fsr2l,f,c
  8126  0006BE  0100               	movlb	0	; () banked
  8127  0006C0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8128  0006C2  22DA               	addwfc	fsr2h,f,c
  8129  0006C4  0E00               	movlw	0
  8130  0006C6  6EDF               	movwf	indf2,c
  8131  0006C8                     i2l3935:
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;my_i2c.c: 338: }
  8135                           ;my_i2c.c: 339: if (msg_to_send) {
  8136  0006C8  0100               	movlb	0	; () banked
  8137  0006CA  5186               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8138  0006CC  B4D8               	btfsc	status,2,c
  8139  0006CE  D01F               	goto	i2l3945
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;my_i2c.c: 341: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  8143  0006D0  0E10               	movlw	16
  8144  0006D2  0100               	movlb	0	; () banked
  8145  0006D4  25C6               	addwf	_ic_ptr& (0+255),w,b
  8146  0006D6  0100               	movlb	0	; () banked
  8147  0006D8  6F60               	movwf	start_i2c_slave_reply@msg& (0+255),b
  8148  0006DA  0E00               	movlw	0
  8149  0006DC  0100               	movlb	0	; () banked
  8150  0006DE  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8151  0006E0  0100               	movlb	0	; () banked
  8152  0006E2  6F61               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  8153  0006E4  0E0E               	movlw	14
  8154  0006E6  EC88  F00D         	call	_start_i2c_slave_reply
  8155                           
  8156                           ;my_i2c.c: 343: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8157  0006EA  0E2A               	movlw	42
  8158  0006EC  0100               	movlb	0	; () banked
  8159  0006EE  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8160  0006F0  0100               	movlb	0	; () banked
  8161  0006F2  C0C7  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8162  0006F6  0100               	movlb	0	; () banked
  8163  0006F8  C0C6  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8164  0006FC  0E00               	movlw	0
  8165  0006FE  ECA3  F00E         	call	_ToMainHigh_sendmsg
  8166                           
  8167                           ;my_i2c.c: 344: need_data = 1;
  8168  000702  0E01               	movlw	1
  8169  000704  0100               	movlb	0	; () banked
  8170  000706  6F84               	movwf	i2c_int_handler@need_data& (0+255),b
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;my_i2c.c: 345: msg_to_send = 0;
  8174  000708  0E00               	movlw	0
  8175  00070A  0100               	movlb	0	; () banked
  8176  00070C  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8177  00070E                     i2l3945:
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;my_i2c.c: 346: }
  8181                           ;my_i2c.c: 349: if(need_data)
  8182  00070E  0100               	movlb	0	; () banked
  8183  000710  5184               	movf	i2c_int_handler@need_data& (0+255),w,b
  8184  000712  B4D8               	btfsc	status,2,c
  8185  000714  0012               	return	
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;my_i2c.c: 350: {
  8189                           ;my_i2c.c: 351: unsigned char msg_type;
  8190                           ;my_i2c.c: 352: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  8191  000716  0100               	movlb	0	; () banked
  8192  000718  0E00               	movlw	high i2c_int_handler@msg_type
  8193  00071A  0100               	movlb	0	; () banked
  8194  00071C  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  8195  00071E  0100               	movlb	0	; () banked
  8196  000720  0E87               	movlw	low i2c_int_handler@msg_type
  8197  000722  0100               	movlb	0	; () banked
  8198  000724  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  8199  000726  0E10               	movlw	16
  8200  000728  0100               	movlb	0	; () banked
  8201  00072A  25C6               	addwf	_ic_ptr& (0+255),w,b
  8202  00072C  0100               	movlb	0	; () banked
  8203  00072E  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  8204  000730  0E00               	movlw	0
  8205  000732  0100               	movlb	0	; () banked
  8206  000734  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8207  000736  0100               	movlb	0	; () banked
  8208  000738  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  8209  00073A  0E0E               	movlw	14
  8210  00073C  EC41  F00E         	call	_FromMainHigh_recvmsg
  8211  000740  0100               	movlb	0	; () banked
  8212  000742  6F7E               	movwf	i2c_int_handler@length& (0+255),b
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;my_i2c.c: 361: else
  8216                           ;my_i2c.c: 362: {
  8217                           ;my_i2c.c: 363: need_data = 0;
  8218                           
  8219                           ; BSR set to: 0
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;my_i2c.c: 358: {
  8223                           ;my_i2c.c: 360: }
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;my_i2c.c: 357: else if( length < 0 )
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;my_i2c.c: 354: {
  8230                           ;my_i2c.c: 356: }
  8231                           
  8232                           ;my_i2c.c: 353: if( length == -4 )
  8233  000744  0E00               	movlw	0
  8234  000746  0100               	movlb	0	; () banked
  8235  000748  6F84               	movwf	i2c_int_handler@need_data& (0+255),b
  8236  00074A  0012               	return	
  8237  00074C                     __end_of_i2c_int_handler:
  8238                           	opt stack 0
  8239                           pclatu	equ	0xFFB
  8240                           pclath	equ	0xFFA
  8241                           tblptru	equ	0xFF8
  8242                           tblptrh	equ	0xFF7
  8243                           tblptrl	equ	0xFF6
  8244                           tablat	equ	0xFF5
  8245                           prodh	equ	0xFF4
  8246                           prodl	equ	0xFF3
  8247                           intcon	equ	0xFF2
  8248                           postinc0	equ	0xFEE
  8249                           fsr0h	equ	0xFEA
  8250                           fsr0l	equ	0xFE9
  8251                           wreg	equ	0xFE8
  8252                           indf1	equ	0xFE7
  8253                           fsr1h	equ	0xFE2
  8254                           fsr1l	equ	0xFE1
  8255                           bsr	equ	0xFE0
  8256                           indf2	equ	0xFDF
  8257                           postinc2	equ	0xFDE
  8258                           postdec2	equ	0xFDD
  8259                           fsr2h	equ	0xFDA
  8260                           fsr2l	equ	0xFD9
  8261                           status	equ	0xFD8
  8262                           
  8263 ;; *************** function i2_blip2 *****************
  8264 ;; Defined at:
  8265 ;;		line 25 in file "../src/debug.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;		None               void
  8272 ;; Registers used:
  8273 ;;		None
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_i2c_int_handler
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text46
  8293  001F1E                     __ptext46:
  8294                           	opt stack 0
  8295  001F1E                     i2_blip2:
  8296                           	opt stack 19
  8297                           
  8298                           ;debug.c: 27: LATDbits.LD5 = 0;
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;incstack = 0
  8302  001F1E  9A8C               	bcf	3980,5,c	;volatile
  8303                           
  8304                           ;debug.c: 28: LATDbits.LD5 = 1;
  8305  001F20  8A8C               	bsf	3980,5,c	;volatile
  8306                           
  8307                           ;debug.c: 29: LATDbits.LD5 = 0;
  8308  001F22  9A8C               	bcf	3980,5,c	;volatile
  8309  001F24  0012               	return	
  8310  001F26                     __end_ofi2_blip2:
  8311                           	opt stack 0
  8312                           pclatu	equ	0xFFB
  8313                           pclath	equ	0xFFA
  8314                           tblptru	equ	0xFF8
  8315                           tblptrh	equ	0xFF7
  8316                           tblptrl	equ	0xFF6
  8317                           tablat	equ	0xFF5
  8318                           prodh	equ	0xFF4
  8319                           prodl	equ	0xFF3
  8320                           intcon	equ	0xFF2
  8321                           postinc0	equ	0xFEE
  8322                           fsr0h	equ	0xFEA
  8323                           fsr0l	equ	0xFE9
  8324                           wreg	equ	0xFE8
  8325                           indf1	equ	0xFE7
  8326                           fsr1h	equ	0xFE2
  8327                           fsr1l	equ	0xFE1
  8328                           bsr	equ	0xFE0
  8329                           indf2	equ	0xFDF
  8330                           postinc2	equ	0xFDE
  8331                           postdec2	equ	0xFDD
  8332                           fsr2h	equ	0xFDA
  8333                           fsr2l	equ	0xFD9
  8334                           status	equ	0xFD8
  8335                           
  8336 ;; *************** function i2_blip1 *****************
  8337 ;; Defined at:
  8338 ;;		line 18 in file "../src/debug.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;		None
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;		None               void
  8345 ;; Registers used:
  8346 ;;		None
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8356 ;;Total ram usage:        0 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; This function calls:
  8359 ;;		Nothing
  8360 ;; This function is called by:
  8361 ;;		_i2c_int_handler
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text47
  8366  001F26                     __ptext47:
  8367                           	opt stack 0
  8368  001F26                     i2_blip1:
  8369                           	opt stack 19
  8370                           
  8371                           ;debug.c: 20: LATDbits.LD4 = 0;
  8372                           
  8373                           ;incstack = 0
  8374  001F26  988C               	bcf	3980,4,c	;volatile
  8375                           
  8376                           ;debug.c: 21: LATDbits.LD4 = 1;
  8377  001F28  888C               	bsf	3980,4,c	;volatile
  8378                           
  8379                           ;debug.c: 22: LATDbits.LD4 = 0;
  8380  001F2A  988C               	bcf	3980,4,c	;volatile
  8381  001F2C  0012               	return	
  8382  001F2E                     __end_ofi2_blip1:
  8383                           	opt stack 0
  8384                           pclatu	equ	0xFFB
  8385                           pclath	equ	0xFFA
  8386                           tblptru	equ	0xFF8
  8387                           tblptrh	equ	0xFF7
  8388                           tblptrl	equ	0xFF6
  8389                           tablat	equ	0xFF5
  8390                           prodh	equ	0xFF4
  8391                           prodl	equ	0xFF3
  8392                           intcon	equ	0xFF2
  8393                           postinc0	equ	0xFEE
  8394                           fsr0h	equ	0xFEA
  8395                           fsr0l	equ	0xFE9
  8396                           wreg	equ	0xFE8
  8397                           indf1	equ	0xFE7
  8398                           fsr1h	equ	0xFE2
  8399                           fsr1l	equ	0xFE1
  8400                           bsr	equ	0xFE0
  8401                           indf2	equ	0xFDF
  8402                           postinc2	equ	0xFDE
  8403                           postdec2	equ	0xFDD
  8404                           fsr2h	equ	0xFDA
  8405                           fsr2l	equ	0xFD9
  8406                           status	equ	0xFD8
  8407                           
  8408 ;; *************** function i2_blip *****************
  8409 ;; Defined at:
  8410 ;;		line 11 in file "../src/debug.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;		None               void
  8417 ;; Registers used:
  8418 ;;		None
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8428 ;;Total ram usage:        0 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_i2c_int_handler
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           	psect	text48
  8438  001F2E                     __ptext48:
  8439                           	opt stack 0
  8440  001F2E                     i2_blip:
  8441                           	opt stack 19
  8442                           
  8443                           ;debug.c: 13: LATDbits.LD2 = 0;
  8444                           
  8445                           ;incstack = 0
  8446  001F2E  948C               	bcf	3980,2,c	;volatile
  8447                           
  8448                           ;debug.c: 14: LATDbits.LD2 = 1;
  8449  001F30  848C               	bsf	3980,2,c	;volatile
  8450                           
  8451                           ;debug.c: 15: LATDbits.LD2 = 0;
  8452  001F32  948C               	bcf	3980,2,c	;volatile
  8453  001F34  0012               	return	
  8454  001F36                     __end_ofi2_blip:
  8455                           	opt stack 0
  8456                           pclatu	equ	0xFFB
  8457                           pclath	equ	0xFFA
  8458                           tblptru	equ	0xFF8
  8459                           tblptrh	equ	0xFF7
  8460                           tblptrl	equ	0xFF6
  8461                           tablat	equ	0xFF5
  8462                           prodh	equ	0xFF4
  8463                           prodl	equ	0xFF3
  8464                           intcon	equ	0xFF2
  8465                           postinc0	equ	0xFEE
  8466                           fsr0h	equ	0xFEA
  8467                           fsr0l	equ	0xFE9
  8468                           wreg	equ	0xFE8
  8469                           indf1	equ	0xFE7
  8470                           fsr1h	equ	0xFE2
  8471                           fsr1l	equ	0xFE1
  8472                           bsr	equ	0xFE0
  8473                           indf2	equ	0xFDF
  8474                           postinc2	equ	0xFDE
  8475                           postdec2	equ	0xFDD
  8476                           fsr2h	equ	0xFDA
  8477                           fsr2l	equ	0xFD9
  8478                           status	equ	0xFD8
  8479                           
  8480 ;; *************** function _start_i2c_slave_reply *****************
  8481 ;; Defined at:
  8482 ;;		line 57 in file "../src/my_i2c.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;  length          1    wreg     unsigned char 
  8485 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8486 ;;		 -> NULL(0), main@ic(38), 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  length          1    2[BANK0 ] unsigned char 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;		None               void
  8491 ;; Registers used:
  8492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8501 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8502 ;;Total ram usage:        3 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; This function calls:
  8505 ;;		Nothing
  8506 ;; This function is called by:
  8507 ;;		_i2c_int_handler
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text49
  8512  001B10                     __ptext49:
  8513                           	opt stack 0
  8514  001B10                     _start_i2c_slave_reply:
  8515                           	opt stack 19
  8516                           
  8517                           ;incstack = 0
  8518                           ;start_i2c_slave_reply@length stored from wreg
  8519  001B10  0100               	movlb	0	; () banked
  8520  001B12  6F62               	movwf	start_i2c_slave_reply@length& (0+255),b
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;my_i2c.c: 64: ic_ptr->outbuflen = length;
  8524  001B14  0100               	movlb	0	; () banked
  8525  001B16  EE20 F01F          	lfsr	2,31
  8526  001B1A  0100               	movlb	0	; () banked
  8527  001B1C  51C6               	movf	_ic_ptr& (0+255),w,b
  8528  001B1E  26D9               	addwf	fsr2l,f,c
  8529  001B20  0100               	movlb	0	; () banked
  8530  001B22  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8531  001B24  22DA               	addwfc	fsr2h,f,c
  8532  001B26  0100               	movlb	0	; () banked
  8533  001B28  C062  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8534                           
  8535                           ;my_i2c.c: 65: ic_ptr->outbufind = 1;
  8536  001B2C  0100               	movlb	0	; () banked
  8537  001B2E  EE20 F01E          	lfsr	2,30
  8538  001B32  0100               	movlb	0	; () banked
  8539  001B34  51C6               	movf	_ic_ptr& (0+255),w,b
  8540  001B36  26D9               	addwf	fsr2l,f,c
  8541  001B38  0100               	movlb	0	; () banked
  8542  001B3A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8543  001B3C  22DA               	addwfc	fsr2h,f,c
  8544  001B3E  0E01               	movlw	1
  8545  001B40  6EDF               	movwf	indf2,c
  8546                           
  8547                           ;my_i2c.c: 68: SSPBUF = ic_ptr->outbuffer[0];
  8548  001B42  0100               	movlb	0	; () banked
  8549  001B44  EE20 F010          	lfsr	2,16
  8550  001B48  0100               	movlb	0	; () banked
  8551  001B4A  51C6               	movf	_ic_ptr& (0+255),w,b
  8552  001B4C  26D9               	addwf	fsr2l,f,c
  8553  001B4E  0100               	movlb	0	; () banked
  8554  001B50  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8555  001B52  22DA               	addwfc	fsr2h,f,c
  8556  001B54  50DF               	movf	indf2,w,c
  8557  001B56  6EC9               	movwf	4041,c	;volatile
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;my_i2c.c: 71: SSPCON1bits.CKP = 1;
  8561  001B58  88C6               	bsf	4038,4,c	;volatile
  8562                           
  8563                           ; BSR set to: 0
  8564  001B5A  0012               	return	
  8565  001B5C                     __end_of_start_i2c_slave_reply:
  8566                           	opt stack 0
  8567                           pclatu	equ	0xFFB
  8568                           pclath	equ	0xFFA
  8569                           tblptru	equ	0xFF8
  8570                           tblptrh	equ	0xFF7
  8571                           tblptrl	equ	0xFF6
  8572                           tablat	equ	0xFF5
  8573                           prodh	equ	0xFF4
  8574                           prodl	equ	0xFF3
  8575                           intcon	equ	0xFF2
  8576                           postinc0	equ	0xFEE
  8577                           fsr0h	equ	0xFEA
  8578                           fsr0l	equ	0xFE9
  8579                           wreg	equ	0xFE8
  8580                           indf1	equ	0xFE7
  8581                           fsr1h	equ	0xFE2
  8582                           fsr1l	equ	0xFE1
  8583                           bsr	equ	0xFE0
  8584                           indf2	equ	0xFDF
  8585                           postinc2	equ	0xFDE
  8586                           postdec2	equ	0xFDD
  8587                           fsr2h	equ	0xFDA
  8588                           fsr2l	equ	0xFD9
  8589                           status	equ	0xFD8
  8590                           
  8591 ;; *************** function _handle_start *****************
  8592 ;; Defined at:
  8593 ;;		line 77 in file "../src/my_i2c.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  data_read       1    wreg     unsigned char 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  data_read       1    0[BANK0 ] unsigned char 
  8598 ;; Return value:  Size  Location     Type
  8599 ;;		None               void
  8600 ;; Registers used:
  8601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8611 ;;Total ram usage:        1 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_i2c_int_handler
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text50
  8621  00129A                     __ptext50:
  8622                           	opt stack 0
  8623  00129A                     _handle_start:
  8624                           	opt stack 19
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;incstack = 0
  8628                           ;handle_start@data_read stored from wreg
  8629  00129A  0100               	movlb	0	; () banked
  8630  00129C  6F60               	movwf	handle_start@data_read& (0+255),b
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;my_i2c.c: 78: ic_ptr->event_count = 1;
  8634  00129E  0100               	movlb	0	; () banked
  8635  0012A0  EE20 F020          	lfsr	2,32
  8636  0012A4  0100               	movlb	0	; () banked
  8637  0012A6  51C6               	movf	_ic_ptr& (0+255),w,b
  8638  0012A8  26D9               	addwf	fsr2l,f,c
  8639  0012AA  0100               	movlb	0	; () banked
  8640  0012AC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8641  0012AE  22DA               	addwfc	fsr2h,f,c
  8642  0012B0  0E01               	movlw	1
  8643  0012B2  6EDF               	movwf	indf2,c
  8644                           
  8645                           ;my_i2c.c: 79: ic_ptr->buflen = 0;
  8646  0012B4  0100               	movlb	0	; () banked
  8647  0012B6  EE20 F00E          	lfsr	2,14
  8648  0012BA  0100               	movlb	0	; () banked
  8649  0012BC  51C6               	movf	_ic_ptr& (0+255),w,b
  8650  0012BE  26D9               	addwf	fsr2l,f,c
  8651  0012C0  0100               	movlb	0	; () banked
  8652  0012C2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8653  0012C4  22DA               	addwfc	fsr2h,f,c
  8654  0012C6  0E00               	movlw	0
  8655  0012C8  6EDF               	movwf	indf2,c
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;my_i2c.c: 81: if (data_read) {
  8659  0012CA  0100               	movlb	0	; () banked
  8660  0012CC  5160               	movf	handle_start@data_read& (0+255),w,b
  8661  0012CE  B4D8               	btfsc	status,2,c
  8662  0012D0  D03D               	goto	i2l2761
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;my_i2c.c: 82: if (SSPSTATbits.D_A == 1) {
  8666  0012D2  AAC7               	btfss	4039,5,c	;volatile
  8667  0012D4  D021               	goto	i2l286
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;my_i2c.c: 85: ic_ptr->status = 0x5;
  8671  0012D6  0100               	movlb	0	; () banked
  8672  0012D8  EE20 F021          	lfsr	2,33
  8673  0012DC  0100               	movlb	0	; () banked
  8674  0012DE  51C6               	movf	_ic_ptr& (0+255),w,b
  8675  0012E0  26D9               	addwf	fsr2l,f,c
  8676  0012E2  0100               	movlb	0	; () banked
  8677  0012E4  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8678  0012E6  22DA               	addwfc	fsr2h,f,c
  8679  0012E8  0E05               	movlw	5
  8680  0012EA  6EDF               	movwf	indf2,c
  8681                           
  8682                           ;my_i2c.c: 86: ic_ptr->error_count++;
  8683  0012EC  0100               	movlb	0	; () banked
  8684  0012EE  EE20 F023          	lfsr	2,35
  8685  0012F2  0100               	movlb	0	; () banked
  8686  0012F4  51C6               	movf	_ic_ptr& (0+255),w,b
  8687  0012F6  26D9               	addwf	fsr2l,f,c
  8688  0012F8  0100               	movlb	0	; () banked
  8689  0012FA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8690  0012FC  22DA               	addwfc	fsr2h,f,c
  8691  0012FE  2ADF               	incf	indf2,f,c
  8692                           
  8693                           ;my_i2c.c: 87: ic_ptr->error_code = 0x5;
  8694  001300  0100               	movlb	0	; () banked
  8695  001302  EE20 F022          	lfsr	2,34
  8696  001306  0100               	movlb	0	; () banked
  8697  001308  51C6               	movf	_ic_ptr& (0+255),w,b
  8698  00130A  26D9               	addwf	fsr2l,f,c
  8699  00130C  0100               	movlb	0	; () banked
  8700  00130E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8701  001310  22DA               	addwfc	fsr2h,f,c
  8702  001312  0E05               	movlw	5
  8703  001314  6EDF               	movwf	indf2,c
  8704                           
  8705                           ;my_i2c.c: 88: } else {
  8706  001316  0012               	return	
  8707  001318                     i2l286:
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;my_i2c.c: 89: if (SSPSTATbits.R_W == 1) {
  8711  001318  A4C7               	btfss	4039,2,c	;volatile
  8712  00131A  D00C               	goto	i2l2759
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;my_i2c.c: 90: ic_ptr->status = 0x8;
  8716  00131C  0100               	movlb	0	; () banked
  8717  00131E  EE20 F021          	lfsr	2,33
  8718  001322  0100               	movlb	0	; () banked
  8719  001324  51C6               	movf	_ic_ptr& (0+255),w,b
  8720  001326  26D9               	addwf	fsr2l,f,c
  8721  001328  0100               	movlb	0	; () banked
  8722  00132A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8723  00132C  22DA               	addwfc	fsr2h,f,c
  8724  00132E  0E08               	movlw	8
  8725  001330  6EDF               	movwf	indf2,c
  8726                           
  8727                           ;my_i2c.c: 92: } else {
  8728  001332  0012               	return	
  8729  001334                     i2l2759:
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;my_i2c.c: 93: ic_ptr->status = 0x7;
  8733  001334  0100               	movlb	0	; () banked
  8734  001336  EE20 F021          	lfsr	2,33
  8735  00133A  0100               	movlb	0	; () banked
  8736  00133C  51C6               	movf	_ic_ptr& (0+255),w,b
  8737  00133E  26D9               	addwf	fsr2l,f,c
  8738  001340  0100               	movlb	0	; () banked
  8739  001342  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8740  001344  22DA               	addwfc	fsr2h,f,c
  8741  001346  0E07               	movlw	7
  8742  001348  6EDF               	movwf	indf2,c
  8743  00134A  0012               	return	
  8744  00134C                     i2l2761:
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;my_i2c.c: 98: ic_ptr->status = 0x6;
  8748  00134C  0100               	movlb	0	; () banked
  8749  00134E  EE20 F021          	lfsr	2,33
  8750  001352  0100               	movlb	0	; () banked
  8751  001354  51C6               	movf	_ic_ptr& (0+255),w,b
  8752  001356  26D9               	addwf	fsr2l,f,c
  8753  001358  0100               	movlb	0	; () banked
  8754  00135A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8755  00135C  22DA               	addwfc	fsr2h,f,c
  8756  00135E  0E06               	movlw	6
  8757  001360  6EDF               	movwf	indf2,c
  8758  001362  0012               	return	
  8759  001364                     __end_of_handle_start:
  8760                           	opt stack 0
  8761                           pclatu	equ	0xFFB
  8762                           pclath	equ	0xFFA
  8763                           tblptru	equ	0xFF8
  8764                           tblptrh	equ	0xFF7
  8765                           tblptrl	equ	0xFF6
  8766                           tablat	equ	0xFF5
  8767                           prodh	equ	0xFF4
  8768                           prodl	equ	0xFF3
  8769                           intcon	equ	0xFF2
  8770                           postinc0	equ	0xFEE
  8771                           fsr0h	equ	0xFEA
  8772                           fsr0l	equ	0xFE9
  8773                           wreg	equ	0xFE8
  8774                           indf1	equ	0xFE7
  8775                           fsr1h	equ	0xFE2
  8776                           fsr1l	equ	0xFE1
  8777                           bsr	equ	0xFE0
  8778                           indf2	equ	0xFDF
  8779                           postinc2	equ	0xFDE
  8780                           postdec2	equ	0xFDD
  8781                           fsr2h	equ	0xFDA
  8782                           fsr2l	equ	0xFD9
  8783                           status	equ	0xFD8
  8784                           
  8785 ;; *************** function _ToMainHigh_sendmsg *****************
  8786 ;; Defined at:
  8787 ;;		line 126 in file "../src/messages.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  length          1    wreg     unsigned char 
  8790 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8791 ;;  data            2   23[BANK0 ] PTR void 
  8792 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  length          1   25[BANK0 ] unsigned char 
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      char 
  8797 ;; Registers used:
  8798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8804 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8808 ;;Total ram usage:        4 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:    2
  8811 ;; This function calls:
  8812 ;;		i2_send_msg
  8813 ;; This function is called by:
  8814 ;;		_i2c_int_handler
  8815 ;;		_timer0_int_handler
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text51
  8820  001D46                     __ptext51:
  8821                           	opt stack 0
  8822  001D46                     _ToMainHigh_sendmsg:
  8823                           	opt stack 17
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;incstack = 0
  8827                           ;ToMainHigh_sendmsg@length stored from wreg
  8828  001D46  0100               	movlb	0	; () banked
  8829  001D48  6F79               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8833                           ;	Return value of _ToMainHigh_sendmsg is never used
  8834  001D4A  0102               	movlb	2	; () banked
  8835  001D4C  0E02               	movlw	high _ToMainHigh_MQ
  8836  001D4E  0100               	movlb	0	; () banked
  8837  001D50  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8838  001D52  0102               	movlb	2	; () banked
  8839  001D54  0E57               	movlw	low _ToMainHigh_MQ
  8840  001D56  0100               	movlb	0	; () banked
  8841  001D58  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  8842  001D5A  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8843  001D5E  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8844  001D62  0100               	movlb	0	; () banked
  8845  001D64  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8846  001D68  0100               	movlb	0	; () banked
  8847  001D6A  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8848  001D6E  ECE2  F007         	call	i2_send_msg	;wreg free
  8849  001D72  0012               	return	
  8850  001D74                     __end_of_ToMainHigh_sendmsg:
  8851                           	opt stack 0
  8852                           pclatu	equ	0xFFB
  8853                           pclath	equ	0xFFA
  8854                           tblptru	equ	0xFF8
  8855                           tblptrh	equ	0xFF7
  8856                           tblptrl	equ	0xFF6
  8857                           tablat	equ	0xFF5
  8858                           prodh	equ	0xFF4
  8859                           prodl	equ	0xFF3
  8860                           intcon	equ	0xFF2
  8861                           postinc0	equ	0xFEE
  8862                           fsr0h	equ	0xFEA
  8863                           fsr0l	equ	0xFE9
  8864                           wreg	equ	0xFE8
  8865                           indf1	equ	0xFE7
  8866                           fsr1h	equ	0xFE2
  8867                           fsr1l	equ	0xFE1
  8868                           bsr	equ	0xFE0
  8869                           indf2	equ	0xFDF
  8870                           postinc2	equ	0xFDE
  8871                           postdec2	equ	0xFDD
  8872                           fsr2h	equ	0xFDA
  8873                           fsr2l	equ	0xFD9
  8874                           status	equ	0xFD8
  8875                           
  8876 ;; *************** function i2_send_msg *****************
  8877 ;; Defined at:
  8878 ;;		line 24 in file "../src/messages.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8881 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8882 ;;  length          1   12[BANK0 ] unsigned char 
  8883 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8884 ;;  data            2   14[BANK0 ] PTR void 
  8885 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  8886 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8887 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  8888 ;;		 -> main@t1thread_data(2), main@ic(38), 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8891 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8892 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8893 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8894 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      char 
  8897 ;; Registers used:
  8898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8904 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8905 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8907 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8908 ;;Total ram usage:       12 bytes
  8909 ;; Hardware stack levels used:    1
  8910 ;; Hardware stack levels required when called:    1
  8911 ;; This function calls:
  8912 ;;		i2___awmod
  8913 ;;		i2_memcpy
  8914 ;; This function is called by:
  8915 ;;		_ToMainHigh_sendmsg
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text52
  8920  000FC4                     __ptext52:
  8921                           	opt stack 0
  8922  000FC4                     i2_send_msg:
  8923                           	opt stack 17
  8924                           
  8925                           ;messages.c: 25: unsigned char slot;
  8926                           ;messages.c: 27: msg *qmsg;
  8927                           ;messages.c: 28: size_t tlength = length;
  8928                           
  8929                           ;incstack = 0
  8930  000FC4  0100               	movlb	0	; () banked
  8931  000FC6  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  8932  000FCA  0100               	movlb	0	; () banked
  8933  000FCC  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8937  000FCE  0100               	movlb	0	; () banked
  8938  000FD0  EE20 F055          	lfsr	2,85
  8939  000FD4  0100               	movlb	0	; () banked
  8940  000FD6  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8941  000FD8  26D9               	addwf	fsr2l,f,c
  8942  000FDA  0100               	movlb	0	; () banked
  8943  000FDC  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8944  000FDE  22DA               	addwfc	fsr2h,f,c
  8945  000FE0  50DF               	movf	indf2,w,c
  8946  000FE2  0100               	movlb	0	; () banked
  8947  000FE4  6F73               	movwf	i2send_msg@slot& (0+255),b
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8951  000FE6  0100               	movlb	0	; () banked
  8952  000FE8  5173               	movf	i2send_msg@slot& (0+255),w,b
  8953  000FEA  0D11               	mullw	17
  8954  000FEC  50F3               	movf	prodl,w,c
  8955  000FEE  0100               	movlb	0	; () banked
  8956  000FF0  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  8957  000FF2  0100               	movlb	0	; () banked
  8958  000FF4  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  8959  000FF6  50F4               	movf	prodh,w,c
  8960  000FF8  0100               	movlb	0	; () banked
  8961  000FFA  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8962  000FFC  0100               	movlb	0	; () banked
  8963  000FFE  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;messages.c: 41: if (qmsg->full != 0) {
  8967  001000  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8968  001004  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8969  001008  50DF               	movf	indf2,w,c
  8970  00100A  B4D8               	btfsc	status,2,c
  8971  00100C  D002               	goto	i2l3643
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;messages.c: 42: return (-1);
  8975  00100E  0EFF               	movlw	255
  8976  001010  0012               	return	
  8977  001012                     i2l3643:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;messages.c: 43: }
  8981                           ;messages.c: 46: qmsg->length = length;
  8982  001012  0100               	movlb	0	; () banked
  8983  001014  EE20 F001          	lfsr	2,1
  8984  001018  0100               	movlb	0	; () banked
  8985  00101A  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8986  00101C  26D9               	addwf	fsr2l,f,c
  8987  00101E  0100               	movlb	0	; () banked
  8988  001020  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8989  001022  22DA               	addwfc	fsr2h,f,c
  8990  001024  0100               	movlb	0	; () banked
  8991  001026  C06C  FFDF         	movff	i2send_msg@length,indf2
  8992                           
  8993                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8994  00102A  0100               	movlb	0	; () banked
  8995  00102C  EE20 F002          	lfsr	2,2
  8996  001030  0100               	movlb	0	; () banked
  8997  001032  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8998  001034  26D9               	addwf	fsr2l,f,c
  8999  001036  0100               	movlb	0	; () banked
  9000  001038  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9001  00103A  22DA               	addwfc	fsr2h,f,c
  9002  00103C  0100               	movlb	0	; () banked
  9003  00103E  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9007  001042  0E03               	movlw	3
  9008  001044  0100               	movlb	0	; () banked
  9009  001046  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  9010  001048  0100               	movlb	0	; () banked
  9011  00104A  6F60               	movwf	i2memcpy@d1& (0+255),b
  9012  00104C  0E00               	movlw	0
  9013  00104E  0100               	movlb	0	; () banked
  9014  001050  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9015  001052  0100               	movlb	0	; () banked
  9016  001054  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  9017  001056  0100               	movlb	0	; () banked
  9018  001058  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9019  00105C  0100               	movlb	0	; () banked
  9020  00105E  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  9021  001062  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  9022  001066  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9023  00106A  EC60  F00D         	call	i2_memcpy	;wreg free
  9024                           
  9025                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  9026  00106E  0100               	movlb	0	; () banked
  9027  001070  EE20 F055          	lfsr	2,85
  9028  001074  0100               	movlb	0	; () banked
  9029  001076  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9030  001078  26D9               	addwf	fsr2l,f,c
  9031  00107A  0100               	movlb	0	; () banked
  9032  00107C  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9033  00107E  22DA               	addwfc	fsr2h,f,c
  9034  001080  0100               	movlb	0	; () banked
  9035  001082  EE10 F055          	lfsr	1,85
  9036  001086  0100               	movlb	0	; () banked
  9037  001088  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9038  00108A  26E1               	addwf	fsr1l,f,c
  9039  00108C  0100               	movlb	0	; () banked
  9040  00108E  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9041  001090  22E2               	addwfc	fsr1h,f,c
  9042  001092  50E7               	movf	indf1,w,c
  9043  001094  0100               	movlb	0	; () banked
  9044  001096  6F70               	movwf	??i2_send_msg& (0+255),b
  9045  001098  0E01               	movlw	1
  9046  00109A  0100               	movlb	0	; () banked
  9047  00109C  2570               	addwf	??i2_send_msg& (0+255),w,b
  9048  00109E  0100               	movlb	0	; () banked
  9049  0010A0  6F60               	movwf	i2___awmod@dividend& (0+255),b
  9050  0010A2  0100               	movlb	0	; () banked
  9051  0010A4  6B61               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9052  0010A6  0E00               	movlw	0
  9053  0010A8  2361               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9054  0010AA  0E00               	movlw	0
  9055  0010AC  0100               	movlb	0	; () banked
  9056  0010AE  6F63               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9057  0010B0  0E05               	movlw	5
  9058  0010B2  0100               	movlb	0	; () banked
  9059  0010B4  6F62               	movwf	i2___awmod@divisor& (0+255),b
  9060  0010B6  EC14  F00A         	call	i2___awmod	;wreg free
  9061  0010BA  0100               	movlb	0	; () banked
  9062  0010BC  5160               	movf	?i2___awmod& (0+255),w,b
  9063  0010BE  6EDF               	movwf	indf2,c
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;messages.c: 59: qmsg->full = 1;
  9067  0010C0  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9068  0010C4  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9069  0010C8  0E01               	movlw	1
  9070  0010CA  6EDF               	movwf	indf2,c
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;messages.c: 60: return (1);
  9074  0010CC  0E01               	movlw	1
  9075  0010CE  0012               	return	
  9076  0010D0                     __end_ofi2_send_msg:
  9077                           	opt stack 0
  9078                           pclatu	equ	0xFFB
  9079                           pclath	equ	0xFFA
  9080                           tblptru	equ	0xFF8
  9081                           tblptrh	equ	0xFF7
  9082                           tblptrl	equ	0xFF6
  9083                           tablat	equ	0xFF5
  9084                           prodh	equ	0xFF4
  9085                           prodl	equ	0xFF3
  9086                           intcon	equ	0xFF2
  9087                           postinc0	equ	0xFEE
  9088                           fsr0h	equ	0xFEA
  9089                           fsr0l	equ	0xFE9
  9090                           wreg	equ	0xFE8
  9091                           indf1	equ	0xFE7
  9092                           fsr1h	equ	0xFE2
  9093                           fsr1l	equ	0xFE1
  9094                           bsr	equ	0xFE0
  9095                           indf2	equ	0xFDF
  9096                           postinc2	equ	0xFDE
  9097                           postdec2	equ	0xFDD
  9098                           fsr2h	equ	0xFDA
  9099                           fsr2l	equ	0xFD9
  9100                           status	equ	0xFD8
  9101                           
  9102 ;; *************** function _FromMainHigh_recvmsg *****************
  9103 ;; Defined at:
  9104 ;;		line 183 in file "../src/messages.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  maxlength       1    wreg     unsigned char 
  9107 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  9108 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  9109 ;;  data            2   26[BANK0 ] PTR void 
  9110 ;;		 -> NULL(0), timer0_int_handler@val(2), main@ic(38), 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  maxlength       1   28[BANK0 ] unsigned char 
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      char 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9122 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9125 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9126 ;;Total ram usage:        5 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; Hardware stack levels required when called:    2
  9129 ;; This function calls:
  9130 ;;		i2_recv_msg
  9131 ;; This function is called by:
  9132 ;;		_i2c_int_handler
  9133 ;;		_timer0_int_handler
  9134 ;;		_retrieve_sensor_values
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text53
  9139  001C82                     __ptext53:
  9140                           	opt stack 0
  9141  001C82                     _FromMainHigh_recvmsg:
  9142                           	opt stack 17
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;incstack = 0
  9146                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  9147  001C82  0100               	movlb	0	; () banked
  9148  001C84  6F7C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  9152  001C86  0103               	movlb	3	; () banked
  9153  001C88  0E03               	movlw	high _FromMainHigh_MQ
  9154  001C8A  0100               	movlb	0	; () banked
  9155  001C8C  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  9156  001C8E  0103               	movlb	3	; () banked
  9157  001C90  0E00               	movlw	low _FromMainHigh_MQ
  9158  001C92  0100               	movlb	0	; () banked
  9159  001C94  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  9160  001C96  C07C  F06C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  9161  001C9A  0100               	movlb	0	; () banked
  9162  001C9C  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  9163  001CA0  0100               	movlb	0	; () banked
  9164  001CA2  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  9165  001CA6  0100               	movlb	0	; () banked
  9166  001CA8  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  9167  001CAC  0100               	movlb	0	; () banked
  9168  001CAE  C07A  F06F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  9169  001CB2  ECBB  F006         	call	i2_recv_msg	;wreg free
  9170  001CB6  0012               	return	
  9171  001CB8                     __end_of_FromMainHigh_recvmsg:
  9172                           	opt stack 0
  9173                           pclatu	equ	0xFFB
  9174                           pclath	equ	0xFFA
  9175                           tblptru	equ	0xFF8
  9176                           tblptrh	equ	0xFF7
  9177                           tblptrl	equ	0xFF6
  9178                           tablat	equ	0xFF5
  9179                           prodh	equ	0xFF4
  9180                           prodl	equ	0xFF3
  9181                           intcon	equ	0xFF2
  9182                           postinc0	equ	0xFEE
  9183                           fsr0h	equ	0xFEA
  9184                           fsr0l	equ	0xFE9
  9185                           wreg	equ	0xFE8
  9186                           indf1	equ	0xFE7
  9187                           fsr1h	equ	0xFE2
  9188                           fsr1l	equ	0xFE1
  9189                           bsr	equ	0xFE0
  9190                           indf2	equ	0xFDF
  9191                           postinc2	equ	0xFDE
  9192                           postdec2	equ	0xFDD
  9193                           fsr2h	equ	0xFDA
  9194                           fsr2l	equ	0xFD9
  9195                           status	equ	0xFD8
  9196                           
  9197 ;; *************** function i2_recv_msg *****************
  9198 ;; Defined at:
  9199 ;;		line 63 in file "../src/messages.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9202 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9203 ;;  maxlength       1   12[BANK0 ] unsigned char 
  9204 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  9205 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  9206 ;;		 -> main@msgtype(1), 
  9207 ;;  data            2   15[BANK0 ] PTR void 
  9208 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), main@msgbuffer(15), 
  9209 ;;		 -> main@ic(38), 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  9212 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9213 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9214 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  9215 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      char 
  9218 ;; Registers used:
  9219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9225 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9226 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9228 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9229 ;;Total ram usage:       14 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    1
  9232 ;; This function calls:
  9233 ;;		i2___awmod
  9234 ;;		i2_memcpy
  9235 ;; This function is called by:
  9236 ;;		_FromMainHigh_recvmsg
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text54
  9241  000D76                     __ptext54:
  9242                           	opt stack 0
  9243  000D76                     i2_recv_msg:
  9244                           	opt stack 17
  9245                           
  9246                           ;messages.c: 64: unsigned char slot;
  9247                           ;messages.c: 68: msg *qmsg;
  9248                           ;messages.c: 69: size_t tlength;
  9249                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9250                           
  9251                           ;incstack = 0
  9252  000D76  0100               	movlb	0	; () banked
  9253  000D78  EE20 F056          	lfsr	2,86
  9254  000D7C  0100               	movlb	0	; () banked
  9255  000D7E  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  9256  000D80  26D9               	addwf	fsr2l,f,c
  9257  000D82  0100               	movlb	0	; () banked
  9258  000D84  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9259  000D86  22DA               	addwfc	fsr2h,f,c
  9260  000D88  50DF               	movf	indf2,w,c
  9261  000D8A  0100               	movlb	0	; () banked
  9262  000D8C  6F73               	movwf	i2recv_msg@slot& (0+255),b
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9266  000D8E  0100               	movlb	0	; () banked
  9267  000D90  5173               	movf	i2recv_msg@slot& (0+255),w,b
  9268  000D92  0D11               	mullw	17
  9269  000D94  50F3               	movf	prodl,w,c
  9270  000D96  0100               	movlb	0	; () banked
  9271  000D98  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  9272  000D9A  0100               	movlb	0	; () banked
  9273  000D9C  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  9274  000D9E  50F4               	movf	prodh,w,c
  9275  000DA0  0100               	movlb	0	; () banked
  9276  000DA2  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  9277  000DA4  0100               	movlb	0	; () banked
  9278  000DA6  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;messages.c: 74: if (qmsg->full == 1) {
  9282  000DA8  0E01               	movlw	1
  9283  000DAA  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9284  000DAE  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9285  000DB2  62DF               	cpfseq	indf2,c
  9286  000DB4  D07D               	goto	i2l3715
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9290  000DB6  0100               	movlb	0	; () banked
  9291  000DB8  EE20 F001          	lfsr	2,1
  9292  000DBC  0100               	movlb	0	; () banked
  9293  000DBE  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  9294  000DC0  26D9               	addwf	fsr2l,f,c
  9295  000DC2  0100               	movlb	0	; () banked
  9296  000DC4  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9297  000DC6  22DA               	addwfc	fsr2h,f,c
  9298  000DC8  50DF               	movf	indf2,w,c
  9299  000DCA  0100               	movlb	0	; () banked
  9300  000DCC  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  9301  000DCE  B0D8               	btfsc	status,0,c
  9302  000DD0  D002               	goto	i2l3699
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;messages.c: 77: return (-3);
  9306  000DD2  0EFD               	movlw	253
  9307  000DD4  0012               	return	
  9308  000DD6                     i2l3699:
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;messages.c: 78: }
  9312                           ;messages.c: 80: tlength = qmsg->length;
  9313  000DD6  0100               	movlb	0	; () banked
  9314  000DD8  EE20 F001          	lfsr	2,1
  9315  000DDC  0100               	movlb	0	; () banked
  9316  000DDE  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  9317  000DE0  26D9               	addwf	fsr2l,f,c
  9318  000DE2  0100               	movlb	0	; () banked
  9319  000DE4  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9320  000DE6  22DA               	addwfc	fsr2h,f,c
  9321  000DE8  50DF               	movf	indf2,w,c
  9322  000DEA  0100               	movlb	0	; () banked
  9323  000DEC  6F71               	movwf	??i2_recv_msg& (0+255),b
  9324  000DEE  0100               	movlb	0	; () banked
  9325  000DF0  5171               	movf	??i2_recv_msg& (0+255),w,b
  9326  000DF2  0100               	movlb	0	; () banked
  9327  000DF4  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  9328  000DF6  0100               	movlb	0	; () banked
  9329  000DF8  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9333  000DFA  0100               	movlb	0	; () banked
  9334  000DFC  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  9335  000E00  0100               	movlb	0	; () banked
  9336  000E02  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  9337  000E06  0E03               	movlw	3
  9338  000E08  0100               	movlb	0	; () banked
  9339  000E0A  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  9340  000E0C  0100               	movlb	0	; () banked
  9341  000E0E  6F71               	movwf	??i2_recv_msg& (0+255),b
  9342  000E10  0E00               	movlw	0
  9343  000E12  0100               	movlb	0	; () banked
  9344  000E14  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  9345  000E16  0100               	movlb	0	; () banked
  9346  000E18  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  9347  000E1A  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  9348  000E1E  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  9349  000E22  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  9350  000E26  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  9351  000E2A  EC60  F00D         	call	i2_memcpy	;wreg free
  9352                           
  9353                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  9354  000E2E  0100               	movlb	0	; () banked
  9355  000E30  EE20 F056          	lfsr	2,86
  9356  000E34  0100               	movlb	0	; () banked
  9357  000E36  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  9358  000E38  26D9               	addwf	fsr2l,f,c
  9359  000E3A  0100               	movlb	0	; () banked
  9360  000E3C  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9361  000E3E  22DA               	addwfc	fsr2h,f,c
  9362  000E40  0100               	movlb	0	; () banked
  9363  000E42  EE10 F056          	lfsr	1,86
  9364  000E46  0100               	movlb	0	; () banked
  9365  000E48  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  9366  000E4A  26E1               	addwf	fsr1l,f,c
  9367  000E4C  0100               	movlb	0	; () banked
  9368  000E4E  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9369  000E50  22E2               	addwfc	fsr1h,f,c
  9370  000E52  50E7               	movf	indf1,w,c
  9371  000E54  0100               	movlb	0	; () banked
  9372  000E56  6F71               	movwf	??i2_recv_msg& (0+255),b
  9373  000E58  0E01               	movlw	1
  9374  000E5A  0100               	movlb	0	; () banked
  9375  000E5C  2571               	addwf	??i2_recv_msg& (0+255),w,b
  9376  000E5E  0100               	movlb	0	; () banked
  9377  000E60  6F60               	movwf	i2___awmod@dividend& (0+255),b
  9378  000E62  0100               	movlb	0	; () banked
  9379  000E64  6B61               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9380  000E66  0E00               	movlw	0
  9381  000E68  2361               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9382  000E6A  0E00               	movlw	0
  9383  000E6C  0100               	movlb	0	; () banked
  9384  000E6E  6F63               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9385  000E70  0E05               	movlw	5
  9386  000E72  0100               	movlb	0	; () banked
  9387  000E74  6F62               	movwf	i2___awmod@divisor& (0+255),b
  9388  000E76  EC14  F00A         	call	i2___awmod	;wreg free
  9389  000E7A  0100               	movlb	0	; () banked
  9390  000E7C  5160               	movf	?i2___awmod& (0+255),w,b
  9391  000E7E  6EDF               	movwf	indf2,c
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9395  000E80  0100               	movlb	0	; () banked
  9396  000E82  EE20 F002          	lfsr	2,2
  9397  000E86  0100               	movlb	0	; () banked
  9398  000E88  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  9399  000E8A  26D9               	addwf	fsr2l,f,c
  9400  000E8C  0100               	movlb	0	; () banked
  9401  000E8E  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9402  000E90  22DA               	addwfc	fsr2h,f,c
  9403  000E92  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9404  000E96  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9405  000E9A  CFDF FFE7          	movff	indf2,indf1
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;messages.c: 91: qmsg->full = 0;
  9409  000E9E  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9410  000EA2  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9411  000EA6  0E00               	movlw	0
  9412  000EA8  6EDF               	movwf	indf2,c
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;messages.c: 92: return (tlength);
  9416  000EAA  0100               	movlb	0	; () banked
  9417  000EAC  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  9418  000EAE  0012               	return	
  9419  000EB0                     i2l3715:
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;messages.c: 94: return (-4);
  9423  000EB0  0EFC               	movlw	252
  9424  000EB2  0012               	return	
  9425  000EB4                     __end_ofi2_recv_msg:
  9426                           	opt stack 0
  9427                           pclatu	equ	0xFFB
  9428                           pclath	equ	0xFFA
  9429                           tblptru	equ	0xFF8
  9430                           tblptrh	equ	0xFF7
  9431                           tblptrl	equ	0xFF6
  9432                           tablat	equ	0xFF5
  9433                           prodh	equ	0xFF4
  9434                           prodl	equ	0xFF3
  9435                           intcon	equ	0xFF2
  9436                           postinc0	equ	0xFEE
  9437                           fsr0h	equ	0xFEA
  9438                           fsr0l	equ	0xFE9
  9439                           wreg	equ	0xFE8
  9440                           indf1	equ	0xFE7
  9441                           fsr1h	equ	0xFE2
  9442                           fsr1l	equ	0xFE1
  9443                           bsr	equ	0xFE0
  9444                           indf2	equ	0xFDF
  9445                           postinc2	equ	0xFDE
  9446                           postdec2	equ	0xFDD
  9447                           fsr2h	equ	0xFDA
  9448                           fsr2l	equ	0xFD9
  9449                           status	equ	0xFD8
  9450                           
  9451 ;; *************** function i2_memcpy *****************
  9452 ;; Defined at:
  9453 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  d1              2    0[BANK0 ] PTR void 
  9456 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9457 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  9458 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9459 ;;		 -> main@ic(38), 
  9460 ;;  s1              2    2[BANK0 ] PTR const void 
  9461 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9462 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9463 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  9464 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  9465 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  9466 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  9467 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9468 ;;  n               2    4[BANK0 ] unsigned int 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9471 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9472 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9473 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_message(3), 
  9474 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  9475 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  9476 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@msgbuffer(15), main@sensor_data(14), 
  9477 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9478 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9479 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9480 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  9481 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9482 ;;		 -> main@ic(38), 
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  2    0[BANK0 ] PTR void 
  9485 ;; Registers used:
  9486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9492 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9493 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9495 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9496 ;;Total ram usage:       10 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; This function calls:
  9499 ;;		Nothing
  9500 ;; This function is called by:
  9501 ;;		i2_send_msg
  9502 ;;		i2_recv_msg
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text55
  9507  001AC0                     __ptext55:
  9508                           	opt stack 0
  9509  001AC0                     i2_memcpy:
  9510                           	opt stack 17
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;incstack = 0
  9514  001AC0  0100               	movlb	0	; () banked
  9515  001AC2  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9516  001AC6  0100               	movlb	0	; () banked
  9517  001AC8  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  9518  001ACC  0100               	movlb	0	; () banked
  9519  001ACE  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9520  001AD2  0100               	movlb	0	; () banked
  9521  001AD4  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  9522  001AD8  D010               	goto	i2l2435
  9523  001ADA                     i2l2429:
  9524                           
  9525                           ; BSR set to: 0
  9526  001ADA  C068  FFD9         	movff	i2memcpy@s,fsr2l
  9527  001ADE  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  9528  001AE2  C066  FFE1         	movff	i2memcpy@d,fsr1l
  9529  001AE6  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  9530  001AEA  CFDF FFE7          	movff	indf2,indf1
  9531                           
  9532                           ; BSR set to: 0
  9533  001AEE  0100               	movlb	0	; () banked
  9534  001AF0  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  9535  001AF2  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  9536                           
  9537                           ; BSR set to: 0
  9538  001AF4  0100               	movlb	0	; () banked
  9539  001AF6  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  9540  001AF8  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  9541  001AFA                     i2l2435:
  9542                           
  9543                           ; BSR set to: 0
  9544  001AFA  0100               	movlb	0	; () banked
  9545  001AFC  0764               	decf	i2memcpy@n& (0+255),f,b
  9546  001AFE  A0D8               	btfss	status,0,c
  9547  001B00  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  9548  001B02  0100               	movlb	0	; () banked
  9549  001B04  2964               	incf	i2memcpy@n& (0+255),w,b
  9550  001B06  B4D8               	btfsc	status,2,c
  9551  001B08  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  9552  001B0A  B4D8               	btfsc	status,2,c
  9553                           
  9554                           ; BSR set to: 0
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;	Return value of i2_memcpy is never used
  9558  001B0C  0012               	return	
  9559  001B0E  D7E5               	goto	i2l2429
  9560  001B10                     __end_ofi2_memcpy:
  9561                           	opt stack 0
  9562                           pclatu	equ	0xFFB
  9563                           pclath	equ	0xFFA
  9564                           tblptru	equ	0xFF8
  9565                           tblptrh	equ	0xFF7
  9566                           tblptrl	equ	0xFF6
  9567                           tablat	equ	0xFF5
  9568                           prodh	equ	0xFF4
  9569                           prodl	equ	0xFF3
  9570                           intcon	equ	0xFF2
  9571                           postinc0	equ	0xFEE
  9572                           fsr0h	equ	0xFEA
  9573                           fsr0l	equ	0xFE9
  9574                           wreg	equ	0xFE8
  9575                           indf1	equ	0xFE7
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           bsr	equ	0xFE0
  9579                           indf2	equ	0xFDF
  9580                           postinc2	equ	0xFDE
  9581                           postdec2	equ	0xFDD
  9582                           fsr2h	equ	0xFDA
  9583                           fsr2l	equ	0xFD9
  9584                           status	equ	0xFD8
  9585                           
  9586 ;; *************** function i2___awmod *****************
  9587 ;; Defined at:
  9588 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  dividend        2    0[BANK0 ] int 
  9591 ;;  divisor         2    2[BANK0 ] int 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9594 ;;  __awmod         1    4[BANK0 ] unsigned char 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  2    0[BANK0 ] int 
  9597 ;; Registers used:
  9598 ;;		wreg, status,2, status,0, prodl
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9605 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9608 ;;Total ram usage:        6 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; This function calls:
  9611 ;;		Nothing
  9612 ;; This function is called by:
  9613 ;;		i2_send_msg
  9614 ;;		i2_recv_msg
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text56
  9619  001428                     __ptext56:
  9620                           	opt stack 0
  9621  001428                     i2___awmod:
  9622                           	opt stack 17
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;incstack = 0
  9626  001428  0E00               	movlw	0
  9627  00142A  0100               	movlb	0	; () banked
  9628  00142C  6F65               	movwf	i2___awmod@sign& (0+255),b
  9629                           
  9630                           ; BSR set to: 0
  9631  00142E  0100               	movlb	0	; () banked
  9632  001430  5161               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9633  001432  0A80               	xorlw	128
  9634  001434  6EF3               	movwf	prodl,c
  9635  001436  0E80               	movlw	128
  9636  001438  5CF3               	subwf	prodl,w,c
  9637  00143A  0E00               	movlw	0
  9638  00143C  B4D8               	btfsc	status,2,c
  9639  00143E  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  9640  001440  B0D8               	btfsc	status,0,c
  9641  001442  D009               	goto	i2l2481
  9642                           
  9643                           ; BSR set to: 0
  9644  001444  0100               	movlb	0	; () banked
  9645  001446  6D60               	negf	i2___awmod@dividend& (0+255),b
  9646  001448  0100               	movlb	0	; () banked
  9647  00144A  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9648  00144C  B0D8               	btfsc	status,0,c
  9649  00144E  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9650                           
  9651                           ; BSR set to: 0
  9652  001450  0E01               	movlw	1
  9653  001452  0100               	movlb	0	; () banked
  9654  001454  6F65               	movwf	i2___awmod@sign& (0+255),b
  9655  001456                     i2l2481:
  9656                           
  9657                           ; BSR set to: 0
  9658  001456  0100               	movlb	0	; () banked
  9659  001458  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9660  00145A  0A80               	xorlw	128
  9661  00145C  6EF3               	movwf	prodl,c
  9662  00145E  0E80               	movlw	128
  9663  001460  5CF3               	subwf	prodl,w,c
  9664  001462  0E00               	movlw	0
  9665  001464  B4D8               	btfsc	status,2,c
  9666  001466  5D62               	subwf	i2___awmod@divisor& (0+255),w,b
  9667  001468  B0D8               	btfsc	status,0,c
  9668  00146A  D006               	goto	i2l2485
  9669                           
  9670                           ; BSR set to: 0
  9671  00146C  0100               	movlb	0	; () banked
  9672  00146E  6D62               	negf	i2___awmod@divisor& (0+255),b
  9673  001470  0100               	movlb	0	; () banked
  9674  001472  1F63               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9675  001474  B0D8               	btfsc	status,0,c
  9676  001476  2B63               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9677  001478                     i2l2485:
  9678                           
  9679                           ; BSR set to: 0
  9680  001478  0100               	movlb	0	; () banked
  9681  00147A  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9682  00147C  1162               	iorwf	i2___awmod@divisor& (0+255),w,b
  9683  00147E  B4D8               	btfsc	status,2,c
  9684  001480  D026               	goto	i2l2501
  9685                           
  9686                           ; BSR set to: 0
  9687  001482  0E01               	movlw	1
  9688  001484  0100               	movlb	0	; () banked
  9689  001486  6F64               	movwf	i2___awmod@counter& (0+255),b
  9690  001488  D006               	goto	i2l2491
  9691  00148A                     i2l2489:
  9692                           
  9693                           ; BSR set to: 0
  9694  00148A  0100               	movlb	0	; () banked
  9695  00148C  90D8               	bcf	status,0,c
  9696  00148E  3762               	rlcf	i2___awmod@divisor& (0+255),f,b
  9697  001490  3763               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9698  001492  0100               	movlb	0	; () banked
  9699  001494  2B64               	incf	i2___awmod@counter& (0+255),f,b
  9700  001496                     i2l2491:
  9701                           
  9702                           ; BSR set to: 0
  9703  001496  0100               	movlb	0	; () banked
  9704  001498  AF63               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9705  00149A  D7F7               	goto	i2l2489
  9706  00149C                     i2l2493:
  9707                           
  9708                           ; BSR set to: 0
  9709  00149C  0100               	movlb	0	; () banked
  9710  00149E  5162               	movf	i2___awmod@divisor& (0+255),w,b
  9711  0014A0  0100               	movlb	0	; () banked
  9712  0014A2  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  9713  0014A4  0100               	movlb	0	; () banked
  9714  0014A6  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9715  0014A8  0100               	movlb	0	; () banked
  9716  0014AA  5961               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9717  0014AC  A0D8               	btfss	status,0,c
  9718  0014AE  D008               	goto	i2l2497
  9719                           
  9720                           ; BSR set to: 0
  9721  0014B0  0100               	movlb	0	; () banked
  9722  0014B2  5162               	movf	i2___awmod@divisor& (0+255),w,b
  9723  0014B4  0100               	movlb	0	; () banked
  9724  0014B6  5F60               	subwf	i2___awmod@dividend& (0+255),f,b
  9725  0014B8  0100               	movlb	0	; () banked
  9726  0014BA  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9727  0014BC  0100               	movlb	0	; () banked
  9728  0014BE  5B61               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9729  0014C0                     i2l2497:
  9730                           
  9731                           ; BSR set to: 0
  9732  0014C0  0100               	movlb	0	; () banked
  9733  0014C2  90D8               	bcf	status,0,c
  9734  0014C4  3363               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9735  0014C6  3362               	rrcf	i2___awmod@divisor& (0+255),f,b
  9736                           
  9737                           ; BSR set to: 0
  9738  0014C8  0100               	movlb	0	; () banked
  9739  0014CA  2F64               	decfsz	i2___awmod@counter& (0+255),f,b
  9740  0014CC  D7E7               	goto	i2l2493
  9741  0014CE                     i2l2501:
  9742                           
  9743                           ; BSR set to: 0
  9744  0014CE  0100               	movlb	0	; () banked
  9745  0014D0  5165               	movf	i2___awmod@sign& (0+255),w,b
  9746  0014D2  B4D8               	btfsc	status,2,c
  9747  0014D4  D006               	goto	i2l2505
  9748                           
  9749                           ; BSR set to: 0
  9750  0014D6  0100               	movlb	0	; () banked
  9751  0014D8  6D60               	negf	i2___awmod@dividend& (0+255),b
  9752  0014DA  0100               	movlb	0	; () banked
  9753  0014DC  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9754  0014DE  B0D8               	btfsc	status,0,c
  9755  0014E0  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9756  0014E2                     i2l2505:
  9757                           
  9758                           ; BSR set to: 0
  9759  0014E2  C060  F060         	movff	i2___awmod@dividend,?i2___awmod
  9760  0014E6  C061  F061         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9761  0014EA  0012               	return	
  9762  0014EC                     __end_ofi2___awmod:
  9763                           	opt stack 0
  9764                           pclatu	equ	0xFFB
  9765                           pclath	equ	0xFFA
  9766                           tblptru	equ	0xFF8
  9767                           tblptrh	equ	0xFF7
  9768                           tblptrl	equ	0xFF6
  9769                           tablat	equ	0xFF5
  9770                           prodh	equ	0xFF4
  9771                           prodl	equ	0xFF3
  9772                           intcon	equ	0xFF2
  9773                           postinc0	equ	0xFEE
  9774                           fsr0h	equ	0xFEA
  9775                           fsr0l	equ	0xFE9
  9776                           wreg	equ	0xFE8
  9777                           indf1	equ	0xFE7
  9778                           fsr1h	equ	0xFE2
  9779                           fsr1l	equ	0xFE1
  9780                           bsr	equ	0xFE0
  9781                           indf2	equ	0xFDF
  9782                           postinc2	equ	0xFDE
  9783                           postdec2	equ	0xFDD
  9784                           fsr2h	equ	0xFDA
  9785                           fsr2l	equ	0xFD9
  9786                           status	equ	0xFD8
  9787                           
  9788 ;; *************** function _SleepIfOkay *****************
  9789 ;; Defined at:
  9790 ;;		line 226 in file "../src/messages.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;		None
  9793 ;; Auto vars:     Size  Location     Type
  9794 ;;		None
  9795 ;; Return value:  Size  Location     Type
  9796 ;;		None               void
  9797 ;; Registers used:
  9798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9808 ;;Total ram usage:        0 bytes
  9809 ;; Hardware stack levels used:    1
  9810 ;; Hardware stack levels required when called:    2
  9811 ;; This function calls:
  9812 ;;		_check_msg
  9813 ;;		_enter_sleep_mode
  9814 ;;		_in_high_int
  9815 ;;		_in_low_int
  9816 ;; This function is called by:
  9817 ;;		_InterruptHandlerHigh
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text57
  9822  001958                     __ptext57:
  9823                           	opt stack 0
  9824  001958                     _SleepIfOkay:
  9825                           	opt stack 18
  9826                           
  9827                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;incstack = 0
  9831  001958  0100               	movlb	0	; () banked
  9832  00195A  67B3               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9833  00195C  D001               	goto	i2l3027
  9834  00195E  0012               	return	
  9835  001960                     i2l3027:
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;messages.c: 230: }
  9839                           ;messages.c: 233: if (in_low_int()) {
  9840  001960  ECCE  F00D         	call	_in_low_int	;wreg free
  9841  001964  0100               	movlb	0	; () banked
  9842  001966  5163               	movf	(?_in_low_int+1)& (0+255),w,b
  9843  001968  0100               	movlb	0	; () banked
  9844  00196A  1162               	iorwf	?_in_low_int& (0+255),w,b
  9845  00196C  A4D8               	btfss	status,2,c
  9846  00196E  0012               	return	
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;messages.c: 235: }
  9850                           ;messages.c: 238: if (!in_high_int()) {
  9851                           
  9852                           ; BSR set to: 0
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;messages.c: 234: return;
  9856  001970  EC6A  F00F         	call	_in_high_int	;wreg free
  9857  001974  0100               	movlb	0	; () banked
  9858  001976  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9859  001978  0100               	movlb	0	; () banked
  9860  00197A  1160               	iorwf	?_in_high_int& (0+255),w,b
  9861  00197C  B4D8               	btfsc	status,2,c
  9862  00197E  0012               	return	
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;messages.c: 240: }
  9866                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9867                           
  9868                           ; BSR set to: 0
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;messages.c: 239: return;
  9872  001980  0102               	movlb	2	; () banked
  9873  001982  0E02               	movlw	high _ToMainHigh_MQ
  9874  001984  0100               	movlb	0	; () banked
  9875  001986  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9876  001988  0102               	movlb	2	; () banked
  9877  00198A  0E57               	movlw	low _ToMainHigh_MQ
  9878  00198C  0100               	movlb	0	; () banked
  9879  00198E  6F60               	movwf	check_msg@qptr& (0+255),b
  9880  001990  EC5C  F00E         	call	_check_msg	;wreg free
  9881  001994  0900               	iorlw	0
  9882  001996  A4D8               	btfss	status,2,c
  9883  001998  0012               	return	
  9884                           
  9885                           ;messages.c: 247: }
  9886                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9887                           
  9888                           ;messages.c: 246: return;
  9889  00199A  0101               	movlb	1	; () banked
  9890  00199C  0E01               	movlw	high _ToMainLow_MQ
  9891  00199E  0100               	movlb	0	; () banked
  9892  0019A0  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9893  0019A2  0101               	movlb	1	; () banked
  9894  0019A4  0E81               	movlw	low _ToMainLow_MQ
  9895  0019A6  0100               	movlb	0	; () banked
  9896  0019A8  6F60               	movwf	check_msg@qptr& (0+255),b
  9897  0019AA  EC5C  F00E         	call	_check_msg	;wreg free
  9898  0019AE  0900               	iorlw	0
  9899  0019B0  B4D8               	btfsc	status,2,c
  9900                           
  9901                           ;messages.c: 250: }
  9902                           ;messages.c: 251: enter_sleep_mode();
  9903                           
  9904                           ;messages.c: 249: return;
  9905  0019B2  EC9B  F00F         	call	_enter_sleep_mode	;wreg free
  9906  0019B6  0012               	return	
  9907  0019B8                     __end_of_SleepIfOkay:
  9908                           	opt stack 0
  9909                           pclatu	equ	0xFFB
  9910                           pclath	equ	0xFFA
  9911                           tblptru	equ	0xFF8
  9912                           tblptrh	equ	0xFF7
  9913                           tblptrl	equ	0xFF6
  9914                           tablat	equ	0xFF5
  9915                           prodh	equ	0xFF4
  9916                           prodl	equ	0xFF3
  9917                           intcon	equ	0xFF2
  9918                           postinc0	equ	0xFEE
  9919                           fsr0h	equ	0xFEA
  9920                           fsr0l	equ	0xFE9
  9921                           wreg	equ	0xFE8
  9922                           indf1	equ	0xFE7
  9923                           fsr1h	equ	0xFE2
  9924                           fsr1l	equ	0xFE1
  9925                           bsr	equ	0xFE0
  9926                           indf2	equ	0xFDF
  9927                           postinc2	equ	0xFDE
  9928                           postdec2	equ	0xFDD
  9929                           fsr2h	equ	0xFDA
  9930                           fsr2l	equ	0xFD9
  9931                           status	equ	0xFD8
  9932                           
  9933 ;; *************** function _in_low_int *****************
  9934 ;; Defined at:
  9935 ;;		line 33 in file "../src/interrupts.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;		None
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;		None
  9940 ;; Return value:  Size  Location     Type
  9941 ;;                  2    2[BANK0 ] int 
  9942 ;; Registers used:
  9943 ;;		wreg, status,2, status,0, cstack
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9952 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9953 ;;Total ram usage:        2 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; Hardware stack levels required when called:    1
  9956 ;; This function calls:
  9957 ;;		_in_high_int
  9958 ;; This function is called by:
  9959 ;;		_SleepIfOkay
  9960 ;;		_in_main
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           	psect	text58
  9965  001B9C                     __ptext58:
  9966                           	opt stack 0
  9967  001B9C                     _in_low_int:
  9968                           	opt stack 18
  9969                           
  9970                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9971                           
  9972                           ;incstack = 0
  9973  001B9C  ACF2               	btfss	intcon,6,c	;volatile
  9974  001B9E  D007               	goto	i2l2657
  9975                           
  9976                           ;interrupts.c: 35: return (0);
  9977  001BA0  0E00               	movlw	0
  9978  001BA2  0100               	movlb	0	; () banked
  9979  001BA4  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9980  001BA6  0E00               	movlw	0
  9981  001BA8  0100               	movlb	0	; () banked
  9982  001BAA  6F62               	movwf	?_in_low_int& (0+255),b
  9983  001BAC  0012               	return	
  9984  001BAE                     i2l2657:
  9985  001BAE  EC6A  F00F         	call	_in_high_int	;wreg free
  9986  001BB2  0100               	movlb	0	; () banked
  9987  001BB4  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9988  001BB6  0100               	movlb	0	; () banked
  9989  001BB8  1160               	iorwf	?_in_high_int& (0+255),w,b
  9990  001BBA  B4D8               	btfsc	status,2,c
  9991  001BBC  D007               	goto	i2l2665
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;interrupts.c: 37: return (0);
  9995  001BBE  0E00               	movlw	0
  9996  001BC0  0100               	movlb	0	; () banked
  9997  001BC2  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9998  001BC4  0E00               	movlw	0
  9999  001BC6  0100               	movlb	0	; () banked
 10000  001BC8  6F62               	movwf	?_in_low_int& (0+255),b
 10001  001BCA  0012               	return	
 10002  001BCC                     i2l2665:
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;interrupts.c: 39: return (1);
 10006  001BCC  0E00               	movlw	0
 10007  001BCE  0100               	movlb	0	; () banked
 10008  001BD0  6F63               	movwf	(?_in_low_int+1)& (0+255),b
 10009  001BD2  0E01               	movlw	1
 10010  001BD4  0100               	movlb	0	; () banked
 10011  001BD6  6F62               	movwf	?_in_low_int& (0+255),b
 10012  001BD8  0012               	return	
 10013  001BDA                     __end_of_in_low_int:
 10014                           	opt stack 0
 10015                           pclatu	equ	0xFFB
 10016                           pclath	equ	0xFFA
 10017                           tblptru	equ	0xFF8
 10018                           tblptrh	equ	0xFF7
 10019                           tblptrl	equ	0xFF6
 10020                           tablat	equ	0xFF5
 10021                           prodh	equ	0xFF4
 10022                           prodl	equ	0xFF3
 10023                           intcon	equ	0xFF2
 10024                           postinc0	equ	0xFEE
 10025                           fsr0h	equ	0xFEA
 10026                           fsr0l	equ	0xFE9
 10027                           wreg	equ	0xFE8
 10028                           indf1	equ	0xFE7
 10029                           fsr1h	equ	0xFE2
 10030                           fsr1l	equ	0xFE1
 10031                           bsr	equ	0xFE0
 10032                           indf2	equ	0xFDF
 10033                           postinc2	equ	0xFDE
 10034                           postdec2	equ	0xFDD
 10035                           fsr2h	equ	0xFDA
 10036                           fsr2l	equ	0xFD9
 10037                           status	equ	0xFD8
 10038                           
 10039 ;; *************** function _in_high_int *****************
 10040 ;; Defined at:
 10041 ;;		line 25 in file "../src/interrupts.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;		None
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;		None
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  2    0[BANK0 ] int 
 10048 ;; Registers used:
 10049 ;;		wreg, status,2
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10058 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10059 ;;Total ram usage:        2 bytes
 10060 ;; Hardware stack levels used:    1
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_in_low_int
 10065 ;;		_SleepIfOkay
 10066 ;;		_in_main
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           	psect	text59
 10071  001ED4                     __ptext59:
 10072                           	opt stack 0
 10073  001ED4                     _in_high_int:
 10074                           	opt stack 18
 10075                           
 10076                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;incstack = 0
 10080  001ED4  0E00               	movlw	0
 10081  001ED6  AEF2               	btfss	intcon,7,c	;volatile
 10082  001ED8  0E01               	movlw	1
 10083  001EDA  0100               	movlb	0	; () banked
 10084  001EDC  6F60               	movwf	?_in_high_int& (0+255),b
 10085  001EDE  0100               	movlb	0	; () banked
 10086  001EE0  6B61               	clrf	(?_in_high_int+1)& (0+255),b
 10087  001EE2  0012               	return	
 10088  001EE4                     __end_of_in_high_int:
 10089                           	opt stack 0
 10090                           pclatu	equ	0xFFB
 10091                           pclath	equ	0xFFA
 10092                           tblptru	equ	0xFF8
 10093                           tblptrh	equ	0xFF7
 10094                           tblptrl	equ	0xFF6
 10095                           tablat	equ	0xFF5
 10096                           prodh	equ	0xFF4
 10097                           prodl	equ	0xFF3
 10098                           intcon	equ	0xFF2
 10099                           postinc0	equ	0xFEE
 10100                           fsr0h	equ	0xFEA
 10101                           fsr0l	equ	0xFE9
 10102                           wreg	equ	0xFE8
 10103                           indf1	equ	0xFE7
 10104                           fsr1h	equ	0xFE2
 10105                           fsr1l	equ	0xFE1
 10106                           bsr	equ	0xFE0
 10107                           indf2	equ	0xFDF
 10108                           postinc2	equ	0xFDE
 10109                           postdec2	equ	0xFDD
 10110                           fsr2h	equ	0xFDA
 10111                           fsr2l	equ	0xFD9
 10112                           status	equ	0xFD8
 10113                           
 10114 ;; *************** function _enter_sleep_mode *****************
 10115 ;; Defined at:
 10116 ;;		line 202 in file "../src/messages.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;		None
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;		None
 10121 ;; Return value:  Size  Location     Type
 10122 ;;		None               void
 10123 ;; Registers used:
 10124 ;;		None
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/0
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10134 ;;Total ram usage:        0 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_SleepIfOkay
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           	psect	text60
 10144  001F36                     __ptext60:
 10145                           	opt stack 0
 10146  001F36                     _enter_sleep_mode:
 10147                           	opt stack 19
 10148                           
 10149                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;incstack = 0
 10153  001F36  8ED3               	bsf	4051,7,c	;volatile
 10154  001F38  0003               	sleep		;# 
 10155  001F3A  0012               	return	
 10156  001F3C                     __end_of_enter_sleep_mode:
 10157                           	opt stack 0
 10158                           pclatu	equ	0xFFB
 10159                           pclath	equ	0xFFA
 10160                           tblptru	equ	0xFF8
 10161                           tblptrh	equ	0xFF7
 10162                           tblptrl	equ	0xFF6
 10163                           tablat	equ	0xFF5
 10164                           prodh	equ	0xFF4
 10165                           prodl	equ	0xFF3
 10166                           intcon	equ	0xFF2
 10167                           postinc0	equ	0xFEE
 10168                           fsr0h	equ	0xFEA
 10169                           fsr0l	equ	0xFE9
 10170                           wreg	equ	0xFE8
 10171                           indf1	equ	0xFE7
 10172                           fsr1h	equ	0xFE2
 10173                           fsr1l	equ	0xFE1
 10174                           bsr	equ	0xFE0
 10175                           indf2	equ	0xFDF
 10176                           postinc2	equ	0xFDE
 10177                           postdec2	equ	0xFDD
 10178                           fsr2h	equ	0xFDA
 10179                           fsr2l	equ	0xFD9
 10180                           status	equ	0xFD8
 10181                           
 10182 ;; *************** function _check_msg *****************
 10183 ;; Defined at:
 10184 ;;		line 220 in file "../src/messages.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 10187 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;		None
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  1    wreg      unsigned char 
 10192 ;; Registers used:
 10193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10194 ;; Tracked objects:
 10195 ;;		On entry : 0/0
 10196 ;;		On exit  : 0/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10201 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10202 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10203 ;;Total ram usage:        3 bytes
 10204 ;; Hardware stack levels used:    1
 10205 ;; This function calls:
 10206 ;;		Nothing
 10207 ;; This function is called by:
 10208 ;;		_SleepIfOkay
 10209 ;;		_block_on_To_msgqueues
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           	psect	text61
 10214  001CB8                     __ptext61:
 10215                           	opt stack 0
 10216  001CB8                     _check_msg:
 10217                           	opt stack 19
 10218                           
 10219                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
 10220                           
 10221                           ;incstack = 0
 10222  001CB8  0100               	movlb	0	; () banked
 10223  001CBA  EE20 F056          	lfsr	2,86
 10224  001CBE  0100               	movlb	0	; () banked
 10225  001CC0  5160               	movf	check_msg@qptr& (0+255),w,b
 10226  001CC2  26D9               	addwf	fsr2l,f,c
 10227  001CC4  0100               	movlb	0	; () banked
 10228  001CC6  5161               	movf	(check_msg@qptr+1)& (0+255),w,b
 10229  001CC8  22DA               	addwfc	fsr2h,f,c
 10230  001CCA  50DF               	movf	indf2,w,c
 10231  001CCC  0100               	movlb	0	; () banked
 10232  001CCE  6F62               	movwf	??_check_msg& (0+255),b
 10233  001CD0  0100               	movlb	0	; () banked
 10234  001CD2  5162               	movf	??_check_msg& (0+255),w,b
 10235  001CD4  0D11               	mullw	17
 10236  001CD6  50F3               	movf	prodl,w,c
 10237  001CD8  0100               	movlb	0	; () banked
 10238  001CDA  2560               	addwf	check_msg@qptr& (0+255),w,b
 10239  001CDC  6ED9               	movwf	fsr2l,c
 10240  001CDE  50F4               	movf	prodh,w,c
 10241  001CE0  0100               	movlb	0	; () banked
 10242  001CE2  2161               	addwfc	(check_msg@qptr+1)& (0+255),w,b
 10243  001CE4  6EDA               	movwf	fsr2h,c
 10244  001CE6  50DF               	movf	indf2,w,c
 10245  001CE8  0012               	return	
 10246  001CEA                     __end_of_check_msg:
 10247                           	opt stack 0
 10248  0000                     pclatu	equ	0xFFB
 10249                           pclath	equ	0xFFA
 10250                           tblptru	equ	0xFF8
 10251                           tblptrh	equ	0xFF7
 10252                           tblptrl	equ	0xFF6
 10253                           tablat	equ	0xFF5
 10254                           prodh	equ	0xFF4
 10255                           prodl	equ	0xFF3
 10256                           intcon	equ	0xFF2
 10257                           postinc0	equ	0xFEE
 10258                           fsr0h	equ	0xFEA
 10259                           fsr0l	equ	0xFE9
 10260                           wreg	equ	0xFE8
 10261                           indf1	equ	0xFE7
 10262                           fsr1h	equ	0xFE2
 10263                           fsr1l	equ	0xFE1
 10264                           bsr	equ	0xFE0
 10265                           indf2	equ	0xFDF
 10266                           postinc2	equ	0xFDE
 10267                           postdec2	equ	0xFDD
 10268                           fsr2h	equ	0xFDA
 10269                           fsr2l	equ	0xFD9
 10270                           status	equ	0xFD8
 10271                           pclatu	equ	0xFFB
 10272                           pclath	equ	0xFFA
 10273                           tblptru	equ	0xFF8
 10274                           tblptrh	equ	0xFF7
 10275                           tblptrl	equ	0xFF6
 10276                           tablat	equ	0xFF5
 10277                           prodh	equ	0xFF4
 10278                           prodl	equ	0xFF3
 10279                           intcon	equ	0xFF2
 10280                           postinc0	equ	0xFEE
 10281                           fsr0h	equ	0xFEA
 10282                           fsr0l	equ	0xFE9
 10283                           wreg	equ	0xFE8
 10284                           indf1	equ	0xFE7
 10285                           fsr1h	equ	0xFE2
 10286                           fsr1l	equ	0xFE1
 10287                           bsr	equ	0xFE0
 10288                           indf2	equ	0xFDF
 10289                           postinc2	equ	0xFDE
 10290                           postdec2	equ	0xFDD
 10291                           fsr2h	equ	0xFDA
 10292                           fsr2l	equ	0xFD9
 10293                           status	equ	0xFD8
 10294                           
 10295                           	psect	param0
 10296  0000                     pclatu	equ	0xFFB
 10297                           pclath	equ	0xFFA
 10298                           tblptru	equ	0xFF8
 10299                           tblptrh	equ	0xFF7
 10300                           tblptrl	equ	0xFF6
 10301                           tablat	equ	0xFF5
 10302                           prodh	equ	0xFF4
 10303                           prodl	equ	0xFF3
 10304                           intcon	equ	0xFF2
 10305                           postinc0	equ	0xFEE
 10306                           fsr0h	equ	0xFEA
 10307                           fsr0l	equ	0xFE9
 10308                           wreg	equ	0xFE8
 10309                           indf1	equ	0xFE7
 10310                           fsr1h	equ	0xFE2
 10311                           fsr1l	equ	0xFE1
 10312                           bsr	equ	0xFE0
 10313                           indf2	equ	0xFDF
 10314                           postinc2	equ	0xFDE
 10315                           postdec2	equ	0xFDD
 10316                           fsr2h	equ	0xFDA
 10317                           fsr2l	equ	0xFD9
 10318                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         394
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      83
    BANK0           160     65     104
    BANK1           256    129     216
    BANK2           256      0     174
    BANK3           256      0      87
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@msgbuffer(BANK1[15]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@msgbuffer(BANK1[15]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    uart_frame_message@inner	PTR unsigned char  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    uart_frame_message@outer	PTR unsigned char  size(2) Largest target is 18
		 -> uart_transmit_interrupt_handler@message(BANK0[18]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 15
		 -> main@uart_response(BANK1[14]), main@msgbuffer(BANK1[15]), main@sensor_data(BANK1[14]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 15
		 -> main@uart_response(BANK1[14]), main@msgbuffer(BANK1[15]), main@sensor_data(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@msgbuffer(BANK1[15]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_send_uart_message
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->___awmod
    _send_msg->_memcpy
    _init_queues->_init_queue
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->___awmod
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               106   106      0   15030
                                             26 BANK1    103   103      0
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                              _blip4
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3256
                                             64 BANK0      1     1      0
                                             18 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     211
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2658
                                             63 BANK0      1     1      0
                                             15 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                             56 BANK0      8     0      8
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _send_uart_message                                    3     1      2    3147
                                             64 BANK0      1     1      0
                                             18 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2658
                                             63 BANK0      1     1      0
                                             15 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             62 BANK0      1     1      0
                                              4 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip4                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             64 BANK0      1     1      0
                                             16 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             64 BANK0      1     1      0
                                             16 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             62 BANK0      2     2      0
                                              4 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0      6     0      6
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     119
                                             56 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    7624
                                             56 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (6) _uart_transmit_interrupt_handler                     16    16      0    2268
                                             29 COMRAM    16    16      0
                _FromMainLow_recvmsg
                 _uart_frame_message
 ---------------------------------------------------------------------------------
 (7) _uart_frame_message                                   8     4      4     528
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_receive_interrupt_handler                      30    30      0    3048
                                             26 COMRAM    30    30      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    2308
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2187
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    8311
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    3788
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    13    13      0    4267
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                             i2_blip
                            i2_blip1
                            i2_blip2
 ---------------------------------------------------------------------------------
 (12) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_blip                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               3     1      2      75
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1797
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1698
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (12) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (13) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _blip4
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         ___awmod
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
     _uart_frame_message

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply
     i2_blip
     i2_blip1
     i2_blip2
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      57      12       34.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      AE      10       68.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     81      D8       8       84.4%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      68       5       65.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      53       1       87.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     298       6        0.0%
DATA                 0      0     298       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Nov 10 19:31:09 2014

                                 ??_debug_configure 0098                            _MQ_Main_Willing_to_block 00B3  
                                       _SSPSTATbits 000FC7                  uart_receive_interrupt_handler@done 004D  
                         __end_of_ToMainLow_recvmsg 1C4C                                                  bsr 000FE0  
                         __end_of_ToMainLow_sendmsg 1E3A                                        __CFG_CP0$OFF 000000  
                                 i2recv_msg@msgtype 006D                                   i2recv_msg@tlength 0074  
                              ?_FromMainLow_recvmsg 0019                                                 l547 1E10  
                                               l548 1E12                                                 l575 1C0C  
                                               l576 1C0E                                ?_FromMainLow_sendmsg 010F  
                              __size_of_WriteTimer0 0012                                __size_of_WriteTimer1 0012  
                                  ??_uart_configure 0098                                        ___awmod@sign 009D  
                                    _FromMainLow_MQ 0200                                                 prod 000FF3  
                                               wreg 000FE8                                          _TXSTA1bits 000FAD  
                                      __CFG_IESO$ON 000000                                        ?_in_high_int 0060  
                                   ReadTimer1@timer 0003                                 i2recv_msg@maxlength 006C  
                                              l1124 194E                                                l4301 0A16  
                                              l4311 0A4C                                                l4231 0808  
                                              l2801 190A                                                l2803 1916  
                                              l4307 0A36                                                l4315 0A58  
                                              l4243 0860                                                l4219 07D4  
                                              l2805 191C                                                l4245 08A4  
                                              l4253 08CC                                                l4237 082E  
                                              l4247 08B8                                                l4255 08E8  
                                              l3545 1AAA                                                l2809 1940  
                                              l4281 09B2                                                l4273 0950  
                                              l4249 08BE                                                l3571 13FC  
                                              l3563 13C6                                                l3555 1392  
                                              l3539 1A8A                                                l3731 0C94  
                                              l4275 0992                                                l4267 0928  
                                              l3565 13D2                                                l2677 186E  
                                              l3567 13D8                                                l3575 140A  
                                              l3559 13B4                                                l4295 09F6  
                                              l4289 09D6                                                l3579 141E  
                                              l3747 0D72                                                l3595 0F02  
                                              _LATB 000F8A                                                i1l52 007A  
                                   _FromMainHigh_MQ 0300                                                _blip 1F16  
                                        i1_recv_msg 10D0                                                _main 074C  
                                              fsr0h 000FEA                                                fsr1h 000FE2  
                                              fsr0l 000FE9                                                fsr2h 000FDA  
                                              indf1 000FE7                                                fsr1l 000FE1  
                                              indf2 000FDF                                                fsr2l 000FD9  
                            __CFG_DSWDTOSC$T1OSCREF 000000                                         main@msgtype 0159  
                                        i1_send_msg 14EC                                                pclat 000FFA  
                                              prodh 000FF4                                     __end_ofi2_blip1 1F2E  
                                              prodl 000FF3                                     __end_ofi2_blip2 1F26  
                             handle_start@data_read 0060                                                start 00C0  
                                        i2_recv_msg 0D76                                          i2_send_msg 0FC4  
                         ToMainHigh_recvmsg@msgtype 0110                                      send_msg@length 0106  
                       __size_of_timer0_int_handler 006E                                       __CFG_PLLDIV$3 000000  
            uart_receive_interrupt_handler@checksum 0035                               ??_FromMainLow_recvmsg 001D  
                                             ?_blip 0001                               ??_FromMainLow_sendmsg 009F  
                                             ?_main 0001                                     __end_of___awmod 1428  
                                             _T0CON 000FD5                                               _T1CON 000FCD  
                                             i1l422 0C18                                     __end_of___lwmod 1958  
                                        i1memcpy@d1 0001                                               i2l302 017C  
                                             i2l304 01D2                                               i2l325 044E  
                                             i2l317 0338                                               i2l337 0568  
                                             i2l286 1318                                               i2l296 055A  
                                             i2l298 014A                                          i1memcpy@s1 0003  
                       FromMainHigh_recvmsg@msgtype 0078                                               _TMR0H 000FD7  
                                             _TMR1H 000FCF                                               _TMR0L 000FD6  
                                             _TMR1L 000FCE                                               _TRISB 000F93  
                                             _TRISD 000F95                                          i2memcpy@d1 0060  
                                    __CFG_FCMEN$OFF 000000                                          i2memcpy@s1 0062  
                                      ?_init_queues 0001                           __size_of_enter_sleep_mode 0006  
                                    i1___awmod@sign 0006                                               _blip1 1F0E  
                                             _blip2 1F06                                               _blip3 1EFE  
                                             _blip4 1EF6         uart_receive_interrupt_handler@message_count 0034  
                        ToMainLow_recvmsg@maxlength 00A0                                               main@i 015A  
                           timer0_lthread@msgbuffer 009E                                      __CFG_T1DIG$OFF 000000  
                           i2c_configure_slave@addr 0098                                               tablat 000FF5  
                           uart_frame_message@inner 0001                                               status 000FD8  
                           uart_frame_message@outer 0003                                    __end_ofi1_memcpy 1B9C  
                                __size_ofi1___awmod 0090                                    __end_ofi2_memcpy 1B10  
                                __size_ofi2___awmod 00C4                                     __initialization 19B8  
                                      __end_of_blip 1F1E                                        __end_of_main 0A8E  
                                        _ReadTimer1 1EB0                         __size_of_timer1_int_handler 002C  
                        __size_of_ToMainLow_recvmsg 0036                          __size_of_ToMainLow_sendmsg 0024  
                     __size_of_FromMainHigh_recvmsg 0036                                      __CFG_OSC$HSPLL 000000  
                     __size_of_FromMainHigh_sendmsg 002E                                              ??_blip 0098  
                                            ??_main 00A1                                     send_msg@msgtype 0107  
                                     __activetblptr 000002                                     send_msg@tlength 010A  
                        FromMainLow_sendmsg@msgtype 010F                                __end_of_handle_start 1364  
                                            ?_blip1 0001                                              ?_blip2 0001  
                                            ?_blip3 0001                                              ?_blip4 0001  
                                            _T1GCON 000F9A                                           ??i2_blip1 0060  
                                         ??i2_blip2 0060                                              i1l4005 0B0E  
                                            i1l4007 0B10                                              i1l4103 162A  
                                            i1l2425 1B8A                                              i1l2419 1B6E  
                                            i1l4043 0BD0                                              i1l4035 0BA4  
                                            i1l4019 0B46                                              i1l2461 16BE  
                                            i1l2453 169E                                              i1l2445 1674  
                                            i1l2455 16A6                                              i1l4063 0C2C  
                                            i1l2457 16AA                                              i1l2465 16C8  
                                            i1l2449 1690                                              i1l4161 0070  
                                            i1l4075 15DA                                              i1l4155 0066  
                                            i1l2469 16D6                                              i1l3619 1524  
                                            i1l2781 121E                                              i1l2783 123E  
                                            i1l2785 126C                                              i1l2777 11F0  
                                            i2l3027 1960                                              i1l3667 1116  
                                            i1l3683 11B4                                              i2l2501 14CE  
                                            i2l2505 14E2                                          _OpenTimer0 1DF0  
                                        _OpenTimer1 1BDA                                              i2l2435 1AFA  
                                            i2l2429 1ADA                                              i2l4141 1716  
                                    __CFG_WDTEN$OFF 000000                                              i1l3991 0ADA  
                                            i2l2481 1456                                              i1l3985 0AD4  
                                            i1l3993 0AE0                                              i2l2491 1496  
                                            i2l4147 1720                                              i2l2493 149C  
                                            i2l2485 1478                                              i2l2665 1BCC  
                                            i2l2657 1BAE                                              i2l2497 14C0  
                                            i2l2489 148A                                              i2l2761 134C  
                                            i2l3715 0EB0                                              i2l3643 1012  
                                            i2l3901 0518                                              i2l3813 01A8  
                                            i2l2759 1334                                              i2l3831 025C  
                                            i2l3815 01E8                                              i2l3913 056C  
                                            i2l3833 029C                                              i2l3825 0222  
                                            i2l3907 052E                                              i2l3861 03A6  
                                            i2l3845 031C                                              i2l3935 06C8  
                                            i2l3927 0636                                              i2l3919 05CA  
                                            i2l3863 03E6                                              i2l3945 070E  
                                            i2l3881 0470                                              i2l3699 0DD6  
                                            i2l3867 03F2                                              i2l3795 0142  
                                            i2l3789 0134                                              i2l3895 04DA  
                                            _RCREG1 000FAF                         __end_of_i2c_configure_slave 1DC8  
                                     ??_SleepIfOkay 0064                                              _OSCCON 000FD3  
                                            _SPBRG1 000FB0                                         ?i1_recv_msg 000B  
                                            _SSPADD 000FC8                                      __CFG_WPCFG$OFF 000000  
                                            _SSPBUF 000FC9                      __size_of_start_i2c_slave_reply 004C  
                                            _TXREG1 000FAE                                         ?i1_send_msg 000B  
                                            i2_blip 1F2E                       __end_of_start_i2c_slave_reply 1B5C  
                                timer0_lthread@tptr 0098                                      __CFG_WPDIS$OFF 000000  
                           FromMainLow_recvmsg@data 001B                                         ?i2_recv_msg 006A  
                                       ?i2_send_msg 006A                                      __CFG_XINST$OFF 000000  
                        __end_of_uart_frame_message 129A                    ??_uart_receive_interrupt_handler 001B  
                   ?_uart_receive_interrupt_handler 0001                                     _i2c_int_handler 00C4  
                                         ??___awmod 009C                                              _blink0 1F3C  
                                  OpenTimer0@config 0098                                              _ic_ptr 00C6  
                                         ??___lwmod 009C                                       main@msgbuffer 0137  
                                  __end_of_init_i2c 1832                                    OpenTimer1@config 009A  
                                            _memcpy 1A68                                              clear_0 19BE  
                                            clear_1 19CA                                              clear_2 19D6  
                                            clear_3 19E2                                              clear_4 19EE  
                                   ___awmod@divisor 009A                                     ___awmod@counter 009C  
                                            main@ic 015B                                    __end_of_recv_msg 0D76  
                       start_i2c_slave_reply@length 0062       uart_transmit_interrupt_handler@message_status 002D  
                                 __end_ofi1___awmod 16E0                                    __end_of_send_msg 0FC4  
                                      __pdataCOMRAM 0053                                   __end_ofi2___awmod 14EC  
                             timer0_int_handler@val 0081                             i2c_int_handler@i2c_data 0085  
                                            tblptrh 000FF7                                              tblptrl 000FF6  
                                            tblptru 000FF8                uart_receive_interrupt_handler@msg_id 0036  
                                       init_queue@i 009A                                      i2___awmod@sign 0065  
              uart_receive_interrupt_handler@status 002B                            ToMainLow_recvmsg@msgtype 0110  
                              __size_of_in_high_int 0010                             FromMainLow_sendmsg@data 0110  
                                   _debug_configure 1EE4                uart_transmit_interrupt_handler@index 0052  
                                        __accesstop 0060                             __end_of__initialization 1A06  
                        __end_of_ToMainHigh_recvmsg 1C82                          __end_of_ToMainHigh_sendmsg 1D74  
                               uart_frame_message@i 0008                                     __CFG_IOL1WAY$ON 000000  
                              __CFG_WPEND$PAGE_WPFP 000000                                    _need_sensor_data 004A  
                       __end_of_init_timer1_lthread 1E9E                                 __end_of_SleepIfOkay 19B8  
                                    __pcstackCOMRAM 0001                                         ?_ReadTimer1 0001  
                                     __end_of_blip1 1F16                                       __end_of_blip2 1F0E  
                                     __end_of_blip3 1F06                                       __end_of_blip4 1EFE  
                   send_uart_message@message_q_code 00A0                                  __size_of_check_msg 0032  
                                   __CFG_DSWDTPS$G2 000000                           timer0_int_handler@msgtype 007F  
                               __size_ofi1_recv_msg 00E8                                 __size_ofi1_send_msg 00C0  
                                         ?i1_memcpy 0001                       __size_of_InterruptHandlerHigh 1756  
                       __end_of_InterruptHandlerLow 00C0                                           ?i2_memcpy 0060  
                                     _ToMainHigh_MQ 0257                                 __size_ofi2_recv_msg 013E  
                                  _enter_sleep_mode 1F36                                 __size_ofi2_send_msg 010C  
                              timer1_lthread@length 0116                                             ??_blip1 0098  
                                           ??_blip2 0098                                             ??_blip3 0098  
                                           ??_blip4 0098                                       check_msg@qptr 0060  
                              timer1_lthread@retval 00A0                                __size_of_init_queues 0058  
                                        __pbssBANK0 00A1                                          __pbssBANK1 0181  
                                        __pbssBANK2 0200                                          __pbssBANK3 0300  
                                       ?_OpenTimer0 0001                                         ?_OpenTimer1 0098  
                           i2c_int_handler@msg_type 0087                                             ?i2_blip 0001  
                           __end_of_i2c_int_handler 074C                                  timer1_lthread@tptr 0112  
                                           ?_blink0 0001                                   recv_msg@maxlength 0106  
                                   recv_msg@msgtype 0107                                     recv_msg@tlength 010C  
                             __size_of_handle_start 00CA                                    WriteTimer0@timer 0062  
                                           ?_memcpy 0098                                    WriteTimer1@timer 0003  
                                     ??_WriteTimer0 0062                                       ??_WriteTimer1 0003  
                           __size_of_timer0_lthread 0012                             __size_of_timer1_lthread 0062  
                                        ??i1_memcpy 0007                                          ??i2_memcpy 0066  
                           __end_of_debug_configure 1EEE                                             _SPBRGH1 000F7F  
                                  i1send_msg@length 000D                                             _SSPCON1 000FC6  
                                           _SSPCON2 000FC5                                             _SSPSTAT 000FC7  
                               __size_of_ReadTimer1 0012                                   __end_of_check_msg 1CEA  
                                           i2_blip1 1F26                                             i2_blip2 1F1E  
                                         ?_init_i2c 0098                                         _SleepIfOkay 1958  
                                 _send_uart_message 1E5A                                     __size_ofi2_blip 0008  
                                         ?_recv_msg 0104                                          _in_low_int 1B9C  
                                      _handle_start 129A                                             __Hparam 0000  
                                         ?_send_msg 0104                                             __Lparam 0000  
                                ?_send_uart_message 0112           uart_receive_interrupt_handler@status_2215 002C  
                        __end_of_timer0_int_handler 17CC                         __end_of_FromMainLow_recvmsg 1DF0  
                       __end_of_FromMainLow_sendmsg 1D46                                             ___awmod 1364  
                                           ___lwmod 18F8                                     __size_of_blink0 0004  
                                   __CFG_STVREN$OFF 000000                                 ??_send_uart_message 00A0  
                                           __pcinit 19B8                                     __size_of_memcpy 0058  
                                        _init_queue 1832                                             __ramtop 0F00  
                               __size_of_OpenTimer0 0026                                 __size_of_OpenTimer1 003C  
                                           __ptext0 074C                                             __ptext1 1E3A  
                                           __ptext2 1896                                             __ptext3 1F3C  
                                           __ptext4 18F8                                             __ptext5 1CEA  
                                           __ptext6 1E7A                                             __ptext7 1E5A  
                                           __ptext8 1D18                                             __ptext9 0EB4  
                                         _T0CONbits 000FD5                                   OpenTimer1@config1 0098  
                                         _T1CONbits 000FCD                                    ___awmod@dividend 0098  
                               __end_of_WriteTimer0 1ED4                                 __end_of_WriteTimer1 1EB0  
                                    main@motor_data 011A                                      __pintcode_body 16E0  
                      __end_of_FromMainHigh_recvmsg 1CB8                                end_of_initialization 1A06  
                           timer1_lthread@msgbuffer 0118                        __end_of_FromMainHigh_sendmsg 1D18  
                        FromMainHigh_sendmsg@length 009F                           __end_of_send_uart_message 1E7A  
                                           memcpy@d 0100                                             memcpy@n 009C  
                                           memcpy@s 0102                                          ??_init_i2c 009A  
                                      ??i1_recv_msg 0012                             __size_of_uart_configure 0020  
                       i2c_int_handler@data_written 0082                                       __Lmediumconst 0000  
                                           int_func 16E0                                        ??i1_send_msg 0011  
          uart_receive_interrupt_handler@bad_end_id 0033          uart_receive_interrupt_handler@bad_start_id 0032  
                                  ?_i2c_int_handler 0001                                        ??i2_recv_msg 0071  
                                        ??_recv_msg 009E                                        ??i2_send_msg 0070  
                                        ??_send_msg 009E     uart_receive_interrupt_handler@gooey_uart_center 001D  
                        __end_of_timer1_int_handler 1DA0                                             postdec2 000FDD  
                                           postinc0 000FEE                                             postinc2 000FDE  
                         ToMainHigh_sendmsg@msgtype 0076                                           _PORTBbits 000F81  
                                  __CFG_DSBOREN$OFF 000000                                  _uart_frame_message 11B8  
                                __end_ofi1_recv_msg 11B8                                    __CFG_CPUDIV$OSC1 000000  
                                __end_ofi1_send_msg 15AC                         FromMainHigh_sendmsg@msgtype 010F  
            __end_of_uart_receive_interrupt_handler 0C34             __size_of_uart_receive_interrupt_handler 01A6  
                    _uart_receive_interrupt_handler 0A8E                                    ?_debug_configure 0001  
                                         _TRISBbits 000F93                                           _TRISCbits 000F94  
                                __end_ofi2_recv_msg 0EB4                                           i1___awmod 1650  
                                __end_ofi2_send_msg 10D0                                           i2___awmod 1428  
                               ?_uart_frame_message 0001                       FromMainHigh_recvmsg@maxlength 007C  
                          timer1_int_handler@result 001B                                   __CFG_WPFP$PAGE_63 000000  
                                        main@length 0158                                         ?_in_low_int 0062  
                                    __end_ofi2_blip 1F36                               timer0_lthread@msgtype 009A  
                             _start_i2c_slave_reply 1B10                                 __CFG_MSSP7B_EN$MSK7 000000  
                      __size_of_i2c_configure_slave 0028                            __end_of_enter_sleep_mode 1F3C  
                                      ??_ReadTimer1 0003                                ??_uart_frame_message 0005  
                                _ToMainHigh_recvmsg 1C4C                                           i1memcpy@d 0007  
                                _ToMainHigh_sendmsg 1D46                                           i1memcpy@n 0005  
                                         i1memcpy@s 0009                                         _BAUDCONbits 000F7E  
                                    __end_of_blink0 1F40                                       __pidataCOMRAM 1F40  
                                    _timer0_lthread 1E7A                                         ?_init_queue 0098  
                                         i2memcpy@d 0066                                         _WriteTimer0 1EC2  
                                       _WriteTimer1 1E9E                                           i2memcpy@n 0064  
                                         i2memcpy@s 0068                                      _timer1_lthread 1896  
                                    __end_of_memcpy 1AC0                                   _enable_interrupts 1EEE  
                                  __CFG_DSWDTEN$OFF 000000                                 ?_ToMainHigh_recvmsg 0110  
                          i2c_int_handler@data_read 0089                                 ?_ToMainHigh_sendmsg 0076  
                                ?_enable_interrupts 0001                                 start_initialization 19B8  
                                     ??_in_high_int 0062        uart_receive_interrupt_handler@start_byte_bad 0051  
                                        ?i1___awmod 0001                                   __size_ofi1_memcpy 0040  
                                 __size_ofi2_memcpy 0050                                          ?i2___awmod 0060  
                         FromMainLow_sendmsg@length 009F                               i2c_int_handler@length 007E  
                               ??_enable_interrupts 0098                                        ??_OpenTimer0 0098  
                                      ??_OpenTimer1 0099                                  __end_of_ReadTimer1 1EC2  
                   uart_receive_interrupt_handler@i 0037                          __size_of_send_uart_message 0020  
                                 main@uart_response 0148              uart_transmit_interrupt_handler@message 00B4  
                                          ??i2_blip 0060                        __end_of_InterruptHandlerHigh 175E  
                                        init_i2c@ic 0098                                ??_ToMainHigh_recvmsg 00A0  
                              ??_ToMainHigh_sendmsg 0079              uart_transmit_interrupt_handler@msgtype 002C  
                          i2c_int_handler@need_data 0084                              __end_of_timer0_lthread 1E8C  
                                          ??_blink0 0098                            i2c_int_handler@error_buf 007F  
                            __end_of_timer1_lthread 18F8                                  i1___awmod@dividend 0001  
                                  __CFG_LPT1OSC$OFF 000000                           __end_of_enable_interrupts 1EF6  
                                          ??_memcpy 009E                               timer1_lthread@msgtype 0114  
                              _FromMainHigh_recvmsg 1C82  uart_receive_interrupt_handler@bad_checksum_message 002D  
               uart_receive_interrupt_handler@frame 00A1                 uart_receive_interrupt_handler@index 004F  
                              _FromMainHigh_sendmsg 1CEA                 uart_receive_interrupt_handler@error 004E  
                      __size_of_init_timer1_lthread 0012                                  __end_of_OpenTimer0 1E16  
                                __end_of_OpenTimer1 1C16                            i2c_int_handler@msg_ready 0088  
                                       __pbssCOMRAM 004A                                       ??_init_queues 009B  
                                     __pcstackBANK0 0060                                       __pcstackBANK1 0100  
                               __size_of_in_low_int 003E                            start_i2c_slave_reply@msg 0060  
                                          ?i2_blip1 0001                                            ?i2_blip2 0001  
                          ToMainLow_sendmsg@msgtype 0017                        __size_of_InterruptHandlerLow 00A8  
                               __end_of_in_high_int 1EE4                                      _uart_configure 1E3A  
                                      ?_SleepIfOkay 0001                               ToMainLow_recvmsg@data 0112  
                                      _ToMainLow_MQ 0181                                 __size_of_init_queue 0064  
                                         _check_msg 1CB8                                           __pnvBANK0 00C6  
                            ?_start_i2c_slave_reply 0060                                   __size_of_init_i2c 0066  
                                      recv_msg@data 0109                                        recv_msg@qmsg 010E  
                                      recv_msg@slot 010B                                        recv_msg@qptr 0104  
                                 __size_of_recv_msg 0142                                           __pintcode 0008  
                                 __size_of_send_msg 0110                                            ?___awmod 0098  
                                   ?_timer0_lthread 0098                                            ?___lwmod 0098  
                             ?_FromMainHigh_recvmsg 0078                                     ?_timer1_lthread 0112  
                             ?_FromMainHigh_sendmsg 010F                                         __pintcodelo 0018  
                            ToMainHigh_recvmsg@data 0112                          i2c_int_handler@msg_to_send 0086  
                                 WriteTimer0@timer0 0060                                  _timer0_int_handler 175E  
                        uart_frame_message@checksum 0007                                   WriteTimer1@timer1 0001  
                              __CFG_RTCOSC$T1OSCREF 000000                                         ??i1___awmod 0005  
                             ToMainLow_sendmsg@data 0018                                      __size_of_blip1 0008  
                                    __size_of_blip2 0008                                      __size_of_blip3 0008  
                                    __size_of_blip4 0008                                         ??i2___awmod 0064  
                            __end_of_uart_configure 1E5A                                 i1recv_msg@maxlength 000D  
                               ?_timer0_int_handler 0001        uart_receive_interrupt_handler@bad_counter_id 0030  
                               __end_of_init_queues 1A68                                            _LATBbits 000F8A  
                                          _LATDbits 000F8C                                          ?_check_msg 0060  
                                          _IPR1bits 000F9F                                            _PIE1bits 000F9D  
                                          _PIR1bits 000F9E                              ToMainHigh_sendmsg@data 0077  
                                          _RCONbits 000FD0                                    __CFG_WDTPS$32768 000000  
                                    i1recv_msg@data 0010                                ??_timer0_int_handler 007D  
                                    i1recv_msg@qmsg 0017                                      i1recv_msg@slot 0014  
                                    i1recv_msg@qptr 000B      uart_receive_interrupt_handler@received_counter 0050  
                      FromMainLow_recvmsg@maxlength 001D                          __size_of_enable_interrupts 0008  
                                 i1send_msg@msgtype 000E                                   i1send_msg@tlength 0012  
                        FromMainLow_recvmsg@msgtype 0019                        __size_of_FromMainLow_recvmsg 0028  
                      __size_of_FromMainLow_sendmsg 002E                                timer0_lthread@length 009C  
                                _timer1_int_handler 1D74                                            i1_memcpy 1B5C  
                              _InterruptHandlerHigh 0008                                            i2_memcpy 1AC0  
                              timer0_lthread@msgval 0100                            FromMainHigh_recvmsg@data 007A  
                                       _in_high_int 1ED4                                        send_msg@data 0108  
                               _i2c_configure_slave 1DA0                                        send_msg@qmsg 010D  
                                      send_msg@slot 010C                                        send_msg@qptr 0104  
                                   ?_uart_configure 0001                                 ?_timer1_int_handler 0001  
                                i2___awmod@dividend 0060                                    __size_ofi2_blip1 0008  
                                  __size_ofi2_blip2 0008                                            __Hparam0 0000  
                                      ??_in_low_int 0064                                            __Lparam0 0000  
                              ?_i2c_configure_slave 0001                                   ?_enter_sleep_mode 0001  
                            ??_FromMainHigh_recvmsg 007C                              ??_FromMainHigh_sendmsg 009F  
                                 i1___awmod@divisor 0003                                ??_timer1_int_handler 001B  
           __end_of_uart_transmit_interrupt_handler 1650            __size_of_uart_transmit_interrupt_handler 00A4  
                 ??_uart_transmit_interrupt_handler 001E                    ?_uart_transmit_interrupt_handler 0001  
                   _uart_transmit_interrupt_handler 15AC                                   i1___awmod@counter 0005  
                          __size_of_i2c_int_handler 0688                                    __size_of___awmod 00C4  
                                ??_enter_sleep_mode 0060                                    __size_of___lwmod 0060  
                                      ??_init_queue 009A                                        ?_WriteTimer0 0060  
                                      ?_WriteTimer1 0001                            FromMainHigh_sendmsg@data 0110  
                           ToMainLow_sendmsg@length 001A                                   main@t0thread_data 0146  
                    uart_frame_message@sent_counter 004C                               ?_InterruptHandlerHigh 0001  
               uart_transmit_interrupt_handler@data 001E                 uart_transmit_interrupt_handler@done 0053  
                                 i2send_msg@msgtype 006D                         ToMainHigh_recvmsg@maxlength 00A0  
                                 i2send_msg@tlength 0071                             init_timer1_lthread@tptr 0098  
                                       _init_queues 1A10                                  __end_of_in_low_int 1BDA  
                                          __ptext10 1E8C                                            __ptext11 1A10  
                                          __ptext20 1F0E                                            __ptext12 1832  
                                          __ptext21 1F16                                            __ptext13 17CC  
                                        _T1GCONbits 000F9A                                            __ptext30 15AC  
                                          __ptext22 1C16                                            __ptext14 1DA0  
                                          __ptext31 11B8                                            __ptext23 1C4C  
                                          __ptext15 1EEE                                            __ptext40 1650  
                                          __ptext32 1DC8                                            __ptext24 0C34  
                                          __ptext16 1EE4                                            __ptext41 1EB0  
                                          __ptext33 10D0                                            __ptext25 1A68  
                                          __ptext17 1EF6                                            __ptext50 129A  
                                          __ptext34 0A8E                                            __ptext26 1364  
                                          __ptext18 1EFE                                            __ptext51 1D46  
                                          __ptext43 175E                                            __ptext35 1D74  
                                          __ptext27 1BDA                                            __ptext19 1F06  
                                          __ptext60 1F36                                            __ptext52 0FC4  
                                          __ptext44 1EC2                                            __ptext36 1E9E  
                                          __ptext28 1DF0                                            __ptext61 1CB8  
                                          __ptext53 1C82                                            __ptext45 00C4  
                                          __ptext37 1E16                                            __ptext54 0D76  
                                          __ptext46 1F1E                                            __ptext38 14EC  
                                          __ptext55 1AC0                                            __ptext47 1F26  
                                          __ptext39 1B5C                                            __ptext56 1428  
                                          __ptext48 1F2E                                            __ptext57 1958  
                                          __ptext49 1B10                                            __ptext58 1B9C  
                                          __ptext59 1ED4                                      i1send_msg@data 000F  
                                    i1send_msg@qmsg 0015                                      i1send_msg@slot 0014  
                                    i1send_msg@qptr 000B                            timer0_int_handler@length 007D  
                                          _init_i2c 17CC                            __size_of_debug_configure 000A  
                               _init_timer1_lthread 1E8C                                       __size_of_blip 0008  
                                     __size_of_main 0342                                   main@t1thread_data 0156  
                                       ??_check_msg 0062                                  __end_of_init_queue 1896  
                              __size_of_SleepIfOkay 0060                                            _recv_msg 0C34  
                             ??_i2c_configure_slave 0098                                            _send_msg 0EB4  
                                    init_queue@qptr 0098                                      i2recv_msg@data 006F  
                       __size_of_uart_frame_message 00E2                                      i2recv_msg@qmsg 0076  
                                    i2recv_msg@slot 0073                                      i2recv_msg@qptr 006A  
                                      _SSP1STATbits 000FC7                                 _InterruptHandlerLow 0018  
                              ?_init_timer1_lthread 0098                                     main@sensor_data 0128  
                                 i2___awmod@divisor 0062                                   i2___awmod@counter 0064  
                                       _OSCTUNEbits 000F9B                                          _INTCONbits 000FF2  
                                          memcpy@d1 0098                                            memcpy@s1 009A  
                      i2c_int_handler@overrun_error 0083                                    i2send_msg@length 006C  
                                          intlevel1 0000                                            intlevel2 0000  
                              ?_InterruptHandlerLow 0001                             ??_start_i2c_slave_reply 0062  
                      send_uart_message@message_ptr 0112                                    ___lwmod@dividend 0098  
                                        _RCSTA1bits 000FAC                                       ?_handle_start 0001  
                                  ??_timer0_lthread 00A0                         __size_of_ToMainHigh_recvmsg 0036  
                       __size_of_ToMainHigh_sendmsg 002E                                          _OSCCONbits 000FD3  
                                  ??_timer1_lthread 00A0                                   i1recv_msg@msgtype 000E  
                                 i1recv_msg@tlength 0015                            ToMainHigh_sendmsg@length 0079  
                             ??_init_timer1_lthread 009A                              ??_InterruptHandlerHigh 008A  
                                 _ToMainLow_recvmsg 1C16                                   _ToMainLow_sendmsg 1E16  
                                main@last_reg_recvd 0136                                     ___lwmod@divisor 009A  
                                ?_ToMainLow_recvmsg 0110                                   ??_i2c_int_handler 007D  
                                   ___lwmod@counter 009C                                  ?_ToMainLow_sendmsg 0017  
                                       _SSPCON1bits 000FC6                                         _SSPCON2bits 000FC5  
                                    i2send_msg@data 006E                               ??_InterruptHandlerLow 0039  
                               ??_ToMainLow_recvmsg 00A0                                      i2send_msg@qmsg 0074  
                                    i2send_msg@slot 0073                                      i2send_msg@qptr 006A  
                               ??_ToMainLow_sendmsg 001A                                 _FromMainLow_recvmsg 1DC8  
                                    ??_handle_start 0060                                 _FromMainLow_sendmsg 1D18  
