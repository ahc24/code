

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Oct 17 17:15:54 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    83                           	psect	param0,global,class=BANK0,space=1,delta=1
    84  0000                     
    85                           	psect	idataCOMRAM
    86  001E8C                     __pidataCOMRAM:
    87                           	opt stack 0
    88                           
    89                           ;initializer for uart_transmit_interrupt_handler@done
    90  001E8C  01                 	db	1
    91                           
    92                           	psect	idataBANK0
    93  001E8D                     __pidataBANK0:
    94                           	opt stack 0
    95                           
    96                           ;initializer for timer1_lthread@move_time
    97  001E8D  28                 	db	40
    98  0000                     _BAUDCONbits	set	3966
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR1bits	set	3999
   101  0000                     _LATB	set	3978
   102  0000                     _LATBbits	set	3978
   103  0000                     _LATDbits	set	3980
   104  0000                     _OSCCON	set	4051
   105  0000                     _OSCCONbits	set	4051
   106  0000                     _OSCTUNEbits	set	3995
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PORTBbits	set	3969
   110  0000                     _RCONbits	set	4048
   111  0000                     _RCREG1	set	4015
   112  0000                     _RCSTA1bits	set	4012
   113  0000                     _SPBRG1	set	4016
   114  0000                     _SPBRGH1	set	3967
   115  0000                     _SSP1STATbits	set	4039
   116  0000                     _SSPADD	set	4040
   117  0000                     _SSPBUF	set	4041
   118  0000                     _SSPCON1	set	4038
   119  0000                     _SSPCON1bits	set	4038
   120  0000                     _SSPCON2	set	4037
   121  0000                     _SSPCON2bits	set	4037
   122  0000                     _SSPSTAT	set	4039
   123  0000                     _SSPSTATbits	set	4039
   124  0000                     _T0CON	set	4053
   125  0000                     _T0CONbits	set	4053
   126  0000                     _T1CON	set	4045
   127  0000                     _T1CONbits	set	4045
   128  0000                     _T1GCON	set	3994
   129  0000                     _T1GCONbits	set	3994
   130  0000                     _TMR0H	set	4055
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR1H	set	4047
   133  0000                     _TMR1L	set	4046
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISCbits	set	3988
   137  0000                     _TRISD	set	3989
   138  0000                     _TXREG1	set	4014
   139  0000                     _TXSTA1bits	set	4013
   140                           
   141                           	psect	nvBANK0
   142  0000D3                     __pnvBANK0:
   143                           	opt stack 0
   144  0000D3                     _ic_ptr:
   145                           	opt stack 0
   146  0000D3                     	ds	2
   147                           
   148                           ; #config settings
   149  0000                     
   150                           	psect	cinit
   151  001666                     __pcinit:
   152                           	opt stack 0
   153  001666                     start_initialization:
   154                           	opt stack 0
   155  001666                     __initialization:
   156                           	opt stack 0
   157                           
   158                           ; Clear objects allocated to BANK5 (138 bytes)
   159  001666  EE05  F000         	lfsr	0,__pbssBANK5
   160  00166A  0E8A               	movlw	138
   161  00166C                     clear_0:
   162  00166C  6AEE               	clrf	postinc0,c
   163  00166E  06E8               	decf	wreg,f,c
   164  001670  E1FD               	bnz	clear_0
   165                           
   166                           ; Clear objects allocated to BANK4 (138 bytes)
   167  001672  EE04  F000         	lfsr	0,__pbssBANK4
   168  001676  0E8A               	movlw	138
   169  001678                     clear_1:
   170  001678  6AEE               	clrf	postinc0,c
   171  00167A  06E8               	decf	wreg,f,c
   172  00167C  E1FD               	bnz	clear_1
   173                           
   174                           ; Clear objects allocated to BANK3 (138 bytes)
   175  00167E  EE03  F000         	lfsr	0,__pbssBANK3
   176  001682  0E8A               	movlw	138
   177  001684                     clear_2:
   178  001684  6AEE               	clrf	postinc0,c
   179  001686  06E8               	decf	wreg,f,c
   180  001688  E1FD               	bnz	clear_2
   181                           
   182                           ; Clear objects allocated to BANK2 (138 bytes)
   183  00168A  EE02  F000         	lfsr	0,__pbssBANK2
   184  00168E  0E8A               	movlw	138
   185  001690                     clear_3:
   186  001690  6AEE               	clrf	postinc0,c
   187  001692  06E8               	decf	wreg,f,c
   188  001694  E1FD               	bnz	clear_3
   189                           
   190                           ; Clear objects allocated to BANK1 (14 bytes)
   191  001696  EE01  F092         	lfsr	0,__pbssBANK1
   192  00169A  0E0E               	movlw	14
   193  00169C                     clear_4:
   194  00169C  6AEE               	clrf	postinc0,c
   195  00169E  06E8               	decf	wreg,f,c
   196  0016A0  E1FD               	bnz	clear_4
   197                           
   198                           ; Clear objects allocated to BANK0 (54 bytes)
   199  0016A2  EE00  F09D         	lfsr	0,__pbssBANK0
   200  0016A6  0E36               	movlw	54
   201  0016A8                     clear_5:
   202  0016A8  6AEE               	clrf	postinc0,c
   203  0016AA  06E8               	decf	wreg,f,c
   204  0016AC  E1FD               	bnz	clear_5
   205                           
   206                           ; Clear objects allocated to COMRAM (21 bytes)
   207  0016AE  EE00  F04A         	lfsr	0,__pbssCOMRAM
   208  0016B2  0E15               	movlw	21
   209  0016B4                     clear_6:
   210  0016B4  6AEE               	clrf	postinc0,c
   211  0016B6  06E8               	decf	wreg,f,c
   212  0016B8  E1FD               	bnz	clear_6
   213                           
   214                           ; Initialize objects allocated to BANK0 (1 bytes)
   215                           ; load TBLPTR registers with __pidataBANK0
   216  0016BA  0E8D               	movlw	low __pidataBANK0
   217  0016BC  6EF6               	movwf	tblptrl,c
   218  0016BE  0E1E               	movlw	high __pidataBANK0
   219  0016C0  6EF7               	movwf	tblptrh,c
   220  0016C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   221  0016C4  6EF8               	movwf	tblptru,c
   222  0016C6  0009               	tblrd		*+	;fetch initializer
   223  0016C8  CFF5 F0D5          	movff	tablat,__pdataBANK0
   224                           
   225                           ; Initialize objects allocated to COMRAM (1 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227  0016CC  0E8C               	movlw	low __pidataCOMRAM
   228  0016CE  6EF6               	movwf	tblptrl,c
   229  0016D0  0E1E               	movlw	high __pidataCOMRAM
   230  0016D2  6EF7               	movwf	tblptrh,c
   231  0016D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232  0016D6  6EF8               	movwf	tblptru,c
   233  0016D8  0009               	tblrd		*+	;fetch initializer
   234  0016DA  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   235  0016DE                     end_of_initialization:
   236                           	opt stack 0
   237  0016DE                     __end_of__initialization:
   238                           	opt stack 0
   239  0016DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  0016E0  6EF8               	movwf	tblptru,c
   241  0016E2  0100               	movlb	0
   242  0016E4  EFF1  F003         	goto	_main	;jump to C main() function
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           
   250                           	psect	bssCOMRAM
   251  00004A                     __pbssCOMRAM:
   252                           	opt stack 0
   253  00004A                     uart_frame_message@sent_counter:
   254                           	opt stack 0
   255  00004A                     	ds	1
   256  00004B                     uart_receive_interrupt_handler@done:
   257                           	opt stack 0
   258  00004B                     	ds	1
   259  00004C                     uart_receive_interrupt_handler@error:
   260                           	opt stack 0
   261  00004C                     	ds	1
   262  00004D                     uart_receive_interrupt_handler@index:
   263                           	opt stack 0
   264  00004D                     	ds	1
   265  00004E                     uart_receive_interrupt_handler@received_counter:
   266                           	opt stack 0
   267  00004E                     	ds	1
   268  00004F                     uart_receive_interrupt_handler@start_byte_bad:
   269                           	opt stack 0
   270  00004F                     	ds	1
   271  000050                     uart_transmit_interrupt_handler@index:
   272                           	opt stack 0
   273  000050                     	ds	1
   274  000051                     i2c_int_handler@sensor_bank_front:
   275                           	opt stack 0
   276  000051                     	ds	14
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           
   284                           	psect	dataCOMRAM
   285  00005F                     __pdataCOMRAM:
   286                           	opt stack 0
   287  00005F                     uart_transmit_interrupt_handler@done:
   288                           	opt stack 0
   289  00005F                     	ds	1
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           
   297                           	psect	bssBANK0
   298  00009D                     __pbssBANK0:
   299                           	opt stack 0
   300  00009D                     uart_receive_interrupt_handler@frame:
   301                           	opt stack 0
   302  00009D                     	ds	18
   303  0000AF                     _need_sensor_data:
   304                           	opt stack 0
   305  0000AF                     	ds	2
   306  0000B1                     _MQ_Main_Willing_to_block:
   307                           	opt stack 0
   308  0000B1                     	ds	1
   309  0000B2                     timer1_lthread@move_state:
   310                           	opt stack 0
   311  0000B2                     	ds	1
   312  0000B3                     uart_transmit_interrupt_handler@message:
   313                           	opt stack 0
   314  0000B3                     	ds	18
   315  0000C5                     i2c_int_handler@sensor_bank_side:
   316                           	opt stack 0
   317  0000C5                     	ds	14
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           
   325                           	psect	dataBANK0
   326  0000D5                     __pdataBANK0:
   327                           	opt stack 0
   328  0000D5                     timer1_lthread@move_time:
   329                           	opt stack 0
   330  0000D5                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           
   338                           	psect	bssBANK1
   339  000192                     __pbssBANK1:
   340                           	opt stack 0
   341  000192                     i2c_int_handler@sensor_bank_ventril:
   342                           	opt stack 0
   343  000192                     	ds	14
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           
   351                           	psect	bssBANK2
   352  000200                     __pbssBANK2:
   353                           	opt stack 0
   354  000200                     _ToMainLow_MQ:
   355                           	opt stack 0
   356  000200                     	ds	138
   357                           tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           tblptrl	equ	0xFF6
   360                           tablat	equ	0xFF5
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           
   364                           	psect	bssBANK3
   365  000300                     __pbssBANK3:
   366                           	opt stack 0
   367  000300                     _ToMainHigh_MQ:
   368                           	opt stack 0
   369  000300                     	ds	138
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           
   377                           	psect	bssBANK4
   378  000400                     __pbssBANK4:
   379                           	opt stack 0
   380  000400                     _FromMainLow_MQ:
   381                           	opt stack 0
   382  000400                     	ds	138
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           
   390                           	psect	bssBANK5
   391  000500                     __pbssBANK5:
   392                           	opt stack 0
   393  000500                     _FromMainHigh_MQ:
   394                           	opt stack 0
   395  000500                     	ds	138
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           
   403                           	psect	cstackBANK1
   404  000100                     __pcstackBANK1:
   405                           	opt stack 0
   406  000100                     ?___lwmod:
   407                           	opt stack 0
   408  000100                     OpenTimer0@config:
   409                           	opt stack 0
   410  000100                     OpenTimer1@config1:
   411                           	opt stack 0
   412  000100                     init_queue@qptr:
   413                           	opt stack 0
   414  000100                     init_i2c@ic:
   415                           	opt stack 0
   416  000100                     i2c_configure_slave@ptr_thingy:
   417                           	opt stack 0
   418  000100                     timer0_lthread@tptr:
   419                           	opt stack 0
   420  000100                     init_timer1_lthread@tptr:
   421                           	opt stack 0
   422  000100                     ___lwmod@dividend:
   423                           	opt stack 0
   424  000100                     memcpy@d1:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x0
   428  000100                     	ds	1
   429  000101                     ??_OpenTimer1:
   430                           
   431                           ; 0 bytes @ 0x1
   432  000101                     	ds	1
   433  000102                     init_queue@i:
   434                           	opt stack 0
   435  000102                     i2c_configure_slave@addr:
   436                           	opt stack 0
   437  000102                     OpenTimer1@config:
   438                           	opt stack 0
   439  000102                     timer0_lthread@msgtype:
   440                           	opt stack 0
   441  000102                     ___lwmod@divisor:
   442                           	opt stack 0
   443  000102                     memcpy@s1:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447  000102                     	ds	1
   448  000103                     
   449                           ; 0 bytes @ 0x3
   450  000103                     	ds	1
   451  000104                     ___lwmod@counter:
   452                           	opt stack 0
   453  000104                     timer0_lthread@length:
   454                           	opt stack 0
   455  000104                     memcpy@n:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x4
   459  000104                     	ds	2
   460  000106                     timer0_lthread@msgbuffer:
   461                           	opt stack 0
   462  000106                     memcpy@d:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x6
   466  000106                     	ds	2
   467  000108                     timer0_lthread@msgval:
   468                           	opt stack 0
   469  000108                     memcpy@s:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x8
   473  000108                     	ds	2
   474  00010A                     send_msg@qptr:
   475                           	opt stack 0
   476  00010A                     recv_msg@qptr:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0xA
   480  00010A                     	ds	2
   481  00010C                     send_msg@length:
   482                           	opt stack 0
   483  00010C                     recv_msg@maxlength:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0xC
   487  00010C                     	ds	1
   488  00010D                     send_msg@msgtype:
   489                           	opt stack 0
   490  00010D                     recv_msg@msgtype:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0xD
   494  00010D                     	ds	1
   495  00010E                     send_msg@data:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0xE
   499  00010E                     	ds	1
   500  00010F                     recv_msg@data:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0xF
   504  00010F                     	ds	1
   505  000110                     ??_send_msg:
   506                           
   507                           ; 0 bytes @ 0x10
   508  000110                     	ds	1
   509  000111                     ??_recv_msg:
   510  000111                     send_msg@tlength:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x11
   514  000111                     	ds	2
   515  000113                     send_msg@slot:
   516                           	opt stack 0
   517  000113                     recv_msg@slot:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x13
   521  000113                     	ds	1
   522  000114                     send_msg@qmsg:
   523                           	opt stack 0
   524  000114                     recv_msg@tlength:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x14
   528  000114                     	ds	2
   529  000116                     FromMainLow_sendmsg@msgtype:
   530                           	opt stack 0
   531  000116                     FromMainHigh_sendmsg@msgtype:
   532                           	opt stack 0
   533  000116                     recv_msg@qmsg:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x16
   537  000116                     	ds	1
   538  000117                     FromMainLow_sendmsg@data:
   539                           	opt stack 0
   540  000117                     FromMainHigh_sendmsg@data:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x17
   544  000117                     	ds	1
   545  000118                     ToMainLow_recvmsg@msgtype:
   546                           	opt stack 0
   547  000118                     ToMainHigh_recvmsg@msgtype:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x18
   551  000118                     	ds	1
   552  000119                     FromMainLow_sendmsg@length:
   553                           	opt stack 0
   554  000119                     FromMainHigh_sendmsg@length:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x19
   558  000119                     	ds	1
   559  00011A                     ToMainLow_recvmsg@data:
   560                           	opt stack 0
   561  00011A                     ToMainHigh_recvmsg@data:
   562                           	opt stack 0
   563  00011A                     send_uart_message@message_ptr:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x1A
   567  00011A                     	ds	2
   568  00011C                     ToMainLow_recvmsg@maxlength:
   569                           	opt stack 0
   570  00011C                     ToMainHigh_recvmsg@maxlength:
   571                           	opt stack 0
   572  00011C                     send_uart_message@message_q_code:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x1C
   576  00011C                     	ds	1
   577  00011D                     timer1_lthread@tptr:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x1D
   581  00011D                     	ds	2
   582  00011F                     timer1_lthread@msgtype:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x1F
   586  00011F                     	ds	2
   587  000121                     timer1_lthread@length:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x21
   591  000121                     	ds	2
   592  000123                     timer1_lthread@msgbuffer:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x23
   596  000123                     	ds	2
   597  000125                     timer1_lthread@retval:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x25
   601  000125                     	ds	1
   602  000126                     timer1_lthread@move_msg:
   603                           	opt stack 0
   604                           
   605                           ; 14 bytes @ 0x26
   606  000126                     	ds	14
   607  000134                     main@sensor_data:
   608                           	opt stack 0
   609                           
   610                           ; 14 bytes @ 0x34
   611  000134                     	ds	14
   612  000142                     main@last_reg_recvd:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x42
   616  000142                     	ds	1
   617  000143                     main@myByte1:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x43
   621  000143                     	ds	1
   622  000144                     main@myByte2:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x44
   626  000144                     	ds	1
   627  000145                     main@msgbuffer:
   628                           	opt stack 0
   629                           
   630                           ; 15 bytes @ 0x45
   631  000145                     	ds	15
   632  000154                     main@t0thread_data:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x54
   636  000154                     	ds	2
   637  000156                     main@uart_response:
   638                           	opt stack 0
   639                           
   640                           ; 14 bytes @ 0x56
   641  000156                     	ds	14
   642  000164                     main@need_sensor_data:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x64
   646  000164                     	ds	1
   647  000165                     main@jjj:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x65
   651  000165                     	ds	2
   652  000167                     main@z:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x67
   656  000167                     	ds	1
   657  000168                     main@t1thread_data:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x68
   661  000168                     	ds	2
   662  00016A                     main@length:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x6A
   666  00016A                     	ds	1
   667  00016B                     main@msgtype:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x6B
   671  00016B                     	ds	1
   672  00016C                     main@ic:
   673                           	opt stack 0
   674                           
   675                           ; 38 bytes @ 0x6C
   676  00016C                     	ds	38
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           
   684                           	psect	cstackBANK0
   685  000060                     __pcstackBANK0:
   686                           	opt stack 0
   687  000060                     ?_in_high_int:
   688                           	opt stack 0
   689  000060                     handle_start@data_read:
   690                           	opt stack 0
   691  000060                     check_msg@qptr:
   692                           	opt stack 0
   693  000060                     WriteTimer0@timer0:
   694                           	opt stack 0
   695  000060                     i2memcpy@d1:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x0
   699  000060                     	ds	2
   700  000062                     ??_check_msg:
   701  000062                     ?_in_low_int:
   702                           	opt stack 0
   703  000062                     WriteTimer0@timer:
   704                           	opt stack 0
   705  000062                     i2memcpy@s1:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x2
   709  000062                     	ds	2
   710  000064                     i2memcpy@n:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x4
   714  000064                     	ds	2
   715  000066                     i2memcpy@d:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x6
   719  000066                     	ds	2
   720  000068                     i2memcpy@s:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x8
   724  000068                     	ds	2
   725  00006A                     i2send_msg@qptr:
   726                           	opt stack 0
   727  00006A                     i2recv_msg@qptr:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0xA
   731  00006A                     	ds	2
   732  00006C                     i2send_msg@length:
   733                           	opt stack 0
   734  00006C                     i2recv_msg@maxlength:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0xC
   738  00006C                     	ds	1
   739  00006D                     i2send_msg@msgtype:
   740                           	opt stack 0
   741  00006D                     i2recv_msg@msgtype:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0xD
   745  00006D                     	ds	1
   746  00006E                     i2send_msg@data:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0xE
   750  00006E                     	ds	1
   751  00006F                     i2recv_msg@data:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0xF
   755  00006F                     	ds	1
   756  000070                     ??i2_send_msg:
   757                           
   758                           ; 0 bytes @ 0x10
   759  000070                     	ds	1
   760  000071                     ??i2_recv_msg:
   761  000071                     i2send_msg@tlength:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x11
   765  000071                     	ds	2
   766  000073                     i2send_msg@slot:
   767                           	opt stack 0
   768  000073                     i2recv_msg@slot:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x13
   772  000073                     	ds	1
   773  000074                     i2send_msg@qmsg:
   774                           	opt stack 0
   775  000074                     i2recv_msg@tlength:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x14
   779  000074                     	ds	2
   780  000076                     ToMainHigh_sendmsg@msgtype:
   781                           	opt stack 0
   782  000076                     i2recv_msg@qmsg:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x16
   786  000076                     	ds	1
   787  000077                     ToMainHigh_sendmsg@data:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x17
   791  000077                     	ds	1
   792  000078                     FromMainHigh_recvmsg@msgtype:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x18
   796  000078                     	ds	1
   797  000079                     ToMainHigh_sendmsg@length:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x19
   801  000079                     	ds	1
   802  00007A                     FromMainHigh_recvmsg@data:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x1A
   806  00007A                     	ds	2
   807  00007C                     FromMainHigh_recvmsg@maxlength:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x1C
   811  00007C                     	ds	1
   812  00007D                     retrieve_sensor_values@sensor_bank_side:
   813                           	opt stack 0
   814  00007D                     timer0_int_handler@length:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x1D
   818  00007D                     	ds	2
   819  00007F                     retrieve_sensor_values@sensor_bank_front:
   820                           	opt stack 0
   821  00007F                     timer0_int_handler@msgtype:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x1F
   825  00007F                     	ds	2
   826  000081                     retrieve_sensor_values@sensor_bank_ventril:
   827                           	opt stack 0
   828  000081                     timer0_int_handler@val:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x21
   832  000081                     	ds	2
   833  000083                     retrieve_sensor_values@length:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x23
   837  000083                     	ds	1
   838  000084                     retrieve_sensor_values@msgtype:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x24
   842  000084                     	ds	1
   843  000085                     ??_i2c_int_handler:
   844                           
   845                           ; 0 bytes @ 0x25
   846  000085                     	ds	1
   847  000086                     i2c_int_handler@error_buf:
   848                           	opt stack 0
   849                           
   850                           ; 3 bytes @ 0x26
   851  000086                     	ds	3
   852  000089                     i2c_int_handler@data_written:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x29
   856  000089                     	ds	1
   857  00008A                     i2c_int_handler@overrun_error:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x2A
   861  00008A                     	ds	1
   862  00008B                     i2c_int_handler@i2c_data:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x2B
   866  00008B                     	ds	1
   867  00008C                     i2c_int_handler@msg_to_send:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x2C
   871  00008C                     	ds	1
   872  00008D                     i2c_int_handler@msg_ready:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x2D
   876  00008D                     	ds	1
   877  00008E                     i2c_int_handler@data_read:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x2E
   881  00008E                     	ds	1
   882  00008F                     ??_InterruptHandlerHigh:
   883                           
   884                           ; 0 bytes @ 0x2F
   885  00008F                     	ds	14
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           
   893                           	psect	cstackCOMRAM
   894  000001                     __pcstackCOMRAM:
   895                           	opt stack 0
   896  000001                     ?_ReadTimer1:
   897                           	opt stack 0
   898  000001                     uart_frame_message@inner:
   899                           	opt stack 0
   900  000001                     WriteTimer1@timer1:
   901                           	opt stack 0
   902  000001                     i1memcpy@d1:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x0
   906  000001                     	ds	2
   907  000003                     uart_frame_message@outer:
   908                           	opt stack 0
   909  000003                     ReadTimer1@timer:
   910                           	opt stack 0
   911  000003                     WriteTimer1@timer:
   912                           	opt stack 0
   913  000003                     i1memcpy@s1:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x2
   917  000003                     	ds	2
   918  000005                     ??_uart_frame_message:
   919  000005                     i1memcpy@n:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x4
   923  000005                     	ds	2
   924  000007                     uart_frame_message@checksum:
   925                           	opt stack 0
   926  000007                     i1memcpy@d:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x6
   930  000007                     	ds	1
   931  000008                     uart_frame_message@i:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x7
   935  000008                     	ds	1
   936  000009                     i1memcpy@s:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x8
   940  000009                     	ds	2
   941  00000B                     i1send_msg@qptr:
   942                           	opt stack 0
   943  00000B                     i1recv_msg@qptr:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0xA
   947  00000B                     	ds	2
   948  00000D                     i1send_msg@length:
   949                           	opt stack 0
   950  00000D                     i1recv_msg@maxlength:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0xC
   954  00000D                     	ds	1
   955  00000E                     i1send_msg@msgtype:
   956                           	opt stack 0
   957  00000E                     i1recv_msg@msgtype:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0xD
   961  00000E                     	ds	1
   962  00000F                     i1send_msg@data:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0xE
   966  00000F                     	ds	1
   967  000010                     i1recv_msg@data:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0xF
   971  000010                     	ds	1
   972  000011                     ??i1_send_msg:
   973                           
   974                           ; 0 bytes @ 0x10
   975  000011                     	ds	1
   976  000012                     ??i1_recv_msg:
   977  000012                     i1send_msg@tlength:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x11
   981  000012                     	ds	2
   982  000014                     i1send_msg@slot:
   983                           	opt stack 0
   984  000014                     i1recv_msg@slot:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x13
   988  000014                     	ds	1
   989  000015                     i1send_msg@qmsg:
   990                           	opt stack 0
   991  000015                     i1recv_msg@tlength:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x14
   995  000015                     	ds	2
   996  000017                     ToMainLow_sendmsg@msgtype:
   997                           	opt stack 0
   998  000017                     i1recv_msg@qmsg:
   999                           	opt stack 0
  1000                           
  1001                           ; 2 bytes @ 0x16
  1002  000017                     	ds	1
  1003  000018                     ToMainLow_sendmsg@data:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x17
  1007  000018                     	ds	1
  1008  000019                     FromMainLow_recvmsg@msgtype:
  1009                           	opt stack 0
  1010                           
  1011                           ; 2 bytes @ 0x18
  1012  000019                     	ds	1
  1013  00001A                     ToMainLow_sendmsg@length:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x19
  1017  00001A                     	ds	1
  1018  00001B                     ??_uart_receive_interrupt_handler:
  1019  00001B                     FromMainLow_recvmsg@data:
  1020                           	opt stack 0
  1021  00001B                     timer1_int_handler@result:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x1A
  1025  00001B                     	ds	2
  1026  00001D                     FromMainLow_recvmsg@maxlength:
  1027                           	opt stack 0
  1028  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
  1029                           	opt stack 0
  1030                           
  1031                           ; 14 bytes @ 0x1C
  1032  00001D                     	ds	1
  1033  00001E                     uart_transmit_interrupt_handler@data:
  1034                           	opt stack 0
  1035                           
  1036                           ; 14 bytes @ 0x1D
  1037  00001E                     	ds	13
  1038  00002B                     uart_receive_interrupt_handler@status:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x2A
  1042  00002B                     	ds	1
  1043  00002C                     uart_receive_interrupt_handler@status_2231:
  1044                           	opt stack 0
  1045  00002C                     uart_transmit_interrupt_handler@msgtype:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x2B
  1049  00002C                     	ds	1
  1050  00002D                     uart_transmit_interrupt_handler@message_status:
  1051                           	opt stack 0
  1052  00002D                     uart_receive_interrupt_handler@bad_checksum_message:
  1053                           	opt stack 0
  1054                           
  1055                           ; 3 bytes @ 0x2C
  1056  00002D                     	ds	3
  1057  000030                     uart_receive_interrupt_handler@bad_counter_id:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0x2F
  1061  000030                     	ds	2
  1062  000032                     uart_receive_interrupt_handler@bad_start_id:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x31
  1066  000032                     	ds	1
  1067  000033                     uart_receive_interrupt_handler@bad_end_id:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x32
  1071  000033                     	ds	1
  1072  000034                     uart_receive_interrupt_handler@message_count:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x33
  1076  000034                     	ds	1
  1077  000035                     uart_receive_interrupt_handler@checksum:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x34
  1081  000035                     	ds	1
  1082  000036                     uart_receive_interrupt_handler@i:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x35
  1086  000036                     	ds	2
  1087  000038                     uart_receive_interrupt_handler@msg_id:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x37
  1091  000038                     	ds	1
  1092  000039                     ??_InterruptHandlerLow:
  1093                           
  1094                           ; 0 bytes @ 0x38
  1095  000039                     	ds	17
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           
  1103 ;;
  1104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1105 ;;
  1106 ;; *************** function _main *****************
  1107 ;; Defined at:
  1108 ;;		line 188 in file "../src/main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  uart_respons   14   86[BANK1 ] unsigned char [14]
  1113 ;;  jjj             2  101[BANK1 ] int 
  1114 ;;  ic             38  108[BANK1 ] struct __i2c_comm
  1115 ;;  msgbuffer      15   69[BANK1 ] unsigned char [15]
  1116 ;;  sensor_data    14   52[BANK1 ] unsigned char [14]
  1117 ;;  t1thread_dat    2  104[BANK1 ] struct __timer1_thread_s
  1118 ;;  t0thread_dat    2   84[BANK1 ] struct __timer0_thread_s
  1119 ;;  uthread_data    2    0        struct __uart_thread_str
  1120 ;;  msgtype         1  107[BANK1 ] unsigned char 
  1121 ;;  length          1  106[BANK1 ] char 
  1122 ;;  z               1  103[BANK1 ] unsigned char 
  1123 ;;  need_sensor_    1  100[BANK1 ] unsigned char 
  1124 ;;  myByte2         1   68[BANK1 ] unsigned char 
  1125 ;;  myByte1         1   67[BANK1 ] unsigned char 
  1126 ;;  last_reg_rec    1   66[BANK1 ] unsigned char 
  1127 ;;  i               1    0        unsigned char 
  1128 ;;  c               1    0        unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;		None               void
  1131 ;; Registers used:
  1132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1139 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1141 ;;      Totals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1142 ;;Total ram usage:       94 bytes
  1143 ;; Hardware stack levels required when called:   16
  1144 ;; This function calls:
  1145 ;;		_OpenTimer0
  1146 ;;		_OpenTimer1
  1147 ;;		_ToMainHigh_recvmsg
  1148 ;;		_ToMainLow_recvmsg
  1149 ;;		_blip
  1150 ;;		_blip1
  1151 ;;		_blip2
  1152 ;;		_blip3
  1153 ;;		_debug_configure
  1154 ;;		_enable_interrupts
  1155 ;;		_i2c_configure_slave
  1156 ;;		_init_i2c
  1157 ;;		_init_queues
  1158 ;;		_init_timer1_lthread
  1159 ;;		_send_uart_message
  1160 ;;		_timer0_lthread
  1161 ;;		_timer1_lthread
  1162 ;;		_uart_configure
  1163 ;; This function is called by:
  1164 ;;		Startup code after reset
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text0
  1169  0007E2                     __ptext0:
  1170                           	opt stack 0
  1171  0007E2                     _main:
  1172                           	opt stack 15
  1173                           
  1174                           ;main.c: 189: char c;
  1175                           ;main.c: 190: signed char length;
  1176                           ;main.c: 191: unsigned char msgtype;
  1177                           ;main.c: 192: unsigned char last_reg_recvd;
  1178                           ;main.c: 193: i2c_comm ic;
  1179                           ;main.c: 194: unsigned char msgbuffer[14 + 1];
  1180                           ;main.c: 195: unsigned char i;
  1181                           ;main.c: 196: uart_thread_struct uthread_data;
  1182                           ;main.c: 197: timer1_thread_struct t1thread_data;
  1183                           ;main.c: 198: timer0_thread_struct t0thread_data;
  1184                           ;main.c: 199: unsigned char need_sensor_data = 1;
  1185                           
  1186                           ;incstack = 0
  1187  0007E2  0E01               	movlw	1
  1188  0007E4  0101               	movlb	1	; () banked
  1189  0007E6  6F64               	movwf	main@need_sensor_data& (0+255),b
  1190                           
  1191                           ;main.c: 215: OSCCON = 0xE0;
  1192  0007E8  0EE0               	movlw	224
  1193  0007EA  6ED3               	movwf	4051,c	;volatile
  1194                           
  1195                           ; BSR set to: 1
  1196                           ;main.c: 223: OSCTUNEbits.PLLEN = 1;
  1197  0007EC  8C9B               	bsf	3995,6,c	;volatile
  1198                           
  1199                           ; BSR set to: 1
  1200                           ;main.c: 238: init_i2c(&ic);
  1201  0007EE  0101               	movlb	1	; () banked
  1202  0007F0  0E01               	movlw	high main@ic
  1203  0007F2  0101               	movlb	1	; () banked
  1204  0007F4  6F01               	movwf	(init_i2c@ic+1)& (0+255),b
  1205  0007F6  0101               	movlb	1	; () banked
  1206  0007F8  0E6C               	movlw	low main@ic
  1207  0007FA  0101               	movlb	1	; () banked
  1208  0007FC  6F00               	movwf	init_i2c@ic& (0+255),b
  1209  0007FE  ECEA  F00B         	call	_init_i2c	;wreg free
  1210                           
  1211                           ;main.c: 241: init_timer1_lthread(&t1thread_data);
  1212  000802  0101               	movlb	1	; () banked
  1213  000804  0E01               	movlw	high main@t1thread_data
  1214  000806  0101               	movlb	1	; () banked
  1215  000808  6F01               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1216  00080A  0101               	movlb	1	; () banked
  1217  00080C  0E68               	movlw	low main@t1thread_data
  1218  00080E  0101               	movlb	1	; () banked
  1219  000810  6F00               	movwf	init_timer1_lthread@tptr& (0+255),b
  1220  000812  ECE1  F00E         	call	_init_timer1_lthread	;wreg free
  1221                           
  1222                           ;main.c: 244: init_queues();
  1223  000816  ECB1  F00C         	call	_init_queues	;wreg free
  1224                           
  1225                           ;main.c: 248: TRISB = 0x0;
  1226  00081A  0E00               	movlw	0
  1227  00081C  6E93               	movwf	3987,c	;volatile
  1228                           
  1229                           ;main.c: 249: LATB = 0x0;
  1230  00081E  0E00               	movlw	0
  1231  000820  6E8A               	movwf	3978,c	;volatile
  1232                           
  1233                           ;main.c: 262: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1234  000822  0E96               	movlw	150
  1235  000824  EC9C  F00E         	call	_OpenTimer0
  1236                           
  1237                           ;main.c: 269: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1238  000828  0E00               	movlw	0
  1239  00082A  0101               	movlb	1	; () banked
  1240  00082C  6F00               	movwf	OpenTimer1@config1& (0+255),b
  1241  00082E  0E9B               	movlw	155
  1242  000830  EC6C  F00D         	call	_OpenTimer1
  1243                           
  1244                           ;main.c: 278: IPR1bits.TMR1IP = 0;
  1245  000834  909F               	bcf	3999,0,c	;volatile
  1246                           
  1247                           ;main.c: 280: IPR1bits.RCIP = 0;
  1248  000836  9A9F               	bcf	3999,5,c	;volatile
  1249                           
  1250                           ;main.c: 283: IPR1bits.SSPIP = 1;
  1251  000838  869F               	bsf	3999,3,c	;volatile
  1252                           
  1253                           ;main.c: 292: i2c_configure_slave(0x9E,&need_sensor_data);
  1254  00083A  0101               	movlb	1	; () banked
  1255  00083C  0E01               	movlw	high main@need_sensor_data
  1256  00083E  0101               	movlb	1	; () banked
  1257  000840  6F01               	movwf	(i2c_configure_slave@ptr_thingy+1)& (0+255),b
  1258  000842  0101               	movlb	1	; () banked
  1259  000844  0E64               	movlw	low main@need_sensor_data
  1260  000846  0101               	movlb	1	; () banked
  1261  000848  6F00               	movwf	i2c_configure_slave@ptr_thingy& (0+255),b
  1262  00084A  0E9E               	movlw	158
  1263  00084C  ECA7  F00D         	call	_i2c_configure_slave
  1264                           
  1265                           ;main.c: 307: PIE1bits.SSPIE = 1;
  1266  000850  869D               	bsf	3997,3,c	;volatile
  1267                           
  1268                           ;main.c: 332: debug_configure();
  1269  000852  EC14  F00F         	call	_debug_configure	;wreg free
  1270                           
  1271                           ;main.c: 333: blip();
  1272  000856  EC29  F00F         	call	_blip	;wreg free
  1273                           
  1274                           ;main.c: 334: blip1();
  1275  00085A  EC25  F00F         	call	_blip1	;wreg free
  1276                           
  1277                           ;main.c: 335: blip2();
  1278  00085E  EC21  F00F         	call	_blip2	;wreg free
  1279                           
  1280                           ;main.c: 336: blip3();
  1281  000862  EC1D  F00F         	call	_blip3	;wreg free
  1282                           
  1283                           ;main.c: 345: enable_interrupts();
  1284  000866  EC19  F00F         	call	_enable_interrupts	;wreg free
  1285                           
  1286                           ;main.c: 358: uart_configure();
  1287  00086A  ECC1  F00E         	call	_uart_configure	;wreg free
  1288                           
  1289                           ;main.c: 360: unsigned char myByte1 = 0x44;
  1290  00086E  0E44               	movlw	68
  1291  000870  0101               	movlb	1	; () banked
  1292  000872  6F43               	movwf	main@myByte1& (0+255),b
  1293                           
  1294                           ; BSR set to: 1
  1295                           ;main.c: 361: unsigned char myByte2 = 0x44;
  1296  000874  0E44               	movlw	68
  1297  000876  0101               	movlb	1	; () banked
  1298  000878  6F44               	movwf	main@myByte2& (0+255),b
  1299                           
  1300                           ; BSR set to: 1
  1301                           ;main.c: 369: unsigned char sensor_data[14];
  1302                           ;main.c: 370: sensor_data[0] = 0x03;
  1303  00087A  0E03               	movlw	3
  1304  00087C  0101               	movlb	1	; () banked
  1305  00087E  6F34               	movwf	main@sensor_data& (0+255),b
  1306                           
  1307                           ; BSR set to: 1
  1308                           ;main.c: 371: unsigned char z;
  1309                           ;main.c: 372: for(z=1;z<14;z++)
  1310  000880  0E01               	movlw	1
  1311  000882  0101               	movlb	1	; () banked
  1312  000884  6F67               	movwf	main@z& (0+255),b
  1313  000886  D00F               	goto	L3
  1314  000888                     l3799:
  1315                           
  1316                           ; BSR set to: 1
  1317                           ;main.c: 373: {
  1318                           ;main.c: 374: sensor_data[z] = 0x00;
  1319  000888  0101               	movlb	1	; () banked
  1320  00088A  5167               	movf	main@z& (0+255),w,b
  1321  00088C  0D01               	mullw	1
  1322  00088E  0101               	movlb	1	; () banked
  1323  000890  0E34               	movlw	low main@sensor_data
  1324  000892  24F3               	addwf	prodl,w,c
  1325  000894  6ED9               	movwf	fsr2l,c
  1326  000896  0101               	movlb	1	; () banked
  1327  000898  0E01               	movlw	high main@sensor_data
  1328  00089A  20F4               	addwfc	prodh,w,c
  1329  00089C  6EDA               	movwf	fsr2h,c
  1330  00089E  0E00               	movlw	0
  1331  0008A0  6EDF               	movwf	indf2,c
  1332                           
  1333                           ; BSR set to: 1
  1334  0008A2  0101               	movlb	1	; () banked
  1335  0008A4  2B67               	incf	main@z& (0+255),f,b
  1336  0008A6                     L3:
  1337                           
  1338                           ; BSR set to: 1
  1339  0008A6  0E0D               	movlw	13
  1340  0008A8  0101               	movlb	1	; () banked
  1341  0008AA  6567               	cpfsgt	main@z& (0+255),b
  1342  0008AC  D7ED               	goto	l3799
  1343  0008AE                     l3805:
  1344                           
  1345                           ;main.c: 390: if( need_sensor_data )
  1346  0008AE  0101               	movlb	1	; () banked
  1347  0008B0  5164               	movf	main@need_sensor_data& (0+255),w,b
  1348  0008B2  B4D8               	btfsc	status,2,c
  1349  0008B4  D003               	goto	l3809
  1350                           
  1351                           ; BSR set to: 1
  1352                           ;main.c: 391: {
  1353                           ;main.c: 394: need_sensor_data = 0;
  1354  0008B6  0E00               	movlw	0
  1355  0008B8  0101               	movlb	1	; () banked
  1356  0008BA  6F64               	movwf	main@need_sensor_data& (0+255),b
  1357  0008BC                     l3809:
  1358                           
  1359                           ; BSR set to: 1
  1360                           ;main.c: 395: }
  1361                           ;main.c: 405: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1362  0008BC  0101               	movlb	1	; () banked
  1363  0008BE  0E01               	movlw	high main@msgtype
  1364  0008C0  0101               	movlb	1	; () banked
  1365  0008C2  6F19               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1366  0008C4  0101               	movlb	1	; () banked
  1367  0008C6  0E6B               	movlw	low main@msgtype
  1368  0008C8  0101               	movlb	1	; () banked
  1369  0008CA  6F18               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1370  0008CC  0101               	movlb	1	; () banked
  1371  0008CE  0E01               	movlw	high main@msgbuffer
  1372  0008D0  0101               	movlb	1	; () banked
  1373  0008D2  6F1B               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1374  0008D4  0101               	movlb	1	; () banked
  1375  0008D6  0E45               	movlw	low main@msgbuffer
  1376  0008D8  0101               	movlb	1	; () banked
  1377  0008DA  6F1A               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1378  0008DC  0E0E               	movlw	14
  1379  0008DE  ECDE  F00D         	call	_ToMainHigh_recvmsg
  1380  0008E2  0101               	movlb	1	; () banked
  1381  0008E4  6F6A               	movwf	main@length& (0+255),b
  1382                           
  1383                           ; BSR set to: 1
  1384                           ;main.c: 406: if (length < 0) {
  1385  0008E6  0101               	movlb	1	; () banked
  1386  0008E8  BF6A               	btfsc	main@length& (0+255),7,b
  1387  0008EA  D031               	goto	l3823
  1388  0008EC  D024               	goto	l3821
  1389  0008EE                     l3815:
  1390                           
  1391                           ; BSR set to: 1
  1392                           ;main.c: 416: {
  1393                           ;main.c: 417: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1394  0008EE  0101               	movlb	1	; () banked
  1395  0008F0  0E01               	movlw	high main@t0thread_data
  1396  0008F2  0101               	movlb	1	; () banked
  1397  0008F4  6F01               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1398  0008F6  0101               	movlb	1	; () banked
  1399  0008F8  0E54               	movlw	low main@t0thread_data
  1400  0008FA  0101               	movlb	1	; () banked
  1401  0008FC  6F00               	movwf	timer0_lthread@tptr& (0+255),b
  1402  0008FE  0101               	movlb	1	; () banked
  1403  000900  C16B  F102         	movff	main@msgtype,timer0_lthread@msgtype
  1404  000904  0101               	movlb	1	; () banked
  1405  000906  6B03               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1406  000908  0101               	movlb	1	; () banked
  1407  00090A  516A               	movf	main@length& (0+255),w,b
  1408  00090C  0101               	movlb	1	; () banked
  1409  00090E  6F04               	movwf	timer0_lthread@length& (0+255),b
  1410  000910  0101               	movlb	1	; () banked
  1411  000912  6B05               	clrf	(timer0_lthread@length+1)& (0+255),b
  1412  000914  0101               	movlb	1	; () banked
  1413  000916  BF04               	btfsc	timer0_lthread@length& (0+255),7,b
  1414  000918  0705               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1415  00091A  0101               	movlb	1	; () banked
  1416  00091C  0E01               	movlw	high main@msgbuffer
  1417  00091E  0101               	movlb	1	; () banked
  1418  000920  6F07               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1419  000922  0101               	movlb	1	; () banked
  1420  000924  0E45               	movlw	low main@msgbuffer
  1421  000926  0101               	movlb	1	; () banked
  1422  000928  6F06               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1423  00092A  EC0D  F00F         	call	_timer0_lthread	;wreg free
  1424                           
  1425                           ;main.c: 418: break;
  1426  00092E  D00F               	goto	l3823
  1427  000930                     l114:
  1428                           
  1429                           ;main.c: 421: case 41:
  1430                           ;main.c: 422: {
  1431                           ;main.c: 425: last_reg_recvd = msgbuffer[0];
  1432  000930  C145  F142         	movff	main@msgbuffer,main@last_reg_recvd
  1433                           
  1434                           ;main.c: 426: break;
  1435  000934  D00C               	goto	l3823
  1436  000936                     l3821:
  1437  000936  0101               	movlb	1	; () banked
  1438  000938  516B               	movf	main@msgtype& (0+255),w,b
  1439                           
  1440                           ; Switch size 1, requested type "space"
  1441                           ; Number of cases is 4, Range of values is 10 to 42
  1442                           ; switch strategies available:
  1443                           ; Name         Instructions Cycles
  1444                           ; simple_byte           13     7 (average)
  1445                           ;	Chosen strategy is simple_byte
  1446  00093A  0A0A               	xorlw	10	; case 10
  1447  00093C  B4D8               	btfsc	status,2,c
  1448  00093E  D7D7               	goto	l3815
  1449  000940  0A22               	xorlw	34	; case 40
  1450  000942  B4D8               	btfsc	status,2,c
  1451  000944  D7F5               	goto	l114
  1452  000946  0A01               	xorlw	1	; case 41
  1453  000948  B4D8               	btfsc	status,2,c
  1454  00094A  D7F2               	goto	l114
  1455  00094C  0A03               	xorlw	3	; case 42
  1456  00094E                     l3823:
  1457                           
  1458                           ;main.c: 445: }
  1459                           ;main.c: 448: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1460  00094E  0101               	movlb	1	; () banked
  1461  000950  0E01               	movlw	high main@msgtype
  1462  000952  0101               	movlb	1	; () banked
  1463  000954  6F19               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1464  000956  0101               	movlb	1	; () banked
  1465  000958  0E6B               	movlw	low main@msgtype
  1466  00095A  0101               	movlb	1	; () banked
  1467  00095C  6F18               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1468  00095E  0101               	movlb	1	; () banked
  1469  000960  0E01               	movlw	high main@msgbuffer
  1470  000962  0101               	movlb	1	; () banked
  1471  000964  6F1B               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1472  000966  0101               	movlb	1	; () banked
  1473  000968  0E45               	movlw	low main@msgbuffer
  1474  00096A  0101               	movlb	1	; () banked
  1475  00096C  6F1A               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1476  00096E  0E0E               	movlw	14
  1477  000970  ECC3  F00D         	call	_ToMainLow_recvmsg
  1478  000974  0101               	movlb	1	; () banked
  1479  000976  6F6A               	movwf	main@length& (0+255),b
  1480                           
  1481                           ; BSR set to: 1
  1482                           ;main.c: 449: if (length < 0) {
  1483  000978  0101               	movlb	1	; () banked
  1484  00097A  BF6A               	btfsc	main@length& (0+255),7,b
  1485  00097C  D798               	goto	l3805
  1486                           
  1487                           ; BSR set to: 1
  1488                           ;main.c: 455: else
  1489                           ;main.c: 456: {
  1490                           ;main.c: 457: unsigned char uart_response[14];
  1491                           ;main.c: 458: int jjj;
  1492                           ;main.c: 459: for(jjj=0;jjj<14;jjj++)
  1493                           
  1494                           ; BSR set to: 1
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;main.c: 453: }
  1498                           ;main.c: 454: }
  1499                           
  1500                           ; BSR set to: 1
  1501  00097E  0E00               	movlw	0
  1502  000980  0101               	movlb	1	; () banked
  1503  000982  6F66               	movwf	(main@jjj+1)& (0+255),b
  1504  000984  0E00               	movlw	0
  1505  000986  0101               	movlb	1	; () banked
  1506  000988  6F65               	movwf	main@jjj& (0+255),b
  1507  00098A                     
  1508                           ; BSR set to: 1
  1509  00098A  0101               	movlb	1	; () banked
  1510  00098C  5166               	movf	(main@jjj+1)& (0+255),w,b
  1511  00098E  0A80               	xorlw	128
  1512  000990  0F80               	addlw	-128
  1513  000992  0E0E               	movlw	14
  1514  000994  B4D8               	btfsc	status,2,c
  1515  000996  5D65               	subwf	main@jjj& (0+255),w,b
  1516  000998  B0D8               	btfsc	status,0,c
  1517  00099A  D094               	goto	l3883
  1518                           
  1519                           ; BSR set to: 1
  1520                           ;main.c: 460: {
  1521                           ;main.c: 461: uart_response[jjj] = 0;
  1522                           
  1523                           ; BSR set to: 1
  1524                           
  1525                           ; BSR set to: 1
  1526  00099C  0101               	movlb	1	; () banked
  1527  00099E  0E56               	movlw	low main@uart_response
  1528  0009A0  0101               	movlb	1	; () banked
  1529  0009A2  2565               	addwf	main@jjj& (0+255),w,b
  1530  0009A4  6ED9               	movwf	fsr2l,c
  1531  0009A6  0101               	movlb	1	; () banked
  1532  0009A8  0E01               	movlw	high main@uart_response
  1533  0009AA  0101               	movlb	1	; () banked
  1534  0009AC  2166               	addwfc	(main@jjj+1)& (0+255),w,b
  1535  0009AE  6EDA               	movwf	fsr2h,c
  1536  0009B0  0E00               	movlw	0
  1537  0009B2  6EDF               	movwf	indf2,c
  1538                           
  1539                           ; BSR set to: 1
  1540  0009B4  0101               	movlb	1	; () banked
  1541  0009B6  4B65               	infsnz	main@jjj& (0+255),f,b
  1542  0009B8  2B66               	incf	(main@jjj+1)& (0+255),f,b
  1543  0009BA  D7E7               	goto	L2
  1544  0009BC                     l3841:
  1545                           
  1546                           ; BSR set to: 1
  1547                           ;main.c: 466: {
  1548                           ;main.c: 467: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1549  0009BC  0101               	movlb	1	; () banked
  1550  0009BE  0E01               	movlw	high main@t1thread_data
  1551  0009C0  0101               	movlb	1	; () banked
  1552  0009C2  6F1E               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1553  0009C4  0101               	movlb	1	; () banked
  1554  0009C6  0E68               	movlw	low main@t1thread_data
  1555  0009C8  0101               	movlb	1	; () banked
  1556  0009CA  6F1D               	movwf	timer1_lthread@tptr& (0+255),b
  1557  0009CC  0101               	movlb	1	; () banked
  1558  0009CE  C16B  F11F         	movff	main@msgtype,timer1_lthread@msgtype
  1559  0009D2  0101               	movlb	1	; () banked
  1560  0009D4  6B20               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1561  0009D6  0101               	movlb	1	; () banked
  1562  0009D8  516A               	movf	main@length& (0+255),w,b
  1563  0009DA  0101               	movlb	1	; () banked
  1564  0009DC  6F21               	movwf	timer1_lthread@length& (0+255),b
  1565  0009DE  0101               	movlb	1	; () banked
  1566  0009E0  6B22               	clrf	(timer1_lthread@length+1)& (0+255),b
  1567  0009E2  0101               	movlb	1	; () banked
  1568  0009E4  BF21               	btfsc	timer1_lthread@length& (0+255),7,b
  1569  0009E6  0722               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1570  0009E8  0101               	movlb	1	; () banked
  1571  0009EA  0E01               	movlw	high main@msgbuffer
  1572  0009EC  0101               	movlb	1	; () banked
  1573  0009EE  6F24               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1574  0009F0  0101               	movlb	1	; () banked
  1575  0009F2  0E45               	movlw	low main@msgbuffer
  1576  0009F4  0101               	movlb	1	; () banked
  1577  0009F6  6F23               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1578  0009F8  EC7D  F005         	call	_timer1_lthread	;wreg free
  1579                           
  1580                           ;main.c: 468: break;
  1581  0009FC  D758               	goto	l3805
  1582  0009FE                     l3843:
  1583                           
  1584                           ;main.c: 473: {
  1585                           ;main.c: 474: uart_response[0] = 0xf1;
  1586  0009FE  0EF1               	movlw	241
  1587  000A00  0101               	movlb	1	; () banked
  1588  000A02  6F56               	movwf	main@uart_response& (0+255),b
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;main.c: 475: uart_response[1] = msgbuffer[0];
  1592  000A04  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1593                           
  1594                           ; BSR set to: 1
  1595                           ;main.c: 476: send_uart_message( uart_response );
  1596  000A08  0101               	movlb	1	; () banked
  1597  000A0A  0E01               	movlw	high main@uart_response
  1598  000A0C  0101               	movlb	1	; () banked
  1599  000A0E  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1600  000A10  0101               	movlb	1	; () banked
  1601  000A12  0E56               	movlw	low main@uart_response
  1602  000A14  0101               	movlb	1	; () banked
  1603  000A16  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1604  000A18  ECD1  F00E         	call	_send_uart_message	;wreg free
  1605                           
  1606                           ;main.c: 477: break;
  1607  000A1C  D748               	goto	l3805
  1608  000A1E                     l3849:
  1609                           
  1610                           ;main.c: 480: {
  1611                           ;main.c: 481: uart_response[0] = 0xf2;
  1612  000A1E  0EF2               	movlw	242
  1613  000A20  0101               	movlb	1	; () banked
  1614  000A22  6F56               	movwf	main@uart_response& (0+255),b
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;main.c: 482: uart_response[1] = msgbuffer[0];
  1618  000A24  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1619                           
  1620                           ; BSR set to: 1
  1621                           ;main.c: 483: uart_response[2] = msgbuffer[1];
  1622  000A28  C146  F158         	movff	main@msgbuffer+1,main@uart_response+2
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;main.c: 484: send_uart_message( uart_response );
  1626  000A2C  0101               	movlb	1	; () banked
  1627  000A2E  0E01               	movlw	high main@uart_response
  1628  000A30  0101               	movlb	1	; () banked
  1629  000A32  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1630  000A34  0101               	movlb	1	; () banked
  1631  000A36  0E56               	movlw	low main@uart_response
  1632  000A38  0101               	movlb	1	; () banked
  1633  000A3A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1634  000A3C  ECD1  F00E         	call	_send_uart_message	;wreg free
  1635                           
  1636                           ;main.c: 485: break;
  1637  000A40  D736               	goto	l3805
  1638  000A42                     l3857:
  1639                           
  1640                           ;main.c: 488: {
  1641                           ;main.c: 489: uart_response[0] = 0xf3;
  1642  000A42  0EF3               	movlw	243
  1643  000A44  0101               	movlb	1	; () banked
  1644  000A46  6F56               	movwf	main@uart_response& (0+255),b
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1648  000A48  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1649                           
  1650                           ; BSR set to: 1
  1651                           ;main.c: 491: send_uart_message( uart_response );
  1652  000A4C  0101               	movlb	1	; () banked
  1653  000A4E  0E01               	movlw	high main@uart_response
  1654  000A50  0101               	movlb	1	; () banked
  1655  000A52  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1656  000A54  0101               	movlb	1	; () banked
  1657  000A56  0E56               	movlw	low main@uart_response
  1658  000A58  0101               	movlb	1	; () banked
  1659  000A5A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1660  000A5C  ECD1  F00E         	call	_send_uart_message	;wreg free
  1661                           
  1662                           ;main.c: 492: break;
  1663  000A60  D726               	goto	l3805
  1664  000A62                     l3863:
  1665                           
  1666                           ;main.c: 495: {
  1667                           ;main.c: 496: uart_response[0] = 0xf4;
  1668  000A62  0EF4               	movlw	244
  1669  000A64  0101               	movlb	1	; () banked
  1670  000A66  6F56               	movwf	main@uart_response& (0+255),b
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;main.c: 497: uart_response[1] = msgbuffer[0];
  1674  000A68  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1675                           
  1676                           ; BSR set to: 1
  1677                           ;main.c: 498: send_uart_message( uart_response );
  1678  000A6C  0101               	movlb	1	; () banked
  1679  000A6E  0E01               	movlw	high main@uart_response
  1680  000A70  0101               	movlb	1	; () banked
  1681  000A72  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1682  000A74  0101               	movlb	1	; () banked
  1683  000A76  0E56               	movlw	low main@uart_response
  1684  000A78  0101               	movlb	1	; () banked
  1685  000A7A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1686  000A7C  ECD1  F00E         	call	_send_uart_message	;wreg free
  1687                           
  1688                           ;main.c: 499: break;
  1689  000A80  D716               	goto	l3805
  1690  000A82                     l3869:
  1691                           
  1692                           ;main.c: 503: {
  1693                           ;main.c: 504: uart_response[0] = 0x11;
  1694  000A82  0E11               	movlw	17
  1695  000A84  0101               	movlb	1	; () banked
  1696  000A86  6F56               	movwf	main@uart_response& (0+255),b
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;main.c: 505: uart_response[1] = msgbuffer[0];
  1700  000A88  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;main.c: 506: send_uart_message( uart_response );
  1704  000A8C  0101               	movlb	1	; () banked
  1705  000A8E  0E01               	movlw	high main@uart_response
  1706  000A90  0101               	movlb	1	; () banked
  1707  000A92  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1708  000A94  0101               	movlb	1	; () banked
  1709  000A96  0E56               	movlw	low main@uart_response
  1710  000A98  0101               	movlb	1	; () banked
  1711  000A9A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1712  000A9C  ECD1  F00E         	call	_send_uart_message	;wreg free
  1713                           
  1714                           ;main.c: 507: break;
  1715  000AA0  D706               	goto	l3805
  1716  000AA2                     l3875:
  1717                           
  1718                           ;main.c: 516: {
  1719                           ;main.c: 517: send_uart_message( sensor_data );
  1720  000AA2  0101               	movlb	1	; () banked
  1721  000AA4  0E01               	movlw	high main@sensor_data
  1722  000AA6  0101               	movlb	1	; () banked
  1723  000AA8  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1724  000AAA  0101               	movlb	1	; () banked
  1725  000AAC  0E34               	movlw	low main@sensor_data
  1726  000AAE  0101               	movlb	1	; () banked
  1727  000AB0  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1728  000AB2  ECD1  F00E         	call	_send_uart_message	;wreg free
  1729                           
  1730                           ;main.c: 518: break;
  1731  000AB6  D6FB               	goto	l3805
  1732  000AB8                     l3879:
  1733  000AB8  0101               	movlb	1	; () banked
  1734  000ABA  5145               	movf	main@msgbuffer& (0+255),w,b
  1735                           
  1736                           ; Switch size 1, requested type "space"
  1737                           ; Number of cases is 1, Range of values is 2 to 2
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte            4     3 (average)
  1741                           ;	Chosen strategy is simple_byte
  1742  000ABC  0A02               	xorlw	2	; case 2
  1743  000ABE  B4D8               	btfsc	status,2,c
  1744  000AC0  D7F0               	goto	l3875
  1745  000AC2  D6F5               	goto	l3805
  1746  000AC4                     l3883:
  1747                           
  1748                           ; BSR set to: 1
  1749  000AC4  0101               	movlb	1	; () banked
  1750  000AC6  516B               	movf	main@msgtype& (0+255),w,b
  1751                           
  1752                           ; Switch size 1, requested type "space"
  1753                           ; Number of cases is 8, Range of values is 11 to 36
  1754                           ; switch strategies available:
  1755                           ; Name         Instructions Cycles
  1756                           ; simple_byte           25    13 (average)
  1757                           ;	Chosen strategy is simple_byte
  1758  000AC8  0A0B               	xorlw	11	; case 11
  1759  000ACA  B4D8               	btfsc	status,2,c
  1760  000ACC  D777               	goto	l3841
  1761  000ACE  0A15               	xorlw	21	; case 30
  1762  000AD0  B4D8               	btfsc	status,2,c
  1763  000AD2  D795               	goto	l3843
  1764  000AD4  0A01               	xorlw	1	; case 31
  1765  000AD6  B4D8               	btfsc	status,2,c
  1766  000AD8  D7EF               	goto	l3879
  1767  000ADA  0A3F               	xorlw	63	; case 32
  1768  000ADC  B4D8               	btfsc	status,2,c
  1769  000ADE  D78F               	goto	l3843
  1770  000AE0  0A01               	xorlw	1	; case 33
  1771  000AE2  B4D8               	btfsc	status,2,c
  1772  000AE4  D79C               	goto	l3849
  1773  000AE6  0A03               	xorlw	3	; case 34
  1774  000AE8  B4D8               	btfsc	status,2,c
  1775  000AEA  D7AB               	goto	l3857
  1776  000AEC  0A01               	xorlw	1	; case 35
  1777  000AEE  B4D8               	btfsc	status,2,c
  1778  000AF0  D7B8               	goto	l3863
  1779  000AF2  0A07               	xorlw	7	; case 36
  1780  000AF4  B4D8               	btfsc	status,2,c
  1781  000AF6  D7C5               	goto	l3869
  1782  000AF8  D6DA               	goto	l3805
  1783  000AFA                     __end_of_main:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           prodh	equ	0xFF4
  1790                           prodl	equ	0xFF3
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           indf2	equ	0xFDF
  1794                           fsr2h	equ	0xFDA
  1795                           fsr2l	equ	0xFD9
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _uart_configure *****************
  1799 ;; Defined at:
  1800 ;;		line 22 in file "../src/my_uart.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;		None               void
  1807 ;; Registers used:
  1808 ;;		wreg, status,2
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:   11
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text1
  1829  001D82                     __ptext1:
  1830                           	opt stack 0
  1831  001D82                     _uart_configure:
  1832                           	opt stack 19
  1833                           
  1834                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1835                           
  1836                           ; BSR set to: 1
  1837                           ;incstack = 0
  1838  001D82  8E94               	bsf	3988,7,c	;volatile
  1839                           
  1840                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1841  001D84  9C94               	bcf	3988,6,c	;volatile
  1842                           
  1843                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1844  001D86  867E               	bsf	3966,3,c	;volatile
  1845                           
  1846                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1847  001D88  84AD               	bsf	4013,2,c	;volatile
  1848                           
  1849                           ;my_uart.c: 31: SPBRGH1 = 0x00;
  1850  001D8A  0E00               	movlw	0
  1851  001D8C  6E7F               	movwf	3967,c	;volatile
  1852                           
  1853                           ;my_uart.c: 32: SPBRG1 = 0xCF;
  1854  001D8E  0ECF               	movlw	207
  1855  001D90  6EB0               	movwf	4016,c	;volatile
  1856                           
  1857                           ;my_uart.c: 34: TXSTA1bits.SYNC = 0;
  1858  001D92  98AD               	bcf	4013,4,c	;volatile
  1859                           
  1860                           ;my_uart.c: 35: RCSTA1bits.SPEN = 1;
  1861  001D94  8EAC               	bsf	4012,7,c	;volatile
  1862                           
  1863                           ;my_uart.c: 38: IPR1bits.TX1IP = 0;
  1864  001D96  989F               	bcf	3999,4,c	;volatile
  1865                           
  1866                           ;my_uart.c: 40: PIE1bits.TX1IE = 0;
  1867  001D98  989D               	bcf	3997,4,c	;volatile
  1868                           
  1869                           ;my_uart.c: 41: PIE1bits.RC1IE = 1;
  1870  001D9A  8A9D               	bsf	3997,5,c	;volatile
  1871                           
  1872                           ;my_uart.c: 43: TXSTA1bits.TXEN = 1;
  1873  001D9C  8AAD               	bsf	4013,5,c	;volatile
  1874                           
  1875                           ;my_uart.c: 44: RCSTA1bits.CREN = 1;
  1876  001D9E  88AC               	bsf	4012,4,c	;volatile
  1877  001DA0  0012               	return	
  1878  001DA2                     __end_of_uart_configure:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           postinc0	equ	0xFEE
  1887                           wreg	equ	0xFE8
  1888                           indf2	equ	0xFDF
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8
  1892                           
  1893 ;; *************** function _timer1_lthread *****************
  1894 ;; Defined at:
  1895 ;;		line 16 in file "../src/timer1_thread.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  tptr            2   29[BANK1 ] PTR struct __timer1_thre
  1898 ;;		 -> main@t1thread_data(2), 
  1899 ;;  msgtype         2   31[BANK1 ] int 
  1900 ;;  length          2   33[BANK1 ] int 
  1901 ;;  msgbuffer       2   35[BANK1 ] PTR unsigned char 
  1902 ;;		 -> main@msgbuffer(15), 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  move_msg       14   38[BANK1 ] unsigned char [14]
  1905 ;;  retval          1   37[BANK1 ] char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2   29[BANK1 ] int 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1915 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1916 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;Total ram usage:       23 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:   15
  1922 ;; This function calls:
  1923 ;;		_FromMainHigh_sendmsg
  1924 ;;		___lwmod
  1925 ;;		_blink0
  1926 ;;		_send_uart_message
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text2
  1933  000AFA                     __ptext2:
  1934                           	opt stack 0
  1935  000AFA                     _timer1_lthread:
  1936                           	opt stack 15
  1937                           
  1938                           ;timer1_thread.c: 17: signed char retval;
  1939                           ;timer1_thread.c: 19: blink0();
  1940                           
  1941                           ;incstack = 0
  1942  000AFA  EC44  F00F         	call	_blink0	;wreg free
  1943                           
  1944                           ;timer1_thread.c: 21: static unsigned char move_time = 40;
  1945                           ;timer1_thread.c: 23: unsigned char move_msg[14];
  1946                           ;timer1_thread.c: 24: move_msg[0] = 0x01;
  1947  000AFE  0E01               	movlw	1
  1948  000B00  0101               	movlb	1	; () banked
  1949  000B02  6F26               	movwf	timer1_lthread@move_msg& (0+255),b
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;timer1_thread.c: 25: move_msg[4] = 40;
  1953  000B04  0E28               	movlw	40
  1954  000B06  0101               	movlb	1	; () banked
  1955  000B08  6F2A               	movwf	(timer1_lthread@move_msg+4)& (0+255),b
  1956                           
  1957                           ;timer1_thread.c: 36: static unsigned char move_state = 0x00;
  1958                           ;timer1_thread.c: 37: switch(move_state)
  1959  000B0A  D0A6               	goto	l3735
  1960  000B0C                     l3687:
  1961                           
  1962                           ;timer1_thread.c: 40: {
  1963                           ;timer1_thread.c: 41: move_state = 0x00;
  1964  000B0C  0E00               	movlw	0
  1965  000B0E  0100               	movlb	0	; () banked
  1966  000B10  6FB2               	movwf	timer1_lthread@move_state& (0+255),b
  1967                           
  1968                           ;timer1_thread.c: 43: move_msg[1] = 127;
  1969  000B12  0E7F               	movlw	127
  1970  000B14  0101               	movlb	1	; () banked
  1971  000B16  6F27               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  1972                           
  1973                           ;timer1_thread.c: 44: move_msg[2] = 127;
  1974  000B18  0E7F               	movlw	127
  1975  000B1A  0101               	movlb	1	; () banked
  1976  000B1C  6F28               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;timer1_thread.c: 45: send_uart_message( move_msg );
  1980  000B1E  0101               	movlb	1	; () banked
  1981  000B20  0E01               	movlw	high timer1_lthread@move_msg
  1982  000B22  0101               	movlb	1	; () banked
  1983  000B24  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1984  000B26  0101               	movlb	1	; () banked
  1985  000B28  0E26               	movlw	low timer1_lthread@move_msg
  1986  000B2A  0101               	movlb	1	; () banked
  1987  000B2C  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1988  000B2E  ECD1  F00E         	call	_send_uart_message	;wreg free
  1989  000B32                     l3691:
  1990                           
  1991                           ;timer1_thread.c: 48: {
  1992                           ;timer1_thread.c: 49: move_time--;
  1993  000B32  0100               	movlb	0	; () banked
  1994  000B34  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;timer1_thread.c: 51: if(move_time==0)
  1998  000B36  0100               	movlb	0	; () banked
  1999  000B38  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2000  000B3A  D0A3               	goto	l3737
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;timer1_thread.c: 52: {
  2004                           ;timer1_thread.c: 53: move_time = 40;
  2005  000B3C  0E28               	movlw	40
  2006  000B3E  0100               	movlb	0	; () banked
  2007  000B40  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2008                           
  2009                           ;timer1_thread.c: 54: move_state = 0x01;
  2010  000B42  0E01               	movlw	1
  2011  000B44  0100               	movlb	0	; () banked
  2012  000B46  6FB2               	movwf	timer1_lthread@move_state& (0+255),b
  2013                           
  2014                           ;timer1_thread.c: 56: move_msg[1] = (unsigned char)(-127);
  2015  000B48  0E81               	movlw	129
  2016  000B4A  0101               	movlb	1	; () banked
  2017  000B4C  6F27               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2018                           
  2019                           ;timer1_thread.c: 57: move_msg[2] = (unsigned char)(-127);
  2020  000B4E  0E81               	movlw	129
  2021  000B50  0101               	movlb	1	; () banked
  2022  000B52  6F28               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;timer1_thread.c: 59: send_uart_message( move_msg );
  2026  000B54  0101               	movlb	1	; () banked
  2027  000B56  0E01               	movlw	high timer1_lthread@move_msg
  2028  000B58  0101               	movlb	1	; () banked
  2029  000B5A  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2030  000B5C  0101               	movlb	1	; () banked
  2031  000B5E  0E26               	movlw	low timer1_lthread@move_msg
  2032  000B60  0101               	movlb	1	; () banked
  2033  000B62  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2034  000B64  ECD1  F00E         	call	_send_uart_message	;wreg free
  2035  000B68  D08C               	goto	l3737
  2036  000B6A                     l3699:
  2037                           
  2038                           ;timer1_thread.c: 64: {
  2039                           ;timer1_thread.c: 65: move_time--;
  2040  000B6A  0100               	movlb	0	; () banked
  2041  000B6C  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;timer1_thread.c: 67: if(move_time==0)
  2045  000B6E  0100               	movlb	0	; () banked
  2046  000B70  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2047  000B72  D087               	goto	l3737
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;timer1_thread.c: 68: {
  2051                           ;timer1_thread.c: 69: move_time = 40;
  2052  000B74  0E28               	movlw	40
  2053  000B76  0100               	movlb	0	; () banked
  2054  000B78  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2055                           
  2056                           ;timer1_thread.c: 70: move_state = 0x02;
  2057  000B7A  0E02               	movlw	2
  2058  000B7C  0100               	movlb	0	; () banked
  2059  000B7E  6FB2               	movwf	timer1_lthread@move_state& (0+255),b
  2060                           
  2061                           ;timer1_thread.c: 72: move_msg[1] = (unsigned char)(-127);
  2062  000B80  0E81               	movlw	129
  2063  000B82  0101               	movlb	1	; () banked
  2064  000B84  6F27               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2065                           
  2066                           ;timer1_thread.c: 73: move_msg[2] = 127;
  2067  000B86  0E7F               	movlw	127
  2068  000B88  0101               	movlb	1	; () banked
  2069  000B8A  6F28               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;timer1_thread.c: 75: send_uart_message( move_msg );
  2073  000B8C  0101               	movlb	1	; () banked
  2074  000B8E  0E01               	movlw	high timer1_lthread@move_msg
  2075  000B90  0101               	movlb	1	; () banked
  2076  000B92  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2077  000B94  0101               	movlb	1	; () banked
  2078  000B96  0E26               	movlw	low timer1_lthread@move_msg
  2079  000B98  0101               	movlb	1	; () banked
  2080  000B9A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2081  000B9C  ECD1  F00E         	call	_send_uart_message	;wreg free
  2082  000BA0  D070               	goto	l3737
  2083  000BA2                     l3707:
  2084                           
  2085                           ;timer1_thread.c: 80: {
  2086                           ;timer1_thread.c: 81: move_time--;
  2087  000BA2  0100               	movlb	0	; () banked
  2088  000BA4  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;timer1_thread.c: 83: if(move_time==0)
  2092  000BA6  0100               	movlb	0	; () banked
  2093  000BA8  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2094  000BAA  D06B               	goto	l3737
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;timer1_thread.c: 84: {
  2098                           ;timer1_thread.c: 85: move_time = 40;
  2099  000BAC  0E28               	movlw	40
  2100  000BAE  0100               	movlb	0	; () banked
  2101  000BB0  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2102                           
  2103                           ;timer1_thread.c: 86: move_state = 0x03;
  2104  000BB2  0E03               	movlw	3
  2105  000BB4  0100               	movlb	0	; () banked
  2106  000BB6  6FB2               	movwf	timer1_lthread@move_state& (0+255),b
  2107                           
  2108                           ;timer1_thread.c: 87: move_msg[1] = 127;
  2109  000BB8  0E7F               	movlw	127
  2110  000BBA  0101               	movlb	1	; () banked
  2111  000BBC  6F27               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2112                           
  2113                           ;timer1_thread.c: 88: move_msg[2] = (unsigned char)(-127);
  2114  000BBE  0E81               	movlw	129
  2115  000BC0  0101               	movlb	1	; () banked
  2116  000BC2  6F28               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2117                           
  2118                           ; BSR set to: 1
  2119                           ;timer1_thread.c: 89: send_uart_message( move_msg );
  2120  000BC4  0101               	movlb	1	; () banked
  2121  000BC6  0E01               	movlw	high timer1_lthread@move_msg
  2122  000BC8  0101               	movlb	1	; () banked
  2123  000BCA  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2124  000BCC  0101               	movlb	1	; () banked
  2125  000BCE  0E26               	movlw	low timer1_lthread@move_msg
  2126  000BD0  0101               	movlb	1	; () banked
  2127  000BD2  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2128  000BD4  ECD1  F00E         	call	_send_uart_message	;wreg free
  2129  000BD8  D054               	goto	l3737
  2130  000BDA                     l3715:
  2131                           
  2132                           ;timer1_thread.c: 94: {
  2133                           ;timer1_thread.c: 97: move_time--;
  2134  000BDA  0100               	movlb	0	; () banked
  2135  000BDC  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;timer1_thread.c: 99: if(move_time==0)
  2139  000BDE  0100               	movlb	0	; () banked
  2140  000BE0  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2141  000BE2  D04F               	goto	l3737
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;timer1_thread.c: 100: {
  2145                           ;timer1_thread.c: 101: move_time = 40;
  2146  000BE4  0E28               	movlw	40
  2147  000BE6  0100               	movlb	0	; () banked
  2148  000BE8  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2149                           
  2150                           ;timer1_thread.c: 102: move_state = 0x04;
  2151  000BEA  0E04               	movlw	4
  2152  000BEC  0100               	movlb	0	; () banked
  2153  000BEE  6FB2               	movwf	timer1_lthread@move_state& (0+255),b
  2154                           
  2155                           ;timer1_thread.c: 103: move_msg[1] = 0;
  2156  000BF0  0E00               	movlw	0
  2157  000BF2  0101               	movlb	1	; () banked
  2158  000BF4  6F27               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2159                           
  2160                           ;timer1_thread.c: 104: move_msg[2] = 0;
  2161  000BF6  0E00               	movlw	0
  2162  000BF8  0101               	movlb	1	; () banked
  2163  000BFA  6F28               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;timer1_thread.c: 105: send_uart_message( move_msg );
  2167  000BFC  0101               	movlb	1	; () banked
  2168  000BFE  0E01               	movlw	high timer1_lthread@move_msg
  2169  000C00  0101               	movlb	1	; () banked
  2170  000C02  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2171  000C04  0101               	movlb	1	; () banked
  2172  000C06  0E26               	movlw	low timer1_lthread@move_msg
  2173  000C08  0101               	movlb	1	; () banked
  2174  000C0A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2175  000C0C  ECD1  F00E         	call	_send_uart_message	;wreg free
  2176  000C10  D038               	goto	l3737
  2177  000C12                     l3723:
  2178                           
  2179                           ;timer1_thread.c: 110: {
  2180                           ;timer1_thread.c: 111: move_time--;
  2181  000C12  0100               	movlb	0	; () banked
  2182  000C14  07D5               	decf	timer1_lthread@move_time& (0+255),f,b
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;timer1_thread.c: 113: if(move_time==0)
  2186  000C16  0100               	movlb	0	; () banked
  2187  000C18  67D5               	tstfsz	timer1_lthread@move_time& (0+255),b
  2188  000C1A  D033               	goto	l3737
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;timer1_thread.c: 114: {
  2192                           ;timer1_thread.c: 115: move_time = 40;
  2193  000C1C  0E28               	movlw	40
  2194  000C1E  0100               	movlb	0	; () banked
  2195  000C20  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2196                           
  2197                           ;timer1_thread.c: 116: move_state = 0x00;
  2198  000C22  0E00               	movlw	0
  2199  000C24  0100               	movlb	0	; () banked
  2200  000C26  6FB2               	movwf	timer1_lthread@move_state& (0+255),b
  2201                           
  2202                           ;timer1_thread.c: 117: move_msg[1] = 127;
  2203  000C28  0E7F               	movlw	127
  2204  000C2A  0101               	movlb	1	; () banked
  2205  000C2C  6F27               	movwf	(timer1_lthread@move_msg+1)& (0+255),b
  2206                           
  2207                           ;timer1_thread.c: 118: move_msg[2] = 127;
  2208  000C2E  0E7F               	movlw	127
  2209  000C30  0101               	movlb	1	; () banked
  2210  000C32  6F28               	movwf	(timer1_lthread@move_msg+2)& (0+255),b
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;timer1_thread.c: 119: send_uart_message( move_msg );
  2214  000C34  0101               	movlb	1	; () banked
  2215  000C36  0E01               	movlw	high timer1_lthread@move_msg
  2216  000C38  0101               	movlb	1	; () banked
  2217  000C3A  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2218  000C3C  0101               	movlb	1	; () banked
  2219  000C3E  0E26               	movlw	low timer1_lthread@move_msg
  2220  000C40  0101               	movlb	1	; () banked
  2221  000C42  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  2222  000C44  ECD1  F00E         	call	_send_uart_message	;wreg free
  2223  000C48  D01C               	goto	l3737
  2224  000C4A                     l3731:
  2225                           
  2226                           ;timer1_thread.c: 124: {
  2227                           ;timer1_thread.c: 125: move_time = 40;
  2228  000C4A  0E28               	movlw	40
  2229  000C4C  0100               	movlb	0	; () banked
  2230  000C4E  6FD5               	movwf	timer1_lthread@move_time& (0+255),b
  2231                           
  2232                           ;timer1_thread.c: 126: move_state = 0x00;
  2233  000C50  0E00               	movlw	0
  2234  000C52  0100               	movlb	0	; () banked
  2235  000C54  6FB2               	movwf	timer1_lthread@move_state& (0+255),b
  2236                           
  2237                           ;timer1_thread.c: 127: break;
  2238  000C56  D015               	goto	l3737
  2239  000C58                     l3735:
  2240  000C58  0100               	movlb	0	; () banked
  2241  000C5A  51B2               	movf	timer1_lthread@move_state& (0+255),w,b
  2242                           
  2243                           ; Switch size 1, requested type "space"
  2244                           ; Number of cases is 6, Range of values is 0 to 5
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte           19    10 (average)
  2248                           ;	Chosen strategy is simple_byte
  2249  000C5C  0A00               	xorlw	0	; case 0
  2250  000C5E  B4D8               	btfsc	status,2,c
  2251  000C60  D768               	goto	l3691
  2252  000C62  0A01               	xorlw	1	; case 1
  2253  000C64  B4D8               	btfsc	status,2,c
  2254  000C66  D781               	goto	l3699
  2255  000C68  0A03               	xorlw	3	; case 2
  2256  000C6A  B4D8               	btfsc	status,2,c
  2257  000C6C  D79A               	goto	l3707
  2258  000C6E  0A01               	xorlw	1	; case 3
  2259  000C70  B4D8               	btfsc	status,2,c
  2260  000C72  D7B3               	goto	l3715
  2261  000C74  0A07               	xorlw	7	; case 4
  2262  000C76  B4D8               	btfsc	status,2,c
  2263  000C78  D7CC               	goto	l3723
  2264  000C7A  0A01               	xorlw	1	; case 5
  2265  000C7C  B4D8               	btfsc	status,2,c
  2266  000C7E  D746               	goto	l3687
  2267  000C80  D7E4               	goto	l3731
  2268  000C82                     l3737:
  2269                           
  2270                           ;timer1_thread.c: 133: tptr->msgcount++;
  2271  000C82  C11D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2272  000C86  C11E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2273  000C8A  2ADE               	incf	postinc2,f,c
  2274  000C8C  0E00               	movlw	0
  2275  000C8E  22DD               	addwfc	postdec2,f,c
  2276                           
  2277                           ;timer1_thread.c: 136: if ((tptr->msgcount % 10) == 9) {
  2278  000C90  C11D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2279  000C94  C11E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2280  000C98  0101               	movlb	1	; () banked
  2281  000C9A  CFDE F100          	movff	postinc2,___lwmod@dividend
  2282  000C9E  0101               	movlb	1	; () banked
  2283  000CA0  CFDD F101          	movff	postdec2,___lwmod@dividend+1
  2284  000CA4  0E00               	movlw	0
  2285  000CA6  0101               	movlb	1	; () banked
  2286  000CA8  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
  2287  000CAA  0E0A               	movlw	10
  2288  000CAC  0101               	movlb	1	; () banked
  2289  000CAE  6F02               	movwf	___lwmod@divisor& (0+255),b
  2290  000CB0  EC51  F00C         	call	___lwmod	;wreg free
  2291  000CB4  0101               	movlb	1	; () banked
  2292  000CB6  5100               	movf	?___lwmod& (0+255),w,b
  2293  000CB8  0A09               	xorlw	9
  2294  000CBA  0101               	movlb	1	; () banked
  2295  000CBC  1101               	iorwf	(?___lwmod+1)& (0+255),w,b
  2296  000CBE  A4D8               	btfss	status,2,c
  2297  000CC0  0012               	return	
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;timer1_thread.c: 137: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void 
      +                          *) &(tptr->msgcount));
  2301  000CC2  0E14               	movlw	20
  2302  000CC4  0101               	movlb	1	; () banked
  2303  000CC6  6F16               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2304  000CC8  0101               	movlb	1	; () banked
  2305  000CCA  C11E  F118         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2306  000CCE  0101               	movlb	1	; () banked
  2307  000CD0  C11D  F117         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2308  000CD4  0E02               	movlw	2
  2309  000CD6  EC44  F00E         	call	_FromMainHigh_sendmsg
  2310  000CDA  0101               	movlb	1	; () banked
  2311  000CDC  6F25               	movwf	timer1_lthread@retval& (0+255),b
  2312  000CDE  0012               	return	
  2313  000CE0                     __end_of_timer1_lthread:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           prodh	equ	0xFF4
  2320                           prodl	equ	0xFF3
  2321                           postinc0	equ	0xFEE
  2322                           wreg	equ	0xFE8
  2323                           indf2	equ	0xFDF
  2324                           postinc2	equ	0xFDE
  2325                           postdec2	equ	0xFDD
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _send_uart_message *****************
  2331 ;; Defined at:
  2332 ;;		line 186 in file "../src/my_uart.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  message_ptr     2   26[BANK1 ] PTR unsigned char 
  2335 ;;		 -> timer1_lthread@move_msg(14), main@uart_response(14), main@sensor_data(14), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  message_q_co    1   28[BANK1 ] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      unsigned char 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2347 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2351 ;;Total ram usage:        3 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:   14
  2354 ;; This function calls:
  2355 ;;		_FromMainLow_sendmsg
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;;		_timer1_lthread
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text3
  2363  001DA2                     __ptext3:
  2364                           	opt stack 0
  2365  001DA2                     _send_uart_message:
  2366                           	opt stack 15
  2367                           
  2368                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(14,31,(void *) messa
      +                          ge_ptr );
  2369                           
  2370                           ; BSR set to: 1
  2371                           ;incstack = 0
  2372  001DA2  0E1F               	movlw	31
  2373  001DA4  0101               	movlb	1	; () banked
  2374  001DA6  6F16               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2375  001DA8  0101               	movlb	1	; () banked
  2376  001DAA  C11B  F118         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2377  001DAE  0101               	movlb	1	; () banked
  2378  001DB0  C11A  F117         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2379  001DB4  0E0E               	movlw	14
  2380  001DB6  EC2D  F00E         	call	_FromMainLow_sendmsg
  2381  001DBA  0101               	movlb	1	; () banked
  2382  001DBC  6F1C               	movwf	send_uart_message@message_q_code& (0+255),b
  2383                           
  2384                           ; BSR set to: 1
  2385                           ;my_uart.c: 193: }
  2386                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;my_uart.c: 191: {
  2390                           ;my_uart.c: 192: return 0x02;
  2391                           ;	Return value of _send_uart_message is never used
  2392                           
  2393                           ;my_uart.c: 190: if( message_q_code == -1)
  2394  001DBE  889D               	bsf	3997,4,c	;volatile
  2395                           
  2396                           ; BSR set to: 1
  2397                           
  2398                           ;my_uart.c: 196: return 0x00;
  2399                           ;	Return value of _send_uart_message is never used
  2400  001DC0  0012               	return	
  2401  001DC2                     __end_of_send_uart_message:
  2402                           	opt stack 0
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           prodh	equ	0xFF4
  2408                           prodl	equ	0xFF3
  2409                           postinc0	equ	0xFEE
  2410                           wreg	equ	0xFE8
  2411                           indf2	equ	0xFDF
  2412                           postinc2	equ	0xFDE
  2413                           postdec2	equ	0xFDD
  2414                           fsr2h	equ	0xFDA
  2415                           fsr2l	equ	0xFD9
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _FromMainLow_sendmsg *****************
  2419 ;; Defined at:
  2420 ;;		line 150 in file "../src/messages.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  length          1    wreg     unsigned char 
  2423 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2424 ;;  data            2   23[BANK1 ] PTR void 
  2425 ;;		 -> timer1_lthread@move_msg(14), main@uart_response(14), main@sensor_data(14), 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  length          1   25[BANK1 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      char 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2437 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;Total ram usage:        4 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:   13
  2444 ;; This function calls:
  2445 ;;		_send_msg
  2446 ;; This function is called by:
  2447 ;;		_send_uart_message
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text4
  2452  001C5A                     __ptext4:
  2453                           	opt stack 0
  2454  001C5A                     _FromMainLow_sendmsg:
  2455                           	opt stack 15
  2456                           
  2457                           ; BSR set to: 1
  2458                           ;incstack = 0
  2459                           ;FromMainLow_sendmsg@length stored from wreg
  2460  001C5A  0101               	movlb	1	; () banked
  2461  001C5C  6F19               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2462                           
  2463                           ; BSR set to: 1
  2464                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2465  001C5E  0104               	movlb	4	; () banked
  2466  001C60  0E04               	movlw	high _FromMainLow_MQ
  2467  001C62  0101               	movlb	1	; () banked
  2468  001C64  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2469  001C66  0104               	movlb	4	; () banked
  2470  001C68  0E00               	movlw	low _FromMainLow_MQ
  2471  001C6A  0101               	movlb	1	; () banked
  2472  001C6C  6F0A               	movwf	send_msg@qptr& (0+255),b
  2473  001C6E  C119  F10C         	movff	FromMainLow_sendmsg@length,send_msg@length
  2474  001C72  C116  F10D         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2475  001C76  0101               	movlb	1	; () banked
  2476  001C78  C118  F10F         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2477  001C7C  0101               	movlb	1	; () banked
  2478  001C7E  C117  F10E         	movff	FromMainLow_sendmsg@data,send_msg@data
  2479  001C82  EC61  F008         	call	_send_msg	;wreg free
  2480  001C86  0012               	return	
  2481  001C88                     __end_of_FromMainLow_sendmsg:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           prodh	equ	0xFF4
  2488                           prodl	equ	0xFF3
  2489                           postinc0	equ	0xFEE
  2490                           wreg	equ	0xFE8
  2491                           indf2	equ	0xFDF
  2492                           postinc2	equ	0xFDE
  2493                           postdec2	equ	0xFDD
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _blink0 *****************
  2499 ;; Defined at:
  2500 ;;		line 46 in file "../src/debug.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:   11
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_timer1_lthread
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text5
  2529  001E88                     __ptext5:
  2530                           	opt stack 0
  2531  001E88                     _blink0:
  2532                           	opt stack 18
  2533                           
  2534                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  2535                           
  2536                           ;incstack = 0
  2537  001E88  708A               	btg	3978,0,c	;volatile
  2538  001E8A  0012               	return	
  2539  001E8C                     __end_of_blink0:
  2540                           	opt stack 0
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           prodh	equ	0xFF4
  2546                           prodl	equ	0xFF3
  2547                           postinc0	equ	0xFEE
  2548                           wreg	equ	0xFE8
  2549                           indf2	equ	0xFDF
  2550                           postinc2	equ	0xFDE
  2551                           postdec2	equ	0xFDD
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function ___lwmod *****************
  2557 ;; Defined at:
  2558 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  dividend        2    0[BANK1 ] unsigned int 
  2561 ;;  divisor         2    2[BANK1 ] unsigned int 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  counter         1    4[BANK1 ] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2    0[BANK1 ] unsigned int 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2573 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;Total ram usage:        5 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:   11
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_timer1_lthread
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text6
  2588  0018A2                     __ptext6:
  2589                           	opt stack 0
  2590  0018A2                     ___lwmod:
  2591                           	opt stack 18
  2592                           
  2593                           ;incstack = 0
  2594  0018A2  0101               	movlb	1	; () banked
  2595  0018A4  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2596  0018A6  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  2597  0018A8  B4D8               	btfsc	status,2,c
  2598  0018AA  D026               	goto	l1144
  2599                           
  2600                           ; BSR set to: 1
  2601  0018AC  0E01               	movlw	1
  2602  0018AE  0101               	movlb	1	; () banked
  2603  0018B0  6F04               	movwf	___lwmod@counter& (0+255),b
  2604  0018B2  D006               	goto	l3557
  2605  0018B4                     l3555:
  2606                           
  2607                           ; BSR set to: 1
  2608  0018B4  0101               	movlb	1	; () banked
  2609  0018B6  90D8               	bcf	status,0,c
  2610  0018B8  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  2611  0018BA  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2612  0018BC  0101               	movlb	1	; () banked
  2613  0018BE  2B04               	incf	___lwmod@counter& (0+255),f,b
  2614  0018C0                     l3557:
  2615                           
  2616                           ; BSR set to: 1
  2617  0018C0  0101               	movlb	1	; () banked
  2618  0018C2  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2619  0018C4  D7F7               	goto	l3555
  2620  0018C6                     l3559:
  2621                           
  2622                           ; BSR set to: 1
  2623  0018C6  0101               	movlb	1	; () banked
  2624  0018C8  5102               	movf	___lwmod@divisor& (0+255),w,b
  2625  0018CA  0101               	movlb	1	; () banked
  2626  0018CC  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  2627  0018CE  0101               	movlb	1	; () banked
  2628  0018D0  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2629  0018D2  0101               	movlb	1	; () banked
  2630  0018D4  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2631  0018D6  A0D8               	btfss	status,0,c
  2632  0018D8  D008               	goto	l3563
  2633                           
  2634                           ; BSR set to: 1
  2635  0018DA  0101               	movlb	1	; () banked
  2636  0018DC  5102               	movf	___lwmod@divisor& (0+255),w,b
  2637  0018DE  0101               	movlb	1	; () banked
  2638  0018E0  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  2639  0018E2  0101               	movlb	1	; () banked
  2640  0018E4  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2641  0018E6  0101               	movlb	1	; () banked
  2642  0018E8  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2643  0018EA                     l3563:
  2644                           
  2645                           ; BSR set to: 1
  2646  0018EA  0101               	movlb	1	; () banked
  2647  0018EC  90D8               	bcf	status,0,c
  2648  0018EE  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2649  0018F0  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  2650                           
  2651                           ; BSR set to: 1
  2652  0018F2  0101               	movlb	1	; () banked
  2653  0018F4  2F04               	decfsz	___lwmod@counter& (0+255),f,b
  2654  0018F6  D7E7               	goto	l3559
  2655  0018F8                     l1144:
  2656                           
  2657                           ; BSR set to: 1
  2658  0018F8  C100  F100         	movff	___lwmod@dividend,?___lwmod
  2659  0018FC  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  2660                           
  2661                           ; BSR set to: 1
  2662  001900  0012               	return	
  2663  001902                     __end_of___lwmod:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           indf2	equ	0xFDF
  2674                           postinc2	equ	0xFDE
  2675                           postdec2	equ	0xFDD
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _FromMainHigh_sendmsg *****************
  2681 ;; Defined at:
  2682 ;;		line 174 in file "../src/messages.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  length          1    wreg     unsigned char 
  2685 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2686 ;;  data            2   23[BANK1 ] PTR void 
  2687 ;;		 -> main@t1thread_data(2), 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  length          1   25[BANK1 ] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      char 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2699 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;Total ram usage:        4 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:   13
  2706 ;; This function calls:
  2707 ;;		_send_msg
  2708 ;; This function is called by:
  2709 ;;		_timer1_lthread
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text7
  2714  001C88                     __ptext7:
  2715                           	opt stack 0
  2716  001C88                     _FromMainHigh_sendmsg:
  2717                           	opt stack 16
  2718                           
  2719                           ; BSR set to: 1
  2720                           ;incstack = 0
  2721                           ;FromMainHigh_sendmsg@length stored from wreg
  2722  001C88  0101               	movlb	1	; () banked
  2723  001C8A  6F19               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2724                           
  2725                           ; BSR set to: 1
  2726                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2727  001C8C  0105               	movlb	5	; () banked
  2728  001C8E  0E05               	movlw	high _FromMainHigh_MQ
  2729  001C90  0101               	movlb	1	; () banked
  2730  001C92  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2731  001C94  0105               	movlb	5	; () banked
  2732  001C96  0E00               	movlw	low _FromMainHigh_MQ
  2733  001C98  0101               	movlb	1	; () banked
  2734  001C9A  6F0A               	movwf	send_msg@qptr& (0+255),b
  2735  001C9C  C119  F10C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2736  001CA0  C116  F10D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2737  001CA4  0101               	movlb	1	; () banked
  2738  001CA6  C118  F10F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2739  001CAA  0101               	movlb	1	; () banked
  2740  001CAC  C117  F10E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2741  001CB0  EC61  F008         	call	_send_msg	;wreg free
  2742  001CB4  0012               	return	
  2743  001CB6                     __end_of_FromMainHigh_sendmsg:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           postinc0	equ	0xFEE
  2752                           wreg	equ	0xFE8
  2753                           indf2	equ	0xFDF
  2754                           postinc2	equ	0xFDE
  2755                           postdec2	equ	0xFDD
  2756                           fsr2h	equ	0xFDA
  2757                           fsr2l	equ	0xFD9
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function _send_msg *****************
  2761 ;; Defined at:
  2762 ;;		line 24 in file "../src/messages.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2765 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2766 ;;  length          1   12[BANK1 ] unsigned char 
  2767 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2768 ;;  data            2   14[BANK1 ] PTR void 
  2769 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  2770 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  2771 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  2772 ;;		 -> main@t1thread_data(2), main@ic(38), 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2775 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  2776 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2777 ;;  tlength         2   17[BANK1 ] unsigned int 
  2778 ;;  slot            1   19[BANK1 ] unsigned char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      char 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2788 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2789 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2792 ;;Total ram usage:       12 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:   12
  2795 ;; This function calls:
  2796 ;;		_memcpy
  2797 ;; This function is called by:
  2798 ;;		_FromMainLow_sendmsg
  2799 ;;		_FromMainHigh_sendmsg
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text8
  2804  0010C2                     __ptext8:
  2805                           	opt stack 0
  2806  0010C2                     _send_msg:
  2807                           	opt stack 15
  2808                           
  2809                           ;messages.c: 25: unsigned char slot;
  2810                           ;messages.c: 27: msg *qmsg;
  2811                           ;messages.c: 28: size_t tlength = length;
  2812                           
  2813                           ;incstack = 0
  2814  0010C2  0101               	movlb	1	; () banked
  2815  0010C4  C10C  F111         	movff	send_msg@length,send_msg@tlength
  2816  0010C8  0101               	movlb	1	; () banked
  2817  0010CA  6B12               	clrf	(send_msg@tlength+1)& (0+255),b
  2818                           
  2819                           ; BSR set to: 1
  2820                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2821  0010CC  0101               	movlb	1	; () banked
  2822  0010CE  EE20 F088          	lfsr	2,136
  2823  0010D2  0101               	movlb	1	; () banked
  2824  0010D4  510A               	movf	send_msg@qptr& (0+255),w,b
  2825  0010D6  26D9               	addwf	fsr2l,f,c
  2826  0010D8  0101               	movlb	1	; () banked
  2827  0010DA  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2828  0010DC  22DA               	addwfc	fsr2h,f,c
  2829  0010DE  50DF               	movf	indf2,w,c
  2830  0010E0  0101               	movlb	1	; () banked
  2831  0010E2  6F13               	movwf	send_msg@slot& (0+255),b
  2832                           
  2833                           ; BSR set to: 1
  2834                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2835  0010E4  0101               	movlb	1	; () banked
  2836  0010E6  5113               	movf	send_msg@slot& (0+255),w,b
  2837  0010E8  0D11               	mullw	17
  2838  0010EA  50F3               	movf	prodl,w,c
  2839  0010EC  0101               	movlb	1	; () banked
  2840  0010EE  250A               	addwf	send_msg@qptr& (0+255),w,b
  2841  0010F0  0101               	movlb	1	; () banked
  2842  0010F2  6F14               	movwf	send_msg@qmsg& (0+255),b
  2843  0010F4  50F4               	movf	prodh,w,c
  2844  0010F6  0101               	movlb	1	; () banked
  2845  0010F8  210B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2846  0010FA  0101               	movlb	1	; () banked
  2847  0010FC  6F15               	movwf	(send_msg@qmsg+1)& (0+255),b
  2848                           
  2849                           ; BSR set to: 1
  2850                           ;messages.c: 41: if (qmsg->full != 0) {
  2851  0010FE  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2852  001102  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2853  001106  50DF               	movf	indf2,w,c
  2854  001108  B4D8               	btfsc	status,2,c
  2855  00110A  D002               	goto	l3479
  2856                           
  2857                           ; BSR set to: 1
  2858                           ;messages.c: 42: return (-1);
  2859  00110C  0EFF               	movlw	255
  2860  00110E  0012               	return	
  2861  001110                     l3479:
  2862                           
  2863                           ; BSR set to: 1
  2864                           ;messages.c: 43: }
  2865                           ;messages.c: 46: qmsg->length = length;
  2866  001110  0101               	movlb	1	; () banked
  2867  001112  EE20 F001          	lfsr	2,1
  2868  001116  0101               	movlb	1	; () banked
  2869  001118  5114               	movf	send_msg@qmsg& (0+255),w,b
  2870  00111A  26D9               	addwf	fsr2l,f,c
  2871  00111C  0101               	movlb	1	; () banked
  2872  00111E  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2873  001120  22DA               	addwfc	fsr2h,f,c
  2874  001122  0101               	movlb	1	; () banked
  2875  001124  C10C  FFDF         	movff	send_msg@length,indf2
  2876                           
  2877                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2878  001128  0101               	movlb	1	; () banked
  2879  00112A  EE20 F002          	lfsr	2,2
  2880  00112E  0101               	movlb	1	; () banked
  2881  001130  5114               	movf	send_msg@qmsg& (0+255),w,b
  2882  001132  26D9               	addwf	fsr2l,f,c
  2883  001134  0101               	movlb	1	; () banked
  2884  001136  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2885  001138  22DA               	addwfc	fsr2h,f,c
  2886  00113A  0101               	movlb	1	; () banked
  2887  00113C  C10D  FFDF         	movff	send_msg@msgtype,indf2
  2888                           
  2889                           ; BSR set to: 1
  2890                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2891  001140  0E03               	movlw	3
  2892  001142  0101               	movlb	1	; () banked
  2893  001144  2514               	addwf	send_msg@qmsg& (0+255),w,b
  2894  001146  0101               	movlb	1	; () banked
  2895  001148  6F00               	movwf	memcpy@d1& (0+255),b
  2896  00114A  0E00               	movlw	0
  2897  00114C  0101               	movlb	1	; () banked
  2898  00114E  2115               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2899  001150  0101               	movlb	1	; () banked
  2900  001152  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  2901  001154  0101               	movlb	1	; () banked
  2902  001156  C10F  F103         	movff	send_msg@data+1,memcpy@s1+1
  2903  00115A  0101               	movlb	1	; () banked
  2904  00115C  C10E  F102         	movff	send_msg@data,memcpy@s1
  2905  001160  C111  F104         	movff	send_msg@tlength,memcpy@n
  2906  001164  C112  F105         	movff	send_msg@tlength+1,memcpy@n+1
  2907  001168  ECDD  F00C         	call	_memcpy	;wreg free
  2908                           
  2909                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  2910  00116C  0101               	movlb	1	; () banked
  2911  00116E  EE20 F088          	lfsr	2,136
  2912  001172  0101               	movlb	1	; () banked
  2913  001174  510A               	movf	send_msg@qptr& (0+255),w,b
  2914  001176  26D9               	addwf	fsr2l,f,c
  2915  001178  0101               	movlb	1	; () banked
  2916  00117A  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2917  00117C  22DA               	addwfc	fsr2h,f,c
  2918  00117E  0101               	movlb	1	; () banked
  2919  001180  EE10 F088          	lfsr	1,136
  2920  001184  0101               	movlb	1	; () banked
  2921  001186  510A               	movf	send_msg@qptr& (0+255),w,b
  2922  001188  26E1               	addwf	fsr1l,f,c
  2923  00118A  0101               	movlb	1	; () banked
  2924  00118C  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2925  00118E  22E2               	addwfc	fsr1h,f,c
  2926  001190  50E7               	movf	indf1,w,c
  2927  001192  0101               	movlb	1	; () banked
  2928  001194  6F10               	movwf	??_send_msg& (0+255),b
  2929  001196  0101               	movlb	1	; () banked
  2930  001198  2910               	incf	??_send_msg& (0+255),w,b
  2931  00119A  0B07               	andlw	7
  2932  00119C  6EDF               	movwf	indf2,c
  2933                           
  2934                           ; BSR set to: 1
  2935                           ;messages.c: 59: qmsg->full = 1;
  2936  00119E  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2937  0011A2  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2938  0011A6  0E01               	movlw	1
  2939  0011A8  6EDF               	movwf	indf2,c
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;messages.c: 60: return (1);
  2943  0011AA  0E01               	movlw	1
  2944  0011AC  0012               	return	
  2945  0011AE                     __end_of_send_msg:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           postinc0	equ	0xFEE
  2954                           wreg	equ	0xFE8
  2955                           indf1	equ	0xFE7
  2956                           fsr1h	equ	0xFE2
  2957                           fsr1l	equ	0xFE1
  2958                           indf2	equ	0xFDF
  2959                           postinc2	equ	0xFDE
  2960                           postdec2	equ	0xFDD
  2961                           fsr2h	equ	0xFDA
  2962                           fsr2l	equ	0xFD9
  2963                           status	equ	0xFD8
  2964                           
  2965 ;; *************** function _timer0_lthread *****************
  2966 ;; Defined at:
  2967 ;;		line 9 in file "../src/timer0_thread.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2970 ;;		 -> main@t0thread_data(2), 
  2971 ;;  msgtype         2    2[BANK1 ] int 
  2972 ;;  length          2    4[BANK1 ] int 
  2973 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2974 ;;		 -> main@msgbuffer(15), 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2977 ;;		 -> main@msgbuffer(15), 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2    0[BANK1 ] int 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2987 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2990 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2991 ;;Total ram usage:       10 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:   11
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text9
  3002  001E1A                     __ptext9:
  3003                           	opt stack 0
  3004  001E1A                     _timer0_lthread:
  3005                           	opt stack 19
  3006                           
  3007                           ;timer0_thread.c: 10: unsigned int *msgval;
  3008                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  3009                           
  3010                           ; BSR set to: 1
  3011                           ;incstack = 0
  3012  001E1A  0101               	movlb	1	; () banked
  3013  001E1C  C107  F109         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  3014  001E20  0101               	movlb	1	; () banked
  3015  001E22  C106  F108         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  3016                           
  3017                           ; BSR set to: 1
  3018  001E26  0012               	return	
  3019  001E28                     __end_of_timer0_lthread:
  3020                           	opt stack 0
  3021                           tblptru	equ	0xFF8
  3022                           tblptrh	equ	0xFF7
  3023                           tblptrl	equ	0xFF6
  3024                           tablat	equ	0xFF5
  3025                           prodh	equ	0xFF4
  3026                           prodl	equ	0xFF3
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           indf1	equ	0xFE7
  3030                           fsr1h	equ	0xFE2
  3031                           fsr1l	equ	0xFE1
  3032                           indf2	equ	0xFDF
  3033                           postinc2	equ	0xFDE
  3034                           postdec2	equ	0xFDD
  3035                           fsr2h	equ	0xFDA
  3036                           fsr2l	equ	0xFD9
  3037                           status	equ	0xFD8
  3038                           
  3039 ;; *************** function _init_timer1_lthread *****************
  3040 ;; Defined at:
  3041 ;;		line 8 in file "../src/timer1_thread.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  3044 ;;		 -> main@t1thread_data(2), 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;		None               void
  3049 ;; Registers used:
  3050 ;;		wreg, fsr2l, fsr2h
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3056 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;Total ram usage:        2 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:   11
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text10
  3071  001DC2                     __ptext10:
  3072                           	opt stack 0
  3073  001DC2                     _init_timer1_lthread:
  3074                           	opt stack 19
  3075                           
  3076                           ;timer1_thread.c: 9: tptr->msgcount = 0;
  3077                           
  3078                           ; BSR set to: 1
  3079                           ;incstack = 0
  3080  001DC2  C100  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3081  001DC6  C101  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3082  001DCA  0E00               	movlw	0
  3083  001DCC  6EDE               	movwf	postinc2,c
  3084  001DCE  0E00               	movlw	0
  3085  001DD0  6EDD               	movwf	postdec2,c
  3086  001DD2  0012               	return	
  3087  001DD4                     __end_of_init_timer1_lthread:
  3088                           	opt stack 0
  3089                           tblptru	equ	0xFF8
  3090                           tblptrh	equ	0xFF7
  3091                           tblptrl	equ	0xFF6
  3092                           tablat	equ	0xFF5
  3093                           prodh	equ	0xFF4
  3094                           prodl	equ	0xFF3
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           indf1	equ	0xFE7
  3098                           fsr1h	equ	0xFE2
  3099                           fsr1l	equ	0xFE1
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           postdec2	equ	0xFDD
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _init_queues *****************
  3108 ;; Defined at:
  3109 ;;		line 194 in file "../src/messages.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:   12
  3130 ;; This function calls:
  3131 ;;		_init_queue
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text11
  3138  001962                     __ptext11:
  3139                           	opt stack 0
  3140  001962                     _init_queues:
  3141                           	opt stack 18
  3142                           
  3143                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3144                           
  3145                           ;incstack = 0
  3146  001962  0E00               	movlw	0
  3147  001964  0100               	movlb	0	; () banked
  3148  001966  6FB1               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3152  001968  0102               	movlb	2	; () banked
  3153  00196A  0E02               	movlw	high _ToMainLow_MQ
  3154  00196C  0101               	movlb	1	; () banked
  3155  00196E  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  3156  001970  0102               	movlb	2	; () banked
  3157  001972  0E00               	movlw	low _ToMainLow_MQ
  3158  001974  0101               	movlb	1	; () banked
  3159  001976  6F00               	movwf	init_queue@qptr& (0+255),b
  3160  001978  EC1F  F00C         	call	_init_queue	;wreg free
  3161                           
  3162                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3163  00197C  0103               	movlb	3	; () banked
  3164  00197E  0E03               	movlw	high _ToMainHigh_MQ
  3165  001980  0101               	movlb	1	; () banked
  3166  001982  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  3167  001984  0103               	movlb	3	; () banked
  3168  001986  0E00               	movlw	low _ToMainHigh_MQ
  3169  001988  0101               	movlb	1	; () banked
  3170  00198A  6F00               	movwf	init_queue@qptr& (0+255),b
  3171  00198C  EC1F  F00C         	call	_init_queue	;wreg free
  3172                           
  3173                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3174  001990  0104               	movlb	4	; () banked
  3175  001992  0E04               	movlw	high _FromMainLow_MQ
  3176  001994  0101               	movlb	1	; () banked
  3177  001996  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  3178  001998  0104               	movlb	4	; () banked
  3179  00199A  0E00               	movlw	low _FromMainLow_MQ
  3180  00199C  0101               	movlb	1	; () banked
  3181  00199E  6F00               	movwf	init_queue@qptr& (0+255),b
  3182  0019A0  EC1F  F00C         	call	_init_queue	;wreg free
  3183                           
  3184                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3185  0019A4  0105               	movlb	5	; () banked
  3186  0019A6  0E05               	movlw	high _FromMainHigh_MQ
  3187  0019A8  0101               	movlb	1	; () banked
  3188  0019AA  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  3189  0019AC  0105               	movlb	5	; () banked
  3190  0019AE  0E00               	movlw	low _FromMainHigh_MQ
  3191  0019B0  0101               	movlb	1	; () banked
  3192  0019B2  6F00               	movwf	init_queue@qptr& (0+255),b
  3193  0019B4  EC1F  F00C         	call	_init_queue	;wreg free
  3194  0019B8  0012               	return	
  3195  0019BA                     __end_of_init_queues:
  3196                           	opt stack 0
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           prodh	equ	0xFF4
  3202                           prodl	equ	0xFF3
  3203                           postinc0	equ	0xFEE
  3204                           wreg	equ	0xFE8
  3205                           indf1	equ	0xFE7
  3206                           fsr1h	equ	0xFE2
  3207                           fsr1l	equ	0xFE1
  3208                           indf2	equ	0xFDF
  3209                           postinc2	equ	0xFDE
  3210                           postdec2	equ	0xFDD
  3211                           fsr2h	equ	0xFDA
  3212                           fsr2l	equ	0xFD9
  3213                           status	equ	0xFD8
  3214                           
  3215 ;; *************** function _init_queue *****************
  3216 ;; Defined at:
  3217 ;;		line 14 in file "../src/messages.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3220 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  i               1    2[BANK1 ] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3232 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3233 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;Total ram usage:        3 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:   11
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_init_queues
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text12
  3247  00183E                     __ptext12:
  3248                           	opt stack 0
  3249  00183E                     _init_queue:
  3250                           	opt stack 18
  3251                           
  3252                           ;messages.c: 15: unsigned char i;
  3253                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3254                           
  3255                           ;incstack = 0
  3256  00183E  0101               	movlb	1	; () banked
  3257  001840  EE20 F088          	lfsr	2,136
  3258  001844  0101               	movlb	1	; () banked
  3259  001846  5100               	movf	init_queue@qptr& (0+255),w,b
  3260  001848  26D9               	addwf	fsr2l,f,c
  3261  00184A  0101               	movlb	1	; () banked
  3262  00184C  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3263  00184E  22DA               	addwfc	fsr2h,f,c
  3264  001850  0E00               	movlw	0
  3265  001852  6EDF               	movwf	indf2,c
  3266                           
  3267                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3268  001854  0101               	movlb	1	; () banked
  3269  001856  EE20 F089          	lfsr	2,137
  3270  00185A  0101               	movlb	1	; () banked
  3271  00185C  5100               	movf	init_queue@qptr& (0+255),w,b
  3272  00185E  26D9               	addwf	fsr2l,f,c
  3273  001860  0101               	movlb	1	; () banked
  3274  001862  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3275  001864  22DA               	addwfc	fsr2h,f,c
  3276  001866  0E00               	movlw	0
  3277  001868  6EDF               	movwf	indf2,c
  3278                           
  3279                           ; BSR set to: 1
  3280                           ;messages.c: 19: for (i = 0; i < 8; i++) {
  3281  00186A  0E00               	movlw	0
  3282  00186C  0101               	movlb	1	; () banked
  3283  00186E  6F02               	movwf	init_queue@i& (0+255),b
  3284                           
  3285                           ; BSR set to: 1
  3286  001870  0E07               	movlw	7
  3287  001872  0101               	movlb	1	; () banked
  3288  001874  6502               	cpfsgt	init_queue@i& (0+255),b
  3289  001876  D001               	goto	l3507
  3290  001878  0012               	return	
  3291  00187A                     l3507:
  3292                           
  3293                           ; BSR set to: 1
  3294                           ;messages.c: 20: qptr->queue[i].full = 0;
  3295  00187A  0101               	movlb	1	; () banked
  3296  00187C  5102               	movf	init_queue@i& (0+255),w,b
  3297  00187E  0D11               	mullw	17
  3298  001880  50F3               	movf	prodl,w,c
  3299  001882  0101               	movlb	1	; () banked
  3300  001884  2500               	addwf	init_queue@qptr& (0+255),w,b
  3301  001886  6ED9               	movwf	fsr2l,c
  3302  001888  50F4               	movf	prodh,w,c
  3303  00188A  0101               	movlb	1	; () banked
  3304  00188C  2101               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3305  00188E  6EDA               	movwf	fsr2h,c
  3306  001890  0E00               	movlw	0
  3307  001892  6EDF               	movwf	indf2,c
  3308                           
  3309                           ; BSR set to: 1
  3310  001894  0101               	movlb	1	; () banked
  3311  001896  2B02               	incf	init_queue@i& (0+255),f,b
  3312                           
  3313                           ; BSR set to: 1
  3314  001898  0E07               	movlw	7
  3315  00189A  0101               	movlb	1	; () banked
  3316  00189C  6502               	cpfsgt	init_queue@i& (0+255),b
  3317  00189E  D7ED               	goto	l3507
  3318  0018A0  0012               	return	
  3319  0018A2                     __end_of_init_queue:
  3320                           	opt stack 0
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           prodh	equ	0xFF4
  3326                           prodl	equ	0xFF3
  3327                           postinc0	equ	0xFEE
  3328                           wreg	equ	0xFE8
  3329                           indf1	equ	0xFE7
  3330                           fsr1h	equ	0xFE2
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           postdec2	equ	0xFDD
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _init_i2c *****************
  3340 ;; Defined at:
  3341 ;;		line 327 in file "../src/my_i2c.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3344 ;;		 -> main@ic(38), 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;		None               void
  3349 ;; Registers used:
  3350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3356 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3359 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3360 ;;Total ram usage:        2 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:   11
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_main
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text13
  3371  0017D4                     __ptext13:
  3372                           	opt stack 0
  3373  0017D4                     _init_i2c:
  3374                           	opt stack 19
  3375                           
  3376                           ;my_i2c.c: 328: ic_ptr = ic;
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;incstack = 0
  3380  0017D4  0101               	movlb	1	; () banked
  3381  0017D6  0100               	movlb	0	; () banked
  3382  0017D8  C101  F0D4         	movff	init_i2c@ic+1,_ic_ptr+1
  3383  0017DC  0101               	movlb	1	; () banked
  3384  0017DE  0100               	movlb	0	; () banked
  3385  0017E0  C100  F0D3         	movff	init_i2c@ic,_ic_ptr
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;my_i2c.c: 329: ic_ptr->buflen = 0;
  3389  0017E4  0100               	movlb	0	; () banked
  3390  0017E6  EE20 F00E          	lfsr	2,14
  3391  0017EA  0100               	movlb	0	; () banked
  3392  0017EC  51D3               	movf	_ic_ptr& (0+255),w,b
  3393  0017EE  26D9               	addwf	fsr2l,f,c
  3394  0017F0  0100               	movlb	0	; () banked
  3395  0017F2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3396  0017F4  22DA               	addwfc	fsr2h,f,c
  3397  0017F6  0E00               	movlw	0
  3398  0017F8  6EDF               	movwf	indf2,c
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;my_i2c.c: 330: ic_ptr->event_count = 0;
  3402  0017FA  0100               	movlb	0	; () banked
  3403  0017FC  EE20 F020          	lfsr	2,32
  3404  001800  0100               	movlb	0	; () banked
  3405  001802  51D3               	movf	_ic_ptr& (0+255),w,b
  3406  001804  26D9               	addwf	fsr2l,f,c
  3407  001806  0100               	movlb	0	; () banked
  3408  001808  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3409  00180A  22DA               	addwfc	fsr2h,f,c
  3410  00180C  0E00               	movlw	0
  3411  00180E  6EDF               	movwf	indf2,c
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;my_i2c.c: 331: ic_ptr->status = 0x5;
  3415  001810  0100               	movlb	0	; () banked
  3416  001812  EE20 F021          	lfsr	2,33
  3417  001816  0100               	movlb	0	; () banked
  3418  001818  51D3               	movf	_ic_ptr& (0+255),w,b
  3419  00181A  26D9               	addwf	fsr2l,f,c
  3420  00181C  0100               	movlb	0	; () banked
  3421  00181E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3422  001820  22DA               	addwfc	fsr2h,f,c
  3423  001822  0E05               	movlw	5
  3424  001824  6EDF               	movwf	indf2,c
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;my_i2c.c: 332: ic_ptr->error_count = 0;
  3428  001826  0100               	movlb	0	; () banked
  3429  001828  EE20 F023          	lfsr	2,35
  3430  00182C  0100               	movlb	0	; () banked
  3431  00182E  51D3               	movf	_ic_ptr& (0+255),w,b
  3432  001830  26D9               	addwf	fsr2l,f,c
  3433  001832  0100               	movlb	0	; () banked
  3434  001834  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  3435  001836  22DA               	addwfc	fsr2h,f,c
  3436  001838  0E00               	movlw	0
  3437  00183A  6EDF               	movwf	indf2,c
  3438                           
  3439                           ; BSR set to: 0
  3440  00183C  0012               	return	
  3441  00183E                     __end_of_init_i2c:
  3442                           	opt stack 0
  3443                           tblptru	equ	0xFF8
  3444                           tblptrh	equ	0xFF7
  3445                           tblptrl	equ	0xFF6
  3446                           tablat	equ	0xFF5
  3447                           prodh	equ	0xFF4
  3448                           prodl	equ	0xFF3
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           indf1	equ	0xFE7
  3452                           fsr1h	equ	0xFE2
  3453                           fsr1l	equ	0xFE1
  3454                           indf2	equ	0xFDF
  3455                           postinc2	equ	0xFDE
  3456                           postdec2	equ	0xFDD
  3457                           fsr2h	equ	0xFDA
  3458                           fsr2l	equ	0xFD9
  3459                           status	equ	0xFD8
  3460                           
  3461 ;; *************** function _i2c_configure_slave *****************
  3462 ;; Defined at:
  3463 ;;		line 338 in file "../src/my_i2c.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  addr            1    wreg     unsigned char 
  3466 ;;  ptr_thingy      2    0[BANK1 ] PTR unsigned char 
  3467 ;;		 -> main@need_sensor_data(1), 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  addr            1    2[BANK1 ] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;		None               void
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3479 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3482 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3483 ;;Total ram usage:        3 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:   11
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text14
  3494  001B4E                     __ptext14:
  3495                           	opt stack 0
  3496  001B4E                     _i2c_configure_slave:
  3497                           	opt stack 19
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;incstack = 0
  3501                           ;i2c_configure_slave@addr stored from wreg
  3502  001B4E  0101               	movlb	1	; () banked
  3503  001B50  6F02               	movwf	i2c_configure_slave@addr& (0+255),b
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;my_i2c.c: 340: need_sensor_data = ptr_thingy;
  3507  001B52  0101               	movlb	1	; () banked
  3508  001B54  0100               	movlb	0	; () banked
  3509  001B56  C101  F0B0         	movff	i2c_configure_slave@ptr_thingy+1,_need_sensor_data+1
  3510  001B5A  0101               	movlb	1	; () banked
  3511  001B5C  0100               	movlb	0	; () banked
  3512  001B5E  C100  F0AF         	movff	i2c_configure_slave@ptr_thingy,_need_sensor_data
  3513                           
  3514                           ;my_i2c.c: 348: TRISBbits.TRISB4 = 1;
  3515  001B62  8893               	bsf	3987,4,c	;volatile
  3516                           
  3517                           ;my_i2c.c: 349: TRISBbits.TRISB5 = 1;
  3518  001B64  8A93               	bsf	3987,5,c	;volatile
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;my_i2c.c: 357: SSPADD = addr;
  3522  001B66  C102  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;my_i2c.c: 359: SSPSTAT = 0x0;
  3526  001B6A  0E00               	movlw	0
  3527  001B6C  6EC7               	movwf	4039,c	;volatile
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;my_i2c.c: 360: SSPCON1 = 0x0;
  3531  001B6E  0E00               	movlw	0
  3532  001B70  6EC6               	movwf	4038,c	;volatile
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;my_i2c.c: 361: SSPCON2 = 0x0;
  3536  001B72  0E00               	movlw	0
  3537  001B74  6EC5               	movwf	4037,c	;volatile
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;my_i2c.c: 362: SSPCON1 |= 0x0E;
  3541  001B76  0E0E               	movlw	14
  3542  001B78  12C6               	iorwf	4038,f,c	;volatile
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;my_i2c.c: 363: SSPSTAT |= 0b10000000;
  3546  001B7A  8EC7               	bsf	4039,7,c	;volatile
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;my_i2c.c: 378: PORTBbits.SCL1 = 1;
  3550  001B7C  8881               	bsf	3969,4,c	;volatile
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;my_i2c.c: 379: PORTBbits.SDA1 = 1;
  3554  001B7E  8A81               	bsf	3969,5,c	;volatile
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;my_i2c.c: 388: SSPCON2bits.SEN = 1;
  3558  001B80  80C5               	bsf	4037,0,c	;volatile
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;my_i2c.c: 389: SSPCON1 |= 0b00100000;
  3562  001B82  8AC6               	bsf	4038,5,c	;volatile
  3563                           
  3564                           ; BSR set to: 0
  3565  001B84  0012               	return	
  3566  001B86                     __end_of_i2c_configure_slave:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           postinc0	equ	0xFEE
  3575                           wreg	equ	0xFE8
  3576                           indf1	equ	0xFE7
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           indf2	equ	0xFDF
  3580                           postinc2	equ	0xFDE
  3581                           postdec2	equ	0xFDD
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function _enable_interrupts *****************
  3587 ;; Defined at:
  3588 ;;		line 14 in file "../src/interrupts.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;		None               void
  3595 ;; Registers used:
  3596 ;;		None
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:   11
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text15
  3617  001E32                     __ptext15:
  3618                           	opt stack 0
  3619  001E32                     _enable_interrupts:
  3620                           	opt stack 19
  3621                           
  3622                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;incstack = 0
  3626  001E32  8ED0               	bsf	4048,7,c	;volatile
  3627                           
  3628                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3629  001E34  8EF2               	bsf	intcon,7,c	;volatile
  3630                           
  3631                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3632  001E36  8CF2               	bsf	intcon,6,c	;volatile
  3633  001E38  0012               	return	
  3634  001E3A                     __end_of_enable_interrupts:
  3635                           	opt stack 0
  3636                           tblptru	equ	0xFF8
  3637                           tblptrh	equ	0xFF7
  3638                           tblptrl	equ	0xFF6
  3639                           tablat	equ	0xFF5
  3640                           prodh	equ	0xFF4
  3641                           prodl	equ	0xFF3
  3642                           intcon	equ	0xFF2
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           indf1	equ	0xFE7
  3646                           fsr1h	equ	0xFE2
  3647                           fsr1l	equ	0xFE1
  3648                           indf2	equ	0xFDF
  3649                           postinc2	equ	0xFDE
  3650                           postdec2	equ	0xFDD
  3651                           fsr2h	equ	0xFDA
  3652                           fsr2l	equ	0xFD9
  3653                           status	equ	0xFD8
  3654                           
  3655 ;; *************** function _debug_configure *****************
  3656 ;; Defined at:
  3657 ;;		line 3 in file "../src/debug.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;		None               void
  3664 ;; Registers used:
  3665 ;;		wreg, status,2
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;Total ram usage:        0 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:   11
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text16
  3686  001E28                     __ptext16:
  3687                           	opt stack 0
  3688  001E28                     _debug_configure:
  3689                           	opt stack 19
  3690                           
  3691                           ;debug.c: 5: TRISD = 0x00;
  3692                           
  3693                           ;incstack = 0
  3694  001E28  0E00               	movlw	0
  3695  001E2A  6E95               	movwf	3989,c	;volatile
  3696                           
  3697                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3698  001E2C  9093               	bcf	3987,0,c	;volatile
  3699                           
  3700                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3701  001E2E  9293               	bcf	3987,1,c	;volatile
  3702  001E30  0012               	return	
  3703  001E32                     __end_of_debug_configure:
  3704                           	opt stack 0
  3705                           tblptru	equ	0xFF8
  3706                           tblptrh	equ	0xFF7
  3707                           tblptrl	equ	0xFF6
  3708                           tablat	equ	0xFF5
  3709                           prodh	equ	0xFF4
  3710                           prodl	equ	0xFF3
  3711                           intcon	equ	0xFF2
  3712                           postinc0	equ	0xFEE
  3713                           wreg	equ	0xFE8
  3714                           indf1	equ	0xFE7
  3715                           fsr1h	equ	0xFE2
  3716                           fsr1l	equ	0xFE1
  3717                           indf2	equ	0xFDF
  3718                           postinc2	equ	0xFDE
  3719                           postdec2	equ	0xFDD
  3720                           fsr2h	equ	0xFDA
  3721                           fsr2l	equ	0xFD9
  3722                           status	equ	0xFD8
  3723                           
  3724 ;; *************** function _blip3 *****************
  3725 ;; Defined at:
  3726 ;;		line 32 in file "../src/debug.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;		None               void
  3733 ;; Registers used:
  3734 ;;		None
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:   11
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text17
  3755  001E3A                     __ptext17:
  3756                           	opt stack 0
  3757  001E3A                     _blip3:
  3758                           	opt stack 19
  3759                           
  3760                           ;debug.c: 34: LATDbits.LD6 = 0;
  3761                           
  3762                           ;incstack = 0
  3763  001E3A  9C8C               	bcf	3980,6,c	;volatile
  3764                           
  3765                           ;debug.c: 35: LATDbits.LD6 = 1;
  3766  001E3C  8C8C               	bsf	3980,6,c	;volatile
  3767                           
  3768                           ;debug.c: 36: LATDbits.LD6 = 0;
  3769  001E3E  9C8C               	bcf	3980,6,c	;volatile
  3770  001E40  0012               	return	
  3771  001E42                     __end_of_blip3:
  3772                           	opt stack 0
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           prodh	equ	0xFF4
  3778                           prodl	equ	0xFF3
  3779                           intcon	equ	0xFF2
  3780                           postinc0	equ	0xFEE
  3781                           wreg	equ	0xFE8
  3782                           indf1	equ	0xFE7
  3783                           fsr1h	equ	0xFE2
  3784                           fsr1l	equ	0xFE1
  3785                           indf2	equ	0xFDF
  3786                           postinc2	equ	0xFDE
  3787                           postdec2	equ	0xFDD
  3788                           fsr2h	equ	0xFDA
  3789                           fsr2l	equ	0xFD9
  3790                           status	equ	0xFD8
  3791                           
  3792 ;; *************** function _blip2 *****************
  3793 ;; Defined at:
  3794 ;;		line 25 in file "../src/debug.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;		None               void
  3801 ;; Registers used:
  3802 ;;		None
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:   11
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text18
  3823  001E42                     __ptext18:
  3824                           	opt stack 0
  3825  001E42                     _blip2:
  3826                           	opt stack 19
  3827                           
  3828                           ;debug.c: 27: LATDbits.LD5 = 0;
  3829                           
  3830                           ;incstack = 0
  3831  001E42  9A8C               	bcf	3980,5,c	;volatile
  3832                           
  3833                           ;debug.c: 28: LATDbits.LD5 = 1;
  3834  001E44  8A8C               	bsf	3980,5,c	;volatile
  3835                           
  3836                           ;debug.c: 29: LATDbits.LD5 = 0;
  3837  001E46  9A8C               	bcf	3980,5,c	;volatile
  3838  001E48  0012               	return	
  3839  001E4A                     __end_of_blip2:
  3840                           	opt stack 0
  3841                           tblptru	equ	0xFF8
  3842                           tblptrh	equ	0xFF7
  3843                           tblptrl	equ	0xFF6
  3844                           tablat	equ	0xFF5
  3845                           prodh	equ	0xFF4
  3846                           prodl	equ	0xFF3
  3847                           intcon	equ	0xFF2
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           indf1	equ	0xFE7
  3851                           fsr1h	equ	0xFE2
  3852                           fsr1l	equ	0xFE1
  3853                           indf2	equ	0xFDF
  3854                           postinc2	equ	0xFDE
  3855                           postdec2	equ	0xFDD
  3856                           fsr2h	equ	0xFDA
  3857                           fsr2l	equ	0xFD9
  3858                           status	equ	0xFD8
  3859                           
  3860 ;; *************** function _blip1 *****************
  3861 ;; Defined at:
  3862 ;;		line 18 in file "../src/debug.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;		None               void
  3869 ;; Registers used:
  3870 ;;		None
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;Total ram usage:        0 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:   11
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text19
  3891  001E4A                     __ptext19:
  3892                           	opt stack 0
  3893  001E4A                     _blip1:
  3894                           	opt stack 19
  3895                           
  3896                           ;debug.c: 20: LATDbits.LD4 = 0;
  3897                           
  3898                           ;incstack = 0
  3899  001E4A  988C               	bcf	3980,4,c	;volatile
  3900                           
  3901                           ;debug.c: 21: LATDbits.LD4 = 1;
  3902  001E4C  888C               	bsf	3980,4,c	;volatile
  3903                           
  3904                           ;debug.c: 22: LATDbits.LD4 = 0;
  3905  001E4E  988C               	bcf	3980,4,c	;volatile
  3906  001E50  0012               	return	
  3907  001E52                     __end_of_blip1:
  3908                           	opt stack 0
  3909                           tblptru	equ	0xFF8
  3910                           tblptrh	equ	0xFF7
  3911                           tblptrl	equ	0xFF6
  3912                           tablat	equ	0xFF5
  3913                           prodh	equ	0xFF4
  3914                           prodl	equ	0xFF3
  3915                           intcon	equ	0xFF2
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           indf1	equ	0xFE7
  3919                           fsr1h	equ	0xFE2
  3920                           fsr1l	equ	0xFE1
  3921                           indf2	equ	0xFDF
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function _blip *****************
  3929 ;; Defined at:
  3930 ;;		line 11 in file "../src/debug.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;		None               void
  3937 ;; Registers used:
  3938 ;;		None
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:   11
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text20
  3959  001E52                     __ptext20:
  3960                           	opt stack 0
  3961  001E52                     _blip:
  3962                           	opt stack 19
  3963                           
  3964                           ;debug.c: 13: LATDbits.LD2 = 0;
  3965                           
  3966                           ;incstack = 0
  3967  001E52  948C               	bcf	3980,2,c	;volatile
  3968                           
  3969                           ;debug.c: 14: LATDbits.LD2 = 1;
  3970  001E54  848C               	bsf	3980,2,c	;volatile
  3971                           
  3972                           ;debug.c: 15: LATDbits.LD2 = 0;
  3973  001E56  948C               	bcf	3980,2,c	;volatile
  3974  001E58  0012               	return	
  3975  001E5A                     __end_of_blip:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           intcon	equ	0xFF2
  3984                           postinc0	equ	0xFEE
  3985                           wreg	equ	0xFE8
  3986                           indf1	equ	0xFE7
  3987                           fsr1h	equ	0xFE2
  3988                           fsr1l	equ	0xFE1
  3989                           indf2	equ	0xFDF
  3990                           postinc2	equ	0xFDE
  3991                           postdec2	equ	0xFDD
  3992                           fsr2h	equ	0xFDA
  3993                           fsr2l	equ	0xFD9
  3994                           status	equ	0xFD8
  3995                           
  3996 ;; *************** function _ToMainLow_recvmsg *****************
  3997 ;; Defined at:
  3998 ;;		line 112 in file "../src/messages.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  maxlength       1    wreg     unsigned char 
  4001 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4002 ;;		 -> main@msgtype(1), 
  4003 ;;  data            2   26[BANK1 ] PTR void 
  4004 ;;		 -> main@msgbuffer(15), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      char 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4016 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;Total ram usage:        5 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:   13
  4023 ;; This function calls:
  4024 ;;		_recv_msg
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text21
  4031  001B86                     __ptext21:
  4032                           	opt stack 0
  4033  001B86                     _ToMainLow_recvmsg:
  4034                           	opt stack 17
  4035                           
  4036                           ;incstack = 0
  4037                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4038  001B86  0101               	movlb	1	; () banked
  4039  001B88  6F1C               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  4040                           
  4041                           ; BSR set to: 1
  4042                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4043  001B8A  0102               	movlb	2	; () banked
  4044  001B8C  0E02               	movlw	high _ToMainLow_MQ
  4045  001B8E  0101               	movlb	1	; () banked
  4046  001B90  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4047  001B92  0102               	movlb	2	; () banked
  4048  001B94  0E00               	movlw	low _ToMainLow_MQ
  4049  001B96  0101               	movlb	1	; () banked
  4050  001B98  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4051  001B9A  C11C  F10C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4052  001B9E  0101               	movlb	1	; () banked
  4053  001BA0  C119  F10E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4054  001BA4  0101               	movlb	1	; () banked
  4055  001BA6  C118  F10D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4056  001BAA  0101               	movlb	1	; () banked
  4057  001BAC  C11B  F110         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4058  001BB0  0101               	movlb	1	; () banked
  4059  001BB2  C11A  F10F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4060  001BB6  EC43  F007         	call	_recv_msg	;wreg free
  4061  001BBA  0012               	return	
  4062  001BBC                     __end_of_ToMainLow_recvmsg:
  4063                           	opt stack 0
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           prodh	equ	0xFF4
  4069                           prodl	equ	0xFF3
  4070                           intcon	equ	0xFF2
  4071                           postinc0	equ	0xFEE
  4072                           wreg	equ	0xFE8
  4073                           indf1	equ	0xFE7
  4074                           fsr1h	equ	0xFE2
  4075                           fsr1l	equ	0xFE1
  4076                           indf2	equ	0xFDF
  4077                           postinc2	equ	0xFDE
  4078                           postdec2	equ	0xFDD
  4079                           fsr2h	equ	0xFDA
  4080                           fsr2l	equ	0xFD9
  4081                           status	equ	0xFD8
  4082                           
  4083 ;; *************** function _ToMainHigh_recvmsg *****************
  4084 ;; Defined at:
  4085 ;;		line 135 in file "../src/messages.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  maxlength       1    wreg     unsigned char 
  4088 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4089 ;;		 -> main@msgtype(1), 
  4090 ;;  data            2   26[BANK1 ] PTR void 
  4091 ;;		 -> main@msgbuffer(15), 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      char 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4103 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4104 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4106 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;Total ram usage:        5 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:   13
  4110 ;; This function calls:
  4111 ;;		_recv_msg
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text22
  4118  001BBC                     __ptext22:
  4119                           	opt stack 0
  4120  001BBC                     _ToMainHigh_recvmsg:
  4121                           	opt stack 17
  4122                           
  4123                           ;incstack = 0
  4124                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4125  001BBC  0101               	movlb	1	; () banked
  4126  001BBE  6F1C               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  4127                           
  4128                           ; BSR set to: 1
  4129                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4130  001BC0  0103               	movlb	3	; () banked
  4131  001BC2  0E03               	movlw	high _ToMainHigh_MQ
  4132  001BC4  0101               	movlb	1	; () banked
  4133  001BC6  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4134  001BC8  0103               	movlb	3	; () banked
  4135  001BCA  0E00               	movlw	low _ToMainHigh_MQ
  4136  001BCC  0101               	movlb	1	; () banked
  4137  001BCE  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4138  001BD0  C11C  F10C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4139  001BD4  0101               	movlb	1	; () banked
  4140  001BD6  C119  F10E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4141  001BDA  0101               	movlb	1	; () banked
  4142  001BDC  C118  F10D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4143  001BE0  0101               	movlb	1	; () banked
  4144  001BE2  C11B  F110         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4145  001BE6  0101               	movlb	1	; () banked
  4146  001BE8  C11A  F10F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4147  001BEC  EC43  F007         	call	_recv_msg	;wreg free
  4148  001BF0  0012               	return	
  4149  001BF2                     __end_of_ToMainHigh_recvmsg:
  4150                           	opt stack 0
  4151                           tblptru	equ	0xFF8
  4152                           tblptrh	equ	0xFF7
  4153                           tblptrl	equ	0xFF6
  4154                           tablat	equ	0xFF5
  4155                           prodh	equ	0xFF4
  4156                           prodl	equ	0xFF3
  4157                           intcon	equ	0xFF2
  4158                           postinc0	equ	0xFEE
  4159                           wreg	equ	0xFE8
  4160                           indf1	equ	0xFE7
  4161                           fsr1h	equ	0xFE2
  4162                           fsr1l	equ	0xFE1
  4163                           indf2	equ	0xFDF
  4164                           postinc2	equ	0xFDE
  4165                           postdec2	equ	0xFDD
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function _recv_msg *****************
  4171 ;; Defined at:
  4172 ;;		line 63 in file "../src/messages.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4175 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  4176 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4177 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4178 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  4179 ;;  data            2   15[BANK1 ] PTR void 
  4180 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4183 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4184 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  4185 ;;  tlength         2   20[BANK1 ] unsigned int 
  4186 ;;  slot            1   19[BANK1 ] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      char 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4196 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4198 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4199 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4200 ;;Total ram usage:       14 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:   12
  4203 ;; This function calls:
  4204 ;;		_memcpy
  4205 ;; This function is called by:
  4206 ;;		_ToMainLow_recvmsg
  4207 ;;		_ToMainHigh_recvmsg
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text23
  4212  000E86                     __ptext23:
  4213                           	opt stack 0
  4214  000E86                     _recv_msg:
  4215                           	opt stack 17
  4216                           
  4217                           ;messages.c: 64: unsigned char slot;
  4218                           ;messages.c: 68: msg *qmsg;
  4219                           ;messages.c: 69: size_t tlength;
  4220                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4221                           
  4222                           ;incstack = 0
  4223  000E86  0101               	movlb	1	; () banked
  4224  000E88  EE20 F089          	lfsr	2,137
  4225  000E8C  0101               	movlb	1	; () banked
  4226  000E8E  510A               	movf	recv_msg@qptr& (0+255),w,b
  4227  000E90  26D9               	addwf	fsr2l,f,c
  4228  000E92  0101               	movlb	1	; () banked
  4229  000E94  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4230  000E96  22DA               	addwfc	fsr2h,f,c
  4231  000E98  50DF               	movf	indf2,w,c
  4232  000E9A  0101               	movlb	1	; () banked
  4233  000E9C  6F13               	movwf	recv_msg@slot& (0+255),b
  4234                           
  4235                           ; BSR set to: 1
  4236                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4237  000E9E  0101               	movlb	1	; () banked
  4238  000EA0  5113               	movf	recv_msg@slot& (0+255),w,b
  4239  000EA2  0D11               	mullw	17
  4240  000EA4  50F3               	movf	prodl,w,c
  4241  000EA6  0101               	movlb	1	; () banked
  4242  000EA8  250A               	addwf	recv_msg@qptr& (0+255),w,b
  4243  000EAA  0101               	movlb	1	; () banked
  4244  000EAC  6F16               	movwf	recv_msg@qmsg& (0+255),b
  4245  000EAE  50F4               	movf	prodh,w,c
  4246  000EB0  0101               	movlb	1	; () banked
  4247  000EB2  210B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4248  000EB4  0101               	movlb	1	; () banked
  4249  000EB6  6F17               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;messages.c: 74: if (qmsg->full == 1) {
  4253  000EB8  0E01               	movlw	1
  4254  000EBA  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4255  000EBE  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4256  000EC2  62DF               	cpfseq	indf2,c
  4257  000EC4  D06D               	goto	l3541
  4258                           
  4259                           ; BSR set to: 1
  4260                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4261  000EC6  0101               	movlb	1	; () banked
  4262  000EC8  EE20 F001          	lfsr	2,1
  4263  000ECC  0101               	movlb	1	; () banked
  4264  000ECE  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4265  000ED0  26D9               	addwf	fsr2l,f,c
  4266  000ED2  0101               	movlb	1	; () banked
  4267  000ED4  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4268  000ED6  22DA               	addwfc	fsr2h,f,c
  4269  000ED8  50DF               	movf	indf2,w,c
  4270  000EDA  0101               	movlb	1	; () banked
  4271  000EDC  5D0C               	subwf	recv_msg@maxlength& (0+255),w,b
  4272  000EDE  B0D8               	btfsc	status,0,c
  4273  000EE0  D002               	goto	l3525
  4274                           
  4275                           ; BSR set to: 1
  4276                           ;messages.c: 77: return (-3);
  4277  000EE2  0EFD               	movlw	253
  4278  000EE4  0012               	return	
  4279  000EE6                     l3525:
  4280                           
  4281                           ; BSR set to: 1
  4282                           ;messages.c: 78: }
  4283                           ;messages.c: 80: tlength = qmsg->length;
  4284  000EE6  0101               	movlb	1	; () banked
  4285  000EE8  EE20 F001          	lfsr	2,1
  4286  000EEC  0101               	movlb	1	; () banked
  4287  000EEE  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4288  000EF0  26D9               	addwf	fsr2l,f,c
  4289  000EF2  0101               	movlb	1	; () banked
  4290  000EF4  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4291  000EF6  22DA               	addwfc	fsr2h,f,c
  4292  000EF8  50DF               	movf	indf2,w,c
  4293  000EFA  0101               	movlb	1	; () banked
  4294  000EFC  6F11               	movwf	??_recv_msg& (0+255),b
  4295  000EFE  0101               	movlb	1	; () banked
  4296  000F00  5111               	movf	??_recv_msg& (0+255),w,b
  4297  000F02  0101               	movlb	1	; () banked
  4298  000F04  6F14               	movwf	recv_msg@tlength& (0+255),b
  4299  000F06  0101               	movlb	1	; () banked
  4300  000F08  6B15               	clrf	(recv_msg@tlength+1)& (0+255),b
  4301                           
  4302                           ; BSR set to: 1
  4303                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4304  000F0A  0101               	movlb	1	; () banked
  4305  000F0C  C110  F101         	movff	recv_msg@data+1,memcpy@d1+1
  4306  000F10  0101               	movlb	1	; () banked
  4307  000F12  C10F  F100         	movff	recv_msg@data,memcpy@d1
  4308  000F16  0E03               	movlw	3
  4309  000F18  0101               	movlb	1	; () banked
  4310  000F1A  2516               	addwf	recv_msg@qmsg& (0+255),w,b
  4311  000F1C  0101               	movlb	1	; () banked
  4312  000F1E  6F11               	movwf	??_recv_msg& (0+255),b
  4313  000F20  0E00               	movlw	0
  4314  000F22  0101               	movlb	1	; () banked
  4315  000F24  2117               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4316  000F26  0101               	movlb	1	; () banked
  4317  000F28  6F12               	movwf	(??_recv_msg+1)& (0+255),b
  4318  000F2A  C111  F102         	movff	??_recv_msg,memcpy@s1
  4319  000F2E  C112  F103         	movff	??_recv_msg+1,memcpy@s1+1
  4320  000F32  C114  F104         	movff	recv_msg@tlength,memcpy@n
  4321  000F36  C115  F105         	movff	recv_msg@tlength+1,memcpy@n+1
  4322  000F3A  ECDD  F00C         	call	_memcpy	;wreg free
  4323                           
  4324                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  4325  000F3E  0101               	movlb	1	; () banked
  4326  000F40  EE20 F089          	lfsr	2,137
  4327  000F44  0101               	movlb	1	; () banked
  4328  000F46  510A               	movf	recv_msg@qptr& (0+255),w,b
  4329  000F48  26D9               	addwf	fsr2l,f,c
  4330  000F4A  0101               	movlb	1	; () banked
  4331  000F4C  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4332  000F4E  22DA               	addwfc	fsr2h,f,c
  4333  000F50  0101               	movlb	1	; () banked
  4334  000F52  EE10 F089          	lfsr	1,137
  4335  000F56  0101               	movlb	1	; () banked
  4336  000F58  510A               	movf	recv_msg@qptr& (0+255),w,b
  4337  000F5A  26E1               	addwf	fsr1l,f,c
  4338  000F5C  0101               	movlb	1	; () banked
  4339  000F5E  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4340  000F60  22E2               	addwfc	fsr1h,f,c
  4341  000F62  50E7               	movf	indf1,w,c
  4342  000F64  0101               	movlb	1	; () banked
  4343  000F66  6F11               	movwf	??_recv_msg& (0+255),b
  4344  000F68  0101               	movlb	1	; () banked
  4345  000F6A  2911               	incf	??_recv_msg& (0+255),w,b
  4346  000F6C  0B07               	andlw	7
  4347  000F6E  6EDF               	movwf	indf2,c
  4348                           
  4349                           ; BSR set to: 1
  4350                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4351  000F70  0101               	movlb	1	; () banked
  4352  000F72  EE20 F002          	lfsr	2,2
  4353  000F76  0101               	movlb	1	; () banked
  4354  000F78  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4355  000F7A  26D9               	addwf	fsr2l,f,c
  4356  000F7C  0101               	movlb	1	; () banked
  4357  000F7E  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4358  000F80  22DA               	addwfc	fsr2h,f,c
  4359  000F82  C10D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4360  000F86  C10E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4361  000F8A  CFDF FFE7          	movff	indf2,indf1
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;messages.c: 91: qmsg->full = 0;
  4365  000F8E  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4366  000F92  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4367  000F96  0E00               	movlw	0
  4368  000F98  6EDF               	movwf	indf2,c
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;messages.c: 92: return (tlength);
  4372  000F9A  0101               	movlb	1	; () banked
  4373  000F9C  5114               	movf	recv_msg@tlength& (0+255),w,b
  4374  000F9E  0012               	return	
  4375  000FA0                     l3541:
  4376                           
  4377                           ; BSR set to: 1
  4378                           ;messages.c: 94: return (-4);
  4379  000FA0  0EFC               	movlw	252
  4380  000FA2  0012               	return	
  4381  000FA4                     __end_of_recv_msg:
  4382                           	opt stack 0
  4383                           tblptru	equ	0xFF8
  4384                           tblptrh	equ	0xFF7
  4385                           tblptrl	equ	0xFF6
  4386                           tablat	equ	0xFF5
  4387                           prodh	equ	0xFF4
  4388                           prodl	equ	0xFF3
  4389                           intcon	equ	0xFF2
  4390                           postinc0	equ	0xFEE
  4391                           wreg	equ	0xFE8
  4392                           indf1	equ	0xFE7
  4393                           fsr1h	equ	0xFE2
  4394                           fsr1l	equ	0xFE1
  4395                           indf2	equ	0xFDF
  4396                           postinc2	equ	0xFDE
  4397                           postdec2	equ	0xFDD
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           
  4402 ;; *************** function _memcpy *****************
  4403 ;; Defined at:
  4404 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  d1              2    0[BANK1 ] PTR void 
  4407 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4408 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  4409 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  4410 ;;  s1              2    2[BANK1 ] PTR const void 
  4411 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4412 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4413 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  4414 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4415 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  4416 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  4417 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4418 ;;  n               2    4[BANK1 ] unsigned int 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4421 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4422 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4423 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  4424 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4425 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  4426 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  4427 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4428 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4429 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4430 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  4431 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  2    0[BANK1 ] PTR void 
  4434 ;; Registers used:
  4435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4441 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4442 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4444 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4445 ;;Total ram usage:       10 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:   11
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_send_msg
  4452 ;;		_recv_msg
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text24
  4457  0019BA                     __ptext24:
  4458                           	opt stack 0
  4459  0019BA                     _memcpy:
  4460                           	opt stack 15
  4461                           
  4462                           ; BSR set to: 1
  4463                           ;incstack = 0
  4464  0019BA  0101               	movlb	1	; () banked
  4465  0019BC  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
  4466  0019C0  0101               	movlb	1	; () banked
  4467  0019C2  C102  F108         	movff	memcpy@s1,memcpy@s
  4468  0019C6  0101               	movlb	1	; () banked
  4469  0019C8  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
  4470  0019CC  0101               	movlb	1	; () banked
  4471  0019CE  C100  F106         	movff	memcpy@d1,memcpy@d
  4472  0019D2  D010               	goto	l3465
  4473  0019D4                     l3459:
  4474                           
  4475                           ; BSR set to: 1
  4476  0019D4  C108  FFD9         	movff	memcpy@s,fsr2l
  4477  0019D8  C109  FFDA         	movff	memcpy@s+1,fsr2h
  4478  0019DC  C106  FFE1         	movff	memcpy@d,fsr1l
  4479  0019E0  C107  FFE2         	movff	memcpy@d+1,fsr1h
  4480  0019E4  CFDF FFE7          	movff	indf2,indf1
  4481                           
  4482                           ; BSR set to: 1
  4483  0019E8  0101               	movlb	1	; () banked
  4484  0019EA  4B08               	infsnz	memcpy@s& (0+255),f,b
  4485  0019EC  2B09               	incf	(memcpy@s+1)& (0+255),f,b
  4486                           
  4487                           ; BSR set to: 1
  4488  0019EE  0101               	movlb	1	; () banked
  4489  0019F0  4B06               	infsnz	memcpy@d& (0+255),f,b
  4490  0019F2  2B07               	incf	(memcpy@d+1)& (0+255),f,b
  4491  0019F4                     l3465:
  4492                           
  4493                           ; BSR set to: 1
  4494  0019F4  0101               	movlb	1	; () banked
  4495  0019F6  0704               	decf	memcpy@n& (0+255),f,b
  4496  0019F8  A0D8               	btfss	status,0,c
  4497  0019FA  0705               	decf	(memcpy@n+1)& (0+255),f,b
  4498  0019FC  0101               	movlb	1	; () banked
  4499  0019FE  2904               	incf	memcpy@n& (0+255),w,b
  4500  001A00  B4D8               	btfsc	status,2,c
  4501  001A02  2905               	incf	(memcpy@n+1)& (0+255),w,b
  4502  001A04  B4D8               	btfsc	status,2,c
  4503                           
  4504                           ; BSR set to: 1
  4505                           
  4506                           ; BSR set to: 1
  4507                           ;	Return value of _memcpy is never used
  4508  001A06  0012               	return	
  4509  001A08  D7E5               	goto	l3459
  4510  001A0A                     __end_of_memcpy:
  4511                           	opt stack 0
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           prodh	equ	0xFF4
  4517                           prodl	equ	0xFF3
  4518                           intcon	equ	0xFF2
  4519                           postinc0	equ	0xFEE
  4520                           wreg	equ	0xFE8
  4521                           indf1	equ	0xFE7
  4522                           fsr1h	equ	0xFE2
  4523                           fsr1l	equ	0xFE1
  4524                           indf2	equ	0xFDF
  4525                           postinc2	equ	0xFDE
  4526                           postdec2	equ	0xFDD
  4527                           fsr2h	equ	0xFDA
  4528                           fsr2l	equ	0xFD9
  4529                           status	equ	0xFD8
  4530                           
  4531 ;; *************** function _OpenTimer1 *****************
  4532 ;; Defined at:
  4533 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  config          1    wreg     unsigned char 
  4536 ;;  config1         1    0[BANK1 ] unsigned char 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  config          1    2[BANK1 ] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;		None               void
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4548 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4549 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;Total ram usage:        3 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:   11
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_main
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text25
  4563  001AD8                     __ptext25:
  4564                           	opt stack 0
  4565  001AD8                     _OpenTimer1:
  4566                           	opt stack 19
  4567                           
  4568                           ; BSR set to: 1
  4569                           ;incstack = 0
  4570                           ;OpenTimer1@config stored from wreg
  4571  001AD8  0101               	movlb	1	; () banked
  4572  001ADA  6F02               	movwf	OpenTimer1@config& (0+255),b
  4573                           
  4574                           ; BSR set to: 1
  4575  001ADC  0101               	movlb	1	; () banked
  4576  001ADE  5100               	movf	OpenTimer1@config1& (0+255),w,b
  4577  001AE0  0BF3               	andlw	243
  4578  001AE2  6E9A               	movwf	3994,c	;volatile
  4579  001AE4  C102  F101         	movff	OpenTimer1@config,??_OpenTimer1
  4580  001AE8  0E7F               	movlw	127
  4581  001AEA  0101               	movlb	1	; () banked
  4582  001AEC  1701               	andwf	??_OpenTimer1& (0+255),f,b
  4583  001AEE  0101               	movlb	1	; () banked
  4584  001AF0  90D8               	bcf	status,0,c
  4585  001AF2  3501               	rlcf	??_OpenTimer1& (0+255),w,b
  4586  001AF4  6ECD               	movwf	4045,c	;volatile
  4587                           
  4588                           ; BSR set to: 1
  4589  001AF6  0E00               	movlw	0
  4590  001AF8  6ECF               	movwf	4047,c	;volatile
  4591                           
  4592                           ; BSR set to: 1
  4593  001AFA  0E00               	movlw	0
  4594  001AFC  6ECE               	movwf	4046,c	;volatile
  4595                           
  4596                           ; BSR set to: 1
  4597  001AFE  909E               	bcf	3998,0,c	;volatile
  4598                           
  4599                           ; BSR set to: 1
  4600  001B00  0101               	movlb	1	; () banked
  4601  001B02  AF02               	btfss	OpenTimer1@config& (0+255),7,b
  4602  001B04  D002               	goto	l595
  4603                           
  4604                           ; BSR set to: 1
  4605  001B06  809D               	bsf	3997,0,c	;volatile
  4606  001B08  D001               	goto	l596
  4607  001B0A                     l595:
  4608                           
  4609                           ; BSR set to: 1
  4610  001B0A  909D               	bcf	3997,0,c	;volatile
  4611  001B0C                     l596:
  4612                           
  4613                           ; BSR set to: 1
  4614  001B0C  BE9A               	btfsc	3994,7,c	;volatile
  4615                           
  4616                           ; BSR set to: 1
  4617  001B0E  869A               	bsf	3994,3,c	;volatile
  4618                           
  4619                           ; BSR set to: 1
  4620  001B10  80CD               	bsf	4045,0,c	;volatile
  4621                           
  4622                           ; BSR set to: 1
  4623  001B12  0012               	return	
  4624  001B14                     __end_of_OpenTimer1:
  4625                           	opt stack 0
  4626                           tblptru	equ	0xFF8
  4627                           tblptrh	equ	0xFF7
  4628                           tblptrl	equ	0xFF6
  4629                           tablat	equ	0xFF5
  4630                           prodh	equ	0xFF4
  4631                           prodl	equ	0xFF3
  4632                           intcon	equ	0xFF2
  4633                           postinc0	equ	0xFEE
  4634                           wreg	equ	0xFE8
  4635                           indf1	equ	0xFE7
  4636                           fsr1h	equ	0xFE2
  4637                           fsr1l	equ	0xFE1
  4638                           indf2	equ	0xFDF
  4639                           postinc2	equ	0xFDE
  4640                           postdec2	equ	0xFDD
  4641                           fsr2h	equ	0xFDA
  4642                           fsr2l	equ	0xFD9
  4643                           status	equ	0xFD8
  4644                           
  4645 ;; *************** function _OpenTimer0 *****************
  4646 ;; Defined at:
  4647 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  config          1    wreg     unsigned char 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  config          1    0[BANK1 ] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;		None               void
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4664 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4665 ;;Total ram usage:        1 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:   11
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text26
  4676  001D38                     __ptext26:
  4677                           	opt stack 0
  4678  001D38                     _OpenTimer0:
  4679                           	opt stack 19
  4680                           
  4681                           ; BSR set to: 1
  4682                           ;incstack = 0
  4683                           ;OpenTimer0@config stored from wreg
  4684  001D38  0101               	movlb	1	; () banked
  4685  001D3A  6F00               	movwf	OpenTimer0@config& (0+255),b
  4686                           
  4687                           ; BSR set to: 1
  4688  001D3C  0101               	movlb	1	; () banked
  4689  001D3E  5100               	movf	OpenTimer0@config& (0+255),w,b
  4690  001D40  0B7F               	andlw	127
  4691  001D42  6ED5               	movwf	4053,c	;volatile
  4692                           
  4693                           ; BSR set to: 1
  4694  001D44  0E00               	movlw	0
  4695  001D46  6ED7               	movwf	4055,c	;volatile
  4696                           
  4697                           ; BSR set to: 1
  4698  001D48  0E00               	movlw	0
  4699  001D4A  6ED6               	movwf	4054,c	;volatile
  4700                           
  4701                           ; BSR set to: 1
  4702  001D4C  94F2               	bcf	intcon,2,c	;volatile
  4703                           
  4704                           ; BSR set to: 1
  4705  001D4E  0101               	movlb	1	; () banked
  4706  001D50  AF00               	btfss	OpenTimer0@config& (0+255),7,b
  4707  001D52  D002               	goto	l567
  4708                           
  4709                           ; BSR set to: 1
  4710  001D54  8AF2               	bsf	intcon,5,c	;volatile
  4711  001D56  D001               	goto	l568
  4712  001D58                     l567:
  4713                           
  4714                           ; BSR set to: 1
  4715  001D58  9AF2               	bcf	intcon,5,c	;volatile
  4716  001D5A                     l568:
  4717                           
  4718                           ; BSR set to: 1
  4719  001D5A  8ED5               	bsf	4053,7,c	;volatile
  4720                           
  4721                           ; BSR set to: 1
  4722  001D5C  0012               	return	
  4723  001D5E                     __end_of_OpenTimer0:
  4724                           	opt stack 0
  4725                           tblptru	equ	0xFF8
  4726                           tblptrh	equ	0xFF7
  4727                           tblptrl	equ	0xFF6
  4728                           tablat	equ	0xFF5
  4729                           prodh	equ	0xFF4
  4730                           prodl	equ	0xFF3
  4731                           intcon	equ	0xFF2
  4732                           postinc0	equ	0xFEE
  4733                           wreg	equ	0xFE8
  4734                           indf1	equ	0xFE7
  4735                           fsr1h	equ	0xFE2
  4736                           fsr1l	equ	0xFE1
  4737                           indf2	equ	0xFDF
  4738                           postinc2	equ	0xFDE
  4739                           postdec2	equ	0xFDD
  4740                           fsr2h	equ	0xFDA
  4741                           fsr2l	equ	0xFD9
  4742                           status	equ	0xFD8
  4743                           
  4744 ;; *************** function _InterruptHandlerLow *****************
  4745 ;; Defined at:
  4746 ;;		line 131 in file "../src/interrupts.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;		None
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;		None               void
  4753 ;; Registers used:
  4754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4762 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4763 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4764 ;;Total ram usage:       17 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:   10
  4767 ;; This function calls:
  4768 ;;		_timer1_int_handler
  4769 ;;		_uart_receive_interrupt_handler
  4770 ;;		_uart_transmit_interrupt_handler
  4771 ;; This function is called by:
  4772 ;;		Interrupt level 1
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	intcodelo
  4777  000018                     __pintcodelo:
  4778                           	opt stack 0
  4779  000018                     _InterruptHandlerLow:
  4780                           	opt stack 15
  4781                           
  4782                           ; BSR set to: 1
  4783                           ;incstack = 0
  4784  000018  CFD8 F039          	movff	status,??_InterruptHandlerLow
  4785  00001C  CFE8 F03A          	movff	wreg,??_InterruptHandlerLow+1
  4786  000020  CFE0 F03B          	movff	bsr,??_InterruptHandlerLow+2
  4787  000024  CFFA F03C          	movff	pclath,??_InterruptHandlerLow+3
  4788  000028  CFFB F03D          	movff	pclatu,??_InterruptHandlerLow+4
  4789  00002C  CFE9 F03E          	movff	fsr0l,??_InterruptHandlerLow+5
  4790  000030  CFEA F03F          	movff	fsr0h,??_InterruptHandlerLow+6
  4791  000034  CFE1 F040          	movff	fsr1l,??_InterruptHandlerLow+7
  4792  000038  CFE2 F041          	movff	fsr1h,??_InterruptHandlerLow+8
  4793  00003C  CFD9 F042          	movff	fsr2l,??_InterruptHandlerLow+9
  4794  000040  CFDA F043          	movff	fsr2h,??_InterruptHandlerLow+10
  4795  000044  CFF3 F044          	movff	prodl,??_InterruptHandlerLow+11
  4796  000048  CFF4 F045          	movff	prodh,??_InterruptHandlerLow+12
  4797  00004C  CFF6 F046          	movff	tblptrl,??_InterruptHandlerLow+13
  4798  000050  CFF7 F047          	movff	tblptrh,??_InterruptHandlerLow+14
  4799  000054  CFF8 F048          	movff	tblptru,??_InterruptHandlerLow+15
  4800  000058  CFF5 F049          	movff	tablat,??_InterruptHandlerLow+16
  4801                           
  4802                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  4803  00005C  A09E               	btfss	3998,0,c	;volatile
  4804  00005E  D003               	goto	i1l3269
  4805                           
  4806                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  4807  000060  909E               	bcf	3998,0,c	;volatile
  4808                           
  4809                           ;interrupts.c: 139: timer1_int_handler();
  4810  000062  EC72  F00E         	call	_timer1_int_handler	;wreg free
  4811  000066                     i1l3269:
  4812                           
  4813                           ;interrupts.c: 140: }
  4814                           ;interrupts.c: 143: if (PIR1bits.RCIF) {
  4815  000066  AA9E               	btfss	3998,5,c	;volatile
  4816  000068  D003               	goto	i1l3275
  4817                           
  4818                           ;interrupts.c: 144: PIR1bits.RCIF = 0;
  4819  00006A  9A9E               	bcf	3998,5,c	;volatile
  4820                           
  4821                           ;interrupts.c: 148: uart_receive_interrupt_handler();
  4822  00006C  EC70  F006         	call	_uart_receive_interrupt_handler	;wreg free
  4823  000070                     i1l3275:
  4824                           
  4825                           ;interrupts.c: 149: }
  4826                           ;interrupts.c: 153: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4827  000070  B89E               	btfsc	3998,4,c	;volatile
  4828  000072  A89D               	btfss	3997,4,c	;volatile
  4829  000074  D002               	goto	i1l52
  4830                           
  4831                           ;interrupts.c: 154: {
  4832                           ;interrupts.c: 158: uart_transmit_interrupt_handler();
  4833  000076  ECE1  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4834  00007A                     i1l52:
  4835  00007A  C049  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4836  00007E  C048  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4837  000082  C047  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4838  000086  C046  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4839  00008A  C045  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4840  00008E  C044  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4841  000092  C043  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4842  000096  C042  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4843  00009A  C041  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4844  00009E  C040  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4845  0000A2  C03F  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4846  0000A6  C03E  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4847  0000AA  C03D  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4848  0000AE  C03C  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4849  0000B2  C03B  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4850  0000B6  C03A  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4851  0000BA  C039  FFD8         	movff	??_InterruptHandlerLow,status
  4852  0000BE  0010               	retfie	
  4853  0000C0                     __end_of_InterruptHandlerLow:
  4854                           	opt stack 0
  4855                           pclatu	equ	0xFFB
  4856                           pclath	equ	0xFFA
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           prodh	equ	0xFF4
  4862                           prodl	equ	0xFF3
  4863                           intcon	equ	0xFF2
  4864                           postinc0	equ	0xFEE
  4865                           fsr0h	equ	0xFEA
  4866                           fsr0l	equ	0xFE9
  4867                           wreg	equ	0xFE8
  4868                           indf1	equ	0xFE7
  4869                           fsr1h	equ	0xFE2
  4870                           fsr1l	equ	0xFE1
  4871                           bsr	equ	0xFE0
  4872                           indf2	equ	0xFDF
  4873                           postinc2	equ	0xFDE
  4874                           postdec2	equ	0xFDD
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function _uart_transmit_interrupt_handler *****************
  4880 ;; Defined at:
  4881 ;;		line 200 in file "../src/my_uart.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;  message_stat    1   44[COMRAM] char 
  4886 ;;  data           14   29[COMRAM] unsigned char [14]
  4887 ;;  msgtype         1   43[COMRAM] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;		None               void
  4890 ;; Registers used:
  4891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4900 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4901 ;;Total ram usage:       16 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    9
  4904 ;; This function calls:
  4905 ;;		_FromMainLow_recvmsg
  4906 ;;		_uart_frame_message
  4907 ;; This function is called by:
  4908 ;;		_InterruptHandlerLow
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text28
  4913  0015C2                     __ptext28:
  4914                           	opt stack 0
  4915  0015C2                     _uart_transmit_interrupt_handler:
  4916                           	opt stack 15
  4917                           
  4918                           ;my_uart.c: 203: static unsigned char done = 1;
  4919                           ;my_uart.c: 204: static unsigned char index = 0;
  4920                           ;my_uart.c: 206: unsigned char data[14];
  4921                           ;my_uart.c: 207: static unsigned char message[(14 + 2 + 2)];
  4922                           ;my_uart.c: 209: unsigned char msgtype = 31;
  4923                           
  4924                           ;incstack = 0
  4925  0015C2  0E1F               	movlw	31
  4926  0015C4  6E2C               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4927                           
  4928                           ;my_uart.c: 211: if( done )
  4929  0015C6  505F               	movf	uart_transmit_interrupt_handler@done,w,c
  4930  0015C8  B4D8               	btfsc	status,2,c
  4931  0015CA  D03A               	goto	i1l3065
  4932                           
  4933                           ;my_uart.c: 212: {
  4934                           ;my_uart.c: 213: signed char message_status = FromMainLow_recvmsg(14,&msgtype, (void*)da
      +                          ta );
  4935  0015CC  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4936  0015CE  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4937  0015D0  0E2C               	movlw	low uart_transmit_interrupt_handler@msgtype
  4938  0015D2  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4939  0015D4  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4940  0015D6  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4941  0015D8  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4942  0015DA  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4943  0015DC  0E0E               	movlw	14
  4944  0015DE  EC88  F00E         	call	_FromMainLow_recvmsg
  4945  0015E2  6E2D               	movwf	uart_transmit_interrupt_handler@message_status,c
  4946                           
  4947                           ;my_uart.c: 215: if( message_status == -4)
  4948  0015E4  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4949  0015E6  0AFC               	xorlw	252
  4950  0015E8  A4D8               	btfss	status,2,c
  4951  0015EA  D002               	goto	i1l3037
  4952                           
  4953                           ;my_uart.c: 216: {
  4954                           ;my_uart.c: 218: PIE1bits.TX1IE = 0;
  4955  0015EC  989D               	bcf	3997,4,c	;volatile
  4956                           
  4957                           ;my_uart.c: 219: }
  4958  0015EE  0012               	return	
  4959  0015F0                     i1l3037:
  4960                           
  4961                           ;my_uart.c: 220: else if( message_status > 0 )
  4962  0015F0  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4963  0015F2  0A80               	xorlw	128
  4964  0015F4  0F7F               	addlw	-129
  4965  0015F6  A0D8               	btfss	status,0,c
  4966  0015F8  0012               	return	
  4967                           
  4968                           ;my_uart.c: 221: {
  4969                           ;my_uart.c: 222: uart_frame_message( data , message );
  4970  0015FA  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4971  0015FC  6E02               	movwf	uart_frame_message@inner+1,c
  4972  0015FE  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4973  001600  6E01               	movwf	uart_frame_message@inner,c
  4974  001602  0100               	movlb	0	; () banked
  4975  001604  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4976  001606  6E04               	movwf	uart_frame_message@outer+1,c
  4977  001608  0100               	movlb	0	; () banked
  4978  00160A  0EB3               	movlw	low uart_transmit_interrupt_handler@message
  4979  00160C  6E03               	movwf	uart_frame_message@outer,c
  4980  00160E  EC4D  F009         	call	_uart_frame_message	;wreg free
  4981                           
  4982                           ;my_uart.c: 223: index = 0;
  4983  001612  0E00               	movlw	0
  4984  001614  6E50               	movwf	uart_transmit_interrupt_handler@index,c
  4985                           
  4986                           ;my_uart.c: 224: done = 0;
  4987  001616  0E00               	movlw	0
  4988  001618  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4989                           
  4990                           ;my_uart.c: 226: TXREG1 = message[index];
  4991  00161A  5050               	movf	uart_transmit_interrupt_handler@index,w,c
  4992  00161C  0D01               	mullw	1
  4993  00161E  0100               	movlb	0	; () banked
  4994  001620  0EB3               	movlw	low uart_transmit_interrupt_handler@message
  4995  001622  24F3               	addwf	prodl,w,c
  4996  001624  6ED9               	movwf	fsr2l,c
  4997  001626  0100               	movlb	0	; () banked
  4998  001628  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4999  00162A  20F4               	addwfc	prodh,w,c
  5000  00162C  6EDA               	movwf	fsr2h,c
  5001  00162E  50DF               	movf	indf2,w,c
  5002  001630  6EAE               	movwf	4014,c	;volatile
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;my_uart.c: 227: index++;
  5006  001632  2A50               	incf	uart_transmit_interrupt_handler@index,f,c
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;my_uart.c: 228: if( index >= (14 + 2 + 2) )
  5010  001634  0E11               	movlw	17
  5011  001636  6450               	cpfsgt	uart_transmit_interrupt_handler@index,c
  5012  001638  0012               	return	
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;my_uart.c: 229: {
  5016                           ;my_uart.c: 230: done = 1;
  5017  00163A  0E01               	movlw	1
  5018  00163C  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  5019  00163E  0012               	return	
  5020  001640                     i1l3065:
  5021                           
  5022                           ;my_uart.c: 247: else
  5023                           ;my_uart.c: 248: {
  5024                           ;my_uart.c: 250: TXREG1 = message[index];
  5025  001640  5050               	movf	uart_transmit_interrupt_handler@index,w,c
  5026  001642  0D01               	mullw	1
  5027  001644  0100               	movlb	0	; () banked
  5028  001646  0EB3               	movlw	low uart_transmit_interrupt_handler@message
  5029  001648  24F3               	addwf	prodl,w,c
  5030  00164A  6ED9               	movwf	fsr2l,c
  5031  00164C  0100               	movlb	0	; () banked
  5032  00164E  0E00               	movlw	high uart_transmit_interrupt_handler@message
  5033  001650  20F4               	addwfc	prodh,w,c
  5034  001652  6EDA               	movwf	fsr2h,c
  5035  001654  50DF               	movf	indf2,w,c
  5036  001656  6EAE               	movwf	4014,c	;volatile
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;my_uart.c: 251: index++;
  5040  001658  2A50               	incf	uart_transmit_interrupt_handler@index,f,c
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;my_uart.c: 252: if( index >= (14 + 2 + 2) )
  5044  00165A  0E11               	movlw	17
  5045  00165C  6450               	cpfsgt	uart_transmit_interrupt_handler@index,c
  5046  00165E  0012               	return	
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;my_uart.c: 253: {
  5050                           ;my_uart.c: 254: done = 1;
  5051  001660  0E01               	movlw	1
  5052  001662  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  5053  001664  0012               	return	
  5054  001666                     __end_of_uart_transmit_interrupt_handler:
  5055                           	opt stack 0
  5056                           pclatu	equ	0xFFB
  5057                           pclath	equ	0xFFA
  5058                           tblptru	equ	0xFF8
  5059                           tblptrh	equ	0xFF7
  5060                           tblptrl	equ	0xFF6
  5061                           tablat	equ	0xFF5
  5062                           prodh	equ	0xFF4
  5063                           prodl	equ	0xFF3
  5064                           intcon	equ	0xFF2
  5065                           postinc0	equ	0xFEE
  5066                           fsr0h	equ	0xFEA
  5067                           fsr0l	equ	0xFE9
  5068                           wreg	equ	0xFE8
  5069                           indf1	equ	0xFE7
  5070                           fsr1h	equ	0xFE2
  5071                           fsr1l	equ	0xFE1
  5072                           bsr	equ	0xFE0
  5073                           indf2	equ	0xFDF
  5074                           postinc2	equ	0xFDE
  5075                           postdec2	equ	0xFDD
  5076                           fsr2h	equ	0xFDA
  5077                           fsr2l	equ	0xFD9
  5078                           status	equ	0xFD8
  5079                           
  5080 ;; *************** function _uart_frame_message *****************
  5081 ;; Defined at:
  5082 ;;		line 368 in file "../src/my_uart.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  inner           2    0[COMRAM] PTR unsigned char 
  5085 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  5086 ;;  outer           2    2[COMRAM] PTR unsigned char 
  5087 ;;		 -> uart_transmit_interrupt_handler@message(18), 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  i               1    7[COMRAM] unsigned char 
  5090 ;;  checksum        1    6[COMRAM] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;		None               void
  5093 ;; Registers used:
  5094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5104 ;;Total ram usage:        8 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    6
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_uart_transmit_interrupt_handler
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text29
  5115  00129A                     __ptext29:
  5116                           	opt stack 0
  5117  00129A                     _uart_frame_message:
  5118                           	opt stack 17
  5119                           
  5120                           ;my_uart.c: 370: static unsigned char sent_counter = 0;
  5121                           ;my_uart.c: 372: outer[0] = 0xff;
  5122                           
  5123                           ;incstack = 0
  5124  00129A  C003  FFD9         	movff	uart_frame_message@outer,fsr2l
  5125  00129E  C004  FFDA         	movff	uart_frame_message@outer+1,fsr2h
  5126  0012A2  0EFF               	movlw	255
  5127  0012A4  6EDF               	movwf	indf2,c
  5128                           
  5129                           ;my_uart.c: 373: outer[1] = sent_counter++;
  5130  0012A6  EE20 F001          	lfsr	2,1
  5131  0012AA  5003               	movf	uart_frame_message@outer,w,c
  5132  0012AC  26D9               	addwf	fsr2l,f,c
  5133  0012AE  5004               	movf	uart_frame_message@outer+1,w,c
  5134  0012B0  22DA               	addwfc	fsr2h,f,c
  5135  0012B2  C04A  FFDF         	movff	uart_frame_message@sent_counter,indf2
  5136  0012B6  2A4A               	incf	uart_frame_message@sent_counter,f,c
  5137                           
  5138                           ;my_uart.c: 374: outer[(14 + 2 + 2)-1] = 0xfe;
  5139  0012B8  EE20 F011          	lfsr	2,17
  5140  0012BC  5003               	movf	uart_frame_message@outer,w,c
  5141  0012BE  26D9               	addwf	fsr2l,f,c
  5142  0012C0  5004               	movf	uart_frame_message@outer+1,w,c
  5143  0012C2  22DA               	addwfc	fsr2h,f,c
  5144  0012C4  0EFE               	movlw	254
  5145  0012C6  6EDF               	movwf	indf2,c
  5146                           
  5147                           ;my_uart.c: 376: unsigned char checksum = 0;
  5148  0012C8  0E00               	movlw	0
  5149  0012CA  6E07               	movwf	uart_frame_message@checksum,c
  5150                           
  5151                           ;my_uart.c: 377: unsigned char i;
  5152                           ;my_uart.c: 378: for(i=0;i<14;i++)
  5153  0012CC  0E00               	movlw	0
  5154  0012CE  6E08               	movwf	uart_frame_message@i,c
  5155  0012D0  D049               	goto	L4
  5156  0012D2                     i1l2651:
  5157                           
  5158                           ;my_uart.c: 379: {
  5159                           ;my_uart.c: 380: if( inner[i] == 0xff || inner[i] == 0xfe )
  5160  0012D2  5008               	movf	uart_frame_message@i,w,c
  5161  0012D4  0D01               	mullw	1
  5162  0012D6  50F3               	movf	prodl,w,c
  5163  0012D8  2401               	addwf	uart_frame_message@inner,w,c
  5164  0012DA  6ED9               	movwf	fsr2l,c
  5165  0012DC  50F4               	movf	prodh,w,c
  5166  0012DE  2002               	addwfc	uart_frame_message@inner+1,w,c
  5167  0012E0  6EDA               	movwf	fsr2h,c
  5168  0012E2  50DF               	movf	indf2,w,c
  5169  0012E4  0AFF               	xorlw	255
  5170  0012E6  B4D8               	btfsc	status,2,c
  5171  0012E8  D00B               	goto	i1l2655
  5172  0012EA  5008               	movf	uart_frame_message@i,w,c
  5173  0012EC  0D01               	mullw	1
  5174  0012EE  50F3               	movf	prodl,w,c
  5175  0012F0  2401               	addwf	uart_frame_message@inner,w,c
  5176  0012F2  6ED9               	movwf	fsr2l,c
  5177  0012F4  50F4               	movf	prodh,w,c
  5178  0012F6  2002               	addwfc	uart_frame_message@inner+1,w,c
  5179  0012F8  6EDA               	movwf	fsr2h,c
  5180  0012FA  0EFE               	movlw	254
  5181  0012FC  62DF               	cpfseq	indf2,c
  5182  0012FE  D010               	goto	i1l2657
  5183  001300                     i1l2655:
  5184                           
  5185                           ;my_uart.c: 381: {
  5186                           ;my_uart.c: 382: outer[i+2] = 0xfd;
  5187  001300  5008               	movf	uart_frame_message@i,w,c
  5188  001302  6E05               	movwf	??_uart_frame_message& (0+255),c
  5189  001304  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  5190  001306  0E02               	movlw	2
  5191  001308  2605               	addwf	??_uart_frame_message,f,c
  5192  00130A  0E00               	movlw	0
  5193  00130C  2206               	addwfc	??_uart_frame_message+1,f,c
  5194  00130E  5005               	movf	??_uart_frame_message,w,c
  5195  001310  2403               	addwf	uart_frame_message@outer,w,c
  5196  001312  6ED9               	movwf	fsr2l,c
  5197  001314  5006               	movf	??_uart_frame_message+1,w,c
  5198  001316  2004               	addwfc	uart_frame_message@outer+1,w,c
  5199  001318  6EDA               	movwf	fsr2h,c
  5200  00131A  0EFD               	movlw	253
  5201  00131C  6EDF               	movwf	indf2,c
  5202                           
  5203                           ;my_uart.c: 383: }
  5204  00131E  D017               	goto	i1l2659
  5205  001320                     i1l2657:
  5206                           
  5207                           ;my_uart.c: 384: else
  5208                           ;my_uart.c: 385: {
  5209                           ;my_uart.c: 386: outer[i+2] = inner[i];
  5210  001320  5008               	movf	uart_frame_message@i,w,c
  5211  001322  0D01               	mullw	1
  5212  001324  50F3               	movf	prodl,w,c
  5213  001326  2401               	addwf	uart_frame_message@inner,w,c
  5214  001328  6ED9               	movwf	fsr2l,c
  5215  00132A  50F4               	movf	prodh,w,c
  5216  00132C  2002               	addwfc	uart_frame_message@inner+1,w,c
  5217  00132E  6EDA               	movwf	fsr2h,c
  5218  001330  5008               	movf	uart_frame_message@i,w,c
  5219  001332  6E05               	movwf	??_uart_frame_message& (0+255),c
  5220  001334  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  5221  001336  0E02               	movlw	2
  5222  001338  2605               	addwf	??_uart_frame_message,f,c
  5223  00133A  0E00               	movlw	0
  5224  00133C  2206               	addwfc	??_uart_frame_message+1,f,c
  5225  00133E  5005               	movf	??_uart_frame_message,w,c
  5226  001340  2403               	addwf	uart_frame_message@outer,w,c
  5227  001342  6EE1               	movwf	fsr1l,c
  5228  001344  5006               	movf	??_uart_frame_message+1,w,c
  5229  001346  2004               	addwfc	uart_frame_message@outer+1,w,c
  5230  001348  6EE2               	movwf	fsr1h,c
  5231  00134A  CFDF FFE7          	movff	indf2,indf1
  5232  00134E                     i1l2659:
  5233                           
  5234                           ;my_uart.c: 387: }
  5235                           ;my_uart.c: 388: checksum ^= inner[i];
  5236  00134E  5008               	movf	uart_frame_message@i,w,c
  5237  001350  0D01               	mullw	1
  5238  001352  50F3               	movf	prodl,w,c
  5239  001354  2401               	addwf	uart_frame_message@inner,w,c
  5240  001356  6ED9               	movwf	fsr2l,c
  5241  001358  50F4               	movf	prodh,w,c
  5242  00135A  2002               	addwfc	uart_frame_message@inner+1,w,c
  5243  00135C  6EDA               	movwf	fsr2h,c
  5244  00135E  50DF               	movf	indf2,w,c
  5245  001360  1A07               	xorwf	uart_frame_message@checksum,f,c
  5246  001362  2A08               	incf	uart_frame_message@i,f,c
  5247  001364                     L4:
  5248  001364  0E0D               	movlw	13
  5249  001366  6408               	cpfsgt	uart_frame_message@i,c
  5250  001368  D7B4               	goto	i1l2651
  5251                           
  5252                           ;my_uart.c: 389: }
  5253                           ;my_uart.c: 390: outer[(14 + 2 + 2)-2] = checksum;
  5254  00136A  EE20 F010          	lfsr	2,16
  5255  00136E  5003               	movf	uart_frame_message@outer,w,c
  5256  001370  26D9               	addwf	fsr2l,f,c
  5257  001372  5004               	movf	uart_frame_message@outer+1,w,c
  5258  001374  22DA               	addwfc	fsr2h,f,c
  5259  001376  C007  FFDF         	movff	uart_frame_message@checksum,indf2
  5260  00137A  0012               	return	
  5261  00137C                     __end_of_uart_frame_message:
  5262                           	opt stack 0
  5263                           pclatu	equ	0xFFB
  5264                           pclath	equ	0xFFA
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           postinc0	equ	0xFEE
  5273                           fsr0h	equ	0xFEA
  5274                           fsr0l	equ	0xFE9
  5275                           wreg	equ	0xFE8
  5276                           indf1	equ	0xFE7
  5277                           fsr1h	equ	0xFE2
  5278                           fsr1l	equ	0xFE1
  5279                           bsr	equ	0xFE0
  5280                           indf2	equ	0xFDF
  5281                           postinc2	equ	0xFDE
  5282                           postdec2	equ	0xFDD
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287 ;; *************** function _FromMainLow_recvmsg *****************
  5288 ;; Defined at:
  5289 ;;		line 159 in file "../src/messages.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  maxlength       1    wreg     unsigned char 
  5292 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5293 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5294 ;;  data            2   26[COMRAM] PTR void 
  5295 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  maxlength       1   28[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      char 
  5300 ;; Registers used:
  5301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5311 ;;Total ram usage:        5 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    8
  5314 ;; This function calls:
  5315 ;;		i1_recv_msg
  5316 ;; This function is called by:
  5317 ;;		_uart_transmit_interrupt_handler
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text30
  5322  001D10                     __ptext30:
  5323                           	opt stack 0
  5324  001D10                     _FromMainLow_recvmsg:
  5325                           	opt stack 15
  5326                           
  5327                           ;incstack = 0
  5328                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5329  001D10  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5330                           
  5331                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5332  001D12  0104               	movlb	4	; () banked
  5333  001D14  0E04               	movlw	high _FromMainLow_MQ
  5334  001D16  6E0C               	movwf	i1recv_msg@qptr+1,c
  5335  001D18  0104               	movlb	4	; () banked
  5336  001D1A  0E00               	movlw	low _FromMainLow_MQ
  5337  001D1C  6E0B               	movwf	i1recv_msg@qptr,c
  5338  001D1E  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5339  001D22  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5340  001D26  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5341  001D2A  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5342  001D2E  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5343  001D32  ECBE  F009         	call	i1_recv_msg	;wreg free
  5344  001D36  0012               	return	
  5345  001D38                     __end_of_FromMainLow_recvmsg:
  5346                           	opt stack 0
  5347                           pclatu	equ	0xFFB
  5348                           pclath	equ	0xFFA
  5349                           tblptru	equ	0xFF8
  5350                           tblptrh	equ	0xFF7
  5351                           tblptrl	equ	0xFF6
  5352                           tablat	equ	0xFF5
  5353                           prodh	equ	0xFF4
  5354                           prodl	equ	0xFF3
  5355                           intcon	equ	0xFF2
  5356                           postinc0	equ	0xFEE
  5357                           fsr0h	equ	0xFEA
  5358                           fsr0l	equ	0xFE9
  5359                           wreg	equ	0xFE8
  5360                           indf1	equ	0xFE7
  5361                           fsr1h	equ	0xFE2
  5362                           fsr1l	equ	0xFE1
  5363                           bsr	equ	0xFE0
  5364                           indf2	equ	0xFDF
  5365                           postinc2	equ	0xFDE
  5366                           postdec2	equ	0xFDD
  5367                           fsr2h	equ	0xFDA
  5368                           fsr2l	equ	0xFD9
  5369                           status	equ	0xFD8
  5370                           
  5371 ;; *************** function i1_recv_msg *****************
  5372 ;; Defined at:
  5373 ;;		line 63 in file "../src/messages.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5376 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5377 ;;  maxlength       1   12[COMRAM] unsigned char 
  5378 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5379 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  5380 ;;  data            2   15[COMRAM] PTR void 
  5381 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5384 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5385 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5386 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5387 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      char 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5397 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5398 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5400 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;Total ram usage:       14 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    7
  5404 ;; This function calls:
  5405 ;;		i1_memcpy
  5406 ;; This function is called by:
  5407 ;;		_FromMainLow_recvmsg
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text31
  5412  00137C                     __ptext31:
  5413                           	opt stack 0
  5414  00137C                     i1_recv_msg:
  5415                           	opt stack 15
  5416                           
  5417                           ;messages.c: 64: unsigned char slot;
  5418                           ;messages.c: 68: msg *qmsg;
  5419                           ;messages.c: 69: size_t tlength;
  5420                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5421                           
  5422                           ;incstack = 0
  5423  00137C  EE20 F089          	lfsr	2,137
  5424  001380  500B               	movf	i1recv_msg@qptr,w,c
  5425  001382  26D9               	addwf	fsr2l,f,c
  5426  001384  500C               	movf	i1recv_msg@qptr+1,w,c
  5427  001386  22DA               	addwfc	fsr2h,f,c
  5428  001388  50DF               	movf	indf2,w,c
  5429  00138A  6E14               	movwf	i1recv_msg@slot,c
  5430                           
  5431                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5432  00138C  5014               	movf	i1recv_msg@slot,w,c
  5433  00138E  0D11               	mullw	17
  5434  001390  50F3               	movf	prodl,w,c
  5435  001392  240B               	addwf	i1recv_msg@qptr,w,c
  5436  001394  6E17               	movwf	i1recv_msg@qmsg,c
  5437  001396  50F4               	movf	prodh,w,c
  5438  001398  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5439  00139A  6E18               	movwf	i1recv_msg@qmsg+1,c
  5440                           
  5441                           ;messages.c: 74: if (qmsg->full == 1) {
  5442  00139C  0E01               	movlw	1
  5443  00139E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5444  0013A2  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5445  0013A6  62DF               	cpfseq	indf2,c
  5446  0013A8  D050               	goto	i1l2515
  5447                           
  5448                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5449  0013AA  EE20 F001          	lfsr	2,1
  5450  0013AE  5017               	movf	i1recv_msg@qmsg,w,c
  5451  0013B0  26D9               	addwf	fsr2l,f,c
  5452  0013B2  5018               	movf	i1recv_msg@qmsg+1,w,c
  5453  0013B4  22DA               	addwfc	fsr2h,f,c
  5454  0013B6  50DF               	movf	indf2,w,c
  5455  0013B8  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5456  0013BA  B0D8               	btfsc	status,0,c
  5457  0013BC  D002               	goto	i1l2499
  5458                           
  5459                           ;messages.c: 77: return (-3);
  5460  0013BE  0EFD               	movlw	253
  5461  0013C0  0012               	return	
  5462  0013C2                     i1l2499:
  5463                           
  5464                           ;messages.c: 78: }
  5465                           ;messages.c: 80: tlength = qmsg->length;
  5466  0013C2  EE20 F001          	lfsr	2,1
  5467  0013C6  5017               	movf	i1recv_msg@qmsg,w,c
  5468  0013C8  26D9               	addwf	fsr2l,f,c
  5469  0013CA  5018               	movf	i1recv_msg@qmsg+1,w,c
  5470  0013CC  22DA               	addwfc	fsr2h,f,c
  5471  0013CE  50DF               	movf	indf2,w,c
  5472  0013D0  6E12               	movwf	??i1_recv_msg& (0+255),c
  5473  0013D2  5012               	movf	??i1_recv_msg,w,c
  5474  0013D4  6E15               	movwf	i1recv_msg@tlength,c
  5475  0013D6  6A16               	clrf	i1recv_msg@tlength+1,c
  5476                           
  5477                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5478  0013D8  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5479  0013DC  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5480  0013E0  0E03               	movlw	3
  5481  0013E2  2417               	addwf	i1recv_msg@qmsg,w,c
  5482  0013E4  6E12               	movwf	??i1_recv_msg& (0+255),c
  5483  0013E6  0E00               	movlw	0
  5484  0013E8  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5485  0013EA  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5486  0013EC  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5487  0013F0  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5488  0013F4  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5489  0013F8  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5490  0013FC  EC2D  F00D         	call	i1_memcpy	;wreg free
  5491                           
  5492                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  5493  001400  EE20 F089          	lfsr	2,137
  5494  001404  500B               	movf	i1recv_msg@qptr,w,c
  5495  001406  26D9               	addwf	fsr2l,f,c
  5496  001408  500C               	movf	i1recv_msg@qptr+1,w,c
  5497  00140A  22DA               	addwfc	fsr2h,f,c
  5498  00140C  EE10 F089          	lfsr	1,137
  5499  001410  500B               	movf	i1recv_msg@qptr,w,c
  5500  001412  26E1               	addwf	fsr1l,f,c
  5501  001414  500C               	movf	i1recv_msg@qptr+1,w,c
  5502  001416  22E2               	addwfc	fsr1h,f,c
  5503  001418  50E7               	movf	indf1,w,c
  5504  00141A  6E12               	movwf	??i1_recv_msg& (0+255),c
  5505  00141C  2812               	incf	??i1_recv_msg,w,c
  5506  00141E  0B07               	andlw	7
  5507  001420  6EDF               	movwf	indf2,c
  5508                           
  5509                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5510  001422  EE20 F002          	lfsr	2,2
  5511  001426  5017               	movf	i1recv_msg@qmsg,w,c
  5512  001428  26D9               	addwf	fsr2l,f,c
  5513  00142A  5018               	movf	i1recv_msg@qmsg+1,w,c
  5514  00142C  22DA               	addwfc	fsr2h,f,c
  5515  00142E  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5516  001432  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5517  001436  CFDF FFE7          	movff	indf2,indf1
  5518                           
  5519                           ;messages.c: 91: qmsg->full = 0;
  5520  00143A  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5521  00143E  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5522  001442  0E00               	movlw	0
  5523  001444  6EDF               	movwf	indf2,c
  5524                           
  5525                           ;messages.c: 92: return (tlength);
  5526  001446  5015               	movf	i1recv_msg@tlength,w,c
  5527  001448  0012               	return	
  5528  00144A                     i1l2515:
  5529                           
  5530                           ;messages.c: 94: return (-4);
  5531  00144A  0EFC               	movlw	252
  5532  00144C  0012               	return	
  5533  00144E                     __end_ofi1_recv_msg:
  5534                           	opt stack 0
  5535                           pclatu	equ	0xFFB
  5536                           pclath	equ	0xFFA
  5537                           tblptru	equ	0xFF8
  5538                           tblptrh	equ	0xFF7
  5539                           tblptrl	equ	0xFF6
  5540                           tablat	equ	0xFF5
  5541                           prodh	equ	0xFF4
  5542                           prodl	equ	0xFF3
  5543                           intcon	equ	0xFF2
  5544                           postinc0	equ	0xFEE
  5545                           fsr0h	equ	0xFEA
  5546                           fsr0l	equ	0xFE9
  5547                           wreg	equ	0xFE8
  5548                           indf1	equ	0xFE7
  5549                           fsr1h	equ	0xFE2
  5550                           fsr1l	equ	0xFE1
  5551                           bsr	equ	0xFE0
  5552                           indf2	equ	0xFDF
  5553                           postinc2	equ	0xFDE
  5554                           postdec2	equ	0xFDD
  5555                           fsr2h	equ	0xFDA
  5556                           fsr2l	equ	0xFD9
  5557                           status	equ	0xFD8
  5558                           
  5559 ;; *************** function _uart_receive_interrupt_handler *****************
  5560 ;; Defined at:
  5561 ;;		line 54 in file "../src/my_uart.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  bad_start_id    1   49[COMRAM] unsigned char 
  5566 ;;  message_coun    1   51[COMRAM] unsigned char 
  5567 ;;  status          1   42[COMRAM] unsigned char 
  5568 ;;  bad_end_id      1   50[COMRAM] unsigned char 
  5569 ;;  msg_id          1   55[COMRAM] unsigned char 
  5570 ;;  status          1   43[COMRAM] unsigned char 
  5571 ;;  bad_checksum    3   44[COMRAM] unsigned char [3]
  5572 ;;  bad_counter_    2   47[COMRAM] unsigned char [2]
  5573 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5574 ;;  i               2   53[COMRAM] int 
  5575 ;;  checksum        1   52[COMRAM] unsigned char 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;		None               void
  5578 ;; Registers used:
  5579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5586 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5588 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;Total ram usage:       30 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    9
  5592 ;; This function calls:
  5593 ;;		_ToMainLow_sendmsg
  5594 ;; This function is called by:
  5595 ;;		_InterruptHandlerLow
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text32
  5600  000CE0                     __ptext32:
  5601                           	opt stack 0
  5602  000CE0                     _uart_receive_interrupt_handler:
  5603                           	opt stack 15
  5604                           
  5605                           ;my_uart.c: 57: static unsigned char frame[(14 + 2 + 2)];
  5606                           ;my_uart.c: 58: static unsigned char index = 0;
  5607                           ;my_uart.c: 59: static unsigned char done = 0;
  5608                           ;my_uart.c: 60: static unsigned char received_counter = 0;
  5609                           ;my_uart.c: 62: static unsigned char start_byte_bad = 0;
  5610                           ;my_uart.c: 63: static unsigned char error = 0;
  5611                           ;my_uart.c: 65: if(!done)
  5612                           
  5613                           ;incstack = 0
  5614  000CE0  664B               	tstfsz	uart_receive_interrupt_handler@done,c
  5615  000CE2  D03F               	goto	i1l2969
  5616                           
  5617                           ;my_uart.c: 66: {
  5618                           ;my_uart.c: 67: frame[index] = RCREG1;
  5619  000CE4  504D               	movf	uart_receive_interrupt_handler@index,w,c
  5620  000CE6  0D01               	mullw	1
  5621  000CE8  0100               	movlb	0	; () banked
  5622  000CEA  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5623  000CEC  24F3               	addwf	prodl,w,c
  5624  000CEE  6ED9               	movwf	fsr2l,c
  5625  000CF0  0100               	movlb	0	; () banked
  5626  000CF2  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5627  000CF4  20F4               	addwfc	prodh,w,c
  5628  000CF6  6EDA               	movwf	fsr2h,c
  5629  000CF8  CFAF FFDF          	movff	4015,indf2	;volatile
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;my_uart.c: 71: }
  5633                           ;my_uart.c: 72: if( index == 0 )
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;my_uart.c: 69: {
  5637  000CFC  664D               	tstfsz	uart_receive_interrupt_handler@index,c
  5638  000CFE  D019               	goto	i1l2955
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;my_uart.c: 73: {
  5642                           ;my_uart.c: 74: if( frame[0] != 0xff )
  5643  000D00  0100               	movlb	0	; () banked
  5644  000D02  299D               	incf	uart_receive_interrupt_handler@frame& (0+255),w,b
  5645  000D04  B4D8               	btfsc	status,2,c
  5646  000D06  D012               	goto	i1l2953
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;my_uart.c: 75: {
  5650                           ;my_uart.c: 76: if( !start_byte_bad )
  5651  000D08  664F               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5652  000D0A  D00D               	goto	i1l2947
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;my_uart.c: 77: {
  5656                           ;my_uart.c: 78: start_byte_bad = 1;
  5657  000D0C  0E01               	movlw	1
  5658  000D0E  6E4F               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;my_uart.c: 79: unsigned char bad_start_id = received_counter;
  5662  000D10  C04E  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;my_uart.c: 80: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5666  000D14  0E22               	movlw	34
  5667  000D16  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5668  000D18  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5669  000D1A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5670  000D1C  0E32               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5671  000D1E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5672  000D20  0E01               	movlw	1
  5673  000D22  ECAF  F00E         	call	_ToMainLow_sendmsg
  5674  000D26                     i1l2947:
  5675                           
  5676                           ;my_uart.c: 82: }
  5677                           ;my_uart.c: 83: index = 0;
  5678  000D26  0E00               	movlw	0
  5679  000D28  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5680  000D2A  0012               	return	
  5681  000D2C                     i1l2953:
  5682                           
  5683                           ;my_uart.c: 86: else
  5684                           ;my_uart.c: 87: {
  5685                           ;my_uart.c: 88: start_byte_bad = 0;
  5686  000D2C  0E00               	movlw	0
  5687  000D2E  6E4F               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5688  000D30  D017               	goto	i1l2967
  5689  000D32                     i1l2955:
  5690                           
  5691                           ;my_uart.c: 91: else if( index >= (14 + 2 + 2) - 1 )
  5692  000D32  0E10               	movlw	16
  5693  000D34  644D               	cpfsgt	uart_receive_interrupt_handler@index,c
  5694  000D36  D014               	goto	i1l2967
  5695                           
  5696                           ;my_uart.c: 92: {
  5697                           ;my_uart.c: 93: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5698  000D38  0100               	movlb	0	; () banked
  5699  000D3A  51AE               	movf	(uart_receive_interrupt_handler@frame+17)& (0+255),w,b
  5700  000D3C  0AFE               	xorlw	254
  5701  000D3E  B4D8               	btfsc	status,2,c
  5702  000D40  D00F               	goto	i1l2967
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;my_uart.c: 94: {
  5706                           ;my_uart.c: 96: index = 0;
  5707  000D42  0E00               	movlw	0
  5708  000D44  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;my_uart.c: 99: unsigned char bad_end_id = received_counter;
  5712  000D46  C04E  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;my_uart.c: 100: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5716  000D4A  0E23               	movlw	35
  5717  000D4C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5718  000D4E  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5719  000D50  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5720  000D52  0E33               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5721  000D54  6E18               	movwf	ToMainLow_sendmsg@data,c
  5722  000D56  0E01               	movlw	1
  5723  000D58  ECAF  F00E         	call	_ToMainLow_sendmsg
  5724                           
  5725                           ;my_uart.c: 101: error = 1;
  5726  000D5C  0E01               	movlw	1
  5727  000D5E  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5728  000D60                     i1l2967:
  5729                           
  5730                           ;my_uart.c: 102: }
  5731                           ;my_uart.c: 103: }
  5732                           ;my_uart.c: 104: index++;
  5733  000D60  2A4D               	incf	uart_receive_interrupt_handler@index,f,c
  5734  000D62                     i1l2969:
  5735                           
  5736                           ;my_uart.c: 105: }
  5737                           ;my_uart.c: 107: if( index >= (14 + 2 + 2) )
  5738  000D62  0E11               	movlw	17
  5739  000D64  644D               	cpfsgt	uart_receive_interrupt_handler@index,c
  5740  000D66  0012               	return	
  5741                           
  5742                           ;my_uart.c: 108: {
  5743                           ;my_uart.c: 109: index = 0;
  5744  000D68  0E00               	movlw	0
  5745  000D6A  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5746                           
  5747                           ;my_uart.c: 111: if( received_counter != frame[1] )
  5748  000D6C  0100               	movlb	0	; () banked
  5749  000D6E  519E               	movf	(uart_receive_interrupt_handler@frame+1)& (0+255),w,b
  5750  000D70  184E               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5751  000D72  B4D8               	btfsc	status,2,c
  5752  000D74  D011               	goto	i1l2981
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;my_uart.c: 112: {
  5756                           ;my_uart.c: 114: unsigned char bad_counter_id[2];
  5757                           ;my_uart.c: 115: bad_counter_id[0] = received_counter;
  5758  000D76  C04E  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5759                           
  5760                           ;my_uart.c: 116: bad_counter_id[1] = frame[1];
  5761  000D7A  C09E  F031         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;my_uart.c: 117: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5765  000D7E  0E21               	movlw	33
  5766  000D80  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5767  000D82  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5768  000D84  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5769  000D86  0E30               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5770  000D88  6E18               	movwf	ToMainLow_sendmsg@data,c
  5771  000D8A  0E02               	movlw	2
  5772  000D8C  ECAF  F00E         	call	_ToMainLow_sendmsg
  5773                           
  5774                           ;my_uart.c: 120: received_counter = frame[1];
  5775  000D90  C09E  F04E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@received_co
      +                          unter
  5776                           
  5777                           ;my_uart.c: 122: error = 1;
  5778  000D94  0E01               	movlw	1
  5779  000D96  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5780  000D98                     i1l2981:
  5781                           
  5782                           ;my_uart.c: 123: }
  5783                           ;my_uart.c: 126: unsigned char gooey_uart_center[14];
  5784                           ;my_uart.c: 127: unsigned char checksum = 0;
  5785  000D98  0E00               	movlw	0
  5786  000D9A  6E35               	movwf	uart_receive_interrupt_handler@checksum,c
  5787                           
  5788                           ;my_uart.c: 128: int i;
  5789                           ;my_uart.c: 129: for(i = 0; i < 14; i++)
  5790  000D9C  0E00               	movlw	0
  5791  000D9E  6E37               	movwf	uart_receive_interrupt_handler@i+1,c
  5792  000DA0  0E00               	movlw	0
  5793  000DA2  6E36               	movwf	uart_receive_interrupt_handler@i,c
  5794  000DA4  5037               	movf	uart_receive_interrupt_handler@i+1,w,c
  5795  000DA6  0A80               	xorlw	128
  5796  000DA8  0F80               	addlw	-128
  5797  000DAA  0E0E               	movlw	14
  5798  000DAC  B4D8               	btfsc	status,2,c
  5799  000DAE  5C36               	subwf	uart_receive_interrupt_handler@i,w,c
  5800  000DB0  B0D8               	btfsc	status,0,c
  5801  000DB2  D021               	goto	i1l2997
  5802                           
  5803                           ;my_uart.c: 130: {
  5804                           ;my_uart.c: 131: gooey_uart_center[i] = frame[i+2];
  5805  000DB4  0E02               	movlw	2
  5806  000DB6  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5807  000DB8  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5808  000DBA  0E00               	movlw	0
  5809  000DBC  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5810  000DBE  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5811  000DC0  0100               	movlb	0	; () banked
  5812  000DC2  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5813  000DC4  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5814  000DC6  6ED9               	movwf	fsr2l,c
  5815  000DC8  0100               	movlb	0	; () banked
  5816  000DCA  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5817  000DCC  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5818  000DCE  6EDA               	movwf	fsr2h,c
  5819  000DD0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5820  000DD2  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5821  000DD4  6EE1               	movwf	fsr1l,c
  5822  000DD6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5823  000DD8  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5824  000DDA  6EE2               	movwf	fsr1h,c
  5825  000DDC  CFDF FFE7          	movff	indf2,indf1
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;my_uart.c: 132: checksum ^= gooey_uart_center[i];
  5829  000DE0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5830  000DE2  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5831  000DE4  6ED9               	movwf	fsr2l,c
  5832  000DE6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5833  000DE8  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5834  000DEA  6EDA               	movwf	fsr2h,c
  5835  000DEC  50DF               	movf	indf2,w,c
  5836  000DEE  1A35               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5837                           
  5838                           ; BSR set to: 0
  5839  000DF0  4A36               	infsnz	uart_receive_interrupt_handler@i,f,c
  5840  000DF2  2A37               	incf	uart_receive_interrupt_handler@i+1,f,c
  5841  000DF4  D7D7               	goto	L5
  5842  000DF6                     i1l2997:
  5843                           
  5844                           ;my_uart.c: 133: }
  5845                           ;my_uart.c: 135: if( checksum != frame[(14 + 2 + 2) - 2] )
  5846  000DF6  0100               	movlb	0	; () banked
  5847  000DF8  51AD               	movf	(uart_receive_interrupt_handler@frame+16)& (0+255),w,b
  5848  000DFA  1835               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5849  000DFC  B4D8               	btfsc	status,2,c
  5850  000DFE  D011               	goto	i1l3005
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;my_uart.c: 136: {
  5854                           ;my_uart.c: 138: unsigned char bad_checksum_message[3];
  5855                           ;my_uart.c: 139: bad_checksum_message[0] = received_counter;
  5856  000E00  C04E  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_message
  5857                           
  5858                           ;my_uart.c: 140: bad_checksum_message[1] = frame[(14 + 2 + 2) - 2];
  5859  000E04  C0AD  F02E         	movff	uart_receive_interrupt_handler@frame+16,uart_receive_interrupt_handler@bad_checks
      +                          um_message+1
  5860                           
  5861                           ;my_uart.c: 141: bad_checksum_message[2] = checksum;
  5862  000E08  C035  F02F         	movff	uart_receive_interrupt_handler@checksum,uart_receive_interrupt_handler@bad_checks
      +                          um_message+2
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;my_uart.c: 142: ToMainLow_sendmsg(3,32,(void *)&bad_checksum_message);
  5866  000E0C  0E20               	movlw	32
  5867  000E0E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5868  000E10  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_message
  5869  000E12  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5870  000E14  0E2D               	movlw	low uart_receive_interrupt_handler@bad_checksum_message
  5871  000E16  6E18               	movwf	ToMainLow_sendmsg@data,c
  5872  000E18  0E03               	movlw	3
  5873  000E1A  ECAF  F00E         	call	_ToMainLow_sendmsg
  5874                           
  5875                           ;my_uart.c: 143: error = 1;
  5876  000E1E  0E01               	movlw	1
  5877  000E20  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5878  000E22                     i1l3005:
  5879                           
  5880                           ;my_uart.c: 144: }
  5881                           ;my_uart.c: 149: if( !error )
  5882  000E22  664C               	tstfsz	uart_receive_interrupt_handler@error,c
  5883  000E24  D02C               	goto	i1l3025
  5884                           
  5885                           ;my_uart.c: 150: {
  5886                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5887  000E26  C01D  F038         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5888                           
  5889                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5890  000E2A  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5891  000E2C  0A11               	xorlw	17
  5892  000E2E  B4D8               	btfsc	status,2,c
  5893  000E30  D01C               	goto	i1l422
  5894  000E32  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5895  000E34  0AF1               	xorlw	241
  5896  000E36  B4D8               	btfsc	status,2,c
  5897  000E38  D018               	goto	i1l422
  5898  000E3A  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5899  000E3C  0AF2               	xorlw	242
  5900  000E3E  B4D8               	btfsc	status,2,c
  5901  000E40  D014               	goto	i1l422
  5902  000E42  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5903  000E44  0AF3               	xorlw	243
  5904  000E46  B4D8               	btfsc	status,2,c
  5905  000E48  D010               	goto	i1l422
  5906  000E4A  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5907  000E4C  0AF4               	xorlw	244
  5908  000E4E  B4D8               	btfsc	status,2,c
  5909  000E50  D00C               	goto	i1l422
  5910                           
  5911                           ;my_uart.c: 155: {
  5912                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5913  000E52  C04E  F034         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5914                           
  5915                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5916  000E56  0E24               	movlw	36
  5917  000E58  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5918  000E5A  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5919  000E5C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5920  000E5E  0E34               	movlw	low uart_receive_interrupt_handler@message_count
  5921  000E60  6E18               	movwf	ToMainLow_sendmsg@data,c
  5922  000E62  0E01               	movlw	1
  5923  000E64  ECAF  F00E         	call	_ToMainLow_sendmsg
  5924  000E68  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5925  000E6A                     i1l422:
  5926                           
  5927                           ;my_uart.c: 158: }
  5928                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5929  000E6A  0E1F               	movlw	31
  5930  000E6C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5931  000E6E  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5932  000E70  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5933  000E72  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5934  000E74  6E18               	movwf	ToMainLow_sendmsg@data,c
  5935  000E76  0E0E               	movlw	14
  5936  000E78  ECAF  F00E         	call	_ToMainLow_sendmsg
  5937  000E7C  6E2C               	movwf	uart_receive_interrupt_handler@status_2231,c
  5938  000E7E                     i1l3025:
  5939                           
  5940                           ;my_uart.c: 171: }
  5941                           ;my_uart.c: 172: }
  5942                           ;my_uart.c: 174: received_counter++;
  5943  000E7E  2A4E               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5944                           
  5945                           ;my_uart.c: 175: error = 0;
  5946  000E80  0E00               	movlw	0
  5947  000E82  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5948  000E84  0012               	return	
  5949  000E86                     __end_of_uart_receive_interrupt_handler:
  5950                           	opt stack 0
  5951                           pclatu	equ	0xFFB
  5952                           pclath	equ	0xFFA
  5953                           tblptru	equ	0xFF8
  5954                           tblptrh	equ	0xFF7
  5955                           tblptrl	equ	0xFF6
  5956                           tablat	equ	0xFF5
  5957                           prodh	equ	0xFF4
  5958                           prodl	equ	0xFF3
  5959                           intcon	equ	0xFF2
  5960                           postinc0	equ	0xFEE
  5961                           fsr0h	equ	0xFEA
  5962                           fsr0l	equ	0xFE9
  5963                           wreg	equ	0xFE8
  5964                           indf1	equ	0xFE7
  5965                           fsr1h	equ	0xFE2
  5966                           fsr1l	equ	0xFE1
  5967                           bsr	equ	0xFE0
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function _timer1_int_handler *****************
  5976 ;; Defined at:
  5977 ;;		line 38 in file "../src/user_interrupts.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  result          2   26[COMRAM] unsigned int 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;		None               void
  5984 ;; Registers used:
  5985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;Total ram usage:        2 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    9
  5998 ;; This function calls:
  5999 ;;		_ReadTimer1
  6000 ;;		_ToMainLow_sendmsg
  6001 ;;		_WriteTimer1
  6002 ;; This function is called by:
  6003 ;;		_InterruptHandlerLow
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text33
  6008  001CE4                     __ptext33:
  6009                           	opt stack 0
  6010  001CE4                     _timer1_int_handler:
  6011                           	opt stack 15
  6012                           
  6013                           ;user_interrupts.c: 42: unsigned int result;
  6014                           ;user_interrupts.c: 49: result = ReadTimer1();
  6015                           
  6016                           ;incstack = 0
  6017  001CE4  ECF3  F00E         	call	_ReadTimer1	;wreg free
  6018  001CE8  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  6019  001CEC  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6020                           
  6021                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  6022  001CF0  0E0B               	movlw	11
  6023  001CF2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6024  001CF4  0E00               	movlw	0
  6025  001CF6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6026  001CF8  0E00               	movlw	0
  6027  001CFA  6E18               	movwf	ToMainLow_sendmsg@data,c
  6028  001CFC  0E00               	movlw	0
  6029  001CFE  ECAF  F00E         	call	_ToMainLow_sendmsg
  6030                           
  6031                           ;user_interrupts.c: 53: WriteTimer1(0);
  6032  001D02  0E00               	movlw	0
  6033  001D04  6E02               	movwf	WriteTimer1@timer1+1,c
  6034  001D06  0E00               	movlw	0
  6035  001D08  6E01               	movwf	WriteTimer1@timer1,c
  6036  001D0A  ECEA  F00E         	call	_WriteTimer1	;wreg free
  6037  001D0E  0012               	return	
  6038  001D10                     __end_of_timer1_int_handler:
  6039                           	opt stack 0
  6040                           pclatu	equ	0xFFB
  6041                           pclath	equ	0xFFA
  6042                           tblptru	equ	0xFF8
  6043                           tblptrh	equ	0xFF7
  6044                           tblptrl	equ	0xFF6
  6045                           tablat	equ	0xFF5
  6046                           prodh	equ	0xFF4
  6047                           prodl	equ	0xFF3
  6048                           intcon	equ	0xFF2
  6049                           postinc0	equ	0xFEE
  6050                           fsr0h	equ	0xFEA
  6051                           fsr0l	equ	0xFE9
  6052                           wreg	equ	0xFE8
  6053                           indf1	equ	0xFE7
  6054                           fsr1h	equ	0xFE2
  6055                           fsr1l	equ	0xFE1
  6056                           bsr	equ	0xFE0
  6057                           indf2	equ	0xFDF
  6058                           postinc2	equ	0xFDE
  6059                           postdec2	equ	0xFDD
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function _WriteTimer1 *****************
  6065 ;; Defined at:
  6066 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  timer1          2    0[COMRAM] unsigned int 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  timer           2    2[COMRAM] struct Timers
  6071 ;; Return value:  Size  Location     Type
  6072 ;;		None               void
  6073 ;; Registers used:
  6074 ;;		None
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;Total ram usage:        4 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    6
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_timer1_int_handler
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text34
  6095  001DD4                     __ptext34:
  6096                           	opt stack 0
  6097  001DD4                     _WriteTimer1:
  6098                           	opt stack 17
  6099                           
  6100                           ;incstack = 0
  6101  001DD4  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6102  001DD8  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6103  001DDC  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6104  001DE0  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6105  001DE4  0012               	return	
  6106  001DE6                     __end_of_WriteTimer1:
  6107                           	opt stack 0
  6108                           pclatu	equ	0xFFB
  6109                           pclath	equ	0xFFA
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodh	equ	0xFF4
  6115                           prodl	equ	0xFF3
  6116                           intcon	equ	0xFF2
  6117                           postinc0	equ	0xFEE
  6118                           fsr0h	equ	0xFEA
  6119                           fsr0l	equ	0xFE9
  6120                           wreg	equ	0xFE8
  6121                           indf1	equ	0xFE7
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           bsr	equ	0xFE0
  6125                           indf2	equ	0xFDF
  6126                           postinc2	equ	0xFDE
  6127                           postdec2	equ	0xFDD
  6128                           fsr2h	equ	0xFDA
  6129                           fsr2l	equ	0xFD9
  6130                           status	equ	0xFD8
  6131                           
  6132 ;; *************** function _ToMainLow_sendmsg *****************
  6133 ;; Defined at:
  6134 ;;		line 103 in file "../src/messages.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  length          1    wreg     unsigned char 
  6137 ;;  msgtype         1   22[COMRAM] unsigned char 
  6138 ;;  data            2   23[COMRAM] PTR void 
  6139 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_message(3)
      +, uart_receive_interrupt_handler@gooey_uart_center(14), 
  6140 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  length          1   25[COMRAM] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      char 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6152 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;Total ram usage:        4 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    8
  6159 ;; This function calls:
  6160 ;;		i1_send_msg
  6161 ;; This function is called by:
  6162 ;;		_uart_receive_interrupt_handler
  6163 ;;		_timer1_int_handler
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text35
  6168  001D5E                     __ptext35:
  6169                           	opt stack 0
  6170  001D5E                     _ToMainLow_sendmsg:
  6171                           	opt stack 15
  6172                           
  6173                           ;incstack = 0
  6174                           ;ToMainLow_sendmsg@length stored from wreg
  6175  001D5E  6E1A               	movwf	ToMainLow_sendmsg@length,c
  6176                           
  6177                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6178  001D60  0102               	movlb	2	; () banked
  6179  001D62  0E02               	movlw	high _ToMainLow_MQ
  6180  001D64  6E0C               	movwf	i1send_msg@qptr+1,c
  6181  001D66  0102               	movlb	2	; () banked
  6182  001D68  0E00               	movlw	low _ToMainLow_MQ
  6183  001D6A  6E0B               	movwf	i1send_msg@qptr,c
  6184  001D6C  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6185  001D70  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6186  001D74  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6187  001D78  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6188  001D7C  EC8C  F00A         	call	i1_send_msg	;wreg free
  6189  001D80  0012               	return	
  6190  001D82                     __end_of_ToMainLow_sendmsg:
  6191                           	opt stack 0
  6192                           pclatu	equ	0xFFB
  6193                           pclath	equ	0xFFA
  6194                           tblptru	equ	0xFF8
  6195                           tblptrh	equ	0xFF7
  6196                           tblptrl	equ	0xFF6
  6197                           tablat	equ	0xFF5
  6198                           prodh	equ	0xFF4
  6199                           prodl	equ	0xFF3
  6200                           intcon	equ	0xFF2
  6201                           postinc0	equ	0xFEE
  6202                           fsr0h	equ	0xFEA
  6203                           fsr0l	equ	0xFE9
  6204                           wreg	equ	0xFE8
  6205                           indf1	equ	0xFE7
  6206                           fsr1h	equ	0xFE2
  6207                           fsr1l	equ	0xFE1
  6208                           bsr	equ	0xFE0
  6209                           indf2	equ	0xFDF
  6210                           postinc2	equ	0xFDE
  6211                           postdec2	equ	0xFDD
  6212                           fsr2h	equ	0xFDA
  6213                           fsr2l	equ	0xFD9
  6214                           status	equ	0xFD8
  6215                           
  6216 ;; *************** function i1_send_msg *****************
  6217 ;; Defined at:
  6218 ;;		line 24 in file "../src/messages.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6221 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  6222 ;;  length          1   12[COMRAM] unsigned char 
  6223 ;;  msgtype         1   13[COMRAM] unsigned char 
  6224 ;;  data            2   14[COMRAM] PTR void 
  6225 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  6226 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6227 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  6228 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6231 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6232 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  6233 ;;  send_msg        2   17[COMRAM] unsigned int 
  6234 ;;  send_msg        1   19[COMRAM] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  1    wreg      char 
  6237 ;; Registers used:
  6238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6244 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6245 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6247 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6248 ;;Total ram usage:       12 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    7
  6251 ;; This function calls:
  6252 ;;		i1_memcpy
  6253 ;; This function is called by:
  6254 ;;		_ToMainLow_sendmsg
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text36
  6259  001518                     __ptext36:
  6260                           	opt stack 0
  6261  001518                     i1_send_msg:
  6262                           	opt stack 15
  6263                           
  6264                           ;messages.c: 25: unsigned char slot;
  6265                           ;messages.c: 27: msg *qmsg;
  6266                           ;messages.c: 28: size_t tlength = length;
  6267                           
  6268                           ;incstack = 0
  6269  001518  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6270  00151C  6A13               	clrf	i1send_msg@tlength+1,c
  6271                           
  6272                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6273  00151E  EE20 F088          	lfsr	2,136
  6274  001522  500B               	movf	i1send_msg@qptr,w,c
  6275  001524  26D9               	addwf	fsr2l,f,c
  6276  001526  500C               	movf	i1send_msg@qptr+1,w,c
  6277  001528  22DA               	addwfc	fsr2h,f,c
  6278  00152A  50DF               	movf	indf2,w,c
  6279  00152C  6E14               	movwf	i1send_msg@slot,c
  6280                           
  6281                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6282  00152E  5014               	movf	i1send_msg@slot,w,c
  6283  001530  0D11               	mullw	17
  6284  001532  50F3               	movf	prodl,w,c
  6285  001534  240B               	addwf	i1send_msg@qptr,w,c
  6286  001536  6E15               	movwf	i1send_msg@qmsg,c
  6287  001538  50F4               	movf	prodh,w,c
  6288  00153A  200C               	addwfc	i1send_msg@qptr+1,w,c
  6289  00153C  6E16               	movwf	i1send_msg@qmsg+1,c
  6290                           
  6291                           ;messages.c: 41: if (qmsg->full != 0) {
  6292  00153E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6293  001542  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6294  001546  50DF               	movf	indf2,w,c
  6295  001548  B4D8               	btfsc	status,2,c
  6296  00154A  D002               	goto	i1l2451
  6297                           
  6298                           ;messages.c: 42: return (-1);
  6299  00154C  0EFF               	movlw	255
  6300  00154E  0012               	return	
  6301  001550                     i1l2451:
  6302                           
  6303                           ;messages.c: 43: }
  6304                           ;messages.c: 46: qmsg->length = length;
  6305  001550  EE20 F001          	lfsr	2,1
  6306  001554  5015               	movf	i1send_msg@qmsg,w,c
  6307  001556  26D9               	addwf	fsr2l,f,c
  6308  001558  5016               	movf	i1send_msg@qmsg+1,w,c
  6309  00155A  22DA               	addwfc	fsr2h,f,c
  6310  00155C  C00D  FFDF         	movff	i1send_msg@length,indf2
  6311                           
  6312                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6313  001560  EE20 F002          	lfsr	2,2
  6314  001564  5015               	movf	i1send_msg@qmsg,w,c
  6315  001566  26D9               	addwf	fsr2l,f,c
  6316  001568  5016               	movf	i1send_msg@qmsg+1,w,c
  6317  00156A  22DA               	addwfc	fsr2h,f,c
  6318  00156C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6319                           
  6320                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6321  001570  0E03               	movlw	3
  6322  001572  2415               	addwf	i1send_msg@qmsg,w,c
  6323  001574  6E01               	movwf	i1memcpy@d1,c
  6324  001576  0E00               	movlw	0
  6325  001578  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6326  00157A  6E02               	movwf	i1memcpy@d1+1,c
  6327  00157C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6328  001580  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6329  001584  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6330  001588  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6331  00158C  EC2D  F00D         	call	i1_memcpy	;wreg free
  6332                           
  6333                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  6334  001590  EE20 F088          	lfsr	2,136
  6335  001594  500B               	movf	i1send_msg@qptr,w,c
  6336  001596  26D9               	addwf	fsr2l,f,c
  6337  001598  500C               	movf	i1send_msg@qptr+1,w,c
  6338  00159A  22DA               	addwfc	fsr2h,f,c
  6339  00159C  EE10 F088          	lfsr	1,136
  6340  0015A0  500B               	movf	i1send_msg@qptr,w,c
  6341  0015A2  26E1               	addwf	fsr1l,f,c
  6342  0015A4  500C               	movf	i1send_msg@qptr+1,w,c
  6343  0015A6  22E2               	addwfc	fsr1h,f,c
  6344  0015A8  50E7               	movf	indf1,w,c
  6345  0015AA  6E11               	movwf	??i1_send_msg& (0+255),c
  6346  0015AC  2811               	incf	??i1_send_msg,w,c
  6347  0015AE  0B07               	andlw	7
  6348  0015B0  6EDF               	movwf	indf2,c
  6349                           
  6350                           ;messages.c: 59: qmsg->full = 1;
  6351  0015B2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6352  0015B6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6353  0015BA  0E01               	movlw	1
  6354  0015BC  6EDF               	movwf	indf2,c
  6355                           
  6356                           ;messages.c: 60: return (1);
  6357  0015BE  0E01               	movlw	1
  6358  0015C0  0012               	return	
  6359  0015C2                     __end_ofi1_send_msg:
  6360                           	opt stack 0
  6361                           pclatu	equ	0xFFB
  6362                           pclath	equ	0xFFA
  6363                           tblptru	equ	0xFF8
  6364                           tblptrh	equ	0xFF7
  6365                           tblptrl	equ	0xFF6
  6366                           tablat	equ	0xFF5
  6367                           prodh	equ	0xFF4
  6368                           prodl	equ	0xFF3
  6369                           intcon	equ	0xFF2
  6370                           postinc0	equ	0xFEE
  6371                           fsr0h	equ	0xFEA
  6372                           fsr0l	equ	0xFE9
  6373                           wreg	equ	0xFE8
  6374                           indf1	equ	0xFE7
  6375                           fsr1h	equ	0xFE2
  6376                           fsr1l	equ	0xFE1
  6377                           bsr	equ	0xFE0
  6378                           indf2	equ	0xFDF
  6379                           postinc2	equ	0xFDE
  6380                           postdec2	equ	0xFDD
  6381                           fsr2h	equ	0xFDA
  6382                           fsr2l	equ	0xFD9
  6383                           status	equ	0xFD8
  6384                           
  6385 ;; *************** function i1_memcpy *****************
  6386 ;; Defined at:
  6387 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  d1              2    0[COMRAM] PTR void 
  6390 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6391 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  6392 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  6393 ;;  s1              2    2[COMRAM] PTR const void 
  6394 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6395 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6396 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  6397 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6398 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  6399 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  6400 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6401 ;;  n               2    4[COMRAM] unsigned int 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6404 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6405 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6406 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  6407 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6408 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  6409 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  6410 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6411 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6412 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6413 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  6414 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  2    0[COMRAM] PTR void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6424 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;Total ram usage:       10 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    6
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		i1_send_msg
  6435 ;;		i1_recv_msg
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text37
  6440  001A5A                     __ptext37:
  6441                           	opt stack 0
  6442  001A5A                     i1_memcpy:
  6443                           	opt stack 15
  6444                           
  6445                           ;incstack = 0
  6446  001A5A  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6447  001A5E  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6448  001A62  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6449  001A66  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6450  001A6A  D00E               	goto	i1l2425
  6451  001A6C                     i1l2419:
  6452  001A6C  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6453  001A70  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6454  001A74  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6455  001A78  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6456  001A7C  CFDF FFE7          	movff	indf2,indf1
  6457  001A80  4A09               	infsnz	i1memcpy@s,f,c
  6458  001A82  2A0A               	incf	i1memcpy@s+1,f,c
  6459  001A84  4A07               	infsnz	i1memcpy@d,f,c
  6460  001A86  2A08               	incf	i1memcpy@d+1,f,c
  6461  001A88                     i1l2425:
  6462  001A88  0605               	decf	i1memcpy@n,f,c
  6463  001A8A  A0D8               	btfss	status,0,c
  6464  001A8C  0606               	decf	i1memcpy@n+1,f,c
  6465  001A8E  2805               	incf	i1memcpy@n& (0+255),w,c
  6466  001A90  B4D8               	btfsc	status,2,c
  6467  001A92  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6468  001A94  B4D8               	btfsc	status,2,c
  6469                           
  6470                           ;	Return value of i1_memcpy is never used
  6471  001A96  0012               	return	
  6472  001A98  D7E9               	goto	i1l2419
  6473  001A9A                     __end_ofi1_memcpy:
  6474                           	opt stack 0
  6475                           pclatu	equ	0xFFB
  6476                           pclath	equ	0xFFA
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           postinc0	equ	0xFEE
  6485                           fsr0h	equ	0xFEA
  6486                           fsr0l	equ	0xFE9
  6487                           wreg	equ	0xFE8
  6488                           indf1	equ	0xFE7
  6489                           fsr1h	equ	0xFE2
  6490                           fsr1l	equ	0xFE1
  6491                           bsr	equ	0xFE0
  6492                           indf2	equ	0xFDF
  6493                           postinc2	equ	0xFDE
  6494                           postdec2	equ	0xFDD
  6495                           fsr2h	equ	0xFDA
  6496                           fsr2l	equ	0xFD9
  6497                           status	equ	0xFD8
  6498                           
  6499 ;; *************** function _ReadTimer1 *****************
  6500 ;; Defined at:
  6501 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  timer           2    2[COMRAM] struct Timers
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  2    0[COMRAM] unsigned int 
  6508 ;; Registers used:
  6509 ;;		None
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6519 ;;Total ram usage:        4 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    6
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_timer1_int_handler
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text38
  6530  001DE6                     __ptext38:
  6531                           	opt stack 0
  6532  001DE6                     _ReadTimer1:
  6533                           	opt stack 17
  6534                           
  6535                           ;incstack = 0
  6536  001DE6  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6537  001DEA  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6538  001DEE  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6539  001DF2  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6540  001DF6  0012               	return	
  6541  001DF8                     __end_of_ReadTimer1:
  6542                           	opt stack 0
  6543                           pclatu	equ	0xFFB
  6544                           pclath	equ	0xFFA
  6545                           tblptru	equ	0xFF8
  6546                           tblptrh	equ	0xFF7
  6547                           tblptrl	equ	0xFF6
  6548                           tablat	equ	0xFF5
  6549                           prodh	equ	0xFF4
  6550                           prodl	equ	0xFF3
  6551                           intcon	equ	0xFF2
  6552                           postinc0	equ	0xFEE
  6553                           fsr0h	equ	0xFEA
  6554                           fsr0l	equ	0xFE9
  6555                           wreg	equ	0xFE8
  6556                           indf1	equ	0xFE7
  6557                           fsr1h	equ	0xFE2
  6558                           fsr1l	equ	0xFE1
  6559                           bsr	equ	0xFE0
  6560                           indf2	equ	0xFDF
  6561                           postinc2	equ	0xFDE
  6562                           postdec2	equ	0xFDD
  6563                           fsr2h	equ	0xFDA
  6564                           fsr2l	equ	0xFD9
  6565                           status	equ	0xFD8
  6566                           
  6567 ;; *************** function _InterruptHandlerHigh *****************
  6568 ;; Defined at:
  6569 ;;		line 86 in file "../src/interrupts.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;		None               void
  6576 ;; Registers used:
  6577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6586 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6587 ;;Total ram usage:       14 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    5
  6590 ;; This function calls:
  6591 ;;		_SleepIfOkay
  6592 ;;		_i2c_int_handler
  6593 ;;		_timer0_int_handler
  6594 ;; This function is called by:
  6595 ;;		Interrupt level 2
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	intcode
  6600  000008                     __pintcode:
  6601                           	opt stack 0
  6602  000008                     _InterruptHandlerHigh:
  6603                           	opt stack 15
  6604                           
  6605                           ;incstack = 0
  6606  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh
  6607  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+1
  6608  000010  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+2
  6609  000014  EF74  F00B         	goto	int_func
  6610                           pclatu	equ	0xFFB
  6611                           pclath	equ	0xFFA
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           prodh	equ	0xFF4
  6617                           prodl	equ	0xFF3
  6618                           intcon	equ	0xFF2
  6619                           postinc0	equ	0xFEE
  6620                           fsr0h	equ	0xFEA
  6621                           fsr0l	equ	0xFE9
  6622                           wreg	equ	0xFE8
  6623                           indf1	equ	0xFE7
  6624                           fsr1h	equ	0xFE2
  6625                           fsr1l	equ	0xFE1
  6626                           bsr	equ	0xFE0
  6627                           indf2	equ	0xFDF
  6628                           postinc2	equ	0xFDE
  6629                           postdec2	equ	0xFDD
  6630                           fsr2h	equ	0xFDA
  6631                           fsr2l	equ	0xFD9
  6632                           status	equ	0xFD8
  6633                           
  6634                           	psect	intcode_body
  6635  0016E8                     __pintcode_body:
  6636                           	opt stack 15
  6637  0016E8                     int_func:
  6638                           	opt stack 15
  6639  0016E8  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+3
  6640  0016EC  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+4
  6641  0016F0  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+5
  6642  0016F4  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+6
  6643  0016F8  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+7
  6644  0016FC  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+8
  6645  001700  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+9
  6646  001704  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+10
  6647  001708  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+11
  6648  00170C  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+12
  6649  001710  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+13
  6650                           
  6651                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6652  001714  A69E               	btfss	3998,3,c	;volatile
  6653  001716  D003               	goto	i2l3255
  6654                           
  6655                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6656  001718  969E               	bcf	3998,3,c	;volatile
  6657                           
  6658                           ;interrupts.c: 98: i2c_int_handler();
  6659  00171A  EC62  F000         	call	_i2c_int_handler	;wreg free
  6660  00171E                     i2l3255:
  6661                           
  6662                           ;interrupts.c: 99: }
  6663                           ;interrupts.c: 102: if (INTCONbits.TMR0IF) {
  6664  00171E  A4F2               	btfss	intcon,2,c	;volatile
  6665  001720  D003               	goto	i2l3261
  6666                           
  6667                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6668  001722  94F2               	bcf	intcon,2,c	;volatile
  6669                           
  6670                           ;interrupts.c: 108: timer0_int_handler();
  6671  001724  ECB3  F00B         	call	_timer0_int_handler	;wreg free
  6672  001728                     i2l3261:
  6673                           
  6674                           ;interrupts.c: 109: }
  6675                           ;interrupts.c: 118: SleepIfOkay();
  6676  001728  EC81  F00C         	call	_SleepIfOkay	;wreg free
  6677  00172C  C09C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6678  001730  C09B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6679  001734  C09A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6680  001738  C099  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6681  00173C  C098  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6682  001740  C097  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6683  001744  C096  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6684  001748  C095  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6685  00174C  C094  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6686  001750  C093  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6687  001754  C092  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6688  001758  C091  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6689  00175C  C090  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6690  001760  C08F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6691  001764  0011               	retfie		f
  6692  001766                     __end_of_InterruptHandlerHigh:
  6693                           	opt stack 0
  6694                           pclatu	equ	0xFFB
  6695                           pclath	equ	0xFFA
  6696                           tblptru	equ	0xFF8
  6697                           tblptrh	equ	0xFF7
  6698                           tblptrl	equ	0xFF6
  6699                           tablat	equ	0xFF5
  6700                           prodh	equ	0xFF4
  6701                           prodl	equ	0xFF3
  6702                           intcon	equ	0xFF2
  6703                           postinc0	equ	0xFEE
  6704                           fsr0h	equ	0xFEA
  6705                           fsr0l	equ	0xFE9
  6706                           wreg	equ	0xFE8
  6707                           indf1	equ	0xFE7
  6708                           fsr1h	equ	0xFE2
  6709                           fsr1l	equ	0xFE1
  6710                           bsr	equ	0xFE0
  6711                           indf2	equ	0xFDF
  6712                           postinc2	equ	0xFDE
  6713                           postdec2	equ	0xFDD
  6714                           fsr2h	equ	0xFDA
  6715                           fsr2l	equ	0xFD9
  6716                           status	equ	0xFD8
  6717                           
  6718 ;; *************** function _timer0_int_handler *****************
  6719 ;; Defined at:
  6720 ;;		line 16 in file "../src/user_interrupts.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;		None
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  val             2   33[BANK0 ] unsigned int 
  6725 ;;  msgtype         2   31[BANK0 ] int 
  6726 ;;  length          2   29[BANK0 ] int 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;		None               void
  6729 ;; Registers used:
  6730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6737 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6739 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;Total ram usage:        6 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    3
  6743 ;; This function calls:
  6744 ;;		_FromMainHigh_recvmsg
  6745 ;;		_ToMainHigh_sendmsg
  6746 ;;		_WriteTimer0
  6747 ;; This function is called by:
  6748 ;;		_InterruptHandlerHigh
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text40
  6753  001766                     __ptext40:
  6754                           	opt stack 0
  6755  001766                     _timer0_int_handler:
  6756                           	opt stack 16
  6757                           
  6758                           ;user_interrupts.c: 20: unsigned int val;
  6759                           ;user_interrupts.c: 21: int length, msgtype;
  6760                           ;user_interrupts.c: 25: WriteTimer0(0);
  6761                           
  6762                           ;incstack = 0
  6763  001766  0E00               	movlw	0
  6764  001768  0100               	movlb	0	; () banked
  6765  00176A  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6766  00176C  0E00               	movlw	0
  6767  00176E  0100               	movlb	0	; () banked
  6768  001770  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6769  001772  ECFC  F00E         	call	_WriteTimer0	;wreg free
  6770                           
  6771                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6772  001776  0100               	movlb	0	; () banked
  6773  001778  0E00               	movlw	high timer0_int_handler@msgtype
  6774  00177A  0100               	movlb	0	; () banked
  6775  00177C  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6776  00177E  0100               	movlb	0	; () banked
  6777  001780  0E7F               	movlw	low timer0_int_handler@msgtype
  6778  001782  0100               	movlb	0	; () banked
  6779  001784  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6780  001786  0100               	movlb	0	; () banked
  6781  001788  0E00               	movlw	high timer0_int_handler@val
  6782  00178A  0100               	movlb	0	; () banked
  6783  00178C  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6784  00178E  0100               	movlb	0	; () banked
  6785  001790  0E81               	movlw	low timer0_int_handler@val
  6786  001792  0100               	movlb	0	; () banked
  6787  001794  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6788  001796  0E02               	movlw	2
  6789  001798  ECF9  F00D         	call	_FromMainHigh_recvmsg
  6790  00179C  0100               	movlb	0	; () banked
  6791  00179E  6F7D               	movwf	timer0_int_handler@length& (0+255),b
  6792  0017A0  0100               	movlb	0	; () banked
  6793  0017A2  6B7E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6794  0017A4  0100               	movlb	0	; () banked
  6795  0017A6  BF7D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6796  0017A8  077E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6800  0017AA  0100               	movlb	0	; () banked
  6801  0017AC  517D               	movf	timer0_int_handler@length& (0+255),w,b
  6802  0017AE  0A02               	xorlw	2
  6803  0017B0  117E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6804  0017B2  A4D8               	btfss	status,2,c
  6805  0017B4  0012               	return	
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6809  0017B6  0E0A               	movlw	10
  6810  0017B8  0100               	movlb	0	; () banked
  6811  0017BA  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6812  0017BC  0100               	movlb	0	; () banked
  6813  0017BE  0E00               	movlw	high timer0_int_handler@val
  6814  0017C0  0100               	movlb	0	; () banked
  6815  0017C2  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6816  0017C4  0100               	movlb	0	; () banked
  6817  0017C6  0E81               	movlw	low timer0_int_handler@val
  6818  0017C8  0100               	movlb	0	; () banked
  6819  0017CA  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6820  0017CC  0E02               	movlw	2
  6821  0017CE  EC5B  F00E         	call	_ToMainHigh_sendmsg
  6822  0017D2  0012               	return	
  6823  0017D4                     __end_of_timer0_int_handler:
  6824                           	opt stack 0
  6825                           pclatu	equ	0xFFB
  6826                           pclath	equ	0xFFA
  6827                           tblptru	equ	0xFF8
  6828                           tblptrh	equ	0xFF7
  6829                           tblptrl	equ	0xFF6
  6830                           tablat	equ	0xFF5
  6831                           prodh	equ	0xFF4
  6832                           prodl	equ	0xFF3
  6833                           intcon	equ	0xFF2
  6834                           postinc0	equ	0xFEE
  6835                           fsr0h	equ	0xFEA
  6836                           fsr0l	equ	0xFE9
  6837                           wreg	equ	0xFE8
  6838                           indf1	equ	0xFE7
  6839                           fsr1h	equ	0xFE2
  6840                           fsr1l	equ	0xFE1
  6841                           bsr	equ	0xFE0
  6842                           indf2	equ	0xFDF
  6843                           postinc2	equ	0xFDE
  6844                           postdec2	equ	0xFDD
  6845                           fsr2h	equ	0xFDA
  6846                           fsr2l	equ	0xFD9
  6847                           status	equ	0xFD8
  6848                           
  6849 ;; *************** function _WriteTimer0 *****************
  6850 ;; Defined at:
  6851 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  timer0          2    0[BANK0 ] unsigned int 
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;  timer           2    2[BANK0 ] struct Timers
  6856 ;; Return value:  Size  Location     Type
  6857 ;;		None               void
  6858 ;; Registers used:
  6859 ;;		None
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6866 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6868 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6869 ;;Total ram usage:        4 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_timer0_int_handler
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text41
  6879  001DF8                     __ptext41:
  6880                           	opt stack 0
  6881  001DF8                     _WriteTimer0:
  6882                           	opt stack 18
  6883                           
  6884                           ;incstack = 0
  6885  001DF8  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6886  001DFC  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6887  001E00  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6888  001E04  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6889  001E08  0012               	return	
  6890  001E0A                     __end_of_WriteTimer0:
  6891                           	opt stack 0
  6892                           pclatu	equ	0xFFB
  6893                           pclath	equ	0xFFA
  6894                           tblptru	equ	0xFF8
  6895                           tblptrh	equ	0xFF7
  6896                           tblptrl	equ	0xFF6
  6897                           tablat	equ	0xFF5
  6898                           prodh	equ	0xFF4
  6899                           prodl	equ	0xFF3
  6900                           intcon	equ	0xFF2
  6901                           postinc0	equ	0xFEE
  6902                           fsr0h	equ	0xFEA
  6903                           fsr0l	equ	0xFE9
  6904                           wreg	equ	0xFE8
  6905                           indf1	equ	0xFE7
  6906                           fsr1h	equ	0xFE2
  6907                           fsr1l	equ	0xFE1
  6908                           bsr	equ	0xFE0
  6909                           indf2	equ	0xFDF
  6910                           postinc2	equ	0xFDE
  6911                           postdec2	equ	0xFDD
  6912                           fsr2h	equ	0xFDA
  6913                           fsr2l	equ	0xFD9
  6914                           status	equ	0xFD8
  6915                           
  6916 ;; *************** function _i2c_int_handler *****************
  6917 ;; Defined at:
  6918 ;;		line 103 in file "../src/my_i2c.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;		None
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;  l               2    0        int 
  6923 ;;  error_buf       3   38[BANK0 ] unsigned char [3]
  6924 ;;  data_read       1   46[BANK0 ] unsigned char 
  6925 ;;  msg_ready       1   45[BANK0 ] unsigned char 
  6926 ;;  msg_to_send     1   44[BANK0 ] unsigned char 
  6927 ;;  i2c_data        1   43[BANK0 ] unsigned char 
  6928 ;;  overrun_erro    1   42[BANK0 ] unsigned char 
  6929 ;;  data_written    1   41[BANK0 ] unsigned char 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;		None               void
  6932 ;; Registers used:
  6933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;Total ram usage:       10 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    4
  6946 ;; This function calls:
  6947 ;;		_ToMainHigh_sendmsg
  6948 ;;		_blip4
  6949 ;;		_handle_start
  6950 ;;		_retrieve_sensor_values
  6951 ;;		i2_blip
  6952 ;;		i2_blip1
  6953 ;;		i2_blip2
  6954 ;;		i2_blip3
  6955 ;; This function is called by:
  6956 ;;		_InterruptHandlerHigh
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text42
  6961  0000C4                     __ptext42:
  6962                           	opt stack 0
  6963  0000C4                     _i2c_int_handler:
  6964                           	opt stack 15
  6965                           
  6966                           ;my_i2c.c: 104: blip1();
  6967                           
  6968                           ;incstack = 0
  6969  0000C4  EC35  F00F         	call	i2_blip1	;wreg free
  6970                           
  6971                           ;my_i2c.c: 106: static unsigned char sensor_bank_side[14];
  6972                           ;my_i2c.c: 107: static unsigned char sensor_bank_front[14];
  6973                           ;my_i2c.c: 108: static unsigned char sensor_bank_ventril[14];
  6974                           ;my_i2c.c: 110: unsigned char i2c_data;
  6975                           ;my_i2c.c: 111: unsigned char data_read = 0;
  6976  0000C8  0E00               	movlw	0
  6977  0000CA  0100               	movlb	0	; () banked
  6978  0000CC  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;my_i2c.c: 112: unsigned char data_written = 0;
  6982  0000CE  0E00               	movlw	0
  6983  0000D0  0100               	movlb	0	; () banked
  6984  0000D2  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;my_i2c.c: 113: unsigned char msg_ready = 0;
  6988  0000D4  0E00               	movlw	0
  6989  0000D6  0100               	movlb	0	; () banked
  6990  0000D8  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;my_i2c.c: 114: unsigned char msg_to_send = 0;
  6994  0000DA  0E00               	movlw	0
  6995  0000DC  0100               	movlb	0	; () banked
  6996  0000DE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;my_i2c.c: 115: unsigned char overrun_error = 0;
  7000  0000E0  0E00               	movlw	0
  7001  0000E2  0100               	movlb	0	; () banked
  7002  0000E4  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;my_i2c.c: 116: unsigned char error_buf[3];
  7006                           ;my_i2c.c: 119: if (SSPCON1bits.SSPOV == 1) {
  7007  0000E6  ACC6               	btfss	4038,6,c	;volatile
  7008  0000E8  D024               	goto	i2l2735
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;my_i2c.c: 120: SSPCON1bits.SSPOV = 0;
  7012  0000EA  9CC6               	bcf	4038,6,c	;volatile
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;my_i2c.c: 124: ic_ptr->status = 0x5;
  7016  0000EC  0100               	movlb	0	; () banked
  7017  0000EE  EE20 F021          	lfsr	2,33
  7018  0000F2  0100               	movlb	0	; () banked
  7019  0000F4  51D3               	movf	_ic_ptr& (0+255),w,b
  7020  0000F6  26D9               	addwf	fsr2l,f,c
  7021  0000F8  0100               	movlb	0	; () banked
  7022  0000FA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7023  0000FC  22DA               	addwfc	fsr2h,f,c
  7024  0000FE  0E05               	movlw	5
  7025  000100  6EDF               	movwf	indf2,c
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;my_i2c.c: 125: overrun_error = 1;
  7029  000102  0E01               	movlw	1
  7030  000104  0100               	movlb	0	; () banked
  7031  000106  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;my_i2c.c: 126: ic_ptr->error_count++;
  7035  000108  0100               	movlb	0	; () banked
  7036  00010A  EE20 F023          	lfsr	2,35
  7037  00010E  0100               	movlb	0	; () banked
  7038  000110  51D3               	movf	_ic_ptr& (0+255),w,b
  7039  000112  26D9               	addwf	fsr2l,f,c
  7040  000114  0100               	movlb	0	; () banked
  7041  000116  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7042  000118  22DA               	addwfc	fsr2h,f,c
  7043  00011A  2ADF               	incf	indf2,f,c
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;my_i2c.c: 127: ic_ptr->error_code = 0x4;
  7047  00011C  0100               	movlb	0	; () banked
  7048  00011E  EE20 F022          	lfsr	2,34
  7049  000122  0100               	movlb	0	; () banked
  7050  000124  51D3               	movf	_ic_ptr& (0+255),w,b
  7051  000126  26D9               	addwf	fsr2l,f,c
  7052  000128  0100               	movlb	0	; () banked
  7053  00012A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7054  00012C  22DA               	addwfc	fsr2h,f,c
  7055  00012E  0E04               	movlw	4
  7056  000130  6EDF               	movwf	indf2,c
  7057  000132                     i2l2735:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;my_i2c.c: 128: }
  7061                           ;my_i2c.c: 130: if (SSPSTATbits.BF == 1) {
  7062  000132  A0C7               	btfss	4039,0,c	;volatile
  7063  000134  D005               	goto	i2l2741
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;my_i2c.c: 131: i2c_data = SSPBUF;
  7067  000136  CFC9 F08B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;my_i2c.c: 132: data_read = 1;
  7071  00013A  0E01               	movlw	1
  7072  00013C  0100               	movlb	0	; () banked
  7073  00013E  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7074  000140                     i2l2741:
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;my_i2c.c: 133: }
  7078                           ;my_i2c.c: 135: if (!overrun_error) {
  7079  000140  0100               	movlb	0	; () banked
  7080  000142  678A               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7081  000144  D25E               	goto	i2l304
  7082  000146  D247               	goto	i2l2859
  7083  000148                     i2l306:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;my_i2c.c: 138: {
  7087                           ;my_i2c.c: 140: if (SSPSTATbits.S == 1) {
  7088  000148  A6C7               	btfss	4039,3,c	;volatile
  7089  00014A  D25B               	goto	i2l304
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;my_i2c.c: 141: handle_start(data_read);
  7093  00014C  0100               	movlb	0	; () banked
  7094  00014E  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7095  000150  EC27  F00A         	call	_handle_start
  7096                           
  7097                           ;my_i2c.c: 143: if (ic_ptr->status == 0x8) {
  7098  000154  0100               	movlb	0	; () banked
  7099  000156  EE20 F021          	lfsr	2,33
  7100  00015A  0100               	movlb	0	; () banked
  7101  00015C  51D3               	movf	_ic_ptr& (0+255),w,b
  7102  00015E  26D9               	addwf	fsr2l,f,c
  7103  000160  0100               	movlb	0	; () banked
  7104  000162  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7105  000164  22DA               	addwfc	fsr2h,f,c
  7106  000166  0E08               	movlw	8
  7107  000168  62DF               	cpfseq	indf2,c
  7108  00016A  D24B               	goto	i2l304
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;my_i2c.c: 144: data_read = 0;
  7112  00016C  0E00               	movlw	0
  7113  00016E  0100               	movlb	0	; () banked
  7114  000170  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7115                           
  7116                           ;my_i2c.c: 145: msg_to_send = 1;
  7117  000172  0E01               	movlw	1
  7118  000174  0100               	movlb	0	; () banked
  7119  000176  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7120  000178  D244               	goto	i2l304
  7121  00017A                     i2l310:
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;my_i2c.c: 151: {
  7125                           ;my_i2c.c: 154: if (SSPSTATbits.P == 1) {
  7126  00017A  A8C7               	btfss	4039,4,c	;volatile
  7127  00017C  D02A               	goto	i2l2761
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;my_i2c.c: 157: ic_ptr->event_count++;
  7131  00017E  0100               	movlb	0	; () banked
  7132  000180  EE20 F020          	lfsr	2,32
  7133  000184  0100               	movlb	0	; () banked
  7134  000186  51D3               	movf	_ic_ptr& (0+255),w,b
  7135  000188  26D9               	addwf	fsr2l,f,c
  7136  00018A  0100               	movlb	0	; () banked
  7137  00018C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7138  00018E  22DA               	addwfc	fsr2h,f,c
  7139  000190  2ADF               	incf	indf2,f,c
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;my_i2c.c: 158: if (data_read) {
  7143  000192  0100               	movlb	0	; () banked
  7144  000194  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7145  000196  B4D8               	btfsc	status,2,c
  7146  000198  D213               	goto	L10
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7150  00019A  BAC7               	btfsc	4039,5,c	;volatile
  7151  00019C  D004               	goto	i2l2759
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;my_i2c.c: 160: msg_ready = 1;
  7155  00019E  0E01               	movlw	1
  7156  0001A0  0100               	movlb	0	; () banked
  7157  0001A2  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7158                           
  7159                           ;my_i2c.c: 161: } else {
  7160  0001A4  D20D               	goto	L10
  7161  0001A6                     i2l2759:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;my_i2c.c: 162: ic_ptr->error_count++;
  7165  0001A6  0100               	movlb	0	; () banked
  7166  0001A8  EE20 F023          	lfsr	2,35
  7167  0001AC  0100               	movlb	0	; () banked
  7168  0001AE  51D3               	movf	_ic_ptr& (0+255),w,b
  7169  0001B0  26D9               	addwf	fsr2l,f,c
  7170  0001B2  0100               	movlb	0	; () banked
  7171  0001B4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7172  0001B6  22DA               	addwfc	fsr2h,f,c
  7173  0001B8  2ADF               	incf	indf2,f,c
  7174                           
  7175                           ;my_i2c.c: 163: ic_ptr->error_code = 0x6;
  7176  0001BA  0100               	movlb	0	; () banked
  7177  0001BC  EE20 F022          	lfsr	2,34
  7178  0001C0  0100               	movlb	0	; () banked
  7179  0001C2  51D3               	movf	_ic_ptr& (0+255),w,b
  7180  0001C4  26D9               	addwf	fsr2l,f,c
  7181  0001C6  0100               	movlb	0	; () banked
  7182  0001C8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7183  0001CA  22DA               	addwfc	fsr2h,f,c
  7184  0001CC  0E06               	movlw	6
  7185  0001CE  6EDF               	movwf	indf2,c
  7186                           
  7187                           ; BSR set to: 0
  7188  0001D0  D1F7               	goto	L10
  7189  0001D2                     i2l2761:
  7190                           
  7191                           ; BSR set to: 0
  7192  0001D2  0100               	movlb	0	; () banked
  7193  0001D4  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7194  0001D6  B4D8               	btfsc	status,2,c
  7195  0001D8  D214               	goto	i2l304
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;my_i2c.c: 168: ic_ptr->event_count++;
  7199  0001DA  0100               	movlb	0	; () banked
  7200  0001DC  EE20 F020          	lfsr	2,32
  7201  0001E0  0100               	movlb	0	; () banked
  7202  0001E2  51D3               	movf	_ic_ptr& (0+255),w,b
  7203  0001E4  26D9               	addwf	fsr2l,f,c
  7204  0001E6  0100               	movlb	0	; () banked
  7205  0001E8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7206  0001EA  22DA               	addwfc	fsr2h,f,c
  7207  0001EC  2ADF               	incf	indf2,f,c
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;my_i2c.c: 169: if (SSPSTATbits.D_A == 0) {
  7211  0001EE  BAC7               	btfsc	4039,5,c	;volatile
  7212  0001F0  D02C               	goto	i2l2781
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;my_i2c.c: 170: if (SSPSTATbits.R_W == 0) {
  7216  0001F2  B4C7               	btfsc	4039,2,c	;volatile
  7217  0001F4  D00B               	goto	i2l2771
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;my_i2c.c: 171: ic_ptr->status = 0x7;
  7221  0001F6  0100               	movlb	0	; () banked
  7222  0001F8  EE20 F021          	lfsr	2,33
  7223  0001FC  0100               	movlb	0	; () banked
  7224  0001FE  51D3               	movf	_ic_ptr& (0+255),w,b
  7225  000200  26D9               	addwf	fsr2l,f,c
  7226  000202  0100               	movlb	0	; () banked
  7227  000204  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7228  000206  22DA               	addwfc	fsr2h,f,c
  7229  000208  0E07               	movlw	7
  7230  00020A  D082               	goto	L8
  7231  00020C                     i2l2771:
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;my_i2c.c: 173: blip3();
  7235  00020C  EC2D  F00F         	call	i2_blip3	;wreg free
  7236                           
  7237                           ;my_i2c.c: 174: ic_ptr->status = 0x8;
  7238  000210  0100               	movlb	0	; () banked
  7239  000212  EE20 F021          	lfsr	2,33
  7240  000216  0100               	movlb	0	; () banked
  7241  000218  51D3               	movf	_ic_ptr& (0+255),w,b
  7242  00021A  26D9               	addwf	fsr2l,f,c
  7243  00021C  0100               	movlb	0	; () banked
  7244  00021E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7245  000220  22DA               	addwfc	fsr2h,f,c
  7246  000222  0E08               	movlw	8
  7247  000224  6EDF               	movwf	indf2,c
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;my_i2c.c: 175: msg_to_send = 1;
  7251  000226  0E01               	movlw	1
  7252  000228  0100               	movlb	0	; () banked
  7253  00022A  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;my_i2c.c: 177: data_read = 0;
  7257  00022C  0E00               	movlw	0
  7258  00022E  0100               	movlb	0	; () banked
  7259  000230  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;my_i2c.c: 178: ic_ptr->outbufind = 0;
  7263  000232  0100               	movlb	0	; () banked
  7264  000234  EE20 F01E          	lfsr	2,30
  7265  000238  0100               	movlb	0	; () banked
  7266  00023A  51D3               	movf	_ic_ptr& (0+255),w,b
  7267  00023C  26D9               	addwf	fsr2l,f,c
  7268  00023E  0100               	movlb	0	; () banked
  7269  000240  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7270  000242  22DA               	addwfc	fsr2h,f,c
  7271  000244  0E00               	movlw	0
  7272  000246  6EDF               	movwf	indf2,c
  7273                           
  7274                           ;my_i2c.c: 179: goto l;
  7275  000248  D020               	goto	i2l2783
  7276  00024A                     i2l2781:
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;my_i2c.c: 182: ic_ptr->error_count++;
  7280  00024A  0100               	movlb	0	; () banked
  7281  00024C  EE20 F023          	lfsr	2,35
  7282  000250  0100               	movlb	0	; () banked
  7283  000252  51D3               	movf	_ic_ptr& (0+255),w,b
  7284  000254  26D9               	addwf	fsr2l,f,c
  7285  000256  0100               	movlb	0	; () banked
  7286  000258  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7287  00025A  22DA               	addwfc	fsr2h,f,c
  7288  00025C  2ADF               	incf	indf2,f,c
  7289                           
  7290                           ;my_i2c.c: 183: ic_ptr->status = 0x5;
  7291  00025E  0100               	movlb	0	; () banked
  7292  000260  EE20 F021          	lfsr	2,33
  7293  000264  0100               	movlb	0	; () banked
  7294  000266  51D3               	movf	_ic_ptr& (0+255),w,b
  7295  000268  26D9               	addwf	fsr2l,f,c
  7296  00026A  0100               	movlb	0	; () banked
  7297  00026C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7298  00026E  22DA               	addwfc	fsr2h,f,c
  7299  000270  0E05               	movlw	5
  7300  000272  6EDF               	movwf	indf2,c
  7301                           
  7302                           ;my_i2c.c: 184: ic_ptr->error_code = 0x6;
  7303  000274  0100               	movlb	0	; () banked
  7304  000276  EE20 F022          	lfsr	2,34
  7305  00027A  0100               	movlb	0	; () banked
  7306  00027C  51D3               	movf	_ic_ptr& (0+255),w,b
  7307  00027E  26D9               	addwf	fsr2l,f,c
  7308  000280  0100               	movlb	0	; () banked
  7309  000282  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7310  000284  22DA               	addwfc	fsr2h,f,c
  7311  000286  0E06               	movlw	6
  7312  000288  D043               	goto	L8
  7313  00028A                     i2l2783:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;my_i2c.c: 191: {
  7317                           ;my_i2c.c: 192: blip4();
  7318  00028A  EC3D  F00F         	call	_blip4	;wreg free
  7319                           
  7320                           ;my_i2c.c: 194: if (ic_ptr->outbufind < 14) {
  7321  00028E  0100               	movlb	0	; () banked
  7322  000290  EE20 F01E          	lfsr	2,30
  7323  000294  0100               	movlb	0	; () banked
  7324  000296  51D3               	movf	_ic_ptr& (0+255),w,b
  7325  000298  26D9               	addwf	fsr2l,f,c
  7326  00029A  0100               	movlb	0	; () banked
  7327  00029C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7328  00029E  22DA               	addwfc	fsr2h,f,c
  7329  0002A0  50DF               	movf	indf2,w,c
  7330  0002A2  0100               	movlb	0	; () banked
  7331  0002A4  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7332  0002A6  0E0E               	movlw	14
  7333  0002A8  0100               	movlb	0	; () banked
  7334  0002AA  5D85               	subwf	??_i2c_int_handler& (0+255),w,b
  7335  0002AC  B0D8               	btfsc	status,0,c
  7336  0002AE  D02D               	goto	i2l2795
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;my_i2c.c: 195: blip4();
  7340  0002B0  EC3D  F00F         	call	_blip4	;wreg free
  7341                           
  7342                           ;my_i2c.c: 196: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7343  0002B4  0100               	movlb	0	; () banked
  7344  0002B6  EE20 F01E          	lfsr	2,30
  7345  0002BA  0100               	movlb	0	; () banked
  7346  0002BC  51D3               	movf	_ic_ptr& (0+255),w,b
  7347  0002BE  26D9               	addwf	fsr2l,f,c
  7348  0002C0  0100               	movlb	0	; () banked
  7349  0002C2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7350  0002C4  22DA               	addwfc	fsr2h,f,c
  7351  0002C6  50DF               	movf	indf2,w,c
  7352  0002C8  0100               	movlb	0	; () banked
  7353  0002CA  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7354  0002CC  0100               	movlb	0	; () banked
  7355  0002CE  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7356  0002D0  0D01               	mullw	1
  7357  0002D2  0E10               	movlw	16
  7358  0002D4  26F3               	addwf	prodl,f,c
  7359  0002D6  0E00               	movlw	0
  7360  0002D8  22F4               	addwfc	prodh,f,c
  7361  0002DA  50F3               	movf	prodl,w,c
  7362  0002DC  0100               	movlb	0	; () banked
  7363  0002DE  25D3               	addwf	_ic_ptr& (0+255),w,b
  7364  0002E0  6ED9               	movwf	fsr2l,c
  7365  0002E2  50F4               	movf	prodh,w,c
  7366  0002E4  0100               	movlb	0	; () banked
  7367  0002E6  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7368  0002E8  6EDA               	movwf	fsr2h,c
  7369  0002EA  50DF               	movf	indf2,w,c
  7370  0002EC  6EC9               	movwf	4041,c	;volatile
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;my_i2c.c: 197: ic_ptr->outbufind++;
  7374  0002EE  0100               	movlb	0	; () banked
  7375  0002F0  EE20 F01E          	lfsr	2,30
  7376  0002F4  0100               	movlb	0	; () banked
  7377  0002F6  51D3               	movf	_ic_ptr& (0+255),w,b
  7378  0002F8  26D9               	addwf	fsr2l,f,c
  7379  0002FA  0100               	movlb	0	; () banked
  7380  0002FC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7381  0002FE  22DA               	addwfc	fsr2h,f,c
  7382  000300  2ADF               	incf	indf2,f,c
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;my_i2c.c: 198: data_written = 1;
  7386  000302  0E01               	movlw	1
  7387  000304  0100               	movlb	0	; () banked
  7388  000306  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  7389                           
  7390                           ;my_i2c.c: 199: } else {
  7391  000308  D17C               	goto	i2l304
  7392  00030A                     i2l2795:
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;my_i2c.c: 200: blip3();
  7396  00030A  EC2D  F00F         	call	i2_blip3	;wreg free
  7397  00030E  D158               	goto	L10
  7398  000310                     L8:
  7399  000310  6EDF               	movwf	indf2,c
  7400  000312  D177               	goto	i2l304
  7401  000314                     i2l2799:
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;my_i2c.c: 207: {
  7405                           ;my_i2c.c: 208: blip2();
  7406  000314  EC31  F00F         	call	i2_blip2	;wreg free
  7407                           
  7408                           ;my_i2c.c: 210: if (SSPSTATbits.P == 1) {
  7409  000318  A8C7               	btfss	4039,4,c	;volatile
  7410  00031A  D05A               	goto	i2l2821
  7411                           
  7412                           ;my_i2c.c: 213: ic_ptr->event_count++;
  7413  00031C  0100               	movlb	0	; () banked
  7414  00031E  EE20 F020          	lfsr	2,32
  7415  000322  0100               	movlb	0	; () banked
  7416  000324  51D3               	movf	_ic_ptr& (0+255),w,b
  7417  000326  26D9               	addwf	fsr2l,f,c
  7418  000328  0100               	movlb	0	; () banked
  7419  00032A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7420  00032C  22DA               	addwfc	fsr2h,f,c
  7421  00032E  2ADF               	incf	indf2,f,c
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;my_i2c.c: 214: if (data_read) {
  7425  000330  0100               	movlb	0	; () banked
  7426  000332  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7427  000334  B4D8               	btfsc	status,2,c
  7428  000336  D048               	goto	i2l2817
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;my_i2c.c: 215: if (SSPSTATbits.D_A == 1) {
  7432  000338  AAC7               	btfss	4039,5,c	;volatile
  7433  00033A  D025               	goto	i2l2815
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;my_i2c.c: 216: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7437  00033C  0100               	movlb	0	; () banked
  7438  00033E  EE20 F00E          	lfsr	2,14
  7439  000342  0100               	movlb	0	; () banked
  7440  000344  51D3               	movf	_ic_ptr& (0+255),w,b
  7441  000346  26D9               	addwf	fsr2l,f,c
  7442  000348  0100               	movlb	0	; () banked
  7443  00034A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7444  00034C  22DA               	addwfc	fsr2h,f,c
  7445  00034E  50DF               	movf	indf2,w,c
  7446  000350  0100               	movlb	0	; () banked
  7447  000352  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7448  000354  0100               	movlb	0	; () banked
  7449  000356  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7450  000358  0D01               	mullw	1
  7451  00035A  50F3               	movf	prodl,w,c
  7452  00035C  0100               	movlb	0	; () banked
  7453  00035E  25D3               	addwf	_ic_ptr& (0+255),w,b
  7454  000360  6ED9               	movwf	fsr2l,c
  7455  000362  50F4               	movf	prodh,w,c
  7456  000364  0100               	movlb	0	; () banked
  7457  000366  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7458  000368  6EDA               	movwf	fsr2h,c
  7459  00036A  0100               	movlb	0	; () banked
  7460  00036C  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;my_i2c.c: 217: ic_ptr->buflen++;
  7464  000370  0100               	movlb	0	; () banked
  7465  000372  EE20 F00E          	lfsr	2,14
  7466  000376  0100               	movlb	0	; () banked
  7467  000378  51D3               	movf	_ic_ptr& (0+255),w,b
  7468  00037A  26D9               	addwf	fsr2l,f,c
  7469  00037C  0100               	movlb	0	; () banked
  7470  00037E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7471  000380  22DA               	addwfc	fsr2h,f,c
  7472  000382  2ADF               	incf	indf2,f,c
  7473  000384  D021               	goto	i2l2817
  7474  000386                     i2l2815:
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;my_i2c.c: 220: ic_ptr->error_count++;
  7478  000386  0100               	movlb	0	; () banked
  7479  000388  EE20 F023          	lfsr	2,35
  7480  00038C  0100               	movlb	0	; () banked
  7481  00038E  51D3               	movf	_ic_ptr& (0+255),w,b
  7482  000390  26D9               	addwf	fsr2l,f,c
  7483  000392  0100               	movlb	0	; () banked
  7484  000394  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7485  000396  22DA               	addwfc	fsr2h,f,c
  7486  000398  2ADF               	incf	indf2,f,c
  7487                           
  7488                           ;my_i2c.c: 221: ic_ptr->error_code = 0x6;
  7489  00039A  0100               	movlb	0	; () banked
  7490  00039C  EE20 F022          	lfsr	2,34
  7491  0003A0  0100               	movlb	0	; () banked
  7492  0003A2  51D3               	movf	_ic_ptr& (0+255),w,b
  7493  0003A4  26D9               	addwf	fsr2l,f,c
  7494  0003A6  0100               	movlb	0	; () banked
  7495  0003A8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7496  0003AA  22DA               	addwfc	fsr2h,f,c
  7497  0003AC  0E06               	movlw	6
  7498  0003AE  6EDF               	movwf	indf2,c
  7499                           
  7500                           ;my_i2c.c: 222: ic_ptr->status = 0x5;
  7501  0003B0  0100               	movlb	0	; () banked
  7502  0003B2  EE20 F021          	lfsr	2,33
  7503  0003B6  0100               	movlb	0	; () banked
  7504  0003B8  51D3               	movf	_ic_ptr& (0+255),w,b
  7505  0003BA  26D9               	addwf	fsr2l,f,c
  7506  0003BC  0100               	movlb	0	; () banked
  7507  0003BE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7508  0003C0  22DA               	addwfc	fsr2h,f,c
  7509  0003C2  0E05               	movlw	5
  7510  0003C4  6EDF               	movwf	indf2,c
  7511  0003C6  D0FC               	goto	L10
  7512  0003C8                     i2l2817:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;my_i2c.c: 225: msg_ready = 1;
  7516  0003C8  0E01               	movlw	1
  7517  0003CA  0100               	movlb	0	; () banked
  7518  0003CC  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7519                           
  7520                           ; BSR set to: 0
  7521  0003CE  D0F8               	goto	L10
  7522  0003D0                     i2l2821:
  7523                           
  7524                           ;my_i2c.c: 229: else if (data_read)
  7525  0003D0  0100               	movlb	0	; () banked
  7526  0003D2  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7527  0003D4  B4D8               	btfsc	status,2,c
  7528  0003D6  D115               	goto	i2l304
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;my_i2c.c: 230: {
  7532                           ;my_i2c.c: 232: ic_ptr->event_count++;
  7533  0003D8  0100               	movlb	0	; () banked
  7534  0003DA  EE20 F020          	lfsr	2,32
  7535  0003DE  0100               	movlb	0	; () banked
  7536  0003E0  51D3               	movf	_ic_ptr& (0+255),w,b
  7537  0003E2  26D9               	addwf	fsr2l,f,c
  7538  0003E4  0100               	movlb	0	; () banked
  7539  0003E6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7540  0003E8  22DA               	addwfc	fsr2h,f,c
  7541  0003EA  2ADF               	incf	indf2,f,c
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;my_i2c.c: 233: if (SSP1STATbits.D_A == 1) {
  7545  0003EC  AAC7               	btfss	4039,5,c	;volatile
  7546  0003EE  D025               	goto	i2l333
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;my_i2c.c: 234: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7550  0003F0  0100               	movlb	0	; () banked
  7551  0003F2  EE20 F00E          	lfsr	2,14
  7552  0003F6  0100               	movlb	0	; () banked
  7553  0003F8  51D3               	movf	_ic_ptr& (0+255),w,b
  7554  0003FA  26D9               	addwf	fsr2l,f,c
  7555  0003FC  0100               	movlb	0	; () banked
  7556  0003FE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7557  000400  22DA               	addwfc	fsr2h,f,c
  7558  000402  50DF               	movf	indf2,w,c
  7559  000404  0100               	movlb	0	; () banked
  7560  000406  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7561  000408  0100               	movlb	0	; () banked
  7562  00040A  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7563  00040C  0D01               	mullw	1
  7564  00040E  50F3               	movf	prodl,w,c
  7565  000410  0100               	movlb	0	; () banked
  7566  000412  25D3               	addwf	_ic_ptr& (0+255),w,b
  7567  000414  6ED9               	movwf	fsr2l,c
  7568  000416  50F4               	movf	prodh,w,c
  7569  000418  0100               	movlb	0	; () banked
  7570  00041A  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7571  00041C  6EDA               	movwf	fsr2h,c
  7572  00041E  0100               	movlb	0	; () banked
  7573  000420  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;my_i2c.c: 235: ic_ptr->buflen++;
  7577  000424  0100               	movlb	0	; () banked
  7578  000426  EE20 F00E          	lfsr	2,14
  7579  00042A  0100               	movlb	0	; () banked
  7580  00042C  51D3               	movf	_ic_ptr& (0+255),w,b
  7581  00042E  26D9               	addwf	fsr2l,f,c
  7582  000430  0100               	movlb	0	; () banked
  7583  000432  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7584  000434  22DA               	addwfc	fsr2h,f,c
  7585  000436  2ADF               	incf	indf2,f,c
  7586                           
  7587                           ;my_i2c.c: 236: }
  7588  000438  D0E4               	goto	i2l304
  7589  00043A                     i2l333:
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;my_i2c.c: 237: else
  7593                           ;my_i2c.c: 238: {
  7594                           ;my_i2c.c: 239: if (SSPSTATbits.R_W == 1)
  7595  00043A  A4C7               	btfss	4039,2,c	;volatile
  7596  00043C  D6B4               	goto	i2l2759
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;my_i2c.c: 240: {
  7600                           ;my_i2c.c: 241: blip();
  7601  00043E  EC39  F00F         	call	i2_blip	;wreg free
  7602                           
  7603                           ;my_i2c.c: 242: ic_ptr->status = 0x8;
  7604  000442  0100               	movlb	0	; () banked
  7605  000444  EE20 F021          	lfsr	2,33
  7606  000448  0100               	movlb	0	; () banked
  7607  00044A  51D3               	movf	_ic_ptr& (0+255),w,b
  7608  00044C  26D9               	addwf	fsr2l,f,c
  7609  00044E  0100               	movlb	0	; () banked
  7610  000450  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7611  000452  22DA               	addwfc	fsr2h,f,c
  7612  000454  0E08               	movlw	8
  7613  000456  6EDF               	movwf	indf2,c
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;my_i2c.c: 249: {
  7617                           ;my_i2c.c: 251: ic_ptr->outbuffer[0] = ic_ptr->buffer[0];
  7618                           
  7619                           ; BSR set to: 0
  7620                           
  7621                           ;my_i2c.c: 245: {
  7622                           ;my_i2c.c: 246: int l;
  7623                           ;my_i2c.c: 248: default:
  7624                           
  7625                           ;my_i2c.c: 244: switch( ic_ptr->buffer[0] )
  7626  000458  C0D3  FFD9         	movff	_ic_ptr,fsr2l
  7627  00045C  C0D4  FFDA         	movff	_ic_ptr+1,fsr2h
  7628  000460  0100               	movlb	0	; () banked
  7629  000462  EE10 F010          	lfsr	1,16
  7630  000466  0100               	movlb	0	; () banked
  7631  000468  51D3               	movf	_ic_ptr& (0+255),w,b
  7632  00046A  26E1               	addwf	fsr1l,f,c
  7633  00046C  0100               	movlb	0	; () banked
  7634  00046E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7635  000470  22E2               	addwfc	fsr1h,f,c
  7636  000472  CFDF FFE7          	movff	indf2,indf1
  7637                           
  7638                           ;my_i2c.c: 252: ic_ptr->outbuffer[1] = ic_ptr->buffer[1];
  7639  000476  0100               	movlb	0	; () banked
  7640  000478  EE20 F001          	lfsr	2,1
  7641  00047C  0100               	movlb	0	; () banked
  7642  00047E  51D3               	movf	_ic_ptr& (0+255),w,b
  7643  000480  26D9               	addwf	fsr2l,f,c
  7644  000482  0100               	movlb	0	; () banked
  7645  000484  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7646  000486  22DA               	addwfc	fsr2h,f,c
  7647  000488  0100               	movlb	0	; () banked
  7648  00048A  EE10 F011          	lfsr	1,17
  7649  00048E  0100               	movlb	0	; () banked
  7650  000490  51D3               	movf	_ic_ptr& (0+255),w,b
  7651  000492  26E1               	addwf	fsr1l,f,c
  7652  000494  0100               	movlb	0	; () banked
  7653  000496  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7654  000498  22E2               	addwfc	fsr1h,f,c
  7655  00049A  CFDF FFE7          	movff	indf2,indf1
  7656                           
  7657                           ;my_i2c.c: 253: ic_ptr->outbuffer[2] = ic_ptr->buffer[2];
  7658  00049E  0100               	movlb	0	; () banked
  7659  0004A0  EE20 F002          	lfsr	2,2
  7660  0004A4  0100               	movlb	0	; () banked
  7661  0004A6  51D3               	movf	_ic_ptr& (0+255),w,b
  7662  0004A8  26D9               	addwf	fsr2l,f,c
  7663  0004AA  0100               	movlb	0	; () banked
  7664  0004AC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7665  0004AE  22DA               	addwfc	fsr2h,f,c
  7666  0004B0  0100               	movlb	0	; () banked
  7667  0004B2  EE10 F012          	lfsr	1,18
  7668  0004B6  0100               	movlb	0	; () banked
  7669  0004B8  51D3               	movf	_ic_ptr& (0+255),w,b
  7670  0004BA  26E1               	addwf	fsr1l,f,c
  7671  0004BC  0100               	movlb	0	; () banked
  7672  0004BE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7673  0004C0  22E2               	addwfc	fsr1h,f,c
  7674  0004C2  CFDF FFE7          	movff	indf2,indf1
  7675                           
  7676                           ;my_i2c.c: 254: ic_ptr->outbuffer[3] = ic_ptr->buffer[3];
  7677  0004C6  0100               	movlb	0	; () banked
  7678  0004C8  EE20 F003          	lfsr	2,3
  7679  0004CC  0100               	movlb	0	; () banked
  7680  0004CE  51D3               	movf	_ic_ptr& (0+255),w,b
  7681  0004D0  26D9               	addwf	fsr2l,f,c
  7682  0004D2  0100               	movlb	0	; () banked
  7683  0004D4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7684  0004D6  22DA               	addwfc	fsr2h,f,c
  7685  0004D8  0100               	movlb	0	; () banked
  7686  0004DA  EE10 F013          	lfsr	1,19
  7687  0004DE  0100               	movlb	0	; () banked
  7688  0004E0  51D3               	movf	_ic_ptr& (0+255),w,b
  7689  0004E2  26E1               	addwf	fsr1l,f,c
  7690  0004E4  0100               	movlb	0	; () banked
  7691  0004E6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7692  0004E8  22E2               	addwfc	fsr1h,f,c
  7693  0004EA  CFDF FFE7          	movff	indf2,indf1
  7694                           
  7695                           ;my_i2c.c: 255: ic_ptr->outbuffer[4] = ic_ptr->buffer[4];
  7696  0004EE  0100               	movlb	0	; () banked
  7697  0004F0  EE20 F004          	lfsr	2,4
  7698  0004F4  0100               	movlb	0	; () banked
  7699  0004F6  51D3               	movf	_ic_ptr& (0+255),w,b
  7700  0004F8  26D9               	addwf	fsr2l,f,c
  7701  0004FA  0100               	movlb	0	; () banked
  7702  0004FC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7703  0004FE  22DA               	addwfc	fsr2h,f,c
  7704  000500  0100               	movlb	0	; () banked
  7705  000502  EE10 F014          	lfsr	1,20
  7706  000506  0100               	movlb	0	; () banked
  7707  000508  51D3               	movf	_ic_ptr& (0+255),w,b
  7708  00050A  26E1               	addwf	fsr1l,f,c
  7709  00050C  0100               	movlb	0	; () banked
  7710  00050E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7711  000510  22E2               	addwfc	fsr1h,f,c
  7712  000512  CFDF FFE7          	movff	indf2,indf1
  7713                           
  7714                           ;my_i2c.c: 256: ic_ptr->outbuffer[5] = ic_ptr->buffer[5];
  7715  000516  0100               	movlb	0	; () banked
  7716  000518  EE20 F005          	lfsr	2,5
  7717  00051C  0100               	movlb	0	; () banked
  7718  00051E  51D3               	movf	_ic_ptr& (0+255),w,b
  7719  000520  26D9               	addwf	fsr2l,f,c
  7720  000522  0100               	movlb	0	; () banked
  7721  000524  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7722  000526  22DA               	addwfc	fsr2h,f,c
  7723  000528  0100               	movlb	0	; () banked
  7724  00052A  EE10 F015          	lfsr	1,21
  7725  00052E  0100               	movlb	0	; () banked
  7726  000530  51D3               	movf	_ic_ptr& (0+255),w,b
  7727  000532  26E1               	addwf	fsr1l,f,c
  7728  000534  0100               	movlb	0	; () banked
  7729  000536  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7730  000538  22E2               	addwfc	fsr1h,f,c
  7731  00053A  CFDF FFE7          	movff	indf2,indf1
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;my_i2c.c: 261: ic_ptr->outbuflen = 6;
  7735                           
  7736                           ; BSR set to: 0
  7737                           
  7738                           ; BSR set to: 0
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;my_i2c.c: 258: }
  7742                           ;my_i2c.c: 259: }
  7743                           
  7744                           ;my_i2c.c: 257: break;
  7745  00053E  0100               	movlb	0	; () banked
  7746  000540  EE20 F01F          	lfsr	2,31
  7747  000544  0100               	movlb	0	; () banked
  7748  000546  51D3               	movf	_ic_ptr& (0+255),w,b
  7749  000548  26D9               	addwf	fsr2l,f,c
  7750  00054A  0100               	movlb	0	; () banked
  7751  00054C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7752  00054E  22DA               	addwfc	fsr2h,f,c
  7753  000550  0E06               	movlw	6
  7754  000552  6EDF               	movwf	indf2,c
  7755                           
  7756                           ;my_i2c.c: 262: ic_ptr->outbufind = 0;
  7757  000554  0100               	movlb	0	; () banked
  7758  000556  EE20 F01E          	lfsr	2,30
  7759  00055A  0100               	movlb	0	; () banked
  7760  00055C  51D3               	movf	_ic_ptr& (0+255),w,b
  7761  00055E  26D9               	addwf	fsr2l,f,c
  7762  000560  0100               	movlb	0	; () banked
  7763  000562  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7764  000564  22DA               	addwfc	fsr2h,f,c
  7765  000566  0E00               	movlw	0
  7766  000568  6EDF               	movwf	indf2,c
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;my_i2c.c: 263: msg_ready = 1;
  7770  00056A  0E01               	movlw	1
  7771  00056C  0100               	movlb	0	; () banked
  7772  00056E  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;my_i2c.c: 264: msg_to_send = 1;
  7776  000570  0E01               	movlw	1
  7777  000572  0100               	movlb	0	; () banked
  7778  000574  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;my_i2c.c: 266: data_read = 0;
  7782  000576  0E00               	movlw	0
  7783  000578  0100               	movlb	0	; () banked
  7784  00057A  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;my_i2c.c: 267: ic_ptr->outbufind = 0;
  7788  00057C  0100               	movlb	0	; () banked
  7789  00057E  EE20 F01E          	lfsr	2,30
  7790  000582  0100               	movlb	0	; () banked
  7791  000584  51D3               	movf	_ic_ptr& (0+255),w,b
  7792  000586  26D9               	addwf	fsr2l,f,c
  7793  000588  0100               	movlb	0	; () banked
  7794  00058A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7795  00058C  22DA               	addwfc	fsr2h,f,c
  7796  00058E  0E00               	movlw	0
  7797  000590  6EDF               	movwf	indf2,c
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;my_i2c.c: 268: SSPBUF = ic_ptr->outbuffer[0];
  7801  000592  0100               	movlb	0	; () banked
  7802  000594  EE20 F010          	lfsr	2,16
  7803  000598  0100               	movlb	0	; () banked
  7804  00059A  51D3               	movf	_ic_ptr& (0+255),w,b
  7805  00059C  26D9               	addwf	fsr2l,f,c
  7806  00059E  0100               	movlb	0	; () banked
  7807  0005A0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7808  0005A2  22DA               	addwfc	fsr2h,f,c
  7809  0005A4  50DF               	movf	indf2,w,c
  7810  0005A6  6EC9               	movwf	4041,c	;volatile
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;my_i2c.c: 269: ic_ptr->outbufind++;
  7814  0005A8  0100               	movlb	0	; () banked
  7815  0005AA  EE20 F01E          	lfsr	2,30
  7816  0005AE  0100               	movlb	0	; () banked
  7817  0005B0  51D3               	movf	_ic_ptr& (0+255),w,b
  7818  0005B2  26D9               	addwf	fsr2l,f,c
  7819  0005B4  0100               	movlb	0	; () banked
  7820  0005B6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7821  0005B8  22DA               	addwfc	fsr2h,f,c
  7822  0005BA  2ADF               	incf	indf2,f,c
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;my_i2c.c: 270: SSPCON1bits.CKP = 1;
  7826  0005BC  88C6               	bsf	4038,4,c	;volatile
  7827                           
  7828                           ;my_i2c.c: 271: }
  7829  0005BE  D021               	goto	i2l304
  7830  0005C0                     L10:
  7831                           
  7832                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  7833  0005C0  0100               	movlb	0	; () banked
  7834  0005C2  EE20 F021          	lfsr	2,33
  7835  0005C6  0100               	movlb	0	; () banked
  7836  0005C8  51D3               	movf	_ic_ptr& (0+255),w,b
  7837  0005CA  26D9               	addwf	fsr2l,f,c
  7838  0005CC  0100               	movlb	0	; () banked
  7839  0005CE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7840  0005D0  22DA               	addwfc	fsr2h,f,c
  7841  0005D2  0E05               	movlw	5
  7842  0005D4  D69D               	goto	L8
  7843  0005D6                     i2l2859:
  7844                           
  7845                           ; BSR set to: 0
  7846  0005D6  0100               	movlb	0	; () banked
  7847  0005D8  EE20 F021          	lfsr	2,33
  7848  0005DC  0100               	movlb	0	; () banked
  7849  0005DE  51D3               	movf	_ic_ptr& (0+255),w,b
  7850  0005E0  26D9               	addwf	fsr2l,f,c
  7851  0005E2  0100               	movlb	0	; () banked
  7852  0005E4  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7853  0005E6  22DA               	addwfc	fsr2h,f,c
  7854  0005E8  50DF               	movf	indf2,w,c
  7855                           
  7856                           ; Switch size 1, requested type "space"
  7857                           ; Number of cases is 4, Range of values is 5 to 8
  7858                           ; switch strategies available:
  7859                           ; Name         Instructions Cycles
  7860                           ; simple_byte           13     7 (average)
  7861                           ;	Chosen strategy is simple_byte
  7862  0005EA  0A05               	xorlw	5	; case 5
  7863  0005EC  B4D8               	btfsc	status,2,c
  7864  0005EE  D5AC               	goto	i2l306
  7865  0005F0  0A03               	xorlw	3	; case 6
  7866  0005F2  B4D8               	btfsc	status,2,c
  7867  0005F4  D5C2               	goto	i2l310
  7868  0005F6  0A01               	xorlw	1	; case 7
  7869  0005F8  B4D8               	btfsc	status,2,c
  7870  0005FA  D68C               	goto	i2l2799
  7871  0005FC  0A0F               	xorlw	15	; case 8
  7872  0005FE  B4D8               	btfsc	status,2,c
  7873  000600  D644               	goto	i2l2783
  7874  000602                     i2l304:
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;my_i2c.c: 283: }
  7878                           ;my_i2c.c: 286: if (data_read || data_written) {
  7879  000602  0100               	movlb	0	; () banked
  7880  000604  678E               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7881  000606  D004               	goto	i2l342
  7882                           
  7883                           ; BSR set to: 0
  7884  000608  0100               	movlb	0	; () banked
  7885  00060A  5189               	movf	i2c_int_handler@data_written& (0+255),w,b
  7886  00060C  B4D8               	btfsc	status,2,c
  7887  00060E  D002               	goto	i2l2865
  7888  000610                     i2l342:
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;my_i2c.c: 288: if (SSPCON1bits.CKP == 0) {
  7892  000610  A8C6               	btfss	4038,4,c	;volatile
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;my_i2c.c: 289: SSPCON1bits.CKP = 1;
  7896  000612  88C6               	bsf	4038,4,c	;volatile
  7897  000614                     i2l2865:
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;my_i2c.c: 290: }
  7901                           ;my_i2c.c: 291: }
  7902                           ;my_i2c.c: 296: if ((ic_ptr->buflen > 14 - 2) && (!msg_ready)) {
  7903  000614  0100               	movlb	0	; () banked
  7904  000616  EE20 F00E          	lfsr	2,14
  7905  00061A  0100               	movlb	0	; () banked
  7906  00061C  51D3               	movf	_ic_ptr& (0+255),w,b
  7907  00061E  26D9               	addwf	fsr2l,f,c
  7908  000620  0100               	movlb	0	; () banked
  7909  000622  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7910  000624  22DA               	addwfc	fsr2h,f,c
  7911  000626  0E0C               	movlw	12
  7912  000628  64DF               	cpfsgt	indf2,c
  7913  00062A  D023               	goto	i2l2871
  7914                           
  7915                           ; BSR set to: 0
  7916  00062C  0100               	movlb	0	; () banked
  7917  00062E  678D               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7918  000630  D020               	goto	i2l2871
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;my_i2c.c: 297: ic_ptr->status = 0x5;
  7922  000632  0100               	movlb	0	; () banked
  7923  000634  EE20 F021          	lfsr	2,33
  7924  000638  0100               	movlb	0	; () banked
  7925  00063A  51D3               	movf	_ic_ptr& (0+255),w,b
  7926  00063C  26D9               	addwf	fsr2l,f,c
  7927  00063E  0100               	movlb	0	; () banked
  7928  000640  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7929  000642  22DA               	addwfc	fsr2h,f,c
  7930  000644  0E05               	movlw	5
  7931  000646  6EDF               	movwf	indf2,c
  7932                           
  7933                           ;my_i2c.c: 298: ic_ptr->error_count++;
  7934  000648  0100               	movlb	0	; () banked
  7935  00064A  EE20 F023          	lfsr	2,35
  7936  00064E  0100               	movlb	0	; () banked
  7937  000650  51D3               	movf	_ic_ptr& (0+255),w,b
  7938  000652  26D9               	addwf	fsr2l,f,c
  7939  000654  0100               	movlb	0	; () banked
  7940  000656  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7941  000658  22DA               	addwfc	fsr2h,f,c
  7942  00065A  2ADF               	incf	indf2,f,c
  7943                           
  7944                           ;my_i2c.c: 299: ic_ptr->error_code = 0x7;
  7945  00065C  0100               	movlb	0	; () banked
  7946  00065E  EE20 F022          	lfsr	2,34
  7947  000662  0100               	movlb	0	; () banked
  7948  000664  51D3               	movf	_ic_ptr& (0+255),w,b
  7949  000666  26D9               	addwf	fsr2l,f,c
  7950  000668  0100               	movlb	0	; () banked
  7951  00066A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7952  00066C  22DA               	addwfc	fsr2h,f,c
  7953  00066E  0E07               	movlw	7
  7954  000670  6EDF               	movwf	indf2,c
  7955  000672                     i2l2871:
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;my_i2c.c: 300: }
  7959                           ;my_i2c.c: 302: if (msg_ready) {
  7960  000672  0100               	movlb	0	; () banked
  7961  000674  518D               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7962  000676  B4D8               	btfsc	status,2,c
  7963  000678  D03F               	goto	i2l2879
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;my_i2c.c: 303: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7967  00067A  0100               	movlb	0	; () banked
  7968  00067C  EE20 F020          	lfsr	2,32
  7969  000680  0100               	movlb	0	; () banked
  7970  000682  51D3               	movf	_ic_ptr& (0+255),w,b
  7971  000684  26D9               	addwf	fsr2l,f,c
  7972  000686  0100               	movlb	0	; () banked
  7973  000688  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7974  00068A  22DA               	addwfc	fsr2h,f,c
  7975  00068C  0100               	movlb	0	; () banked
  7976  00068E  EE10 F00E          	lfsr	1,14
  7977  000692  0100               	movlb	0	; () banked
  7978  000694  51D3               	movf	_ic_ptr& (0+255),w,b
  7979  000696  26E1               	addwf	fsr1l,f,c
  7980  000698  0100               	movlb	0	; () banked
  7981  00069A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7982  00069C  22E2               	addwfc	fsr1h,f,c
  7983  00069E  50E7               	movf	indf1,w,c
  7984  0006A0  0100               	movlb	0	; () banked
  7985  0006A2  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7986  0006A4  0100               	movlb	0	; () banked
  7987  0006A6  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7988  0006A8  0D01               	mullw	1
  7989  0006AA  50F3               	movf	prodl,w,c
  7990  0006AC  0100               	movlb	0	; () banked
  7991  0006AE  25D3               	addwf	_ic_ptr& (0+255),w,b
  7992  0006B0  6EE1               	movwf	fsr1l,c
  7993  0006B2  50F4               	movf	prodh,w,c
  7994  0006B4  0100               	movlb	0	; () banked
  7995  0006B6  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7996  0006B8  6EE2               	movwf	fsr1h,c
  7997  0006BA  CFDF FFE7          	movff	indf2,indf1
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;my_i2c.c: 304: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8001  0006BE  0E28               	movlw	40
  8002  0006C0  0100               	movlb	0	; () banked
  8003  0006C2  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8004  0006C4  0100               	movlb	0	; () banked
  8005  0006C6  C0D4  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8006  0006CA  0100               	movlb	0	; () banked
  8007  0006CC  C0D3  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8008  0006D0  0100               	movlb	0	; () banked
  8009  0006D2  EE20 F00E          	lfsr	2,14
  8010  0006D6  0100               	movlb	0	; () banked
  8011  0006D8  51D3               	movf	_ic_ptr& (0+255),w,b
  8012  0006DA  26D9               	addwf	fsr2l,f,c
  8013  0006DC  0100               	movlb	0	; () banked
  8014  0006DE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8015  0006E0  22DA               	addwfc	fsr2h,f,c
  8016  0006E2  50DF               	movf	indf2,w,c
  8017  0006E4  0100               	movlb	0	; () banked
  8018  0006E6  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8019  0006E8  0100               	movlb	0	; () banked
  8020  0006EA  2985               	incf	??_i2c_int_handler& (0+255),w,b
  8021  0006EC  EC5B  F00E         	call	_ToMainHigh_sendmsg
  8022                           
  8023                           ;my_i2c.c: 305: ic_ptr->buflen = 0;
  8024  0006F0  0100               	movlb	0	; () banked
  8025  0006F2  EE20 F00E          	lfsr	2,14
  8026  0006F6  D041               	goto	L9
  8027  0006F8                     i2l2879:
  8028                           
  8029                           ; BSR set to: 0
  8030  0006F8  0100               	movlb	0	; () banked
  8031  0006FA  EE20 F023          	lfsr	2,35
  8032  0006FE  0100               	movlb	0	; () banked
  8033  000700  51D3               	movf	_ic_ptr& (0+255),w,b
  8034  000702  26D9               	addwf	fsr2l,f,c
  8035  000704  0100               	movlb	0	; () banked
  8036  000706  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8037  000708  22DA               	addwfc	fsr2h,f,c
  8038  00070A  50DF               	movf	indf2,w,c
  8039  00070C  B4D8               	btfsc	status,2,c
  8040  00070E  D03D               	goto	i2l2887
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;my_i2c.c: 307: error_buf[0] = ic_ptr->error_count;
  8044  000710  0100               	movlb	0	; () banked
  8045  000712  EE20 F023          	lfsr	2,35
  8046  000716  0100               	movlb	0	; () banked
  8047  000718  51D3               	movf	_ic_ptr& (0+255),w,b
  8048  00071A  26D9               	addwf	fsr2l,f,c
  8049  00071C  0100               	movlb	0	; () banked
  8050  00071E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8051  000720  22DA               	addwfc	fsr2h,f,c
  8052  000722  50DF               	movf	indf2,w,c
  8053  000724  0100               	movlb	0	; () banked
  8054  000726  6F86               	movwf	i2c_int_handler@error_buf& (0+255),b
  8055                           
  8056                           ;my_i2c.c: 308: error_buf[1] = ic_ptr->error_code;
  8057  000728  0100               	movlb	0	; () banked
  8058  00072A  EE20 F022          	lfsr	2,34
  8059  00072E  0100               	movlb	0	; () banked
  8060  000730  51D3               	movf	_ic_ptr& (0+255),w,b
  8061  000732  26D9               	addwf	fsr2l,f,c
  8062  000734  0100               	movlb	0	; () banked
  8063  000736  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8064  000738  22DA               	addwfc	fsr2h,f,c
  8065  00073A  50DF               	movf	indf2,w,c
  8066  00073C  0100               	movlb	0	; () banked
  8067  00073E  6F87               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8068                           
  8069                           ;my_i2c.c: 309: error_buf[2] = ic_ptr->event_count;
  8070  000740  0100               	movlb	0	; () banked
  8071  000742  EE20 F020          	lfsr	2,32
  8072  000746  0100               	movlb	0	; () banked
  8073  000748  51D3               	movf	_ic_ptr& (0+255),w,b
  8074  00074A  26D9               	addwf	fsr2l,f,c
  8075  00074C  0100               	movlb	0	; () banked
  8076  00074E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8077  000750  22DA               	addwfc	fsr2h,f,c
  8078  000752  50DF               	movf	indf2,w,c
  8079  000754  0100               	movlb	0	; () banked
  8080  000756  6F88               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;my_i2c.c: 310: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8084  000758  0E29               	movlw	41
  8085  00075A  0100               	movlb	0	; () banked
  8086  00075C  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8087  00075E  0100               	movlb	0	; () banked
  8088  000760  0E00               	movlw	high i2c_int_handler@error_buf
  8089  000762  0100               	movlb	0	; () banked
  8090  000764  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8091  000766  0100               	movlb	0	; () banked
  8092  000768  0E86               	movlw	low i2c_int_handler@error_buf
  8093  00076A  0100               	movlb	0	; () banked
  8094  00076C  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8095  00076E  0E03               	movlw	3
  8096  000770  EC5B  F00E         	call	_ToMainHigh_sendmsg
  8097                           
  8098                           ;my_i2c.c: 311: ic_ptr->error_count = 0;
  8099  000774  0100               	movlb	0	; () banked
  8100  000776  EE20 F023          	lfsr	2,35
  8101  00077A                     L9:
  8102  00077A  0100               	movlb	0	; () banked
  8103  00077C  51D3               	movf	_ic_ptr& (0+255),w,b
  8104  00077E  26D9               	addwf	fsr2l,f,c
  8105  000780  0100               	movlb	0	; () banked
  8106  000782  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8107  000784  22DA               	addwfc	fsr2h,f,c
  8108  000786  0E00               	movlw	0
  8109  000788  6EDF               	movwf	indf2,c
  8110  00078A                     i2l2887:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;my_i2c.c: 312: }
  8114                           ;my_i2c.c: 313: if (msg_to_send) {
  8115  00078A  0100               	movlb	0	; () banked
  8116  00078C  518C               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8117  00078E  B4D8               	btfsc	status,2,c
  8118  000790  D00F               	goto	i2l2893
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;my_i2c.c: 315: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8122  000792  0E2A               	movlw	42
  8123  000794  0100               	movlb	0	; () banked
  8124  000796  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8125  000798  0100               	movlb	0	; () banked
  8126  00079A  C0D4  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8127  00079E  0100               	movlb	0	; () banked
  8128  0007A0  C0D3  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8129  0007A4  0E00               	movlw	0
  8130  0007A6  EC5B  F00E         	call	_ToMainHigh_sendmsg
  8131                           
  8132                           ;my_i2c.c: 316: msg_to_send = 0;
  8133  0007AA  0E00               	movlw	0
  8134  0007AC  0100               	movlb	0	; () banked
  8135  0007AE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8136  0007B0                     i2l2893:
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;my_i2c.c: 317: }
  8140                           ;my_i2c.c: 319: retrieve_sensor_values( sensor_bank_side , sensor_bank_front , sensor_ba
      +                          nk_ventril );
  8141  0007B0  0100               	movlb	0	; () banked
  8142  0007B2  0E00               	movlw	high i2c_int_handler@sensor_bank_side
  8143  0007B4  0100               	movlb	0	; () banked
  8144  0007B6  6F7E               	movwf	(retrieve_sensor_values@sensor_bank_side+1)& (0+255),b
  8145  0007B8  0100               	movlb	0	; () banked
  8146  0007BA  0EC5               	movlw	low i2c_int_handler@sensor_bank_side
  8147  0007BC  0100               	movlb	0	; () banked
  8148  0007BE  6F7D               	movwf	retrieve_sensor_values@sensor_bank_side& (0+255),b
  8149  0007C0  0E00               	movlw	high i2c_int_handler@sensor_bank_front
  8150  0007C2  0100               	movlb	0	; () banked
  8151  0007C4  6F80               	movwf	(retrieve_sensor_values@sensor_bank_front+1)& (0+255),b
  8152  0007C6  0E51               	movlw	low i2c_int_handler@sensor_bank_front
  8153  0007C8  0100               	movlb	0	; () banked
  8154  0007CA  6F7F               	movwf	retrieve_sensor_values@sensor_bank_front& (0+255),b
  8155  0007CC  0101               	movlb	1	; () banked
  8156  0007CE  0E01               	movlw	high i2c_int_handler@sensor_bank_ventril
  8157  0007D0  0100               	movlb	0	; () banked
  8158  0007D2  6F82               	movwf	(retrieve_sensor_values@sensor_bank_ventril+1)& (0+255),b
  8159  0007D4  0101               	movlb	1	; () banked
  8160  0007D6  0E92               	movlw	low i2c_int_handler@sensor_bank_ventril
  8161  0007D8  0100               	movlb	0	; () banked
  8162  0007DA  6F81               	movwf	retrieve_sensor_values@sensor_bank_ventril& (0+255),b
  8163  0007DC  EC8A  F00D         	call	_retrieve_sensor_values	;wreg free
  8164  0007E0  0012               	return	
  8165  0007E2                     __end_of_i2c_int_handler:
  8166                           	opt stack 0
  8167                           pclatu	equ	0xFFB
  8168                           pclath	equ	0xFFA
  8169                           tblptru	equ	0xFF8
  8170                           tblptrh	equ	0xFF7
  8171                           tblptrl	equ	0xFF6
  8172                           tablat	equ	0xFF5
  8173                           prodh	equ	0xFF4
  8174                           prodl	equ	0xFF3
  8175                           intcon	equ	0xFF2
  8176                           postinc0	equ	0xFEE
  8177                           fsr0h	equ	0xFEA
  8178                           fsr0l	equ	0xFE9
  8179                           wreg	equ	0xFE8
  8180                           indf1	equ	0xFE7
  8181                           fsr1h	equ	0xFE2
  8182                           fsr1l	equ	0xFE1
  8183                           bsr	equ	0xFE0
  8184                           indf2	equ	0xFDF
  8185                           postinc2	equ	0xFDE
  8186                           postdec2	equ	0xFDD
  8187                           fsr2h	equ	0xFDA
  8188                           fsr2l	equ	0xFD9
  8189                           status	equ	0xFD8
  8190                           
  8191 ;; *************** function i2_blip3 *****************
  8192 ;; Defined at:
  8193 ;;		line 32 in file "../src/debug.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;		None
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;		None               void
  8200 ;; Registers used:
  8201 ;;		None
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;Total ram usage:        0 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; This function calls:
  8214 ;;		Nothing
  8215 ;; This function is called by:
  8216 ;;		_i2c_int_handler
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text43
  8221  001E5A                     __ptext43:
  8222                           	opt stack 0
  8223  001E5A                     i2_blip3:
  8224                           	opt stack 18
  8225                           
  8226                           ;debug.c: 34: LATDbits.LD6 = 0;
  8227                           
  8228                           ;incstack = 0
  8229  001E5A  9C8C               	bcf	3980,6,c	;volatile
  8230                           
  8231                           ;debug.c: 35: LATDbits.LD6 = 1;
  8232  001E5C  8C8C               	bsf	3980,6,c	;volatile
  8233                           
  8234                           ;debug.c: 36: LATDbits.LD6 = 0;
  8235  001E5E  9C8C               	bcf	3980,6,c	;volatile
  8236  001E60  0012               	return	
  8237  001E62                     __end_ofi2_blip3:
  8238                           	opt stack 0
  8239                           pclatu	equ	0xFFB
  8240                           pclath	equ	0xFFA
  8241                           tblptru	equ	0xFF8
  8242                           tblptrh	equ	0xFF7
  8243                           tblptrl	equ	0xFF6
  8244                           tablat	equ	0xFF5
  8245                           prodh	equ	0xFF4
  8246                           prodl	equ	0xFF3
  8247                           intcon	equ	0xFF2
  8248                           postinc0	equ	0xFEE
  8249                           fsr0h	equ	0xFEA
  8250                           fsr0l	equ	0xFE9
  8251                           wreg	equ	0xFE8
  8252                           indf1	equ	0xFE7
  8253                           fsr1h	equ	0xFE2
  8254                           fsr1l	equ	0xFE1
  8255                           bsr	equ	0xFE0
  8256                           indf2	equ	0xFDF
  8257                           postinc2	equ	0xFDE
  8258                           postdec2	equ	0xFDD
  8259                           fsr2h	equ	0xFDA
  8260                           fsr2l	equ	0xFD9
  8261                           status	equ	0xFD8
  8262                           
  8263 ;; *************** function i2_blip2 *****************
  8264 ;; Defined at:
  8265 ;;		line 25 in file "../src/debug.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;		None               void
  8272 ;; Registers used:
  8273 ;;		None
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_i2c_int_handler
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text44
  8293  001E62                     __ptext44:
  8294                           	opt stack 0
  8295  001E62                     i2_blip2:
  8296                           	opt stack 18
  8297                           
  8298                           ;debug.c: 27: LATDbits.LD5 = 0;
  8299                           
  8300                           ;incstack = 0
  8301  001E62  9A8C               	bcf	3980,5,c	;volatile
  8302                           
  8303                           ;debug.c: 28: LATDbits.LD5 = 1;
  8304  001E64  8A8C               	bsf	3980,5,c	;volatile
  8305                           
  8306                           ;debug.c: 29: LATDbits.LD5 = 0;
  8307  001E66  9A8C               	bcf	3980,5,c	;volatile
  8308  001E68  0012               	return	
  8309  001E6A                     __end_ofi2_blip2:
  8310                           	opt stack 0
  8311                           pclatu	equ	0xFFB
  8312                           pclath	equ	0xFFA
  8313                           tblptru	equ	0xFF8
  8314                           tblptrh	equ	0xFF7
  8315                           tblptrl	equ	0xFF6
  8316                           tablat	equ	0xFF5
  8317                           prodh	equ	0xFF4
  8318                           prodl	equ	0xFF3
  8319                           intcon	equ	0xFF2
  8320                           postinc0	equ	0xFEE
  8321                           fsr0h	equ	0xFEA
  8322                           fsr0l	equ	0xFE9
  8323                           wreg	equ	0xFE8
  8324                           indf1	equ	0xFE7
  8325                           fsr1h	equ	0xFE2
  8326                           fsr1l	equ	0xFE1
  8327                           bsr	equ	0xFE0
  8328                           indf2	equ	0xFDF
  8329                           postinc2	equ	0xFDE
  8330                           postdec2	equ	0xFDD
  8331                           fsr2h	equ	0xFDA
  8332                           fsr2l	equ	0xFD9
  8333                           status	equ	0xFD8
  8334                           
  8335 ;; *************** function i2_blip1 *****************
  8336 ;; Defined at:
  8337 ;;		line 18 in file "../src/debug.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;		None
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;		None
  8342 ;; Return value:  Size  Location     Type
  8343 ;;		None               void
  8344 ;; Registers used:
  8345 ;;		None
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8355 ;;Total ram usage:        0 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; This function calls:
  8358 ;;		Nothing
  8359 ;; This function is called by:
  8360 ;;		_i2c_int_handler
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text45
  8365  001E6A                     __ptext45:
  8366                           	opt stack 0
  8367  001E6A                     i2_blip1:
  8368                           	opt stack 18
  8369                           
  8370                           ;debug.c: 20: LATDbits.LD4 = 0;
  8371                           
  8372                           ;incstack = 0
  8373  001E6A  988C               	bcf	3980,4,c	;volatile
  8374                           
  8375                           ;debug.c: 21: LATDbits.LD4 = 1;
  8376  001E6C  888C               	bsf	3980,4,c	;volatile
  8377                           
  8378                           ;debug.c: 22: LATDbits.LD4 = 0;
  8379  001E6E  988C               	bcf	3980,4,c	;volatile
  8380  001E70  0012               	return	
  8381  001E72                     __end_ofi2_blip1:
  8382                           	opt stack 0
  8383                           pclatu	equ	0xFFB
  8384                           pclath	equ	0xFFA
  8385                           tblptru	equ	0xFF8
  8386                           tblptrh	equ	0xFF7
  8387                           tblptrl	equ	0xFF6
  8388                           tablat	equ	0xFF5
  8389                           prodh	equ	0xFF4
  8390                           prodl	equ	0xFF3
  8391                           intcon	equ	0xFF2
  8392                           postinc0	equ	0xFEE
  8393                           fsr0h	equ	0xFEA
  8394                           fsr0l	equ	0xFE9
  8395                           wreg	equ	0xFE8
  8396                           indf1	equ	0xFE7
  8397                           fsr1h	equ	0xFE2
  8398                           fsr1l	equ	0xFE1
  8399                           bsr	equ	0xFE0
  8400                           indf2	equ	0xFDF
  8401                           postinc2	equ	0xFDE
  8402                           postdec2	equ	0xFDD
  8403                           fsr2h	equ	0xFDA
  8404                           fsr2l	equ	0xFD9
  8405                           status	equ	0xFD8
  8406                           
  8407 ;; *************** function i2_blip *****************
  8408 ;; Defined at:
  8409 ;;		line 11 in file "../src/debug.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;		None
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;		None               void
  8416 ;; Registers used:
  8417 ;;		None
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8427 ;;Total ram usage:        0 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; This function calls:
  8430 ;;		Nothing
  8431 ;; This function is called by:
  8432 ;;		_i2c_int_handler
  8433 ;; This function uses a non-reentrant model
  8434 ;;
  8435                           
  8436                           	psect	text46
  8437  001E72                     __ptext46:
  8438                           	opt stack 0
  8439  001E72                     i2_blip:
  8440                           	opt stack 18
  8441                           
  8442                           ;debug.c: 13: LATDbits.LD2 = 0;
  8443                           
  8444                           ;incstack = 0
  8445  001E72  948C               	bcf	3980,2,c	;volatile
  8446                           
  8447                           ;debug.c: 14: LATDbits.LD2 = 1;
  8448  001E74  848C               	bsf	3980,2,c	;volatile
  8449                           
  8450                           ;debug.c: 15: LATDbits.LD2 = 0;
  8451  001E76  948C               	bcf	3980,2,c	;volatile
  8452  001E78  0012               	return	
  8453  001E7A                     __end_ofi2_blip:
  8454                           	opt stack 0
  8455                           pclatu	equ	0xFFB
  8456                           pclath	equ	0xFFA
  8457                           tblptru	equ	0xFF8
  8458                           tblptrh	equ	0xFF7
  8459                           tblptrl	equ	0xFF6
  8460                           tablat	equ	0xFF5
  8461                           prodh	equ	0xFF4
  8462                           prodl	equ	0xFF3
  8463                           intcon	equ	0xFF2
  8464                           postinc0	equ	0xFEE
  8465                           fsr0h	equ	0xFEA
  8466                           fsr0l	equ	0xFE9
  8467                           wreg	equ	0xFE8
  8468                           indf1	equ	0xFE7
  8469                           fsr1h	equ	0xFE2
  8470                           fsr1l	equ	0xFE1
  8471                           bsr	equ	0xFE0
  8472                           indf2	equ	0xFDF
  8473                           postinc2	equ	0xFDE
  8474                           postdec2	equ	0xFDD
  8475                           fsr2h	equ	0xFDA
  8476                           fsr2l	equ	0xFD9
  8477                           status	equ	0xFD8
  8478                           
  8479 ;; *************** function _retrieve_sensor_values *****************
  8480 ;; Defined at:
  8481 ;;		line 394 in file "../src/my_i2c.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  sensor_bank_    2   29[BANK0 ] PTR unsigned char 
  8484 ;;		 -> i2c_int_handler@sensor_bank_side(14), 
  8485 ;;  sensor_bank_    2   31[BANK0 ] PTR unsigned char 
  8486 ;;		 -> i2c_int_handler@sensor_bank_front(14), 
  8487 ;;  sensor_bank_    2   33[BANK0 ] PTR unsigned char 
  8488 ;;		 -> i2c_int_handler@sensor_bank_ventril(14), 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  i               2    0        int 
  8491 ;;  msgtype         1   36[BANK0 ] unsigned char 
  8492 ;;  length          1   35[BANK0 ] char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;		None               void
  8495 ;; Registers used:
  8496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8502 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8505 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8506 ;;Total ram usage:        8 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    3
  8509 ;; This function calls:
  8510 ;;		_FromMainHigh_recvmsg
  8511 ;; This function is called by:
  8512 ;;		_i2c_int_handler
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text47
  8517  001B14                     __ptext47:
  8518                           	opt stack 0
  8519  001B14                     _retrieve_sensor_values:
  8520                           	opt stack 15
  8521                           
  8522                           ;my_i2c.c: 396: unsigned char msgtype = 40;
  8523                           
  8524                           ;incstack = 0
  8525  001B14  0E28               	movlw	40
  8526  001B16  0100               	movlb	0	; () banked
  8527  001B18  6F84               	movwf	retrieve_sensor_values@msgtype& (0+255),b
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;my_i2c.c: 398: int i;
  8531                           ;my_i2c.c: 399: signed char length = FromMainHigh_recvmsg( 14 , &msgtype , (void *)senso
      +                          r_bank_side );
  8532  001B1A  0100               	movlb	0	; () banked
  8533  001B1C  0E00               	movlw	high retrieve_sensor_values@msgtype
  8534  001B1E  0100               	movlb	0	; () banked
  8535  001B20  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  8536  001B22  0100               	movlb	0	; () banked
  8537  001B24  0E84               	movlw	low retrieve_sensor_values@msgtype
  8538  001B26  0100               	movlb	0	; () banked
  8539  001B28  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  8540  001B2A  0100               	movlb	0	; () banked
  8541  001B2C  C07E  F07B         	movff	retrieve_sensor_values@sensor_bank_side+1,FromMainHigh_recvmsg@data+1
  8542  001B30  0100               	movlb	0	; () banked
  8543  001B32  C07D  F07A         	movff	retrieve_sensor_values@sensor_bank_side,FromMainHigh_recvmsg@data
  8544  001B36  0E0E               	movlw	14
  8545  001B38  ECF9  F00D         	call	_FromMainHigh_recvmsg
  8546  001B3C  0100               	movlb	0	; () banked
  8547  001B3E  6F83               	movwf	retrieve_sensor_values@length& (0+255),b
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;my_i2c.c: 407: }
  8551                           ;my_i2c.c: 411: *need_sensor_data = 1;
  8552                           
  8553                           ; BSR set to: 0
  8554                           
  8555                           ; BSR set to: 0
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;my_i2c.c: 403: }
  8559                           
  8560                           ; BSR set to: 0
  8561  001B40  C0AF  FFD9         	movff	_need_sensor_data,fsr2l
  8562  001B44  C0B0  FFDA         	movff	_need_sensor_data+1,fsr2h
  8563  001B48  0E01               	movlw	1
  8564  001B4A  6EDF               	movwf	indf2,c
  8565                           
  8566                           ; BSR set to: 0
  8567  001B4C  0012               	return	
  8568  001B4E                     __end_of_retrieve_sensor_values:
  8569                           	opt stack 0
  8570                           pclatu	equ	0xFFB
  8571                           pclath	equ	0xFFA
  8572                           tblptru	equ	0xFF8
  8573                           tblptrh	equ	0xFF7
  8574                           tblptrl	equ	0xFF6
  8575                           tablat	equ	0xFF5
  8576                           prodh	equ	0xFF4
  8577                           prodl	equ	0xFF3
  8578                           intcon	equ	0xFF2
  8579                           postinc0	equ	0xFEE
  8580                           fsr0h	equ	0xFEA
  8581                           fsr0l	equ	0xFE9
  8582                           wreg	equ	0xFE8
  8583                           indf1	equ	0xFE7
  8584                           fsr1h	equ	0xFE2
  8585                           fsr1l	equ	0xFE1
  8586                           bsr	equ	0xFE0
  8587                           indf2	equ	0xFDF
  8588                           postinc2	equ	0xFDE
  8589                           postdec2	equ	0xFDD
  8590                           fsr2h	equ	0xFDA
  8591                           fsr2l	equ	0xFD9
  8592                           status	equ	0xFD8
  8593                           
  8594 ;; *************** function _FromMainHigh_recvmsg *****************
  8595 ;; Defined at:
  8596 ;;		line 183 in file "../src/messages.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  maxlength       1    wreg     unsigned char 
  8599 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8600 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), 
  8601 ;;  data            2   26[BANK0 ] PTR void 
  8602 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@sensor_bank_side(14), 
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      char 
  8607 ;; Registers used:
  8608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8617 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8618 ;;Total ram usage:        5 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    2
  8621 ;; This function calls:
  8622 ;;		i2_recv_msg
  8623 ;; This function is called by:
  8624 ;;		_retrieve_sensor_values
  8625 ;;		_timer0_int_handler
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text48
  8630  001BF2                     __ptext48:
  8631                           	opt stack 0
  8632  001BF2                     _FromMainHigh_recvmsg:
  8633                           	opt stack 16
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;incstack = 0
  8637                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8638  001BF2  0100               	movlb	0	; () banked
  8639  001BF4  6F7C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8643  001BF6  0105               	movlb	5	; () banked
  8644  001BF8  0E05               	movlw	high _FromMainHigh_MQ
  8645  001BFA  0100               	movlb	0	; () banked
  8646  001BFC  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8647  001BFE  0105               	movlb	5	; () banked
  8648  001C00  0E00               	movlw	low _FromMainHigh_MQ
  8649  001C02  0100               	movlb	0	; () banked
  8650  001C04  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  8651  001C06  C07C  F06C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8652  001C0A  0100               	movlb	0	; () banked
  8653  001C0C  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8654  001C10  0100               	movlb	0	; () banked
  8655  001C12  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8656  001C16  0100               	movlb	0	; () banked
  8657  001C18  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8658  001C1C  0100               	movlb	0	; () banked
  8659  001C1E  C07A  F06F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8660  001C22  ECD2  F007         	call	i2_recv_msg	;wreg free
  8661  001C26  0012               	return	
  8662  001C28                     __end_of_FromMainHigh_recvmsg:
  8663                           	opt stack 0
  8664                           pclatu	equ	0xFFB
  8665                           pclath	equ	0xFFA
  8666                           tblptru	equ	0xFF8
  8667                           tblptrh	equ	0xFF7
  8668                           tblptrl	equ	0xFF6
  8669                           tablat	equ	0xFF5
  8670                           prodh	equ	0xFF4
  8671                           prodl	equ	0xFF3
  8672                           intcon	equ	0xFF2
  8673                           postinc0	equ	0xFEE
  8674                           fsr0h	equ	0xFEA
  8675                           fsr0l	equ	0xFE9
  8676                           wreg	equ	0xFE8
  8677                           indf1	equ	0xFE7
  8678                           fsr1h	equ	0xFE2
  8679                           fsr1l	equ	0xFE1
  8680                           bsr	equ	0xFE0
  8681                           indf2	equ	0xFDF
  8682                           postinc2	equ	0xFDE
  8683                           postdec2	equ	0xFDD
  8684                           fsr2h	equ	0xFDA
  8685                           fsr2l	equ	0xFD9
  8686                           status	equ	0xFD8
  8687                           
  8688 ;; *************** function i2_recv_msg *****************
  8689 ;; Defined at:
  8690 ;;		line 63 in file "../src/messages.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8693 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8694 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8695 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8696 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  8697 ;;  data            2   15[BANK0 ] PTR void 
  8698 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8701 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8702 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8703 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8704 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      char 
  8707 ;; Registers used:
  8708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8714 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8715 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8716 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8717 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8718 ;;Total ram usage:       14 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; Hardware stack levels required when called:    1
  8721 ;; This function calls:
  8722 ;;		i2_memcpy
  8723 ;; This function is called by:
  8724 ;;		_FromMainHigh_recvmsg
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text49
  8729  000FA4                     __ptext49:
  8730                           	opt stack 0
  8731  000FA4                     i2_recv_msg:
  8732                           	opt stack 16
  8733                           
  8734                           ;messages.c: 64: unsigned char slot;
  8735                           ;messages.c: 68: msg *qmsg;
  8736                           ;messages.c: 69: size_t tlength;
  8737                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8738                           
  8739                           ;incstack = 0
  8740  000FA4  0100               	movlb	0	; () banked
  8741  000FA6  EE20 F089          	lfsr	2,137
  8742  000FAA  0100               	movlb	0	; () banked
  8743  000FAC  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8744  000FAE  26D9               	addwf	fsr2l,f,c
  8745  000FB0  0100               	movlb	0	; () banked
  8746  000FB2  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8747  000FB4  22DA               	addwfc	fsr2h,f,c
  8748  000FB6  50DF               	movf	indf2,w,c
  8749  000FB8  0100               	movlb	0	; () banked
  8750  000FBA  6F73               	movwf	i2recv_msg@slot& (0+255),b
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8754  000FBC  0100               	movlb	0	; () banked
  8755  000FBE  5173               	movf	i2recv_msg@slot& (0+255),w,b
  8756  000FC0  0D11               	mullw	17
  8757  000FC2  50F3               	movf	prodl,w,c
  8758  000FC4  0100               	movlb	0	; () banked
  8759  000FC6  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8760  000FC8  0100               	movlb	0	; () banked
  8761  000FCA  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  8762  000FCC  50F4               	movf	prodh,w,c
  8763  000FCE  0100               	movlb	0	; () banked
  8764  000FD0  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8765  000FD2  0100               	movlb	0	; () banked
  8766  000FD4  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;messages.c: 74: if (qmsg->full == 1) {
  8770  000FD6  0E01               	movlw	1
  8771  000FD8  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8772  000FDC  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8773  000FE0  62DF               	cpfseq	indf2,c
  8774  000FE2  D06D               	goto	i2l2413
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8778  000FE4  0100               	movlb	0	; () banked
  8779  000FE6  EE20 F001          	lfsr	2,1
  8780  000FEA  0100               	movlb	0	; () banked
  8781  000FEC  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8782  000FEE  26D9               	addwf	fsr2l,f,c
  8783  000FF0  0100               	movlb	0	; () banked
  8784  000FF2  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8785  000FF4  22DA               	addwfc	fsr2h,f,c
  8786  000FF6  50DF               	movf	indf2,w,c
  8787  000FF8  0100               	movlb	0	; () banked
  8788  000FFA  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8789  000FFC  B0D8               	btfsc	status,0,c
  8790  000FFE  D002               	goto	i2l2397
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;messages.c: 77: return (-3);
  8794  001000  0EFD               	movlw	253
  8795  001002  0012               	return	
  8796  001004                     i2l2397:
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;messages.c: 78: }
  8800                           ;messages.c: 80: tlength = qmsg->length;
  8801  001004  0100               	movlb	0	; () banked
  8802  001006  EE20 F001          	lfsr	2,1
  8803  00100A  0100               	movlb	0	; () banked
  8804  00100C  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8805  00100E  26D9               	addwf	fsr2l,f,c
  8806  001010  0100               	movlb	0	; () banked
  8807  001012  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8808  001014  22DA               	addwfc	fsr2h,f,c
  8809  001016  50DF               	movf	indf2,w,c
  8810  001018  0100               	movlb	0	; () banked
  8811  00101A  6F71               	movwf	??i2_recv_msg& (0+255),b
  8812  00101C  0100               	movlb	0	; () banked
  8813  00101E  5171               	movf	??i2_recv_msg& (0+255),w,b
  8814  001020  0100               	movlb	0	; () banked
  8815  001022  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  8816  001024  0100               	movlb	0	; () banked
  8817  001026  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8821  001028  0100               	movlb	0	; () banked
  8822  00102A  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8823  00102E  0100               	movlb	0	; () banked
  8824  001030  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  8825  001034  0E03               	movlw	3
  8826  001036  0100               	movlb	0	; () banked
  8827  001038  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8828  00103A  0100               	movlb	0	; () banked
  8829  00103C  6F71               	movwf	??i2_recv_msg& (0+255),b
  8830  00103E  0E00               	movlw	0
  8831  001040  0100               	movlb	0	; () banked
  8832  001042  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8833  001044  0100               	movlb	0	; () banked
  8834  001046  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  8835  001048  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  8836  00104C  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8837  001050  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  8838  001054  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8839  001058  EC05  F00D         	call	i2_memcpy	;wreg free
  8840                           
  8841                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  8842  00105C  0100               	movlb	0	; () banked
  8843  00105E  EE20 F089          	lfsr	2,137
  8844  001062  0100               	movlb	0	; () banked
  8845  001064  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8846  001066  26D9               	addwf	fsr2l,f,c
  8847  001068  0100               	movlb	0	; () banked
  8848  00106A  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8849  00106C  22DA               	addwfc	fsr2h,f,c
  8850  00106E  0100               	movlb	0	; () banked
  8851  001070  EE10 F089          	lfsr	1,137
  8852  001074  0100               	movlb	0	; () banked
  8853  001076  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8854  001078  26E1               	addwf	fsr1l,f,c
  8855  00107A  0100               	movlb	0	; () banked
  8856  00107C  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8857  00107E  22E2               	addwfc	fsr1h,f,c
  8858  001080  50E7               	movf	indf1,w,c
  8859  001082  0100               	movlb	0	; () banked
  8860  001084  6F71               	movwf	??i2_recv_msg& (0+255),b
  8861  001086  0100               	movlb	0	; () banked
  8862  001088  2971               	incf	??i2_recv_msg& (0+255),w,b
  8863  00108A  0B07               	andlw	7
  8864  00108C  6EDF               	movwf	indf2,c
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8868  00108E  0100               	movlb	0	; () banked
  8869  001090  EE20 F002          	lfsr	2,2
  8870  001094  0100               	movlb	0	; () banked
  8871  001096  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8872  001098  26D9               	addwf	fsr2l,f,c
  8873  00109A  0100               	movlb	0	; () banked
  8874  00109C  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8875  00109E  22DA               	addwfc	fsr2h,f,c
  8876  0010A0  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8877  0010A4  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8878  0010A8  CFDF FFE7          	movff	indf2,indf1
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;messages.c: 91: qmsg->full = 0;
  8882  0010AC  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8883  0010B0  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8884  0010B4  0E00               	movlw	0
  8885  0010B6  6EDF               	movwf	indf2,c
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;messages.c: 92: return (tlength);
  8889  0010B8  0100               	movlb	0	; () banked
  8890  0010BA  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  8891  0010BC  0012               	return	
  8892  0010BE                     i2l2413:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;messages.c: 94: return (-4);
  8896  0010BE  0EFC               	movlw	252
  8897  0010C0  0012               	return	
  8898  0010C2                     __end_ofi2_recv_msg:
  8899                           	opt stack 0
  8900                           pclatu	equ	0xFFB
  8901                           pclath	equ	0xFFA
  8902                           tblptru	equ	0xFF8
  8903                           tblptrh	equ	0xFF7
  8904                           tblptrl	equ	0xFF6
  8905                           tablat	equ	0xFF5
  8906                           prodh	equ	0xFF4
  8907                           prodl	equ	0xFF3
  8908                           intcon	equ	0xFF2
  8909                           postinc0	equ	0xFEE
  8910                           fsr0h	equ	0xFEA
  8911                           fsr0l	equ	0xFE9
  8912                           wreg	equ	0xFE8
  8913                           indf1	equ	0xFE7
  8914                           fsr1h	equ	0xFE2
  8915                           fsr1l	equ	0xFE1
  8916                           bsr	equ	0xFE0
  8917                           indf2	equ	0xFDF
  8918                           postinc2	equ	0xFDE
  8919                           postdec2	equ	0xFDD
  8920                           fsr2h	equ	0xFDA
  8921                           fsr2l	equ	0xFD9
  8922                           status	equ	0xFD8
  8923                           
  8924 ;; *************** function _handle_start *****************
  8925 ;; Defined at:
  8926 ;;		line 72 in file "../src/my_i2c.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  data_read       1    wreg     unsigned char 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  data_read       1    0[BANK0 ] unsigned char 
  8931 ;; Return value:  Size  Location     Type
  8932 ;;		None               void
  8933 ;; Registers used:
  8934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8943 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8944 ;;Total ram usage:        1 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_i2c_int_handler
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text50
  8954  00144E                     __ptext50:
  8955                           	opt stack 0
  8956  00144E                     _handle_start:
  8957                           	opt stack 18
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;incstack = 0
  8961                           ;handle_start@data_read stored from wreg
  8962  00144E  0100               	movlb	0	; () banked
  8963  001450  6F60               	movwf	handle_start@data_read& (0+255),b
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8967  001452  0100               	movlb	0	; () banked
  8968  001454  EE20 F020          	lfsr	2,32
  8969  001458  0100               	movlb	0	; () banked
  8970  00145A  51D3               	movf	_ic_ptr& (0+255),w,b
  8971  00145C  26D9               	addwf	fsr2l,f,c
  8972  00145E  0100               	movlb	0	; () banked
  8973  001460  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8974  001462  22DA               	addwfc	fsr2h,f,c
  8975  001464  0E01               	movlw	1
  8976  001466  6EDF               	movwf	indf2,c
  8977                           
  8978                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8979  001468  0100               	movlb	0	; () banked
  8980  00146A  EE20 F00E          	lfsr	2,14
  8981  00146E  0100               	movlb	0	; () banked
  8982  001470  51D3               	movf	_ic_ptr& (0+255),w,b
  8983  001472  26D9               	addwf	fsr2l,f,c
  8984  001474  0100               	movlb	0	; () banked
  8985  001476  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8986  001478  22DA               	addwfc	fsr2h,f,c
  8987  00147A  0E00               	movlw	0
  8988  00147C  6EDF               	movwf	indf2,c
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;my_i2c.c: 76: if (data_read) {
  8992  00147E  0100               	movlb	0	; () banked
  8993  001480  5160               	movf	handle_start@data_read& (0+255),w,b
  8994  001482  B4D8               	btfsc	status,2,c
  8995  001484  D03D               	goto	i2l2623
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8999  001486  AAC7               	btfss	4039,5,c	;volatile
  9000  001488  D021               	goto	i2l288
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  9004  00148A  0100               	movlb	0	; () banked
  9005  00148C  EE20 F021          	lfsr	2,33
  9006  001490  0100               	movlb	0	; () banked
  9007  001492  51D3               	movf	_ic_ptr& (0+255),w,b
  9008  001494  26D9               	addwf	fsr2l,f,c
  9009  001496  0100               	movlb	0	; () banked
  9010  001498  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9011  00149A  22DA               	addwfc	fsr2h,f,c
  9012  00149C  0E05               	movlw	5
  9013  00149E  6EDF               	movwf	indf2,c
  9014                           
  9015                           ;my_i2c.c: 81: ic_ptr->error_count++;
  9016  0014A0  0100               	movlb	0	; () banked
  9017  0014A2  EE20 F023          	lfsr	2,35
  9018  0014A6  0100               	movlb	0	; () banked
  9019  0014A8  51D3               	movf	_ic_ptr& (0+255),w,b
  9020  0014AA  26D9               	addwf	fsr2l,f,c
  9021  0014AC  0100               	movlb	0	; () banked
  9022  0014AE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9023  0014B0  22DA               	addwfc	fsr2h,f,c
  9024  0014B2  2ADF               	incf	indf2,f,c
  9025                           
  9026                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  9027  0014B4  0100               	movlb	0	; () banked
  9028  0014B6  EE20 F022          	lfsr	2,34
  9029  0014BA  0100               	movlb	0	; () banked
  9030  0014BC  51D3               	movf	_ic_ptr& (0+255),w,b
  9031  0014BE  26D9               	addwf	fsr2l,f,c
  9032  0014C0  0100               	movlb	0	; () banked
  9033  0014C2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9034  0014C4  22DA               	addwfc	fsr2h,f,c
  9035  0014C6  0E05               	movlw	5
  9036  0014C8  6EDF               	movwf	indf2,c
  9037                           
  9038                           ;my_i2c.c: 83: } else {
  9039  0014CA  0012               	return	
  9040  0014CC                     i2l288:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  9044  0014CC  A4C7               	btfss	4039,2,c	;volatile
  9045  0014CE  D00C               	goto	i2l2621
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  9049  0014D0  0100               	movlb	0	; () banked
  9050  0014D2  EE20 F021          	lfsr	2,33
  9051  0014D6  0100               	movlb	0	; () banked
  9052  0014D8  51D3               	movf	_ic_ptr& (0+255),w,b
  9053  0014DA  26D9               	addwf	fsr2l,f,c
  9054  0014DC  0100               	movlb	0	; () banked
  9055  0014DE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9056  0014E0  22DA               	addwfc	fsr2h,f,c
  9057  0014E2  0E08               	movlw	8
  9058  0014E4  6EDF               	movwf	indf2,c
  9059                           
  9060                           ;my_i2c.c: 87: } else {
  9061  0014E6  0012               	return	
  9062  0014E8                     i2l2621:
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  9066  0014E8  0100               	movlb	0	; () banked
  9067  0014EA  EE20 F021          	lfsr	2,33
  9068  0014EE  0100               	movlb	0	; () banked
  9069  0014F0  51D3               	movf	_ic_ptr& (0+255),w,b
  9070  0014F2  26D9               	addwf	fsr2l,f,c
  9071  0014F4  0100               	movlb	0	; () banked
  9072  0014F6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9073  0014F8  22DA               	addwfc	fsr2h,f,c
  9074  0014FA  0E07               	movlw	7
  9075  0014FC  6EDF               	movwf	indf2,c
  9076  0014FE  0012               	return	
  9077  001500                     i2l2623:
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  9081  001500  0100               	movlb	0	; () banked
  9082  001502  EE20 F021          	lfsr	2,33
  9083  001506  0100               	movlb	0	; () banked
  9084  001508  51D3               	movf	_ic_ptr& (0+255),w,b
  9085  00150A  26D9               	addwf	fsr2l,f,c
  9086  00150C  0100               	movlb	0	; () banked
  9087  00150E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  9088  001510  22DA               	addwfc	fsr2h,f,c
  9089  001512  0E06               	movlw	6
  9090  001514  6EDF               	movwf	indf2,c
  9091  001516  0012               	return	
  9092  001518                     __end_of_handle_start:
  9093                           	opt stack 0
  9094                           pclatu	equ	0xFFB
  9095                           pclath	equ	0xFFA
  9096                           tblptru	equ	0xFF8
  9097                           tblptrh	equ	0xFF7
  9098                           tblptrl	equ	0xFF6
  9099                           tablat	equ	0xFF5
  9100                           prodh	equ	0xFF4
  9101                           prodl	equ	0xFF3
  9102                           intcon	equ	0xFF2
  9103                           postinc0	equ	0xFEE
  9104                           fsr0h	equ	0xFEA
  9105                           fsr0l	equ	0xFE9
  9106                           wreg	equ	0xFE8
  9107                           indf1	equ	0xFE7
  9108                           fsr1h	equ	0xFE2
  9109                           fsr1l	equ	0xFE1
  9110                           bsr	equ	0xFE0
  9111                           indf2	equ	0xFDF
  9112                           postinc2	equ	0xFDE
  9113                           postdec2	equ	0xFDD
  9114                           fsr2h	equ	0xFDA
  9115                           fsr2l	equ	0xFD9
  9116                           status	equ	0xFD8
  9117                           
  9118 ;; *************** function _blip4 *****************
  9119 ;; Defined at:
  9120 ;;		line 39 in file "../src/debug.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;		None
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;		None               void
  9127 ;; Registers used:
  9128 ;;		None
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9138 ;;Total ram usage:        0 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; This function calls:
  9141 ;;		Nothing
  9142 ;; This function is called by:
  9143 ;;		_i2c_int_handler
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text51
  9148  001E7A                     __ptext51:
  9149                           	opt stack 0
  9150  001E7A                     _blip4:
  9151                           	opt stack 18
  9152                           
  9153                           ;debug.c: 41: LATDbits.LD7 = 0;
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;incstack = 0
  9157  001E7A  9E8C               	bcf	3980,7,c	;volatile
  9158                           
  9159                           ;debug.c: 42: LATDbits.LD7 = 1;
  9160  001E7C  8E8C               	bsf	3980,7,c	;volatile
  9161                           
  9162                           ;debug.c: 43: LATDbits.LD7 = 0;
  9163  001E7E  9E8C               	bcf	3980,7,c	;volatile
  9164  001E80  0012               	return	
  9165  001E82                     __end_of_blip4:
  9166                           	opt stack 0
  9167                           pclatu	equ	0xFFB
  9168                           pclath	equ	0xFFA
  9169                           tblptru	equ	0xFF8
  9170                           tblptrh	equ	0xFF7
  9171                           tblptrl	equ	0xFF6
  9172                           tablat	equ	0xFF5
  9173                           prodh	equ	0xFF4
  9174                           prodl	equ	0xFF3
  9175                           intcon	equ	0xFF2
  9176                           postinc0	equ	0xFEE
  9177                           fsr0h	equ	0xFEA
  9178                           fsr0l	equ	0xFE9
  9179                           wreg	equ	0xFE8
  9180                           indf1	equ	0xFE7
  9181                           fsr1h	equ	0xFE2
  9182                           fsr1l	equ	0xFE1
  9183                           bsr	equ	0xFE0
  9184                           indf2	equ	0xFDF
  9185                           postinc2	equ	0xFDE
  9186                           postdec2	equ	0xFDD
  9187                           fsr2h	equ	0xFDA
  9188                           fsr2l	equ	0xFD9
  9189                           status	equ	0xFD8
  9190                           
  9191 ;; *************** function _ToMainHigh_sendmsg *****************
  9192 ;; Defined at:
  9193 ;;		line 126 in file "../src/messages.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  length          1    wreg     unsigned char 
  9196 ;;  msgtype         1   22[BANK0 ] unsigned char 
  9197 ;;  data            2   23[BANK0 ] PTR void 
  9198 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  length          1   25[BANK0 ] unsigned char 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      char 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9210 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9213 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9214 ;;Total ram usage:        4 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    2
  9217 ;; This function calls:
  9218 ;;		i2_send_msg
  9219 ;; This function is called by:
  9220 ;;		_i2c_int_handler
  9221 ;;		_timer0_int_handler
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text52
  9226  001CB6                     __ptext52:
  9227                           	opt stack 0
  9228  001CB6                     _ToMainHigh_sendmsg:
  9229                           	opt stack 16
  9230                           
  9231                           ;incstack = 0
  9232                           ;ToMainHigh_sendmsg@length stored from wreg
  9233  001CB6  0100               	movlb	0	; () banked
  9234  001CB8  6F79               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9238                           ;	Return value of _ToMainHigh_sendmsg is never used
  9239  001CBA  0103               	movlb	3	; () banked
  9240  001CBC  0E03               	movlw	high _ToMainHigh_MQ
  9241  001CBE  0100               	movlb	0	; () banked
  9242  001CC0  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9243  001CC2  0103               	movlb	3	; () banked
  9244  001CC4  0E00               	movlw	low _ToMainHigh_MQ
  9245  001CC6  0100               	movlb	0	; () banked
  9246  001CC8  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  9247  001CCA  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  9248  001CCE  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9249  001CD2  0100               	movlb	0	; () banked
  9250  001CD4  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9251  001CD8  0100               	movlb	0	; () banked
  9252  001CDA  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9253  001CDE  ECD7  F008         	call	i2_send_msg	;wreg free
  9254  001CE2  0012               	return	
  9255  001CE4                     __end_of_ToMainHigh_sendmsg:
  9256                           	opt stack 0
  9257                           pclatu	equ	0xFFB
  9258                           pclath	equ	0xFFA
  9259                           tblptru	equ	0xFF8
  9260                           tblptrh	equ	0xFF7
  9261                           tblptrl	equ	0xFF6
  9262                           tablat	equ	0xFF5
  9263                           prodh	equ	0xFF4
  9264                           prodl	equ	0xFF3
  9265                           intcon	equ	0xFF2
  9266                           postinc0	equ	0xFEE
  9267                           fsr0h	equ	0xFEA
  9268                           fsr0l	equ	0xFE9
  9269                           wreg	equ	0xFE8
  9270                           indf1	equ	0xFE7
  9271                           fsr1h	equ	0xFE2
  9272                           fsr1l	equ	0xFE1
  9273                           bsr	equ	0xFE0
  9274                           indf2	equ	0xFDF
  9275                           postinc2	equ	0xFDE
  9276                           postdec2	equ	0xFDD
  9277                           fsr2h	equ	0xFDA
  9278                           fsr2l	equ	0xFD9
  9279                           status	equ	0xFD8
  9280                           
  9281 ;; *************** function i2_send_msg *****************
  9282 ;; Defined at:
  9283 ;;		line 24 in file "../src/messages.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9286 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  9287 ;;  length          1   12[BANK0 ] unsigned char 
  9288 ;;  msgtype         1   13[BANK0 ] unsigned char 
  9289 ;;  data            2   14[BANK0 ] PTR void 
  9290 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  9291 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9292 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  9293 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  9296 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9297 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  9298 ;;  send_msg        2   17[BANK0 ] unsigned int 
  9299 ;;  send_msg        1   19[BANK0 ] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  1    wreg      char 
  9302 ;; Registers used:
  9303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9309 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9310 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9311 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9312 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9313 ;;Total ram usage:       12 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    1
  9316 ;; This function calls:
  9317 ;;		i2_memcpy
  9318 ;; This function is called by:
  9319 ;;		_ToMainHigh_sendmsg
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text53
  9324  0011AE                     __ptext53:
  9325                           	opt stack 0
  9326  0011AE                     i2_send_msg:
  9327                           	opt stack 16
  9328                           
  9329                           ;messages.c: 25: unsigned char slot;
  9330                           ;messages.c: 27: msg *qmsg;
  9331                           ;messages.c: 28: size_t tlength = length;
  9332                           
  9333                           ;incstack = 0
  9334  0011AE  0100               	movlb	0	; () banked
  9335  0011B0  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  9336  0011B4  0100               	movlb	0	; () banked
  9337  0011B6  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9341  0011B8  0100               	movlb	0	; () banked
  9342  0011BA  EE20 F088          	lfsr	2,136
  9343  0011BE  0100               	movlb	0	; () banked
  9344  0011C0  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9345  0011C2  26D9               	addwf	fsr2l,f,c
  9346  0011C4  0100               	movlb	0	; () banked
  9347  0011C6  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9348  0011C8  22DA               	addwfc	fsr2h,f,c
  9349  0011CA  50DF               	movf	indf2,w,c
  9350  0011CC  0100               	movlb	0	; () banked
  9351  0011CE  6F73               	movwf	i2send_msg@slot& (0+255),b
  9352                           
  9353                           ; BSR set to: 0
  9354                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9355  0011D0  0100               	movlb	0	; () banked
  9356  0011D2  5173               	movf	i2send_msg@slot& (0+255),w,b
  9357  0011D4  0D11               	mullw	17
  9358  0011D6  50F3               	movf	prodl,w,c
  9359  0011D8  0100               	movlb	0	; () banked
  9360  0011DA  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  9361  0011DC  0100               	movlb	0	; () banked
  9362  0011DE  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  9363  0011E0  50F4               	movf	prodh,w,c
  9364  0011E2  0100               	movlb	0	; () banked
  9365  0011E4  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9366  0011E6  0100               	movlb	0	; () banked
  9367  0011E8  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;messages.c: 41: if (qmsg->full != 0) {
  9371  0011EA  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9372  0011EE  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9373  0011F2  50DF               	movf	indf2,w,c
  9374  0011F4  B4D8               	btfsc	status,2,c
  9375  0011F6  D002               	goto	i2l2475
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;messages.c: 42: return (-1);
  9379  0011F8  0EFF               	movlw	255
  9380  0011FA  0012               	return	
  9381  0011FC                     i2l2475:
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;messages.c: 43: }
  9385                           ;messages.c: 46: qmsg->length = length;
  9386  0011FC  0100               	movlb	0	; () banked
  9387  0011FE  EE20 F001          	lfsr	2,1
  9388  001202  0100               	movlb	0	; () banked
  9389  001204  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  9390  001206  26D9               	addwf	fsr2l,f,c
  9391  001208  0100               	movlb	0	; () banked
  9392  00120A  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9393  00120C  22DA               	addwfc	fsr2h,f,c
  9394  00120E  0100               	movlb	0	; () banked
  9395  001210  C06C  FFDF         	movff	i2send_msg@length,indf2
  9396                           
  9397                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9398  001214  0100               	movlb	0	; () banked
  9399  001216  EE20 F002          	lfsr	2,2
  9400  00121A  0100               	movlb	0	; () banked
  9401  00121C  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  9402  00121E  26D9               	addwf	fsr2l,f,c
  9403  001220  0100               	movlb	0	; () banked
  9404  001222  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9405  001224  22DA               	addwfc	fsr2h,f,c
  9406  001226  0100               	movlb	0	; () banked
  9407  001228  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9411  00122C  0E03               	movlw	3
  9412  00122E  0100               	movlb	0	; () banked
  9413  001230  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  9414  001232  0100               	movlb	0	; () banked
  9415  001234  6F60               	movwf	i2memcpy@d1& (0+255),b
  9416  001236  0E00               	movlw	0
  9417  001238  0100               	movlb	0	; () banked
  9418  00123A  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9419  00123C  0100               	movlb	0	; () banked
  9420  00123E  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  9421  001240  0100               	movlb	0	; () banked
  9422  001242  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9423  001246  0100               	movlb	0	; () banked
  9424  001248  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  9425  00124C  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  9426  001250  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9427  001254  EC05  F00D         	call	i2_memcpy	;wreg free
  9428                           
  9429                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  9430  001258  0100               	movlb	0	; () banked
  9431  00125A  EE20 F088          	lfsr	2,136
  9432  00125E  0100               	movlb	0	; () banked
  9433  001260  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9434  001262  26D9               	addwf	fsr2l,f,c
  9435  001264  0100               	movlb	0	; () banked
  9436  001266  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9437  001268  22DA               	addwfc	fsr2h,f,c
  9438  00126A  0100               	movlb	0	; () banked
  9439  00126C  EE10 F088          	lfsr	1,136
  9440  001270  0100               	movlb	0	; () banked
  9441  001272  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9442  001274  26E1               	addwf	fsr1l,f,c
  9443  001276  0100               	movlb	0	; () banked
  9444  001278  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9445  00127A  22E2               	addwfc	fsr1h,f,c
  9446  00127C  50E7               	movf	indf1,w,c
  9447  00127E  0100               	movlb	0	; () banked
  9448  001280  6F70               	movwf	??i2_send_msg& (0+255),b
  9449  001282  0100               	movlb	0	; () banked
  9450  001284  2970               	incf	??i2_send_msg& (0+255),w,b
  9451  001286  0B07               	andlw	7
  9452  001288  6EDF               	movwf	indf2,c
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;messages.c: 59: qmsg->full = 1;
  9456  00128A  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9457  00128E  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9458  001292  0E01               	movlw	1
  9459  001294  6EDF               	movwf	indf2,c
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;messages.c: 60: return (1);
  9463  001296  0E01               	movlw	1
  9464  001298  0012               	return	
  9465  00129A                     __end_ofi2_send_msg:
  9466                           	opt stack 0
  9467                           pclatu	equ	0xFFB
  9468                           pclath	equ	0xFFA
  9469                           tblptru	equ	0xFF8
  9470                           tblptrh	equ	0xFF7
  9471                           tblptrl	equ	0xFF6
  9472                           tablat	equ	0xFF5
  9473                           prodh	equ	0xFF4
  9474                           prodl	equ	0xFF3
  9475                           intcon	equ	0xFF2
  9476                           postinc0	equ	0xFEE
  9477                           fsr0h	equ	0xFEA
  9478                           fsr0l	equ	0xFE9
  9479                           wreg	equ	0xFE8
  9480                           indf1	equ	0xFE7
  9481                           fsr1h	equ	0xFE2
  9482                           fsr1l	equ	0xFE1
  9483                           bsr	equ	0xFE0
  9484                           indf2	equ	0xFDF
  9485                           postinc2	equ	0xFDE
  9486                           postdec2	equ	0xFDD
  9487                           fsr2h	equ	0xFDA
  9488                           fsr2l	equ	0xFD9
  9489                           status	equ	0xFD8
  9490                           
  9491 ;; *************** function i2_memcpy *****************
  9492 ;; Defined at:
  9493 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  d1              2    0[BANK0 ] PTR void 
  9496 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9497 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9498 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9499 ;;  s1              2    2[BANK0 ] PTR const void 
  9500 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9501 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9502 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  9503 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9504 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  9505 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  9506 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9507 ;;  n               2    4[BANK0 ] unsigned int 
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9510 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9511 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9512 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@move_msg(14), uart_receive_interrupt_handler@message_count(1)
      +, 
  9513 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9514 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  9515 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  9516 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9517 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9518 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9519 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9520 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  2    0[BANK0 ] PTR void 
  9523 ;; Registers used:
  9524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9530 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9531 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9533 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9534 ;;Total ram usage:       10 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		i2_send_msg
  9540 ;;		i2_recv_msg
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           	psect	text54
  9545  001A0A                     __ptext54:
  9546                           	opt stack 0
  9547  001A0A                     i2_memcpy:
  9548                           	opt stack 16
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;incstack = 0
  9552  001A0A  0100               	movlb	0	; () banked
  9553  001A0C  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9554  001A10  0100               	movlb	0	; () banked
  9555  001A12  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  9556  001A16  0100               	movlb	0	; () banked
  9557  001A18  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9558  001A1C  0100               	movlb	0	; () banked
  9559  001A1E  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  9560  001A22  D010               	goto	i2l2359
  9561  001A24                     i2l2353:
  9562                           
  9563                           ; BSR set to: 0
  9564  001A24  C068  FFD9         	movff	i2memcpy@s,fsr2l
  9565  001A28  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  9566  001A2C  C066  FFE1         	movff	i2memcpy@d,fsr1l
  9567  001A30  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  9568  001A34  CFDF FFE7          	movff	indf2,indf1
  9569                           
  9570                           ; BSR set to: 0
  9571  001A38  0100               	movlb	0	; () banked
  9572  001A3A  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  9573  001A3C  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  9574                           
  9575                           ; BSR set to: 0
  9576  001A3E  0100               	movlb	0	; () banked
  9577  001A40  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  9578  001A42  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  9579  001A44                     i2l2359:
  9580                           
  9581                           ; BSR set to: 0
  9582  001A44  0100               	movlb	0	; () banked
  9583  001A46  0764               	decf	i2memcpy@n& (0+255),f,b
  9584  001A48  A0D8               	btfss	status,0,c
  9585  001A4A  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  9586  001A4C  0100               	movlb	0	; () banked
  9587  001A4E  2964               	incf	i2memcpy@n& (0+255),w,b
  9588  001A50  B4D8               	btfsc	status,2,c
  9589  001A52  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  9590  001A54  B4D8               	btfsc	status,2,c
  9591                           
  9592                           ; BSR set to: 0
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;	Return value of i2_memcpy is never used
  9596  001A56  0012               	return	
  9597  001A58  D7E5               	goto	i2l2353
  9598  001A5A                     __end_ofi2_memcpy:
  9599                           	opt stack 0
  9600                           pclatu	equ	0xFFB
  9601                           pclath	equ	0xFFA
  9602                           tblptru	equ	0xFF8
  9603                           tblptrh	equ	0xFF7
  9604                           tblptrl	equ	0xFF6
  9605                           tablat	equ	0xFF5
  9606                           prodh	equ	0xFF4
  9607                           prodl	equ	0xFF3
  9608                           intcon	equ	0xFF2
  9609                           postinc0	equ	0xFEE
  9610                           fsr0h	equ	0xFEA
  9611                           fsr0l	equ	0xFE9
  9612                           wreg	equ	0xFE8
  9613                           indf1	equ	0xFE7
  9614                           fsr1h	equ	0xFE2
  9615                           fsr1l	equ	0xFE1
  9616                           bsr	equ	0xFE0
  9617                           indf2	equ	0xFDF
  9618                           postinc2	equ	0xFDE
  9619                           postdec2	equ	0xFDD
  9620                           fsr2h	equ	0xFDA
  9621                           fsr2l	equ	0xFD9
  9622                           status	equ	0xFD8
  9623                           
  9624 ;; *************** function _SleepIfOkay *****************
  9625 ;; Defined at:
  9626 ;;		line 226 in file "../src/messages.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;		None
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;		None
  9631 ;; Return value:  Size  Location     Type
  9632 ;;		None               void
  9633 ;; Registers used:
  9634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9644 ;;Total ram usage:        0 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:    2
  9647 ;; This function calls:
  9648 ;;		_check_msg
  9649 ;;		_enter_sleep_mode
  9650 ;;		_in_high_int
  9651 ;;		_in_low_int
  9652 ;; This function is called by:
  9653 ;;		_InterruptHandlerHigh
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text55
  9658  001902                     __ptext55:
  9659                           	opt stack 0
  9660  001902                     _SleepIfOkay:
  9661                           	opt stack 17
  9662                           
  9663                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;incstack = 0
  9667  001902  0100               	movlb	0	; () banked
  9668  001904  67B1               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9669  001906  D001               	goto	i2l2907
  9670  001908  0012               	return	
  9671  00190A                     i2l2907:
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;messages.c: 230: }
  9675                           ;messages.c: 233: if (in_low_int()) {
  9676  00190A  EC4D  F00D         	call	_in_low_int	;wreg free
  9677  00190E  0100               	movlb	0	; () banked
  9678  001910  5163               	movf	(?_in_low_int+1)& (0+255),w,b
  9679  001912  0100               	movlb	0	; () banked
  9680  001914  1162               	iorwf	?_in_low_int& (0+255),w,b
  9681  001916  A4D8               	btfss	status,2,c
  9682  001918  0012               	return	
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;messages.c: 235: }
  9686                           ;messages.c: 238: if (!in_high_int()) {
  9687                           
  9688                           ; BSR set to: 0
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;messages.c: 234: return;
  9692  00191A  EC05  F00F         	call	_in_high_int	;wreg free
  9693  00191E  0100               	movlb	0	; () banked
  9694  001920  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9695  001922  0100               	movlb	0	; () banked
  9696  001924  1160               	iorwf	?_in_high_int& (0+255),w,b
  9697  001926  B4D8               	btfsc	status,2,c
  9698  001928  0012               	return	
  9699                           
  9700                           ; BSR set to: 0
  9701                           ;messages.c: 240: }
  9702                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9703                           
  9704                           ; BSR set to: 0
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;messages.c: 239: return;
  9708  00192A  0103               	movlb	3	; () banked
  9709  00192C  0E03               	movlw	high _ToMainHigh_MQ
  9710  00192E  0100               	movlb	0	; () banked
  9711  001930  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9712  001932  0103               	movlb	3	; () banked
  9713  001934  0E00               	movlw	low _ToMainHigh_MQ
  9714  001936  0100               	movlb	0	; () banked
  9715  001938  6F60               	movwf	check_msg@qptr& (0+255),b
  9716  00193A  EC14  F00E         	call	_check_msg	;wreg free
  9717  00193E  0900               	iorlw	0
  9718  001940  A4D8               	btfss	status,2,c
  9719  001942  0012               	return	
  9720                           
  9721                           ;messages.c: 247: }
  9722                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9723                           
  9724                           ;messages.c: 246: return;
  9725  001944  0102               	movlb	2	; () banked
  9726  001946  0E02               	movlw	high _ToMainLow_MQ
  9727  001948  0100               	movlb	0	; () banked
  9728  00194A  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9729  00194C  0102               	movlb	2	; () banked
  9730  00194E  0E00               	movlw	low _ToMainLow_MQ
  9731  001950  0100               	movlb	0	; () banked
  9732  001952  6F60               	movwf	check_msg@qptr& (0+255),b
  9733  001954  EC14  F00E         	call	_check_msg	;wreg free
  9734  001958  0900               	iorlw	0
  9735  00195A  B4D8               	btfsc	status,2,c
  9736                           
  9737                           ;messages.c: 250: }
  9738                           ;messages.c: 251: enter_sleep_mode();
  9739                           
  9740                           ;messages.c: 249: return;
  9741  00195C  EC41  F00F         	call	_enter_sleep_mode	;wreg free
  9742  001960  0012               	return	
  9743  001962                     __end_of_SleepIfOkay:
  9744                           	opt stack 0
  9745                           pclatu	equ	0xFFB
  9746                           pclath	equ	0xFFA
  9747                           tblptru	equ	0xFF8
  9748                           tblptrh	equ	0xFF7
  9749                           tblptrl	equ	0xFF6
  9750                           tablat	equ	0xFF5
  9751                           prodh	equ	0xFF4
  9752                           prodl	equ	0xFF3
  9753                           intcon	equ	0xFF2
  9754                           postinc0	equ	0xFEE
  9755                           fsr0h	equ	0xFEA
  9756                           fsr0l	equ	0xFE9
  9757                           wreg	equ	0xFE8
  9758                           indf1	equ	0xFE7
  9759                           fsr1h	equ	0xFE2
  9760                           fsr1l	equ	0xFE1
  9761                           bsr	equ	0xFE0
  9762                           indf2	equ	0xFDF
  9763                           postinc2	equ	0xFDE
  9764                           postdec2	equ	0xFDD
  9765                           fsr2h	equ	0xFDA
  9766                           fsr2l	equ	0xFD9
  9767                           status	equ	0xFD8
  9768                           
  9769 ;; *************** function _in_low_int *****************
  9770 ;; Defined at:
  9771 ;;		line 33 in file "../src/interrupts.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;		None
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;		None
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  2    2[BANK0 ] int 
  9778 ;; Registers used:
  9779 ;;		wreg, status,2, status,0, cstack
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9789 ;;Total ram usage:        2 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    1
  9792 ;; This function calls:
  9793 ;;		_in_high_int
  9794 ;; This function is called by:
  9795 ;;		_SleepIfOkay
  9796 ;;		_in_main
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text56
  9801  001A9A                     __ptext56:
  9802                           	opt stack 0
  9803  001A9A                     _in_low_int:
  9804                           	opt stack 17
  9805                           
  9806                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9807                           
  9808                           ;incstack = 0
  9809  001A9A  ACF2               	btfss	intcon,6,c	;volatile
  9810  001A9C  D007               	goto	i2l2527
  9811                           
  9812                           ;interrupts.c: 35: return (0);
  9813  001A9E  0E00               	movlw	0
  9814  001AA0  0100               	movlb	0	; () banked
  9815  001AA2  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9816  001AA4  0E00               	movlw	0
  9817  001AA6  0100               	movlb	0	; () banked
  9818  001AA8  6F62               	movwf	?_in_low_int& (0+255),b
  9819  001AAA  0012               	return	
  9820  001AAC                     i2l2527:
  9821  001AAC  EC05  F00F         	call	_in_high_int	;wreg free
  9822  001AB0  0100               	movlb	0	; () banked
  9823  001AB2  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9824  001AB4  0100               	movlb	0	; () banked
  9825  001AB6  1160               	iorwf	?_in_high_int& (0+255),w,b
  9826  001AB8  B4D8               	btfsc	status,2,c
  9827  001ABA  D007               	goto	i2l2535
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;interrupts.c: 37: return (0);
  9831  001ABC  0E00               	movlw	0
  9832  001ABE  0100               	movlb	0	; () banked
  9833  001AC0  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9834  001AC2  0E00               	movlw	0
  9835  001AC4  0100               	movlb	0	; () banked
  9836  001AC6  6F62               	movwf	?_in_low_int& (0+255),b
  9837  001AC8  0012               	return	
  9838  001ACA                     i2l2535:
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;interrupts.c: 39: return (1);
  9842  001ACA  0E00               	movlw	0
  9843  001ACC  0100               	movlb	0	; () banked
  9844  001ACE  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9845  001AD0  0E01               	movlw	1
  9846  001AD2  0100               	movlb	0	; () banked
  9847  001AD4  6F62               	movwf	?_in_low_int& (0+255),b
  9848  001AD6  0012               	return	
  9849  001AD8                     __end_of_in_low_int:
  9850                           	opt stack 0
  9851                           pclatu	equ	0xFFB
  9852                           pclath	equ	0xFFA
  9853                           tblptru	equ	0xFF8
  9854                           tblptrh	equ	0xFF7
  9855                           tblptrl	equ	0xFF6
  9856                           tablat	equ	0xFF5
  9857                           prodh	equ	0xFF4
  9858                           prodl	equ	0xFF3
  9859                           intcon	equ	0xFF2
  9860                           postinc0	equ	0xFEE
  9861                           fsr0h	equ	0xFEA
  9862                           fsr0l	equ	0xFE9
  9863                           wreg	equ	0xFE8
  9864                           indf1	equ	0xFE7
  9865                           fsr1h	equ	0xFE2
  9866                           fsr1l	equ	0xFE1
  9867                           bsr	equ	0xFE0
  9868                           indf2	equ	0xFDF
  9869                           postinc2	equ	0xFDE
  9870                           postdec2	equ	0xFDD
  9871                           fsr2h	equ	0xFDA
  9872                           fsr2l	equ	0xFD9
  9873                           status	equ	0xFD8
  9874                           
  9875 ;; *************** function _in_high_int *****************
  9876 ;; Defined at:
  9877 ;;		line 25 in file "../src/interrupts.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;		None
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  2    0[BANK0 ] int 
  9884 ;; Registers used:
  9885 ;;		wreg, status,2
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9894 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9895 ;;Total ram usage:        2 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_in_low_int
  9901 ;;		_SleepIfOkay
  9902 ;;		_in_main
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           	psect	text57
  9907  001E0A                     __ptext57:
  9908                           	opt stack 0
  9909  001E0A                     _in_high_int:
  9910                           	opt stack 17
  9911                           
  9912                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;incstack = 0
  9916  001E0A  0E00               	movlw	0
  9917  001E0C  AEF2               	btfss	intcon,7,c	;volatile
  9918  001E0E  0E01               	movlw	1
  9919  001E10  0100               	movlb	0	; () banked
  9920  001E12  6F60               	movwf	?_in_high_int& (0+255),b
  9921  001E14  0100               	movlb	0	; () banked
  9922  001E16  6B61               	clrf	(?_in_high_int+1)& (0+255),b
  9923  001E18  0012               	return	
  9924  001E1A                     __end_of_in_high_int:
  9925                           	opt stack 0
  9926                           pclatu	equ	0xFFB
  9927                           pclath	equ	0xFFA
  9928                           tblptru	equ	0xFF8
  9929                           tblptrh	equ	0xFF7
  9930                           tblptrl	equ	0xFF6
  9931                           tablat	equ	0xFF5
  9932                           prodh	equ	0xFF4
  9933                           prodl	equ	0xFF3
  9934                           intcon	equ	0xFF2
  9935                           postinc0	equ	0xFEE
  9936                           fsr0h	equ	0xFEA
  9937                           fsr0l	equ	0xFE9
  9938                           wreg	equ	0xFE8
  9939                           indf1	equ	0xFE7
  9940                           fsr1h	equ	0xFE2
  9941                           fsr1l	equ	0xFE1
  9942                           bsr	equ	0xFE0
  9943                           indf2	equ	0xFDF
  9944                           postinc2	equ	0xFDE
  9945                           postdec2	equ	0xFDD
  9946                           fsr2h	equ	0xFDA
  9947                           fsr2l	equ	0xFD9
  9948                           status	equ	0xFD8
  9949                           
  9950 ;; *************** function _enter_sleep_mode *****************
  9951 ;; Defined at:
  9952 ;;		line 202 in file "../src/messages.c"
  9953 ;; Parameters:    Size  Location     Type
  9954 ;;		None
  9955 ;; Auto vars:     Size  Location     Type
  9956 ;;		None
  9957 ;; Return value:  Size  Location     Type
  9958 ;;		None               void
  9959 ;; Registers used:
  9960 ;;		None
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9970 ;;Total ram usage:        0 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; This function calls:
  9973 ;;		Nothing
  9974 ;; This function is called by:
  9975 ;;		_SleepIfOkay
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text58
  9980  001E82                     __ptext58:
  9981                           	opt stack 0
  9982  001E82                     _enter_sleep_mode:
  9983                           	opt stack 18
  9984                           
  9985                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;incstack = 0
  9989  001E82  8ED3               	bsf	4051,7,c	;volatile
  9990  001E84  0003               	sleep		;# 
  9991  001E86  0012               	return	
  9992  001E88                     __end_of_enter_sleep_mode:
  9993                           	opt stack 0
  9994                           pclatu	equ	0xFFB
  9995                           pclath	equ	0xFFA
  9996                           tblptru	equ	0xFF8
  9997                           tblptrh	equ	0xFF7
  9998                           tblptrl	equ	0xFF6
  9999                           tablat	equ	0xFF5
 10000                           prodh	equ	0xFF4
 10001                           prodl	equ	0xFF3
 10002                           intcon	equ	0xFF2
 10003                           postinc0	equ	0xFEE
 10004                           fsr0h	equ	0xFEA
 10005                           fsr0l	equ	0xFE9
 10006                           wreg	equ	0xFE8
 10007                           indf1	equ	0xFE7
 10008                           fsr1h	equ	0xFE2
 10009                           fsr1l	equ	0xFE1
 10010                           bsr	equ	0xFE0
 10011                           indf2	equ	0xFDF
 10012                           postinc2	equ	0xFDE
 10013                           postdec2	equ	0xFDD
 10014                           fsr2h	equ	0xFDA
 10015                           fsr2l	equ	0xFD9
 10016                           status	equ	0xFD8
 10017                           
 10018 ;; *************** function _check_msg *****************
 10019 ;; Defined at:
 10020 ;;		line 220 in file "../src/messages.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 10023 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      unsigned char 
 10028 ;; Registers used:
 10029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10037 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10038 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10039 ;;Total ram usage:        3 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; This function calls:
 10042 ;;		Nothing
 10043 ;; This function is called by:
 10044 ;;		_SleepIfOkay
 10045 ;;		_block_on_To_msgqueues
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text59
 10050  001C28                     __ptext59:
 10051                           	opt stack 0
 10052  001C28                     _check_msg:
 10053                           	opt stack 18
 10054                           
 10055                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
 10056                           
 10057                           ;incstack = 0
 10058  001C28  0100               	movlb	0	; () banked
 10059  001C2A  EE20 F089          	lfsr	2,137
 10060  001C2E  0100               	movlb	0	; () banked
 10061  001C30  5160               	movf	check_msg@qptr& (0+255),w,b
 10062  001C32  26D9               	addwf	fsr2l,f,c
 10063  001C34  0100               	movlb	0	; () banked
 10064  001C36  5161               	movf	(check_msg@qptr+1)& (0+255),w,b
 10065  001C38  22DA               	addwfc	fsr2h,f,c
 10066  001C3A  50DF               	movf	indf2,w,c
 10067  001C3C  0100               	movlb	0	; () banked
 10068  001C3E  6F62               	movwf	??_check_msg& (0+255),b
 10069  001C40  0100               	movlb	0	; () banked
 10070  001C42  5162               	movf	??_check_msg& (0+255),w,b
 10071  001C44  0D11               	mullw	17
 10072  001C46  50F3               	movf	prodl,w,c
 10073  001C48  0100               	movlb	0	; () banked
 10074  001C4A  2560               	addwf	check_msg@qptr& (0+255),w,b
 10075  001C4C  6ED9               	movwf	fsr2l,c
 10076  001C4E  50F4               	movf	prodh,w,c
 10077  001C50  0100               	movlb	0	; () banked
 10078  001C52  2161               	addwfc	(check_msg@qptr+1)& (0+255),w,b
 10079  001C54  6EDA               	movwf	fsr2h,c
 10080  001C56  50DF               	movf	indf2,w,c
 10081  001C58  0012               	return	
 10082  001C5A                     __end_of_check_msg:
 10083                           	opt stack 0
 10084  0000                     pclatu	equ	0xFFB
 10085                           pclath	equ	0xFFA
 10086                           tblptru	equ	0xFF8
 10087                           tblptrh	equ	0xFF7
 10088                           tblptrl	equ	0xFF6
 10089                           tablat	equ	0xFF5
 10090                           prodh	equ	0xFF4
 10091                           prodl	equ	0xFF3
 10092                           intcon	equ	0xFF2
 10093                           postinc0	equ	0xFEE
 10094                           fsr0h	equ	0xFEA
 10095                           fsr0l	equ	0xFE9
 10096                           wreg	equ	0xFE8
 10097                           indf1	equ	0xFE7
 10098                           fsr1h	equ	0xFE2
 10099                           fsr1l	equ	0xFE1
 10100                           bsr	equ	0xFE0
 10101                           indf2	equ	0xFDF
 10102                           postinc2	equ	0xFDE
 10103                           postdec2	equ	0xFDD
 10104                           fsr2h	equ	0xFDA
 10105                           fsr2l	equ	0xFD9
 10106                           status	equ	0xFD8
 10107                           pclatu	equ	0xFFB
 10108                           pclath	equ	0xFFA
 10109                           tblptru	equ	0xFF8
 10110                           tblptrh	equ	0xFF7
 10111                           tblptrl	equ	0xFF6
 10112                           tablat	equ	0xFF5
 10113                           prodh	equ	0xFF4
 10114                           prodl	equ	0xFF3
 10115                           intcon	equ	0xFF2
 10116                           postinc0	equ	0xFEE
 10117                           fsr0h	equ	0xFEA
 10118                           fsr0l	equ	0xFE9
 10119                           wreg	equ	0xFE8
 10120                           indf1	equ	0xFE7
 10121                           fsr1h	equ	0xFE2
 10122                           fsr1l	equ	0xFE1
 10123                           bsr	equ	0xFE0
 10124                           indf2	equ	0xFDF
 10125                           postinc2	equ	0xFDE
 10126                           postdec2	equ	0xFDD
 10127                           fsr2h	equ	0xFDA
 10128                           fsr2l	equ	0xFD9
 10129                           status	equ	0xFD8
 10130                           
 10131                           	psect	param0
 10132  0000                     pclatu	equ	0xFFB
 10133                           pclath	equ	0xFFA
 10134                           tblptru	equ	0xFF8
 10135                           tblptrh	equ	0xFF7
 10136                           tblptrl	equ	0xFF6
 10137                           tablat	equ	0xFF5
 10138                           prodh	equ	0xFF4
 10139                           prodl	equ	0xFF3
 10140                           intcon	equ	0xFF2
 10141                           postinc0	equ	0xFEE
 10142                           fsr0h	equ	0xFEA
 10143                           fsr0l	equ	0xFE9
 10144                           wreg	equ	0xFE8
 10145                           indf1	equ	0xFE7
 10146                           fsr1h	equ	0xFE2
 10147                           fsr1l	equ	0xFE1
 10148                           bsr	equ	0xFE0
 10149                           indf2	equ	0xFDF
 10150                           postinc2	equ	0xFDE
 10151                           postdec2	equ	0xFDD
 10152                           fsr2h	equ	0xFDA
 10153                           fsr2l	equ	0xFD9
 10154                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         641
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      95
    BANK0           160     61     118
    BANK1           256    146     160
    BANK2           256      0     138
    BANK3           256      0     138
    BANK4           256      0     138
    BANK5           256      0     138
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    retrieve_sensor_values@sensor_bank_ventril	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_ventril(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_front	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_front(COMRAM[14]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK2[14]), ToMainHigh_MQ.data(BANK3[14]), FromMainLow_MQ.data(BANK4[14]), FromMainHigh_MQ.data(BANK5[14]), 
		 -> ToMainLow_MQ.queue.data(BANK2[14]), ToMainHigh_MQ.queue.data(BANK3[14]), FromMainHigh_MQ.queue.data(BANK5[14]), FromMainLow_MQ.queue.data(BANK4[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@move_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), 
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK2[14]), ToMainHigh_MQ.data(BANK3[14]), FromMainLow_MQ.data(BANK4[14]), FromMainHigh_MQ.data(BANK5[14]), 
		 -> ToMainLow_MQ.queue.data(BANK2[14]), ToMainHigh_MQ.queue.data(BANK3[14]), FromMainHigh_MQ.queue.data(BANK5[14]), FromMainLow_MQ.queue.data(BANK4[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@move_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), 
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    uart_frame_message@inner	PTR unsigned char  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    uart_frame_message@outer	PTR unsigned char  size(2) Largest target is 18
		 -> uart_transmit_interrupt_handler@message(BANK0[18]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> timer1_lthread@move_msg(BANK1[14]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_side	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_side(BANK0[14]), 

    i2c_configure_slave@ptr_thingy	PTR unsigned char  size(2) Largest target is 1
		 -> main@need_sensor_data(BANK1[1]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@need_sensor_data(BANK1[1]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@sensor_bank_side(BANK0[14]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> timer1_lthread@move_msg(BANK1[14]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 15
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), main@msgbuffer(BANK1[15]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    sp__memcpy	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@move_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_retrieve_sensor_values
    _retrieve_sensor_values->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                98    98      0   16674
                                             52 BANK1     94    94      0
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      23    15      8    6224
                                             29 BANK1     23    15      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (2) _send_uart_message                                    3     1      2    2835
                                             26 BANK1      3     1      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _FromMainLow_sendmsg                                  4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (4) _send_msg                                            12     6      6    1798
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  3     1      2     127
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1829
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     158
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    5357
                                             56 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                     16    16      0    1629
                                             29 COMRAM    16    16      0
                _FromMainLow_recvmsg
                 _uart_frame_message
 ---------------------------------------------------------------------------------
 (8) _uart_frame_message                                   8     4      4     528
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4     907
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      30    30      0    2088
                                             26 COMRAM    30    30      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    1640
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    1521
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    5548
                                             47 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    2441
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    12    12      0    2851
                                             37 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                              _blip4
                       _handle_start
             _retrieve_sensor_values
                             i2_blip
                            i2_blip1
                            i2_blip2
                            i2_blip3
 ---------------------------------------------------------------------------------
 (13) i2_blip3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _retrieve_sensor_values                             10     4      6    1246
                                             29 BANK0      8     2      6
               _FromMainHigh_recvmsg
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1013
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7     735
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _blip4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1203
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     713
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
     _blink0
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
     _uart_frame_message

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _blip4
     _handle_start
     _retrieve_sensor_values
       _FromMainHigh_recvmsg
         i2_recv_msg
           i2_memcpy
     i2_blip
     i2_blip1
     i2_blip2
     i2_blip3
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      8A      16       53.9%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      8A      14       53.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8A      12       53.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      8A      10       53.9%
BITBANK1           100      0       0       7        0.0%
BANK1              100     92      A0       8       62.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      76       5       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39D       6        0.0%
DATA                 0      0     39D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Oct 17 17:15:54 2014

                                 ??_debug_configure 0100                     __size_of_retrieve_sensor_values 003A  
                          _MQ_Main_Willing_to_block 00B1                                         _SSPSTATbits 000FC7  
                uart_receive_interrupt_handler@done 004B                           __end_of_ToMainLow_recvmsg 1BBC  
                                                bsr 000FE0                           __end_of_ToMainLow_sendmsg 1D82  
                                      __CFG_CP0$OFF 000000                                   i2recv_msg@msgtype 006D  
                                 i2recv_msg@tlength 0074                                ?_FromMainLow_recvmsg 0019  
                                               l114 0930                                                 l567 1D58  
                                               l568 1D5A                                                 l595 1B0A  
                                               l596 1B0C                                ?_FromMainLow_sendmsg 0116  
                              __size_of_WriteTimer0 0012                                __size_of_WriteTimer1 0012  
                                  ??_uart_configure 0100                                      _FromMainLow_MQ 0400  
                                               prod 000FF3                                                 wreg 000FE8  
                                        _TXSTA1bits 000FAD                                        __CFG_IESO$ON 000000  
                                      ?_in_high_int 0060                                     ReadTimer1@timer 0003  
                               i2recv_msg@maxlength 006C                                                l1144 18F8  
                                              l3507 187A                                                l3525 0EE6  
                                              l3541 0FA0                                                l3465 19F4  
                                              l3459 19D4                                                l3563 18EA  
                                              l3555 18B4                                                l3731 0C4A  
                                              l3723 0C12                                                l3715 0BDA  
                                              l3707 0BA2                                                l3557 18C0  
                                              l3821 0936                                                l3805 08AE  
                                              l3479 1110                                                l3559 18C6  
                                              l3735 0C58                                                l3815 08EE  
                                              l3823 094E                                                l3737 0C82  
                                              l3841 09BC                                                l3809 08BC  
                                              l3691 0B32                                                l3843 09FE  
                                              l3687 0B0C                                                l3863 0A62  
                                              l3857 0A42                                                l3849 0A1E  
                                              l3699 0B6A                                                l3875 0AA2  
                                              l3883 0AC4                                                l3869 0A82  
                                              l3879 0AB8                                                l3799 0888  
                                              _LATB 000F8A                                                i1l52 007A  
                                       main@myByte1 0143                                         main@myByte2 0144  
                                   _FromMainHigh_MQ 0500                                                _blip 1E52  
                                        i1_recv_msg 137C                                                _main 07E2  
                                              fsr0h 000FEA                                                fsr1h 000FE2  
                                              fsr0l 000FE9                                                fsr2h 000FDA  
                                              indf1 000FE7                                                fsr1l 000FE1  
                                              indf2 000FDF                                                fsr2l 000FD9  
                            __CFG_DSWDTOSC$T1OSCREF 000000                                         main@msgtype 016B  
                                        i1_send_msg 1518                                                pclat 000FFA  
                                              prodh 000FF4                                     __end_ofi2_blip1 1E72  
                                              prodl 000FF3                                     __end_ofi2_blip2 1E6A  
                                   __end_ofi2_blip3 1E62                               handle_start@data_read 0060  
                                              start 00C0                                          i2_recv_msg 0FA4  
                                        i2_send_msg 11AE                        retrieve_sensor_values@length 0083  
                         ToMainHigh_recvmsg@msgtype 0118                                      send_msg@length 010C  
                       __size_of_timer0_int_handler 006E                                       __CFG_PLLDIV$3 000000  
            uart_receive_interrupt_handler@checksum 0035                               ??_FromMainLow_recvmsg 001D  
                                             ?_blip 0001                               ??_FromMainLow_sendmsg 0119  
                                             ?_main 0001                                               _T0CON 000FD5  
                                             _T1CON 000FCD                                               i1l422 0E6A  
                                   __end_of___lwmod 1902                                          i1memcpy@d1 0001  
                                             i2l310 017A                                               i2l304 0602  
                                             i2l306 0148                                               i2l333 043A  
                                             i2l342 0610                                               i2l288 14CC  
                                        i1memcpy@s1 0003                         FromMainHigh_recvmsg@msgtype 0078  
                                             _TMR0H 000FD7                                               _TMR1H 000FCF  
                                             _TMR0L 000FD6                                               _TMR1L 000FCE  
                                             _TRISB 000F93                                               _TRISD 000F95  
                                        i2memcpy@d1 0060                                      __CFG_FCMEN$OFF 000000  
                                        i2memcpy@s1 0062                                        ?_init_queues 0001  
                         __size_of_enter_sleep_mode 0006                                               _blip1 1E4A  
                                             _blip2 1E42                                               _blip3 1E3A  
                                             _blip4 1E7A                              _retrieve_sensor_values 1B14  
       uart_receive_interrupt_handler@message_count 0034                          ToMainLow_recvmsg@maxlength 011C  
                                             main@z 0167                             timer0_lthread@msgbuffer 0106  
                                    __CFG_T1DIG$OFF 000000                             i2c_configure_slave@addr 0102  
                              main@need_sensor_data 0164                                               tablat 000FF5  
                           uart_frame_message@inner 0001                                               status 000FD8  
                           uart_frame_message@outer 0003                                    __end_ofi1_memcpy 1A9A  
                                  __end_ofi2_memcpy 1A5A                                     __initialization 1666  
                                      __end_of_blip 1E5A                                        __end_of_main 0AFA  
                                        _ReadTimer1 1DE6                         __size_of_timer1_int_handler 002C  
                        __size_of_ToMainLow_recvmsg 0036                          __size_of_ToMainLow_sendmsg 0024  
                     __size_of_FromMainHigh_recvmsg 0036                                      __CFG_OSC$HSPLL 000000  
                     __size_of_FromMainHigh_sendmsg 002E                                              ??_blip 0100  
                                            ??_main 0134                                     send_msg@msgtype 010D  
                                     __activetblptr 000002                                     send_msg@tlength 0111  
                        FromMainLow_sendmsg@msgtype 0116                                __end_of_handle_start 1518  
                                            ?_blip1 0001                                              ?_blip2 0001  
                                            ?_blip3 0001                                              ?_blip4 0001  
                                            _T1GCON 000F9A                                           ??i2_blip1 0060  
                                         ??i2_blip2 0060                                           ??i2_blip3 0060  
                                            i1l3005 0E22                                              i1l3025 0E7E  
                                            i1l3037 15F0                                              i1l2425 1A88  
                                            i1l3065 1640                                              i1l2419 1A6C  
                                            i1l2451 1550                                              i1l2515 144A  
                                            i1l2651 12D2                                              i1l3275 0070  
                                            i1l3269 0066                                              i1l2655 1300  
                                            i1l2657 1320                                              i1l2499 13C2  
                                            i1l2659 134E                                              i1l2953 0D2C  
                                            i1l2947 0D26                                              i1l2955 0D32  
                                            i2l2413 10BE                                              i1l2981 0D98  
                                            i1l2967 0D60                                              i2l2353 1A24  
                                            i1l2969 0D62                                          _OpenTimer0 1D38  
                                        _OpenTimer1 1AD8                                              i2l2621 14E8  
                                            i2l3261 1728                                              i1l2997 0DF6  
                                    __CFG_WDTEN$OFF 000000                                              i2l2535 1ACA  
                                            i2l2527 1AAC                                              i2l2359 1A44  
                                            i2l2623 1500                                              i2l3255 171E  
                                            i2l2475 11FC                                              i2l2397 1004  
                                            i2l2821 03D0                                              i2l2741 0140  
                                            i2l2815 0386                                              i2l2735 0132  
                                            i2l2817 03C8                                              i2l2761 01D2  
                                            i2l2907 190A                                              i2l2771 020C  
                                            i2l2781 024A                                              i2l2871 0672  
                                            i2l2783 028A                                              i2l2759 01A6  
                                            i2l2865 0614                                              i2l2795 030A  
                                            i2l2859 05D6                                              i2l2893 07B0  
                                            i2l2887 078A                                              i2l2879 06F8  
                                            i2l2799 0314                                              _RCREG1 000FAF  
                       __end_of_i2c_configure_slave 1B86                                       ??_SleepIfOkay 0064  
                                            _OSCCON 000FD3                                              _SPBRG1 000FB0  
                                       ?i1_recv_msg 000B                                              _SSPADD 000FC8  
                                    __CFG_WPCFG$OFF 000000                                              _SSPBUF 000FC9  
                                            _TXREG1 000FAE                                         ?i1_send_msg 000B  
                                            i2_blip 1E72                                  timer0_lthread@tptr 0100  
                                    __CFG_WPDIS$OFF 000000                             FromMainLow_recvmsg@data 001B  
                                       ?i2_recv_msg 006A                                         ?i2_send_msg 006A  
                                    __CFG_XINST$OFF 000000                          __end_of_uart_frame_message 137C  
                  ??_uart_receive_interrupt_handler 001B                     ?_uart_receive_interrupt_handler 0001  
                                   _i2c_int_handler 00C4                                              _blink0 1E88  
                                  OpenTimer0@config 0100                                              _ic_ptr 00D3  
                                         ??___lwmod 0104                                       main@msgbuffer 0145  
                                  __end_of_init_i2c 183E                                    OpenTimer1@config 0102  
                                            _memcpy 19BA                                              clear_0 166C  
                                            clear_1 1678                                              clear_2 1684  
                                            clear_3 1690                                              clear_4 169C  
                                            clear_5 16A8                                              clear_6 16B4  
                                            main@ic 016C                                    __end_of_recv_msg 0FA4  
     uart_transmit_interrupt_handler@message_status 002D                                    __end_of_send_msg 11AE  
                            timer1_lthread@move_msg 0126                                        __pdataCOMRAM 005F  
                             timer0_int_handler@val 0081                             i2c_int_handler@i2c_data 008B  
                                            tblptrh 000FF7                                              tblptrl 000FF6  
                                            tblptru 000FF8                uart_receive_interrupt_handler@msg_id 0038  
                                       init_queue@i 0102                uart_receive_interrupt_handler@status 002B  
                          ToMainLow_recvmsg@msgtype 0118                                __size_of_in_high_int 0010  
                           FromMainLow_sendmsg@data 0117                                     _debug_configure 1E28  
              uart_transmit_interrupt_handler@index 0050                                          __accesstop 0060  
                           __end_of__initialization 16DE                          __end_of_ToMainHigh_recvmsg 1BF2  
                        __end_of_ToMainHigh_sendmsg 1CE4                                 uart_frame_message@i 0008  
                                   __CFG_IOL1WAY$ON 000000                                __CFG_WPEND$PAGE_WPFP 000000  
                                  _need_sensor_data 00AF             retrieve_sensor_values@sensor_bank_front 007F  
                       __end_of_init_timer1_lthread 1DD4                                 __end_of_SleepIfOkay 1962  
                                    __pcstackCOMRAM 0001                  i2c_int_handler@sensor_bank_ventril 0192  
                                      __pidataBANK0 1E8D                                         ?_ReadTimer1 0001  
                                     __end_of_blip1 1E52                                       __end_of_blip2 1E4A  
                                     __end_of_blip3 1E42                                       __end_of_blip4 1E82  
                   send_uart_message@message_q_code 011C                                  __size_of_check_msg 0032  
                                   __CFG_DSWDTPS$G2 000000                           timer0_int_handler@msgtype 007F  
                               __size_ofi1_recv_msg 00D2                                 __size_ofi1_send_msg 00AA  
                                         ?i1_memcpy 0001                       __size_of_InterruptHandlerHigh 175E  
                       __end_of_InterruptHandlerLow 00C0                                           ?i2_memcpy 0060  
                                     _ToMainHigh_MQ 0300                                 __size_ofi2_recv_msg 011E  
                                  _enter_sleep_mode 1E82                                 __size_ofi2_send_msg 00EC  
                              timer1_lthread@length 0121                                             ??_blip1 0100  
                                           ??_blip2 0100                                             ??_blip3 0100  
                                           ??_blip4 0060                                       check_msg@qptr 0060  
                              timer1_lthread@retval 0125                                __size_of_init_queues 0058  
                                        __pbssBANK0 009D                                          __pbssBANK1 0192  
                                        __pbssBANK2 0200                                          __pbssBANK3 0300  
                                        __pbssBANK4 0400                                          __pbssBANK5 0500  
                                       ?_OpenTimer0 0001                                         ?_OpenTimer1 0100  
                                           ?i2_blip 0001                             __end_of_i2c_int_handler 07E2  
                                timer1_lthread@tptr 011D              retrieve_sensor_values@sensor_bank_side 007D  
                                           ?_blink0 0001                                   recv_msg@maxlength 010C  
                                   recv_msg@msgtype 010D                                     recv_msg@tlength 0114  
                             __size_of_handle_start 00CA                                    WriteTimer0@timer 0062  
                                           ?_memcpy 0100                                    WriteTimer1@timer 0003  
                                     ??_WriteTimer0 0062                                       ??_WriteTimer1 0003  
                           __size_of_timer0_lthread 000E                             __size_of_timer1_lthread 01E6  
                           ?_retrieve_sensor_values 007D                                          ??i1_memcpy 0007  
                                        ??i2_memcpy 0066                             __end_of_debug_configure 1E32  
                                           _SPBRGH1 000F7F                                    i1send_msg@length 000D  
                  i2c_int_handler@sensor_bank_front 0051                                             _SSPCON1 000FC6  
                                           _SSPCON2 000FC5                                             _SSPSTAT 000FC7  
                               __size_of_ReadTimer1 0012                                   __end_of_check_msg 1C5A  
                                           i2_blip1 1E6A                                             i2_blip2 1E62  
                                           i2_blip3 1E5A                                           ?_init_i2c 0100  
                                       _SleepIfOkay 1902                                   _send_uart_message 1DA2  
                   i2c_int_handler@sensor_bank_side 00C5                                     __size_ofi2_blip 0008  
                                         ?_recv_msg 010A                                          _in_low_int 1A9A  
                                      _handle_start 144E                                             __Hparam 0000  
                                         ?_send_msg 010A                                             __Lparam 0000  
                                ?_send_uart_message 011A           uart_receive_interrupt_handler@status_2231 002C  
                        __end_of_timer0_int_handler 17D4                         __end_of_FromMainLow_recvmsg 1D38  
                       __end_of_FromMainLow_sendmsg 1C88                                             ___lwmod 18A2  
                                   __size_of_blink0 0004                                     __CFG_STVREN$OFF 000000  
                               ??_send_uart_message 011C                                             __pcinit 1666  
                                   __size_of_memcpy 0050                                          _init_queue 183E  
                                           __ramtop 0F00                                 __size_of_OpenTimer0 0026  
                               __size_of_OpenTimer1 003C                                             __ptext0 07E2  
                                           __ptext1 1D82                                             __ptext2 0AFA  
                                           __ptext3 1DA2                                             __ptext4 1C5A  
                                           __ptext5 1E88                                             __ptext6 18A2  
                                           __ptext7 1C88                                             __ptext8 10C2  
                                           __ptext9 1E1A                      __end_of_retrieve_sensor_values 1B4E  
                                         _T0CONbits 000FD5                                   OpenTimer1@config1 0100  
                                         _T1CONbits 000FCD                       i2c_configure_slave@ptr_thingy 0100  
                               __end_of_WriteTimer0 1E0A                                 __end_of_WriteTimer1 1DE6  
                                           main@jjj 0165                                      __pintcode_body 16E8  
                      __end_of_FromMainHigh_recvmsg 1C28                                end_of_initialization 16DE  
                           timer1_lthread@msgbuffer 0123                        __end_of_FromMainHigh_sendmsg 1CB6  
                        FromMainHigh_sendmsg@length 0119                           __end_of_send_uart_message 1DC2  
                           timer1_lthread@move_time 00D5                                             memcpy@d 0106  
                                           memcpy@n 0104                                             memcpy@s 0108  
                                        ??_init_i2c 0102                                        ??i1_recv_msg 0012  
                           __size_of_uart_configure 0020                         i2c_int_handler@data_written 0089  
                                     __Lmediumconst 0000                                             int_func 16E8  
                                      ??i1_send_msg 0011            uart_receive_interrupt_handler@bad_end_id 0033  
        uart_receive_interrupt_handler@bad_start_id 0032                                    ?_i2c_int_handler 0001  
                                      ??i2_recv_msg 0071                                          ??_recv_msg 0111  
                                      ??i2_send_msg 0070                                          ??_send_msg 0110  
   uart_receive_interrupt_handler@gooey_uart_center 001D                          __end_of_timer1_int_handler 1D10  
                                           postdec2 000FDD                                             postinc0 000FEE  
                                           postinc2 000FDE                           ToMainHigh_sendmsg@msgtype 0076  
                                         _PORTBbits 000F81                                    __CFG_DSBOREN$OFF 000000  
                                _uart_frame_message 129A                                  __end_ofi1_recv_msg 144E  
                                  __CFG_CPUDIV$OSC1 000000                                  __end_ofi1_send_msg 15C2  
                       FromMainHigh_sendmsg@msgtype 0116              __end_of_uart_receive_interrupt_handler 0E86  
           __size_of_uart_receive_interrupt_handler 01A6                      _uart_receive_interrupt_handler 0CE0  
                                  ?_debug_configure 0001                                           _TRISBbits 000F93  
                                         _TRISCbits 000F94                                  __end_ofi2_recv_msg 10C2  
                                __end_ofi2_send_msg 129A                                 ?_uart_frame_message 0001  
                     FromMainHigh_recvmsg@maxlength 007C                            timer1_int_handler@result 001B  
                                 __CFG_WPFP$PAGE_63 000000                                          main@length 016A  
                                       ?_in_low_int 0062                                      __end_ofi2_blip 1E7A  
                             timer0_lthread@msgtype 0102                                 __CFG_MSSP7B_EN$MSK7 000000  
                      __size_of_i2c_configure_slave 0038                            __end_of_enter_sleep_mode 1E88  
                                      ??_ReadTimer1 0003                                ??_uart_frame_message 0005  
                                _ToMainHigh_recvmsg 1BBC                                           i1memcpy@d 0007  
                                _ToMainHigh_sendmsg 1CB6                                           i1memcpy@n 0005  
                                         i1memcpy@s 0009                                         _BAUDCONbits 000F7E  
                                    __end_of_blink0 1E8C                                       __pidataCOMRAM 1E8C  
                                    _timer0_lthread 1E1A                                         ?_init_queue 0100  
                                         i2memcpy@d 0066                                         _WriteTimer0 1DF8  
                                       _WriteTimer1 1DD4                                           i2memcpy@n 0064  
                                         i2memcpy@s 0068                                      _timer1_lthread 0AFA  
                                    __end_of_memcpy 1A0A                                   _enable_interrupts 1E32  
                                  __CFG_DSWDTEN$OFF 000000                                 ?_ToMainHigh_recvmsg 0118  
                          i2c_int_handler@data_read 008E                                 ?_ToMainHigh_sendmsg 0076  
                                ?_enable_interrupts 0001                                 start_initialization 1666  
                                     ??_in_high_int 0062        uart_receive_interrupt_handler@start_byte_bad 004F  
                                 __size_ofi1_memcpy 0040                                   __size_ofi2_memcpy 0050  
                         FromMainLow_sendmsg@length 0119                                 ??_enable_interrupts 0100  
                                      ??_OpenTimer0 0100                                        ??_OpenTimer1 0101  
                                __end_of_ReadTimer1 1DF8                     uart_receive_interrupt_handler@i 0036  
                        __size_of_send_uart_message 0020                                   main@uart_response 0156  
            uart_transmit_interrupt_handler@message 00B3                                            ??i2_blip 0060  
                      __end_of_InterruptHandlerHigh 1766                                          init_i2c@ic 0100  
                              ??_ToMainHigh_recvmsg 011C                                ??_ToMainHigh_sendmsg 0079  
            uart_transmit_interrupt_handler@msgtype 002C                              __end_of_timer0_lthread 1E28  
                                          ??_blink0 0100                            i2c_int_handler@error_buf 0086  
                                       __pdataBANK0 00D5                              __end_of_timer1_lthread 0CE0  
                                  __CFG_LPT1OSC$OFF 000000                           __end_of_enable_interrupts 1E3A  
                                          ??_memcpy 0106                               timer1_lthread@msgtype 011F  
                              _FromMainHigh_recvmsg 1BF2  uart_receive_interrupt_handler@bad_checksum_message 002D  
               uart_receive_interrupt_handler@frame 009D                 uart_receive_interrupt_handler@index 004D  
                              _FromMainHigh_sendmsg 1C88                 uart_receive_interrupt_handler@error 004C  
                      __size_of_init_timer1_lthread 0012                                  __end_of_OpenTimer0 1D5E  
                                __end_of_OpenTimer1 1B14                            i2c_int_handler@msg_ready 008D  
                                       __pbssCOMRAM 004A                                       ??_init_queues 0103  
                                     __pcstackBANK0 0060                                       __pcstackBANK1 0100  
                               __size_of_in_low_int 003E                                            ?i2_blip1 0001  
                                          ?i2_blip2 0001                                            ?i2_blip3 0001  
                          ToMainLow_sendmsg@msgtype 0017                        __size_of_InterruptHandlerLow 00A8  
                               __end_of_in_high_int 1E1A                                      _uart_configure 1D82  
                                      ?_SleepIfOkay 0001                               ToMainLow_recvmsg@data 011A  
                                      _ToMainLow_MQ 0200                                 __size_of_init_queue 0064  
                                         _check_msg 1C28                                           __pnvBANK0 00D3  
                                 __size_of_init_i2c 006A                                        recv_msg@data 010F  
                                      recv_msg@qmsg 0116                                        recv_msg@slot 0113  
                                      recv_msg@qptr 010A                                   __size_of_recv_msg 011E  
                                         __pintcode 0008                                   __size_of_send_msg 00EC  
                                   ?_timer0_lthread 0100                                            ?___lwmod 0100  
                             ?_FromMainHigh_recvmsg 0078                                     ?_timer1_lthread 011D  
                             ?_FromMainHigh_sendmsg 0116                                         __pintcodelo 0018  
                            ToMainHigh_recvmsg@data 011A                          i2c_int_handler@msg_to_send 008C  
                                 WriteTimer0@timer0 0060                                  _timer0_int_handler 1766  
                        uart_frame_message@checksum 0007                                   WriteTimer1@timer1 0001  
                              __CFG_RTCOSC$T1OSCREF 000000                               ToMainLow_sendmsg@data 0018  
                                    __size_of_blip1 0008                                      __size_of_blip2 0008  
                                    __size_of_blip3 0008                                      __size_of_blip4 0008  
                            __end_of_uart_configure 1DA2                                 i1recv_msg@maxlength 000D  
                               ?_timer0_int_handler 0001        uart_receive_interrupt_handler@bad_counter_id 0030  
                               __end_of_init_queues 19BA                                            _LATBbits 000F8A  
                                          _LATDbits 000F8C                                          ?_check_msg 0060  
                                          _IPR1bits 000F9F                                            _PIE1bits 000F9D  
                     retrieve_sensor_values@msgtype 0084                                            _PIR1bits 000F9E  
                            ToMainHigh_sendmsg@data 0077                                            _RCONbits 000FD0  
                                  __CFG_WDTPS$32768 000000                                      i1recv_msg@data 0010  
                              ??_timer0_int_handler 007D                                      i1recv_msg@qmsg 0017  
                                    i1recv_msg@slot 0014                                      i1recv_msg@qptr 000B  
    uart_receive_interrupt_handler@received_counter 004E                        FromMainLow_recvmsg@maxlength 001D  
                        __size_of_enable_interrupts 0008                                   i1send_msg@msgtype 000E  
                                 i1send_msg@tlength 0012                          FromMainLow_recvmsg@msgtype 0019  
                      __size_of_FromMainLow_recvmsg 0028                        __size_of_FromMainLow_sendmsg 002E  
                              timer0_lthread@length 0104                                  _timer1_int_handler 1CE4  
                                          i1_memcpy 1A5A                                _InterruptHandlerHigh 0008  
                                          i2_memcpy 1A0A                                timer0_lthread@msgval 0108  
                          FromMainHigh_recvmsg@data 007A                                         _in_high_int 1E0A  
                                      send_msg@data 010E                                 _i2c_configure_slave 1B4E  
                                      send_msg@qmsg 0114                                        send_msg@slot 0113  
                                      send_msg@qptr 010A                                     ?_uart_configure 0001  
                               ?_timer1_int_handler 0001                                    __size_ofi2_blip1 0008  
                                  __size_ofi2_blip2 0008                                    __size_ofi2_blip3 0008  
                                          __Hparam0 0000                                        ??_in_low_int 0064  
                                          __Lparam0 0000                                ?_i2c_configure_slave 0100  
                                 ?_enter_sleep_mode 0001                              ??_FromMainHigh_recvmsg 007C  
                            ??_FromMainHigh_sendmsg 0119                                ??_timer1_int_handler 001B  
           __end_of_uart_transmit_interrupt_handler 1666            __size_of_uart_transmit_interrupt_handler 00A4  
                 ??_uart_transmit_interrupt_handler 001E                    ?_uart_transmit_interrupt_handler 0001  
                   _uart_transmit_interrupt_handler 15C2                            __size_of_i2c_int_handler 071E  
                                ??_enter_sleep_mode 0060                                    __size_of___lwmod 0060  
                                      ??_init_queue 0102                                        ?_WriteTimer0 0060  
                                      ?_WriteTimer1 0001                            FromMainHigh_sendmsg@data 0117  
                           ToMainLow_sendmsg@length 001A                                   main@t0thread_data 0154  
                    uart_frame_message@sent_counter 004A                               ?_InterruptHandlerHigh 0001  
               uart_transmit_interrupt_handler@data 001E                 uart_transmit_interrupt_handler@done 005F  
                                 i2send_msg@msgtype 006D                         ToMainHigh_recvmsg@maxlength 011C  
                                 i2send_msg@tlength 0071                             init_timer1_lthread@tptr 0100  
                                       _init_queues 1962                                  __end_of_in_low_int 1AD8  
                                          __ptext10 1DC2                                            __ptext11 1962  
                                          __ptext20 1E52                                            __ptext12 183E  
                                          __ptext21 1B86                                            __ptext13 17D4  
                                        _T1GCONbits 000F9A                                            __ptext30 1D10  
                                          __ptext22 1BBC                                            __ptext14 1B4E  
                                          __ptext31 137C                                            __ptext23 0E86  
                                          __ptext15 1E32                                            __ptext40 1766  
                                          __ptext32 0CE0                                            __ptext24 19BA  
                                          __ptext16 1E28                                            __ptext41 1DF8  
                                          __ptext33 1CE4                                            __ptext25 1AD8  
                                          __ptext17 1E3A                                            __ptext50 144E  
                                          __ptext42 00C4                                            __ptext34 1DD4  
                                          __ptext26 1D38                                            __ptext18 1E42  
                                          __ptext51 1E7A                                            __ptext43 1E5A  
                                          __ptext35 1D5E                                            __ptext19 1E4A  
                                          __ptext52 1CB6                                            __ptext44 1E62  
                                          __ptext36 1518                                            __ptext28 15C2  
                                          __ptext53 11AE                                            __ptext45 1E6A  
                                          __ptext37 1A5A                                            __ptext29 129A  
                                          __ptext54 1A0A                                            __ptext46 1E72  
                                          __ptext38 1DE6                                            __ptext55 1902  
                                          __ptext47 1B14                                            __ptext56 1A9A  
                                          __ptext48 1BF2                                            __ptext57 1E0A  
                                          __ptext49 0FA4                                            __ptext58 1E82  
                                          __ptext59 1C28                                      i1send_msg@data 000F  
                                    i1send_msg@qmsg 0015                                      i1send_msg@slot 0014  
                                    i1send_msg@qptr 000B                            timer0_int_handler@length 007D  
         retrieve_sensor_values@sensor_bank_ventril 0081                                            _init_i2c 17D4  
                          __size_of_debug_configure 000A                                 _init_timer1_lthread 1DC2  
                                     __size_of_blip 0008                                       __size_of_main 0318  
                                 main@t1thread_data 0168                                         ??_check_msg 0062  
                                __end_of_init_queue 18A2                                __size_of_SleepIfOkay 0060  
                                          _recv_msg 0E86                               ??_i2c_configure_slave 0102  
                                          _send_msg 10C2                                      init_queue@qptr 0100  
                          ??_retrieve_sensor_values 0083                                      i2recv_msg@data 006F  
                       __size_of_uart_frame_message 00E2                                      i2recv_msg@qmsg 0076  
                                    i2recv_msg@slot 0073                                      i2recv_msg@qptr 006A  
                                      _SSP1STATbits 000FC7                                 _InterruptHandlerLow 0018  
                              ?_init_timer1_lthread 0100                                     main@sensor_data 0134  
                                       _OSCTUNEbits 000F9B                                          _INTCONbits 000FF2  
                                          memcpy@d1 0100                                            memcpy@s1 0102  
                          timer1_lthread@move_state 00B2                        i2c_int_handler@overrun_error 008A  
                                  i2send_msg@length 006C                                            intlevel1 0000  
                                          intlevel2 0000                                ?_InterruptHandlerLow 0001  
                      send_uart_message@message_ptr 011A                                    ___lwmod@dividend 0100  
                                        _RCSTA1bits 000FAC                                       ?_handle_start 0001  
                                  ??_timer0_lthread 0108                         __size_of_ToMainHigh_recvmsg 0036  
                       __size_of_ToMainHigh_sendmsg 002E                                          _OSCCONbits 000FD3  
                                  ??_timer1_lthread 0125                                   i1recv_msg@msgtype 000E  
                                 i1recv_msg@tlength 0015                            ToMainHigh_sendmsg@length 0079  
                             ??_init_timer1_lthread 0102                              ??_InterruptHandlerHigh 008F  
                                 _ToMainLow_recvmsg 1B86                                   _ToMainLow_sendmsg 1D5E  
                                main@last_reg_recvd 0142                                     ___lwmod@divisor 0102  
                                ?_ToMainLow_recvmsg 0118                                   ??_i2c_int_handler 0085  
                                   ___lwmod@counter 0104                                  ?_ToMainLow_sendmsg 0017  
                                       _SSPCON1bits 000FC6                                         _SSPCON2bits 000FC5  
                                    i2send_msg@data 006E                               ??_InterruptHandlerLow 0039  
                               ??_ToMainLow_recvmsg 011C                                      i2send_msg@qmsg 0074  
                                    i2send_msg@slot 0073                                      i2send_msg@qptr 006A  
                               ??_ToMainLow_sendmsg 001A                                 _FromMainLow_recvmsg 1D10  
                                    ??_handle_start 0060                                 _FromMainLow_sendmsg 1C5A  
