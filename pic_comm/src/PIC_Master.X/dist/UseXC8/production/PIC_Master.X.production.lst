

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 15 18:17:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	param0,global,class=BANK0,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001D20                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for uart_transmit_interrupt_handler@done
    88  001D20  01                 	db	1
    89  0000                     _BAUDCONbits	set	3966
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATB	set	3978
    93  0000                     _LATBbits	set	3978
    94  0000                     _LATDbits	set	3980
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _OSCTUNEbits	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIR1bits	set	3998
   100  0000                     _PORTBbits	set	3969
   101  0000                     _RCONbits	set	4048
   102  0000                     _RCREG1	set	4015
   103  0000                     _RCSTA1bits	set	4012
   104  0000                     _SPBRG1	set	4016
   105  0000                     _SPBRGH1	set	3967
   106  0000                     _SSP1STATbits	set	4039
   107  0000                     _SSPADD	set	4040
   108  0000                     _SSPBUF	set	4041
   109  0000                     _SSPCON1	set	4038
   110  0000                     _SSPCON1bits	set	4038
   111  0000                     _SSPCON2	set	4037
   112  0000                     _SSPCON2bits	set	4037
   113  0000                     _SSPSTAT	set	4039
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _T0CON	set	4053
   116  0000                     _T0CONbits	set	4053
   117  0000                     _T1CON	set	4045
   118  0000                     _T1CONbits	set	4045
   119  0000                     _T1GCON	set	3994
   120  0000                     _T1GCONbits	set	3994
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR1H	set	4047
   124  0000                     _TMR1L	set	4046
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISBbits	set	3987
   127  0000                     _TRISCbits	set	3988
   128  0000                     _TRISD	set	3989
   129  0000                     _TXREG1	set	4014
   130  0000                     _TXSTA1bits	set	4013
   131                           
   132                           	psect	nvBANK0
   133  0000D4                     __pnvBANK0:
   134                           	opt stack 0
   135  0000D4                     _ic_ptr:
   136                           	opt stack 0
   137  0000D4                     	ds	2
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  00158A                     __pcinit:
   143                           	opt stack 0
   144  00158A                     start_initialization:
   145                           	opt stack 0
   146  00158A                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK5 (138 bytes)
   150  00158A  EE05  F000         	lfsr	0,__pbssBANK5
   151  00158E  0E8A               	movlw	138
   152  001590                     clear_0:
   153  001590  6AEE               	clrf	postinc0,c
   154  001592  06E8               	decf	wreg,f,c
   155  001594  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK4 (138 bytes)
   158  001596  EE04  F000         	lfsr	0,__pbssBANK4
   159  00159A  0E8A               	movlw	138
   160  00159C                     clear_1:
   161  00159C  6AEE               	clrf	postinc0,c
   162  00159E  06E8               	decf	wreg,f,c
   163  0015A0  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to BANK3 (138 bytes)
   166  0015A2  EE03  F000         	lfsr	0,__pbssBANK3
   167  0015A6  0E8A               	movlw	138
   168  0015A8                     clear_2:
   169  0015A8  6AEE               	clrf	postinc0,c
   170  0015AA  06E8               	decf	wreg,f,c
   171  0015AC  E1FD               	bnz	clear_2
   172                           
   173                           ; Clear objects allocated to BANK2 (138 bytes)
   174  0015AE  EE02  F000         	lfsr	0,__pbssBANK2
   175  0015B2  0E8A               	movlw	138
   176  0015B4                     clear_3:
   177  0015B4  6AEE               	clrf	postinc0,c
   178  0015B6  06E8               	decf	wreg,f,c
   179  0015B8  E1FD               	bnz	clear_3
   180                           
   181                           ; Clear objects allocated to BANK1 (14 bytes)
   182  0015BA  EE01  F092         	lfsr	0,__pbssBANK1
   183  0015BE  0E0E               	movlw	14
   184  0015C0                     clear_4:
   185  0015C0  6AEE               	clrf	postinc0,c
   186  0015C2  06E8               	decf	wreg,f,c
   187  0015C4  E1FD               	bnz	clear_4
   188                           
   189                           ; Clear objects allocated to BANK0 (55 bytes)
   190  0015C6  EE00  F09D         	lfsr	0,__pbssBANK0
   191  0015CA  0E37               	movlw	55
   192  0015CC                     clear_5:
   193  0015CC  6AEE               	clrf	postinc0,c
   194  0015CE  06E8               	decf	wreg,f,c
   195  0015D0  E1FD               	bnz	clear_5
   196                           
   197                           ; Clear objects allocated to COMRAM (21 bytes)
   198  0015D2  EE00  F04A         	lfsr	0,__pbssCOMRAM
   199  0015D6  0E15               	movlw	21
   200  0015D8                     clear_6:
   201  0015D8  6AEE               	clrf	postinc0,c
   202  0015DA  06E8               	decf	wreg,f,c
   203  0015DC  E1FD               	bnz	clear_6
   204                           
   205                           ; Initialize objects allocated to COMRAM (1 bytes)
   206                           ; load TBLPTR registers with __pidataCOMRAM
   207  0015DE  0E20               	movlw	low __pidataCOMRAM
   208  0015E0  6EF6               	movwf	tblptrl,c
   209  0015E2  0E1D               	movlw	high __pidataCOMRAM
   210  0015E4  6EF7               	movwf	tblptrh,c
   211  0015E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   212  0015E8  6EF8               	movwf	tblptru,c
   213  0015EA  0009               	tblrd		*+	;fetch initializer
   214  0015EC  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   215  0015F0                     end_of_initialization:
   216                           	opt stack 0
   217  0015F0                     __end_of__initialization:
   218                           	opt stack 0
   219  0015F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  0015F2  6EF8               	movwf	tblptru,c
   221  0015F4  0100               	movlb	0
   222  0015F6  EFF1  F003         	goto	_main	;jump to C main() function
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           
   230                           	psect	bssCOMRAM
   231  00004A                     __pbssCOMRAM:
   232                           	opt stack 0
   233  00004A                     uart_frame_message@sent_counter:
   234                           	opt stack 0
   235  00004A                     	ds	1
   236  00004B                     uart_receive_interrupt_handler@done:
   237                           	opt stack 0
   238  00004B                     	ds	1
   239  00004C                     uart_receive_interrupt_handler@error:
   240                           	opt stack 0
   241  00004C                     	ds	1
   242  00004D                     uart_receive_interrupt_handler@index:
   243                           	opt stack 0
   244  00004D                     	ds	1
   245  00004E                     uart_receive_interrupt_handler@received_counter:
   246                           	opt stack 0
   247  00004E                     	ds	1
   248  00004F                     uart_receive_interrupt_handler@start_byte_bad:
   249                           	opt stack 0
   250  00004F                     	ds	1
   251  000050                     uart_transmit_interrupt_handler@index:
   252                           	opt stack 0
   253  000050                     	ds	1
   254  000051                     i2c_int_handler@sensor_bank_front:
   255                           	opt stack 0
   256  000051                     	ds	14
   257                           tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           tblptrl	equ	0xFF6
   260                           tablat	equ	0xFF5
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           
   264                           	psect	dataCOMRAM
   265  00005F                     __pdataCOMRAM:
   266                           	opt stack 0
   267  00005F                     uart_transmit_interrupt_handler@done:
   268                           	opt stack 0
   269  00005F                     	ds	1
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           
   277                           	psect	bssBANK0
   278  00009D                     __pbssBANK0:
   279                           	opt stack 0
   280  00009D                     uart_receive_interrupt_handler@frame:
   281                           	opt stack 0
   282  00009D                     	ds	18
   283  0000AF                     _need_sensor_data:
   284                           	opt stack 0
   285  0000AF                     	ds	2
   286  0000B1                     _MQ_Main_Willing_to_block:
   287                           	opt stack 0
   288  0000B1                     	ds	1
   289  0000B2                     timer1_lthread@left_speed:
   290                           	opt stack 0
   291  0000B2                     	ds	1
   292  0000B3                     timer1_lthread@right_speed:
   293                           	opt stack 0
   294  0000B3                     	ds	1
   295  0000B4                     uart_transmit_interrupt_handler@message:
   296                           	opt stack 0
   297  0000B4                     	ds	18
   298  0000C6                     i2c_int_handler@sensor_bank_side:
   299                           	opt stack 0
   300  0000C6                     	ds	14
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308                           	psect	bssBANK1
   309  000192                     __pbssBANK1:
   310                           	opt stack 0
   311  000192                     i2c_int_handler@sensor_bank_ventril:
   312                           	opt stack 0
   313  000192                     	ds	14
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           
   321                           	psect	bssBANK2
   322  000200                     __pbssBANK2:
   323                           	opt stack 0
   324  000200                     _ToMainLow_MQ:
   325                           	opt stack 0
   326  000200                     	ds	138
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           
   334                           	psect	bssBANK3
   335  000300                     __pbssBANK3:
   336                           	opt stack 0
   337  000300                     _ToMainHigh_MQ:
   338                           	opt stack 0
   339  000300                     	ds	138
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347                           	psect	bssBANK4
   348  000400                     __pbssBANK4:
   349                           	opt stack 0
   350  000400                     _FromMainLow_MQ:
   351                           	opt stack 0
   352  000400                     	ds	138
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           
   360                           	psect	bssBANK5
   361  000500                     __pbssBANK5:
   362                           	opt stack 0
   363  000500                     _FromMainHigh_MQ:
   364                           	opt stack 0
   365  000500                     	ds	138
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373                           	psect	cstackBANK1
   374  000100                     __pcstackBANK1:
   375                           	opt stack 0
   376  000100                     ?___lwmod:
   377                           	opt stack 0
   378  000100                     OpenTimer0@config:
   379                           	opt stack 0
   380  000100                     OpenTimer1@config1:
   381                           	opt stack 0
   382  000100                     init_queue@qptr:
   383                           	opt stack 0
   384  000100                     init_i2c@ic:
   385                           	opt stack 0
   386  000100                     i2c_configure_slave@ptr_thingy:
   387                           	opt stack 0
   388  000100                     timer0_lthread@tptr:
   389                           	opt stack 0
   390  000100                     init_timer1_lthread@tptr:
   391                           	opt stack 0
   392  000100                     ___lwmod@dividend:
   393                           	opt stack 0
   394  000100                     memcpy@d1:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x0
   398  000100                     	ds	1
   399  000101                     ??_OpenTimer1:
   400                           
   401                           ; 0 bytes @ 0x1
   402  000101                     	ds	1
   403  000102                     init_queue@i:
   404                           	opt stack 0
   405  000102                     i2c_configure_slave@addr:
   406                           	opt stack 0
   407  000102                     OpenTimer1@config:
   408                           	opt stack 0
   409  000102                     timer0_lthread@msgtype:
   410                           	opt stack 0
   411  000102                     ___lwmod@divisor:
   412                           	opt stack 0
   413  000102                     memcpy@s1:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x2
   417  000102                     	ds	1
   418  000103                     
   419                           ; 0 bytes @ 0x3
   420  000103                     	ds	1
   421  000104                     ___lwmod@counter:
   422                           	opt stack 0
   423  000104                     timer0_lthread@length:
   424                           	opt stack 0
   425  000104                     memcpy@n:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x4
   429  000104                     	ds	2
   430  000106                     timer0_lthread@msgbuffer:
   431                           	opt stack 0
   432  000106                     memcpy@d:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x6
   436  000106                     	ds	2
   437  000108                     timer0_lthread@msgval:
   438                           	opt stack 0
   439  000108                     memcpy@s:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x8
   443  000108                     	ds	2
   444  00010A                     send_msg@qptr:
   445                           	opt stack 0
   446  00010A                     recv_msg@qptr:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0xA
   450  00010A                     	ds	2
   451  00010C                     send_msg@length:
   452                           	opt stack 0
   453  00010C                     recv_msg@maxlength:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0xC
   457  00010C                     	ds	1
   458  00010D                     send_msg@msgtype:
   459                           	opt stack 0
   460  00010D                     recv_msg@msgtype:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0xD
   464  00010D                     	ds	1
   465  00010E                     send_msg@data:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0xE
   469  00010E                     	ds	1
   470  00010F                     recv_msg@data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0xF
   474  00010F                     	ds	1
   475  000110                     ??_send_msg:
   476                           
   477                           ; 0 bytes @ 0x10
   478  000110                     	ds	1
   479  000111                     ??_recv_msg:
   480  000111                     send_msg@tlength:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x11
   484  000111                     	ds	2
   485  000113                     send_msg@slot:
   486                           	opt stack 0
   487  000113                     recv_msg@slot:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x13
   491  000113                     	ds	1
   492  000114                     send_msg@qmsg:
   493                           	opt stack 0
   494  000114                     recv_msg@tlength:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x14
   498  000114                     	ds	2
   499  000116                     FromMainLow_sendmsg@msgtype:
   500                           	opt stack 0
   501  000116                     FromMainHigh_sendmsg@msgtype:
   502                           	opt stack 0
   503  000116                     recv_msg@qmsg:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x16
   507  000116                     	ds	1
   508  000117                     FromMainLow_sendmsg@data:
   509                           	opt stack 0
   510  000117                     FromMainHigh_sendmsg@data:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x17
   514  000117                     	ds	1
   515  000118                     ToMainLow_recvmsg@msgtype:
   516                           	opt stack 0
   517  000118                     ToMainHigh_recvmsg@msgtype:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x18
   521  000118                     	ds	1
   522  000119                     FromMainLow_sendmsg@length:
   523                           	opt stack 0
   524  000119                     FromMainHigh_sendmsg@length:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x19
   528  000119                     	ds	1
   529  00011A                     ToMainLow_recvmsg@data:
   530                           	opt stack 0
   531  00011A                     ToMainHigh_recvmsg@data:
   532                           	opt stack 0
   533  00011A                     send_uart_message@message_ptr:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00011A                     	ds	2
   538  00011C                     ToMainLow_recvmsg@maxlength:
   539                           	opt stack 0
   540  00011C                     ToMainHigh_recvmsg@maxlength:
   541                           	opt stack 0
   542  00011C                     send_uart_message@message_q_code:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x1C
   546  00011C                     	ds	1
   547  00011D                     timer1_lthread@tptr:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x1D
   551  00011D                     	ds	2
   552  00011F                     timer1_lthread@msgtype:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x1F
   556  00011F                     	ds	2
   557  000121                     timer1_lthread@length:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x21
   561  000121                     	ds	2
   562  000123                     timer1_lthread@msgbuffer:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x23
   566  000123                     	ds	2
   567  000125                     timer1_lthread@whatever_msg:
   568                           	opt stack 0
   569                           
   570                           ; 14 bytes @ 0x25
   571  000125                     	ds	14
   572  000133                     timer1_lthread@retval:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x33
   576  000133                     	ds	1
   577  000134                     main@sensor_data:
   578                           	opt stack 0
   579                           
   580                           ; 14 bytes @ 0x34
   581  000134                     	ds	14
   582  000142                     main@last_reg_recvd:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x42
   586  000142                     	ds	1
   587  000143                     main@myByte1:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x43
   591  000143                     	ds	1
   592  000144                     main@myByte2:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x44
   596  000144                     	ds	1
   597  000145                     main@msgbuffer:
   598                           	opt stack 0
   599                           
   600                           ; 15 bytes @ 0x45
   601  000145                     	ds	15
   602  000154                     main@t0thread_data:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x54
   606  000154                     	ds	2
   607  000156                     main@uart_response:
   608                           	opt stack 0
   609                           
   610                           ; 14 bytes @ 0x56
   611  000156                     	ds	14
   612  000164                     main@need_sensor_data:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x64
   616  000164                     	ds	1
   617  000165                     main@jjj:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x65
   621  000165                     	ds	2
   622  000167                     main@z:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x67
   626  000167                     	ds	1
   627  000168                     main@t1thread_data:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x68
   631  000168                     	ds	2
   632  00016A                     main@length:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x6A
   636  00016A                     	ds	1
   637  00016B                     main@msgtype:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x6B
   641  00016B                     	ds	1
   642  00016C                     main@ic:
   643                           	opt stack 0
   644                           
   645                           ; 38 bytes @ 0x6C
   646  00016C                     	ds	38
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           
   654                           	psect	cstackBANK0
   655  000060                     __pcstackBANK0:
   656                           	opt stack 0
   657  000060                     ?_in_high_int:
   658                           	opt stack 0
   659  000060                     handle_start@data_read:
   660                           	opt stack 0
   661  000060                     check_msg@qptr:
   662                           	opt stack 0
   663  000060                     WriteTimer0@timer0:
   664                           	opt stack 0
   665  000060                     i2memcpy@d1:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x0
   669  000060                     	ds	2
   670  000062                     ??_check_msg:
   671  000062                     ?_in_low_int:
   672                           	opt stack 0
   673  000062                     WriteTimer0@timer:
   674                           	opt stack 0
   675  000062                     i2memcpy@s1:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x2
   679  000062                     	ds	2
   680  000064                     i2memcpy@n:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x4
   684  000064                     	ds	2
   685  000066                     i2memcpy@d:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x6
   689  000066                     	ds	2
   690  000068                     i2memcpy@s:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x8
   694  000068                     	ds	2
   695  00006A                     i2send_msg@qptr:
   696                           	opt stack 0
   697  00006A                     i2recv_msg@qptr:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0xA
   701  00006A                     	ds	2
   702  00006C                     i2send_msg@length:
   703                           	opt stack 0
   704  00006C                     i2recv_msg@maxlength:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0xC
   708  00006C                     	ds	1
   709  00006D                     i2send_msg@msgtype:
   710                           	opt stack 0
   711  00006D                     i2recv_msg@msgtype:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0xD
   715  00006D                     	ds	1
   716  00006E                     i2send_msg@data:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0xE
   720  00006E                     	ds	1
   721  00006F                     i2recv_msg@data:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0xF
   725  00006F                     	ds	1
   726  000070                     ??i2_send_msg:
   727                           
   728                           ; 0 bytes @ 0x10
   729  000070                     	ds	1
   730  000071                     ??i2_recv_msg:
   731  000071                     i2send_msg@tlength:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x11
   735  000071                     	ds	2
   736  000073                     i2send_msg@slot:
   737                           	opt stack 0
   738  000073                     i2recv_msg@slot:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x13
   742  000073                     	ds	1
   743  000074                     i2send_msg@qmsg:
   744                           	opt stack 0
   745  000074                     i2recv_msg@tlength:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x14
   749  000074                     	ds	2
   750  000076                     ToMainHigh_sendmsg@msgtype:
   751                           	opt stack 0
   752  000076                     i2recv_msg@qmsg:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x16
   756  000076                     	ds	1
   757  000077                     ToMainHigh_sendmsg@data:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x17
   761  000077                     	ds	1
   762  000078                     FromMainHigh_recvmsg@msgtype:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x18
   766  000078                     	ds	1
   767  000079                     ToMainHigh_sendmsg@length:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x19
   771  000079                     	ds	1
   772  00007A                     FromMainHigh_recvmsg@data:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0x1A
   776  00007A                     	ds	2
   777  00007C                     FromMainHigh_recvmsg@maxlength:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x1C
   781  00007C                     	ds	1
   782  00007D                     retrieve_sensor_values@sensor_bank_side:
   783                           	opt stack 0
   784  00007D                     timer0_int_handler@length:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x1D
   788  00007D                     	ds	2
   789  00007F                     retrieve_sensor_values@sensor_bank_front:
   790                           	opt stack 0
   791  00007F                     timer0_int_handler@msgtype:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x1F
   795  00007F                     	ds	2
   796  000081                     retrieve_sensor_values@sensor_bank_ventril:
   797                           	opt stack 0
   798  000081                     timer0_int_handler@val:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x21
   802  000081                     	ds	2
   803  000083                     retrieve_sensor_values@length:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x23
   807  000083                     	ds	1
   808  000084                     retrieve_sensor_values@msgtype:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x24
   812  000084                     	ds	1
   813  000085                     ??_i2c_int_handler:
   814                           
   815                           ; 0 bytes @ 0x25
   816  000085                     	ds	1
   817  000086                     i2c_int_handler@error_buf:
   818                           	opt stack 0
   819                           
   820                           ; 3 bytes @ 0x26
   821  000086                     	ds	3
   822  000089                     i2c_int_handler@data_written:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x29
   826  000089                     	ds	1
   827  00008A                     i2c_int_handler@overrun_error:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x2A
   831  00008A                     	ds	1
   832  00008B                     i2c_int_handler@i2c_data:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x2B
   836  00008B                     	ds	1
   837  00008C                     i2c_int_handler@msg_to_send:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x2C
   841  00008C                     	ds	1
   842  00008D                     i2c_int_handler@msg_ready:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x2D
   846  00008D                     	ds	1
   847  00008E                     i2c_int_handler@data_read:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x2E
   851  00008E                     	ds	1
   852  00008F                     ??_InterruptHandlerHigh:
   853                           
   854                           ; 0 bytes @ 0x2F
   855  00008F                     	ds	14
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           
   863                           	psect	cstackCOMRAM
   864  000001                     __pcstackCOMRAM:
   865                           	opt stack 0
   866  000001                     ?_ReadTimer1:
   867                           	opt stack 0
   868  000001                     uart_frame_message@inner:
   869                           	opt stack 0
   870  000001                     WriteTimer1@timer1:
   871                           	opt stack 0
   872  000001                     i1memcpy@d1:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x0
   876  000001                     	ds	2
   877  000003                     uart_frame_message@outer:
   878                           	opt stack 0
   879  000003                     ReadTimer1@timer:
   880                           	opt stack 0
   881  000003                     WriteTimer1@timer:
   882                           	opt stack 0
   883  000003                     i1memcpy@s1:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x2
   887  000003                     	ds	2
   888  000005                     ??_uart_frame_message:
   889  000005                     i1memcpy@n:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x4
   893  000005                     	ds	2
   894  000007                     uart_frame_message@checksum:
   895                           	opt stack 0
   896  000007                     i1memcpy@d:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x6
   900  000007                     	ds	1
   901  000008                     uart_frame_message@i:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x7
   905  000008                     	ds	1
   906  000009                     i1memcpy@s:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x8
   910  000009                     	ds	2
   911  00000B                     i1send_msg@qptr:
   912                           	opt stack 0
   913  00000B                     i1recv_msg@qptr:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0xA
   917  00000B                     	ds	2
   918  00000D                     i1send_msg@length:
   919                           	opt stack 0
   920  00000D                     i1recv_msg@maxlength:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0xC
   924  00000D                     	ds	1
   925  00000E                     i1send_msg@msgtype:
   926                           	opt stack 0
   927  00000E                     i1recv_msg@msgtype:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0xD
   931  00000E                     	ds	1
   932  00000F                     i1send_msg@data:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0xE
   936  00000F                     	ds	1
   937  000010                     i1recv_msg@data:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0xF
   941  000010                     	ds	1
   942  000011                     ??i1_send_msg:
   943                           
   944                           ; 0 bytes @ 0x10
   945  000011                     	ds	1
   946  000012                     ??i1_recv_msg:
   947  000012                     i1send_msg@tlength:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x11
   951  000012                     	ds	2
   952  000014                     i1send_msg@slot:
   953                           	opt stack 0
   954  000014                     i1recv_msg@slot:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x13
   958  000014                     	ds	1
   959  000015                     i1send_msg@qmsg:
   960                           	opt stack 0
   961  000015                     i1recv_msg@tlength:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x14
   965  000015                     	ds	2
   966  000017                     ToMainLow_sendmsg@msgtype:
   967                           	opt stack 0
   968  000017                     i1recv_msg@qmsg:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x16
   972  000017                     	ds	1
   973  000018                     ToMainLow_sendmsg@data:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x17
   977  000018                     	ds	1
   978  000019                     FromMainLow_recvmsg@msgtype:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x18
   982  000019                     	ds	1
   983  00001A                     ToMainLow_sendmsg@length:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x19
   987  00001A                     	ds	1
   988  00001B                     ??_uart_receive_interrupt_handler:
   989  00001B                     FromMainLow_recvmsg@data:
   990                           	opt stack 0
   991  00001B                     timer1_int_handler@result:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x1A
   995  00001B                     	ds	2
   996  00001D                     FromMainLow_recvmsg@maxlength:
   997                           	opt stack 0
   998  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   999                           	opt stack 0
  1000                           
  1001                           ; 14 bytes @ 0x1C
  1002  00001D                     	ds	1
  1003  00001E                     uart_transmit_interrupt_handler@data:
  1004                           	opt stack 0
  1005                           
  1006                           ; 14 bytes @ 0x1D
  1007  00001E                     	ds	13
  1008  00002B                     uart_receive_interrupt_handler@status:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x2A
  1012  00002B                     	ds	1
  1013  00002C                     uart_receive_interrupt_handler@status_2231:
  1014                           	opt stack 0
  1015  00002C                     uart_transmit_interrupt_handler@msgtype:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x2B
  1019  00002C                     	ds	1
  1020  00002D                     uart_transmit_interrupt_handler@message_status:
  1021                           	opt stack 0
  1022  00002D                     uart_receive_interrupt_handler@bad_checksum_message:
  1023                           	opt stack 0
  1024                           
  1025                           ; 3 bytes @ 0x2C
  1026  00002D                     	ds	3
  1027  000030                     uart_receive_interrupt_handler@bad_counter_id:
  1028                           	opt stack 0
  1029                           
  1030                           ; 2 bytes @ 0x2F
  1031  000030                     	ds	2
  1032  000032                     uart_receive_interrupt_handler@bad_start_id:
  1033                           	opt stack 0
  1034                           
  1035                           ; 1 bytes @ 0x31
  1036  000032                     	ds	1
  1037  000033                     uart_receive_interrupt_handler@bad_end_id:
  1038                           	opt stack 0
  1039                           
  1040                           ; 1 bytes @ 0x32
  1041  000033                     	ds	1
  1042  000034                     uart_receive_interrupt_handler@message_count:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0x33
  1046  000034                     	ds	1
  1047  000035                     uart_receive_interrupt_handler@checksum:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x34
  1051  000035                     	ds	1
  1052  000036                     uart_receive_interrupt_handler@i:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x35
  1056  000036                     	ds	2
  1057  000038                     uart_receive_interrupt_handler@msg_id:
  1058                           	opt stack 0
  1059                           
  1060                           ; 1 bytes @ 0x37
  1061  000038                     	ds	1
  1062  000039                     ??_InterruptHandlerLow:
  1063                           
  1064                           ; 0 bytes @ 0x38
  1065  000039                     	ds	17
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           
  1073 ;;
  1074 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1075 ;;
  1076 ;; *************** function _main *****************
  1077 ;; Defined at:
  1078 ;;		line 188 in file "../src/main.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  uart_respons   14   86[BANK1 ] unsigned char [14]
  1083 ;;  jjj             2  101[BANK1 ] int 
  1084 ;;  ic             38  108[BANK1 ] struct __i2c_comm
  1085 ;;  msgbuffer      15   69[BANK1 ] unsigned char [15]
  1086 ;;  sensor_data    14   52[BANK1 ] unsigned char [14]
  1087 ;;  t1thread_dat    2  104[BANK1 ] struct __timer1_thread_s
  1088 ;;  t0thread_dat    2   84[BANK1 ] struct __timer0_thread_s
  1089 ;;  uthread_data    2    0        struct __uart_thread_str
  1090 ;;  msgtype         1  107[BANK1 ] unsigned char 
  1091 ;;  length          1  106[BANK1 ] char 
  1092 ;;  z               1  103[BANK1 ] unsigned char 
  1093 ;;  need_sensor_    1  100[BANK1 ] unsigned char 
  1094 ;;  myByte2         1   68[BANK1 ] unsigned char 
  1095 ;;  myByte1         1   67[BANK1 ] unsigned char 
  1096 ;;  last_reg_rec    1   66[BANK1 ] unsigned char 
  1097 ;;  i               1    0        unsigned char 
  1098 ;;  c               1    0        unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;		None               void
  1101 ;; Registers used:
  1102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1109 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1111 ;;      Totals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;Total ram usage:       94 bytes
  1113 ;; Hardware stack levels required when called:   16
  1114 ;; This function calls:
  1115 ;;		_OpenTimer0
  1116 ;;		_OpenTimer1
  1117 ;;		_ToMainHigh_recvmsg
  1118 ;;		_ToMainLow_recvmsg
  1119 ;;		_blip
  1120 ;;		_blip1
  1121 ;;		_blip2
  1122 ;;		_blip3
  1123 ;;		_debug_configure
  1124 ;;		_enable_interrupts
  1125 ;;		_i2c_configure_slave
  1126 ;;		_init_i2c
  1127 ;;		_init_queues
  1128 ;;		_init_timer1_lthread
  1129 ;;		_send_uart_message
  1130 ;;		_timer0_lthread
  1131 ;;		_timer1_lthread
  1132 ;;		_uart_configure
  1133 ;; This function is called by:
  1134 ;;		Startup code after reset
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text0
  1139  0007E2                     __ptext0:
  1140                           	opt stack 0
  1141  0007E2                     _main:
  1142                           	opt stack 15
  1143                           
  1144                           ;main.c: 189: char c;
  1145                           ;main.c: 190: signed char length;
  1146                           ;main.c: 191: unsigned char msgtype;
  1147                           ;main.c: 192: unsigned char last_reg_recvd;
  1148                           ;main.c: 193: i2c_comm ic;
  1149                           ;main.c: 194: unsigned char msgbuffer[14 + 1];
  1150                           ;main.c: 195: unsigned char i;
  1151                           ;main.c: 196: uart_thread_struct uthread_data;
  1152                           ;main.c: 197: timer1_thread_struct t1thread_data;
  1153                           ;main.c: 198: timer0_thread_struct t0thread_data;
  1154                           ;main.c: 199: unsigned char need_sensor_data = 1;
  1155                           
  1156                           ;incstack = 0
  1157  0007E2  0E01               	movlw	1
  1158  0007E4  0101               	movlb	1	; () banked
  1159  0007E6  6F64               	movwf	main@need_sensor_data& (0+255),b
  1160                           
  1161                           ;main.c: 215: OSCCON = 0xE0;
  1162  0007E8  0EE0               	movlw	224
  1163  0007EA  6ED3               	movwf	4051,c	;volatile
  1164                           
  1165                           ; BSR set to: 1
  1166                           ;main.c: 223: OSCTUNEbits.PLLEN = 1;
  1167  0007EC  8C9B               	bsf	3995,6,c	;volatile
  1168                           
  1169                           ; BSR set to: 1
  1170                           ;main.c: 238: init_i2c(&ic);
  1171  0007EE  0101               	movlb	1	; () banked
  1172  0007F0  0E01               	movlw	high main@ic
  1173  0007F2  0101               	movlb	1	; () banked
  1174  0007F4  6F01               	movwf	(init_i2c@ic+1)& (0+255),b
  1175  0007F6  0101               	movlb	1	; () banked
  1176  0007F8  0E6C               	movlw	low main@ic
  1177  0007FA  0101               	movlb	1	; () banked
  1178  0007FC  6F00               	movwf	init_i2c@ic& (0+255),b
  1179  0007FE  EC34  F00B         	call	_init_i2c	;wreg free
  1180                           
  1181                           ;main.c: 241: init_timer1_lthread(&t1thread_data);
  1182  000802  0101               	movlb	1	; () banked
  1183  000804  0E01               	movlw	high main@t1thread_data
  1184  000806  0101               	movlb	1	; () banked
  1185  000808  6F01               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1186  00080A  0101               	movlb	1	; () banked
  1187  00080C  0E68               	movlw	low main@t1thread_data
  1188  00080E  0101               	movlb	1	; () banked
  1189  000810  6F00               	movwf	init_timer1_lthread@tptr& (0+255),b
  1190  000812  EC2B  F00E         	call	_init_timer1_lthread	;wreg free
  1191                           
  1192                           ;main.c: 244: init_queues();
  1193  000816  ECFB  F00B         	call	_init_queues	;wreg free
  1194                           
  1195                           ;main.c: 248: TRISB = 0x0;
  1196  00081A  0E00               	movlw	0
  1197  00081C  6E93               	movwf	3987,c	;volatile
  1198                           
  1199                           ;main.c: 249: LATB = 0x0;
  1200  00081E  0E00               	movlw	0
  1201  000820  6E8A               	movwf	3978,c	;volatile
  1202                           
  1203                           ;main.c: 262: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1204  000822  0E96               	movlw	150
  1205  000824  ECE6  F00D         	call	_OpenTimer0
  1206                           
  1207                           ;main.c: 269: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1208  000828  0E00               	movlw	0
  1209  00082A  0101               	movlb	1	; () banked
  1210  00082C  6F00               	movwf	OpenTimer1@config1& (0+255),b
  1211  00082E  0E9B               	movlw	155
  1212  000830  ECB6  F00C         	call	_OpenTimer1
  1213                           
  1214                           ;main.c: 278: IPR1bits.TMR1IP = 0;
  1215  000834  909F               	bcf	3999,0,c	;volatile
  1216                           
  1217                           ;main.c: 280: IPR1bits.RCIP = 0;
  1218  000836  9A9F               	bcf	3999,5,c	;volatile
  1219                           
  1220                           ;main.c: 283: IPR1bits.SSPIP = 1;
  1221  000838  869F               	bsf	3999,3,c	;volatile
  1222                           
  1223                           ;main.c: 292: i2c_configure_slave(0x9E,&need_sensor_data);
  1224  00083A  0101               	movlb	1	; () banked
  1225  00083C  0E01               	movlw	high main@need_sensor_data
  1226  00083E  0101               	movlb	1	; () banked
  1227  000840  6F01               	movwf	(i2c_configure_slave@ptr_thingy+1)& (0+255),b
  1228  000842  0101               	movlb	1	; () banked
  1229  000844  0E64               	movlw	low main@need_sensor_data
  1230  000846  0101               	movlb	1	; () banked
  1231  000848  6F00               	movwf	i2c_configure_slave@ptr_thingy& (0+255),b
  1232  00084A  0E9E               	movlw	158
  1233  00084C  ECF1  F00C         	call	_i2c_configure_slave
  1234                           
  1235                           ;main.c: 307: PIE1bits.SSPIE = 1;
  1236  000850  869D               	bsf	3997,3,c	;volatile
  1237                           
  1238                           ;main.c: 332: debug_configure();
  1239  000852  EC5E  F00E         	call	_debug_configure	;wreg free
  1240                           
  1241                           ;main.c: 333: blip();
  1242  000856  EC73  F00E         	call	_blip	;wreg free
  1243                           
  1244                           ;main.c: 334: blip1();
  1245  00085A  EC6F  F00E         	call	_blip1	;wreg free
  1246                           
  1247                           ;main.c: 335: blip2();
  1248  00085E  EC6B  F00E         	call	_blip2	;wreg free
  1249                           
  1250                           ;main.c: 336: blip3();
  1251  000862  EC67  F00E         	call	_blip3	;wreg free
  1252                           
  1253                           ;main.c: 345: enable_interrupts();
  1254  000866  EC63  F00E         	call	_enable_interrupts	;wreg free
  1255                           
  1256                           ;main.c: 358: uart_configure();
  1257  00086A  EC0B  F00E         	call	_uart_configure	;wreg free
  1258                           
  1259                           ;main.c: 360: unsigned char myByte1 = 0x44;
  1260  00086E  0E44               	movlw	68
  1261  000870  0101               	movlb	1	; () banked
  1262  000872  6F43               	movwf	main@myByte1& (0+255),b
  1263                           
  1264                           ; BSR set to: 1
  1265                           ;main.c: 361: unsigned char myByte2 = 0x44;
  1266  000874  0E44               	movlw	68
  1267  000876  0101               	movlb	1	; () banked
  1268  000878  6F44               	movwf	main@myByte2& (0+255),b
  1269                           
  1270                           ; BSR set to: 1
  1271                           ;main.c: 369: unsigned char sensor_data[14];
  1272                           ;main.c: 370: sensor_data[0] = 0x03;
  1273  00087A  0E03               	movlw	3
  1274  00087C  0101               	movlb	1	; () banked
  1275  00087E  6F34               	movwf	main@sensor_data& (0+255),b
  1276                           
  1277                           ; BSR set to: 1
  1278                           ;main.c: 371: unsigned char z;
  1279                           ;main.c: 372: for(z=1;z<14;z++)
  1280  000880  0E01               	movlw	1
  1281  000882  0101               	movlb	1	; () banked
  1282  000884  6F67               	movwf	main@z& (0+255),b
  1283  000886  D00F               	goto	L3
  1284  000888                     l3659:
  1285                           
  1286                           ; BSR set to: 1
  1287                           ;main.c: 373: {
  1288                           ;main.c: 374: sensor_data[z] = 0x00;
  1289  000888  0101               	movlb	1	; () banked
  1290  00088A  5167               	movf	main@z& (0+255),w,b
  1291  00088C  0D01               	mullw	1
  1292  00088E  0101               	movlb	1	; () banked
  1293  000890  0E34               	movlw	low main@sensor_data
  1294  000892  24F3               	addwf	prodl,w,c
  1295  000894  6ED9               	movwf	fsr2l,c
  1296  000896  0101               	movlb	1	; () banked
  1297  000898  0E01               	movlw	high main@sensor_data
  1298  00089A  20F4               	addwfc	prodh,w,c
  1299  00089C  6EDA               	movwf	fsr2h,c
  1300  00089E  0E00               	movlw	0
  1301  0008A0  6EDF               	movwf	indf2,c
  1302                           
  1303                           ; BSR set to: 1
  1304  0008A2  0101               	movlb	1	; () banked
  1305  0008A4  2B67               	incf	main@z& (0+255),f,b
  1306  0008A6                     L3:
  1307                           
  1308                           ; BSR set to: 1
  1309  0008A6  0E0D               	movlw	13
  1310  0008A8  0101               	movlb	1	; () banked
  1311  0008AA  6567               	cpfsgt	main@z& (0+255),b
  1312  0008AC  D7ED               	goto	l3659
  1313  0008AE                     l3665:
  1314                           
  1315                           ;main.c: 390: if( need_sensor_data )
  1316  0008AE  0101               	movlb	1	; () banked
  1317  0008B0  5164               	movf	main@need_sensor_data& (0+255),w,b
  1318  0008B2  B4D8               	btfsc	status,2,c
  1319  0008B4  D003               	goto	l3669
  1320                           
  1321                           ; BSR set to: 1
  1322                           ;main.c: 391: {
  1323                           ;main.c: 394: need_sensor_data = 0;
  1324  0008B6  0E00               	movlw	0
  1325  0008B8  0101               	movlb	1	; () banked
  1326  0008BA  6F64               	movwf	main@need_sensor_data& (0+255),b
  1327  0008BC                     l3669:
  1328                           
  1329                           ; BSR set to: 1
  1330                           ;main.c: 395: }
  1331                           ;main.c: 405: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1332  0008BC  0101               	movlb	1	; () banked
  1333  0008BE  0E01               	movlw	high main@msgtype
  1334  0008C0  0101               	movlb	1	; () banked
  1335  0008C2  6F19               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1336  0008C4  0101               	movlb	1	; () banked
  1337  0008C6  0E6B               	movlw	low main@msgtype
  1338  0008C8  0101               	movlb	1	; () banked
  1339  0008CA  6F18               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1340  0008CC  0101               	movlb	1	; () banked
  1341  0008CE  0E01               	movlw	high main@msgbuffer
  1342  0008D0  0101               	movlb	1	; () banked
  1343  0008D2  6F1B               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1344  0008D4  0101               	movlb	1	; () banked
  1345  0008D6  0E45               	movlw	low main@msgbuffer
  1346  0008D8  0101               	movlb	1	; () banked
  1347  0008DA  6F1A               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1348  0008DC  0E0E               	movlw	14
  1349  0008DE  EC28  F00D         	call	_ToMainHigh_recvmsg
  1350  0008E2  0101               	movlb	1	; () banked
  1351  0008E4  6F6A               	movwf	main@length& (0+255),b
  1352                           
  1353                           ; BSR set to: 1
  1354                           ;main.c: 406: if (length < 0) {
  1355  0008E6  0101               	movlb	1	; () banked
  1356  0008E8  BF6A               	btfsc	main@length& (0+255),7,b
  1357  0008EA  D031               	goto	l3683
  1358  0008EC  D024               	goto	l3681
  1359  0008EE                     l3675:
  1360                           
  1361                           ; BSR set to: 1
  1362                           ;main.c: 416: {
  1363                           ;main.c: 417: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1364  0008EE  0101               	movlb	1	; () banked
  1365  0008F0  0E01               	movlw	high main@t0thread_data
  1366  0008F2  0101               	movlb	1	; () banked
  1367  0008F4  6F01               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1368  0008F6  0101               	movlb	1	; () banked
  1369  0008F8  0E54               	movlw	low main@t0thread_data
  1370  0008FA  0101               	movlb	1	; () banked
  1371  0008FC  6F00               	movwf	timer0_lthread@tptr& (0+255),b
  1372  0008FE  0101               	movlb	1	; () banked
  1373  000900  C16B  F102         	movff	main@msgtype,timer0_lthread@msgtype
  1374  000904  0101               	movlb	1	; () banked
  1375  000906  6B03               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1376  000908  0101               	movlb	1	; () banked
  1377  00090A  516A               	movf	main@length& (0+255),w,b
  1378  00090C  0101               	movlb	1	; () banked
  1379  00090E  6F04               	movwf	timer0_lthread@length& (0+255),b
  1380  000910  0101               	movlb	1	; () banked
  1381  000912  6B05               	clrf	(timer0_lthread@length+1)& (0+255),b
  1382  000914  0101               	movlb	1	; () banked
  1383  000916  BF04               	btfsc	timer0_lthread@length& (0+255),7,b
  1384  000918  0705               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1385  00091A  0101               	movlb	1	; () banked
  1386  00091C  0E01               	movlw	high main@msgbuffer
  1387  00091E  0101               	movlb	1	; () banked
  1388  000920  6F07               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1389  000922  0101               	movlb	1	; () banked
  1390  000924  0E45               	movlw	low main@msgbuffer
  1391  000926  0101               	movlb	1	; () banked
  1392  000928  6F06               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1393  00092A  EC57  F00E         	call	_timer0_lthread	;wreg free
  1394                           
  1395                           ;main.c: 418: break;
  1396  00092E  D00F               	goto	l3683
  1397  000930                     l114:
  1398                           
  1399                           ;main.c: 421: case 41:
  1400                           ;main.c: 422: {
  1401                           ;main.c: 425: last_reg_recvd = msgbuffer[0];
  1402  000930  C145  F142         	movff	main@msgbuffer,main@last_reg_recvd
  1403                           
  1404                           ;main.c: 426: break;
  1405  000934  D00C               	goto	l3683
  1406  000936                     l3681:
  1407  000936  0101               	movlb	1	; () banked
  1408  000938  516B               	movf	main@msgtype& (0+255),w,b
  1409                           
  1410                           ; Switch size 1, requested type "space"
  1411                           ; Number of cases is 4, Range of values is 10 to 42
  1412                           ; switch strategies available:
  1413                           ; Name         Instructions Cycles
  1414                           ; simple_byte           13     7 (average)
  1415                           ;	Chosen strategy is simple_byte
  1416  00093A  0A0A               	xorlw	10	; case 10
  1417  00093C  B4D8               	btfsc	status,2,c
  1418  00093E  D7D7               	goto	l3675
  1419  000940  0A22               	xorlw	34	; case 40
  1420  000942  B4D8               	btfsc	status,2,c
  1421  000944  D7F5               	goto	l114
  1422  000946  0A01               	xorlw	1	; case 41
  1423  000948  B4D8               	btfsc	status,2,c
  1424  00094A  D7F2               	goto	l114
  1425  00094C  0A03               	xorlw	3	; case 42
  1426  00094E                     l3683:
  1427                           
  1428                           ;main.c: 445: }
  1429                           ;main.c: 448: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1430  00094E  0101               	movlb	1	; () banked
  1431  000950  0E01               	movlw	high main@msgtype
  1432  000952  0101               	movlb	1	; () banked
  1433  000954  6F19               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1434  000956  0101               	movlb	1	; () banked
  1435  000958  0E6B               	movlw	low main@msgtype
  1436  00095A  0101               	movlb	1	; () banked
  1437  00095C  6F18               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1438  00095E  0101               	movlb	1	; () banked
  1439  000960  0E01               	movlw	high main@msgbuffer
  1440  000962  0101               	movlb	1	; () banked
  1441  000964  6F1B               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1442  000966  0101               	movlb	1	; () banked
  1443  000968  0E45               	movlw	low main@msgbuffer
  1444  00096A  0101               	movlb	1	; () banked
  1445  00096C  6F1A               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1446  00096E  0E0E               	movlw	14
  1447  000970  EC0D  F00D         	call	_ToMainLow_recvmsg
  1448  000974  0101               	movlb	1	; () banked
  1449  000976  6F6A               	movwf	main@length& (0+255),b
  1450                           
  1451                           ; BSR set to: 1
  1452                           ;main.c: 449: if (length < 0) {
  1453  000978  0101               	movlb	1	; () banked
  1454  00097A  BF6A               	btfsc	main@length& (0+255),7,b
  1455  00097C  D798               	goto	l3665
  1456                           
  1457                           ; BSR set to: 1
  1458                           ;main.c: 455: else
  1459                           ;main.c: 456: {
  1460                           ;main.c: 457: unsigned char uart_response[14];
  1461                           ;main.c: 458: int jjj;
  1462                           ;main.c: 459: for(jjj=0;jjj<14;jjj++)
  1463                           
  1464                           ; BSR set to: 1
  1465                           
  1466                           ; BSR set to: 1
  1467                           ;main.c: 453: }
  1468                           ;main.c: 454: }
  1469                           
  1470                           ; BSR set to: 1
  1471  00097E  0E00               	movlw	0
  1472  000980  0101               	movlb	1	; () banked
  1473  000982  6F66               	movwf	(main@jjj+1)& (0+255),b
  1474  000984  0E00               	movlw	0
  1475  000986  0101               	movlb	1	; () banked
  1476  000988  6F65               	movwf	main@jjj& (0+255),b
  1477  00098A                     
  1478                           ; BSR set to: 1
  1479  00098A  0101               	movlb	1	; () banked
  1480  00098C  5166               	movf	(main@jjj+1)& (0+255),w,b
  1481  00098E  0A80               	xorlw	128
  1482  000990  0F80               	addlw	-128
  1483  000992  0E0E               	movlw	14
  1484  000994  B4D8               	btfsc	status,2,c
  1485  000996  5D65               	subwf	main@jjj& (0+255),w,b
  1486  000998  B0D8               	btfsc	status,0,c
  1487  00099A  D094               	goto	l3743
  1488                           
  1489                           ; BSR set to: 1
  1490                           ;main.c: 460: {
  1491                           ;main.c: 461: uart_response[jjj] = 0;
  1492                           
  1493                           ; BSR set to: 1
  1494                           
  1495                           ; BSR set to: 1
  1496  00099C  0101               	movlb	1	; () banked
  1497  00099E  0E56               	movlw	low main@uart_response
  1498  0009A0  0101               	movlb	1	; () banked
  1499  0009A2  2565               	addwf	main@jjj& (0+255),w,b
  1500  0009A4  6ED9               	movwf	fsr2l,c
  1501  0009A6  0101               	movlb	1	; () banked
  1502  0009A8  0E01               	movlw	high main@uart_response
  1503  0009AA  0101               	movlb	1	; () banked
  1504  0009AC  2166               	addwfc	(main@jjj+1)& (0+255),w,b
  1505  0009AE  6EDA               	movwf	fsr2h,c
  1506  0009B0  0E00               	movlw	0
  1507  0009B2  6EDF               	movwf	indf2,c
  1508                           
  1509                           ; BSR set to: 1
  1510  0009B4  0101               	movlb	1	; () banked
  1511  0009B6  4B65               	infsnz	main@jjj& (0+255),f,b
  1512  0009B8  2B66               	incf	(main@jjj+1)& (0+255),f,b
  1513  0009BA  D7E7               	goto	L2
  1514  0009BC                     l3701:
  1515                           
  1516                           ; BSR set to: 1
  1517                           ;main.c: 466: {
  1518                           ;main.c: 467: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1519  0009BC  0101               	movlb	1	; () banked
  1520  0009BE  0E01               	movlw	high main@t1thread_data
  1521  0009C0  0101               	movlb	1	; () banked
  1522  0009C2  6F1E               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1523  0009C4  0101               	movlb	1	; () banked
  1524  0009C6  0E68               	movlw	low main@t1thread_data
  1525  0009C8  0101               	movlb	1	; () banked
  1526  0009CA  6F1D               	movwf	timer1_lthread@tptr& (0+255),b
  1527  0009CC  0101               	movlb	1	; () banked
  1528  0009CE  C16B  F11F         	movff	main@msgtype,timer1_lthread@msgtype
  1529  0009D2  0101               	movlb	1	; () banked
  1530  0009D4  6B20               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1531  0009D6  0101               	movlb	1	; () banked
  1532  0009D8  516A               	movf	main@length& (0+255),w,b
  1533  0009DA  0101               	movlb	1	; () banked
  1534  0009DC  6F21               	movwf	timer1_lthread@length& (0+255),b
  1535  0009DE  0101               	movlb	1	; () banked
  1536  0009E0  6B22               	clrf	(timer1_lthread@length+1)& (0+255),b
  1537  0009E2  0101               	movlb	1	; () banked
  1538  0009E4  BF21               	btfsc	timer1_lthread@length& (0+255),7,b
  1539  0009E6  0722               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1540  0009E8  0101               	movlb	1	; () banked
  1541  0009EA  0E01               	movlw	high main@msgbuffer
  1542  0009EC  0101               	movlb	1	; () banked
  1543  0009EE  6F24               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1544  0009F0  0101               	movlb	1	; () banked
  1545  0009F2  0E45               	movlw	low main@msgbuffer
  1546  0009F4  0101               	movlb	1	; () banked
  1547  0009F6  6F23               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1548  0009F8  EC40  F00A         	call	_timer1_lthread	;wreg free
  1549                           
  1550                           ;main.c: 468: break;
  1551  0009FC  D758               	goto	l3665
  1552  0009FE                     l3703:
  1553                           
  1554                           ;main.c: 473: {
  1555                           ;main.c: 474: uart_response[0] = 0xf1;
  1556  0009FE  0EF1               	movlw	241
  1557  000A00  0101               	movlb	1	; () banked
  1558  000A02  6F56               	movwf	main@uart_response& (0+255),b
  1559                           
  1560                           ; BSR set to: 1
  1561                           ;main.c: 475: uart_response[1] = msgbuffer[0];
  1562  000A04  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1563                           
  1564                           ; BSR set to: 1
  1565                           ;main.c: 476: send_uart_message( uart_response );
  1566  000A08  0101               	movlb	1	; () banked
  1567  000A0A  0E01               	movlw	high main@uart_response
  1568  000A0C  0101               	movlb	1	; () banked
  1569  000A0E  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1570  000A10  0101               	movlb	1	; () banked
  1571  000A12  0E56               	movlw	low main@uart_response
  1572  000A14  0101               	movlb	1	; () banked
  1573  000A16  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1574  000A18  EC1B  F00E         	call	_send_uart_message	;wreg free
  1575                           
  1576                           ;main.c: 477: break;
  1577  000A1C  D748               	goto	l3665
  1578  000A1E                     l3709:
  1579                           
  1580                           ;main.c: 480: {
  1581                           ;main.c: 481: uart_response[0] = 0xf2;
  1582  000A1E  0EF2               	movlw	242
  1583  000A20  0101               	movlb	1	; () banked
  1584  000A22  6F56               	movwf	main@uart_response& (0+255),b
  1585                           
  1586                           ; BSR set to: 1
  1587                           ;main.c: 482: uart_response[1] = msgbuffer[0];
  1588  000A24  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;main.c: 483: uart_response[2] = msgbuffer[1];
  1592  000A28  C146  F158         	movff	main@msgbuffer+1,main@uart_response+2
  1593                           
  1594                           ; BSR set to: 1
  1595                           ;main.c: 484: send_uart_message( uart_response );
  1596  000A2C  0101               	movlb	1	; () banked
  1597  000A2E  0E01               	movlw	high main@uart_response
  1598  000A30  0101               	movlb	1	; () banked
  1599  000A32  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1600  000A34  0101               	movlb	1	; () banked
  1601  000A36  0E56               	movlw	low main@uart_response
  1602  000A38  0101               	movlb	1	; () banked
  1603  000A3A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1604  000A3C  EC1B  F00E         	call	_send_uart_message	;wreg free
  1605                           
  1606                           ;main.c: 485: break;
  1607  000A40  D736               	goto	l3665
  1608  000A42                     l3717:
  1609                           
  1610                           ;main.c: 488: {
  1611                           ;main.c: 489: uart_response[0] = 0xf3;
  1612  000A42  0EF3               	movlw	243
  1613  000A44  0101               	movlb	1	; () banked
  1614  000A46  6F56               	movwf	main@uart_response& (0+255),b
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1618  000A48  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1619                           
  1620                           ; BSR set to: 1
  1621                           ;main.c: 491: send_uart_message( uart_response );
  1622  000A4C  0101               	movlb	1	; () banked
  1623  000A4E  0E01               	movlw	high main@uart_response
  1624  000A50  0101               	movlb	1	; () banked
  1625  000A52  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1626  000A54  0101               	movlb	1	; () banked
  1627  000A56  0E56               	movlw	low main@uart_response
  1628  000A58  0101               	movlb	1	; () banked
  1629  000A5A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1630  000A5C  EC1B  F00E         	call	_send_uart_message	;wreg free
  1631                           
  1632                           ;main.c: 492: break;
  1633  000A60  D726               	goto	l3665
  1634  000A62                     l3723:
  1635                           
  1636                           ;main.c: 495: {
  1637                           ;main.c: 496: uart_response[0] = 0xf4;
  1638  000A62  0EF4               	movlw	244
  1639  000A64  0101               	movlb	1	; () banked
  1640  000A66  6F56               	movwf	main@uart_response& (0+255),b
  1641                           
  1642                           ; BSR set to: 1
  1643                           ;main.c: 497: uart_response[1] = msgbuffer[0];
  1644  000A68  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 498: send_uart_message( uart_response );
  1648  000A6C  0101               	movlb	1	; () banked
  1649  000A6E  0E01               	movlw	high main@uart_response
  1650  000A70  0101               	movlb	1	; () banked
  1651  000A72  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1652  000A74  0101               	movlb	1	; () banked
  1653  000A76  0E56               	movlw	low main@uart_response
  1654  000A78  0101               	movlb	1	; () banked
  1655  000A7A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1656  000A7C  EC1B  F00E         	call	_send_uart_message	;wreg free
  1657                           
  1658                           ;main.c: 499: break;
  1659  000A80  D716               	goto	l3665
  1660  000A82                     l3729:
  1661                           
  1662                           ;main.c: 503: {
  1663                           ;main.c: 504: uart_response[0] = 0x11;
  1664  000A82  0E11               	movlw	17
  1665  000A84  0101               	movlb	1	; () banked
  1666  000A86  6F56               	movwf	main@uart_response& (0+255),b
  1667                           
  1668                           ; BSR set to: 1
  1669                           ;main.c: 505: uart_response[1] = msgbuffer[0];
  1670  000A88  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;main.c: 506: send_uart_message( uart_response );
  1674  000A8C  0101               	movlb	1	; () banked
  1675  000A8E  0E01               	movlw	high main@uart_response
  1676  000A90  0101               	movlb	1	; () banked
  1677  000A92  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1678  000A94  0101               	movlb	1	; () banked
  1679  000A96  0E56               	movlw	low main@uart_response
  1680  000A98  0101               	movlb	1	; () banked
  1681  000A9A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1682  000A9C  EC1B  F00E         	call	_send_uart_message	;wreg free
  1683                           
  1684                           ;main.c: 507: break;
  1685  000AA0  D706               	goto	l3665
  1686  000AA2                     l3735:
  1687                           
  1688                           ;main.c: 516: {
  1689                           ;main.c: 517: send_uart_message( sensor_data );
  1690  000AA2  0101               	movlb	1	; () banked
  1691  000AA4  0E01               	movlw	high main@sensor_data
  1692  000AA6  0101               	movlb	1	; () banked
  1693  000AA8  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1694  000AAA  0101               	movlb	1	; () banked
  1695  000AAC  0E34               	movlw	low main@sensor_data
  1696  000AAE  0101               	movlb	1	; () banked
  1697  000AB0  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1698  000AB2  EC1B  F00E         	call	_send_uart_message	;wreg free
  1699                           
  1700                           ;main.c: 518: break;
  1701  000AB6  D6FB               	goto	l3665
  1702  000AB8                     l3739:
  1703  000AB8  0101               	movlb	1	; () banked
  1704  000ABA  5145               	movf	main@msgbuffer& (0+255),w,b
  1705                           
  1706                           ; Switch size 1, requested type "space"
  1707                           ; Number of cases is 1, Range of values is 2 to 2
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte            4     3 (average)
  1711                           ;	Chosen strategy is simple_byte
  1712  000ABC  0A02               	xorlw	2	; case 2
  1713  000ABE  B4D8               	btfsc	status,2,c
  1714  000AC0  D7F0               	goto	l3735
  1715  000AC2  D6F5               	goto	l3665
  1716  000AC4                     l3743:
  1717                           
  1718                           ; BSR set to: 1
  1719  000AC4  0101               	movlb	1	; () banked
  1720  000AC6  516B               	movf	main@msgtype& (0+255),w,b
  1721                           
  1722                           ; Switch size 1, requested type "space"
  1723                           ; Number of cases is 8, Range of values is 11 to 36
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte           25    13 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  000AC8  0A0B               	xorlw	11	; case 11
  1729  000ACA  B4D8               	btfsc	status,2,c
  1730  000ACC  D777               	goto	l3701
  1731  000ACE  0A15               	xorlw	21	; case 30
  1732  000AD0  B4D8               	btfsc	status,2,c
  1733  000AD2  D795               	goto	l3703
  1734  000AD4  0A01               	xorlw	1	; case 31
  1735  000AD6  B4D8               	btfsc	status,2,c
  1736  000AD8  D7EF               	goto	l3739
  1737  000ADA  0A3F               	xorlw	63	; case 32
  1738  000ADC  B4D8               	btfsc	status,2,c
  1739  000ADE  D78F               	goto	l3703
  1740  000AE0  0A01               	xorlw	1	; case 33
  1741  000AE2  B4D8               	btfsc	status,2,c
  1742  000AE4  D79C               	goto	l3709
  1743  000AE6  0A03               	xorlw	3	; case 34
  1744  000AE8  B4D8               	btfsc	status,2,c
  1745  000AEA  D7AB               	goto	l3717
  1746  000AEC  0A01               	xorlw	1	; case 35
  1747  000AEE  B4D8               	btfsc	status,2,c
  1748  000AF0  D7B8               	goto	l3723
  1749  000AF2  0A07               	xorlw	7	; case 36
  1750  000AF4  B4D8               	btfsc	status,2,c
  1751  000AF6  D7C5               	goto	l3729
  1752  000AF8  D6DA               	goto	l3665
  1753  000AFA                     __end_of_main:
  1754                           	opt stack 0
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           prodh	equ	0xFF4
  1760                           prodl	equ	0xFF3
  1761                           postinc0	equ	0xFEE
  1762                           wreg	equ	0xFE8
  1763                           indf2	equ	0xFDF
  1764                           fsr2h	equ	0xFDA
  1765                           fsr2l	equ	0xFD9
  1766                           status	equ	0xFD8
  1767                           
  1768 ;; *************** function _uart_configure *****************
  1769 ;; Defined at:
  1770 ;;		line 22 in file "../src/my_uart.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;		None               void
  1777 ;; Registers used:
  1778 ;;		wreg, status,2
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:   11
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text1
  1799  001C16                     __ptext1:
  1800                           	opt stack 0
  1801  001C16                     _uart_configure:
  1802                           	opt stack 19
  1803                           
  1804                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1805                           
  1806                           ; BSR set to: 1
  1807                           ;incstack = 0
  1808  001C16  8E94               	bsf	3988,7,c	;volatile
  1809                           
  1810                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1811  001C18  9C94               	bcf	3988,6,c	;volatile
  1812                           
  1813                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1814  001C1A  867E               	bsf	3966,3,c	;volatile
  1815                           
  1816                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1817  001C1C  84AD               	bsf	4013,2,c	;volatile
  1818                           
  1819                           ;my_uart.c: 31: SPBRGH1 = 0x00;
  1820  001C1E  0E00               	movlw	0
  1821  001C20  6E7F               	movwf	3967,c	;volatile
  1822                           
  1823                           ;my_uart.c: 32: SPBRG1 = 0xCF;
  1824  001C22  0ECF               	movlw	207
  1825  001C24  6EB0               	movwf	4016,c	;volatile
  1826                           
  1827                           ;my_uart.c: 34: TXSTA1bits.SYNC = 0;
  1828  001C26  98AD               	bcf	4013,4,c	;volatile
  1829                           
  1830                           ;my_uart.c: 35: RCSTA1bits.SPEN = 1;
  1831  001C28  8EAC               	bsf	4012,7,c	;volatile
  1832                           
  1833                           ;my_uart.c: 38: IPR1bits.TX1IP = 0;
  1834  001C2A  989F               	bcf	3999,4,c	;volatile
  1835                           
  1836                           ;my_uart.c: 40: PIE1bits.TX1IE = 0;
  1837  001C2C  989D               	bcf	3997,4,c	;volatile
  1838                           
  1839                           ;my_uart.c: 41: PIE1bits.RC1IE = 1;
  1840  001C2E  8A9D               	bsf	3997,5,c	;volatile
  1841                           
  1842                           ;my_uart.c: 43: TXSTA1bits.TXEN = 1;
  1843  001C30  8AAD               	bsf	4013,5,c	;volatile
  1844                           
  1845                           ;my_uart.c: 44: RCSTA1bits.CREN = 1;
  1846  001C32  88AC               	bsf	4012,4,c	;volatile
  1847  001C34  0012               	return	
  1848  001C36                     __end_of_uart_configure:
  1849                           	opt stack 0
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           prodh	equ	0xFF4
  1855                           prodl	equ	0xFF3
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           indf2	equ	0xFDF
  1859                           fsr2h	equ	0xFDA
  1860                           fsr2l	equ	0xFD9
  1861                           status	equ	0xFD8
  1862                           
  1863 ;; *************** function _timer1_lthread *****************
  1864 ;; Defined at:
  1865 ;;		line 16 in file "../src/timer1_thread.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  tptr            2   29[BANK1 ] PTR struct __timer1_thre
  1868 ;;		 -> main@t1thread_data(2), 
  1869 ;;  msgtype         2   31[BANK1 ] int 
  1870 ;;  length          2   33[BANK1 ] int 
  1871 ;;  msgbuffer       2   35[BANK1 ] PTR unsigned char 
  1872 ;;		 -> main@msgbuffer(15), 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  whatever_msg   14   37[BANK1 ] unsigned char [14]
  1875 ;;  retval          1   51[BANK1 ] char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   29[BANK1 ] int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1885 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;Total ram usage:       23 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:   15
  1892 ;; This function calls:
  1893 ;;		_FromMainHigh_sendmsg
  1894 ;;		___lwmod
  1895 ;;		_blink0
  1896 ;;		_send_uart_message
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text2
  1903  001480                     __ptext2:
  1904                           	opt stack 0
  1905  001480                     _timer1_lthread:
  1906                           	opt stack 15
  1907                           
  1908                           ;timer1_thread.c: 17: signed char retval;
  1909                           ;timer1_thread.c: 19: blink0();
  1910                           
  1911                           ;incstack = 0
  1912  001480  EC8E  F00E         	call	_blink0	;wreg free
  1913                           
  1914                           ;timer1_thread.c: 21: static unsigned char left_speed = 0;
  1915                           ;timer1_thread.c: 22: static unsigned char right_speed = 0;
  1916                           ;timer1_thread.c: 24: unsigned char whatever_msg[14];
  1917                           ;timer1_thread.c: 26: whatever_msg[0] = 0x01;
  1918  001484  0E01               	movlw	1
  1919  001486  0101               	movlb	1	; () banked
  1920  001488  6F25               	movwf	timer1_lthread@whatever_msg& (0+255),b
  1921                           
  1922                           ; BSR set to: 1
  1923                           ;timer1_thread.c: 27: whatever_msg[1] = left_speed++;
  1924  00148A  C0B2  F126         	movff	timer1_lthread@left_speed,timer1_lthread@whatever_msg+1
  1925                           
  1926                           ; BSR set to: 1
  1927  00148E  0100               	movlb	0	; () banked
  1928  001490  2BB2               	incf	timer1_lthread@left_speed& (0+255),f,b
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;timer1_thread.c: 28: whatever_msg[2] = right_speed++;
  1932  001492  C0B3  F127         	movff	timer1_lthread@right_speed,timer1_lthread@whatever_msg+2
  1933                           
  1934                           ; BSR set to: 0
  1935  001496  0100               	movlb	0	; () banked
  1936  001498  2BB3               	incf	timer1_lthread@right_speed& (0+255),f,b
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;timer1_thread.c: 31: send_uart_message( whatever_msg );
  1940  00149A  0101               	movlb	1	; () banked
  1941  00149C  0E01               	movlw	high timer1_lthread@whatever_msg
  1942  00149E  0101               	movlb	1	; () banked
  1943  0014A0  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1944  0014A2  0101               	movlb	1	; () banked
  1945  0014A4  0E25               	movlw	low timer1_lthread@whatever_msg
  1946  0014A6  0101               	movlb	1	; () banked
  1947  0014A8  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1948  0014AA  EC1B  F00E         	call	_send_uart_message	;wreg free
  1949                           
  1950                           ;timer1_thread.c: 33: tptr->msgcount++;
  1951  0014AE  C11D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1952  0014B2  C11E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1953  0014B6  2ADE               	incf	postinc2,f,c
  1954  0014B8  0E00               	movlw	0
  1955  0014BA  22DD               	addwfc	postdec2,f,c
  1956                           
  1957                           ;timer1_thread.c: 36: if ((tptr->msgcount % 10) == 9) {
  1958  0014BC  C11D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1959  0014C0  C11E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1960  0014C4  0101               	movlb	1	; () banked
  1961  0014C6  CFDE F100          	movff	postinc2,___lwmod@dividend
  1962  0014CA  0101               	movlb	1	; () banked
  1963  0014CC  CFDD F101          	movff	postdec2,___lwmod@dividend+1
  1964  0014D0  0E00               	movlw	0
  1965  0014D2  0101               	movlb	1	; () banked
  1966  0014D4  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
  1967  0014D6  0E0A               	movlw	10
  1968  0014D8  0101               	movlb	1	; () banked
  1969  0014DA  6F02               	movwf	___lwmod@divisor& (0+255),b
  1970  0014DC  EC9B  F00B         	call	___lwmod	;wreg free
  1971  0014E0  0101               	movlb	1	; () banked
  1972  0014E2  5100               	movf	?___lwmod& (0+255),w,b
  1973  0014E4  0A09               	xorlw	9
  1974  0014E6  0101               	movlb	1	; () banked
  1975  0014E8  1101               	iorwf	(?___lwmod+1)& (0+255),w,b
  1976  0014EA  A4D8               	btfss	status,2,c
  1977  0014EC  0012               	return	
  1978                           
  1979                           ; BSR set to: 1
  1980                           ;timer1_thread.c: 37: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1981  0014EE  0E14               	movlw	20
  1982  0014F0  0101               	movlb	1	; () banked
  1983  0014F2  6F16               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1984  0014F4  0101               	movlb	1	; () banked
  1985  0014F6  C11E  F118         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1986  0014FA  0101               	movlb	1	; () banked
  1987  0014FC  C11D  F117         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1988  001500  0E02               	movlw	2
  1989  001502  EC8E  F00D         	call	_FromMainHigh_sendmsg
  1990  001506  0101               	movlb	1	; () banked
  1991  001508  6F33               	movwf	timer1_lthread@retval& (0+255),b
  1992  00150A  0012               	return	
  1993  00150C                     __end_of_timer1_lthread:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           prodh	equ	0xFF4
  2000                           prodl	equ	0xFF3
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           indf2	equ	0xFDF
  2004                           postinc2	equ	0xFDE
  2005                           postdec2	equ	0xFDD
  2006                           fsr2h	equ	0xFDA
  2007                           fsr2l	equ	0xFD9
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _send_uart_message *****************
  2011 ;; Defined at:
  2012 ;;		line 186 in file "../src/my_uart.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  message_ptr     2   26[BANK1 ] PTR unsigned char 
  2015 ;;		 -> timer1_lthread@whatever_msg(14), main@uart_response(14), main@sensor_data(14), 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  message_q_co    1   28[BANK1 ] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      unsigned char 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2027 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;Total ram usage:        3 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:   14
  2034 ;; This function calls:
  2035 ;;		_FromMainLow_sendmsg
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;;		_timer1_lthread
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text3
  2043  001C36                     __ptext3:
  2044                           	opt stack 0
  2045  001C36                     _send_uart_message:
  2046                           	opt stack 15
  2047                           
  2048                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(14,31,(void *) messa
      +                          ge_ptr );
  2049                           
  2050                           ; BSR set to: 1
  2051                           ;incstack = 0
  2052  001C36  0E1F               	movlw	31
  2053  001C38  0101               	movlb	1	; () banked
  2054  001C3A  6F16               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2055  001C3C  0101               	movlb	1	; () banked
  2056  001C3E  C11B  F118         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2057  001C42  0101               	movlb	1	; () banked
  2058  001C44  C11A  F117         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2059  001C48  0E0E               	movlw	14
  2060  001C4A  EC77  F00D         	call	_FromMainLow_sendmsg
  2061  001C4E  0101               	movlb	1	; () banked
  2062  001C50  6F1C               	movwf	send_uart_message@message_q_code& (0+255),b
  2063                           
  2064                           ; BSR set to: 1
  2065                           ;my_uart.c: 193: }
  2066                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2067                           
  2068                           ; BSR set to: 1
  2069                           ;my_uart.c: 191: {
  2070                           ;my_uart.c: 192: return 0x02;
  2071                           ;	Return value of _send_uart_message is never used
  2072                           
  2073                           ;my_uart.c: 190: if( message_q_code == -1)
  2074  001C52  889D               	bsf	3997,4,c	;volatile
  2075                           
  2076                           ; BSR set to: 1
  2077                           
  2078                           ;my_uart.c: 196: return 0x00;
  2079                           ;	Return value of _send_uart_message is never used
  2080  001C54  0012               	return	
  2081  001C56                     __end_of_send_uart_message:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           indf2	equ	0xFDF
  2092                           postinc2	equ	0xFDE
  2093                           postdec2	equ	0xFDD
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8
  2097                           
  2098 ;; *************** function _FromMainLow_sendmsg *****************
  2099 ;; Defined at:
  2100 ;;		line 150 in file "../src/messages.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  length          1    wreg     unsigned char 
  2103 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2104 ;;  data            2   23[BANK1 ] PTR void 
  2105 ;;		 -> timer1_lthread@whatever_msg(14), main@uart_response(14), main@sensor_data(14), 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  length          1   25[BANK1 ] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      char 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2117 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;Total ram usage:        4 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:   13
  2124 ;; This function calls:
  2125 ;;		_send_msg
  2126 ;; This function is called by:
  2127 ;;		_send_uart_message
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text4
  2132  001AEE                     __ptext4:
  2133                           	opt stack 0
  2134  001AEE                     _FromMainLow_sendmsg:
  2135                           	opt stack 15
  2136                           
  2137                           ; BSR set to: 1
  2138                           ;incstack = 0
  2139                           ;FromMainLow_sendmsg@length stored from wreg
  2140  001AEE  0101               	movlb	1	; () banked
  2141  001AF0  6F19               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2142                           
  2143                           ; BSR set to: 1
  2144                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2145  001AF2  0104               	movlb	4	; () banked
  2146  001AF4  0E04               	movlw	high _FromMainLow_MQ
  2147  001AF6  0101               	movlb	1	; () banked
  2148  001AF8  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2149  001AFA  0104               	movlb	4	; () banked
  2150  001AFC  0E00               	movlw	low _FromMainLow_MQ
  2151  001AFE  0101               	movlb	1	; () banked
  2152  001B00  6F0A               	movwf	send_msg@qptr& (0+255),b
  2153  001B02  C119  F10C         	movff	FromMainLow_sendmsg@length,send_msg@length
  2154  001B06  C116  F10D         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2155  001B0A  0101               	movlb	1	; () banked
  2156  001B0C  C118  F10F         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2157  001B10  0101               	movlb	1	; () banked
  2158  001B12  C117  F10E         	movff	FromMainLow_sendmsg@data,send_msg@data
  2159  001B16  EC6E  F007         	call	_send_msg	;wreg free
  2160  001B1A  0012               	return	
  2161  001B1C                     __end_of_FromMainLow_sendmsg:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           prodh	equ	0xFF4
  2168                           prodl	equ	0xFF3
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           indf2	equ	0xFDF
  2172                           postinc2	equ	0xFDE
  2173                           postdec2	equ	0xFDD
  2174                           fsr2h	equ	0xFDA
  2175                           fsr2l	equ	0xFD9
  2176                           status	equ	0xFD8
  2177                           
  2178 ;; *************** function _blink0 *****************
  2179 ;; Defined at:
  2180 ;;		line 46 in file "../src/debug.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;		None               void
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2198 ;;Total ram usage:        0 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:   11
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_timer1_lthread
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text5
  2209  001D1C                     __ptext5:
  2210                           	opt stack 0
  2211  001D1C                     _blink0:
  2212                           	opt stack 18
  2213                           
  2214                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  2215                           
  2216                           ;incstack = 0
  2217  001D1C  708A               	btg	3978,0,c	;volatile
  2218  001D1E  0012               	return	
  2219  001D20                     __end_of_blink0:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           indf2	equ	0xFDF
  2230                           postinc2	equ	0xFDE
  2231                           postdec2	equ	0xFDD
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function ___lwmod *****************
  2237 ;; Defined at:
  2238 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  dividend        2    0[BANK1 ] unsigned int 
  2241 ;;  divisor         2    2[BANK1 ] unsigned int 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  counter         1    4[BANK1 ] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  2    0[BANK1 ] unsigned int 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2253 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;Total ram usage:        5 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:   11
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_timer1_lthread
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text6
  2268  001736                     __ptext6:
  2269                           	opt stack 0
  2270  001736                     ___lwmod:
  2271                           	opt stack 18
  2272                           
  2273                           ;incstack = 0
  2274  001736  0101               	movlb	1	; () banked
  2275  001738  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2276  00173A  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  2277  00173C  B4D8               	btfsc	status,2,c
  2278  00173E  D026               	goto	l1130
  2279                           
  2280                           ; BSR set to: 1
  2281  001740  0E01               	movlw	1
  2282  001742  0101               	movlb	1	; () banked
  2283  001744  6F04               	movwf	___lwmod@counter& (0+255),b
  2284  001746  D006               	goto	l3459
  2285  001748                     l3457:
  2286                           
  2287                           ; BSR set to: 1
  2288  001748  0101               	movlb	1	; () banked
  2289  00174A  90D8               	bcf	status,0,c
  2290  00174C  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  2291  00174E  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2292  001750  0101               	movlb	1	; () banked
  2293  001752  2B04               	incf	___lwmod@counter& (0+255),f,b
  2294  001754                     l3459:
  2295                           
  2296                           ; BSR set to: 1
  2297  001754  0101               	movlb	1	; () banked
  2298  001756  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2299  001758  D7F7               	goto	l3457
  2300  00175A                     l3461:
  2301                           
  2302                           ; BSR set to: 1
  2303  00175A  0101               	movlb	1	; () banked
  2304  00175C  5102               	movf	___lwmod@divisor& (0+255),w,b
  2305  00175E  0101               	movlb	1	; () banked
  2306  001760  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  2307  001762  0101               	movlb	1	; () banked
  2308  001764  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2309  001766  0101               	movlb	1	; () banked
  2310  001768  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2311  00176A  A0D8               	btfss	status,0,c
  2312  00176C  D008               	goto	l3465
  2313                           
  2314                           ; BSR set to: 1
  2315  00176E  0101               	movlb	1	; () banked
  2316  001770  5102               	movf	___lwmod@divisor& (0+255),w,b
  2317  001772  0101               	movlb	1	; () banked
  2318  001774  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  2319  001776  0101               	movlb	1	; () banked
  2320  001778  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2321  00177A  0101               	movlb	1	; () banked
  2322  00177C  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2323  00177E                     l3465:
  2324                           
  2325                           ; BSR set to: 1
  2326  00177E  0101               	movlb	1	; () banked
  2327  001780  90D8               	bcf	status,0,c
  2328  001782  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2329  001784  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  2330                           
  2331                           ; BSR set to: 1
  2332  001786  0101               	movlb	1	; () banked
  2333  001788  2F04               	decfsz	___lwmod@counter& (0+255),f,b
  2334  00178A  D7E7               	goto	l3461
  2335  00178C                     l1130:
  2336                           
  2337                           ; BSR set to: 1
  2338  00178C  C100  F100         	movff	___lwmod@dividend,?___lwmod
  2339  001790  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  2340                           
  2341                           ; BSR set to: 1
  2342  001794  0012               	return	
  2343  001796                     __end_of___lwmod:
  2344                           	opt stack 0
  2345                           tblptru	equ	0xFF8
  2346                           tblptrh	equ	0xFF7
  2347                           tblptrl	equ	0xFF6
  2348                           tablat	equ	0xFF5
  2349                           prodh	equ	0xFF4
  2350                           prodl	equ	0xFF3
  2351                           postinc0	equ	0xFEE
  2352                           wreg	equ	0xFE8
  2353                           indf2	equ	0xFDF
  2354                           postinc2	equ	0xFDE
  2355                           postdec2	equ	0xFDD
  2356                           fsr2h	equ	0xFDA
  2357                           fsr2l	equ	0xFD9
  2358                           status	equ	0xFD8
  2359                           
  2360 ;; *************** function _FromMainHigh_sendmsg *****************
  2361 ;; Defined at:
  2362 ;;		line 174 in file "../src/messages.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  length          1    wreg     unsigned char 
  2365 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2366 ;;  data            2   23[BANK1 ] PTR void 
  2367 ;;		 -> main@t1thread_data(2), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  length          1   25[BANK1 ] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      char 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2379 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2380 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;Total ram usage:        4 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:   13
  2386 ;; This function calls:
  2387 ;;		_send_msg
  2388 ;; This function is called by:
  2389 ;;		_timer1_lthread
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text7
  2394  001B1C                     __ptext7:
  2395                           	opt stack 0
  2396  001B1C                     _FromMainHigh_sendmsg:
  2397                           	opt stack 16
  2398                           
  2399                           ; BSR set to: 1
  2400                           ;incstack = 0
  2401                           ;FromMainHigh_sendmsg@length stored from wreg
  2402  001B1C  0101               	movlb	1	; () banked
  2403  001B1E  6F19               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2407  001B20  0105               	movlb	5	; () banked
  2408  001B22  0E05               	movlw	high _FromMainHigh_MQ
  2409  001B24  0101               	movlb	1	; () banked
  2410  001B26  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2411  001B28  0105               	movlb	5	; () banked
  2412  001B2A  0E00               	movlw	low _FromMainHigh_MQ
  2413  001B2C  0101               	movlb	1	; () banked
  2414  001B2E  6F0A               	movwf	send_msg@qptr& (0+255),b
  2415  001B30  C119  F10C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2416  001B34  C116  F10D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2417  001B38  0101               	movlb	1	; () banked
  2418  001B3A  C118  F10F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2419  001B3E  0101               	movlb	1	; () banked
  2420  001B40  C117  F10E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2421  001B44  EC6E  F007         	call	_send_msg	;wreg free
  2422  001B48  0012               	return	
  2423  001B4A                     __end_of_FromMainHigh_sendmsg:
  2424                           	opt stack 0
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           prodh	equ	0xFF4
  2430                           prodl	equ	0xFF3
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           indf2	equ	0xFDF
  2434                           postinc2	equ	0xFDE
  2435                           postdec2	equ	0xFDD
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function _send_msg *****************
  2441 ;; Defined at:
  2442 ;;		line 24 in file "../src/messages.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2445 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2446 ;;  length          1   12[BANK1 ] unsigned char 
  2447 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2448 ;;  data            2   14[BANK1 ] PTR void 
  2449 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  2450 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  2451 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  2452 ;;		 -> main@t1thread_data(2), main@ic(38), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2455 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  2456 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2457 ;;  tlength         2   17[BANK1 ] unsigned int 
  2458 ;;  slot            1   19[BANK1 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      char 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2468 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2469 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;Total ram usage:       12 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:   12
  2475 ;; This function calls:
  2476 ;;		_memcpy
  2477 ;; This function is called by:
  2478 ;;		_FromMainLow_sendmsg
  2479 ;;		_FromMainHigh_sendmsg
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text8
  2484  000EDC                     __ptext8:
  2485                           	opt stack 0
  2486  000EDC                     _send_msg:
  2487                           	opt stack 15
  2488                           
  2489                           ;messages.c: 25: unsigned char slot;
  2490                           ;messages.c: 27: msg *qmsg;
  2491                           ;messages.c: 28: size_t tlength = length;
  2492                           
  2493                           ;incstack = 0
  2494  000EDC  0101               	movlb	1	; () banked
  2495  000EDE  C10C  F111         	movff	send_msg@length,send_msg@tlength
  2496  000EE2  0101               	movlb	1	; () banked
  2497  000EE4  6B12               	clrf	(send_msg@tlength+1)& (0+255),b
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2501  000EE6  0101               	movlb	1	; () banked
  2502  000EE8  EE20 F088          	lfsr	2,136
  2503  000EEC  0101               	movlb	1	; () banked
  2504  000EEE  510A               	movf	send_msg@qptr& (0+255),w,b
  2505  000EF0  26D9               	addwf	fsr2l,f,c
  2506  000EF2  0101               	movlb	1	; () banked
  2507  000EF4  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2508  000EF6  22DA               	addwfc	fsr2h,f,c
  2509  000EF8  50DF               	movf	indf2,w,c
  2510  000EFA  0101               	movlb	1	; () banked
  2511  000EFC  6F13               	movwf	send_msg@slot& (0+255),b
  2512                           
  2513                           ; BSR set to: 1
  2514                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2515  000EFE  0101               	movlb	1	; () banked
  2516  000F00  5113               	movf	send_msg@slot& (0+255),w,b
  2517  000F02  0D11               	mullw	17
  2518  000F04  50F3               	movf	prodl,w,c
  2519  000F06  0101               	movlb	1	; () banked
  2520  000F08  250A               	addwf	send_msg@qptr& (0+255),w,b
  2521  000F0A  0101               	movlb	1	; () banked
  2522  000F0C  6F14               	movwf	send_msg@qmsg& (0+255),b
  2523  000F0E  50F4               	movf	prodh,w,c
  2524  000F10  0101               	movlb	1	; () banked
  2525  000F12  210B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2526  000F14  0101               	movlb	1	; () banked
  2527  000F16  6F15               	movwf	(send_msg@qmsg+1)& (0+255),b
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;messages.c: 41: if (qmsg->full != 0) {
  2531  000F18  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2532  000F1C  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2533  000F20  50DF               	movf	indf2,w,c
  2534  000F22  B4D8               	btfsc	status,2,c
  2535  000F24  D002               	goto	l3381
  2536                           
  2537                           ; BSR set to: 1
  2538                           ;messages.c: 42: return (-1);
  2539  000F26  0EFF               	movlw	255
  2540  000F28  0012               	return	
  2541  000F2A                     l3381:
  2542                           
  2543                           ; BSR set to: 1
  2544                           ;messages.c: 43: }
  2545                           ;messages.c: 46: qmsg->length = length;
  2546  000F2A  0101               	movlb	1	; () banked
  2547  000F2C  EE20 F001          	lfsr	2,1
  2548  000F30  0101               	movlb	1	; () banked
  2549  000F32  5114               	movf	send_msg@qmsg& (0+255),w,b
  2550  000F34  26D9               	addwf	fsr2l,f,c
  2551  000F36  0101               	movlb	1	; () banked
  2552  000F38  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2553  000F3A  22DA               	addwfc	fsr2h,f,c
  2554  000F3C  0101               	movlb	1	; () banked
  2555  000F3E  C10C  FFDF         	movff	send_msg@length,indf2
  2556                           
  2557                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2558  000F42  0101               	movlb	1	; () banked
  2559  000F44  EE20 F002          	lfsr	2,2
  2560  000F48  0101               	movlb	1	; () banked
  2561  000F4A  5114               	movf	send_msg@qmsg& (0+255),w,b
  2562  000F4C  26D9               	addwf	fsr2l,f,c
  2563  000F4E  0101               	movlb	1	; () banked
  2564  000F50  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2565  000F52  22DA               	addwfc	fsr2h,f,c
  2566  000F54  0101               	movlb	1	; () banked
  2567  000F56  C10D  FFDF         	movff	send_msg@msgtype,indf2
  2568                           
  2569                           ; BSR set to: 1
  2570                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2571  000F5A  0E03               	movlw	3
  2572  000F5C  0101               	movlb	1	; () banked
  2573  000F5E  2514               	addwf	send_msg@qmsg& (0+255),w,b
  2574  000F60  0101               	movlb	1	; () banked
  2575  000F62  6F00               	movwf	memcpy@d1& (0+255),b
  2576  000F64  0E00               	movlw	0
  2577  000F66  0101               	movlb	1	; () banked
  2578  000F68  2115               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2579  000F6A  0101               	movlb	1	; () banked
  2580  000F6C  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  2581  000F6E  0101               	movlb	1	; () banked
  2582  000F70  C10F  F103         	movff	send_msg@data+1,memcpy@s1+1
  2583  000F74  0101               	movlb	1	; () banked
  2584  000F76  C10E  F102         	movff	send_msg@data,memcpy@s1
  2585  000F7A  C111  F104         	movff	send_msg@tlength,memcpy@n
  2586  000F7E  C112  F105         	movff	send_msg@tlength+1,memcpy@n+1
  2587  000F82  EC27  F00C         	call	_memcpy	;wreg free
  2588                           
  2589                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  2590  000F86  0101               	movlb	1	; () banked
  2591  000F88  EE20 F088          	lfsr	2,136
  2592  000F8C  0101               	movlb	1	; () banked
  2593  000F8E  510A               	movf	send_msg@qptr& (0+255),w,b
  2594  000F90  26D9               	addwf	fsr2l,f,c
  2595  000F92  0101               	movlb	1	; () banked
  2596  000F94  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2597  000F96  22DA               	addwfc	fsr2h,f,c
  2598  000F98  0101               	movlb	1	; () banked
  2599  000F9A  EE10 F088          	lfsr	1,136
  2600  000F9E  0101               	movlb	1	; () banked
  2601  000FA0  510A               	movf	send_msg@qptr& (0+255),w,b
  2602  000FA2  26E1               	addwf	fsr1l,f,c
  2603  000FA4  0101               	movlb	1	; () banked
  2604  000FA6  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2605  000FA8  22E2               	addwfc	fsr1h,f,c
  2606  000FAA  50E7               	movf	indf1,w,c
  2607  000FAC  0101               	movlb	1	; () banked
  2608  000FAE  6F10               	movwf	??_send_msg& (0+255),b
  2609  000FB0  0101               	movlb	1	; () banked
  2610  000FB2  2910               	incf	??_send_msg& (0+255),w,b
  2611  000FB4  0B07               	andlw	7
  2612  000FB6  6EDF               	movwf	indf2,c
  2613                           
  2614                           ; BSR set to: 1
  2615                           ;messages.c: 59: qmsg->full = 1;
  2616  000FB8  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2617  000FBC  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2618  000FC0  0E01               	movlw	1
  2619  000FC2  6EDF               	movwf	indf2,c
  2620                           
  2621                           ; BSR set to: 1
  2622                           ;messages.c: 60: return (1);
  2623  000FC4  0E01               	movlw	1
  2624  000FC6  0012               	return	
  2625  000FC8                     __end_of_send_msg:
  2626                           	opt stack 0
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           prodh	equ	0xFF4
  2632                           prodl	equ	0xFF3
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           indf1	equ	0xFE7
  2636                           fsr1h	equ	0xFE2
  2637                           fsr1l	equ	0xFE1
  2638                           indf2	equ	0xFDF
  2639                           postinc2	equ	0xFDE
  2640                           postdec2	equ	0xFDD
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function _timer0_lthread *****************
  2646 ;; Defined at:
  2647 ;;		line 9 in file "../src/timer0_thread.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2650 ;;		 -> main@t0thread_data(2), 
  2651 ;;  msgtype         2    2[BANK1 ] int 
  2652 ;;  length          2    4[BANK1 ] int 
  2653 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2654 ;;		 -> main@msgbuffer(15), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2657 ;;		 -> main@msgbuffer(15), 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  2    0[BANK1 ] int 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2667 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2670 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2671 ;;Total ram usage:       10 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:   11
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_main
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text9
  2682  001CAE                     __ptext9:
  2683                           	opt stack 0
  2684  001CAE                     _timer0_lthread:
  2685                           	opt stack 19
  2686                           
  2687                           ;timer0_thread.c: 10: unsigned int *msgval;
  2688                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2689                           
  2690                           ; BSR set to: 1
  2691                           ;incstack = 0
  2692  001CAE  0101               	movlb	1	; () banked
  2693  001CB0  C107  F109         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2694  001CB4  0101               	movlb	1	; () banked
  2695  001CB6  C106  F108         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2696                           
  2697                           ; BSR set to: 1
  2698  001CBA  0012               	return	
  2699  001CBC                     __end_of_timer0_lthread:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           prodh	equ	0xFF4
  2706                           prodl	equ	0xFF3
  2707                           postinc0	equ	0xFEE
  2708                           wreg	equ	0xFE8
  2709                           indf1	equ	0xFE7
  2710                           fsr1h	equ	0xFE2
  2711                           fsr1l	equ	0xFE1
  2712                           indf2	equ	0xFDF
  2713                           postinc2	equ	0xFDE
  2714                           postdec2	equ	0xFDD
  2715                           fsr2h	equ	0xFDA
  2716                           fsr2l	equ	0xFD9
  2717                           status	equ	0xFD8
  2718                           
  2719 ;; *************** function _init_timer1_lthread *****************
  2720 ;; Defined at:
  2721 ;;		line 8 in file "../src/timer1_thread.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2724 ;;		 -> main@t1thread_data(2), 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;		None               void
  2729 ;; Registers used:
  2730 ;;		wreg, fsr2l, fsr2h
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2736 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;Total ram usage:        2 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:   11
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text10
  2751  001C56                     __ptext10:
  2752                           	opt stack 0
  2753  001C56                     _init_timer1_lthread:
  2754                           	opt stack 19
  2755                           
  2756                           ;timer1_thread.c: 9: tptr->msgcount = 0;
  2757                           
  2758                           ; BSR set to: 1
  2759                           ;incstack = 0
  2760  001C56  C100  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2761  001C5A  C101  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2762  001C5E  0E00               	movlw	0
  2763  001C60  6EDE               	movwf	postinc2,c
  2764  001C62  0E00               	movlw	0
  2765  001C64  6EDD               	movwf	postdec2,c
  2766  001C66  0012               	return	
  2767  001C68                     __end_of_init_timer1_lthread:
  2768                           	opt stack 0
  2769                           tblptru	equ	0xFF8
  2770                           tblptrh	equ	0xFF7
  2771                           tblptrl	equ	0xFF6
  2772                           tablat	equ	0xFF5
  2773                           prodh	equ	0xFF4
  2774                           prodl	equ	0xFF3
  2775                           postinc0	equ	0xFEE
  2776                           wreg	equ	0xFE8
  2777                           indf1	equ	0xFE7
  2778                           fsr1h	equ	0xFE2
  2779                           fsr1l	equ	0xFE1
  2780                           indf2	equ	0xFDF
  2781                           postinc2	equ	0xFDE
  2782                           postdec2	equ	0xFDD
  2783                           fsr2h	equ	0xFDA
  2784                           fsr2l	equ	0xFD9
  2785                           status	equ	0xFD8
  2786                           
  2787 ;; *************** function _init_queues *****************
  2788 ;; Defined at:
  2789 ;;		line 194 in file "../src/messages.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;		None               void
  2796 ;; Registers used:
  2797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;Total ram usage:        0 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:   12
  2810 ;; This function calls:
  2811 ;;		_init_queue
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text11
  2818  0017F6                     __ptext11:
  2819                           	opt stack 0
  2820  0017F6                     _init_queues:
  2821                           	opt stack 18
  2822                           
  2823                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2824                           
  2825                           ;incstack = 0
  2826  0017F6  0E00               	movlw	0
  2827  0017F8  0100               	movlb	0	; () banked
  2828  0017FA  6FB1               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2832  0017FC  0102               	movlb	2	; () banked
  2833  0017FE  0E02               	movlw	high _ToMainLow_MQ
  2834  001800  0101               	movlb	1	; () banked
  2835  001802  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2836  001804  0102               	movlb	2	; () banked
  2837  001806  0E00               	movlw	low _ToMainLow_MQ
  2838  001808  0101               	movlb	1	; () banked
  2839  00180A  6F00               	movwf	init_queue@qptr& (0+255),b
  2840  00180C  EC69  F00B         	call	_init_queue	;wreg free
  2841                           
  2842                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2843  001810  0103               	movlb	3	; () banked
  2844  001812  0E03               	movlw	high _ToMainHigh_MQ
  2845  001814  0101               	movlb	1	; () banked
  2846  001816  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2847  001818  0103               	movlb	3	; () banked
  2848  00181A  0E00               	movlw	low _ToMainHigh_MQ
  2849  00181C  0101               	movlb	1	; () banked
  2850  00181E  6F00               	movwf	init_queue@qptr& (0+255),b
  2851  001820  EC69  F00B         	call	_init_queue	;wreg free
  2852                           
  2853                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2854  001824  0104               	movlb	4	; () banked
  2855  001826  0E04               	movlw	high _FromMainLow_MQ
  2856  001828  0101               	movlb	1	; () banked
  2857  00182A  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2858  00182C  0104               	movlb	4	; () banked
  2859  00182E  0E00               	movlw	low _FromMainLow_MQ
  2860  001830  0101               	movlb	1	; () banked
  2861  001832  6F00               	movwf	init_queue@qptr& (0+255),b
  2862  001834  EC69  F00B         	call	_init_queue	;wreg free
  2863                           
  2864                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2865  001838  0105               	movlb	5	; () banked
  2866  00183A  0E05               	movlw	high _FromMainHigh_MQ
  2867  00183C  0101               	movlb	1	; () banked
  2868  00183E  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2869  001840  0105               	movlb	5	; () banked
  2870  001842  0E00               	movlw	low _FromMainHigh_MQ
  2871  001844  0101               	movlb	1	; () banked
  2872  001846  6F00               	movwf	init_queue@qptr& (0+255),b
  2873  001848  EC69  F00B         	call	_init_queue	;wreg free
  2874  00184C  0012               	return	
  2875  00184E                     __end_of_init_queues:
  2876                           	opt stack 0
  2877                           tblptru	equ	0xFF8
  2878                           tblptrh	equ	0xFF7
  2879                           tblptrl	equ	0xFF6
  2880                           tablat	equ	0xFF5
  2881                           prodh	equ	0xFF4
  2882                           prodl	equ	0xFF3
  2883                           postinc0	equ	0xFEE
  2884                           wreg	equ	0xFE8
  2885                           indf1	equ	0xFE7
  2886                           fsr1h	equ	0xFE2
  2887                           fsr1l	equ	0xFE1
  2888                           indf2	equ	0xFDF
  2889                           postinc2	equ	0xFDE
  2890                           postdec2	equ	0xFDD
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _init_queue *****************
  2896 ;; Defined at:
  2897 ;;		line 14 in file "../src/messages.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2900 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  i               1    2[BANK1 ] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2912 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;Total ram usage:        3 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:   11
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_init_queues
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text12
  2927  0016D2                     __ptext12:
  2928                           	opt stack 0
  2929  0016D2                     _init_queue:
  2930                           	opt stack 18
  2931                           
  2932                           ;messages.c: 15: unsigned char i;
  2933                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2934                           
  2935                           ;incstack = 0
  2936  0016D2  0101               	movlb	1	; () banked
  2937  0016D4  EE20 F088          	lfsr	2,136
  2938  0016D8  0101               	movlb	1	; () banked
  2939  0016DA  5100               	movf	init_queue@qptr& (0+255),w,b
  2940  0016DC  26D9               	addwf	fsr2l,f,c
  2941  0016DE  0101               	movlb	1	; () banked
  2942  0016E0  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  2943  0016E2  22DA               	addwfc	fsr2h,f,c
  2944  0016E4  0E00               	movlw	0
  2945  0016E6  6EDF               	movwf	indf2,c
  2946                           
  2947                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2948  0016E8  0101               	movlb	1	; () banked
  2949  0016EA  EE20 F089          	lfsr	2,137
  2950  0016EE  0101               	movlb	1	; () banked
  2951  0016F0  5100               	movf	init_queue@qptr& (0+255),w,b
  2952  0016F2  26D9               	addwf	fsr2l,f,c
  2953  0016F4  0101               	movlb	1	; () banked
  2954  0016F6  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  2955  0016F8  22DA               	addwfc	fsr2h,f,c
  2956  0016FA  0E00               	movlw	0
  2957  0016FC  6EDF               	movwf	indf2,c
  2958                           
  2959                           ; BSR set to: 1
  2960                           ;messages.c: 19: for (i = 0; i < 8; i++) {
  2961  0016FE  0E00               	movlw	0
  2962  001700  0101               	movlb	1	; () banked
  2963  001702  6F02               	movwf	init_queue@i& (0+255),b
  2964                           
  2965                           ; BSR set to: 1
  2966  001704  0E07               	movlw	7
  2967  001706  0101               	movlb	1	; () banked
  2968  001708  6502               	cpfsgt	init_queue@i& (0+255),b
  2969  00170A  D001               	goto	l3409
  2970  00170C  0012               	return	
  2971  00170E                     l3409:
  2972                           
  2973                           ; BSR set to: 1
  2974                           ;messages.c: 20: qptr->queue[i].full = 0;
  2975  00170E  0101               	movlb	1	; () banked
  2976  001710  5102               	movf	init_queue@i& (0+255),w,b
  2977  001712  0D11               	mullw	17
  2978  001714  50F3               	movf	prodl,w,c
  2979  001716  0101               	movlb	1	; () banked
  2980  001718  2500               	addwf	init_queue@qptr& (0+255),w,b
  2981  00171A  6ED9               	movwf	fsr2l,c
  2982  00171C  50F4               	movf	prodh,w,c
  2983  00171E  0101               	movlb	1	; () banked
  2984  001720  2101               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2985  001722  6EDA               	movwf	fsr2h,c
  2986  001724  0E00               	movlw	0
  2987  001726  6EDF               	movwf	indf2,c
  2988                           
  2989                           ; BSR set to: 1
  2990  001728  0101               	movlb	1	; () banked
  2991  00172A  2B02               	incf	init_queue@i& (0+255),f,b
  2992                           
  2993                           ; BSR set to: 1
  2994  00172C  0E07               	movlw	7
  2995  00172E  0101               	movlb	1	; () banked
  2996  001730  6502               	cpfsgt	init_queue@i& (0+255),b
  2997  001732  D7ED               	goto	l3409
  2998  001734  0012               	return	
  2999  001736                     __end_of_init_queue:
  3000                           	opt stack 0
  3001                           tblptru	equ	0xFF8
  3002                           tblptrh	equ	0xFF7
  3003                           tblptrl	equ	0xFF6
  3004                           tablat	equ	0xFF5
  3005                           prodh	equ	0xFF4
  3006                           prodl	equ	0xFF3
  3007                           postinc0	equ	0xFEE
  3008                           wreg	equ	0xFE8
  3009                           indf1	equ	0xFE7
  3010                           fsr1h	equ	0xFE2
  3011                           fsr1l	equ	0xFE1
  3012                           indf2	equ	0xFDF
  3013                           postinc2	equ	0xFDE
  3014                           postdec2	equ	0xFDD
  3015                           fsr2h	equ	0xFDA
  3016                           fsr2l	equ	0xFD9
  3017                           status	equ	0xFD8
  3018                           
  3019 ;; *************** function _init_i2c *****************
  3020 ;; Defined at:
  3021 ;;		line 327 in file "../src/my_i2c.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3024 ;;		 -> main@ic(38), 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3036 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;Total ram usage:        2 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:   11
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text13
  3051  001668                     __ptext13:
  3052                           	opt stack 0
  3053  001668                     _init_i2c:
  3054                           	opt stack 19
  3055                           
  3056                           ;my_i2c.c: 328: ic_ptr = ic;
  3057                           
  3058                           ; BSR set to: 1
  3059                           ;incstack = 0
  3060  001668  0101               	movlb	1	; () banked
  3061  00166A  0100               	movlb	0	; () banked
  3062  00166C  C101  F0D5         	movff	init_i2c@ic+1,_ic_ptr+1
  3063  001670  0101               	movlb	1	; () banked
  3064  001672  0100               	movlb	0	; () banked
  3065  001674  C100  F0D4         	movff	init_i2c@ic,_ic_ptr
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;my_i2c.c: 329: ic_ptr->buflen = 0;
  3069  001678  0100               	movlb	0	; () banked
  3070  00167A  EE20 F00E          	lfsr	2,14
  3071  00167E  0100               	movlb	0	; () banked
  3072  001680  51D4               	movf	_ic_ptr& (0+255),w,b
  3073  001682  26D9               	addwf	fsr2l,f,c
  3074  001684  0100               	movlb	0	; () banked
  3075  001686  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  3076  001688  22DA               	addwfc	fsr2h,f,c
  3077  00168A  0E00               	movlw	0
  3078  00168C  6EDF               	movwf	indf2,c
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;my_i2c.c: 330: ic_ptr->event_count = 0;
  3082  00168E  0100               	movlb	0	; () banked
  3083  001690  EE20 F020          	lfsr	2,32
  3084  001694  0100               	movlb	0	; () banked
  3085  001696  51D4               	movf	_ic_ptr& (0+255),w,b
  3086  001698  26D9               	addwf	fsr2l,f,c
  3087  00169A  0100               	movlb	0	; () banked
  3088  00169C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  3089  00169E  22DA               	addwfc	fsr2h,f,c
  3090  0016A0  0E00               	movlw	0
  3091  0016A2  6EDF               	movwf	indf2,c
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;my_i2c.c: 331: ic_ptr->status = 0x5;
  3095  0016A4  0100               	movlb	0	; () banked
  3096  0016A6  EE20 F021          	lfsr	2,33
  3097  0016AA  0100               	movlb	0	; () banked
  3098  0016AC  51D4               	movf	_ic_ptr& (0+255),w,b
  3099  0016AE  26D9               	addwf	fsr2l,f,c
  3100  0016B0  0100               	movlb	0	; () banked
  3101  0016B2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  3102  0016B4  22DA               	addwfc	fsr2h,f,c
  3103  0016B6  0E05               	movlw	5
  3104  0016B8  6EDF               	movwf	indf2,c
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;my_i2c.c: 332: ic_ptr->error_count = 0;
  3108  0016BA  0100               	movlb	0	; () banked
  3109  0016BC  EE20 F023          	lfsr	2,35
  3110  0016C0  0100               	movlb	0	; () banked
  3111  0016C2  51D4               	movf	_ic_ptr& (0+255),w,b
  3112  0016C4  26D9               	addwf	fsr2l,f,c
  3113  0016C6  0100               	movlb	0	; () banked
  3114  0016C8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  3115  0016CA  22DA               	addwfc	fsr2h,f,c
  3116  0016CC  0E00               	movlw	0
  3117  0016CE  6EDF               	movwf	indf2,c
  3118                           
  3119                           ; BSR set to: 0
  3120  0016D0  0012               	return	
  3121  0016D2                     __end_of_init_i2c:
  3122                           	opt stack 0
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           prodh	equ	0xFF4
  3128                           prodl	equ	0xFF3
  3129                           postinc0	equ	0xFEE
  3130                           wreg	equ	0xFE8
  3131                           indf1	equ	0xFE7
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           indf2	equ	0xFDF
  3135                           postinc2	equ	0xFDE
  3136                           postdec2	equ	0xFDD
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function _i2c_configure_slave *****************
  3142 ;; Defined at:
  3143 ;;		line 338 in file "../src/my_i2c.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  addr            1    wreg     unsigned char 
  3146 ;;  ptr_thingy      2    0[BANK1 ] PTR unsigned char 
  3147 ;;		 -> main@need_sensor_data(1), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  addr            1    2[BANK1 ] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;		None               void
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3159 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;Total ram usage:        3 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:   11
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_main
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text14
  3174  0019E2                     __ptext14:
  3175                           	opt stack 0
  3176  0019E2                     _i2c_configure_slave:
  3177                           	opt stack 19
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;incstack = 0
  3181                           ;i2c_configure_slave@addr stored from wreg
  3182  0019E2  0101               	movlb	1	; () banked
  3183  0019E4  6F02               	movwf	i2c_configure_slave@addr& (0+255),b
  3184                           
  3185                           ; BSR set to: 1
  3186                           ;my_i2c.c: 340: need_sensor_data = ptr_thingy;
  3187  0019E6  0101               	movlb	1	; () banked
  3188  0019E8  0100               	movlb	0	; () banked
  3189  0019EA  C101  F0B0         	movff	i2c_configure_slave@ptr_thingy+1,_need_sensor_data+1
  3190  0019EE  0101               	movlb	1	; () banked
  3191  0019F0  0100               	movlb	0	; () banked
  3192  0019F2  C100  F0AF         	movff	i2c_configure_slave@ptr_thingy,_need_sensor_data
  3193                           
  3194                           ;my_i2c.c: 348: TRISBbits.TRISB4 = 1;
  3195  0019F6  8893               	bsf	3987,4,c	;volatile
  3196                           
  3197                           ;my_i2c.c: 349: TRISBbits.TRISB5 = 1;
  3198  0019F8  8A93               	bsf	3987,5,c	;volatile
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;my_i2c.c: 357: SSPADD = addr;
  3202  0019FA  C102  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;my_i2c.c: 359: SSPSTAT = 0x0;
  3206  0019FE  0E00               	movlw	0
  3207  001A00  6EC7               	movwf	4039,c	;volatile
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;my_i2c.c: 360: SSPCON1 = 0x0;
  3211  001A02  0E00               	movlw	0
  3212  001A04  6EC6               	movwf	4038,c	;volatile
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;my_i2c.c: 361: SSPCON2 = 0x0;
  3216  001A06  0E00               	movlw	0
  3217  001A08  6EC5               	movwf	4037,c	;volatile
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;my_i2c.c: 362: SSPCON1 |= 0x0E;
  3221  001A0A  0E0E               	movlw	14
  3222  001A0C  12C6               	iorwf	4038,f,c	;volatile
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;my_i2c.c: 363: SSPSTAT |= 0b10000000;
  3226  001A0E  8EC7               	bsf	4039,7,c	;volatile
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;my_i2c.c: 378: PORTBbits.SCL1 = 1;
  3230  001A10  8881               	bsf	3969,4,c	;volatile
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;my_i2c.c: 379: PORTBbits.SDA1 = 1;
  3234  001A12  8A81               	bsf	3969,5,c	;volatile
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;my_i2c.c: 388: SSPCON2bits.SEN = 1;
  3238  001A14  80C5               	bsf	4037,0,c	;volatile
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;my_i2c.c: 389: SSPCON1 |= 0b00100000;
  3242  001A16  8AC6               	bsf	4038,5,c	;volatile
  3243                           
  3244                           ; BSR set to: 0
  3245  001A18  0012               	return	
  3246  001A1A                     __end_of_i2c_configure_slave:
  3247                           	opt stack 0
  3248                           tblptru	equ	0xFF8
  3249                           tblptrh	equ	0xFF7
  3250                           tblptrl	equ	0xFF6
  3251                           tablat	equ	0xFF5
  3252                           prodh	equ	0xFF4
  3253                           prodl	equ	0xFF3
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           indf1	equ	0xFE7
  3257                           fsr1h	equ	0xFE2
  3258                           fsr1l	equ	0xFE1
  3259                           indf2	equ	0xFDF
  3260                           postinc2	equ	0xFDE
  3261                           postdec2	equ	0xFDD
  3262                           fsr2h	equ	0xFDA
  3263                           fsr2l	equ	0xFD9
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _enable_interrupts *****************
  3267 ;; Defined at:
  3268 ;;		line 14 in file "../src/interrupts.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;		None               void
  3275 ;; Registers used:
  3276 ;;		None
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:   11
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text15
  3297  001CC6                     __ptext15:
  3298                           	opt stack 0
  3299  001CC6                     _enable_interrupts:
  3300                           	opt stack 19
  3301                           
  3302                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;incstack = 0
  3306  001CC6  8ED0               	bsf	4048,7,c	;volatile
  3307                           
  3308                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3309  001CC8  8EF2               	bsf	intcon,7,c	;volatile
  3310                           
  3311                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3312  001CCA  8CF2               	bsf	intcon,6,c	;volatile
  3313  001CCC  0012               	return	
  3314  001CCE                     __end_of_enable_interrupts:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           postinc0	equ	0xFEE
  3324                           wreg	equ	0xFE8
  3325                           indf1	equ	0xFE7
  3326                           fsr1h	equ	0xFE2
  3327                           fsr1l	equ	0xFE1
  3328                           indf2	equ	0xFDF
  3329                           postinc2	equ	0xFDE
  3330                           postdec2	equ	0xFDD
  3331                           fsr2h	equ	0xFDA
  3332                           fsr2l	equ	0xFD9
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function _debug_configure *****************
  3336 ;; Defined at:
  3337 ;;		line 3 in file "../src/debug.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;		None               void
  3344 ;; Registers used:
  3345 ;;		wreg, status,2
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:   11
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text16
  3366  001CBC                     __ptext16:
  3367                           	opt stack 0
  3368  001CBC                     _debug_configure:
  3369                           	opt stack 19
  3370                           
  3371                           ;debug.c: 5: TRISD = 0x00;
  3372                           
  3373                           ;incstack = 0
  3374  001CBC  0E00               	movlw	0
  3375  001CBE  6E95               	movwf	3989,c	;volatile
  3376                           
  3377                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3378  001CC0  9093               	bcf	3987,0,c	;volatile
  3379                           
  3380                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3381  001CC2  9293               	bcf	3987,1,c	;volatile
  3382  001CC4  0012               	return	
  3383  001CC6                     __end_of_debug_configure:
  3384                           	opt stack 0
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           prodh	equ	0xFF4
  3390                           prodl	equ	0xFF3
  3391                           intcon	equ	0xFF2
  3392                           postinc0	equ	0xFEE
  3393                           wreg	equ	0xFE8
  3394                           indf1	equ	0xFE7
  3395                           fsr1h	equ	0xFE2
  3396                           fsr1l	equ	0xFE1
  3397                           indf2	equ	0xFDF
  3398                           postinc2	equ	0xFDE
  3399                           postdec2	equ	0xFDD
  3400                           fsr2h	equ	0xFDA
  3401                           fsr2l	equ	0xFD9
  3402                           status	equ	0xFD8
  3403                           
  3404 ;; *************** function _blip3 *****************
  3405 ;; Defined at:
  3406 ;;		line 32 in file "../src/debug.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;		None
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;		None               void
  3413 ;; Registers used:
  3414 ;;		None
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3424 ;;Total ram usage:        0 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:   11
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_main
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text17
  3435  001CCE                     __ptext17:
  3436                           	opt stack 0
  3437  001CCE                     _blip3:
  3438                           	opt stack 19
  3439                           
  3440                           ;debug.c: 34: LATDbits.LD6 = 0;
  3441                           
  3442                           ;incstack = 0
  3443  001CCE  9C8C               	bcf	3980,6,c	;volatile
  3444                           
  3445                           ;debug.c: 35: LATDbits.LD6 = 1;
  3446  001CD0  8C8C               	bsf	3980,6,c	;volatile
  3447                           
  3448                           ;debug.c: 36: LATDbits.LD6 = 0;
  3449  001CD2  9C8C               	bcf	3980,6,c	;volatile
  3450  001CD4  0012               	return	
  3451  001CD6                     __end_of_blip3:
  3452                           	opt stack 0
  3453                           tblptru	equ	0xFF8
  3454                           tblptrh	equ	0xFF7
  3455                           tblptrl	equ	0xFF6
  3456                           tablat	equ	0xFF5
  3457                           prodh	equ	0xFF4
  3458                           prodl	equ	0xFF3
  3459                           intcon	equ	0xFF2
  3460                           postinc0	equ	0xFEE
  3461                           wreg	equ	0xFE8
  3462                           indf1	equ	0xFE7
  3463                           fsr1h	equ	0xFE2
  3464                           fsr1l	equ	0xFE1
  3465                           indf2	equ	0xFDF
  3466                           postinc2	equ	0xFDE
  3467                           postdec2	equ	0xFDD
  3468                           fsr2h	equ	0xFDA
  3469                           fsr2l	equ	0xFD9
  3470                           status	equ	0xFD8
  3471                           
  3472 ;; *************** function _blip2 *****************
  3473 ;; Defined at:
  3474 ;;		line 25 in file "../src/debug.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;		None               void
  3481 ;; Registers used:
  3482 ;;		None
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:   11
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text18
  3503  001CD6                     __ptext18:
  3504                           	opt stack 0
  3505  001CD6                     _blip2:
  3506                           	opt stack 19
  3507                           
  3508                           ;debug.c: 27: LATDbits.LD5 = 0;
  3509                           
  3510                           ;incstack = 0
  3511  001CD6  9A8C               	bcf	3980,5,c	;volatile
  3512                           
  3513                           ;debug.c: 28: LATDbits.LD5 = 1;
  3514  001CD8  8A8C               	bsf	3980,5,c	;volatile
  3515                           
  3516                           ;debug.c: 29: LATDbits.LD5 = 0;
  3517  001CDA  9A8C               	bcf	3980,5,c	;volatile
  3518  001CDC  0012               	return	
  3519  001CDE                     __end_of_blip2:
  3520                           	opt stack 0
  3521                           tblptru	equ	0xFF8
  3522                           tblptrh	equ	0xFF7
  3523                           tblptrl	equ	0xFF6
  3524                           tablat	equ	0xFF5
  3525                           prodh	equ	0xFF4
  3526                           prodl	equ	0xFF3
  3527                           intcon	equ	0xFF2
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           indf1	equ	0xFE7
  3531                           fsr1h	equ	0xFE2
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           postinc2	equ	0xFDE
  3535                           postdec2	equ	0xFDD
  3536                           fsr2h	equ	0xFDA
  3537                           fsr2l	equ	0xFD9
  3538                           status	equ	0xFD8
  3539                           
  3540 ;; *************** function _blip1 *****************
  3541 ;; Defined at:
  3542 ;;		line 18 in file "../src/debug.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;		None               void
  3549 ;; Registers used:
  3550 ;;		None
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:   11
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text19
  3571  001CDE                     __ptext19:
  3572                           	opt stack 0
  3573  001CDE                     _blip1:
  3574                           	opt stack 19
  3575                           
  3576                           ;debug.c: 20: LATDbits.LD4 = 0;
  3577                           
  3578                           ;incstack = 0
  3579  001CDE  988C               	bcf	3980,4,c	;volatile
  3580                           
  3581                           ;debug.c: 21: LATDbits.LD4 = 1;
  3582  001CE0  888C               	bsf	3980,4,c	;volatile
  3583                           
  3584                           ;debug.c: 22: LATDbits.LD4 = 0;
  3585  001CE2  988C               	bcf	3980,4,c	;volatile
  3586  001CE4  0012               	return	
  3587  001CE6                     __end_of_blip1:
  3588                           	opt stack 0
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           intcon	equ	0xFF2
  3596                           postinc0	equ	0xFEE
  3597                           wreg	equ	0xFE8
  3598                           indf1	equ	0xFE7
  3599                           fsr1h	equ	0xFE2
  3600                           fsr1l	equ	0xFE1
  3601                           indf2	equ	0xFDF
  3602                           postinc2	equ	0xFDE
  3603                           postdec2	equ	0xFDD
  3604                           fsr2h	equ	0xFDA
  3605                           fsr2l	equ	0xFD9
  3606                           status	equ	0xFD8
  3607                           
  3608 ;; *************** function _blip *****************
  3609 ;; Defined at:
  3610 ;;		line 11 in file "../src/debug.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;		None               void
  3617 ;; Registers used:
  3618 ;;		None
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:   11
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text20
  3639  001CE6                     __ptext20:
  3640                           	opt stack 0
  3641  001CE6                     _blip:
  3642                           	opt stack 19
  3643                           
  3644                           ;debug.c: 13: LATDbits.LD2 = 0;
  3645                           
  3646                           ;incstack = 0
  3647  001CE6  948C               	bcf	3980,2,c	;volatile
  3648                           
  3649                           ;debug.c: 14: LATDbits.LD2 = 1;
  3650  001CE8  848C               	bsf	3980,2,c	;volatile
  3651                           
  3652                           ;debug.c: 15: LATDbits.LD2 = 0;
  3653  001CEA  948C               	bcf	3980,2,c	;volatile
  3654  001CEC  0012               	return	
  3655  001CEE                     __end_of_blip:
  3656                           	opt stack 0
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           prodh	equ	0xFF4
  3662                           prodl	equ	0xFF3
  3663                           intcon	equ	0xFF2
  3664                           postinc0	equ	0xFEE
  3665                           wreg	equ	0xFE8
  3666                           indf1	equ	0xFE7
  3667                           fsr1h	equ	0xFE2
  3668                           fsr1l	equ	0xFE1
  3669                           indf2	equ	0xFDF
  3670                           postinc2	equ	0xFDE
  3671                           postdec2	equ	0xFDD
  3672                           fsr2h	equ	0xFDA
  3673                           fsr2l	equ	0xFD9
  3674                           status	equ	0xFD8
  3675                           
  3676 ;; *************** function _ToMainLow_recvmsg *****************
  3677 ;; Defined at:
  3678 ;;		line 112 in file "../src/messages.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  maxlength       1    wreg     unsigned char 
  3681 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3682 ;;		 -> main@msgtype(1), 
  3683 ;;  data            2   26[BANK1 ] PTR void 
  3684 ;;		 -> main@msgbuffer(15), 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      char 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3696 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;Total ram usage:        5 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:   13
  3703 ;; This function calls:
  3704 ;;		_recv_msg
  3705 ;; This function is called by:
  3706 ;;		_main
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text21
  3711  001A1A                     __ptext21:
  3712                           	opt stack 0
  3713  001A1A                     _ToMainLow_recvmsg:
  3714                           	opt stack 17
  3715                           
  3716                           ;incstack = 0
  3717                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3718  001A1A  0101               	movlb	1	; () banked
  3719  001A1C  6F1C               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3723  001A1E  0102               	movlb	2	; () banked
  3724  001A20  0E02               	movlw	high _ToMainLow_MQ
  3725  001A22  0101               	movlb	1	; () banked
  3726  001A24  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  3727  001A26  0102               	movlb	2	; () banked
  3728  001A28  0E00               	movlw	low _ToMainLow_MQ
  3729  001A2A  0101               	movlb	1	; () banked
  3730  001A2C  6F0A               	movwf	recv_msg@qptr& (0+255),b
  3731  001A2E  C11C  F10C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3732  001A32  0101               	movlb	1	; () banked
  3733  001A34  C119  F10E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3734  001A38  0101               	movlb	1	; () banked
  3735  001A3A  C118  F10D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3736  001A3E  0101               	movlb	1	; () banked
  3737  001A40  C11B  F110         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3738  001A44  0101               	movlb	1	; () banked
  3739  001A46  C11A  F10F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3740  001A4A  EC50  F006         	call	_recv_msg	;wreg free
  3741  001A4E  0012               	return	
  3742  001A50                     __end_of_ToMainLow_recvmsg:
  3743                           	opt stack 0
  3744                           tblptru	equ	0xFF8
  3745                           tblptrh	equ	0xFF7
  3746                           tblptrl	equ	0xFF6
  3747                           tablat	equ	0xFF5
  3748                           prodh	equ	0xFF4
  3749                           prodl	equ	0xFF3
  3750                           intcon	equ	0xFF2
  3751                           postinc0	equ	0xFEE
  3752                           wreg	equ	0xFE8
  3753                           indf1	equ	0xFE7
  3754                           fsr1h	equ	0xFE2
  3755                           fsr1l	equ	0xFE1
  3756                           indf2	equ	0xFDF
  3757                           postinc2	equ	0xFDE
  3758                           postdec2	equ	0xFDD
  3759                           fsr2h	equ	0xFDA
  3760                           fsr2l	equ	0xFD9
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function _ToMainHigh_recvmsg *****************
  3764 ;; Defined at:
  3765 ;;		line 135 in file "../src/messages.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  maxlength       1    wreg     unsigned char 
  3768 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3769 ;;		 -> main@msgtype(1), 
  3770 ;;  data            2   26[BANK1 ] PTR void 
  3771 ;;		 -> main@msgbuffer(15), 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      char 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3783 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3787 ;;Total ram usage:        5 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:   13
  3790 ;; This function calls:
  3791 ;;		_recv_msg
  3792 ;; This function is called by:
  3793 ;;		_main
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text22
  3798  001A50                     __ptext22:
  3799                           	opt stack 0
  3800  001A50                     _ToMainHigh_recvmsg:
  3801                           	opt stack 17
  3802                           
  3803                           ;incstack = 0
  3804                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3805  001A50  0101               	movlb	1	; () banked
  3806  001A52  6F1C               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3807                           
  3808                           ; BSR set to: 1
  3809                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3810  001A54  0103               	movlb	3	; () banked
  3811  001A56  0E03               	movlw	high _ToMainHigh_MQ
  3812  001A58  0101               	movlb	1	; () banked
  3813  001A5A  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  3814  001A5C  0103               	movlb	3	; () banked
  3815  001A5E  0E00               	movlw	low _ToMainHigh_MQ
  3816  001A60  0101               	movlb	1	; () banked
  3817  001A62  6F0A               	movwf	recv_msg@qptr& (0+255),b
  3818  001A64  C11C  F10C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3819  001A68  0101               	movlb	1	; () banked
  3820  001A6A  C119  F10E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3821  001A6E  0101               	movlb	1	; () banked
  3822  001A70  C118  F10D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3823  001A74  0101               	movlb	1	; () banked
  3824  001A76  C11B  F110         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3825  001A7A  0101               	movlb	1	; () banked
  3826  001A7C  C11A  F10F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3827  001A80  EC50  F006         	call	_recv_msg	;wreg free
  3828  001A84  0012               	return	
  3829  001A86                     __end_of_ToMainHigh_recvmsg:
  3830                           	opt stack 0
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           prodh	equ	0xFF4
  3836                           prodl	equ	0xFF3
  3837                           intcon	equ	0xFF2
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           indf1	equ	0xFE7
  3841                           fsr1h	equ	0xFE2
  3842                           fsr1l	equ	0xFE1
  3843                           indf2	equ	0xFDF
  3844                           postinc2	equ	0xFDE
  3845                           postdec2	equ	0xFDD
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _recv_msg *****************
  3851 ;; Defined at:
  3852 ;;		line 63 in file "../src/messages.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3855 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  3856 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3857 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3858 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  3859 ;;  data            2   15[BANK1 ] PTR void 
  3860 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3863 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  3864 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  3865 ;;  tlength         2   20[BANK1 ] unsigned int 
  3866 ;;  slot            1   19[BANK1 ] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      char 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3876 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;Total ram usage:       14 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:   12
  3883 ;; This function calls:
  3884 ;;		_memcpy
  3885 ;; This function is called by:
  3886 ;;		_ToMainLow_recvmsg
  3887 ;;		_ToMainHigh_recvmsg
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text23
  3892  000CA0                     __ptext23:
  3893                           	opt stack 0
  3894  000CA0                     _recv_msg:
  3895                           	opt stack 17
  3896                           
  3897                           ;messages.c: 64: unsigned char slot;
  3898                           ;messages.c: 68: msg *qmsg;
  3899                           ;messages.c: 69: size_t tlength;
  3900                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3901                           
  3902                           ;incstack = 0
  3903  000CA0  0101               	movlb	1	; () banked
  3904  000CA2  EE20 F089          	lfsr	2,137
  3905  000CA6  0101               	movlb	1	; () banked
  3906  000CA8  510A               	movf	recv_msg@qptr& (0+255),w,b
  3907  000CAA  26D9               	addwf	fsr2l,f,c
  3908  000CAC  0101               	movlb	1	; () banked
  3909  000CAE  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3910  000CB0  22DA               	addwfc	fsr2h,f,c
  3911  000CB2  50DF               	movf	indf2,w,c
  3912  000CB4  0101               	movlb	1	; () banked
  3913  000CB6  6F13               	movwf	recv_msg@slot& (0+255),b
  3914                           
  3915                           ; BSR set to: 1
  3916                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3917  000CB8  0101               	movlb	1	; () banked
  3918  000CBA  5113               	movf	recv_msg@slot& (0+255),w,b
  3919  000CBC  0D11               	mullw	17
  3920  000CBE  50F3               	movf	prodl,w,c
  3921  000CC0  0101               	movlb	1	; () banked
  3922  000CC2  250A               	addwf	recv_msg@qptr& (0+255),w,b
  3923  000CC4  0101               	movlb	1	; () banked
  3924  000CC6  6F16               	movwf	recv_msg@qmsg& (0+255),b
  3925  000CC8  50F4               	movf	prodh,w,c
  3926  000CCA  0101               	movlb	1	; () banked
  3927  000CCC  210B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3928  000CCE  0101               	movlb	1	; () banked
  3929  000CD0  6F17               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3930                           
  3931                           ; BSR set to: 1
  3932                           ;messages.c: 74: if (qmsg->full == 1) {
  3933  000CD2  0E01               	movlw	1
  3934  000CD4  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  3935  000CD8  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3936  000CDC  62DF               	cpfseq	indf2,c
  3937  000CDE  D06D               	goto	l3443
  3938                           
  3939                           ; BSR set to: 1
  3940                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3941  000CE0  0101               	movlb	1	; () banked
  3942  000CE2  EE20 F001          	lfsr	2,1
  3943  000CE6  0101               	movlb	1	; () banked
  3944  000CE8  5116               	movf	recv_msg@qmsg& (0+255),w,b
  3945  000CEA  26D9               	addwf	fsr2l,f,c
  3946  000CEC  0101               	movlb	1	; () banked
  3947  000CEE  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3948  000CF0  22DA               	addwfc	fsr2h,f,c
  3949  000CF2  50DF               	movf	indf2,w,c
  3950  000CF4  0101               	movlb	1	; () banked
  3951  000CF6  5D0C               	subwf	recv_msg@maxlength& (0+255),w,b
  3952  000CF8  B0D8               	btfsc	status,0,c
  3953  000CFA  D002               	goto	l3427
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;messages.c: 77: return (-3);
  3957  000CFC  0EFD               	movlw	253
  3958  000CFE  0012               	return	
  3959  000D00                     l3427:
  3960                           
  3961                           ; BSR set to: 1
  3962                           ;messages.c: 78: }
  3963                           ;messages.c: 80: tlength = qmsg->length;
  3964  000D00  0101               	movlb	1	; () banked
  3965  000D02  EE20 F001          	lfsr	2,1
  3966  000D06  0101               	movlb	1	; () banked
  3967  000D08  5116               	movf	recv_msg@qmsg& (0+255),w,b
  3968  000D0A  26D9               	addwf	fsr2l,f,c
  3969  000D0C  0101               	movlb	1	; () banked
  3970  000D0E  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3971  000D10  22DA               	addwfc	fsr2h,f,c
  3972  000D12  50DF               	movf	indf2,w,c
  3973  000D14  0101               	movlb	1	; () banked
  3974  000D16  6F11               	movwf	??_recv_msg& (0+255),b
  3975  000D18  0101               	movlb	1	; () banked
  3976  000D1A  5111               	movf	??_recv_msg& (0+255),w,b
  3977  000D1C  0101               	movlb	1	; () banked
  3978  000D1E  6F14               	movwf	recv_msg@tlength& (0+255),b
  3979  000D20  0101               	movlb	1	; () banked
  3980  000D22  6B15               	clrf	(recv_msg@tlength+1)& (0+255),b
  3981                           
  3982                           ; BSR set to: 1
  3983                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3984  000D24  0101               	movlb	1	; () banked
  3985  000D26  C110  F101         	movff	recv_msg@data+1,memcpy@d1+1
  3986  000D2A  0101               	movlb	1	; () banked
  3987  000D2C  C10F  F100         	movff	recv_msg@data,memcpy@d1
  3988  000D30  0E03               	movlw	3
  3989  000D32  0101               	movlb	1	; () banked
  3990  000D34  2516               	addwf	recv_msg@qmsg& (0+255),w,b
  3991  000D36  0101               	movlb	1	; () banked
  3992  000D38  6F11               	movwf	??_recv_msg& (0+255),b
  3993  000D3A  0E00               	movlw	0
  3994  000D3C  0101               	movlb	1	; () banked
  3995  000D3E  2117               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3996  000D40  0101               	movlb	1	; () banked
  3997  000D42  6F12               	movwf	(??_recv_msg+1)& (0+255),b
  3998  000D44  C111  F102         	movff	??_recv_msg,memcpy@s1
  3999  000D48  C112  F103         	movff	??_recv_msg+1,memcpy@s1+1
  4000  000D4C  C114  F104         	movff	recv_msg@tlength,memcpy@n
  4001  000D50  C115  F105         	movff	recv_msg@tlength+1,memcpy@n+1
  4002  000D54  EC27  F00C         	call	_memcpy	;wreg free
  4003                           
  4004                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  4005  000D58  0101               	movlb	1	; () banked
  4006  000D5A  EE20 F089          	lfsr	2,137
  4007  000D5E  0101               	movlb	1	; () banked
  4008  000D60  510A               	movf	recv_msg@qptr& (0+255),w,b
  4009  000D62  26D9               	addwf	fsr2l,f,c
  4010  000D64  0101               	movlb	1	; () banked
  4011  000D66  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4012  000D68  22DA               	addwfc	fsr2h,f,c
  4013  000D6A  0101               	movlb	1	; () banked
  4014  000D6C  EE10 F089          	lfsr	1,137
  4015  000D70  0101               	movlb	1	; () banked
  4016  000D72  510A               	movf	recv_msg@qptr& (0+255),w,b
  4017  000D74  26E1               	addwf	fsr1l,f,c
  4018  000D76  0101               	movlb	1	; () banked
  4019  000D78  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4020  000D7A  22E2               	addwfc	fsr1h,f,c
  4021  000D7C  50E7               	movf	indf1,w,c
  4022  000D7E  0101               	movlb	1	; () banked
  4023  000D80  6F11               	movwf	??_recv_msg& (0+255),b
  4024  000D82  0101               	movlb	1	; () banked
  4025  000D84  2911               	incf	??_recv_msg& (0+255),w,b
  4026  000D86  0B07               	andlw	7
  4027  000D88  6EDF               	movwf	indf2,c
  4028                           
  4029                           ; BSR set to: 1
  4030                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4031  000D8A  0101               	movlb	1	; () banked
  4032  000D8C  EE20 F002          	lfsr	2,2
  4033  000D90  0101               	movlb	1	; () banked
  4034  000D92  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4035  000D94  26D9               	addwf	fsr2l,f,c
  4036  000D96  0101               	movlb	1	; () banked
  4037  000D98  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4038  000D9A  22DA               	addwfc	fsr2h,f,c
  4039  000D9C  C10D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4040  000DA0  C10E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4041  000DA4  CFDF FFE7          	movff	indf2,indf1
  4042                           
  4043                           ; BSR set to: 1
  4044                           ;messages.c: 91: qmsg->full = 0;
  4045  000DA8  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4046  000DAC  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4047  000DB0  0E00               	movlw	0
  4048  000DB2  6EDF               	movwf	indf2,c
  4049                           
  4050                           ; BSR set to: 1
  4051                           ;messages.c: 92: return (tlength);
  4052  000DB4  0101               	movlb	1	; () banked
  4053  000DB6  5114               	movf	recv_msg@tlength& (0+255),w,b
  4054  000DB8  0012               	return	
  4055  000DBA                     l3443:
  4056                           
  4057                           ; BSR set to: 1
  4058                           ;messages.c: 94: return (-4);
  4059  000DBA  0EFC               	movlw	252
  4060  000DBC  0012               	return	
  4061  000DBE                     __end_of_recv_msg:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           intcon	equ	0xFF2
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           indf1	equ	0xFE7
  4073                           fsr1h	equ	0xFE2
  4074                           fsr1l	equ	0xFE1
  4075                           indf2	equ	0xFDF
  4076                           postinc2	equ	0xFDE
  4077                           postdec2	equ	0xFDD
  4078                           fsr2h	equ	0xFDA
  4079                           fsr2l	equ	0xFD9
  4080                           status	equ	0xFD8
  4081                           
  4082 ;; *************** function _memcpy *****************
  4083 ;; Defined at:
  4084 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  d1              2    0[BANK1 ] PTR void 
  4087 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4088 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  4089 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  4090 ;;  s1              2    2[BANK1 ] PTR const void 
  4091 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4092 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4093 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  4094 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4095 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  4096 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  4097 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4098 ;;  n               2    4[BANK1 ] unsigned int 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4101 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4102 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4103 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  4104 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4105 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  4106 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  4107 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4108 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4109 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4110 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  4111 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  2    0[BANK1 ] PTR void 
  4114 ;; Registers used:
  4115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4121 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4125 ;;Total ram usage:       10 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:   11
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_send_msg
  4132 ;;		_recv_msg
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text24
  4137  00184E                     __ptext24:
  4138                           	opt stack 0
  4139  00184E                     _memcpy:
  4140                           	opt stack 15
  4141                           
  4142                           ; BSR set to: 1
  4143                           ;incstack = 0
  4144  00184E  0101               	movlb	1	; () banked
  4145  001850  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
  4146  001854  0101               	movlb	1	; () banked
  4147  001856  C102  F108         	movff	memcpy@s1,memcpy@s
  4148  00185A  0101               	movlb	1	; () banked
  4149  00185C  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
  4150  001860  0101               	movlb	1	; () banked
  4151  001862  C100  F106         	movff	memcpy@d1,memcpy@d
  4152  001866  D010               	goto	l3367
  4153  001868                     l3361:
  4154                           
  4155                           ; BSR set to: 1
  4156  001868  C108  FFD9         	movff	memcpy@s,fsr2l
  4157  00186C  C109  FFDA         	movff	memcpy@s+1,fsr2h
  4158  001870  C106  FFE1         	movff	memcpy@d,fsr1l
  4159  001874  C107  FFE2         	movff	memcpy@d+1,fsr1h
  4160  001878  CFDF FFE7          	movff	indf2,indf1
  4161                           
  4162                           ; BSR set to: 1
  4163  00187C  0101               	movlb	1	; () banked
  4164  00187E  4B08               	infsnz	memcpy@s& (0+255),f,b
  4165  001880  2B09               	incf	(memcpy@s+1)& (0+255),f,b
  4166                           
  4167                           ; BSR set to: 1
  4168  001882  0101               	movlb	1	; () banked
  4169  001884  4B06               	infsnz	memcpy@d& (0+255),f,b
  4170  001886  2B07               	incf	(memcpy@d+1)& (0+255),f,b
  4171  001888                     l3367:
  4172                           
  4173                           ; BSR set to: 1
  4174  001888  0101               	movlb	1	; () banked
  4175  00188A  0704               	decf	memcpy@n& (0+255),f,b
  4176  00188C  A0D8               	btfss	status,0,c
  4177  00188E  0705               	decf	(memcpy@n+1)& (0+255),f,b
  4178  001890  0101               	movlb	1	; () banked
  4179  001892  2904               	incf	memcpy@n& (0+255),w,b
  4180  001894  B4D8               	btfsc	status,2,c
  4181  001896  2905               	incf	(memcpy@n+1)& (0+255),w,b
  4182  001898  B4D8               	btfsc	status,2,c
  4183                           
  4184                           ; BSR set to: 1
  4185                           
  4186                           ; BSR set to: 1
  4187                           ;	Return value of _memcpy is never used
  4188  00189A  0012               	return	
  4189  00189C  D7E5               	goto	l3361
  4190  00189E                     __end_of_memcpy:
  4191                           	opt stack 0
  4192                           tblptru	equ	0xFF8
  4193                           tblptrh	equ	0xFF7
  4194                           tblptrl	equ	0xFF6
  4195                           tablat	equ	0xFF5
  4196                           prodh	equ	0xFF4
  4197                           prodl	equ	0xFF3
  4198                           intcon	equ	0xFF2
  4199                           postinc0	equ	0xFEE
  4200                           wreg	equ	0xFE8
  4201                           indf1	equ	0xFE7
  4202                           fsr1h	equ	0xFE2
  4203                           fsr1l	equ	0xFE1
  4204                           indf2	equ	0xFDF
  4205                           postinc2	equ	0xFDE
  4206                           postdec2	equ	0xFDD
  4207                           fsr2h	equ	0xFDA
  4208                           fsr2l	equ	0xFD9
  4209                           status	equ	0xFD8
  4210                           
  4211 ;; *************** function _OpenTimer1 *****************
  4212 ;; Defined at:
  4213 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  config          1    wreg     unsigned char 
  4216 ;;  config1         1    0[BANK1 ] unsigned char 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  config          1    2[BANK1 ] unsigned char 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;		None               void
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4228 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4229 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4230 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4231 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4232 ;;Total ram usage:        3 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:   11
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_main
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text25
  4243  00196C                     __ptext25:
  4244                           	opt stack 0
  4245  00196C                     _OpenTimer1:
  4246                           	opt stack 19
  4247                           
  4248                           ; BSR set to: 1
  4249                           ;incstack = 0
  4250                           ;OpenTimer1@config stored from wreg
  4251  00196C  0101               	movlb	1	; () banked
  4252  00196E  6F02               	movwf	OpenTimer1@config& (0+255),b
  4253                           
  4254                           ; BSR set to: 1
  4255  001970  0101               	movlb	1	; () banked
  4256  001972  5100               	movf	OpenTimer1@config1& (0+255),w,b
  4257  001974  0BF3               	andlw	243
  4258  001976  6E9A               	movwf	3994,c	;volatile
  4259  001978  C102  F101         	movff	OpenTimer1@config,??_OpenTimer1
  4260  00197C  0E7F               	movlw	127
  4261  00197E  0101               	movlb	1	; () banked
  4262  001980  1701               	andwf	??_OpenTimer1& (0+255),f,b
  4263  001982  0101               	movlb	1	; () banked
  4264  001984  90D8               	bcf	status,0,c
  4265  001986  3501               	rlcf	??_OpenTimer1& (0+255),w,b
  4266  001988  6ECD               	movwf	4045,c	;volatile
  4267                           
  4268                           ; BSR set to: 1
  4269  00198A  0E00               	movlw	0
  4270  00198C  6ECF               	movwf	4047,c	;volatile
  4271                           
  4272                           ; BSR set to: 1
  4273  00198E  0E00               	movlw	0
  4274  001990  6ECE               	movwf	4046,c	;volatile
  4275                           
  4276                           ; BSR set to: 1
  4277  001992  909E               	bcf	3998,0,c	;volatile
  4278                           
  4279                           ; BSR set to: 1
  4280  001994  0101               	movlb	1	; () banked
  4281  001996  AF02               	btfss	OpenTimer1@config& (0+255),7,b
  4282  001998  D002               	goto	l581
  4283                           
  4284                           ; BSR set to: 1
  4285  00199A  809D               	bsf	3997,0,c	;volatile
  4286  00199C  D001               	goto	l582
  4287  00199E                     l581:
  4288                           
  4289                           ; BSR set to: 1
  4290  00199E  909D               	bcf	3997,0,c	;volatile
  4291  0019A0                     l582:
  4292                           
  4293                           ; BSR set to: 1
  4294  0019A0  BE9A               	btfsc	3994,7,c	;volatile
  4295                           
  4296                           ; BSR set to: 1
  4297  0019A2  869A               	bsf	3994,3,c	;volatile
  4298                           
  4299                           ; BSR set to: 1
  4300  0019A4  80CD               	bsf	4045,0,c	;volatile
  4301                           
  4302                           ; BSR set to: 1
  4303  0019A6  0012               	return	
  4304  0019A8                     __end_of_OpenTimer1:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           prodh	equ	0xFF4
  4311                           prodl	equ	0xFF3
  4312                           intcon	equ	0xFF2
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           indf1	equ	0xFE7
  4316                           fsr1h	equ	0xFE2
  4317                           fsr1l	equ	0xFE1
  4318                           indf2	equ	0xFDF
  4319                           postinc2	equ	0xFDE
  4320                           postdec2	equ	0xFDD
  4321                           fsr2h	equ	0xFDA
  4322                           fsr2l	equ	0xFD9
  4323                           status	equ	0xFD8
  4324                           
  4325 ;; *************** function _OpenTimer0 *****************
  4326 ;; Defined at:
  4327 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  config          1    wreg     unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  config          1    0[BANK1 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;		None               void
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4342 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4344 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4345 ;;Total ram usage:        1 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:   11
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text26
  4356  001BCC                     __ptext26:
  4357                           	opt stack 0
  4358  001BCC                     _OpenTimer0:
  4359                           	opt stack 19
  4360                           
  4361                           ; BSR set to: 1
  4362                           ;incstack = 0
  4363                           ;OpenTimer0@config stored from wreg
  4364  001BCC  0101               	movlb	1	; () banked
  4365  001BCE  6F00               	movwf	OpenTimer0@config& (0+255),b
  4366                           
  4367                           ; BSR set to: 1
  4368  001BD0  0101               	movlb	1	; () banked
  4369  001BD2  5100               	movf	OpenTimer0@config& (0+255),w,b
  4370  001BD4  0B7F               	andlw	127
  4371  001BD6  6ED5               	movwf	4053,c	;volatile
  4372                           
  4373                           ; BSR set to: 1
  4374  001BD8  0E00               	movlw	0
  4375  001BDA  6ED7               	movwf	4055,c	;volatile
  4376                           
  4377                           ; BSR set to: 1
  4378  001BDC  0E00               	movlw	0
  4379  001BDE  6ED6               	movwf	4054,c	;volatile
  4380                           
  4381                           ; BSR set to: 1
  4382  001BE0  94F2               	bcf	intcon,2,c	;volatile
  4383                           
  4384                           ; BSR set to: 1
  4385  001BE2  0101               	movlb	1	; () banked
  4386  001BE4  AF00               	btfss	OpenTimer0@config& (0+255),7,b
  4387  001BE6  D002               	goto	l553
  4388                           
  4389                           ; BSR set to: 1
  4390  001BE8  8AF2               	bsf	intcon,5,c	;volatile
  4391  001BEA  D001               	goto	l554
  4392  001BEC                     l553:
  4393                           
  4394                           ; BSR set to: 1
  4395  001BEC  9AF2               	bcf	intcon,5,c	;volatile
  4396  001BEE                     l554:
  4397                           
  4398                           ; BSR set to: 1
  4399  001BEE  8ED5               	bsf	4053,7,c	;volatile
  4400                           
  4401                           ; BSR set to: 1
  4402  001BF0  0012               	return	
  4403  001BF2                     __end_of_OpenTimer0:
  4404                           	opt stack 0
  4405                           tblptru	equ	0xFF8
  4406                           tblptrh	equ	0xFF7
  4407                           tblptrl	equ	0xFF6
  4408                           tablat	equ	0xFF5
  4409                           prodh	equ	0xFF4
  4410                           prodl	equ	0xFF3
  4411                           intcon	equ	0xFF2
  4412                           postinc0	equ	0xFEE
  4413                           wreg	equ	0xFE8
  4414                           indf1	equ	0xFE7
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           postinc2	equ	0xFDE
  4419                           postdec2	equ	0xFDD
  4420                           fsr2h	equ	0xFDA
  4421                           fsr2l	equ	0xFD9
  4422                           status	equ	0xFD8
  4423                           
  4424 ;; *************** function _InterruptHandlerLow *****************
  4425 ;; Defined at:
  4426 ;;		line 131 in file "../src/interrupts.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;		None               void
  4433 ;; Registers used:
  4434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4442 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4443 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4444 ;;Total ram usage:       17 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:   10
  4447 ;; This function calls:
  4448 ;;		_timer1_int_handler
  4449 ;;		_uart_receive_interrupt_handler
  4450 ;;		_uart_transmit_interrupt_handler
  4451 ;; This function is called by:
  4452 ;;		Interrupt level 1
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	intcodelo
  4457  000018                     __pintcodelo:
  4458                           	opt stack 0
  4459  000018                     _InterruptHandlerLow:
  4460                           	opt stack 15
  4461                           
  4462                           ; BSR set to: 1
  4463                           ;incstack = 0
  4464  000018  CFD8 F039          	movff	status,??_InterruptHandlerLow
  4465  00001C  CFE8 F03A          	movff	wreg,??_InterruptHandlerLow+1
  4466  000020  CFE0 F03B          	movff	bsr,??_InterruptHandlerLow+2
  4467  000024  CFFA F03C          	movff	pclath,??_InterruptHandlerLow+3
  4468  000028  CFFB F03D          	movff	pclatu,??_InterruptHandlerLow+4
  4469  00002C  CFE9 F03E          	movff	fsr0l,??_InterruptHandlerLow+5
  4470  000030  CFEA F03F          	movff	fsr0h,??_InterruptHandlerLow+6
  4471  000034  CFE1 F040          	movff	fsr1l,??_InterruptHandlerLow+7
  4472  000038  CFE2 F041          	movff	fsr1h,??_InterruptHandlerLow+8
  4473  00003C  CFD9 F042          	movff	fsr2l,??_InterruptHandlerLow+9
  4474  000040  CFDA F043          	movff	fsr2h,??_InterruptHandlerLow+10
  4475  000044  CFF3 F044          	movff	prodl,??_InterruptHandlerLow+11
  4476  000048  CFF4 F045          	movff	prodh,??_InterruptHandlerLow+12
  4477  00004C  CFF6 F046          	movff	tblptrl,??_InterruptHandlerLow+13
  4478  000050  CFF7 F047          	movff	tblptrh,??_InterruptHandlerLow+14
  4479  000054  CFF8 F048          	movff	tblptru,??_InterruptHandlerLow+15
  4480  000058  CFF5 F049          	movff	tablat,??_InterruptHandlerLow+16
  4481                           
  4482                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  4483  00005C  A09E               	btfss	3998,0,c	;volatile
  4484  00005E  D003               	goto	i1l3171
  4485                           
  4486                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  4487  000060  909E               	bcf	3998,0,c	;volatile
  4488                           
  4489                           ;interrupts.c: 139: timer1_int_handler();
  4490  000062  ECBC  F00D         	call	_timer1_int_handler	;wreg free
  4491  000066                     i1l3171:
  4492                           
  4493                           ;interrupts.c: 140: }
  4494                           ;interrupts.c: 143: if (PIR1bits.RCIF) {
  4495  000066  AA9E               	btfss	3998,5,c	;volatile
  4496  000068  D003               	goto	i1l3177
  4497                           
  4498                           ;interrupts.c: 144: PIR1bits.RCIF = 0;
  4499  00006A  9A9E               	bcf	3998,5,c	;volatile
  4500                           
  4501                           ;interrupts.c: 148: uart_receive_interrupt_handler();
  4502  00006C  EC7D  F005         	call	_uart_receive_interrupt_handler	;wreg free
  4503  000070                     i1l3177:
  4504                           
  4505                           ;interrupts.c: 149: }
  4506                           ;interrupts.c: 153: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4507  000070  B89E               	btfsc	3998,4,c	;volatile
  4508  000072  A89D               	btfss	3997,4,c	;volatile
  4509  000074  D002               	goto	i1l52
  4510                           
  4511                           ;interrupts.c: 154: {
  4512                           ;interrupts.c: 158: uart_transmit_interrupt_handler();
  4513  000076  ECEE  F009         	call	_uart_transmit_interrupt_handler	;wreg free
  4514  00007A                     i1l52:
  4515  00007A  C049  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4516  00007E  C048  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4517  000082  C047  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4518  000086  C046  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4519  00008A  C045  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4520  00008E  C044  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4521  000092  C043  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4522  000096  C042  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4523  00009A  C041  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4524  00009E  C040  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4525  0000A2  C03F  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4526  0000A6  C03E  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4527  0000AA  C03D  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4528  0000AE  C03C  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4529  0000B2  C03B  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4530  0000B6  C03A  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4531  0000BA  C039  FFD8         	movff	??_InterruptHandlerLow,status
  4532  0000BE  0010               	retfie	
  4533  0000C0                     __end_of_InterruptHandlerLow:
  4534                           	opt stack 0
  4535                           pclatu	equ	0xFFB
  4536                           pclath	equ	0xFFA
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           intcon	equ	0xFF2
  4544                           postinc0	equ	0xFEE
  4545                           fsr0h	equ	0xFEA
  4546                           fsr0l	equ	0xFE9
  4547                           wreg	equ	0xFE8
  4548                           indf1	equ	0xFE7
  4549                           fsr1h	equ	0xFE2
  4550                           fsr1l	equ	0xFE1
  4551                           bsr	equ	0xFE0
  4552                           indf2	equ	0xFDF
  4553                           postinc2	equ	0xFDE
  4554                           postdec2	equ	0xFDD
  4555                           fsr2h	equ	0xFDA
  4556                           fsr2l	equ	0xFD9
  4557                           status	equ	0xFD8
  4558                           
  4559 ;; *************** function _uart_transmit_interrupt_handler *****************
  4560 ;; Defined at:
  4561 ;;		line 200 in file "../src/my_uart.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  message_stat    1   44[COMRAM] char 
  4566 ;;  data           14   29[COMRAM] unsigned char [14]
  4567 ;;  msgtype         1   43[COMRAM] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;		None               void
  4570 ;; Registers used:
  4571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4580 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4581 ;;Total ram usage:       16 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    9
  4584 ;; This function calls:
  4585 ;;		_FromMainLow_recvmsg
  4586 ;;		_uart_frame_message
  4587 ;; This function is called by:
  4588 ;;		_InterruptHandlerLow
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text28
  4593  0013DC                     __ptext28:
  4594                           	opt stack 0
  4595  0013DC                     _uart_transmit_interrupt_handler:
  4596                           	opt stack 15
  4597                           
  4598                           ;my_uart.c: 203: static unsigned char done = 1;
  4599                           ;my_uart.c: 204: static unsigned char index = 0;
  4600                           ;my_uart.c: 206: unsigned char data[14];
  4601                           ;my_uart.c: 207: static unsigned char message[(14 + 2 + 2)];
  4602                           ;my_uart.c: 209: unsigned char msgtype = 31;
  4603                           
  4604                           ;incstack = 0
  4605  0013DC  0E1F               	movlw	31
  4606  0013DE  6E2C               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4607                           
  4608                           ;my_uart.c: 211: if( done )
  4609  0013E0  505F               	movf	uart_transmit_interrupt_handler@done,w,c
  4610  0013E2  B4D8               	btfsc	status,2,c
  4611  0013E4  D03A               	goto	i1l3009
  4612                           
  4613                           ;my_uart.c: 212: {
  4614                           ;my_uart.c: 213: signed char message_status = FromMainLow_recvmsg(14,&msgtype, (void*)da
      +                          ta );
  4615  0013E6  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4616  0013E8  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4617  0013EA  0E2C               	movlw	low uart_transmit_interrupt_handler@msgtype
  4618  0013EC  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4619  0013EE  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4620  0013F0  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4621  0013F2  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4622  0013F4  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4623  0013F6  0E0E               	movlw	14
  4624  0013F8  ECD2  F00D         	call	_FromMainLow_recvmsg
  4625  0013FC  6E2D               	movwf	uart_transmit_interrupt_handler@message_status,c
  4626                           
  4627                           ;my_uart.c: 215: if( message_status == -4)
  4628  0013FE  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4629  001400  0AFC               	xorlw	252
  4630  001402  A4D8               	btfss	status,2,c
  4631  001404  D002               	goto	i1l2981
  4632                           
  4633                           ;my_uart.c: 216: {
  4634                           ;my_uart.c: 218: PIE1bits.TX1IE = 0;
  4635  001406  989D               	bcf	3997,4,c	;volatile
  4636                           
  4637                           ;my_uart.c: 219: }
  4638  001408  0012               	return	
  4639  00140A                     i1l2981:
  4640                           
  4641                           ;my_uart.c: 220: else if( message_status > 0 )
  4642  00140A  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4643  00140C  0A80               	xorlw	128
  4644  00140E  0F7F               	addlw	-129
  4645  001410  A0D8               	btfss	status,0,c
  4646  001412  0012               	return	
  4647                           
  4648                           ;my_uart.c: 221: {
  4649                           ;my_uart.c: 222: uart_frame_message( data , message );
  4650  001414  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4651  001416  6E02               	movwf	uart_frame_message@inner+1,c
  4652  001418  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4653  00141A  6E01               	movwf	uart_frame_message@inner,c
  4654  00141C  0100               	movlb	0	; () banked
  4655  00141E  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4656  001420  6E04               	movwf	uart_frame_message@outer+1,c
  4657  001422  0100               	movlb	0	; () banked
  4658  001424  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4659  001426  6E03               	movwf	uart_frame_message@outer,c
  4660  001428  EC5A  F008         	call	_uart_frame_message	;wreg free
  4661                           
  4662                           ;my_uart.c: 223: index = 0;
  4663  00142C  0E00               	movlw	0
  4664  00142E  6E50               	movwf	uart_transmit_interrupt_handler@index,c
  4665                           
  4666                           ;my_uart.c: 224: done = 0;
  4667  001430  0E00               	movlw	0
  4668  001432  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4669                           
  4670                           ;my_uart.c: 226: TXREG1 = message[index];
  4671  001434  5050               	movf	uart_transmit_interrupt_handler@index,w,c
  4672  001436  0D01               	mullw	1
  4673  001438  0100               	movlb	0	; () banked
  4674  00143A  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4675  00143C  24F3               	addwf	prodl,w,c
  4676  00143E  6ED9               	movwf	fsr2l,c
  4677  001440  0100               	movlb	0	; () banked
  4678  001442  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4679  001444  20F4               	addwfc	prodh,w,c
  4680  001446  6EDA               	movwf	fsr2h,c
  4681  001448  50DF               	movf	indf2,w,c
  4682  00144A  6EAE               	movwf	4014,c	;volatile
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;my_uart.c: 227: index++;
  4686  00144C  2A50               	incf	uart_transmit_interrupt_handler@index,f,c
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;my_uart.c: 228: if( index >= (14 + 2 + 2) )
  4690  00144E  0E11               	movlw	17
  4691  001450  6450               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4692  001452  0012               	return	
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;my_uart.c: 229: {
  4696                           ;my_uart.c: 230: done = 1;
  4697  001454  0E01               	movlw	1
  4698  001456  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4699  001458  0012               	return	
  4700  00145A                     i1l3009:
  4701                           
  4702                           ;my_uart.c: 247: else
  4703                           ;my_uart.c: 248: {
  4704                           ;my_uart.c: 250: TXREG1 = message[index];
  4705  00145A  5050               	movf	uart_transmit_interrupt_handler@index,w,c
  4706  00145C  0D01               	mullw	1
  4707  00145E  0100               	movlb	0	; () banked
  4708  001460  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4709  001462  24F3               	addwf	prodl,w,c
  4710  001464  6ED9               	movwf	fsr2l,c
  4711  001466  0100               	movlb	0	; () banked
  4712  001468  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4713  00146A  20F4               	addwfc	prodh,w,c
  4714  00146C  6EDA               	movwf	fsr2h,c
  4715  00146E  50DF               	movf	indf2,w,c
  4716  001470  6EAE               	movwf	4014,c	;volatile
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;my_uart.c: 251: index++;
  4720  001472  2A50               	incf	uart_transmit_interrupt_handler@index,f,c
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;my_uart.c: 252: if( index >= (14 + 2 + 2) )
  4724  001474  0E11               	movlw	17
  4725  001476  6450               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4726  001478  0012               	return	
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;my_uart.c: 253: {
  4730                           ;my_uart.c: 254: done = 1;
  4731  00147A  0E01               	movlw	1
  4732  00147C  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4733  00147E  0012               	return	
  4734  001480                     __end_of_uart_transmit_interrupt_handler:
  4735                           	opt stack 0
  4736                           pclatu	equ	0xFFB
  4737                           pclath	equ	0xFFA
  4738                           tblptru	equ	0xFF8
  4739                           tblptrh	equ	0xFF7
  4740                           tblptrl	equ	0xFF6
  4741                           tablat	equ	0xFF5
  4742                           prodh	equ	0xFF4
  4743                           prodl	equ	0xFF3
  4744                           intcon	equ	0xFF2
  4745                           postinc0	equ	0xFEE
  4746                           fsr0h	equ	0xFEA
  4747                           fsr0l	equ	0xFE9
  4748                           wreg	equ	0xFE8
  4749                           indf1	equ	0xFE7
  4750                           fsr1h	equ	0xFE2
  4751                           fsr1l	equ	0xFE1
  4752                           bsr	equ	0xFE0
  4753                           indf2	equ	0xFDF
  4754                           postinc2	equ	0xFDE
  4755                           postdec2	equ	0xFDD
  4756                           fsr2h	equ	0xFDA
  4757                           fsr2l	equ	0xFD9
  4758                           status	equ	0xFD8
  4759                           
  4760 ;; *************** function _uart_frame_message *****************
  4761 ;; Defined at:
  4762 ;;		line 368 in file "../src/my_uart.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  inner           2    0[COMRAM] PTR unsigned char 
  4765 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  4766 ;;  outer           2    2[COMRAM] PTR unsigned char 
  4767 ;;		 -> uart_transmit_interrupt_handler@message(18), 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  i               1    7[COMRAM] unsigned char 
  4770 ;;  checksum        1    6[COMRAM] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;		None               void
  4773 ;; Registers used:
  4774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4783 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4784 ;;Total ram usage:        8 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    6
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_uart_transmit_interrupt_handler
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text29
  4795  0010B4                     __ptext29:
  4796                           	opt stack 0
  4797  0010B4                     _uart_frame_message:
  4798                           	opt stack 17
  4799                           
  4800                           ;my_uart.c: 370: static unsigned char sent_counter = 0;
  4801                           ;my_uart.c: 372: outer[0] = 0xff;
  4802                           
  4803                           ;incstack = 0
  4804  0010B4  C003  FFD9         	movff	uart_frame_message@outer,fsr2l
  4805  0010B8  C004  FFDA         	movff	uart_frame_message@outer+1,fsr2h
  4806  0010BC  0EFF               	movlw	255
  4807  0010BE  6EDF               	movwf	indf2,c
  4808                           
  4809                           ;my_uart.c: 373: outer[1] = sent_counter++;
  4810  0010C0  EE20 F001          	lfsr	2,1
  4811  0010C4  5003               	movf	uart_frame_message@outer,w,c
  4812  0010C6  26D9               	addwf	fsr2l,f,c
  4813  0010C8  5004               	movf	uart_frame_message@outer+1,w,c
  4814  0010CA  22DA               	addwfc	fsr2h,f,c
  4815  0010CC  C04A  FFDF         	movff	uart_frame_message@sent_counter,indf2
  4816  0010D0  2A4A               	incf	uart_frame_message@sent_counter,f,c
  4817                           
  4818                           ;my_uart.c: 374: outer[(14 + 2 + 2)-1] = 0xfe;
  4819  0010D2  EE20 F011          	lfsr	2,17
  4820  0010D6  5003               	movf	uart_frame_message@outer,w,c
  4821  0010D8  26D9               	addwf	fsr2l,f,c
  4822  0010DA  5004               	movf	uart_frame_message@outer+1,w,c
  4823  0010DC  22DA               	addwfc	fsr2h,f,c
  4824  0010DE  0EFE               	movlw	254
  4825  0010E0  6EDF               	movwf	indf2,c
  4826                           
  4827                           ;my_uart.c: 376: unsigned char checksum = 0;
  4828  0010E2  0E00               	movlw	0
  4829  0010E4  6E07               	movwf	uart_frame_message@checksum,c
  4830                           
  4831                           ;my_uart.c: 377: unsigned char i;
  4832                           ;my_uart.c: 378: for(i=0;i<14;i++)
  4833  0010E6  0E00               	movlw	0
  4834  0010E8  6E08               	movwf	uart_frame_message@i,c
  4835  0010EA  D049               	goto	L4
  4836  0010EC                     i1l2595:
  4837                           
  4838                           ;my_uart.c: 379: {
  4839                           ;my_uart.c: 380: if( inner[i] == 0xff || inner[i] == 0xfe )
  4840  0010EC  5008               	movf	uart_frame_message@i,w,c
  4841  0010EE  0D01               	mullw	1
  4842  0010F0  50F3               	movf	prodl,w,c
  4843  0010F2  2401               	addwf	uart_frame_message@inner,w,c
  4844  0010F4  6ED9               	movwf	fsr2l,c
  4845  0010F6  50F4               	movf	prodh,w,c
  4846  0010F8  2002               	addwfc	uart_frame_message@inner+1,w,c
  4847  0010FA  6EDA               	movwf	fsr2h,c
  4848  0010FC  50DF               	movf	indf2,w,c
  4849  0010FE  0AFF               	xorlw	255
  4850  001100  B4D8               	btfsc	status,2,c
  4851  001102  D00B               	goto	i1l2599
  4852  001104  5008               	movf	uart_frame_message@i,w,c
  4853  001106  0D01               	mullw	1
  4854  001108  50F3               	movf	prodl,w,c
  4855  00110A  2401               	addwf	uart_frame_message@inner,w,c
  4856  00110C  6ED9               	movwf	fsr2l,c
  4857  00110E  50F4               	movf	prodh,w,c
  4858  001110  2002               	addwfc	uart_frame_message@inner+1,w,c
  4859  001112  6EDA               	movwf	fsr2h,c
  4860  001114  0EFE               	movlw	254
  4861  001116  62DF               	cpfseq	indf2,c
  4862  001118  D010               	goto	i1l2601
  4863  00111A                     i1l2599:
  4864                           
  4865                           ;my_uart.c: 381: {
  4866                           ;my_uart.c: 382: outer[i+2] = 0xfd;
  4867  00111A  5008               	movf	uart_frame_message@i,w,c
  4868  00111C  6E05               	movwf	??_uart_frame_message& (0+255),c
  4869  00111E  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  4870  001120  0E02               	movlw	2
  4871  001122  2605               	addwf	??_uart_frame_message,f,c
  4872  001124  0E00               	movlw	0
  4873  001126  2206               	addwfc	??_uart_frame_message+1,f,c
  4874  001128  5005               	movf	??_uart_frame_message,w,c
  4875  00112A  2403               	addwf	uart_frame_message@outer,w,c
  4876  00112C  6ED9               	movwf	fsr2l,c
  4877  00112E  5006               	movf	??_uart_frame_message+1,w,c
  4878  001130  2004               	addwfc	uart_frame_message@outer+1,w,c
  4879  001132  6EDA               	movwf	fsr2h,c
  4880  001134  0EFD               	movlw	253
  4881  001136  6EDF               	movwf	indf2,c
  4882                           
  4883                           ;my_uart.c: 383: }
  4884  001138  D017               	goto	i1l2603
  4885  00113A                     i1l2601:
  4886                           
  4887                           ;my_uart.c: 384: else
  4888                           ;my_uart.c: 385: {
  4889                           ;my_uart.c: 386: outer[i+2] = inner[i];
  4890  00113A  5008               	movf	uart_frame_message@i,w,c
  4891  00113C  0D01               	mullw	1
  4892  00113E  50F3               	movf	prodl,w,c
  4893  001140  2401               	addwf	uart_frame_message@inner,w,c
  4894  001142  6ED9               	movwf	fsr2l,c
  4895  001144  50F4               	movf	prodh,w,c
  4896  001146  2002               	addwfc	uart_frame_message@inner+1,w,c
  4897  001148  6EDA               	movwf	fsr2h,c
  4898  00114A  5008               	movf	uart_frame_message@i,w,c
  4899  00114C  6E05               	movwf	??_uart_frame_message& (0+255),c
  4900  00114E  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  4901  001150  0E02               	movlw	2
  4902  001152  2605               	addwf	??_uart_frame_message,f,c
  4903  001154  0E00               	movlw	0
  4904  001156  2206               	addwfc	??_uart_frame_message+1,f,c
  4905  001158  5005               	movf	??_uart_frame_message,w,c
  4906  00115A  2403               	addwf	uart_frame_message@outer,w,c
  4907  00115C  6EE1               	movwf	fsr1l,c
  4908  00115E  5006               	movf	??_uart_frame_message+1,w,c
  4909  001160  2004               	addwfc	uart_frame_message@outer+1,w,c
  4910  001162  6EE2               	movwf	fsr1h,c
  4911  001164  CFDF FFE7          	movff	indf2,indf1
  4912  001168                     i1l2603:
  4913                           
  4914                           ;my_uart.c: 387: }
  4915                           ;my_uart.c: 388: checksum ^= inner[i];
  4916  001168  5008               	movf	uart_frame_message@i,w,c
  4917  00116A  0D01               	mullw	1
  4918  00116C  50F3               	movf	prodl,w,c
  4919  00116E  2401               	addwf	uart_frame_message@inner,w,c
  4920  001170  6ED9               	movwf	fsr2l,c
  4921  001172  50F4               	movf	prodh,w,c
  4922  001174  2002               	addwfc	uart_frame_message@inner+1,w,c
  4923  001176  6EDA               	movwf	fsr2h,c
  4924  001178  50DF               	movf	indf2,w,c
  4925  00117A  1A07               	xorwf	uart_frame_message@checksum,f,c
  4926  00117C  2A08               	incf	uart_frame_message@i,f,c
  4927  00117E                     L4:
  4928  00117E  0E0D               	movlw	13
  4929  001180  6408               	cpfsgt	uart_frame_message@i,c
  4930  001182  D7B4               	goto	i1l2595
  4931                           
  4932                           ;my_uart.c: 389: }
  4933                           ;my_uart.c: 390: outer[(14 + 2 + 2)-2] = checksum;
  4934  001184  EE20 F010          	lfsr	2,16
  4935  001188  5003               	movf	uart_frame_message@outer,w,c
  4936  00118A  26D9               	addwf	fsr2l,f,c
  4937  00118C  5004               	movf	uart_frame_message@outer+1,w,c
  4938  00118E  22DA               	addwfc	fsr2h,f,c
  4939  001190  C007  FFDF         	movff	uart_frame_message@checksum,indf2
  4940  001194  0012               	return	
  4941  001196                     __end_of_uart_frame_message:
  4942                           	opt stack 0
  4943                           pclatu	equ	0xFFB
  4944                           pclath	equ	0xFFA
  4945                           tblptru	equ	0xFF8
  4946                           tblptrh	equ	0xFF7
  4947                           tblptrl	equ	0xFF6
  4948                           tablat	equ	0xFF5
  4949                           prodh	equ	0xFF4
  4950                           prodl	equ	0xFF3
  4951                           intcon	equ	0xFF2
  4952                           postinc0	equ	0xFEE
  4953                           fsr0h	equ	0xFEA
  4954                           fsr0l	equ	0xFE9
  4955                           wreg	equ	0xFE8
  4956                           indf1	equ	0xFE7
  4957                           fsr1h	equ	0xFE2
  4958                           fsr1l	equ	0xFE1
  4959                           bsr	equ	0xFE0
  4960                           indf2	equ	0xFDF
  4961                           postinc2	equ	0xFDE
  4962                           postdec2	equ	0xFDD
  4963                           fsr2h	equ	0xFDA
  4964                           fsr2l	equ	0xFD9
  4965                           status	equ	0xFD8
  4966                           
  4967 ;; *************** function _FromMainLow_recvmsg *****************
  4968 ;; Defined at:
  4969 ;;		line 159 in file "../src/messages.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  maxlength       1    wreg     unsigned char 
  4972 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  4973 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  4974 ;;  data            2   26[COMRAM] PTR void 
  4975 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  maxlength       1   28[COMRAM] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      char 
  4980 ;; Registers used:
  4981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4990 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4991 ;;Total ram usage:        5 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    8
  4994 ;; This function calls:
  4995 ;;		i1_recv_msg
  4996 ;; This function is called by:
  4997 ;;		_uart_transmit_interrupt_handler
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text30
  5002  001BA4                     __ptext30:
  5003                           	opt stack 0
  5004  001BA4                     _FromMainLow_recvmsg:
  5005                           	opt stack 15
  5006                           
  5007                           ;incstack = 0
  5008                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5009  001BA4  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5010                           
  5011                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5012  001BA6  0104               	movlb	4	; () banked
  5013  001BA8  0E04               	movlw	high _FromMainLow_MQ
  5014  001BAA  6E0C               	movwf	i1recv_msg@qptr+1,c
  5015  001BAC  0104               	movlb	4	; () banked
  5016  001BAE  0E00               	movlw	low _FromMainLow_MQ
  5017  001BB0  6E0B               	movwf	i1recv_msg@qptr,c
  5018  001BB2  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5019  001BB6  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5020  001BBA  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5021  001BBE  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5022  001BC2  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5023  001BC6  ECCB  F008         	call	i1_recv_msg	;wreg free
  5024  001BCA  0012               	return	
  5025  001BCC                     __end_of_FromMainLow_recvmsg:
  5026                           	opt stack 0
  5027                           pclatu	equ	0xFFB
  5028                           pclath	equ	0xFFA
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           prodh	equ	0xFF4
  5034                           prodl	equ	0xFF3
  5035                           intcon	equ	0xFF2
  5036                           postinc0	equ	0xFEE
  5037                           fsr0h	equ	0xFEA
  5038                           fsr0l	equ	0xFE9
  5039                           wreg	equ	0xFE8
  5040                           indf1	equ	0xFE7
  5041                           fsr1h	equ	0xFE2
  5042                           fsr1l	equ	0xFE1
  5043                           bsr	equ	0xFE0
  5044                           indf2	equ	0xFDF
  5045                           postinc2	equ	0xFDE
  5046                           postdec2	equ	0xFDD
  5047                           fsr2h	equ	0xFDA
  5048                           fsr2l	equ	0xFD9
  5049                           status	equ	0xFD8
  5050                           
  5051 ;; *************** function i1_recv_msg *****************
  5052 ;; Defined at:
  5053 ;;		line 63 in file "../src/messages.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5056 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5057 ;;  maxlength       1   12[COMRAM] unsigned char 
  5058 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5059 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  5060 ;;  data            2   15[COMRAM] PTR void 
  5061 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5064 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5065 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5066 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5067 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      char 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5077 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5078 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5080 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5081 ;;Total ram usage:       14 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    7
  5084 ;; This function calls:
  5085 ;;		i1_memcpy
  5086 ;; This function is called by:
  5087 ;;		_FromMainLow_recvmsg
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text31
  5092  001196                     __ptext31:
  5093                           	opt stack 0
  5094  001196                     i1_recv_msg:
  5095                           	opt stack 15
  5096                           
  5097                           ;messages.c: 64: unsigned char slot;
  5098                           ;messages.c: 68: msg *qmsg;
  5099                           ;messages.c: 69: size_t tlength;
  5100                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5101                           
  5102                           ;incstack = 0
  5103  001196  EE20 F089          	lfsr	2,137
  5104  00119A  500B               	movf	i1recv_msg@qptr,w,c
  5105  00119C  26D9               	addwf	fsr2l,f,c
  5106  00119E  500C               	movf	i1recv_msg@qptr+1,w,c
  5107  0011A0  22DA               	addwfc	fsr2h,f,c
  5108  0011A2  50DF               	movf	indf2,w,c
  5109  0011A4  6E14               	movwf	i1recv_msg@slot,c
  5110                           
  5111                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5112  0011A6  5014               	movf	i1recv_msg@slot,w,c
  5113  0011A8  0D11               	mullw	17
  5114  0011AA  50F3               	movf	prodl,w,c
  5115  0011AC  240B               	addwf	i1recv_msg@qptr,w,c
  5116  0011AE  6E17               	movwf	i1recv_msg@qmsg,c
  5117  0011B0  50F4               	movf	prodh,w,c
  5118  0011B2  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5119  0011B4  6E18               	movwf	i1recv_msg@qmsg+1,c
  5120                           
  5121                           ;messages.c: 74: if (qmsg->full == 1) {
  5122  0011B6  0E01               	movlw	1
  5123  0011B8  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5124  0011BC  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5125  0011C0  62DF               	cpfseq	indf2,c
  5126  0011C2  D050               	goto	i1l2459
  5127                           
  5128                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5129  0011C4  EE20 F001          	lfsr	2,1
  5130  0011C8  5017               	movf	i1recv_msg@qmsg,w,c
  5131  0011CA  26D9               	addwf	fsr2l,f,c
  5132  0011CC  5018               	movf	i1recv_msg@qmsg+1,w,c
  5133  0011CE  22DA               	addwfc	fsr2h,f,c
  5134  0011D0  50DF               	movf	indf2,w,c
  5135  0011D2  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5136  0011D4  B0D8               	btfsc	status,0,c
  5137  0011D6  D002               	goto	i1l2443
  5138                           
  5139                           ;messages.c: 77: return (-3);
  5140  0011D8  0EFD               	movlw	253
  5141  0011DA  0012               	return	
  5142  0011DC                     i1l2443:
  5143                           
  5144                           ;messages.c: 78: }
  5145                           ;messages.c: 80: tlength = qmsg->length;
  5146  0011DC  EE20 F001          	lfsr	2,1
  5147  0011E0  5017               	movf	i1recv_msg@qmsg,w,c
  5148  0011E2  26D9               	addwf	fsr2l,f,c
  5149  0011E4  5018               	movf	i1recv_msg@qmsg+1,w,c
  5150  0011E6  22DA               	addwfc	fsr2h,f,c
  5151  0011E8  50DF               	movf	indf2,w,c
  5152  0011EA  6E12               	movwf	??i1_recv_msg& (0+255),c
  5153  0011EC  5012               	movf	??i1_recv_msg,w,c
  5154  0011EE  6E15               	movwf	i1recv_msg@tlength,c
  5155  0011F0  6A16               	clrf	i1recv_msg@tlength+1,c
  5156                           
  5157                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5158  0011F2  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5159  0011F6  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5160  0011FA  0E03               	movlw	3
  5161  0011FC  2417               	addwf	i1recv_msg@qmsg,w,c
  5162  0011FE  6E12               	movwf	??i1_recv_msg& (0+255),c
  5163  001200  0E00               	movlw	0
  5164  001202  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5165  001204  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5166  001206  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5167  00120A  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5168  00120E  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5169  001212  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5170  001216  EC77  F00C         	call	i1_memcpy	;wreg free
  5171                           
  5172                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  5173  00121A  EE20 F089          	lfsr	2,137
  5174  00121E  500B               	movf	i1recv_msg@qptr,w,c
  5175  001220  26D9               	addwf	fsr2l,f,c
  5176  001222  500C               	movf	i1recv_msg@qptr+1,w,c
  5177  001224  22DA               	addwfc	fsr2h,f,c
  5178  001226  EE10 F089          	lfsr	1,137
  5179  00122A  500B               	movf	i1recv_msg@qptr,w,c
  5180  00122C  26E1               	addwf	fsr1l,f,c
  5181  00122E  500C               	movf	i1recv_msg@qptr+1,w,c
  5182  001230  22E2               	addwfc	fsr1h,f,c
  5183  001232  50E7               	movf	indf1,w,c
  5184  001234  6E12               	movwf	??i1_recv_msg& (0+255),c
  5185  001236  2812               	incf	??i1_recv_msg,w,c
  5186  001238  0B07               	andlw	7
  5187  00123A  6EDF               	movwf	indf2,c
  5188                           
  5189                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5190  00123C  EE20 F002          	lfsr	2,2
  5191  001240  5017               	movf	i1recv_msg@qmsg,w,c
  5192  001242  26D9               	addwf	fsr2l,f,c
  5193  001244  5018               	movf	i1recv_msg@qmsg+1,w,c
  5194  001246  22DA               	addwfc	fsr2h,f,c
  5195  001248  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5196  00124C  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5197  001250  CFDF FFE7          	movff	indf2,indf1
  5198                           
  5199                           ;messages.c: 91: qmsg->full = 0;
  5200  001254  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5201  001258  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5202  00125C  0E00               	movlw	0
  5203  00125E  6EDF               	movwf	indf2,c
  5204                           
  5205                           ;messages.c: 92: return (tlength);
  5206  001260  5015               	movf	i1recv_msg@tlength,w,c
  5207  001262  0012               	return	
  5208  001264                     i1l2459:
  5209                           
  5210                           ;messages.c: 94: return (-4);
  5211  001264  0EFC               	movlw	252
  5212  001266  0012               	return	
  5213  001268                     __end_ofi1_recv_msg:
  5214                           	opt stack 0
  5215                           pclatu	equ	0xFFB
  5216                           pclath	equ	0xFFA
  5217                           tblptru	equ	0xFF8
  5218                           tblptrh	equ	0xFF7
  5219                           tblptrl	equ	0xFF6
  5220                           tablat	equ	0xFF5
  5221                           prodh	equ	0xFF4
  5222                           prodl	equ	0xFF3
  5223                           intcon	equ	0xFF2
  5224                           postinc0	equ	0xFEE
  5225                           fsr0h	equ	0xFEA
  5226                           fsr0l	equ	0xFE9
  5227                           wreg	equ	0xFE8
  5228                           indf1	equ	0xFE7
  5229                           fsr1h	equ	0xFE2
  5230                           fsr1l	equ	0xFE1
  5231                           bsr	equ	0xFE0
  5232                           indf2	equ	0xFDF
  5233                           postinc2	equ	0xFDE
  5234                           postdec2	equ	0xFDD
  5235                           fsr2h	equ	0xFDA
  5236                           fsr2l	equ	0xFD9
  5237                           status	equ	0xFD8
  5238                           
  5239 ;; *************** function _uart_receive_interrupt_handler *****************
  5240 ;; Defined at:
  5241 ;;		line 54 in file "../src/my_uart.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  bad_start_id    1   49[COMRAM] unsigned char 
  5246 ;;  message_coun    1   51[COMRAM] unsigned char 
  5247 ;;  status          1   42[COMRAM] unsigned char 
  5248 ;;  bad_end_id      1   50[COMRAM] unsigned char 
  5249 ;;  msg_id          1   55[COMRAM] unsigned char 
  5250 ;;  status          1   43[COMRAM] unsigned char 
  5251 ;;  bad_checksum    3   44[COMRAM] unsigned char [3]
  5252 ;;  bad_counter_    2   47[COMRAM] unsigned char [2]
  5253 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5254 ;;  i               2   53[COMRAM] int 
  5255 ;;  checksum        1   52[COMRAM] unsigned char 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;		None               void
  5258 ;; Registers used:
  5259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5269 ;;Total ram usage:       30 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    9
  5272 ;; This function calls:
  5273 ;;		_ToMainLow_sendmsg
  5274 ;; This function is called by:
  5275 ;;		_InterruptHandlerLow
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text32
  5280  000AFA                     __ptext32:
  5281                           	opt stack 0
  5282  000AFA                     _uart_receive_interrupt_handler:
  5283                           	opt stack 15
  5284                           
  5285                           ;my_uart.c: 57: static unsigned char frame[(14 + 2 + 2)];
  5286                           ;my_uart.c: 58: static unsigned char index = 0;
  5287                           ;my_uart.c: 59: static unsigned char done = 0;
  5288                           ;my_uart.c: 60: static unsigned char received_counter = 0;
  5289                           ;my_uart.c: 62: static unsigned char start_byte_bad = 0;
  5290                           ;my_uart.c: 63: static unsigned char error = 0;
  5291                           ;my_uart.c: 65: if(!done)
  5292                           
  5293                           ;incstack = 0
  5294  000AFA  664B               	tstfsz	uart_receive_interrupt_handler@done,c
  5295  000AFC  D03F               	goto	i1l2913
  5296                           
  5297                           ;my_uart.c: 66: {
  5298                           ;my_uart.c: 67: frame[index] = RCREG1;
  5299  000AFE  504D               	movf	uart_receive_interrupt_handler@index,w,c
  5300  000B00  0D01               	mullw	1
  5301  000B02  0100               	movlb	0	; () banked
  5302  000B04  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5303  000B06  24F3               	addwf	prodl,w,c
  5304  000B08  6ED9               	movwf	fsr2l,c
  5305  000B0A  0100               	movlb	0	; () banked
  5306  000B0C  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5307  000B0E  20F4               	addwfc	prodh,w,c
  5308  000B10  6EDA               	movwf	fsr2h,c
  5309  000B12  CFAF FFDF          	movff	4015,indf2	;volatile
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;my_uart.c: 71: }
  5313                           ;my_uart.c: 72: if( index == 0 )
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;my_uart.c: 69: {
  5317  000B16  664D               	tstfsz	uart_receive_interrupt_handler@index,c
  5318  000B18  D019               	goto	i1l2899
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;my_uart.c: 73: {
  5322                           ;my_uart.c: 74: if( frame[0] != 0xff )
  5323  000B1A  0100               	movlb	0	; () banked
  5324  000B1C  299D               	incf	uart_receive_interrupt_handler@frame& (0+255),w,b
  5325  000B1E  B4D8               	btfsc	status,2,c
  5326  000B20  D012               	goto	i1l2897
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;my_uart.c: 75: {
  5330                           ;my_uart.c: 76: if( !start_byte_bad )
  5331  000B22  664F               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5332  000B24  D00D               	goto	i1l2891
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;my_uart.c: 77: {
  5336                           ;my_uart.c: 78: start_byte_bad = 1;
  5337  000B26  0E01               	movlw	1
  5338  000B28  6E4F               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;my_uart.c: 79: unsigned char bad_start_id = received_counter;
  5342  000B2A  C04E  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;my_uart.c: 80: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5346  000B2E  0E22               	movlw	34
  5347  000B30  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5348  000B32  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5349  000B34  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5350  000B36  0E32               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5351  000B38  6E18               	movwf	ToMainLow_sendmsg@data,c
  5352  000B3A  0E01               	movlw	1
  5353  000B3C  ECF9  F00D         	call	_ToMainLow_sendmsg
  5354  000B40                     i1l2891:
  5355                           
  5356                           ;my_uart.c: 82: }
  5357                           ;my_uart.c: 83: index = 0;
  5358  000B40  0E00               	movlw	0
  5359  000B42  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5360  000B44  0012               	return	
  5361  000B46                     i1l2897:
  5362                           
  5363                           ;my_uart.c: 86: else
  5364                           ;my_uart.c: 87: {
  5365                           ;my_uart.c: 88: start_byte_bad = 0;
  5366  000B46  0E00               	movlw	0
  5367  000B48  6E4F               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5368  000B4A  D017               	goto	i1l2911
  5369  000B4C                     i1l2899:
  5370                           
  5371                           ;my_uart.c: 91: else if( index >= (14 + 2 + 2) - 1 )
  5372  000B4C  0E10               	movlw	16
  5373  000B4E  644D               	cpfsgt	uart_receive_interrupt_handler@index,c
  5374  000B50  D014               	goto	i1l2911
  5375                           
  5376                           ;my_uart.c: 92: {
  5377                           ;my_uart.c: 93: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5378  000B52  0100               	movlb	0	; () banked
  5379  000B54  51AE               	movf	(uart_receive_interrupt_handler@frame+17)& (0+255),w,b
  5380  000B56  0AFE               	xorlw	254
  5381  000B58  B4D8               	btfsc	status,2,c
  5382  000B5A  D00F               	goto	i1l2911
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;my_uart.c: 94: {
  5386                           ;my_uart.c: 96: index = 0;
  5387  000B5C  0E00               	movlw	0
  5388  000B5E  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;my_uart.c: 99: unsigned char bad_end_id = received_counter;
  5392  000B60  C04E  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;my_uart.c: 100: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5396  000B64  0E23               	movlw	35
  5397  000B66  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5398  000B68  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5399  000B6A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5400  000B6C  0E33               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5401  000B6E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5402  000B70  0E01               	movlw	1
  5403  000B72  ECF9  F00D         	call	_ToMainLow_sendmsg
  5404                           
  5405                           ;my_uart.c: 101: error = 1;
  5406  000B76  0E01               	movlw	1
  5407  000B78  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5408  000B7A                     i1l2911:
  5409                           
  5410                           ;my_uart.c: 102: }
  5411                           ;my_uart.c: 103: }
  5412                           ;my_uart.c: 104: index++;
  5413  000B7A  2A4D               	incf	uart_receive_interrupt_handler@index,f,c
  5414  000B7C                     i1l2913:
  5415                           
  5416                           ;my_uart.c: 105: }
  5417                           ;my_uart.c: 107: if( index >= (14 + 2 + 2) )
  5418  000B7C  0E11               	movlw	17
  5419  000B7E  644D               	cpfsgt	uart_receive_interrupt_handler@index,c
  5420  000B80  0012               	return	
  5421                           
  5422                           ;my_uart.c: 108: {
  5423                           ;my_uart.c: 109: index = 0;
  5424  000B82  0E00               	movlw	0
  5425  000B84  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5426                           
  5427                           ;my_uart.c: 111: if( received_counter != frame[1] )
  5428  000B86  0100               	movlb	0	; () banked
  5429  000B88  519E               	movf	(uart_receive_interrupt_handler@frame+1)& (0+255),w,b
  5430  000B8A  184E               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5431  000B8C  B4D8               	btfsc	status,2,c
  5432  000B8E  D011               	goto	i1l2925
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;my_uart.c: 112: {
  5436                           ;my_uart.c: 114: unsigned char bad_counter_id[2];
  5437                           ;my_uart.c: 115: bad_counter_id[0] = received_counter;
  5438  000B90  C04E  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5439                           
  5440                           ;my_uart.c: 116: bad_counter_id[1] = frame[1];
  5441  000B94  C09E  F031         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;my_uart.c: 117: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5445  000B98  0E21               	movlw	33
  5446  000B9A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5447  000B9C  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5448  000B9E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5449  000BA0  0E30               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5450  000BA2  6E18               	movwf	ToMainLow_sendmsg@data,c
  5451  000BA4  0E02               	movlw	2
  5452  000BA6  ECF9  F00D         	call	_ToMainLow_sendmsg
  5453                           
  5454                           ;my_uart.c: 120: received_counter = frame[1];
  5455  000BAA  C09E  F04E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@received_co
      +                          unter
  5456                           
  5457                           ;my_uart.c: 122: error = 1;
  5458  000BAE  0E01               	movlw	1
  5459  000BB0  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5460  000BB2                     i1l2925:
  5461                           
  5462                           ;my_uart.c: 123: }
  5463                           ;my_uart.c: 126: unsigned char gooey_uart_center[14];
  5464                           ;my_uart.c: 127: unsigned char checksum = 0;
  5465  000BB2  0E00               	movlw	0
  5466  000BB4  6E35               	movwf	uart_receive_interrupt_handler@checksum,c
  5467                           
  5468                           ;my_uart.c: 128: int i;
  5469                           ;my_uart.c: 129: for(i = 0; i < 14; i++)
  5470  000BB6  0E00               	movlw	0
  5471  000BB8  6E37               	movwf	uart_receive_interrupt_handler@i+1,c
  5472  000BBA  0E00               	movlw	0
  5473  000BBC  6E36               	movwf	uart_receive_interrupt_handler@i,c
  5474  000BBE  5037               	movf	uart_receive_interrupt_handler@i+1,w,c
  5475  000BC0  0A80               	xorlw	128
  5476  000BC2  0F80               	addlw	-128
  5477  000BC4  0E0E               	movlw	14
  5478  000BC6  B4D8               	btfsc	status,2,c
  5479  000BC8  5C36               	subwf	uart_receive_interrupt_handler@i,w,c
  5480  000BCA  B0D8               	btfsc	status,0,c
  5481  000BCC  D021               	goto	i1l2941
  5482                           
  5483                           ;my_uart.c: 130: {
  5484                           ;my_uart.c: 131: gooey_uart_center[i] = frame[i+2];
  5485  000BCE  0E02               	movlw	2
  5486  000BD0  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5487  000BD2  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5488  000BD4  0E00               	movlw	0
  5489  000BD6  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5490  000BD8  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5491  000BDA  0100               	movlb	0	; () banked
  5492  000BDC  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5493  000BDE  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5494  000BE0  6ED9               	movwf	fsr2l,c
  5495  000BE2  0100               	movlb	0	; () banked
  5496  000BE4  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5497  000BE6  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5498  000BE8  6EDA               	movwf	fsr2h,c
  5499  000BEA  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5500  000BEC  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5501  000BEE  6EE1               	movwf	fsr1l,c
  5502  000BF0  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5503  000BF2  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5504  000BF4  6EE2               	movwf	fsr1h,c
  5505  000BF6  CFDF FFE7          	movff	indf2,indf1
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;my_uart.c: 132: checksum ^= gooey_uart_center[i];
  5509  000BFA  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5510  000BFC  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5511  000BFE  6ED9               	movwf	fsr2l,c
  5512  000C00  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5513  000C02  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5514  000C04  6EDA               	movwf	fsr2h,c
  5515  000C06  50DF               	movf	indf2,w,c
  5516  000C08  1A35               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5517                           
  5518                           ; BSR set to: 0
  5519  000C0A  4A36               	infsnz	uart_receive_interrupt_handler@i,f,c
  5520  000C0C  2A37               	incf	uart_receive_interrupt_handler@i+1,f,c
  5521  000C0E  D7D7               	goto	L5
  5522  000C10                     i1l2941:
  5523                           
  5524                           ;my_uart.c: 133: }
  5525                           ;my_uart.c: 135: if( checksum != frame[(14 + 2 + 2) - 2] )
  5526  000C10  0100               	movlb	0	; () banked
  5527  000C12  51AD               	movf	(uart_receive_interrupt_handler@frame+16)& (0+255),w,b
  5528  000C14  1835               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5529  000C16  B4D8               	btfsc	status,2,c
  5530  000C18  D011               	goto	i1l2949
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;my_uart.c: 136: {
  5534                           ;my_uart.c: 138: unsigned char bad_checksum_message[3];
  5535                           ;my_uart.c: 139: bad_checksum_message[0] = received_counter;
  5536  000C1A  C04E  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_message
  5537                           
  5538                           ;my_uart.c: 140: bad_checksum_message[1] = frame[(14 + 2 + 2) - 2];
  5539  000C1E  C0AD  F02E         	movff	uart_receive_interrupt_handler@frame+16,uart_receive_interrupt_handler@bad_checks
      +                          um_message+1
  5540                           
  5541                           ;my_uart.c: 141: bad_checksum_message[2] = checksum;
  5542  000C22  C035  F02F         	movff	uart_receive_interrupt_handler@checksum,uart_receive_interrupt_handler@bad_checks
      +                          um_message+2
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;my_uart.c: 142: ToMainLow_sendmsg(3,32,(void *)&bad_checksum_message);
  5546  000C26  0E20               	movlw	32
  5547  000C28  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5548  000C2A  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_message
  5549  000C2C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5550  000C2E  0E2D               	movlw	low uart_receive_interrupt_handler@bad_checksum_message
  5551  000C30  6E18               	movwf	ToMainLow_sendmsg@data,c
  5552  000C32  0E03               	movlw	3
  5553  000C34  ECF9  F00D         	call	_ToMainLow_sendmsg
  5554                           
  5555                           ;my_uart.c: 143: error = 1;
  5556  000C38  0E01               	movlw	1
  5557  000C3A  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5558  000C3C                     i1l2949:
  5559                           
  5560                           ;my_uart.c: 144: }
  5561                           ;my_uart.c: 149: if( !error )
  5562  000C3C  664C               	tstfsz	uart_receive_interrupt_handler@error,c
  5563  000C3E  D02C               	goto	i1l2969
  5564                           
  5565                           ;my_uart.c: 150: {
  5566                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5567  000C40  C01D  F038         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5568                           
  5569                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5570  000C44  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5571  000C46  0A11               	xorlw	17
  5572  000C48  B4D8               	btfsc	status,2,c
  5573  000C4A  D01C               	goto	i1l422
  5574  000C4C  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5575  000C4E  0AF1               	xorlw	241
  5576  000C50  B4D8               	btfsc	status,2,c
  5577  000C52  D018               	goto	i1l422
  5578  000C54  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5579  000C56  0AF2               	xorlw	242
  5580  000C58  B4D8               	btfsc	status,2,c
  5581  000C5A  D014               	goto	i1l422
  5582  000C5C  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5583  000C5E  0AF3               	xorlw	243
  5584  000C60  B4D8               	btfsc	status,2,c
  5585  000C62  D010               	goto	i1l422
  5586  000C64  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5587  000C66  0AF4               	xorlw	244
  5588  000C68  B4D8               	btfsc	status,2,c
  5589  000C6A  D00C               	goto	i1l422
  5590                           
  5591                           ;my_uart.c: 155: {
  5592                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5593  000C6C  C04E  F034         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5594                           
  5595                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5596  000C70  0E24               	movlw	36
  5597  000C72  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5598  000C74  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5599  000C76  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5600  000C78  0E34               	movlw	low uart_receive_interrupt_handler@message_count
  5601  000C7A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5602  000C7C  0E01               	movlw	1
  5603  000C7E  ECF9  F00D         	call	_ToMainLow_sendmsg
  5604  000C82  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5605  000C84                     i1l422:
  5606                           
  5607                           ;my_uart.c: 158: }
  5608                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5609  000C84  0E1F               	movlw	31
  5610  000C86  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5611  000C88  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5612  000C8A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5613  000C8C  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5614  000C8E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5615  000C90  0E0E               	movlw	14
  5616  000C92  ECF9  F00D         	call	_ToMainLow_sendmsg
  5617  000C96  6E2C               	movwf	uart_receive_interrupt_handler@status_2231,c
  5618  000C98                     i1l2969:
  5619                           
  5620                           ;my_uart.c: 171: }
  5621                           ;my_uart.c: 172: }
  5622                           ;my_uart.c: 174: received_counter++;
  5623  000C98  2A4E               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5624                           
  5625                           ;my_uart.c: 175: error = 0;
  5626  000C9A  0E00               	movlw	0
  5627  000C9C  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5628  000C9E  0012               	return	
  5629  000CA0                     __end_of_uart_receive_interrupt_handler:
  5630                           	opt stack 0
  5631                           pclatu	equ	0xFFB
  5632                           pclath	equ	0xFFA
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           intcon	equ	0xFF2
  5640                           postinc0	equ	0xFEE
  5641                           fsr0h	equ	0xFEA
  5642                           fsr0l	equ	0xFE9
  5643                           wreg	equ	0xFE8
  5644                           indf1	equ	0xFE7
  5645                           fsr1h	equ	0xFE2
  5646                           fsr1l	equ	0xFE1
  5647                           bsr	equ	0xFE0
  5648                           indf2	equ	0xFDF
  5649                           postinc2	equ	0xFDE
  5650                           postdec2	equ	0xFDD
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function _timer1_int_handler *****************
  5656 ;; Defined at:
  5657 ;;		line 38 in file "../src/user_interrupts.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  result          2   26[COMRAM] unsigned int 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;		None               void
  5664 ;; Registers used:
  5665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;Total ram usage:        2 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    9
  5678 ;; This function calls:
  5679 ;;		_ReadTimer1
  5680 ;;		_ToMainLow_sendmsg
  5681 ;;		_WriteTimer1
  5682 ;; This function is called by:
  5683 ;;		_InterruptHandlerLow
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text33
  5688  001B78                     __ptext33:
  5689                           	opt stack 0
  5690  001B78                     _timer1_int_handler:
  5691                           	opt stack 15
  5692                           
  5693                           ;user_interrupts.c: 42: unsigned int result;
  5694                           ;user_interrupts.c: 49: result = ReadTimer1();
  5695                           
  5696                           ;incstack = 0
  5697  001B78  EC3D  F00E         	call	_ReadTimer1	;wreg free
  5698  001B7C  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5699  001B80  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5700                           
  5701                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5702  001B84  0E0B               	movlw	11
  5703  001B86  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5704  001B88  0E00               	movlw	0
  5705  001B8A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5706  001B8C  0E00               	movlw	0
  5707  001B8E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5708  001B90  0E00               	movlw	0
  5709  001B92  ECF9  F00D         	call	_ToMainLow_sendmsg
  5710                           
  5711                           ;user_interrupts.c: 53: WriteTimer1(0);
  5712  001B96  0E00               	movlw	0
  5713  001B98  6E02               	movwf	WriteTimer1@timer1+1,c
  5714  001B9A  0E00               	movlw	0
  5715  001B9C  6E01               	movwf	WriteTimer1@timer1,c
  5716  001B9E  EC34  F00E         	call	_WriteTimer1	;wreg free
  5717  001BA2  0012               	return	
  5718  001BA4                     __end_of_timer1_int_handler:
  5719                           	opt stack 0
  5720                           pclatu	equ	0xFFB
  5721                           pclath	equ	0xFFA
  5722                           tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           prodh	equ	0xFF4
  5727                           prodl	equ	0xFF3
  5728                           intcon	equ	0xFF2
  5729                           postinc0	equ	0xFEE
  5730                           fsr0h	equ	0xFEA
  5731                           fsr0l	equ	0xFE9
  5732                           wreg	equ	0xFE8
  5733                           indf1	equ	0xFE7
  5734                           fsr1h	equ	0xFE2
  5735                           fsr1l	equ	0xFE1
  5736                           bsr	equ	0xFE0
  5737                           indf2	equ	0xFDF
  5738                           postinc2	equ	0xFDE
  5739                           postdec2	equ	0xFDD
  5740                           fsr2h	equ	0xFDA
  5741                           fsr2l	equ	0xFD9
  5742                           status	equ	0xFD8
  5743                           
  5744 ;; *************** function _WriteTimer1 *****************
  5745 ;; Defined at:
  5746 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  timer1          2    0[COMRAM] unsigned int 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  timer           2    2[COMRAM] struct Timers
  5751 ;; Return value:  Size  Location     Type
  5752 ;;		None               void
  5753 ;; Registers used:
  5754 ;;		None
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5764 ;;Total ram usage:        4 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    6
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_timer1_int_handler
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text34
  5775  001C68                     __ptext34:
  5776                           	opt stack 0
  5777  001C68                     _WriteTimer1:
  5778                           	opt stack 17
  5779                           
  5780                           ;incstack = 0
  5781  001C68  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5782  001C6C  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5783  001C70  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5784  001C74  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5785  001C78  0012               	return	
  5786  001C7A                     __end_of_WriteTimer1:
  5787                           	opt stack 0
  5788                           pclatu	equ	0xFFB
  5789                           pclath	equ	0xFFA
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           intcon	equ	0xFF2
  5797                           postinc0	equ	0xFEE
  5798                           fsr0h	equ	0xFEA
  5799                           fsr0l	equ	0xFE9
  5800                           wreg	equ	0xFE8
  5801                           indf1	equ	0xFE7
  5802                           fsr1h	equ	0xFE2
  5803                           fsr1l	equ	0xFE1
  5804                           bsr	equ	0xFE0
  5805                           indf2	equ	0xFDF
  5806                           postinc2	equ	0xFDE
  5807                           postdec2	equ	0xFDD
  5808                           fsr2h	equ	0xFDA
  5809                           fsr2l	equ	0xFD9
  5810                           status	equ	0xFD8
  5811                           
  5812 ;; *************** function _ToMainLow_sendmsg *****************
  5813 ;; Defined at:
  5814 ;;		line 103 in file "../src/messages.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  length          1    wreg     unsigned char 
  5817 ;;  msgtype         1   22[COMRAM] unsigned char 
  5818 ;;  data            2   23[COMRAM] PTR void 
  5819 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_message(3)
      +, uart_receive_interrupt_handler@gooey_uart_center(14), 
  5820 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  length          1   25[COMRAM] unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      char 
  5825 ;; Registers used:
  5826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5832 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;Total ram usage:        4 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    8
  5839 ;; This function calls:
  5840 ;;		i1_send_msg
  5841 ;; This function is called by:
  5842 ;;		_uart_receive_interrupt_handler
  5843 ;;		_timer1_int_handler
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text35
  5848  001BF2                     __ptext35:
  5849                           	opt stack 0
  5850  001BF2                     _ToMainLow_sendmsg:
  5851                           	opt stack 15
  5852                           
  5853                           ;incstack = 0
  5854                           ;ToMainLow_sendmsg@length stored from wreg
  5855  001BF2  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5856                           
  5857                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5858  001BF4  0102               	movlb	2	; () banked
  5859  001BF6  0E02               	movlw	high _ToMainLow_MQ
  5860  001BF8  6E0C               	movwf	i1send_msg@qptr+1,c
  5861  001BFA  0102               	movlb	2	; () banked
  5862  001BFC  0E00               	movlw	low _ToMainLow_MQ
  5863  001BFE  6E0B               	movwf	i1send_msg@qptr,c
  5864  001C00  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5865  001C04  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5866  001C08  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5867  001C0C  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5868  001C10  EC99  F009         	call	i1_send_msg	;wreg free
  5869  001C14  0012               	return	
  5870  001C16                     __end_of_ToMainLow_sendmsg:
  5871                           	opt stack 0
  5872                           pclatu	equ	0xFFB
  5873                           pclath	equ	0xFFA
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           prodh	equ	0xFF4
  5879                           prodl	equ	0xFF3
  5880                           intcon	equ	0xFF2
  5881                           postinc0	equ	0xFEE
  5882                           fsr0h	equ	0xFEA
  5883                           fsr0l	equ	0xFE9
  5884                           wreg	equ	0xFE8
  5885                           indf1	equ	0xFE7
  5886                           fsr1h	equ	0xFE2
  5887                           fsr1l	equ	0xFE1
  5888                           bsr	equ	0xFE0
  5889                           indf2	equ	0xFDF
  5890                           postinc2	equ	0xFDE
  5891                           postdec2	equ	0xFDD
  5892                           fsr2h	equ	0xFDA
  5893                           fsr2l	equ	0xFD9
  5894                           status	equ	0xFD8
  5895                           
  5896 ;; *************** function i1_send_msg *****************
  5897 ;; Defined at:
  5898 ;;		line 24 in file "../src/messages.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5901 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5902 ;;  length          1   12[COMRAM] unsigned char 
  5903 ;;  msgtype         1   13[COMRAM] unsigned char 
  5904 ;;  data            2   14[COMRAM] PTR void 
  5905 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  5906 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  5907 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  5908 ;;		 -> main@t1thread_data(2), main@ic(38), 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5911 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5912 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5913 ;;  send_msg        2   17[COMRAM] unsigned int 
  5914 ;;  send_msg        1   19[COMRAM] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      char 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5924 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;Total ram usage:       12 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    7
  5931 ;; This function calls:
  5932 ;;		i1_memcpy
  5933 ;; This function is called by:
  5934 ;;		_ToMainLow_sendmsg
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text36
  5939  001332                     __ptext36:
  5940                           	opt stack 0
  5941  001332                     i1_send_msg:
  5942                           	opt stack 15
  5943                           
  5944                           ;messages.c: 25: unsigned char slot;
  5945                           ;messages.c: 27: msg *qmsg;
  5946                           ;messages.c: 28: size_t tlength = length;
  5947                           
  5948                           ;incstack = 0
  5949  001332  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5950  001336  6A13               	clrf	i1send_msg@tlength+1,c
  5951                           
  5952                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5953  001338  EE20 F088          	lfsr	2,136
  5954  00133C  500B               	movf	i1send_msg@qptr,w,c
  5955  00133E  26D9               	addwf	fsr2l,f,c
  5956  001340  500C               	movf	i1send_msg@qptr+1,w,c
  5957  001342  22DA               	addwfc	fsr2h,f,c
  5958  001344  50DF               	movf	indf2,w,c
  5959  001346  6E14               	movwf	i1send_msg@slot,c
  5960                           
  5961                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5962  001348  5014               	movf	i1send_msg@slot,w,c
  5963  00134A  0D11               	mullw	17
  5964  00134C  50F3               	movf	prodl,w,c
  5965  00134E  240B               	addwf	i1send_msg@qptr,w,c
  5966  001350  6E15               	movwf	i1send_msg@qmsg,c
  5967  001352  50F4               	movf	prodh,w,c
  5968  001354  200C               	addwfc	i1send_msg@qptr+1,w,c
  5969  001356  6E16               	movwf	i1send_msg@qmsg+1,c
  5970                           
  5971                           ;messages.c: 41: if (qmsg->full != 0) {
  5972  001358  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5973  00135C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5974  001360  50DF               	movf	indf2,w,c
  5975  001362  B4D8               	btfsc	status,2,c
  5976  001364  D002               	goto	i1l2395
  5977                           
  5978                           ;messages.c: 42: return (-1);
  5979  001366  0EFF               	movlw	255
  5980  001368  0012               	return	
  5981  00136A                     i1l2395:
  5982                           
  5983                           ;messages.c: 43: }
  5984                           ;messages.c: 46: qmsg->length = length;
  5985  00136A  EE20 F001          	lfsr	2,1
  5986  00136E  5015               	movf	i1send_msg@qmsg,w,c
  5987  001370  26D9               	addwf	fsr2l,f,c
  5988  001372  5016               	movf	i1send_msg@qmsg+1,w,c
  5989  001374  22DA               	addwfc	fsr2h,f,c
  5990  001376  C00D  FFDF         	movff	i1send_msg@length,indf2
  5991                           
  5992                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5993  00137A  EE20 F002          	lfsr	2,2
  5994  00137E  5015               	movf	i1send_msg@qmsg,w,c
  5995  001380  26D9               	addwf	fsr2l,f,c
  5996  001382  5016               	movf	i1send_msg@qmsg+1,w,c
  5997  001384  22DA               	addwfc	fsr2h,f,c
  5998  001386  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5999                           
  6000                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6001  00138A  0E03               	movlw	3
  6002  00138C  2415               	addwf	i1send_msg@qmsg,w,c
  6003  00138E  6E01               	movwf	i1memcpy@d1,c
  6004  001390  0E00               	movlw	0
  6005  001392  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6006  001394  6E02               	movwf	i1memcpy@d1+1,c
  6007  001396  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6008  00139A  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6009  00139E  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6010  0013A2  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6011  0013A6  EC77  F00C         	call	i1_memcpy	;wreg free
  6012                           
  6013                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  6014  0013AA  EE20 F088          	lfsr	2,136
  6015  0013AE  500B               	movf	i1send_msg@qptr,w,c
  6016  0013B0  26D9               	addwf	fsr2l,f,c
  6017  0013B2  500C               	movf	i1send_msg@qptr+1,w,c
  6018  0013B4  22DA               	addwfc	fsr2h,f,c
  6019  0013B6  EE10 F088          	lfsr	1,136
  6020  0013BA  500B               	movf	i1send_msg@qptr,w,c
  6021  0013BC  26E1               	addwf	fsr1l,f,c
  6022  0013BE  500C               	movf	i1send_msg@qptr+1,w,c
  6023  0013C0  22E2               	addwfc	fsr1h,f,c
  6024  0013C2  50E7               	movf	indf1,w,c
  6025  0013C4  6E11               	movwf	??i1_send_msg& (0+255),c
  6026  0013C6  2811               	incf	??i1_send_msg,w,c
  6027  0013C8  0B07               	andlw	7
  6028  0013CA  6EDF               	movwf	indf2,c
  6029                           
  6030                           ;messages.c: 59: qmsg->full = 1;
  6031  0013CC  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6032  0013D0  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6033  0013D4  0E01               	movlw	1
  6034  0013D6  6EDF               	movwf	indf2,c
  6035                           
  6036                           ;messages.c: 60: return (1);
  6037  0013D8  0E01               	movlw	1
  6038  0013DA  0012               	return	
  6039  0013DC                     __end_ofi1_send_msg:
  6040                           	opt stack 0
  6041                           pclatu	equ	0xFFB
  6042                           pclath	equ	0xFFA
  6043                           tblptru	equ	0xFF8
  6044                           tblptrh	equ	0xFF7
  6045                           tblptrl	equ	0xFF6
  6046                           tablat	equ	0xFF5
  6047                           prodh	equ	0xFF4
  6048                           prodl	equ	0xFF3
  6049                           intcon	equ	0xFF2
  6050                           postinc0	equ	0xFEE
  6051                           fsr0h	equ	0xFEA
  6052                           fsr0l	equ	0xFE9
  6053                           wreg	equ	0xFE8
  6054                           indf1	equ	0xFE7
  6055                           fsr1h	equ	0xFE2
  6056                           fsr1l	equ	0xFE1
  6057                           bsr	equ	0xFE0
  6058                           indf2	equ	0xFDF
  6059                           postinc2	equ	0xFDE
  6060                           postdec2	equ	0xFDD
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function i1_memcpy *****************
  6066 ;; Defined at:
  6067 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  d1              2    0[COMRAM] PTR void 
  6070 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6071 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  6072 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  6073 ;;  s1              2    2[COMRAM] PTR const void 
  6074 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6075 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6076 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  6077 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6078 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  6079 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  6080 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6081 ;;  n               2    4[COMRAM] unsigned int 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6084 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6085 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6086 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  6087 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6088 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  6089 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  6090 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6091 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6092 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6093 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  6094 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  2    0[COMRAM] PTR void 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6104 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6107 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6108 ;;Total ram usage:       10 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    6
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		i1_send_msg
  6115 ;;		i1_recv_msg
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text37
  6120  0018EE                     __ptext37:
  6121                           	opt stack 0
  6122  0018EE                     i1_memcpy:
  6123                           	opt stack 15
  6124                           
  6125                           ;incstack = 0
  6126  0018EE  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6127  0018F2  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6128  0018F6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6129  0018FA  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6130  0018FE  D00E               	goto	i1l2369
  6131  001900                     i1l2363:
  6132  001900  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6133  001904  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6134  001908  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6135  00190C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6136  001910  CFDF FFE7          	movff	indf2,indf1
  6137  001914  4A09               	infsnz	i1memcpy@s,f,c
  6138  001916  2A0A               	incf	i1memcpy@s+1,f,c
  6139  001918  4A07               	infsnz	i1memcpy@d,f,c
  6140  00191A  2A08               	incf	i1memcpy@d+1,f,c
  6141  00191C                     i1l2369:
  6142  00191C  0605               	decf	i1memcpy@n,f,c
  6143  00191E  A0D8               	btfss	status,0,c
  6144  001920  0606               	decf	i1memcpy@n+1,f,c
  6145  001922  2805               	incf	i1memcpy@n& (0+255),w,c
  6146  001924  B4D8               	btfsc	status,2,c
  6147  001926  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6148  001928  B4D8               	btfsc	status,2,c
  6149                           
  6150                           ;	Return value of i1_memcpy is never used
  6151  00192A  0012               	return	
  6152  00192C  D7E9               	goto	i1l2363
  6153  00192E                     __end_ofi1_memcpy:
  6154                           	opt stack 0
  6155                           pclatu	equ	0xFFB
  6156                           pclath	equ	0xFFA
  6157                           tblptru	equ	0xFF8
  6158                           tblptrh	equ	0xFF7
  6159                           tblptrl	equ	0xFF6
  6160                           tablat	equ	0xFF5
  6161                           prodh	equ	0xFF4
  6162                           prodl	equ	0xFF3
  6163                           intcon	equ	0xFF2
  6164                           postinc0	equ	0xFEE
  6165                           fsr0h	equ	0xFEA
  6166                           fsr0l	equ	0xFE9
  6167                           wreg	equ	0xFE8
  6168                           indf1	equ	0xFE7
  6169                           fsr1h	equ	0xFE2
  6170                           fsr1l	equ	0xFE1
  6171                           bsr	equ	0xFE0
  6172                           indf2	equ	0xFDF
  6173                           postinc2	equ	0xFDE
  6174                           postdec2	equ	0xFDD
  6175                           fsr2h	equ	0xFDA
  6176                           fsr2l	equ	0xFD9
  6177                           status	equ	0xFD8
  6178                           
  6179 ;; *************** function _ReadTimer1 *****************
  6180 ;; Defined at:
  6181 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  timer           2    2[COMRAM] struct Timers
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  2    0[COMRAM] unsigned int 
  6188 ;; Registers used:
  6189 ;;		None
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;Total ram usage:        4 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    6
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_timer1_int_handler
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text38
  6210  001C7A                     __ptext38:
  6211                           	opt stack 0
  6212  001C7A                     _ReadTimer1:
  6213                           	opt stack 17
  6214                           
  6215                           ;incstack = 0
  6216  001C7A  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6217  001C7E  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6218  001C82  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6219  001C86  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6220  001C8A  0012               	return	
  6221  001C8C                     __end_of_ReadTimer1:
  6222                           	opt stack 0
  6223                           pclatu	equ	0xFFB
  6224                           pclath	equ	0xFFA
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           prodh	equ	0xFF4
  6230                           prodl	equ	0xFF3
  6231                           intcon	equ	0xFF2
  6232                           postinc0	equ	0xFEE
  6233                           fsr0h	equ	0xFEA
  6234                           fsr0l	equ	0xFE9
  6235                           wreg	equ	0xFE8
  6236                           indf1	equ	0xFE7
  6237                           fsr1h	equ	0xFE2
  6238                           fsr1l	equ	0xFE1
  6239                           bsr	equ	0xFE0
  6240                           indf2	equ	0xFDF
  6241                           postinc2	equ	0xFDE
  6242                           postdec2	equ	0xFDD
  6243                           fsr2h	equ	0xFDA
  6244                           fsr2l	equ	0xFD9
  6245                           status	equ	0xFD8
  6246                           
  6247 ;; *************** function _InterruptHandlerHigh *****************
  6248 ;; Defined at:
  6249 ;;		line 86 in file "../src/interrupts.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;		None               void
  6256 ;; Registers used:
  6257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6267 ;;Total ram usage:       14 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    5
  6270 ;; This function calls:
  6271 ;;		_SleepIfOkay
  6272 ;;		_i2c_int_handler
  6273 ;;		_timer0_int_handler
  6274 ;; This function is called by:
  6275 ;;		Interrupt level 2
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	intcode
  6280  000008                     __pintcode:
  6281                           	opt stack 0
  6282  000008                     _InterruptHandlerHigh:
  6283                           	opt stack 15
  6284                           
  6285                           ;incstack = 0
  6286  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh
  6287  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+1
  6288  000010  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+2
  6289  000014  EF86  F00A         	goto	int_func
  6290                           pclatu	equ	0xFFB
  6291                           pclath	equ	0xFFA
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           intcon	equ	0xFF2
  6299                           postinc0	equ	0xFEE
  6300                           fsr0h	equ	0xFEA
  6301                           fsr0l	equ	0xFE9
  6302                           wreg	equ	0xFE8
  6303                           indf1	equ	0xFE7
  6304                           fsr1h	equ	0xFE2
  6305                           fsr1l	equ	0xFE1
  6306                           bsr	equ	0xFE0
  6307                           indf2	equ	0xFDF
  6308                           postinc2	equ	0xFDE
  6309                           postdec2	equ	0xFDD
  6310                           fsr2h	equ	0xFDA
  6311                           fsr2l	equ	0xFD9
  6312                           status	equ	0xFD8
  6313                           
  6314                           	psect	intcode_body
  6315  00150C                     __pintcode_body:
  6316                           	opt stack 15
  6317  00150C                     int_func:
  6318                           	opt stack 15
  6319  00150C  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+3
  6320  001510  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+4
  6321  001514  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+5
  6322  001518  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+6
  6323  00151C  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+7
  6324  001520  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+8
  6325  001524  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+9
  6326  001528  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+10
  6327  00152C  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+11
  6328  001530  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+12
  6329  001534  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+13
  6330                           
  6331                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6332  001538  A69E               	btfss	3998,3,c	;volatile
  6333  00153A  D003               	goto	i2l3157
  6334                           
  6335                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6336  00153C  969E               	bcf	3998,3,c	;volatile
  6337                           
  6338                           ;interrupts.c: 98: i2c_int_handler();
  6339  00153E  EC62  F000         	call	_i2c_int_handler	;wreg free
  6340  001542                     i2l3157:
  6341                           
  6342                           ;interrupts.c: 99: }
  6343                           ;interrupts.c: 102: if (INTCONbits.TMR0IF) {
  6344  001542  A4F2               	btfss	intcon,2,c	;volatile
  6345  001544  D003               	goto	i2l3163
  6346                           
  6347                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6348  001546  94F2               	bcf	intcon,2,c	;volatile
  6349                           
  6350                           ;interrupts.c: 108: timer0_int_handler();
  6351  001548  ECFD  F00A         	call	_timer0_int_handler	;wreg free
  6352  00154C                     i2l3163:
  6353                           
  6354                           ;interrupts.c: 109: }
  6355                           ;interrupts.c: 118: SleepIfOkay();
  6356  00154C  ECCB  F00B         	call	_SleepIfOkay	;wreg free
  6357  001550  C09C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6358  001554  C09B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6359  001558  C09A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6360  00155C  C099  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6361  001560  C098  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6362  001564  C097  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6363  001568  C096  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6364  00156C  C095  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6365  001570  C094  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6366  001574  C093  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6367  001578  C092  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6368  00157C  C091  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6369  001580  C090  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6370  001584  C08F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6371  001588  0011               	retfie		f
  6372  00158A                     __end_of_InterruptHandlerHigh:
  6373                           	opt stack 0
  6374                           pclatu	equ	0xFFB
  6375                           pclath	equ	0xFFA
  6376                           tblptru	equ	0xFF8
  6377                           tblptrh	equ	0xFF7
  6378                           tblptrl	equ	0xFF6
  6379                           tablat	equ	0xFF5
  6380                           prodh	equ	0xFF4
  6381                           prodl	equ	0xFF3
  6382                           intcon	equ	0xFF2
  6383                           postinc0	equ	0xFEE
  6384                           fsr0h	equ	0xFEA
  6385                           fsr0l	equ	0xFE9
  6386                           wreg	equ	0xFE8
  6387                           indf1	equ	0xFE7
  6388                           fsr1h	equ	0xFE2
  6389                           fsr1l	equ	0xFE1
  6390                           bsr	equ	0xFE0
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _timer0_int_handler *****************
  6399 ;; Defined at:
  6400 ;;		line 16 in file "../src/user_interrupts.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;  val             2   33[BANK0 ] unsigned int 
  6405 ;;  msgtype         2   31[BANK0 ] int 
  6406 ;;  length          2   29[BANK0 ] int 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;		None               void
  6409 ;; Registers used:
  6410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6419 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6420 ;;Total ram usage:        6 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    3
  6423 ;; This function calls:
  6424 ;;		_FromMainHigh_recvmsg
  6425 ;;		_ToMainHigh_sendmsg
  6426 ;;		_WriteTimer0
  6427 ;; This function is called by:
  6428 ;;		_InterruptHandlerHigh
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text40
  6433  0015FA                     __ptext40:
  6434                           	opt stack 0
  6435  0015FA                     _timer0_int_handler:
  6436                           	opt stack 16
  6437                           
  6438                           ;user_interrupts.c: 20: unsigned int val;
  6439                           ;user_interrupts.c: 21: int length, msgtype;
  6440                           ;user_interrupts.c: 25: WriteTimer0(0);
  6441                           
  6442                           ;incstack = 0
  6443  0015FA  0E00               	movlw	0
  6444  0015FC  0100               	movlb	0	; () banked
  6445  0015FE  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6446  001600  0E00               	movlw	0
  6447  001602  0100               	movlb	0	; () banked
  6448  001604  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6449  001606  EC46  F00E         	call	_WriteTimer0	;wreg free
  6450                           
  6451                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6452  00160A  0100               	movlb	0	; () banked
  6453  00160C  0E00               	movlw	high timer0_int_handler@msgtype
  6454  00160E  0100               	movlb	0	; () banked
  6455  001610  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6456  001612  0100               	movlb	0	; () banked
  6457  001614  0E7F               	movlw	low timer0_int_handler@msgtype
  6458  001616  0100               	movlb	0	; () banked
  6459  001618  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6460  00161A  0100               	movlb	0	; () banked
  6461  00161C  0E00               	movlw	high timer0_int_handler@val
  6462  00161E  0100               	movlb	0	; () banked
  6463  001620  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6464  001622  0100               	movlb	0	; () banked
  6465  001624  0E81               	movlw	low timer0_int_handler@val
  6466  001626  0100               	movlb	0	; () banked
  6467  001628  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6468  00162A  0E02               	movlw	2
  6469  00162C  EC43  F00D         	call	_FromMainHigh_recvmsg
  6470  001630  0100               	movlb	0	; () banked
  6471  001632  6F7D               	movwf	timer0_int_handler@length& (0+255),b
  6472  001634  0100               	movlb	0	; () banked
  6473  001636  6B7E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6474  001638  0100               	movlb	0	; () banked
  6475  00163A  BF7D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6476  00163C  077E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6480  00163E  0100               	movlb	0	; () banked
  6481  001640  517D               	movf	timer0_int_handler@length& (0+255),w,b
  6482  001642  0A02               	xorlw	2
  6483  001644  117E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6484  001646  A4D8               	btfss	status,2,c
  6485  001648  0012               	return	
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6489  00164A  0E0A               	movlw	10
  6490  00164C  0100               	movlb	0	; () banked
  6491  00164E  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6492  001650  0100               	movlb	0	; () banked
  6493  001652  0E00               	movlw	high timer0_int_handler@val
  6494  001654  0100               	movlb	0	; () banked
  6495  001656  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6496  001658  0100               	movlb	0	; () banked
  6497  00165A  0E81               	movlw	low timer0_int_handler@val
  6498  00165C  0100               	movlb	0	; () banked
  6499  00165E  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6500  001660  0E02               	movlw	2
  6501  001662  ECA5  F00D         	call	_ToMainHigh_sendmsg
  6502  001666  0012               	return	
  6503  001668                     __end_of_timer0_int_handler:
  6504                           	opt stack 0
  6505                           pclatu	equ	0xFFB
  6506                           pclath	equ	0xFFA
  6507                           tblptru	equ	0xFF8
  6508                           tblptrh	equ	0xFF7
  6509                           tblptrl	equ	0xFF6
  6510                           tablat	equ	0xFF5
  6511                           prodh	equ	0xFF4
  6512                           prodl	equ	0xFF3
  6513                           intcon	equ	0xFF2
  6514                           postinc0	equ	0xFEE
  6515                           fsr0h	equ	0xFEA
  6516                           fsr0l	equ	0xFE9
  6517                           wreg	equ	0xFE8
  6518                           indf1	equ	0xFE7
  6519                           fsr1h	equ	0xFE2
  6520                           fsr1l	equ	0xFE1
  6521                           bsr	equ	0xFE0
  6522                           indf2	equ	0xFDF
  6523                           postinc2	equ	0xFDE
  6524                           postdec2	equ	0xFDD
  6525                           fsr2h	equ	0xFDA
  6526                           fsr2l	equ	0xFD9
  6527                           status	equ	0xFD8
  6528                           
  6529 ;; *************** function _WriteTimer0 *****************
  6530 ;; Defined at:
  6531 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  timer0          2    0[BANK0 ] unsigned int 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  timer           2    2[BANK0 ] struct Timers
  6536 ;; Return value:  Size  Location     Type
  6537 ;;		None               void
  6538 ;; Registers used:
  6539 ;;		None
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6546 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6548 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6549 ;;Total ram usage:        4 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_timer0_int_handler
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text41
  6559  001C8C                     __ptext41:
  6560                           	opt stack 0
  6561  001C8C                     _WriteTimer0:
  6562                           	opt stack 18
  6563                           
  6564                           ;incstack = 0
  6565  001C8C  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6566  001C90  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6567  001C94  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6568  001C98  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6569  001C9C  0012               	return	
  6570  001C9E                     __end_of_WriteTimer0:
  6571                           	opt stack 0
  6572                           pclatu	equ	0xFFB
  6573                           pclath	equ	0xFFA
  6574                           tblptru	equ	0xFF8
  6575                           tblptrh	equ	0xFF7
  6576                           tblptrl	equ	0xFF6
  6577                           tablat	equ	0xFF5
  6578                           prodh	equ	0xFF4
  6579                           prodl	equ	0xFF3
  6580                           intcon	equ	0xFF2
  6581                           postinc0	equ	0xFEE
  6582                           fsr0h	equ	0xFEA
  6583                           fsr0l	equ	0xFE9
  6584                           wreg	equ	0xFE8
  6585                           indf1	equ	0xFE7
  6586                           fsr1h	equ	0xFE2
  6587                           fsr1l	equ	0xFE1
  6588                           bsr	equ	0xFE0
  6589                           indf2	equ	0xFDF
  6590                           postinc2	equ	0xFDE
  6591                           postdec2	equ	0xFDD
  6592                           fsr2h	equ	0xFDA
  6593                           fsr2l	equ	0xFD9
  6594                           status	equ	0xFD8
  6595                           
  6596 ;; *************** function _i2c_int_handler *****************
  6597 ;; Defined at:
  6598 ;;		line 103 in file "../src/my_i2c.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;		None
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  l               2    0        int 
  6603 ;;  error_buf       3   38[BANK0 ] unsigned char [3]
  6604 ;;  data_read       1   46[BANK0 ] unsigned char 
  6605 ;;  msg_ready       1   45[BANK0 ] unsigned char 
  6606 ;;  msg_to_send     1   44[BANK0 ] unsigned char 
  6607 ;;  i2c_data        1   43[BANK0 ] unsigned char 
  6608 ;;  overrun_erro    1   42[BANK0 ] unsigned char 
  6609 ;;  data_written    1   41[BANK0 ] unsigned char 
  6610 ;; Return value:  Size  Location     Type
  6611 ;;		None               void
  6612 ;; Registers used:
  6613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6620 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;Total ram usage:       10 bytes
  6624 ;; Hardware stack levels used:    1
  6625 ;; Hardware stack levels required when called:    4
  6626 ;; This function calls:
  6627 ;;		_ToMainHigh_sendmsg
  6628 ;;		_blip4
  6629 ;;		_handle_start
  6630 ;;		_retrieve_sensor_values
  6631 ;;		i2_blip
  6632 ;;		i2_blip1
  6633 ;;		i2_blip2
  6634 ;;		i2_blip3
  6635 ;; This function is called by:
  6636 ;;		_InterruptHandlerHigh
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text42
  6641  0000C4                     __ptext42:
  6642                           	opt stack 0
  6643  0000C4                     _i2c_int_handler:
  6644                           	opt stack 15
  6645                           
  6646                           ;my_i2c.c: 104: blip1();
  6647                           
  6648                           ;incstack = 0
  6649  0000C4  EC7F  F00E         	call	i2_blip1	;wreg free
  6650                           
  6651                           ;my_i2c.c: 106: static unsigned char sensor_bank_side[14];
  6652                           ;my_i2c.c: 107: static unsigned char sensor_bank_front[14];
  6653                           ;my_i2c.c: 108: static unsigned char sensor_bank_ventril[14];
  6654                           ;my_i2c.c: 110: unsigned char i2c_data;
  6655                           ;my_i2c.c: 111: unsigned char data_read = 0;
  6656  0000C8  0E00               	movlw	0
  6657  0000CA  0100               	movlb	0	; () banked
  6658  0000CC  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;my_i2c.c: 112: unsigned char data_written = 0;
  6662  0000CE  0E00               	movlw	0
  6663  0000D0  0100               	movlb	0	; () banked
  6664  0000D2  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;my_i2c.c: 113: unsigned char msg_ready = 0;
  6668  0000D4  0E00               	movlw	0
  6669  0000D6  0100               	movlb	0	; () banked
  6670  0000D8  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;my_i2c.c: 114: unsigned char msg_to_send = 0;
  6674  0000DA  0E00               	movlw	0
  6675  0000DC  0100               	movlb	0	; () banked
  6676  0000DE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;my_i2c.c: 115: unsigned char overrun_error = 0;
  6680  0000E0  0E00               	movlw	0
  6681  0000E2  0100               	movlb	0	; () banked
  6682  0000E4  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;my_i2c.c: 116: unsigned char error_buf[3];
  6686                           ;my_i2c.c: 119: if (SSPCON1bits.SSPOV == 1) {
  6687  0000E6  ACC6               	btfss	4038,6,c	;volatile
  6688  0000E8  D024               	goto	i2l2679
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;my_i2c.c: 120: SSPCON1bits.SSPOV = 0;
  6692  0000EA  9CC6               	bcf	4038,6,c	;volatile
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;my_i2c.c: 124: ic_ptr->status = 0x5;
  6696  0000EC  0100               	movlb	0	; () banked
  6697  0000EE  EE20 F021          	lfsr	2,33
  6698  0000F2  0100               	movlb	0	; () banked
  6699  0000F4  51D4               	movf	_ic_ptr& (0+255),w,b
  6700  0000F6  26D9               	addwf	fsr2l,f,c
  6701  0000F8  0100               	movlb	0	; () banked
  6702  0000FA  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6703  0000FC  22DA               	addwfc	fsr2h,f,c
  6704  0000FE  0E05               	movlw	5
  6705  000100  6EDF               	movwf	indf2,c
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;my_i2c.c: 125: overrun_error = 1;
  6709  000102  0E01               	movlw	1
  6710  000104  0100               	movlb	0	; () banked
  6711  000106  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;my_i2c.c: 126: ic_ptr->error_count++;
  6715  000108  0100               	movlb	0	; () banked
  6716  00010A  EE20 F023          	lfsr	2,35
  6717  00010E  0100               	movlb	0	; () banked
  6718  000110  51D4               	movf	_ic_ptr& (0+255),w,b
  6719  000112  26D9               	addwf	fsr2l,f,c
  6720  000114  0100               	movlb	0	; () banked
  6721  000116  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6722  000118  22DA               	addwfc	fsr2h,f,c
  6723  00011A  2ADF               	incf	indf2,f,c
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;my_i2c.c: 127: ic_ptr->error_code = 0x4;
  6727  00011C  0100               	movlb	0	; () banked
  6728  00011E  EE20 F022          	lfsr	2,34
  6729  000122  0100               	movlb	0	; () banked
  6730  000124  51D4               	movf	_ic_ptr& (0+255),w,b
  6731  000126  26D9               	addwf	fsr2l,f,c
  6732  000128  0100               	movlb	0	; () banked
  6733  00012A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6734  00012C  22DA               	addwfc	fsr2h,f,c
  6735  00012E  0E04               	movlw	4
  6736  000130  6EDF               	movwf	indf2,c
  6737  000132                     i2l2679:
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;my_i2c.c: 128: }
  6741                           ;my_i2c.c: 130: if (SSPSTATbits.BF == 1) {
  6742  000132  A0C7               	btfss	4039,0,c	;volatile
  6743  000134  D005               	goto	i2l2685
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;my_i2c.c: 131: i2c_data = SSPBUF;
  6747  000136  CFC9 F08B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;my_i2c.c: 132: data_read = 1;
  6751  00013A  0E01               	movlw	1
  6752  00013C  0100               	movlb	0	; () banked
  6753  00013E  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6754  000140                     i2l2685:
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;my_i2c.c: 133: }
  6758                           ;my_i2c.c: 135: if (!overrun_error) {
  6759  000140  0100               	movlb	0	; () banked
  6760  000142  678A               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6761  000144  D25E               	goto	i2l304
  6762  000146  D247               	goto	i2l2803
  6763  000148                     i2l306:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;my_i2c.c: 138: {
  6767                           ;my_i2c.c: 140: if (SSPSTATbits.S == 1) {
  6768  000148  A6C7               	btfss	4039,3,c	;volatile
  6769  00014A  D25B               	goto	i2l304
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;my_i2c.c: 141: handle_start(data_read);
  6773  00014C  0100               	movlb	0	; () banked
  6774  00014E  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6775  000150  EC34  F009         	call	_handle_start
  6776                           
  6777                           ;my_i2c.c: 143: if (ic_ptr->status == 0x8) {
  6778  000154  0100               	movlb	0	; () banked
  6779  000156  EE20 F021          	lfsr	2,33
  6780  00015A  0100               	movlb	0	; () banked
  6781  00015C  51D4               	movf	_ic_ptr& (0+255),w,b
  6782  00015E  26D9               	addwf	fsr2l,f,c
  6783  000160  0100               	movlb	0	; () banked
  6784  000162  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6785  000164  22DA               	addwfc	fsr2h,f,c
  6786  000166  0E08               	movlw	8
  6787  000168  62DF               	cpfseq	indf2,c
  6788  00016A  D24B               	goto	i2l304
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;my_i2c.c: 144: data_read = 0;
  6792  00016C  0E00               	movlw	0
  6793  00016E  0100               	movlb	0	; () banked
  6794  000170  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6795                           
  6796                           ;my_i2c.c: 145: msg_to_send = 1;
  6797  000172  0E01               	movlw	1
  6798  000174  0100               	movlb	0	; () banked
  6799  000176  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6800  000178  D244               	goto	i2l304
  6801  00017A                     i2l310:
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;my_i2c.c: 151: {
  6805                           ;my_i2c.c: 154: if (SSPSTATbits.P == 1) {
  6806  00017A  A8C7               	btfss	4039,4,c	;volatile
  6807  00017C  D02A               	goto	i2l2705
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;my_i2c.c: 157: ic_ptr->event_count++;
  6811  00017E  0100               	movlb	0	; () banked
  6812  000180  EE20 F020          	lfsr	2,32
  6813  000184  0100               	movlb	0	; () banked
  6814  000186  51D4               	movf	_ic_ptr& (0+255),w,b
  6815  000188  26D9               	addwf	fsr2l,f,c
  6816  00018A  0100               	movlb	0	; () banked
  6817  00018C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6818  00018E  22DA               	addwfc	fsr2h,f,c
  6819  000190  2ADF               	incf	indf2,f,c
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;my_i2c.c: 158: if (data_read) {
  6823  000192  0100               	movlb	0	; () banked
  6824  000194  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6825  000196  B4D8               	btfsc	status,2,c
  6826  000198  D213               	goto	L10
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6830  00019A  BAC7               	btfsc	4039,5,c	;volatile
  6831  00019C  D004               	goto	i2l2703
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;my_i2c.c: 160: msg_ready = 1;
  6835  00019E  0E01               	movlw	1
  6836  0001A0  0100               	movlb	0	; () banked
  6837  0001A2  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6838                           
  6839                           ;my_i2c.c: 161: } else {
  6840  0001A4  D20D               	goto	L10
  6841  0001A6                     i2l2703:
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;my_i2c.c: 162: ic_ptr->error_count++;
  6845  0001A6  0100               	movlb	0	; () banked
  6846  0001A8  EE20 F023          	lfsr	2,35
  6847  0001AC  0100               	movlb	0	; () banked
  6848  0001AE  51D4               	movf	_ic_ptr& (0+255),w,b
  6849  0001B0  26D9               	addwf	fsr2l,f,c
  6850  0001B2  0100               	movlb	0	; () banked
  6851  0001B4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6852  0001B6  22DA               	addwfc	fsr2h,f,c
  6853  0001B8  2ADF               	incf	indf2,f,c
  6854                           
  6855                           ;my_i2c.c: 163: ic_ptr->error_code = 0x6;
  6856  0001BA  0100               	movlb	0	; () banked
  6857  0001BC  EE20 F022          	lfsr	2,34
  6858  0001C0  0100               	movlb	0	; () banked
  6859  0001C2  51D4               	movf	_ic_ptr& (0+255),w,b
  6860  0001C4  26D9               	addwf	fsr2l,f,c
  6861  0001C6  0100               	movlb	0	; () banked
  6862  0001C8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6863  0001CA  22DA               	addwfc	fsr2h,f,c
  6864  0001CC  0E06               	movlw	6
  6865  0001CE  6EDF               	movwf	indf2,c
  6866                           
  6867                           ; BSR set to: 0
  6868  0001D0  D1F7               	goto	L10
  6869  0001D2                     i2l2705:
  6870                           
  6871                           ; BSR set to: 0
  6872  0001D2  0100               	movlb	0	; () banked
  6873  0001D4  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6874  0001D6  B4D8               	btfsc	status,2,c
  6875  0001D8  D214               	goto	i2l304
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;my_i2c.c: 168: ic_ptr->event_count++;
  6879  0001DA  0100               	movlb	0	; () banked
  6880  0001DC  EE20 F020          	lfsr	2,32
  6881  0001E0  0100               	movlb	0	; () banked
  6882  0001E2  51D4               	movf	_ic_ptr& (0+255),w,b
  6883  0001E4  26D9               	addwf	fsr2l,f,c
  6884  0001E6  0100               	movlb	0	; () banked
  6885  0001E8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6886  0001EA  22DA               	addwfc	fsr2h,f,c
  6887  0001EC  2ADF               	incf	indf2,f,c
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;my_i2c.c: 169: if (SSPSTATbits.D_A == 0) {
  6891  0001EE  BAC7               	btfsc	4039,5,c	;volatile
  6892  0001F0  D02C               	goto	i2l2725
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;my_i2c.c: 170: if (SSPSTATbits.R_W == 0) {
  6896  0001F2  B4C7               	btfsc	4039,2,c	;volatile
  6897  0001F4  D00B               	goto	i2l2715
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;my_i2c.c: 171: ic_ptr->status = 0x7;
  6901  0001F6  0100               	movlb	0	; () banked
  6902  0001F8  EE20 F021          	lfsr	2,33
  6903  0001FC  0100               	movlb	0	; () banked
  6904  0001FE  51D4               	movf	_ic_ptr& (0+255),w,b
  6905  000200  26D9               	addwf	fsr2l,f,c
  6906  000202  0100               	movlb	0	; () banked
  6907  000204  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6908  000206  22DA               	addwfc	fsr2h,f,c
  6909  000208  0E07               	movlw	7
  6910  00020A  D082               	goto	L8
  6911  00020C                     i2l2715:
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;my_i2c.c: 173: blip3();
  6915  00020C  EC77  F00E         	call	i2_blip3	;wreg free
  6916                           
  6917                           ;my_i2c.c: 174: ic_ptr->status = 0x8;
  6918  000210  0100               	movlb	0	; () banked
  6919  000212  EE20 F021          	lfsr	2,33
  6920  000216  0100               	movlb	0	; () banked
  6921  000218  51D4               	movf	_ic_ptr& (0+255),w,b
  6922  00021A  26D9               	addwf	fsr2l,f,c
  6923  00021C  0100               	movlb	0	; () banked
  6924  00021E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6925  000220  22DA               	addwfc	fsr2h,f,c
  6926  000222  0E08               	movlw	8
  6927  000224  6EDF               	movwf	indf2,c
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;my_i2c.c: 175: msg_to_send = 1;
  6931  000226  0E01               	movlw	1
  6932  000228  0100               	movlb	0	; () banked
  6933  00022A  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;my_i2c.c: 177: data_read = 0;
  6937  00022C  0E00               	movlw	0
  6938  00022E  0100               	movlb	0	; () banked
  6939  000230  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;my_i2c.c: 178: ic_ptr->outbufind = 0;
  6943  000232  0100               	movlb	0	; () banked
  6944  000234  EE20 F01E          	lfsr	2,30
  6945  000238  0100               	movlb	0	; () banked
  6946  00023A  51D4               	movf	_ic_ptr& (0+255),w,b
  6947  00023C  26D9               	addwf	fsr2l,f,c
  6948  00023E  0100               	movlb	0	; () banked
  6949  000240  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6950  000242  22DA               	addwfc	fsr2h,f,c
  6951  000244  0E00               	movlw	0
  6952  000246  6EDF               	movwf	indf2,c
  6953                           
  6954                           ;my_i2c.c: 179: goto l;
  6955  000248  D020               	goto	i2l2727
  6956  00024A                     i2l2725:
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;my_i2c.c: 182: ic_ptr->error_count++;
  6960  00024A  0100               	movlb	0	; () banked
  6961  00024C  EE20 F023          	lfsr	2,35
  6962  000250  0100               	movlb	0	; () banked
  6963  000252  51D4               	movf	_ic_ptr& (0+255),w,b
  6964  000254  26D9               	addwf	fsr2l,f,c
  6965  000256  0100               	movlb	0	; () banked
  6966  000258  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6967  00025A  22DA               	addwfc	fsr2h,f,c
  6968  00025C  2ADF               	incf	indf2,f,c
  6969                           
  6970                           ;my_i2c.c: 183: ic_ptr->status = 0x5;
  6971  00025E  0100               	movlb	0	; () banked
  6972  000260  EE20 F021          	lfsr	2,33
  6973  000264  0100               	movlb	0	; () banked
  6974  000266  51D4               	movf	_ic_ptr& (0+255),w,b
  6975  000268  26D9               	addwf	fsr2l,f,c
  6976  00026A  0100               	movlb	0	; () banked
  6977  00026C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6978  00026E  22DA               	addwfc	fsr2h,f,c
  6979  000270  0E05               	movlw	5
  6980  000272  6EDF               	movwf	indf2,c
  6981                           
  6982                           ;my_i2c.c: 184: ic_ptr->error_code = 0x6;
  6983  000274  0100               	movlb	0	; () banked
  6984  000276  EE20 F022          	lfsr	2,34
  6985  00027A  0100               	movlb	0	; () banked
  6986  00027C  51D4               	movf	_ic_ptr& (0+255),w,b
  6987  00027E  26D9               	addwf	fsr2l,f,c
  6988  000280  0100               	movlb	0	; () banked
  6989  000282  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6990  000284  22DA               	addwfc	fsr2h,f,c
  6991  000286  0E06               	movlw	6
  6992  000288  D043               	goto	L8
  6993  00028A                     i2l2727:
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;my_i2c.c: 191: {
  6997                           ;my_i2c.c: 192: blip4();
  6998  00028A  EC87  F00E         	call	_blip4	;wreg free
  6999                           
  7000                           ;my_i2c.c: 194: if (ic_ptr->outbufind < 14) {
  7001  00028E  0100               	movlb	0	; () banked
  7002  000290  EE20 F01E          	lfsr	2,30
  7003  000294  0100               	movlb	0	; () banked
  7004  000296  51D4               	movf	_ic_ptr& (0+255),w,b
  7005  000298  26D9               	addwf	fsr2l,f,c
  7006  00029A  0100               	movlb	0	; () banked
  7007  00029C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7008  00029E  22DA               	addwfc	fsr2h,f,c
  7009  0002A0  50DF               	movf	indf2,w,c
  7010  0002A2  0100               	movlb	0	; () banked
  7011  0002A4  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7012  0002A6  0E0E               	movlw	14
  7013  0002A8  0100               	movlb	0	; () banked
  7014  0002AA  5D85               	subwf	??_i2c_int_handler& (0+255),w,b
  7015  0002AC  B0D8               	btfsc	status,0,c
  7016  0002AE  D02D               	goto	i2l2739
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 195: blip4();
  7020  0002B0  EC87  F00E         	call	_blip4	;wreg free
  7021                           
  7022                           ;my_i2c.c: 196: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7023  0002B4  0100               	movlb	0	; () banked
  7024  0002B6  EE20 F01E          	lfsr	2,30
  7025  0002BA  0100               	movlb	0	; () banked
  7026  0002BC  51D4               	movf	_ic_ptr& (0+255),w,b
  7027  0002BE  26D9               	addwf	fsr2l,f,c
  7028  0002C0  0100               	movlb	0	; () banked
  7029  0002C2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7030  0002C4  22DA               	addwfc	fsr2h,f,c
  7031  0002C6  50DF               	movf	indf2,w,c
  7032  0002C8  0100               	movlb	0	; () banked
  7033  0002CA  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7034  0002CC  0100               	movlb	0	; () banked
  7035  0002CE  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7036  0002D0  0D01               	mullw	1
  7037  0002D2  0E10               	movlw	16
  7038  0002D4  26F3               	addwf	prodl,f,c
  7039  0002D6  0E00               	movlw	0
  7040  0002D8  22F4               	addwfc	prodh,f,c
  7041  0002DA  50F3               	movf	prodl,w,c
  7042  0002DC  0100               	movlb	0	; () banked
  7043  0002DE  25D4               	addwf	_ic_ptr& (0+255),w,b
  7044  0002E0  6ED9               	movwf	fsr2l,c
  7045  0002E2  50F4               	movf	prodh,w,c
  7046  0002E4  0100               	movlb	0	; () banked
  7047  0002E6  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7048  0002E8  6EDA               	movwf	fsr2h,c
  7049  0002EA  50DF               	movf	indf2,w,c
  7050  0002EC  6EC9               	movwf	4041,c	;volatile
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;my_i2c.c: 197: ic_ptr->outbufind++;
  7054  0002EE  0100               	movlb	0	; () banked
  7055  0002F0  EE20 F01E          	lfsr	2,30
  7056  0002F4  0100               	movlb	0	; () banked
  7057  0002F6  51D4               	movf	_ic_ptr& (0+255),w,b
  7058  0002F8  26D9               	addwf	fsr2l,f,c
  7059  0002FA  0100               	movlb	0	; () banked
  7060  0002FC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7061  0002FE  22DA               	addwfc	fsr2h,f,c
  7062  000300  2ADF               	incf	indf2,f,c
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;my_i2c.c: 198: data_written = 1;
  7066  000302  0E01               	movlw	1
  7067  000304  0100               	movlb	0	; () banked
  7068  000306  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  7069                           
  7070                           ;my_i2c.c: 199: } else {
  7071  000308  D17C               	goto	i2l304
  7072  00030A                     i2l2739:
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;my_i2c.c: 200: blip3();
  7076  00030A  EC77  F00E         	call	i2_blip3	;wreg free
  7077  00030E  D158               	goto	L10
  7078  000310                     L8:
  7079  000310  6EDF               	movwf	indf2,c
  7080  000312  D177               	goto	i2l304
  7081  000314                     i2l2743:
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;my_i2c.c: 207: {
  7085                           ;my_i2c.c: 208: blip2();
  7086  000314  EC7B  F00E         	call	i2_blip2	;wreg free
  7087                           
  7088                           ;my_i2c.c: 210: if (SSPSTATbits.P == 1) {
  7089  000318  A8C7               	btfss	4039,4,c	;volatile
  7090  00031A  D05A               	goto	i2l2765
  7091                           
  7092                           ;my_i2c.c: 213: ic_ptr->event_count++;
  7093  00031C  0100               	movlb	0	; () banked
  7094  00031E  EE20 F020          	lfsr	2,32
  7095  000322  0100               	movlb	0	; () banked
  7096  000324  51D4               	movf	_ic_ptr& (0+255),w,b
  7097  000326  26D9               	addwf	fsr2l,f,c
  7098  000328  0100               	movlb	0	; () banked
  7099  00032A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7100  00032C  22DA               	addwfc	fsr2h,f,c
  7101  00032E  2ADF               	incf	indf2,f,c
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;my_i2c.c: 214: if (data_read) {
  7105  000330  0100               	movlb	0	; () banked
  7106  000332  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7107  000334  B4D8               	btfsc	status,2,c
  7108  000336  D048               	goto	i2l2761
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;my_i2c.c: 215: if (SSPSTATbits.D_A == 1) {
  7112  000338  AAC7               	btfss	4039,5,c	;volatile
  7113  00033A  D025               	goto	i2l2759
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;my_i2c.c: 216: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7117  00033C  0100               	movlb	0	; () banked
  7118  00033E  EE20 F00E          	lfsr	2,14
  7119  000342  0100               	movlb	0	; () banked
  7120  000344  51D4               	movf	_ic_ptr& (0+255),w,b
  7121  000346  26D9               	addwf	fsr2l,f,c
  7122  000348  0100               	movlb	0	; () banked
  7123  00034A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7124  00034C  22DA               	addwfc	fsr2h,f,c
  7125  00034E  50DF               	movf	indf2,w,c
  7126  000350  0100               	movlb	0	; () banked
  7127  000352  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7128  000354  0100               	movlb	0	; () banked
  7129  000356  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7130  000358  0D01               	mullw	1
  7131  00035A  50F3               	movf	prodl,w,c
  7132  00035C  0100               	movlb	0	; () banked
  7133  00035E  25D4               	addwf	_ic_ptr& (0+255),w,b
  7134  000360  6ED9               	movwf	fsr2l,c
  7135  000362  50F4               	movf	prodh,w,c
  7136  000364  0100               	movlb	0	; () banked
  7137  000366  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7138  000368  6EDA               	movwf	fsr2h,c
  7139  00036A  0100               	movlb	0	; () banked
  7140  00036C  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;my_i2c.c: 217: ic_ptr->buflen++;
  7144  000370  0100               	movlb	0	; () banked
  7145  000372  EE20 F00E          	lfsr	2,14
  7146  000376  0100               	movlb	0	; () banked
  7147  000378  51D4               	movf	_ic_ptr& (0+255),w,b
  7148  00037A  26D9               	addwf	fsr2l,f,c
  7149  00037C  0100               	movlb	0	; () banked
  7150  00037E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7151  000380  22DA               	addwfc	fsr2h,f,c
  7152  000382  2ADF               	incf	indf2,f,c
  7153  000384  D021               	goto	i2l2761
  7154  000386                     i2l2759:
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;my_i2c.c: 220: ic_ptr->error_count++;
  7158  000386  0100               	movlb	0	; () banked
  7159  000388  EE20 F023          	lfsr	2,35
  7160  00038C  0100               	movlb	0	; () banked
  7161  00038E  51D4               	movf	_ic_ptr& (0+255),w,b
  7162  000390  26D9               	addwf	fsr2l,f,c
  7163  000392  0100               	movlb	0	; () banked
  7164  000394  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7165  000396  22DA               	addwfc	fsr2h,f,c
  7166  000398  2ADF               	incf	indf2,f,c
  7167                           
  7168                           ;my_i2c.c: 221: ic_ptr->error_code = 0x6;
  7169  00039A  0100               	movlb	0	; () banked
  7170  00039C  EE20 F022          	lfsr	2,34
  7171  0003A0  0100               	movlb	0	; () banked
  7172  0003A2  51D4               	movf	_ic_ptr& (0+255),w,b
  7173  0003A4  26D9               	addwf	fsr2l,f,c
  7174  0003A6  0100               	movlb	0	; () banked
  7175  0003A8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7176  0003AA  22DA               	addwfc	fsr2h,f,c
  7177  0003AC  0E06               	movlw	6
  7178  0003AE  6EDF               	movwf	indf2,c
  7179                           
  7180                           ;my_i2c.c: 222: ic_ptr->status = 0x5;
  7181  0003B0  0100               	movlb	0	; () banked
  7182  0003B2  EE20 F021          	lfsr	2,33
  7183  0003B6  0100               	movlb	0	; () banked
  7184  0003B8  51D4               	movf	_ic_ptr& (0+255),w,b
  7185  0003BA  26D9               	addwf	fsr2l,f,c
  7186  0003BC  0100               	movlb	0	; () banked
  7187  0003BE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7188  0003C0  22DA               	addwfc	fsr2h,f,c
  7189  0003C2  0E05               	movlw	5
  7190  0003C4  6EDF               	movwf	indf2,c
  7191  0003C6  D0FC               	goto	L10
  7192  0003C8                     i2l2761:
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;my_i2c.c: 225: msg_ready = 1;
  7196  0003C8  0E01               	movlw	1
  7197  0003CA  0100               	movlb	0	; () banked
  7198  0003CC  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7199                           
  7200                           ; BSR set to: 0
  7201  0003CE  D0F8               	goto	L10
  7202  0003D0                     i2l2765:
  7203                           
  7204                           ;my_i2c.c: 229: else if (data_read)
  7205  0003D0  0100               	movlb	0	; () banked
  7206  0003D2  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7207  0003D4  B4D8               	btfsc	status,2,c
  7208  0003D6  D115               	goto	i2l304
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;my_i2c.c: 230: {
  7212                           ;my_i2c.c: 232: ic_ptr->event_count++;
  7213  0003D8  0100               	movlb	0	; () banked
  7214  0003DA  EE20 F020          	lfsr	2,32
  7215  0003DE  0100               	movlb	0	; () banked
  7216  0003E0  51D4               	movf	_ic_ptr& (0+255),w,b
  7217  0003E2  26D9               	addwf	fsr2l,f,c
  7218  0003E4  0100               	movlb	0	; () banked
  7219  0003E6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7220  0003E8  22DA               	addwfc	fsr2h,f,c
  7221  0003EA  2ADF               	incf	indf2,f,c
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;my_i2c.c: 233: if (SSP1STATbits.D_A == 1) {
  7225  0003EC  AAC7               	btfss	4039,5,c	;volatile
  7226  0003EE  D025               	goto	i2l333
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;my_i2c.c: 234: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7230  0003F0  0100               	movlb	0	; () banked
  7231  0003F2  EE20 F00E          	lfsr	2,14
  7232  0003F6  0100               	movlb	0	; () banked
  7233  0003F8  51D4               	movf	_ic_ptr& (0+255),w,b
  7234  0003FA  26D9               	addwf	fsr2l,f,c
  7235  0003FC  0100               	movlb	0	; () banked
  7236  0003FE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7237  000400  22DA               	addwfc	fsr2h,f,c
  7238  000402  50DF               	movf	indf2,w,c
  7239  000404  0100               	movlb	0	; () banked
  7240  000406  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7241  000408  0100               	movlb	0	; () banked
  7242  00040A  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7243  00040C  0D01               	mullw	1
  7244  00040E  50F3               	movf	prodl,w,c
  7245  000410  0100               	movlb	0	; () banked
  7246  000412  25D4               	addwf	_ic_ptr& (0+255),w,b
  7247  000414  6ED9               	movwf	fsr2l,c
  7248  000416  50F4               	movf	prodh,w,c
  7249  000418  0100               	movlb	0	; () banked
  7250  00041A  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7251  00041C  6EDA               	movwf	fsr2h,c
  7252  00041E  0100               	movlb	0	; () banked
  7253  000420  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;my_i2c.c: 235: ic_ptr->buflen++;
  7257  000424  0100               	movlb	0	; () banked
  7258  000426  EE20 F00E          	lfsr	2,14
  7259  00042A  0100               	movlb	0	; () banked
  7260  00042C  51D4               	movf	_ic_ptr& (0+255),w,b
  7261  00042E  26D9               	addwf	fsr2l,f,c
  7262  000430  0100               	movlb	0	; () banked
  7263  000432  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7264  000434  22DA               	addwfc	fsr2h,f,c
  7265  000436  2ADF               	incf	indf2,f,c
  7266                           
  7267                           ;my_i2c.c: 236: }
  7268  000438  D0E4               	goto	i2l304
  7269  00043A                     i2l333:
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;my_i2c.c: 237: else
  7273                           ;my_i2c.c: 238: {
  7274                           ;my_i2c.c: 239: if (SSPSTATbits.R_W == 1)
  7275  00043A  A4C7               	btfss	4039,2,c	;volatile
  7276  00043C  D6B4               	goto	i2l2703
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;my_i2c.c: 240: {
  7280                           ;my_i2c.c: 241: blip();
  7281  00043E  EC83  F00E         	call	i2_blip	;wreg free
  7282                           
  7283                           ;my_i2c.c: 242: ic_ptr->status = 0x8;
  7284  000442  0100               	movlb	0	; () banked
  7285  000444  EE20 F021          	lfsr	2,33
  7286  000448  0100               	movlb	0	; () banked
  7287  00044A  51D4               	movf	_ic_ptr& (0+255),w,b
  7288  00044C  26D9               	addwf	fsr2l,f,c
  7289  00044E  0100               	movlb	0	; () banked
  7290  000450  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7291  000452  22DA               	addwfc	fsr2h,f,c
  7292  000454  0E08               	movlw	8
  7293  000456  6EDF               	movwf	indf2,c
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;my_i2c.c: 249: {
  7297                           ;my_i2c.c: 251: ic_ptr->outbuffer[0] = ic_ptr->buffer[0];
  7298                           
  7299                           ; BSR set to: 0
  7300                           
  7301                           ;my_i2c.c: 245: {
  7302                           ;my_i2c.c: 246: int l;
  7303                           ;my_i2c.c: 248: default:
  7304                           
  7305                           ;my_i2c.c: 244: switch( ic_ptr->buffer[0] )
  7306  000458  C0D4  FFD9         	movff	_ic_ptr,fsr2l
  7307  00045C  C0D5  FFDA         	movff	_ic_ptr+1,fsr2h
  7308  000460  0100               	movlb	0	; () banked
  7309  000462  EE10 F010          	lfsr	1,16
  7310  000466  0100               	movlb	0	; () banked
  7311  000468  51D4               	movf	_ic_ptr& (0+255),w,b
  7312  00046A  26E1               	addwf	fsr1l,f,c
  7313  00046C  0100               	movlb	0	; () banked
  7314  00046E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7315  000470  22E2               	addwfc	fsr1h,f,c
  7316  000472  CFDF FFE7          	movff	indf2,indf1
  7317                           
  7318                           ;my_i2c.c: 252: ic_ptr->outbuffer[1] = ic_ptr->buffer[1];
  7319  000476  0100               	movlb	0	; () banked
  7320  000478  EE20 F001          	lfsr	2,1
  7321  00047C  0100               	movlb	0	; () banked
  7322  00047E  51D4               	movf	_ic_ptr& (0+255),w,b
  7323  000480  26D9               	addwf	fsr2l,f,c
  7324  000482  0100               	movlb	0	; () banked
  7325  000484  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7326  000486  22DA               	addwfc	fsr2h,f,c
  7327  000488  0100               	movlb	0	; () banked
  7328  00048A  EE10 F011          	lfsr	1,17
  7329  00048E  0100               	movlb	0	; () banked
  7330  000490  51D4               	movf	_ic_ptr& (0+255),w,b
  7331  000492  26E1               	addwf	fsr1l,f,c
  7332  000494  0100               	movlb	0	; () banked
  7333  000496  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7334  000498  22E2               	addwfc	fsr1h,f,c
  7335  00049A  CFDF FFE7          	movff	indf2,indf1
  7336                           
  7337                           ;my_i2c.c: 253: ic_ptr->outbuffer[2] = ic_ptr->buffer[2];
  7338  00049E  0100               	movlb	0	; () banked
  7339  0004A0  EE20 F002          	lfsr	2,2
  7340  0004A4  0100               	movlb	0	; () banked
  7341  0004A6  51D4               	movf	_ic_ptr& (0+255),w,b
  7342  0004A8  26D9               	addwf	fsr2l,f,c
  7343  0004AA  0100               	movlb	0	; () banked
  7344  0004AC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7345  0004AE  22DA               	addwfc	fsr2h,f,c
  7346  0004B0  0100               	movlb	0	; () banked
  7347  0004B2  EE10 F012          	lfsr	1,18
  7348  0004B6  0100               	movlb	0	; () banked
  7349  0004B8  51D4               	movf	_ic_ptr& (0+255),w,b
  7350  0004BA  26E1               	addwf	fsr1l,f,c
  7351  0004BC  0100               	movlb	0	; () banked
  7352  0004BE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7353  0004C0  22E2               	addwfc	fsr1h,f,c
  7354  0004C2  CFDF FFE7          	movff	indf2,indf1
  7355                           
  7356                           ;my_i2c.c: 254: ic_ptr->outbuffer[3] = ic_ptr->buffer[3];
  7357  0004C6  0100               	movlb	0	; () banked
  7358  0004C8  EE20 F003          	lfsr	2,3
  7359  0004CC  0100               	movlb	0	; () banked
  7360  0004CE  51D4               	movf	_ic_ptr& (0+255),w,b
  7361  0004D0  26D9               	addwf	fsr2l,f,c
  7362  0004D2  0100               	movlb	0	; () banked
  7363  0004D4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7364  0004D6  22DA               	addwfc	fsr2h,f,c
  7365  0004D8  0100               	movlb	0	; () banked
  7366  0004DA  EE10 F013          	lfsr	1,19
  7367  0004DE  0100               	movlb	0	; () banked
  7368  0004E0  51D4               	movf	_ic_ptr& (0+255),w,b
  7369  0004E2  26E1               	addwf	fsr1l,f,c
  7370  0004E4  0100               	movlb	0	; () banked
  7371  0004E6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7372  0004E8  22E2               	addwfc	fsr1h,f,c
  7373  0004EA  CFDF FFE7          	movff	indf2,indf1
  7374                           
  7375                           ;my_i2c.c: 255: ic_ptr->outbuffer[4] = ic_ptr->buffer[4];
  7376  0004EE  0100               	movlb	0	; () banked
  7377  0004F0  EE20 F004          	lfsr	2,4
  7378  0004F4  0100               	movlb	0	; () banked
  7379  0004F6  51D4               	movf	_ic_ptr& (0+255),w,b
  7380  0004F8  26D9               	addwf	fsr2l,f,c
  7381  0004FA  0100               	movlb	0	; () banked
  7382  0004FC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7383  0004FE  22DA               	addwfc	fsr2h,f,c
  7384  000500  0100               	movlb	0	; () banked
  7385  000502  EE10 F014          	lfsr	1,20
  7386  000506  0100               	movlb	0	; () banked
  7387  000508  51D4               	movf	_ic_ptr& (0+255),w,b
  7388  00050A  26E1               	addwf	fsr1l,f,c
  7389  00050C  0100               	movlb	0	; () banked
  7390  00050E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7391  000510  22E2               	addwfc	fsr1h,f,c
  7392  000512  CFDF FFE7          	movff	indf2,indf1
  7393                           
  7394                           ;my_i2c.c: 256: ic_ptr->outbuffer[5] = ic_ptr->buffer[5];
  7395  000516  0100               	movlb	0	; () banked
  7396  000518  EE20 F005          	lfsr	2,5
  7397  00051C  0100               	movlb	0	; () banked
  7398  00051E  51D4               	movf	_ic_ptr& (0+255),w,b
  7399  000520  26D9               	addwf	fsr2l,f,c
  7400  000522  0100               	movlb	0	; () banked
  7401  000524  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7402  000526  22DA               	addwfc	fsr2h,f,c
  7403  000528  0100               	movlb	0	; () banked
  7404  00052A  EE10 F015          	lfsr	1,21
  7405  00052E  0100               	movlb	0	; () banked
  7406  000530  51D4               	movf	_ic_ptr& (0+255),w,b
  7407  000532  26E1               	addwf	fsr1l,f,c
  7408  000534  0100               	movlb	0	; () banked
  7409  000536  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7410  000538  22E2               	addwfc	fsr1h,f,c
  7411  00053A  CFDF FFE7          	movff	indf2,indf1
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;my_i2c.c: 261: ic_ptr->outbuflen = 6;
  7415                           
  7416                           ; BSR set to: 0
  7417                           
  7418                           ; BSR set to: 0
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;my_i2c.c: 258: }
  7422                           ;my_i2c.c: 259: }
  7423                           
  7424                           ;my_i2c.c: 257: break;
  7425  00053E  0100               	movlb	0	; () banked
  7426  000540  EE20 F01F          	lfsr	2,31
  7427  000544  0100               	movlb	0	; () banked
  7428  000546  51D4               	movf	_ic_ptr& (0+255),w,b
  7429  000548  26D9               	addwf	fsr2l,f,c
  7430  00054A  0100               	movlb	0	; () banked
  7431  00054C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7432  00054E  22DA               	addwfc	fsr2h,f,c
  7433  000550  0E06               	movlw	6
  7434  000552  6EDF               	movwf	indf2,c
  7435                           
  7436                           ;my_i2c.c: 262: ic_ptr->outbufind = 0;
  7437  000554  0100               	movlb	0	; () banked
  7438  000556  EE20 F01E          	lfsr	2,30
  7439  00055A  0100               	movlb	0	; () banked
  7440  00055C  51D4               	movf	_ic_ptr& (0+255),w,b
  7441  00055E  26D9               	addwf	fsr2l,f,c
  7442  000560  0100               	movlb	0	; () banked
  7443  000562  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7444  000564  22DA               	addwfc	fsr2h,f,c
  7445  000566  0E00               	movlw	0
  7446  000568  6EDF               	movwf	indf2,c
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;my_i2c.c: 263: msg_ready = 1;
  7450  00056A  0E01               	movlw	1
  7451  00056C  0100               	movlb	0	; () banked
  7452  00056E  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;my_i2c.c: 264: msg_to_send = 1;
  7456  000570  0E01               	movlw	1
  7457  000572  0100               	movlb	0	; () banked
  7458  000574  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;my_i2c.c: 266: data_read = 0;
  7462  000576  0E00               	movlw	0
  7463  000578  0100               	movlb	0	; () banked
  7464  00057A  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;my_i2c.c: 267: ic_ptr->outbufind = 0;
  7468  00057C  0100               	movlb	0	; () banked
  7469  00057E  EE20 F01E          	lfsr	2,30
  7470  000582  0100               	movlb	0	; () banked
  7471  000584  51D4               	movf	_ic_ptr& (0+255),w,b
  7472  000586  26D9               	addwf	fsr2l,f,c
  7473  000588  0100               	movlb	0	; () banked
  7474  00058A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7475  00058C  22DA               	addwfc	fsr2h,f,c
  7476  00058E  0E00               	movlw	0
  7477  000590  6EDF               	movwf	indf2,c
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;my_i2c.c: 268: SSPBUF = ic_ptr->outbuffer[0];
  7481  000592  0100               	movlb	0	; () banked
  7482  000594  EE20 F010          	lfsr	2,16
  7483  000598  0100               	movlb	0	; () banked
  7484  00059A  51D4               	movf	_ic_ptr& (0+255),w,b
  7485  00059C  26D9               	addwf	fsr2l,f,c
  7486  00059E  0100               	movlb	0	; () banked
  7487  0005A0  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7488  0005A2  22DA               	addwfc	fsr2h,f,c
  7489  0005A4  50DF               	movf	indf2,w,c
  7490  0005A6  6EC9               	movwf	4041,c	;volatile
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;my_i2c.c: 269: ic_ptr->outbufind++;
  7494  0005A8  0100               	movlb	0	; () banked
  7495  0005AA  EE20 F01E          	lfsr	2,30
  7496  0005AE  0100               	movlb	0	; () banked
  7497  0005B0  51D4               	movf	_ic_ptr& (0+255),w,b
  7498  0005B2  26D9               	addwf	fsr2l,f,c
  7499  0005B4  0100               	movlb	0	; () banked
  7500  0005B6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7501  0005B8  22DA               	addwfc	fsr2h,f,c
  7502  0005BA  2ADF               	incf	indf2,f,c
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;my_i2c.c: 270: SSPCON1bits.CKP = 1;
  7506  0005BC  88C6               	bsf	4038,4,c	;volatile
  7507                           
  7508                           ;my_i2c.c: 271: }
  7509  0005BE  D021               	goto	i2l304
  7510  0005C0                     L10:
  7511                           
  7512                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  7513  0005C0  0100               	movlb	0	; () banked
  7514  0005C2  EE20 F021          	lfsr	2,33
  7515  0005C6  0100               	movlb	0	; () banked
  7516  0005C8  51D4               	movf	_ic_ptr& (0+255),w,b
  7517  0005CA  26D9               	addwf	fsr2l,f,c
  7518  0005CC  0100               	movlb	0	; () banked
  7519  0005CE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7520  0005D0  22DA               	addwfc	fsr2h,f,c
  7521  0005D2  0E05               	movlw	5
  7522  0005D4  D69D               	goto	L8
  7523  0005D6                     i2l2803:
  7524                           
  7525                           ; BSR set to: 0
  7526  0005D6  0100               	movlb	0	; () banked
  7527  0005D8  EE20 F021          	lfsr	2,33
  7528  0005DC  0100               	movlb	0	; () banked
  7529  0005DE  51D4               	movf	_ic_ptr& (0+255),w,b
  7530  0005E0  26D9               	addwf	fsr2l,f,c
  7531  0005E2  0100               	movlb	0	; () banked
  7532  0005E4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7533  0005E6  22DA               	addwfc	fsr2h,f,c
  7534  0005E8  50DF               	movf	indf2,w,c
  7535                           
  7536                           ; Switch size 1, requested type "space"
  7537                           ; Number of cases is 4, Range of values is 5 to 8
  7538                           ; switch strategies available:
  7539                           ; Name         Instructions Cycles
  7540                           ; simple_byte           13     7 (average)
  7541                           ;	Chosen strategy is simple_byte
  7542  0005EA  0A05               	xorlw	5	; case 5
  7543  0005EC  B4D8               	btfsc	status,2,c
  7544  0005EE  D5AC               	goto	i2l306
  7545  0005F0  0A03               	xorlw	3	; case 6
  7546  0005F2  B4D8               	btfsc	status,2,c
  7547  0005F4  D5C2               	goto	i2l310
  7548  0005F6  0A01               	xorlw	1	; case 7
  7549  0005F8  B4D8               	btfsc	status,2,c
  7550  0005FA  D68C               	goto	i2l2743
  7551  0005FC  0A0F               	xorlw	15	; case 8
  7552  0005FE  B4D8               	btfsc	status,2,c
  7553  000600  D644               	goto	i2l2727
  7554  000602                     i2l304:
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;my_i2c.c: 283: }
  7558                           ;my_i2c.c: 286: if (data_read || data_written) {
  7559  000602  0100               	movlb	0	; () banked
  7560  000604  678E               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7561  000606  D004               	goto	i2l342
  7562                           
  7563                           ; BSR set to: 0
  7564  000608  0100               	movlb	0	; () banked
  7565  00060A  5189               	movf	i2c_int_handler@data_written& (0+255),w,b
  7566  00060C  B4D8               	btfsc	status,2,c
  7567  00060E  D002               	goto	i2l2809
  7568  000610                     i2l342:
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;my_i2c.c: 288: if (SSPCON1bits.CKP == 0) {
  7572  000610  A8C6               	btfss	4038,4,c	;volatile
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;my_i2c.c: 289: SSPCON1bits.CKP = 1;
  7576  000612  88C6               	bsf	4038,4,c	;volatile
  7577  000614                     i2l2809:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;my_i2c.c: 290: }
  7581                           ;my_i2c.c: 291: }
  7582                           ;my_i2c.c: 296: if ((ic_ptr->buflen > 14 - 2) && (!msg_ready)) {
  7583  000614  0100               	movlb	0	; () banked
  7584  000616  EE20 F00E          	lfsr	2,14
  7585  00061A  0100               	movlb	0	; () banked
  7586  00061C  51D4               	movf	_ic_ptr& (0+255),w,b
  7587  00061E  26D9               	addwf	fsr2l,f,c
  7588  000620  0100               	movlb	0	; () banked
  7589  000622  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7590  000624  22DA               	addwfc	fsr2h,f,c
  7591  000626  0E0C               	movlw	12
  7592  000628  64DF               	cpfsgt	indf2,c
  7593  00062A  D023               	goto	i2l2815
  7594                           
  7595                           ; BSR set to: 0
  7596  00062C  0100               	movlb	0	; () banked
  7597  00062E  678D               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7598  000630  D020               	goto	i2l2815
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;my_i2c.c: 297: ic_ptr->status = 0x5;
  7602  000632  0100               	movlb	0	; () banked
  7603  000634  EE20 F021          	lfsr	2,33
  7604  000638  0100               	movlb	0	; () banked
  7605  00063A  51D4               	movf	_ic_ptr& (0+255),w,b
  7606  00063C  26D9               	addwf	fsr2l,f,c
  7607  00063E  0100               	movlb	0	; () banked
  7608  000640  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7609  000642  22DA               	addwfc	fsr2h,f,c
  7610  000644  0E05               	movlw	5
  7611  000646  6EDF               	movwf	indf2,c
  7612                           
  7613                           ;my_i2c.c: 298: ic_ptr->error_count++;
  7614  000648  0100               	movlb	0	; () banked
  7615  00064A  EE20 F023          	lfsr	2,35
  7616  00064E  0100               	movlb	0	; () banked
  7617  000650  51D4               	movf	_ic_ptr& (0+255),w,b
  7618  000652  26D9               	addwf	fsr2l,f,c
  7619  000654  0100               	movlb	0	; () banked
  7620  000656  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7621  000658  22DA               	addwfc	fsr2h,f,c
  7622  00065A  2ADF               	incf	indf2,f,c
  7623                           
  7624                           ;my_i2c.c: 299: ic_ptr->error_code = 0x7;
  7625  00065C  0100               	movlb	0	; () banked
  7626  00065E  EE20 F022          	lfsr	2,34
  7627  000662  0100               	movlb	0	; () banked
  7628  000664  51D4               	movf	_ic_ptr& (0+255),w,b
  7629  000666  26D9               	addwf	fsr2l,f,c
  7630  000668  0100               	movlb	0	; () banked
  7631  00066A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7632  00066C  22DA               	addwfc	fsr2h,f,c
  7633  00066E  0E07               	movlw	7
  7634  000670  6EDF               	movwf	indf2,c
  7635  000672                     i2l2815:
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;my_i2c.c: 300: }
  7639                           ;my_i2c.c: 302: if (msg_ready) {
  7640  000672  0100               	movlb	0	; () banked
  7641  000674  518D               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7642  000676  B4D8               	btfsc	status,2,c
  7643  000678  D03F               	goto	i2l2823
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;my_i2c.c: 303: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7647  00067A  0100               	movlb	0	; () banked
  7648  00067C  EE20 F020          	lfsr	2,32
  7649  000680  0100               	movlb	0	; () banked
  7650  000682  51D4               	movf	_ic_ptr& (0+255),w,b
  7651  000684  26D9               	addwf	fsr2l,f,c
  7652  000686  0100               	movlb	0	; () banked
  7653  000688  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7654  00068A  22DA               	addwfc	fsr2h,f,c
  7655  00068C  0100               	movlb	0	; () banked
  7656  00068E  EE10 F00E          	lfsr	1,14
  7657  000692  0100               	movlb	0	; () banked
  7658  000694  51D4               	movf	_ic_ptr& (0+255),w,b
  7659  000696  26E1               	addwf	fsr1l,f,c
  7660  000698  0100               	movlb	0	; () banked
  7661  00069A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7662  00069C  22E2               	addwfc	fsr1h,f,c
  7663  00069E  50E7               	movf	indf1,w,c
  7664  0006A0  0100               	movlb	0	; () banked
  7665  0006A2  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7666  0006A4  0100               	movlb	0	; () banked
  7667  0006A6  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7668  0006A8  0D01               	mullw	1
  7669  0006AA  50F3               	movf	prodl,w,c
  7670  0006AC  0100               	movlb	0	; () banked
  7671  0006AE  25D4               	addwf	_ic_ptr& (0+255),w,b
  7672  0006B0  6EE1               	movwf	fsr1l,c
  7673  0006B2  50F4               	movf	prodh,w,c
  7674  0006B4  0100               	movlb	0	; () banked
  7675  0006B6  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7676  0006B8  6EE2               	movwf	fsr1h,c
  7677  0006BA  CFDF FFE7          	movff	indf2,indf1
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;my_i2c.c: 304: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7681  0006BE  0E28               	movlw	40
  7682  0006C0  0100               	movlb	0	; () banked
  7683  0006C2  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7684  0006C4  0100               	movlb	0	; () banked
  7685  0006C6  C0D5  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7686  0006CA  0100               	movlb	0	; () banked
  7687  0006CC  C0D4  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7688  0006D0  0100               	movlb	0	; () banked
  7689  0006D2  EE20 F00E          	lfsr	2,14
  7690  0006D6  0100               	movlb	0	; () banked
  7691  0006D8  51D4               	movf	_ic_ptr& (0+255),w,b
  7692  0006DA  26D9               	addwf	fsr2l,f,c
  7693  0006DC  0100               	movlb	0	; () banked
  7694  0006DE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7695  0006E0  22DA               	addwfc	fsr2h,f,c
  7696  0006E2  50DF               	movf	indf2,w,c
  7697  0006E4  0100               	movlb	0	; () banked
  7698  0006E6  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7699  0006E8  0100               	movlb	0	; () banked
  7700  0006EA  2985               	incf	??_i2c_int_handler& (0+255),w,b
  7701  0006EC  ECA5  F00D         	call	_ToMainHigh_sendmsg
  7702                           
  7703                           ;my_i2c.c: 305: ic_ptr->buflen = 0;
  7704  0006F0  0100               	movlb	0	; () banked
  7705  0006F2  EE20 F00E          	lfsr	2,14
  7706  0006F6  D041               	goto	L9
  7707  0006F8                     i2l2823:
  7708                           
  7709                           ; BSR set to: 0
  7710  0006F8  0100               	movlb	0	; () banked
  7711  0006FA  EE20 F023          	lfsr	2,35
  7712  0006FE  0100               	movlb	0	; () banked
  7713  000700  51D4               	movf	_ic_ptr& (0+255),w,b
  7714  000702  26D9               	addwf	fsr2l,f,c
  7715  000704  0100               	movlb	0	; () banked
  7716  000706  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7717  000708  22DA               	addwfc	fsr2h,f,c
  7718  00070A  50DF               	movf	indf2,w,c
  7719  00070C  B4D8               	btfsc	status,2,c
  7720  00070E  D03D               	goto	i2l2831
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;my_i2c.c: 307: error_buf[0] = ic_ptr->error_count;
  7724  000710  0100               	movlb	0	; () banked
  7725  000712  EE20 F023          	lfsr	2,35
  7726  000716  0100               	movlb	0	; () banked
  7727  000718  51D4               	movf	_ic_ptr& (0+255),w,b
  7728  00071A  26D9               	addwf	fsr2l,f,c
  7729  00071C  0100               	movlb	0	; () banked
  7730  00071E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7731  000720  22DA               	addwfc	fsr2h,f,c
  7732  000722  50DF               	movf	indf2,w,c
  7733  000724  0100               	movlb	0	; () banked
  7734  000726  6F86               	movwf	i2c_int_handler@error_buf& (0+255),b
  7735                           
  7736                           ;my_i2c.c: 308: error_buf[1] = ic_ptr->error_code;
  7737  000728  0100               	movlb	0	; () banked
  7738  00072A  EE20 F022          	lfsr	2,34
  7739  00072E  0100               	movlb	0	; () banked
  7740  000730  51D4               	movf	_ic_ptr& (0+255),w,b
  7741  000732  26D9               	addwf	fsr2l,f,c
  7742  000734  0100               	movlb	0	; () banked
  7743  000736  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7744  000738  22DA               	addwfc	fsr2h,f,c
  7745  00073A  50DF               	movf	indf2,w,c
  7746  00073C  0100               	movlb	0	; () banked
  7747  00073E  6F87               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7748                           
  7749                           ;my_i2c.c: 309: error_buf[2] = ic_ptr->event_count;
  7750  000740  0100               	movlb	0	; () banked
  7751  000742  EE20 F020          	lfsr	2,32
  7752  000746  0100               	movlb	0	; () banked
  7753  000748  51D4               	movf	_ic_ptr& (0+255),w,b
  7754  00074A  26D9               	addwf	fsr2l,f,c
  7755  00074C  0100               	movlb	0	; () banked
  7756  00074E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7757  000750  22DA               	addwfc	fsr2h,f,c
  7758  000752  50DF               	movf	indf2,w,c
  7759  000754  0100               	movlb	0	; () banked
  7760  000756  6F88               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;my_i2c.c: 310: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7764  000758  0E29               	movlw	41
  7765  00075A  0100               	movlb	0	; () banked
  7766  00075C  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7767  00075E  0100               	movlb	0	; () banked
  7768  000760  0E00               	movlw	high i2c_int_handler@error_buf
  7769  000762  0100               	movlb	0	; () banked
  7770  000764  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7771  000766  0100               	movlb	0	; () banked
  7772  000768  0E86               	movlw	low i2c_int_handler@error_buf
  7773  00076A  0100               	movlb	0	; () banked
  7774  00076C  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7775  00076E  0E03               	movlw	3
  7776  000770  ECA5  F00D         	call	_ToMainHigh_sendmsg
  7777                           
  7778                           ;my_i2c.c: 311: ic_ptr->error_count = 0;
  7779  000774  0100               	movlb	0	; () banked
  7780  000776  EE20 F023          	lfsr	2,35
  7781  00077A                     L9:
  7782  00077A  0100               	movlb	0	; () banked
  7783  00077C  51D4               	movf	_ic_ptr& (0+255),w,b
  7784  00077E  26D9               	addwf	fsr2l,f,c
  7785  000780  0100               	movlb	0	; () banked
  7786  000782  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7787  000784  22DA               	addwfc	fsr2h,f,c
  7788  000786  0E00               	movlw	0
  7789  000788  6EDF               	movwf	indf2,c
  7790  00078A                     i2l2831:
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;my_i2c.c: 312: }
  7794                           ;my_i2c.c: 313: if (msg_to_send) {
  7795  00078A  0100               	movlb	0	; () banked
  7796  00078C  518C               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7797  00078E  B4D8               	btfsc	status,2,c
  7798  000790  D00F               	goto	i2l2837
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;my_i2c.c: 315: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7802  000792  0E2A               	movlw	42
  7803  000794  0100               	movlb	0	; () banked
  7804  000796  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7805  000798  0100               	movlb	0	; () banked
  7806  00079A  C0D5  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7807  00079E  0100               	movlb	0	; () banked
  7808  0007A0  C0D4  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7809  0007A4  0E00               	movlw	0
  7810  0007A6  ECA5  F00D         	call	_ToMainHigh_sendmsg
  7811                           
  7812                           ;my_i2c.c: 316: msg_to_send = 0;
  7813  0007AA  0E00               	movlw	0
  7814  0007AC  0100               	movlb	0	; () banked
  7815  0007AE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7816  0007B0                     i2l2837:
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;my_i2c.c: 317: }
  7820                           ;my_i2c.c: 319: retrieve_sensor_values( sensor_bank_side , sensor_bank_front , sensor_ba
      +                          nk_ventril );
  7821  0007B0  0100               	movlb	0	; () banked
  7822  0007B2  0E00               	movlw	high i2c_int_handler@sensor_bank_side
  7823  0007B4  0100               	movlb	0	; () banked
  7824  0007B6  6F7E               	movwf	(retrieve_sensor_values@sensor_bank_side+1)& (0+255),b
  7825  0007B8  0100               	movlb	0	; () banked
  7826  0007BA  0EC6               	movlw	low i2c_int_handler@sensor_bank_side
  7827  0007BC  0100               	movlb	0	; () banked
  7828  0007BE  6F7D               	movwf	retrieve_sensor_values@sensor_bank_side& (0+255),b
  7829  0007C0  0E00               	movlw	high i2c_int_handler@sensor_bank_front
  7830  0007C2  0100               	movlb	0	; () banked
  7831  0007C4  6F80               	movwf	(retrieve_sensor_values@sensor_bank_front+1)& (0+255),b
  7832  0007C6  0E51               	movlw	low i2c_int_handler@sensor_bank_front
  7833  0007C8  0100               	movlb	0	; () banked
  7834  0007CA  6F7F               	movwf	retrieve_sensor_values@sensor_bank_front& (0+255),b
  7835  0007CC  0101               	movlb	1	; () banked
  7836  0007CE  0E01               	movlw	high i2c_int_handler@sensor_bank_ventril
  7837  0007D0  0100               	movlb	0	; () banked
  7838  0007D2  6F82               	movwf	(retrieve_sensor_values@sensor_bank_ventril+1)& (0+255),b
  7839  0007D4  0101               	movlb	1	; () banked
  7840  0007D6  0E92               	movlw	low i2c_int_handler@sensor_bank_ventril
  7841  0007D8  0100               	movlb	0	; () banked
  7842  0007DA  6F81               	movwf	retrieve_sensor_values@sensor_bank_ventril& (0+255),b
  7843  0007DC  ECD4  F00C         	call	_retrieve_sensor_values	;wreg free
  7844  0007E0  0012               	return	
  7845  0007E2                     __end_of_i2c_int_handler:
  7846                           	opt stack 0
  7847                           pclatu	equ	0xFFB
  7848                           pclath	equ	0xFFA
  7849                           tblptru	equ	0xFF8
  7850                           tblptrh	equ	0xFF7
  7851                           tblptrl	equ	0xFF6
  7852                           tablat	equ	0xFF5
  7853                           prodh	equ	0xFF4
  7854                           prodl	equ	0xFF3
  7855                           intcon	equ	0xFF2
  7856                           postinc0	equ	0xFEE
  7857                           fsr0h	equ	0xFEA
  7858                           fsr0l	equ	0xFE9
  7859                           wreg	equ	0xFE8
  7860                           indf1	equ	0xFE7
  7861                           fsr1h	equ	0xFE2
  7862                           fsr1l	equ	0xFE1
  7863                           bsr	equ	0xFE0
  7864                           indf2	equ	0xFDF
  7865                           postinc2	equ	0xFDE
  7866                           postdec2	equ	0xFDD
  7867                           fsr2h	equ	0xFDA
  7868                           fsr2l	equ	0xFD9
  7869                           status	equ	0xFD8
  7870                           
  7871 ;; *************** function i2_blip3 *****************
  7872 ;; Defined at:
  7873 ;;		line 32 in file "../src/debug.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;		None               void
  7880 ;; Registers used:
  7881 ;;		None
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_i2c_int_handler
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           	psect	text43
  7901  001CEE                     __ptext43:
  7902                           	opt stack 0
  7903  001CEE                     i2_blip3:
  7904                           	opt stack 18
  7905                           
  7906                           ;debug.c: 34: LATDbits.LD6 = 0;
  7907                           
  7908                           ;incstack = 0
  7909  001CEE  9C8C               	bcf	3980,6,c	;volatile
  7910                           
  7911                           ;debug.c: 35: LATDbits.LD6 = 1;
  7912  001CF0  8C8C               	bsf	3980,6,c	;volatile
  7913                           
  7914                           ;debug.c: 36: LATDbits.LD6 = 0;
  7915  001CF2  9C8C               	bcf	3980,6,c	;volatile
  7916  001CF4  0012               	return	
  7917  001CF6                     __end_ofi2_blip3:
  7918                           	opt stack 0
  7919                           pclatu	equ	0xFFB
  7920                           pclath	equ	0xFFA
  7921                           tblptru	equ	0xFF8
  7922                           tblptrh	equ	0xFF7
  7923                           tblptrl	equ	0xFF6
  7924                           tablat	equ	0xFF5
  7925                           prodh	equ	0xFF4
  7926                           prodl	equ	0xFF3
  7927                           intcon	equ	0xFF2
  7928                           postinc0	equ	0xFEE
  7929                           fsr0h	equ	0xFEA
  7930                           fsr0l	equ	0xFE9
  7931                           wreg	equ	0xFE8
  7932                           indf1	equ	0xFE7
  7933                           fsr1h	equ	0xFE2
  7934                           fsr1l	equ	0xFE1
  7935                           bsr	equ	0xFE0
  7936                           indf2	equ	0xFDF
  7937                           postinc2	equ	0xFDE
  7938                           postdec2	equ	0xFDD
  7939                           fsr2h	equ	0xFDA
  7940                           fsr2l	equ	0xFD9
  7941                           status	equ	0xFD8
  7942                           
  7943 ;; *************** function i2_blip2 *****************
  7944 ;; Defined at:
  7945 ;;		line 25 in file "../src/debug.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;		None
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;		None
  7950 ;; Return value:  Size  Location     Type
  7951 ;;		None               void
  7952 ;; Registers used:
  7953 ;;		None
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7963 ;;Total ram usage:        0 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_i2c_int_handler
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text44
  7973  001CF6                     __ptext44:
  7974                           	opt stack 0
  7975  001CF6                     i2_blip2:
  7976                           	opt stack 18
  7977                           
  7978                           ;debug.c: 27: LATDbits.LD5 = 0;
  7979                           
  7980                           ;incstack = 0
  7981  001CF6  9A8C               	bcf	3980,5,c	;volatile
  7982                           
  7983                           ;debug.c: 28: LATDbits.LD5 = 1;
  7984  001CF8  8A8C               	bsf	3980,5,c	;volatile
  7985                           
  7986                           ;debug.c: 29: LATDbits.LD5 = 0;
  7987  001CFA  9A8C               	bcf	3980,5,c	;volatile
  7988  001CFC  0012               	return	
  7989  001CFE                     __end_ofi2_blip2:
  7990                           	opt stack 0
  7991                           pclatu	equ	0xFFB
  7992                           pclath	equ	0xFFA
  7993                           tblptru	equ	0xFF8
  7994                           tblptrh	equ	0xFF7
  7995                           tblptrl	equ	0xFF6
  7996                           tablat	equ	0xFF5
  7997                           prodh	equ	0xFF4
  7998                           prodl	equ	0xFF3
  7999                           intcon	equ	0xFF2
  8000                           postinc0	equ	0xFEE
  8001                           fsr0h	equ	0xFEA
  8002                           fsr0l	equ	0xFE9
  8003                           wreg	equ	0xFE8
  8004                           indf1	equ	0xFE7
  8005                           fsr1h	equ	0xFE2
  8006                           fsr1l	equ	0xFE1
  8007                           bsr	equ	0xFE0
  8008                           indf2	equ	0xFDF
  8009                           postinc2	equ	0xFDE
  8010                           postdec2	equ	0xFDD
  8011                           fsr2h	equ	0xFDA
  8012                           fsr2l	equ	0xFD9
  8013                           status	equ	0xFD8
  8014                           
  8015 ;; *************** function i2_blip1 *****************
  8016 ;; Defined at:
  8017 ;;		line 18 in file "../src/debug.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;		None
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;		None               void
  8024 ;; Registers used:
  8025 ;;		None
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8035 ;;Total ram usage:        0 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_i2c_int_handler
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           	psect	text45
  8045  001CFE                     __ptext45:
  8046                           	opt stack 0
  8047  001CFE                     i2_blip1:
  8048                           	opt stack 18
  8049                           
  8050                           ;debug.c: 20: LATDbits.LD4 = 0;
  8051                           
  8052                           ;incstack = 0
  8053  001CFE  988C               	bcf	3980,4,c	;volatile
  8054                           
  8055                           ;debug.c: 21: LATDbits.LD4 = 1;
  8056  001D00  888C               	bsf	3980,4,c	;volatile
  8057                           
  8058                           ;debug.c: 22: LATDbits.LD4 = 0;
  8059  001D02  988C               	bcf	3980,4,c	;volatile
  8060  001D04  0012               	return	
  8061  001D06                     __end_ofi2_blip1:
  8062                           	opt stack 0
  8063                           pclatu	equ	0xFFB
  8064                           pclath	equ	0xFFA
  8065                           tblptru	equ	0xFF8
  8066                           tblptrh	equ	0xFF7
  8067                           tblptrl	equ	0xFF6
  8068                           tablat	equ	0xFF5
  8069                           prodh	equ	0xFF4
  8070                           prodl	equ	0xFF3
  8071                           intcon	equ	0xFF2
  8072                           postinc0	equ	0xFEE
  8073                           fsr0h	equ	0xFEA
  8074                           fsr0l	equ	0xFE9
  8075                           wreg	equ	0xFE8
  8076                           indf1	equ	0xFE7
  8077                           fsr1h	equ	0xFE2
  8078                           fsr1l	equ	0xFE1
  8079                           bsr	equ	0xFE0
  8080                           indf2	equ	0xFDF
  8081                           postinc2	equ	0xFDE
  8082                           postdec2	equ	0xFDD
  8083                           fsr2h	equ	0xFDA
  8084                           fsr2l	equ	0xFD9
  8085                           status	equ	0xFD8
  8086                           
  8087 ;; *************** function i2_blip *****************
  8088 ;; Defined at:
  8089 ;;		line 11 in file "../src/debug.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;		None               void
  8096 ;; Registers used:
  8097 ;;		None
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_i2c_int_handler
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text46
  8117  001D06                     __ptext46:
  8118                           	opt stack 0
  8119  001D06                     i2_blip:
  8120                           	opt stack 18
  8121                           
  8122                           ;debug.c: 13: LATDbits.LD2 = 0;
  8123                           
  8124                           ;incstack = 0
  8125  001D06  948C               	bcf	3980,2,c	;volatile
  8126                           
  8127                           ;debug.c: 14: LATDbits.LD2 = 1;
  8128  001D08  848C               	bsf	3980,2,c	;volatile
  8129                           
  8130                           ;debug.c: 15: LATDbits.LD2 = 0;
  8131  001D0A  948C               	bcf	3980,2,c	;volatile
  8132  001D0C  0012               	return	
  8133  001D0E                     __end_ofi2_blip:
  8134                           	opt stack 0
  8135                           pclatu	equ	0xFFB
  8136                           pclath	equ	0xFFA
  8137                           tblptru	equ	0xFF8
  8138                           tblptrh	equ	0xFF7
  8139                           tblptrl	equ	0xFF6
  8140                           tablat	equ	0xFF5
  8141                           prodh	equ	0xFF4
  8142                           prodl	equ	0xFF3
  8143                           intcon	equ	0xFF2
  8144                           postinc0	equ	0xFEE
  8145                           fsr0h	equ	0xFEA
  8146                           fsr0l	equ	0xFE9
  8147                           wreg	equ	0xFE8
  8148                           indf1	equ	0xFE7
  8149                           fsr1h	equ	0xFE2
  8150                           fsr1l	equ	0xFE1
  8151                           bsr	equ	0xFE0
  8152                           indf2	equ	0xFDF
  8153                           postinc2	equ	0xFDE
  8154                           postdec2	equ	0xFDD
  8155                           fsr2h	equ	0xFDA
  8156                           fsr2l	equ	0xFD9
  8157                           status	equ	0xFD8
  8158                           
  8159 ;; *************** function _retrieve_sensor_values *****************
  8160 ;; Defined at:
  8161 ;;		line 394 in file "../src/my_i2c.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  sensor_bank_    2   29[BANK0 ] PTR unsigned char 
  8164 ;;		 -> i2c_int_handler@sensor_bank_side(14), 
  8165 ;;  sensor_bank_    2   31[BANK0 ] PTR unsigned char 
  8166 ;;		 -> i2c_int_handler@sensor_bank_front(14), 
  8167 ;;  sensor_bank_    2   33[BANK0 ] PTR unsigned char 
  8168 ;;		 -> i2c_int_handler@sensor_bank_ventril(14), 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  i               2    0        int 
  8171 ;;  msgtype         1   36[BANK0 ] unsigned char 
  8172 ;;  length          1   35[BANK0 ] char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;		None               void
  8175 ;; Registers used:
  8176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8182 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8185 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8186 ;;Total ram usage:        8 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    3
  8189 ;; This function calls:
  8190 ;;		_FromMainHigh_recvmsg
  8191 ;; This function is called by:
  8192 ;;		_i2c_int_handler
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text47
  8197  0019A8                     __ptext47:
  8198                           	opt stack 0
  8199  0019A8                     _retrieve_sensor_values:
  8200                           	opt stack 15
  8201                           
  8202                           ;my_i2c.c: 396: unsigned char msgtype = 40;
  8203                           
  8204                           ;incstack = 0
  8205  0019A8  0E28               	movlw	40
  8206  0019AA  0100               	movlb	0	; () banked
  8207  0019AC  6F84               	movwf	retrieve_sensor_values@msgtype& (0+255),b
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;my_i2c.c: 398: int i;
  8211                           ;my_i2c.c: 399: signed char length = FromMainHigh_recvmsg( 14 , &msgtype , (void *)senso
      +                          r_bank_side );
  8212  0019AE  0100               	movlb	0	; () banked
  8213  0019B0  0E00               	movlw	high retrieve_sensor_values@msgtype
  8214  0019B2  0100               	movlb	0	; () banked
  8215  0019B4  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  8216  0019B6  0100               	movlb	0	; () banked
  8217  0019B8  0E84               	movlw	low retrieve_sensor_values@msgtype
  8218  0019BA  0100               	movlb	0	; () banked
  8219  0019BC  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  8220  0019BE  0100               	movlb	0	; () banked
  8221  0019C0  C07E  F07B         	movff	retrieve_sensor_values@sensor_bank_side+1,FromMainHigh_recvmsg@data+1
  8222  0019C4  0100               	movlb	0	; () banked
  8223  0019C6  C07D  F07A         	movff	retrieve_sensor_values@sensor_bank_side,FromMainHigh_recvmsg@data
  8224  0019CA  0E0E               	movlw	14
  8225  0019CC  EC43  F00D         	call	_FromMainHigh_recvmsg
  8226  0019D0  0100               	movlb	0	; () banked
  8227  0019D2  6F83               	movwf	retrieve_sensor_values@length& (0+255),b
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;my_i2c.c: 407: }
  8231                           ;my_i2c.c: 411: *need_sensor_data = 1;
  8232                           
  8233                           ; BSR set to: 0
  8234                           
  8235                           ; BSR set to: 0
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;my_i2c.c: 403: }
  8239                           
  8240                           ; BSR set to: 0
  8241  0019D4  C0AF  FFD9         	movff	_need_sensor_data,fsr2l
  8242  0019D8  C0B0  FFDA         	movff	_need_sensor_data+1,fsr2h
  8243  0019DC  0E01               	movlw	1
  8244  0019DE  6EDF               	movwf	indf2,c
  8245                           
  8246                           ; BSR set to: 0
  8247  0019E0  0012               	return	
  8248  0019E2                     __end_of_retrieve_sensor_values:
  8249                           	opt stack 0
  8250                           pclatu	equ	0xFFB
  8251                           pclath	equ	0xFFA
  8252                           tblptru	equ	0xFF8
  8253                           tblptrh	equ	0xFF7
  8254                           tblptrl	equ	0xFF6
  8255                           tablat	equ	0xFF5
  8256                           prodh	equ	0xFF4
  8257                           prodl	equ	0xFF3
  8258                           intcon	equ	0xFF2
  8259                           postinc0	equ	0xFEE
  8260                           fsr0h	equ	0xFEA
  8261                           fsr0l	equ	0xFE9
  8262                           wreg	equ	0xFE8
  8263                           indf1	equ	0xFE7
  8264                           fsr1h	equ	0xFE2
  8265                           fsr1l	equ	0xFE1
  8266                           bsr	equ	0xFE0
  8267                           indf2	equ	0xFDF
  8268                           postinc2	equ	0xFDE
  8269                           postdec2	equ	0xFDD
  8270                           fsr2h	equ	0xFDA
  8271                           fsr2l	equ	0xFD9
  8272                           status	equ	0xFD8
  8273                           
  8274 ;; *************** function _FromMainHigh_recvmsg *****************
  8275 ;; Defined at:
  8276 ;;		line 183 in file "../src/messages.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  maxlength       1    wreg     unsigned char 
  8279 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8280 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), 
  8281 ;;  data            2   26[BANK0 ] PTR void 
  8282 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@sensor_bank_side(14), 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      char 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8297 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;Total ram usage:        5 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    2
  8301 ;; This function calls:
  8302 ;;		i2_recv_msg
  8303 ;; This function is called by:
  8304 ;;		_retrieve_sensor_values
  8305 ;;		_timer0_int_handler
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text48
  8310  001A86                     __ptext48:
  8311                           	opt stack 0
  8312  001A86                     _FromMainHigh_recvmsg:
  8313                           	opt stack 16
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;incstack = 0
  8317                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8318  001A86  0100               	movlb	0	; () banked
  8319  001A88  6F7C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8323  001A8A  0105               	movlb	5	; () banked
  8324  001A8C  0E05               	movlw	high _FromMainHigh_MQ
  8325  001A8E  0100               	movlb	0	; () banked
  8326  001A90  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8327  001A92  0105               	movlb	5	; () banked
  8328  001A94  0E00               	movlw	low _FromMainHigh_MQ
  8329  001A96  0100               	movlb	0	; () banked
  8330  001A98  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  8331  001A9A  C07C  F06C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8332  001A9E  0100               	movlb	0	; () banked
  8333  001AA0  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8334  001AA4  0100               	movlb	0	; () banked
  8335  001AA6  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8336  001AAA  0100               	movlb	0	; () banked
  8337  001AAC  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8338  001AB0  0100               	movlb	0	; () banked
  8339  001AB2  C07A  F06F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8340  001AB6  ECDF  F006         	call	i2_recv_msg	;wreg free
  8341  001ABA  0012               	return	
  8342  001ABC                     __end_of_FromMainHigh_recvmsg:
  8343                           	opt stack 0
  8344                           pclatu	equ	0xFFB
  8345                           pclath	equ	0xFFA
  8346                           tblptru	equ	0xFF8
  8347                           tblptrh	equ	0xFF7
  8348                           tblptrl	equ	0xFF6
  8349                           tablat	equ	0xFF5
  8350                           prodh	equ	0xFF4
  8351                           prodl	equ	0xFF3
  8352                           intcon	equ	0xFF2
  8353                           postinc0	equ	0xFEE
  8354                           fsr0h	equ	0xFEA
  8355                           fsr0l	equ	0xFE9
  8356                           wreg	equ	0xFE8
  8357                           indf1	equ	0xFE7
  8358                           fsr1h	equ	0xFE2
  8359                           fsr1l	equ	0xFE1
  8360                           bsr	equ	0xFE0
  8361                           indf2	equ	0xFDF
  8362                           postinc2	equ	0xFDE
  8363                           postdec2	equ	0xFDD
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function i2_recv_msg *****************
  8369 ;; Defined at:
  8370 ;;		line 63 in file "../src/messages.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8373 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8374 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8375 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8376 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  8377 ;;  data            2   15[BANK0 ] PTR void 
  8378 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8381 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8382 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8383 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8384 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      char 
  8387 ;; Registers used:
  8388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8394 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8395 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8397 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;Total ram usage:       14 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    1
  8401 ;; This function calls:
  8402 ;;		i2_memcpy
  8403 ;; This function is called by:
  8404 ;;		_FromMainHigh_recvmsg
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text49
  8409  000DBE                     __ptext49:
  8410                           	opt stack 0
  8411  000DBE                     i2_recv_msg:
  8412                           	opt stack 16
  8413                           
  8414                           ;messages.c: 64: unsigned char slot;
  8415                           ;messages.c: 68: msg *qmsg;
  8416                           ;messages.c: 69: size_t tlength;
  8417                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8418                           
  8419                           ;incstack = 0
  8420  000DBE  0100               	movlb	0	; () banked
  8421  000DC0  EE20 F089          	lfsr	2,137
  8422  000DC4  0100               	movlb	0	; () banked
  8423  000DC6  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8424  000DC8  26D9               	addwf	fsr2l,f,c
  8425  000DCA  0100               	movlb	0	; () banked
  8426  000DCC  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8427  000DCE  22DA               	addwfc	fsr2h,f,c
  8428  000DD0  50DF               	movf	indf2,w,c
  8429  000DD2  0100               	movlb	0	; () banked
  8430  000DD4  6F73               	movwf	i2recv_msg@slot& (0+255),b
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8434  000DD6  0100               	movlb	0	; () banked
  8435  000DD8  5173               	movf	i2recv_msg@slot& (0+255),w,b
  8436  000DDA  0D11               	mullw	17
  8437  000DDC  50F3               	movf	prodl,w,c
  8438  000DDE  0100               	movlb	0	; () banked
  8439  000DE0  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8440  000DE2  0100               	movlb	0	; () banked
  8441  000DE4  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  8442  000DE6  50F4               	movf	prodh,w,c
  8443  000DE8  0100               	movlb	0	; () banked
  8444  000DEA  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8445  000DEC  0100               	movlb	0	; () banked
  8446  000DEE  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;messages.c: 74: if (qmsg->full == 1) {
  8450  000DF0  0E01               	movlw	1
  8451  000DF2  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8452  000DF6  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8453  000DFA  62DF               	cpfseq	indf2,c
  8454  000DFC  D06D               	goto	i2l2357
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8458  000DFE  0100               	movlb	0	; () banked
  8459  000E00  EE20 F001          	lfsr	2,1
  8460  000E04  0100               	movlb	0	; () banked
  8461  000E06  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8462  000E08  26D9               	addwf	fsr2l,f,c
  8463  000E0A  0100               	movlb	0	; () banked
  8464  000E0C  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8465  000E0E  22DA               	addwfc	fsr2h,f,c
  8466  000E10  50DF               	movf	indf2,w,c
  8467  000E12  0100               	movlb	0	; () banked
  8468  000E14  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8469  000E16  B0D8               	btfsc	status,0,c
  8470  000E18  D002               	goto	i2l2341
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;messages.c: 77: return (-3);
  8474  000E1A  0EFD               	movlw	253
  8475  000E1C  0012               	return	
  8476  000E1E                     i2l2341:
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;messages.c: 78: }
  8480                           ;messages.c: 80: tlength = qmsg->length;
  8481  000E1E  0100               	movlb	0	; () banked
  8482  000E20  EE20 F001          	lfsr	2,1
  8483  000E24  0100               	movlb	0	; () banked
  8484  000E26  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8485  000E28  26D9               	addwf	fsr2l,f,c
  8486  000E2A  0100               	movlb	0	; () banked
  8487  000E2C  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8488  000E2E  22DA               	addwfc	fsr2h,f,c
  8489  000E30  50DF               	movf	indf2,w,c
  8490  000E32  0100               	movlb	0	; () banked
  8491  000E34  6F71               	movwf	??i2_recv_msg& (0+255),b
  8492  000E36  0100               	movlb	0	; () banked
  8493  000E38  5171               	movf	??i2_recv_msg& (0+255),w,b
  8494  000E3A  0100               	movlb	0	; () banked
  8495  000E3C  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  8496  000E3E  0100               	movlb	0	; () banked
  8497  000E40  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8501  000E42  0100               	movlb	0	; () banked
  8502  000E44  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8503  000E48  0100               	movlb	0	; () banked
  8504  000E4A  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  8505  000E4E  0E03               	movlw	3
  8506  000E50  0100               	movlb	0	; () banked
  8507  000E52  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8508  000E54  0100               	movlb	0	; () banked
  8509  000E56  6F71               	movwf	??i2_recv_msg& (0+255),b
  8510  000E58  0E00               	movlw	0
  8511  000E5A  0100               	movlb	0	; () banked
  8512  000E5C  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8513  000E5E  0100               	movlb	0	; () banked
  8514  000E60  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  8515  000E62  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  8516  000E66  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8517  000E6A  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  8518  000E6E  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8519  000E72  EC4F  F00C         	call	i2_memcpy	;wreg free
  8520                           
  8521                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  8522  000E76  0100               	movlb	0	; () banked
  8523  000E78  EE20 F089          	lfsr	2,137
  8524  000E7C  0100               	movlb	0	; () banked
  8525  000E7E  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8526  000E80  26D9               	addwf	fsr2l,f,c
  8527  000E82  0100               	movlb	0	; () banked
  8528  000E84  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8529  000E86  22DA               	addwfc	fsr2h,f,c
  8530  000E88  0100               	movlb	0	; () banked
  8531  000E8A  EE10 F089          	lfsr	1,137
  8532  000E8E  0100               	movlb	0	; () banked
  8533  000E90  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8534  000E92  26E1               	addwf	fsr1l,f,c
  8535  000E94  0100               	movlb	0	; () banked
  8536  000E96  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8537  000E98  22E2               	addwfc	fsr1h,f,c
  8538  000E9A  50E7               	movf	indf1,w,c
  8539  000E9C  0100               	movlb	0	; () banked
  8540  000E9E  6F71               	movwf	??i2_recv_msg& (0+255),b
  8541  000EA0  0100               	movlb	0	; () banked
  8542  000EA2  2971               	incf	??i2_recv_msg& (0+255),w,b
  8543  000EA4  0B07               	andlw	7
  8544  000EA6  6EDF               	movwf	indf2,c
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8548  000EA8  0100               	movlb	0	; () banked
  8549  000EAA  EE20 F002          	lfsr	2,2
  8550  000EAE  0100               	movlb	0	; () banked
  8551  000EB0  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8552  000EB2  26D9               	addwf	fsr2l,f,c
  8553  000EB4  0100               	movlb	0	; () banked
  8554  000EB6  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8555  000EB8  22DA               	addwfc	fsr2h,f,c
  8556  000EBA  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8557  000EBE  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8558  000EC2  CFDF FFE7          	movff	indf2,indf1
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;messages.c: 91: qmsg->full = 0;
  8562  000EC6  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8563  000ECA  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8564  000ECE  0E00               	movlw	0
  8565  000ED0  6EDF               	movwf	indf2,c
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;messages.c: 92: return (tlength);
  8569  000ED2  0100               	movlb	0	; () banked
  8570  000ED4  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  8571  000ED6  0012               	return	
  8572  000ED8                     i2l2357:
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;messages.c: 94: return (-4);
  8576  000ED8  0EFC               	movlw	252
  8577  000EDA  0012               	return	
  8578  000EDC                     __end_ofi2_recv_msg:
  8579                           	opt stack 0
  8580                           pclatu	equ	0xFFB
  8581                           pclath	equ	0xFFA
  8582                           tblptru	equ	0xFF8
  8583                           tblptrh	equ	0xFF7
  8584                           tblptrl	equ	0xFF6
  8585                           tablat	equ	0xFF5
  8586                           prodh	equ	0xFF4
  8587                           prodl	equ	0xFF3
  8588                           intcon	equ	0xFF2
  8589                           postinc0	equ	0xFEE
  8590                           fsr0h	equ	0xFEA
  8591                           fsr0l	equ	0xFE9
  8592                           wreg	equ	0xFE8
  8593                           indf1	equ	0xFE7
  8594                           fsr1h	equ	0xFE2
  8595                           fsr1l	equ	0xFE1
  8596                           bsr	equ	0xFE0
  8597                           indf2	equ	0xFDF
  8598                           postinc2	equ	0xFDE
  8599                           postdec2	equ	0xFDD
  8600                           fsr2h	equ	0xFDA
  8601                           fsr2l	equ	0xFD9
  8602                           status	equ	0xFD8
  8603                           
  8604 ;; *************** function _handle_start *****************
  8605 ;; Defined at:
  8606 ;;		line 72 in file "../src/my_i2c.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;  data_read       1    wreg     unsigned char 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  data_read       1    0[BANK0 ] unsigned char 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;		None               void
  8613 ;; Registers used:
  8614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8624 ;;Total ram usage:        1 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; This function calls:
  8627 ;;		Nothing
  8628 ;; This function is called by:
  8629 ;;		_i2c_int_handler
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text50
  8634  001268                     __ptext50:
  8635                           	opt stack 0
  8636  001268                     _handle_start:
  8637                           	opt stack 18
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;incstack = 0
  8641                           ;handle_start@data_read stored from wreg
  8642  001268  0100               	movlb	0	; () banked
  8643  00126A  6F60               	movwf	handle_start@data_read& (0+255),b
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8647  00126C  0100               	movlb	0	; () banked
  8648  00126E  EE20 F020          	lfsr	2,32
  8649  001272  0100               	movlb	0	; () banked
  8650  001274  51D4               	movf	_ic_ptr& (0+255),w,b
  8651  001276  26D9               	addwf	fsr2l,f,c
  8652  001278  0100               	movlb	0	; () banked
  8653  00127A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8654  00127C  22DA               	addwfc	fsr2h,f,c
  8655  00127E  0E01               	movlw	1
  8656  001280  6EDF               	movwf	indf2,c
  8657                           
  8658                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8659  001282  0100               	movlb	0	; () banked
  8660  001284  EE20 F00E          	lfsr	2,14
  8661  001288  0100               	movlb	0	; () banked
  8662  00128A  51D4               	movf	_ic_ptr& (0+255),w,b
  8663  00128C  26D9               	addwf	fsr2l,f,c
  8664  00128E  0100               	movlb	0	; () banked
  8665  001290  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8666  001292  22DA               	addwfc	fsr2h,f,c
  8667  001294  0E00               	movlw	0
  8668  001296  6EDF               	movwf	indf2,c
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;my_i2c.c: 76: if (data_read) {
  8672  001298  0100               	movlb	0	; () banked
  8673  00129A  5160               	movf	handle_start@data_read& (0+255),w,b
  8674  00129C  B4D8               	btfsc	status,2,c
  8675  00129E  D03D               	goto	i2l2567
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8679  0012A0  AAC7               	btfss	4039,5,c	;volatile
  8680  0012A2  D021               	goto	i2l288
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8684  0012A4  0100               	movlb	0	; () banked
  8685  0012A6  EE20 F021          	lfsr	2,33
  8686  0012AA  0100               	movlb	0	; () banked
  8687  0012AC  51D4               	movf	_ic_ptr& (0+255),w,b
  8688  0012AE  26D9               	addwf	fsr2l,f,c
  8689  0012B0  0100               	movlb	0	; () banked
  8690  0012B2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8691  0012B4  22DA               	addwfc	fsr2h,f,c
  8692  0012B6  0E05               	movlw	5
  8693  0012B8  6EDF               	movwf	indf2,c
  8694                           
  8695                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8696  0012BA  0100               	movlb	0	; () banked
  8697  0012BC  EE20 F023          	lfsr	2,35
  8698  0012C0  0100               	movlb	0	; () banked
  8699  0012C2  51D4               	movf	_ic_ptr& (0+255),w,b
  8700  0012C4  26D9               	addwf	fsr2l,f,c
  8701  0012C6  0100               	movlb	0	; () banked
  8702  0012C8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8703  0012CA  22DA               	addwfc	fsr2h,f,c
  8704  0012CC  2ADF               	incf	indf2,f,c
  8705                           
  8706                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8707  0012CE  0100               	movlb	0	; () banked
  8708  0012D0  EE20 F022          	lfsr	2,34
  8709  0012D4  0100               	movlb	0	; () banked
  8710  0012D6  51D4               	movf	_ic_ptr& (0+255),w,b
  8711  0012D8  26D9               	addwf	fsr2l,f,c
  8712  0012DA  0100               	movlb	0	; () banked
  8713  0012DC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8714  0012DE  22DA               	addwfc	fsr2h,f,c
  8715  0012E0  0E05               	movlw	5
  8716  0012E2  6EDF               	movwf	indf2,c
  8717                           
  8718                           ;my_i2c.c: 83: } else {
  8719  0012E4  0012               	return	
  8720  0012E6                     i2l288:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8724  0012E6  A4C7               	btfss	4039,2,c	;volatile
  8725  0012E8  D00C               	goto	i2l2565
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8729  0012EA  0100               	movlb	0	; () banked
  8730  0012EC  EE20 F021          	lfsr	2,33
  8731  0012F0  0100               	movlb	0	; () banked
  8732  0012F2  51D4               	movf	_ic_ptr& (0+255),w,b
  8733  0012F4  26D9               	addwf	fsr2l,f,c
  8734  0012F6  0100               	movlb	0	; () banked
  8735  0012F8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8736  0012FA  22DA               	addwfc	fsr2h,f,c
  8737  0012FC  0E08               	movlw	8
  8738  0012FE  6EDF               	movwf	indf2,c
  8739                           
  8740                           ;my_i2c.c: 87: } else {
  8741  001300  0012               	return	
  8742  001302                     i2l2565:
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  8746  001302  0100               	movlb	0	; () banked
  8747  001304  EE20 F021          	lfsr	2,33
  8748  001308  0100               	movlb	0	; () banked
  8749  00130A  51D4               	movf	_ic_ptr& (0+255),w,b
  8750  00130C  26D9               	addwf	fsr2l,f,c
  8751  00130E  0100               	movlb	0	; () banked
  8752  001310  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8753  001312  22DA               	addwfc	fsr2h,f,c
  8754  001314  0E07               	movlw	7
  8755  001316  6EDF               	movwf	indf2,c
  8756  001318  0012               	return	
  8757  00131A                     i2l2567:
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  8761  00131A  0100               	movlb	0	; () banked
  8762  00131C  EE20 F021          	lfsr	2,33
  8763  001320  0100               	movlb	0	; () banked
  8764  001322  51D4               	movf	_ic_ptr& (0+255),w,b
  8765  001324  26D9               	addwf	fsr2l,f,c
  8766  001326  0100               	movlb	0	; () banked
  8767  001328  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8768  00132A  22DA               	addwfc	fsr2h,f,c
  8769  00132C  0E06               	movlw	6
  8770  00132E  6EDF               	movwf	indf2,c
  8771  001330  0012               	return	
  8772  001332                     __end_of_handle_start:
  8773                           	opt stack 0
  8774                           pclatu	equ	0xFFB
  8775                           pclath	equ	0xFFA
  8776                           tblptru	equ	0xFF8
  8777                           tblptrh	equ	0xFF7
  8778                           tblptrl	equ	0xFF6
  8779                           tablat	equ	0xFF5
  8780                           prodh	equ	0xFF4
  8781                           prodl	equ	0xFF3
  8782                           intcon	equ	0xFF2
  8783                           postinc0	equ	0xFEE
  8784                           fsr0h	equ	0xFEA
  8785                           fsr0l	equ	0xFE9
  8786                           wreg	equ	0xFE8
  8787                           indf1	equ	0xFE7
  8788                           fsr1h	equ	0xFE2
  8789                           fsr1l	equ	0xFE1
  8790                           bsr	equ	0xFE0
  8791                           indf2	equ	0xFDF
  8792                           postinc2	equ	0xFDE
  8793                           postdec2	equ	0xFDD
  8794                           fsr2h	equ	0xFDA
  8795                           fsr2l	equ	0xFD9
  8796                           status	equ	0xFD8
  8797                           
  8798 ;; *************** function _blip4 *****************
  8799 ;; Defined at:
  8800 ;;		line 39 in file "../src/debug.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;		None
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;		None
  8805 ;; Return value:  Size  Location     Type
  8806 ;;		None               void
  8807 ;; Registers used:
  8808 ;;		None
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8818 ;;Total ram usage:        0 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; This function calls:
  8821 ;;		Nothing
  8822 ;; This function is called by:
  8823 ;;		_i2c_int_handler
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text51
  8828  001D0E                     __ptext51:
  8829                           	opt stack 0
  8830  001D0E                     _blip4:
  8831                           	opt stack 18
  8832                           
  8833                           ;debug.c: 41: LATDbits.LD7 = 0;
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;incstack = 0
  8837  001D0E  9E8C               	bcf	3980,7,c	;volatile
  8838                           
  8839                           ;debug.c: 42: LATDbits.LD7 = 1;
  8840  001D10  8E8C               	bsf	3980,7,c	;volatile
  8841                           
  8842                           ;debug.c: 43: LATDbits.LD7 = 0;
  8843  001D12  9E8C               	bcf	3980,7,c	;volatile
  8844  001D14  0012               	return	
  8845  001D16                     __end_of_blip4:
  8846                           	opt stack 0
  8847                           pclatu	equ	0xFFB
  8848                           pclath	equ	0xFFA
  8849                           tblptru	equ	0xFF8
  8850                           tblptrh	equ	0xFF7
  8851                           tblptrl	equ	0xFF6
  8852                           tablat	equ	0xFF5
  8853                           prodh	equ	0xFF4
  8854                           prodl	equ	0xFF3
  8855                           intcon	equ	0xFF2
  8856                           postinc0	equ	0xFEE
  8857                           fsr0h	equ	0xFEA
  8858                           fsr0l	equ	0xFE9
  8859                           wreg	equ	0xFE8
  8860                           indf1	equ	0xFE7
  8861                           fsr1h	equ	0xFE2
  8862                           fsr1l	equ	0xFE1
  8863                           bsr	equ	0xFE0
  8864                           indf2	equ	0xFDF
  8865                           postinc2	equ	0xFDE
  8866                           postdec2	equ	0xFDD
  8867                           fsr2h	equ	0xFDA
  8868                           fsr2l	equ	0xFD9
  8869                           status	equ	0xFD8
  8870                           
  8871 ;; *************** function _ToMainHigh_sendmsg *****************
  8872 ;; Defined at:
  8873 ;;		line 126 in file "../src/messages.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  length          1    wreg     unsigned char 
  8876 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8877 ;;  data            2   23[BANK0 ] PTR void 
  8878 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  length          1   25[BANK0 ] unsigned char 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      char 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8890 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8893 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8894 ;;Total ram usage:        4 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    2
  8897 ;; This function calls:
  8898 ;;		i2_send_msg
  8899 ;; This function is called by:
  8900 ;;		_i2c_int_handler
  8901 ;;		_timer0_int_handler
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text52
  8906  001B4A                     __ptext52:
  8907                           	opt stack 0
  8908  001B4A                     _ToMainHigh_sendmsg:
  8909                           	opt stack 16
  8910                           
  8911                           ;incstack = 0
  8912                           ;ToMainHigh_sendmsg@length stored from wreg
  8913  001B4A  0100               	movlb	0	; () banked
  8914  001B4C  6F79               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8918                           ;	Return value of _ToMainHigh_sendmsg is never used
  8919  001B4E  0103               	movlb	3	; () banked
  8920  001B50  0E03               	movlw	high _ToMainHigh_MQ
  8921  001B52  0100               	movlb	0	; () banked
  8922  001B54  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8923  001B56  0103               	movlb	3	; () banked
  8924  001B58  0E00               	movlw	low _ToMainHigh_MQ
  8925  001B5A  0100               	movlb	0	; () banked
  8926  001B5C  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  8927  001B5E  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8928  001B62  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8929  001B66  0100               	movlb	0	; () banked
  8930  001B68  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8931  001B6C  0100               	movlb	0	; () banked
  8932  001B6E  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8933  001B72  ECE4  F007         	call	i2_send_msg	;wreg free
  8934  001B76  0012               	return	
  8935  001B78                     __end_of_ToMainHigh_sendmsg:
  8936                           	opt stack 0
  8937                           pclatu	equ	0xFFB
  8938                           pclath	equ	0xFFA
  8939                           tblptru	equ	0xFF8
  8940                           tblptrh	equ	0xFF7
  8941                           tblptrl	equ	0xFF6
  8942                           tablat	equ	0xFF5
  8943                           prodh	equ	0xFF4
  8944                           prodl	equ	0xFF3
  8945                           intcon	equ	0xFF2
  8946                           postinc0	equ	0xFEE
  8947                           fsr0h	equ	0xFEA
  8948                           fsr0l	equ	0xFE9
  8949                           wreg	equ	0xFE8
  8950                           indf1	equ	0xFE7
  8951                           fsr1h	equ	0xFE2
  8952                           fsr1l	equ	0xFE1
  8953                           bsr	equ	0xFE0
  8954                           indf2	equ	0xFDF
  8955                           postinc2	equ	0xFDE
  8956                           postdec2	equ	0xFDD
  8957                           fsr2h	equ	0xFDA
  8958                           fsr2l	equ	0xFD9
  8959                           status	equ	0xFD8
  8960                           
  8961 ;; *************** function i2_send_msg *****************
  8962 ;; Defined at:
  8963 ;;		line 24 in file "../src/messages.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8966 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8967 ;;  length          1   12[BANK0 ] unsigned char 
  8968 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8969 ;;  data            2   14[BANK0 ] PTR void 
  8970 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  8971 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  8972 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  8973 ;;		 -> main@t1thread_data(2), main@ic(38), 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8976 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8977 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8978 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8979 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      char 
  8982 ;; Registers used:
  8983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8989 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8990 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8992 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8993 ;;Total ram usage:       12 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:    1
  8996 ;; This function calls:
  8997 ;;		i2_memcpy
  8998 ;; This function is called by:
  8999 ;;		_ToMainHigh_sendmsg
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text53
  9004  000FC8                     __ptext53:
  9005                           	opt stack 0
  9006  000FC8                     i2_send_msg:
  9007                           	opt stack 16
  9008                           
  9009                           ;messages.c: 25: unsigned char slot;
  9010                           ;messages.c: 27: msg *qmsg;
  9011                           ;messages.c: 28: size_t tlength = length;
  9012                           
  9013                           ;incstack = 0
  9014  000FC8  0100               	movlb	0	; () banked
  9015  000FCA  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  9016  000FCE  0100               	movlb	0	; () banked
  9017  000FD0  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9021  000FD2  0100               	movlb	0	; () banked
  9022  000FD4  EE20 F088          	lfsr	2,136
  9023  000FD8  0100               	movlb	0	; () banked
  9024  000FDA  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9025  000FDC  26D9               	addwf	fsr2l,f,c
  9026  000FDE  0100               	movlb	0	; () banked
  9027  000FE0  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9028  000FE2  22DA               	addwfc	fsr2h,f,c
  9029  000FE4  50DF               	movf	indf2,w,c
  9030  000FE6  0100               	movlb	0	; () banked
  9031  000FE8  6F73               	movwf	i2send_msg@slot& (0+255),b
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9035  000FEA  0100               	movlb	0	; () banked
  9036  000FEC  5173               	movf	i2send_msg@slot& (0+255),w,b
  9037  000FEE  0D11               	mullw	17
  9038  000FF0  50F3               	movf	prodl,w,c
  9039  000FF2  0100               	movlb	0	; () banked
  9040  000FF4  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  9041  000FF6  0100               	movlb	0	; () banked
  9042  000FF8  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  9043  000FFA  50F4               	movf	prodh,w,c
  9044  000FFC  0100               	movlb	0	; () banked
  9045  000FFE  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9046  001000  0100               	movlb	0	; () banked
  9047  001002  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;messages.c: 41: if (qmsg->full != 0) {
  9051  001004  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9052  001008  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9053  00100C  50DF               	movf	indf2,w,c
  9054  00100E  B4D8               	btfsc	status,2,c
  9055  001010  D002               	goto	i2l2419
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;messages.c: 42: return (-1);
  9059  001012  0EFF               	movlw	255
  9060  001014  0012               	return	
  9061  001016                     i2l2419:
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;messages.c: 43: }
  9065                           ;messages.c: 46: qmsg->length = length;
  9066  001016  0100               	movlb	0	; () banked
  9067  001018  EE20 F001          	lfsr	2,1
  9068  00101C  0100               	movlb	0	; () banked
  9069  00101E  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  9070  001020  26D9               	addwf	fsr2l,f,c
  9071  001022  0100               	movlb	0	; () banked
  9072  001024  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9073  001026  22DA               	addwfc	fsr2h,f,c
  9074  001028  0100               	movlb	0	; () banked
  9075  00102A  C06C  FFDF         	movff	i2send_msg@length,indf2
  9076                           
  9077                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9078  00102E  0100               	movlb	0	; () banked
  9079  001030  EE20 F002          	lfsr	2,2
  9080  001034  0100               	movlb	0	; () banked
  9081  001036  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  9082  001038  26D9               	addwf	fsr2l,f,c
  9083  00103A  0100               	movlb	0	; () banked
  9084  00103C  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9085  00103E  22DA               	addwfc	fsr2h,f,c
  9086  001040  0100               	movlb	0	; () banked
  9087  001042  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9091  001046  0E03               	movlw	3
  9092  001048  0100               	movlb	0	; () banked
  9093  00104A  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  9094  00104C  0100               	movlb	0	; () banked
  9095  00104E  6F60               	movwf	i2memcpy@d1& (0+255),b
  9096  001050  0E00               	movlw	0
  9097  001052  0100               	movlb	0	; () banked
  9098  001054  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9099  001056  0100               	movlb	0	; () banked
  9100  001058  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  9101  00105A  0100               	movlb	0	; () banked
  9102  00105C  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9103  001060  0100               	movlb	0	; () banked
  9104  001062  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  9105  001066  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  9106  00106A  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9107  00106E  EC4F  F00C         	call	i2_memcpy	;wreg free
  9108                           
  9109                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  9110  001072  0100               	movlb	0	; () banked
  9111  001074  EE20 F088          	lfsr	2,136
  9112  001078  0100               	movlb	0	; () banked
  9113  00107A  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9114  00107C  26D9               	addwf	fsr2l,f,c
  9115  00107E  0100               	movlb	0	; () banked
  9116  001080  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9117  001082  22DA               	addwfc	fsr2h,f,c
  9118  001084  0100               	movlb	0	; () banked
  9119  001086  EE10 F088          	lfsr	1,136
  9120  00108A  0100               	movlb	0	; () banked
  9121  00108C  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9122  00108E  26E1               	addwf	fsr1l,f,c
  9123  001090  0100               	movlb	0	; () banked
  9124  001092  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9125  001094  22E2               	addwfc	fsr1h,f,c
  9126  001096  50E7               	movf	indf1,w,c
  9127  001098  0100               	movlb	0	; () banked
  9128  00109A  6F70               	movwf	??i2_send_msg& (0+255),b
  9129  00109C  0100               	movlb	0	; () banked
  9130  00109E  2970               	incf	??i2_send_msg& (0+255),w,b
  9131  0010A0  0B07               	andlw	7
  9132  0010A2  6EDF               	movwf	indf2,c
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;messages.c: 59: qmsg->full = 1;
  9136  0010A4  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9137  0010A8  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9138  0010AC  0E01               	movlw	1
  9139  0010AE  6EDF               	movwf	indf2,c
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;messages.c: 60: return (1);
  9143  0010B0  0E01               	movlw	1
  9144  0010B2  0012               	return	
  9145  0010B4                     __end_ofi2_send_msg:
  9146                           	opt stack 0
  9147                           pclatu	equ	0xFFB
  9148                           pclath	equ	0xFFA
  9149                           tblptru	equ	0xFF8
  9150                           tblptrh	equ	0xFF7
  9151                           tblptrl	equ	0xFF6
  9152                           tablat	equ	0xFF5
  9153                           prodh	equ	0xFF4
  9154                           prodl	equ	0xFF3
  9155                           intcon	equ	0xFF2
  9156                           postinc0	equ	0xFEE
  9157                           fsr0h	equ	0xFEA
  9158                           fsr0l	equ	0xFE9
  9159                           wreg	equ	0xFE8
  9160                           indf1	equ	0xFE7
  9161                           fsr1h	equ	0xFE2
  9162                           fsr1l	equ	0xFE1
  9163                           bsr	equ	0xFE0
  9164                           indf2	equ	0xFDF
  9165                           postinc2	equ	0xFDE
  9166                           postdec2	equ	0xFDD
  9167                           fsr2h	equ	0xFDA
  9168                           fsr2l	equ	0xFD9
  9169                           status	equ	0xFD8
  9170                           
  9171 ;; *************** function i2_memcpy *****************
  9172 ;; Defined at:
  9173 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  d1              2    0[BANK0 ] PTR void 
  9176 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9177 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9178 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9179 ;;  s1              2    2[BANK0 ] PTR const void 
  9180 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9181 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9182 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  9183 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9184 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  9185 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  9186 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9187 ;;  n               2    4[BANK0 ] unsigned int 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9190 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9191 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9192 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  9193 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9194 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  9195 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  9196 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9197 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9198 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9199 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9200 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  2    0[BANK0 ] PTR void 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9210 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9211 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9213 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9214 ;;Total ram usage:       10 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		i2_send_msg
  9220 ;;		i2_recv_msg
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text54
  9225  00189E                     __ptext54:
  9226                           	opt stack 0
  9227  00189E                     i2_memcpy:
  9228                           	opt stack 16
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;incstack = 0
  9232  00189E  0100               	movlb	0	; () banked
  9233  0018A0  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9234  0018A4  0100               	movlb	0	; () banked
  9235  0018A6  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  9236  0018AA  0100               	movlb	0	; () banked
  9237  0018AC  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9238  0018B0  0100               	movlb	0	; () banked
  9239  0018B2  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  9240  0018B6  D010               	goto	i2l2303
  9241  0018B8                     i2l2297:
  9242                           
  9243                           ; BSR set to: 0
  9244  0018B8  C068  FFD9         	movff	i2memcpy@s,fsr2l
  9245  0018BC  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  9246  0018C0  C066  FFE1         	movff	i2memcpy@d,fsr1l
  9247  0018C4  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  9248  0018C8  CFDF FFE7          	movff	indf2,indf1
  9249                           
  9250                           ; BSR set to: 0
  9251  0018CC  0100               	movlb	0	; () banked
  9252  0018CE  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  9253  0018D0  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  9254                           
  9255                           ; BSR set to: 0
  9256  0018D2  0100               	movlb	0	; () banked
  9257  0018D4  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  9258  0018D6  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  9259  0018D8                     i2l2303:
  9260                           
  9261                           ; BSR set to: 0
  9262  0018D8  0100               	movlb	0	; () banked
  9263  0018DA  0764               	decf	i2memcpy@n& (0+255),f,b
  9264  0018DC  A0D8               	btfss	status,0,c
  9265  0018DE  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  9266  0018E0  0100               	movlb	0	; () banked
  9267  0018E2  2964               	incf	i2memcpy@n& (0+255),w,b
  9268  0018E4  B4D8               	btfsc	status,2,c
  9269  0018E6  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  9270  0018E8  B4D8               	btfsc	status,2,c
  9271                           
  9272                           ; BSR set to: 0
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;	Return value of i2_memcpy is never used
  9276  0018EA  0012               	return	
  9277  0018EC  D7E5               	goto	i2l2297
  9278  0018EE                     __end_ofi2_memcpy:
  9279                           	opt stack 0
  9280                           pclatu	equ	0xFFB
  9281                           pclath	equ	0xFFA
  9282                           tblptru	equ	0xFF8
  9283                           tblptrh	equ	0xFF7
  9284                           tblptrl	equ	0xFF6
  9285                           tablat	equ	0xFF5
  9286                           prodh	equ	0xFF4
  9287                           prodl	equ	0xFF3
  9288                           intcon	equ	0xFF2
  9289                           postinc0	equ	0xFEE
  9290                           fsr0h	equ	0xFEA
  9291                           fsr0l	equ	0xFE9
  9292                           wreg	equ	0xFE8
  9293                           indf1	equ	0xFE7
  9294                           fsr1h	equ	0xFE2
  9295                           fsr1l	equ	0xFE1
  9296                           bsr	equ	0xFE0
  9297                           indf2	equ	0xFDF
  9298                           postinc2	equ	0xFDE
  9299                           postdec2	equ	0xFDD
  9300                           fsr2h	equ	0xFDA
  9301                           fsr2l	equ	0xFD9
  9302                           status	equ	0xFD8
  9303                           
  9304 ;; *************** function _SleepIfOkay *****************
  9305 ;; Defined at:
  9306 ;;		line 226 in file "../src/messages.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;		None
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;		None
  9311 ;; Return value:  Size  Location     Type
  9312 ;;		None               void
  9313 ;; Registers used:
  9314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9324 ;;Total ram usage:        0 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:    2
  9327 ;; This function calls:
  9328 ;;		_check_msg
  9329 ;;		_enter_sleep_mode
  9330 ;;		_in_high_int
  9331 ;;		_in_low_int
  9332 ;; This function is called by:
  9333 ;;		_InterruptHandlerHigh
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text55
  9338  001796                     __ptext55:
  9339                           	opt stack 0
  9340  001796                     _SleepIfOkay:
  9341                           	opt stack 17
  9342                           
  9343                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;incstack = 0
  9347  001796  0100               	movlb	0	; () banked
  9348  001798  67B1               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9349  00179A  D001               	goto	i2l2851
  9350  00179C  0012               	return	
  9351  00179E                     i2l2851:
  9352                           
  9353                           ; BSR set to: 0
  9354                           ;messages.c: 230: }
  9355                           ;messages.c: 233: if (in_low_int()) {
  9356  00179E  EC97  F00C         	call	_in_low_int	;wreg free
  9357  0017A2  0100               	movlb	0	; () banked
  9358  0017A4  5163               	movf	(?_in_low_int+1)& (0+255),w,b
  9359  0017A6  0100               	movlb	0	; () banked
  9360  0017A8  1162               	iorwf	?_in_low_int& (0+255),w,b
  9361  0017AA  A4D8               	btfss	status,2,c
  9362  0017AC  0012               	return	
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;messages.c: 235: }
  9366                           ;messages.c: 238: if (!in_high_int()) {
  9367                           
  9368                           ; BSR set to: 0
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;messages.c: 234: return;
  9372  0017AE  EC4F  F00E         	call	_in_high_int	;wreg free
  9373  0017B2  0100               	movlb	0	; () banked
  9374  0017B4  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9375  0017B6  0100               	movlb	0	; () banked
  9376  0017B8  1160               	iorwf	?_in_high_int& (0+255),w,b
  9377  0017BA  B4D8               	btfsc	status,2,c
  9378  0017BC  0012               	return	
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;messages.c: 240: }
  9382                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9383                           
  9384                           ; BSR set to: 0
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;messages.c: 239: return;
  9388  0017BE  0103               	movlb	3	; () banked
  9389  0017C0  0E03               	movlw	high _ToMainHigh_MQ
  9390  0017C2  0100               	movlb	0	; () banked
  9391  0017C4  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9392  0017C6  0103               	movlb	3	; () banked
  9393  0017C8  0E00               	movlw	low _ToMainHigh_MQ
  9394  0017CA  0100               	movlb	0	; () banked
  9395  0017CC  6F60               	movwf	check_msg@qptr& (0+255),b
  9396  0017CE  EC5E  F00D         	call	_check_msg	;wreg free
  9397  0017D2  0900               	iorlw	0
  9398  0017D4  A4D8               	btfss	status,2,c
  9399  0017D6  0012               	return	
  9400                           
  9401                           ;messages.c: 247: }
  9402                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9403                           
  9404                           ;messages.c: 246: return;
  9405  0017D8  0102               	movlb	2	; () banked
  9406  0017DA  0E02               	movlw	high _ToMainLow_MQ
  9407  0017DC  0100               	movlb	0	; () banked
  9408  0017DE  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9409  0017E0  0102               	movlb	2	; () banked
  9410  0017E2  0E00               	movlw	low _ToMainLow_MQ
  9411  0017E4  0100               	movlb	0	; () banked
  9412  0017E6  6F60               	movwf	check_msg@qptr& (0+255),b
  9413  0017E8  EC5E  F00D         	call	_check_msg	;wreg free
  9414  0017EC  0900               	iorlw	0
  9415  0017EE  B4D8               	btfsc	status,2,c
  9416                           
  9417                           ;messages.c: 250: }
  9418                           ;messages.c: 251: enter_sleep_mode();
  9419                           
  9420                           ;messages.c: 249: return;
  9421  0017F0  EC8B  F00E         	call	_enter_sleep_mode	;wreg free
  9422  0017F4  0012               	return	
  9423  0017F6                     __end_of_SleepIfOkay:
  9424                           	opt stack 0
  9425                           pclatu	equ	0xFFB
  9426                           pclath	equ	0xFFA
  9427                           tblptru	equ	0xFF8
  9428                           tblptrh	equ	0xFF7
  9429                           tblptrl	equ	0xFF6
  9430                           tablat	equ	0xFF5
  9431                           prodh	equ	0xFF4
  9432                           prodl	equ	0xFF3
  9433                           intcon	equ	0xFF2
  9434                           postinc0	equ	0xFEE
  9435                           fsr0h	equ	0xFEA
  9436                           fsr0l	equ	0xFE9
  9437                           wreg	equ	0xFE8
  9438                           indf1	equ	0xFE7
  9439                           fsr1h	equ	0xFE2
  9440                           fsr1l	equ	0xFE1
  9441                           bsr	equ	0xFE0
  9442                           indf2	equ	0xFDF
  9443                           postinc2	equ	0xFDE
  9444                           postdec2	equ	0xFDD
  9445                           fsr2h	equ	0xFDA
  9446                           fsr2l	equ	0xFD9
  9447                           status	equ	0xFD8
  9448                           
  9449 ;; *************** function _in_low_int *****************
  9450 ;; Defined at:
  9451 ;;		line 33 in file "../src/interrupts.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;		None
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;		None
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  2    2[BANK0 ] int 
  9458 ;; Registers used:
  9459 ;;		wreg, status,2, status,0, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9468 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9469 ;;Total ram usage:        2 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    1
  9472 ;; This function calls:
  9473 ;;		_in_high_int
  9474 ;; This function is called by:
  9475 ;;		_SleepIfOkay
  9476 ;;		_in_main
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text56
  9481  00192E                     __ptext56:
  9482                           	opt stack 0
  9483  00192E                     _in_low_int:
  9484                           	opt stack 17
  9485                           
  9486                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9487                           
  9488                           ;incstack = 0
  9489  00192E  ACF2               	btfss	intcon,6,c	;volatile
  9490  001930  D007               	goto	i2l2471
  9491                           
  9492                           ;interrupts.c: 35: return (0);
  9493  001932  0E00               	movlw	0
  9494  001934  0100               	movlb	0	; () banked
  9495  001936  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9496  001938  0E00               	movlw	0
  9497  00193A  0100               	movlb	0	; () banked
  9498  00193C  6F62               	movwf	?_in_low_int& (0+255),b
  9499  00193E  0012               	return	
  9500  001940                     i2l2471:
  9501  001940  EC4F  F00E         	call	_in_high_int	;wreg free
  9502  001944  0100               	movlb	0	; () banked
  9503  001946  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9504  001948  0100               	movlb	0	; () banked
  9505  00194A  1160               	iorwf	?_in_high_int& (0+255),w,b
  9506  00194C  B4D8               	btfsc	status,2,c
  9507  00194E  D007               	goto	i2l2479
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;interrupts.c: 37: return (0);
  9511  001950  0E00               	movlw	0
  9512  001952  0100               	movlb	0	; () banked
  9513  001954  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9514  001956  0E00               	movlw	0
  9515  001958  0100               	movlb	0	; () banked
  9516  00195A  6F62               	movwf	?_in_low_int& (0+255),b
  9517  00195C  0012               	return	
  9518  00195E                     i2l2479:
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;interrupts.c: 39: return (1);
  9522  00195E  0E00               	movlw	0
  9523  001960  0100               	movlb	0	; () banked
  9524  001962  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9525  001964  0E01               	movlw	1
  9526  001966  0100               	movlb	0	; () banked
  9527  001968  6F62               	movwf	?_in_low_int& (0+255),b
  9528  00196A  0012               	return	
  9529  00196C                     __end_of_in_low_int:
  9530                           	opt stack 0
  9531                           pclatu	equ	0xFFB
  9532                           pclath	equ	0xFFA
  9533                           tblptru	equ	0xFF8
  9534                           tblptrh	equ	0xFF7
  9535                           tblptrl	equ	0xFF6
  9536                           tablat	equ	0xFF5
  9537                           prodh	equ	0xFF4
  9538                           prodl	equ	0xFF3
  9539                           intcon	equ	0xFF2
  9540                           postinc0	equ	0xFEE
  9541                           fsr0h	equ	0xFEA
  9542                           fsr0l	equ	0xFE9
  9543                           wreg	equ	0xFE8
  9544                           indf1	equ	0xFE7
  9545                           fsr1h	equ	0xFE2
  9546                           fsr1l	equ	0xFE1
  9547                           bsr	equ	0xFE0
  9548                           indf2	equ	0xFDF
  9549                           postinc2	equ	0xFDE
  9550                           postdec2	equ	0xFDD
  9551                           fsr2h	equ	0xFDA
  9552                           fsr2l	equ	0xFD9
  9553                           status	equ	0xFD8
  9554                           
  9555 ;; *************** function _in_high_int *****************
  9556 ;; Defined at:
  9557 ;;		line 25 in file "../src/interrupts.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;		None
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  2    0[BANK0 ] int 
  9564 ;; Registers used:
  9565 ;;		wreg, status,2
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9574 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9575 ;;Total ram usage:        2 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; This function calls:
  9578 ;;		Nothing
  9579 ;; This function is called by:
  9580 ;;		_in_low_int
  9581 ;;		_SleepIfOkay
  9582 ;;		_in_main
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text57
  9587  001C9E                     __ptext57:
  9588                           	opt stack 0
  9589  001C9E                     _in_high_int:
  9590                           	opt stack 17
  9591                           
  9592                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;incstack = 0
  9596  001C9E  0E00               	movlw	0
  9597  001CA0  AEF2               	btfss	intcon,7,c	;volatile
  9598  001CA2  0E01               	movlw	1
  9599  001CA4  0100               	movlb	0	; () banked
  9600  001CA6  6F60               	movwf	?_in_high_int& (0+255),b
  9601  001CA8  0100               	movlb	0	; () banked
  9602  001CAA  6B61               	clrf	(?_in_high_int+1)& (0+255),b
  9603  001CAC  0012               	return	
  9604  001CAE                     __end_of_in_high_int:
  9605                           	opt stack 0
  9606                           pclatu	equ	0xFFB
  9607                           pclath	equ	0xFFA
  9608                           tblptru	equ	0xFF8
  9609                           tblptrh	equ	0xFF7
  9610                           tblptrl	equ	0xFF6
  9611                           tablat	equ	0xFF5
  9612                           prodh	equ	0xFF4
  9613                           prodl	equ	0xFF3
  9614                           intcon	equ	0xFF2
  9615                           postinc0	equ	0xFEE
  9616                           fsr0h	equ	0xFEA
  9617                           fsr0l	equ	0xFE9
  9618                           wreg	equ	0xFE8
  9619                           indf1	equ	0xFE7
  9620                           fsr1h	equ	0xFE2
  9621                           fsr1l	equ	0xFE1
  9622                           bsr	equ	0xFE0
  9623                           indf2	equ	0xFDF
  9624                           postinc2	equ	0xFDE
  9625                           postdec2	equ	0xFDD
  9626                           fsr2h	equ	0xFDA
  9627                           fsr2l	equ	0xFD9
  9628                           status	equ	0xFD8
  9629                           
  9630 ;; *************** function _enter_sleep_mode *****************
  9631 ;; Defined at:
  9632 ;;		line 202 in file "../src/messages.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;		None
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;		None
  9637 ;; Return value:  Size  Location     Type
  9638 ;;		None               void
  9639 ;; Registers used:
  9640 ;;		None
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9650 ;;Total ram usage:        0 bytes
  9651 ;; Hardware stack levels used:    1
  9652 ;; This function calls:
  9653 ;;		Nothing
  9654 ;; This function is called by:
  9655 ;;		_SleepIfOkay
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text58
  9660  001D16                     __ptext58:
  9661                           	opt stack 0
  9662  001D16                     _enter_sleep_mode:
  9663                           	opt stack 18
  9664                           
  9665                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;incstack = 0
  9669  001D16  8ED3               	bsf	4051,7,c	;volatile
  9670  001D18  0003               	sleep		;# 
  9671  001D1A  0012               	return	
  9672  001D1C                     __end_of_enter_sleep_mode:
  9673                           	opt stack 0
  9674                           pclatu	equ	0xFFB
  9675                           pclath	equ	0xFFA
  9676                           tblptru	equ	0xFF8
  9677                           tblptrh	equ	0xFF7
  9678                           tblptrl	equ	0xFF6
  9679                           tablat	equ	0xFF5
  9680                           prodh	equ	0xFF4
  9681                           prodl	equ	0xFF3
  9682                           intcon	equ	0xFF2
  9683                           postinc0	equ	0xFEE
  9684                           fsr0h	equ	0xFEA
  9685                           fsr0l	equ	0xFE9
  9686                           wreg	equ	0xFE8
  9687                           indf1	equ	0xFE7
  9688                           fsr1h	equ	0xFE2
  9689                           fsr1l	equ	0xFE1
  9690                           bsr	equ	0xFE0
  9691                           indf2	equ	0xFDF
  9692                           postinc2	equ	0xFDE
  9693                           postdec2	equ	0xFDD
  9694                           fsr2h	equ	0xFDA
  9695                           fsr2l	equ	0xFD9
  9696                           status	equ	0xFD8
  9697                           
  9698 ;; *************** function _check_msg *****************
  9699 ;; Defined at:
  9700 ;;		line 220 in file "../src/messages.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9703 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;		None
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1    wreg      unsigned char 
  9708 ;; Registers used:
  9709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9719 ;;Total ram usage:        3 bytes
  9720 ;; Hardware stack levels used:    1
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_SleepIfOkay
  9725 ;;		_block_on_To_msgqueues
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text59
  9730  001ABC                     __ptext59:
  9731                           	opt stack 0
  9732  001ABC                     _check_msg:
  9733                           	opt stack 18
  9734                           
  9735                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9736                           
  9737                           ;incstack = 0
  9738  001ABC  0100               	movlb	0	; () banked
  9739  001ABE  EE20 F089          	lfsr	2,137
  9740  001AC2  0100               	movlb	0	; () banked
  9741  001AC4  5160               	movf	check_msg@qptr& (0+255),w,b
  9742  001AC6  26D9               	addwf	fsr2l,f,c
  9743  001AC8  0100               	movlb	0	; () banked
  9744  001ACA  5161               	movf	(check_msg@qptr+1)& (0+255),w,b
  9745  001ACC  22DA               	addwfc	fsr2h,f,c
  9746  001ACE  50DF               	movf	indf2,w,c
  9747  001AD0  0100               	movlb	0	; () banked
  9748  001AD2  6F62               	movwf	??_check_msg& (0+255),b
  9749  001AD4  0100               	movlb	0	; () banked
  9750  001AD6  5162               	movf	??_check_msg& (0+255),w,b
  9751  001AD8  0D11               	mullw	17
  9752  001ADA  50F3               	movf	prodl,w,c
  9753  001ADC  0100               	movlb	0	; () banked
  9754  001ADE  2560               	addwf	check_msg@qptr& (0+255),w,b
  9755  001AE0  6ED9               	movwf	fsr2l,c
  9756  001AE2  50F4               	movf	prodh,w,c
  9757  001AE4  0100               	movlb	0	; () banked
  9758  001AE6  2161               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9759  001AE8  6EDA               	movwf	fsr2h,c
  9760  001AEA  50DF               	movf	indf2,w,c
  9761  001AEC  0012               	return	
  9762  001AEE                     __end_of_check_msg:
  9763                           	opt stack 0
  9764  0000                     pclatu	equ	0xFFB
  9765                           pclath	equ	0xFFA
  9766                           tblptru	equ	0xFF8
  9767                           tblptrh	equ	0xFF7
  9768                           tblptrl	equ	0xFF6
  9769                           tablat	equ	0xFF5
  9770                           prodh	equ	0xFF4
  9771                           prodl	equ	0xFF3
  9772                           intcon	equ	0xFF2
  9773                           postinc0	equ	0xFEE
  9774                           fsr0h	equ	0xFEA
  9775                           fsr0l	equ	0xFE9
  9776                           wreg	equ	0xFE8
  9777                           indf1	equ	0xFE7
  9778                           fsr1h	equ	0xFE2
  9779                           fsr1l	equ	0xFE1
  9780                           bsr	equ	0xFE0
  9781                           indf2	equ	0xFDF
  9782                           postinc2	equ	0xFDE
  9783                           postdec2	equ	0xFDD
  9784                           fsr2h	equ	0xFDA
  9785                           fsr2l	equ	0xFD9
  9786                           status	equ	0xFD8
  9787                           pclatu	equ	0xFFB
  9788                           pclath	equ	0xFFA
  9789                           tblptru	equ	0xFF8
  9790                           tblptrh	equ	0xFF7
  9791                           tblptrl	equ	0xFF6
  9792                           tablat	equ	0xFF5
  9793                           prodh	equ	0xFF4
  9794                           prodl	equ	0xFF3
  9795                           intcon	equ	0xFF2
  9796                           postinc0	equ	0xFEE
  9797                           fsr0h	equ	0xFEA
  9798                           fsr0l	equ	0xFE9
  9799                           wreg	equ	0xFE8
  9800                           indf1	equ	0xFE7
  9801                           fsr1h	equ	0xFE2
  9802                           fsr1l	equ	0xFE1
  9803                           bsr	equ	0xFE0
  9804                           indf2	equ	0xFDF
  9805                           postinc2	equ	0xFDE
  9806                           postdec2	equ	0xFDD
  9807                           fsr2h	equ	0xFDA
  9808                           fsr2l	equ	0xFD9
  9809                           status	equ	0xFD8
  9810                           
  9811                           	psect	param0
  9812  0000                     pclatu	equ	0xFFB
  9813                           pclath	equ	0xFFA
  9814                           tblptru	equ	0xFF8
  9815                           tblptrh	equ	0xFF7
  9816                           tblptrl	equ	0xFF6
  9817                           tablat	equ	0xFF5
  9818                           prodh	equ	0xFF4
  9819                           prodl	equ	0xFF3
  9820                           intcon	equ	0xFF2
  9821                           postinc0	equ	0xFEE
  9822                           fsr0h	equ	0xFEA
  9823                           fsr0l	equ	0xFE9
  9824                           wreg	equ	0xFE8
  9825                           indf1	equ	0xFE7
  9826                           fsr1h	equ	0xFE2
  9827                           fsr1l	equ	0xFE1
  9828                           bsr	equ	0xFE0
  9829                           indf2	equ	0xFDF
  9830                           postinc2	equ	0xFDE
  9831                           postdec2	equ	0xFDD
  9832                           fsr2h	equ	0xFDA
  9833                           fsr2l	equ	0xFD9
  9834                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         642
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      95
    BANK0           160     61     118
    BANK1           256    146     160
    BANK2           256      0     138
    BANK3           256      0     138
    BANK4           256      0     138
    BANK5           256      0     138
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    retrieve_sensor_values@sensor_bank_ventril	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_ventril(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_front	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_front(COMRAM[14]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK2[14]), ToMainHigh_MQ.data(BANK3[14]), FromMainLow_MQ.data(BANK4[14]), FromMainHigh_MQ.data(BANK5[14]), 
		 -> ToMainLow_MQ.queue.data(BANK2[14]), ToMainHigh_MQ.queue.data(BANK3[14]), FromMainHigh_MQ.queue.data(BANK5[14]), FromMainLow_MQ.queue.data(BANK4[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@whatever_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), 
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK2[14]), ToMainHigh_MQ.data(BANK3[14]), FromMainLow_MQ.data(BANK4[14]), FromMainHigh_MQ.data(BANK5[14]), 
		 -> ToMainLow_MQ.queue.data(BANK2[14]), ToMainHigh_MQ.queue.data(BANK3[14]), FromMainHigh_MQ.queue.data(BANK5[14]), FromMainLow_MQ.queue.data(BANK4[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@whatever_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), 
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    uart_frame_message@inner	PTR unsigned char  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    uart_frame_message@outer	PTR unsigned char  size(2) Largest target is 18
		 -> uart_transmit_interrupt_handler@message(BANK0[18]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> timer1_lthread@whatever_msg(BANK1[14]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_side	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_side(BANK0[14]), 

    i2c_configure_slave@ptr_thingy	PTR unsigned char  size(2) Largest target is 1
		 -> main@need_sensor_data(BANK1[1]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@need_sensor_data(BANK1[1]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@sensor_bank_side(BANK0[14]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> timer1_lthread@whatever_msg(BANK1[14]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 15
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), main@msgbuffer(BANK1[15]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    sp__memcpy	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@whatever_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_retrieve_sensor_values
    _retrieve_sensor_values->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                98    98      0   15462
                                             52 BANK1     94    94      0
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      23    15      8    5337
                                             29 BANK1     23    15      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (2) _send_uart_message                                    3     1      2    2510
                                             26 BANK1      3     1      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _FromMainLow_sendmsg                                  4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (4) _send_msg                                            12     6      6    1798
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  3     1      2     127
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1829
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     158
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    5357
                                             56 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                     16    16      0    1629
                                             29 COMRAM    16    16      0
                _FromMainLow_recvmsg
                 _uart_frame_message
 ---------------------------------------------------------------------------------
 (8) _uart_frame_message                                   8     4      4     528
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4     907
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      30    30      0    2088
                                             26 COMRAM    30    30      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    1640
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    1521
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    5548
                                             47 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    2441
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    12    12      0    2851
                                             37 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                              _blip4
                       _handle_start
             _retrieve_sensor_values
                             i2_blip
                            i2_blip1
                            i2_blip2
                            i2_blip3
 ---------------------------------------------------------------------------------
 (13) i2_blip3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _retrieve_sensor_values                             10     4      6    1246
                                             29 BANK0      8     2      6
               _FromMainHigh_recvmsg
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1013
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7     735
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _blip4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1203
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     713
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
     _blink0
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
     _uart_frame_message

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _blip4
     _handle_start
     _retrieve_sensor_values
       _FromMainHigh_recvmsg
         i2_recv_msg
           i2_memcpy
     i2_blip
     i2_blip1
     i2_blip2
     i2_blip3
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      8A      16       53.9%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      8A      14       53.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8A      12       53.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      8A      10       53.9%
BITBANK1           100      0       0       7        0.0%
BANK1              100     92      A0       8       62.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      76       5       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39D       6        0.0%
DATA                 0      0     39D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 15 18:17:46 2014

                                 ??_debug_configure 0100                     __size_of_retrieve_sensor_values 003A  
                          _MQ_Main_Willing_to_block 00B1                                         _SSPSTATbits 000FC7  
                uart_receive_interrupt_handler@done 004B                           __end_of_ToMainLow_recvmsg 1A50  
                                                bsr 000FE0                           __end_of_ToMainLow_sendmsg 1C16  
                                      __CFG_CP0$OFF 000000                                   i2recv_msg@msgtype 006D  
                                 i2recv_msg@tlength 0074                                ?_FromMainLow_recvmsg 0019  
                                               l114 0930                                                 l553 1BEC  
                                               l554 1BEE                                                 l581 199E  
                                               l582 19A0                                ?_FromMainLow_sendmsg 0116  
                              __size_of_WriteTimer0 0012                                __size_of_WriteTimer1 0012  
                                  ??_uart_configure 0100                                      _FromMainLow_MQ 0400  
                                               prod 000FF3                                                 wreg 000FE8  
                                        _TXSTA1bits 000FAD                                        __CFG_IESO$ON 000000  
                                      ?_in_high_int 0060                                     ReadTimer1@timer 0003  
                               i2recv_msg@maxlength 006C                                                l1130 178C  
                                              l3361 1868                                                l3409 170E  
                                              l3427 0D00                                                l3443 0DBA  
                                              l3381 0F2A                                                l3461 175A  
                                              l3701 09BC                                                l3367 1888  
                                              l3703 09FE                                                l3465 177E  
                                              l3457 1748                                                l3459 1754  
                                              l3723 0A62                                                l3717 0A42  
                                              l3709 0A1E                                                l3735 0AA2  
                                              l3743 0AC4                                                l3729 0A82  
                                              l3681 0936                                                l3665 08AE  
                                              l3739 0AB8                                                l3675 08EE  
                                              l3683 094E                                                l3659 0888  
                                              l3669 08BC                                                _LATB 000F8A  
                                              i1l52 007A                                         main@myByte1 0143  
                                       main@myByte2 0144                                     _FromMainHigh_MQ 0500  
                                              _blip 1CE6                                          i1_recv_msg 1196  
                                              _main 07E2                                                fsr0h 000FEA  
                                              fsr1h 000FE2                                                fsr0l 000FE9  
                                              fsr2h 000FDA                                                indf1 000FE7  
                                              fsr1l 000FE1                                                indf2 000FDF  
                                              fsr2l 000FD9                              __CFG_DSWDTOSC$T1OSCREF 000000  
                                       main@msgtype 016B                                          i1_send_msg 1332  
                                              pclat 000FFA                                                prodh 000FF4  
                                   __end_ofi2_blip1 1D06                                                prodl 000FF3  
                                   __end_ofi2_blip2 1CFE                                     __end_ofi2_blip3 1CF6  
                             handle_start@data_read 0060                                                start 00C0  
                                        i2_recv_msg 0DBE                                          i2_send_msg 0FC8  
                      retrieve_sensor_values@length 0083                           ToMainHigh_recvmsg@msgtype 0118  
                                    send_msg@length 010C                         __size_of_timer0_int_handler 006E  
                                     __CFG_PLLDIV$3 000000              uart_receive_interrupt_handler@checksum 0035  
                             ??_FromMainLow_recvmsg 001D                                               ?_blip 0001  
                             ??_FromMainLow_sendmsg 0119                                               ?_main 0001  
                                             _T0CON 000FD5                                               _T1CON 000FCD  
                                             i1l422 0C84                                     __end_of___lwmod 1796  
                                        i1memcpy@d1 0001                                               i2l310 017A  
                                             i2l304 0602                                               i2l306 0148  
                                             i2l333 043A                                               i2l342 0610  
                                             i2l288 12E6                                          i1memcpy@s1 0003  
                       FromMainHigh_recvmsg@msgtype 0078                                               _TMR0H 000FD7  
                                             _TMR1H 000FCF                                               _TMR0L 000FD6  
                                             _TMR1L 000FCE                                               _TRISB 000F93  
                                             _TRISD 000F95                                          i2memcpy@d1 0060  
                                    __CFG_FCMEN$OFF 000000                                          i2memcpy@s1 0062  
                                      ?_init_queues 0001                           __size_of_enter_sleep_mode 0006  
                                             _blip1 1CDE                                               _blip2 1CD6  
                                             _blip3 1CCE                                               _blip4 1D0E  
                            _retrieve_sensor_values 19A8         uart_receive_interrupt_handler@message_count 0034  
                        ToMainLow_recvmsg@maxlength 011C                                               main@z 0167  
                           timer0_lthread@msgbuffer 0106                                      __CFG_T1DIG$OFF 000000  
                           i2c_configure_slave@addr 0102                                main@need_sensor_data 0164  
                                             tablat 000FF5                             uart_frame_message@inner 0001  
                                             status 000FD8                             uart_frame_message@outer 0003  
                                  __end_ofi1_memcpy 192E                                    __end_ofi2_memcpy 18EE  
                                   __initialization 158A                                        __end_of_blip 1CEE  
                                      __end_of_main 0AFA                                          _ReadTimer1 1C7A  
                       __size_of_timer1_int_handler 002C                          __size_of_ToMainLow_recvmsg 0036  
                        __size_of_ToMainLow_sendmsg 0024                       __size_of_FromMainHigh_recvmsg 0036  
                                    __CFG_OSC$HSPLL 000000                       __size_of_FromMainHigh_sendmsg 002E  
                                            ??_blip 0100                                              ??_main 0134  
                                   send_msg@msgtype 010D                                       __activetblptr 000002  
                                   send_msg@tlength 0111                          FromMainLow_sendmsg@msgtype 0116  
                              __end_of_handle_start 1332                                              ?_blip1 0001  
                                            ?_blip2 0001                                              ?_blip3 0001  
                                            ?_blip4 0001                                              _T1GCON 000F9A  
                                         ??i2_blip1 0060                                           ??i2_blip2 0060  
                                         ??i2_blip3 0060                                              i1l3009 145A  
                                            i1l2601 113A                                              i1l2363 1900  
                                            i1l2443 11DC                                              i1l2603 1168  
                                            i1l3171 0066                                              i1l2369 191C  
                                            i1l3177 0070                                              i1l2395 136A  
                                            i1l2459 1264                                              i1l2911 0B7A  
                                            i1l2913 0B7C                                              i1l2595 10EC  
                                            i1l2941 0C10                                              i1l2925 0BB2  
                                            i2l2303 18D8                                              i1l2599 111A  
                                            i1l2891 0B40                                              i2l2341 0E1E  
                                            i1l2949 0C3C                                              i1l2981 140A  
                                            i1l2969 0C98                                              i1l2897 0B46  
                                        _OpenTimer0 1BCC                                          _OpenTimer1 196C  
                                            i2l2419 1016                                              i2l3163 154C  
                                            i1l2899 0B4C                                              i2l2357 0ED8  
                                            i2l3157 1542                                      __CFG_WDTEN$OFF 000000  
                                            i2l2471 1940                                              i2l2703 01A6  
                                            i2l2297 18B8                                              i2l2705 01D2  
                                            i2l2715 020C                                              i2l2803 05D6  
                                            i2l2565 1302                                              i2l2725 024A  
                                            i2l2479 195E                                              i2l2567 131A  
                                            i2l2831 078A                                              i2l2823 06F8  
                                            i2l2815 0672                                              i2l2743 0314  
                                            i2l2727 028A                                              i2l2809 0614  
                                            i2l2761 03C8                                              i2l2851 179E  
                                            i2l2739 030A                                              i2l2837 07B0  
                                            i2l2765 03D0                                              i2l2685 0140  
                                            i2l2759 0386                                              i2l2679 0132  
                                            _RCREG1 000FAF                         __end_of_i2c_configure_slave 1A1A  
                                     ??_SleepIfOkay 0064                                              _OSCCON 000FD3  
                                            _SPBRG1 000FB0                                         ?i1_recv_msg 000B  
                                            _SSPADD 000FC8                                      __CFG_WPCFG$OFF 000000  
                                            _SSPBUF 000FC9                                              _TXREG1 000FAE  
                                       ?i1_send_msg 000B                                              i2_blip 1D06  
                                timer0_lthread@tptr 0100                                      __CFG_WPDIS$OFF 000000  
                           FromMainLow_recvmsg@data 001B                                         ?i2_recv_msg 006A  
                                       ?i2_send_msg 006A                                      __CFG_XINST$OFF 000000  
                        __end_of_uart_frame_message 1196                    ??_uart_receive_interrupt_handler 001B  
                   ?_uart_receive_interrupt_handler 0001                                     _i2c_int_handler 00C4  
                                            _blink0 1D1C                                    OpenTimer0@config 0100  
                                            _ic_ptr 00D4                                           ??___lwmod 0104  
                                     main@msgbuffer 0145                                    __end_of_init_i2c 16D2  
                                  OpenTimer1@config 0102                                              _memcpy 184E  
                                            clear_0 1590                                              clear_1 159C  
                                            clear_2 15A8                                              clear_3 15B4  
                                            clear_4 15C0                                              clear_5 15CC  
                                            clear_6 15D8                                              main@ic 016C  
                                  __end_of_recv_msg 0DBE       uart_transmit_interrupt_handler@message_status 002D  
                                  __end_of_send_msg 0FC8                                        __pdataCOMRAM 005F  
                             timer0_int_handler@val 0081                             i2c_int_handler@i2c_data 008B  
                                            tblptrh 000FF7                                              tblptrl 000FF6  
                                            tblptru 000FF8                uart_receive_interrupt_handler@msg_id 0038  
                                       init_queue@i 0102                uart_receive_interrupt_handler@status 002B  
                          ToMainLow_recvmsg@msgtype 0118                                __size_of_in_high_int 0010  
                           FromMainLow_sendmsg@data 0117                                     _debug_configure 1CBC  
              uart_transmit_interrupt_handler@index 0050                                          __accesstop 0060  
                           __end_of__initialization 15F0                          __end_of_ToMainHigh_recvmsg 1A86  
                        __end_of_ToMainHigh_sendmsg 1B78                                 uart_frame_message@i 0008  
                                   __CFG_IOL1WAY$ON 000000                                __CFG_WPEND$PAGE_WPFP 000000  
                                  _need_sensor_data 00AF             retrieve_sensor_values@sensor_bank_front 007F  
                       __end_of_init_timer1_lthread 1C68                                 __end_of_SleepIfOkay 17F6  
                                    __pcstackCOMRAM 0001                  i2c_int_handler@sensor_bank_ventril 0192  
                                       ?_ReadTimer1 0001                                       __end_of_blip1 1CE6  
                                     __end_of_blip2 1CDE                                       __end_of_blip3 1CD6  
                                     __end_of_blip4 1D16                     send_uart_message@message_q_code 011C  
                                __size_of_check_msg 0032                                     __CFG_DSWDTPS$G2 000000  
                         timer0_int_handler@msgtype 007F                                 __size_ofi1_recv_msg 00D2  
                               __size_ofi1_send_msg 00AA                                           ?i1_memcpy 0001  
                     __size_of_InterruptHandlerHigh 1582                         __end_of_InterruptHandlerLow 00C0  
                                         ?i2_memcpy 0060                                       _ToMainHigh_MQ 0300  
                               __size_ofi2_recv_msg 011E                                    _enter_sleep_mode 1D16  
                               __size_ofi2_send_msg 00EC                                timer1_lthread@length 0121  
                                           ??_blip1 0100                                             ??_blip2 0100  
                                           ??_blip3 0100                                             ??_blip4 0060  
                                     check_msg@qptr 0060                                timer1_lthread@retval 0133  
                              __size_of_init_queues 0058                                          __pbssBANK0 009D  
                                        __pbssBANK1 0192                                          __pbssBANK2 0200  
                                        __pbssBANK3 0300                                          __pbssBANK4 0400  
                                        __pbssBANK5 0500                                         ?_OpenTimer0 0001  
                                       ?_OpenTimer1 0100                                             ?i2_blip 0001  
                           __end_of_i2c_int_handler 07E2                                  timer1_lthread@tptr 011D  
            retrieve_sensor_values@sensor_bank_side 007D                                             ?_blink0 0001  
                                 recv_msg@maxlength 010C                                     recv_msg@msgtype 010D  
                                   recv_msg@tlength 0114                               __size_of_handle_start 00CA  
                                  WriteTimer0@timer 0062                                             ?_memcpy 0100  
                                  WriteTimer1@timer 0003                                       ??_WriteTimer0 0062  
                                     ??_WriteTimer1 0003                             __size_of_timer0_lthread 000E  
                           __size_of_timer1_lthread 008C                             ?_retrieve_sensor_values 007D  
                                        ??i1_memcpy 0007                                          ??i2_memcpy 0066  
                           __end_of_debug_configure 1CC6                                             _SPBRGH1 000F7F  
                                  i1send_msg@length 000D                    i2c_int_handler@sensor_bank_front 0051  
                                           _SSPCON1 000FC6                                             _SSPCON2 000FC5  
                                           _SSPSTAT 000FC7                                 __size_of_ReadTimer1 0012  
                                 __end_of_check_msg 1AEE                                             i2_blip1 1CFE  
                                           i2_blip2 1CF6                                             i2_blip3 1CEE  
                         timer1_lthread@right_speed 00B3                                           ?_init_i2c 0100  
                                       _SleepIfOkay 1796                                   _send_uart_message 1C36  
                   i2c_int_handler@sensor_bank_side 00C6                                     __size_ofi2_blip 0008  
                                         ?_recv_msg 010A                                          _in_low_int 192E  
                                      _handle_start 1268                                             __Hparam 0000  
                                         ?_send_msg 010A                                             __Lparam 0000  
                                ?_send_uart_message 011A           uart_receive_interrupt_handler@status_2231 002C  
                        __end_of_timer0_int_handler 1668                         __end_of_FromMainLow_recvmsg 1BCC  
                       __end_of_FromMainLow_sendmsg 1B1C                                             ___lwmod 1736  
                                   __size_of_blink0 0004                                     __CFG_STVREN$OFF 000000  
                               ??_send_uart_message 011C                                             __pcinit 158A  
                                   __size_of_memcpy 0050                                          _init_queue 16D2  
                                           __ramtop 0F00                                 __size_of_OpenTimer0 0026  
                               __size_of_OpenTimer1 003C                                             __ptext0 07E2  
                                           __ptext1 1C16                                             __ptext2 1480  
                                           __ptext3 1C36                                             __ptext4 1AEE  
                                           __ptext5 1D1C                                             __ptext6 1736  
                                           __ptext7 1B1C                                             __ptext8 0EDC  
                                           __ptext9 1CAE                      __end_of_retrieve_sensor_values 19E2  
                                         _T0CONbits 000FD5                                   OpenTimer1@config1 0100  
                                         _T1CONbits 000FCD                       i2c_configure_slave@ptr_thingy 0100  
                               __end_of_WriteTimer0 1C9E                                 __end_of_WriteTimer1 1C7A  
                                           main@jjj 0165                                      __pintcode_body 150C  
                      __end_of_FromMainHigh_recvmsg 1ABC                                end_of_initialization 15F0  
                           timer1_lthread@msgbuffer 0123                        __end_of_FromMainHigh_sendmsg 1B4A  
                        FromMainHigh_sendmsg@length 0119                           __end_of_send_uart_message 1C56  
                                           memcpy@d 0106                                             memcpy@n 0104  
                                           memcpy@s 0108                                          ??_init_i2c 0102  
                                      ??i1_recv_msg 0012                             __size_of_uart_configure 0020  
                       i2c_int_handler@data_written 0089                                       __Lmediumconst 0000  
                                           int_func 150C                                        ??i1_send_msg 0011  
          uart_receive_interrupt_handler@bad_end_id 0033          uart_receive_interrupt_handler@bad_start_id 0032  
                                  ?_i2c_int_handler 0001                                        ??i2_recv_msg 0071  
                                        ??_recv_msg 0111                                        ??i2_send_msg 0070  
                                        ??_send_msg 0110     uart_receive_interrupt_handler@gooey_uart_center 001D  
                        __end_of_timer1_int_handler 1BA4                                             postdec2 000FDD  
                                           postinc0 000FEE                                             postinc2 000FDE  
                         ToMainHigh_sendmsg@msgtype 0076                                           _PORTBbits 000F81  
                        timer1_lthread@whatever_msg 0125                                    __CFG_DSBOREN$OFF 000000  
                                _uart_frame_message 10B4                                  __end_ofi1_recv_msg 1268  
                                  __CFG_CPUDIV$OSC1 000000                                  __end_ofi1_send_msg 13DC  
                       FromMainHigh_sendmsg@msgtype 0116              __end_of_uart_receive_interrupt_handler 0CA0  
           __size_of_uart_receive_interrupt_handler 01A6                      _uart_receive_interrupt_handler 0AFA  
                                  ?_debug_configure 0001                                           _TRISBbits 000F93  
                                         _TRISCbits 000F94                                  __end_ofi2_recv_msg 0EDC  
                                __end_ofi2_send_msg 10B4                                 ?_uart_frame_message 0001  
                     FromMainHigh_recvmsg@maxlength 007C                            timer1_int_handler@result 001B  
                                 __CFG_WPFP$PAGE_63 000000                                          main@length 016A  
                                       ?_in_low_int 0062                                      __end_ofi2_blip 1D0E  
                             timer0_lthread@msgtype 0102                                 __CFG_MSSP7B_EN$MSK7 000000  
                      __size_of_i2c_configure_slave 0038                            __end_of_enter_sleep_mode 1D1C  
                                      ??_ReadTimer1 0003                                ??_uart_frame_message 0005  
                                _ToMainHigh_recvmsg 1A50                                           i1memcpy@d 0007  
                                _ToMainHigh_sendmsg 1B4A                                           i1memcpy@n 0005  
                                         i1memcpy@s 0009                                         _BAUDCONbits 000F7E  
                                    __end_of_blink0 1D20                                       __pidataCOMRAM 1D20  
                                    _timer0_lthread 1CAE                                         ?_init_queue 0100  
                                         i2memcpy@d 0066                                         _WriteTimer0 1C8C  
                                       _WriteTimer1 1C68                                           i2memcpy@n 0064  
                                         i2memcpy@s 0068                                      _timer1_lthread 1480  
                                    __end_of_memcpy 189E                                   _enable_interrupts 1CC6  
                                  __CFG_DSWDTEN$OFF 000000                                 ?_ToMainHigh_recvmsg 0118  
                          i2c_int_handler@data_read 008E                                 ?_ToMainHigh_sendmsg 0076  
                                ?_enable_interrupts 0001                                 start_initialization 158A  
                                     ??_in_high_int 0062        uart_receive_interrupt_handler@start_byte_bad 004F  
                                 __size_ofi1_memcpy 0040                                   __size_ofi2_memcpy 0050  
                         FromMainLow_sendmsg@length 0119                                 ??_enable_interrupts 0100  
                                      ??_OpenTimer0 0100                                        ??_OpenTimer1 0101  
                                __end_of_ReadTimer1 1C8C                     uart_receive_interrupt_handler@i 0036  
                        __size_of_send_uart_message 0020                                   main@uart_response 0156  
            uart_transmit_interrupt_handler@message 00B4                                            ??i2_blip 0060  
                      __end_of_InterruptHandlerHigh 158A                                          init_i2c@ic 0100  
                              ??_ToMainHigh_recvmsg 011C                                ??_ToMainHigh_sendmsg 0079  
            uart_transmit_interrupt_handler@msgtype 002C                              __end_of_timer0_lthread 1CBC  
                                          ??_blink0 0100                            i2c_int_handler@error_buf 0086  
                            __end_of_timer1_lthread 150C                                    __CFG_LPT1OSC$OFF 000000  
                         __end_of_enable_interrupts 1CCE                                            ??_memcpy 0106  
                             timer1_lthread@msgtype 011F                                _FromMainHigh_recvmsg 1A86  
uart_receive_interrupt_handler@bad_checksum_message 002D                 uart_receive_interrupt_handler@frame 009D  
               uart_receive_interrupt_handler@index 004D                                _FromMainHigh_sendmsg 1B1C  
               uart_receive_interrupt_handler@error 004C                        __size_of_init_timer1_lthread 0012  
                                __end_of_OpenTimer0 1BF2                                  __end_of_OpenTimer1 19A8  
                          i2c_int_handler@msg_ready 008D                                         __pbssCOMRAM 004A  
                                     ??_init_queues 0103                                       __pcstackBANK0 0060  
                                     __pcstackBANK1 0100                                 __size_of_in_low_int 003E  
                                          ?i2_blip1 0001                                            ?i2_blip2 0001  
                                          ?i2_blip3 0001                            ToMainLow_sendmsg@msgtype 0017  
                      __size_of_InterruptHandlerLow 00A8                                 __end_of_in_high_int 1CAE  
                                    _uart_configure 1C16                                        ?_SleepIfOkay 0001  
                             ToMainLow_recvmsg@data 011A                                        _ToMainLow_MQ 0200  
                               __size_of_init_queue 0064                                           _check_msg 1ABC  
                                         __pnvBANK0 00D4                                   __size_of_init_i2c 006A  
                                      recv_msg@data 010F                                        recv_msg@qmsg 0116  
                                      recv_msg@slot 0113                                        recv_msg@qptr 010A  
                                 __size_of_recv_msg 011E                                           __pintcode 0008  
                                 __size_of_send_msg 00EC                                     ?_timer0_lthread 0100  
                                          ?___lwmod 0100                               ?_FromMainHigh_recvmsg 0078  
                                   ?_timer1_lthread 011D                               ?_FromMainHigh_sendmsg 0116  
                                       __pintcodelo 0018                              ToMainHigh_recvmsg@data 011A  
                        i2c_int_handler@msg_to_send 008C                                   WriteTimer0@timer0 0060  
                                _timer0_int_handler 15FA                          uart_frame_message@checksum 0007  
                                 WriteTimer1@timer1 0001                                __CFG_RTCOSC$T1OSCREF 000000  
                             ToMainLow_sendmsg@data 0018                                      __size_of_blip1 0008  
                                    __size_of_blip2 0008                                      __size_of_blip3 0008  
                                    __size_of_blip4 0008                              __end_of_uart_configure 1C36  
                               i1recv_msg@maxlength 000D                                 ?_timer0_int_handler 0001  
      uart_receive_interrupt_handler@bad_counter_id 0030                                 __end_of_init_queues 184E  
                                          _LATBbits 000F8A                                            _LATDbits 000F8C  
                                        ?_check_msg 0060                                            _IPR1bits 000F9F  
                                          _PIE1bits 000F9D                       retrieve_sensor_values@msgtype 0084  
                                          _PIR1bits 000F9E                              ToMainHigh_sendmsg@data 0077  
                                          _RCONbits 000FD0                                    __CFG_WDTPS$32768 000000  
                                    i1recv_msg@data 0010                                ??_timer0_int_handler 007D  
                                    i1recv_msg@qmsg 0017                                      i1recv_msg@slot 0014  
                                    i1recv_msg@qptr 000B      uart_receive_interrupt_handler@received_counter 004E  
                      FromMainLow_recvmsg@maxlength 001D                          __size_of_enable_interrupts 0008  
                                 i1send_msg@msgtype 000E                                   i1send_msg@tlength 0012  
                        FromMainLow_recvmsg@msgtype 0019                        __size_of_FromMainLow_recvmsg 0028  
                      __size_of_FromMainLow_sendmsg 002E                                timer0_lthread@length 0104  
                                _timer1_int_handler 1B78                                            i1_memcpy 18EE  
                              _InterruptHandlerHigh 0008                                            i2_memcpy 189E  
                              timer0_lthread@msgval 0108                            FromMainHigh_recvmsg@data 007A  
                                       _in_high_int 1C9E                                        send_msg@data 010E  
                               _i2c_configure_slave 19E2                                        send_msg@qmsg 0114  
                                      send_msg@slot 0113                                        send_msg@qptr 010A  
                                   ?_uart_configure 0001                                 ?_timer1_int_handler 0001  
                                  __size_ofi2_blip1 0008                                    __size_ofi2_blip2 0008  
                                  __size_ofi2_blip3 0008                                            __Hparam0 0000  
                                      ??_in_low_int 0064                                            __Lparam0 0000  
                              ?_i2c_configure_slave 0100                                   ?_enter_sleep_mode 0001  
                            ??_FromMainHigh_recvmsg 007C                              ??_FromMainHigh_sendmsg 0119  
                              ??_timer1_int_handler 001B             __end_of_uart_transmit_interrupt_handler 1480  
          __size_of_uart_transmit_interrupt_handler 00A4                   ??_uart_transmit_interrupt_handler 001E  
                  ?_uart_transmit_interrupt_handler 0001                     _uart_transmit_interrupt_handler 13DC  
                          __size_of_i2c_int_handler 071E                                  ??_enter_sleep_mode 0060  
                                  __size_of___lwmod 0060                                        ??_init_queue 0102  
                                      ?_WriteTimer0 0060                                        ?_WriteTimer1 0001  
                          FromMainHigh_sendmsg@data 0117                             ToMainLow_sendmsg@length 001A  
                                 main@t0thread_data 0154                      uart_frame_message@sent_counter 004A  
                             ?_InterruptHandlerHigh 0001                 uart_transmit_interrupt_handler@data 001E  
               uart_transmit_interrupt_handler@done 005F                            timer1_lthread@left_speed 00B2  
                                 i2send_msg@msgtype 006D                         ToMainHigh_recvmsg@maxlength 011C  
                                 i2send_msg@tlength 0071                             init_timer1_lthread@tptr 0100  
                                       _init_queues 17F6                                  __end_of_in_low_int 196C  
                                          __ptext10 1C56                                            __ptext11 17F6  
                                          __ptext20 1CE6                                            __ptext12 16D2  
                                          __ptext21 1A1A                                            __ptext13 1668  
                                        _T1GCONbits 000F9A                                            __ptext30 1BA4  
                                          __ptext22 1A50                                            __ptext14 19E2  
                                          __ptext31 1196                                            __ptext23 0CA0  
                                          __ptext15 1CC6                                            __ptext40 15FA  
                                          __ptext32 0AFA                                            __ptext24 184E  
                                          __ptext16 1CBC                                            __ptext41 1C8C  
                                          __ptext33 1B78                                            __ptext25 196C  
                                          __ptext17 1CCE                                            __ptext50 1268  
                                          __ptext42 00C4                                            __ptext34 1C68  
                                          __ptext26 1BCC                                            __ptext18 1CD6  
                                          __ptext51 1D0E                                            __ptext43 1CEE  
                                          __ptext35 1BF2                                            __ptext19 1CDE  
                                          __ptext52 1B4A                                            __ptext44 1CF6  
                                          __ptext36 1332                                            __ptext28 13DC  
                                          __ptext53 0FC8                                            __ptext45 1CFE  
                                          __ptext37 18EE                                            __ptext29 10B4  
                                          __ptext54 189E                                            __ptext46 1D06  
                                          __ptext38 1C7A                                            __ptext55 1796  
                                          __ptext47 19A8                                            __ptext56 192E  
                                          __ptext48 1A86                                            __ptext57 1C9E  
                                          __ptext49 0DBE                                            __ptext58 1D16  
                                          __ptext59 1ABC                                      i1send_msg@data 000F  
                                    i1send_msg@qmsg 0015                                      i1send_msg@slot 0014  
                                    i1send_msg@qptr 000B                            timer0_int_handler@length 007D  
         retrieve_sensor_values@sensor_bank_ventril 0081                                            _init_i2c 1668  
                          __size_of_debug_configure 000A                                 _init_timer1_lthread 1C56  
                                     __size_of_blip 0008                                       __size_of_main 0318  
                                 main@t1thread_data 0168                                         ??_check_msg 0062  
                                __end_of_init_queue 1736                                __size_of_SleepIfOkay 0060  
                                          _recv_msg 0CA0                               ??_i2c_configure_slave 0102  
                                          _send_msg 0EDC                                      init_queue@qptr 0100  
                          ??_retrieve_sensor_values 0083                                      i2recv_msg@data 006F  
                       __size_of_uart_frame_message 00E2                                      i2recv_msg@qmsg 0076  
                                    i2recv_msg@slot 0073                                      i2recv_msg@qptr 006A  
                                      _SSP1STATbits 000FC7                                 _InterruptHandlerLow 0018  
                              ?_init_timer1_lthread 0100                                     main@sensor_data 0134  
                                       _OSCTUNEbits 000F9B                                          _INTCONbits 000FF2  
                                          memcpy@d1 0100                                            memcpy@s1 0102  
                      i2c_int_handler@overrun_error 008A                                    i2send_msg@length 006C  
                                          intlevel1 0000                                            intlevel2 0000  
                              ?_InterruptHandlerLow 0001                        send_uart_message@message_ptr 011A  
                                  ___lwmod@dividend 0100                                          _RCSTA1bits 000FAC  
                                     ?_handle_start 0001                                    ??_timer0_lthread 0108  
                       __size_of_ToMainHigh_recvmsg 0036                         __size_of_ToMainHigh_sendmsg 002E  
                                        _OSCCONbits 000FD3                                    ??_timer1_lthread 0125  
                                 i1recv_msg@msgtype 000E                                   i1recv_msg@tlength 0015  
                          ToMainHigh_sendmsg@length 0079                               ??_init_timer1_lthread 0102  
                            ??_InterruptHandlerHigh 008F                                   _ToMainLow_recvmsg 1A1A  
                                 _ToMainLow_sendmsg 1BF2                                  main@last_reg_recvd 0142  
                                   ___lwmod@divisor 0102                                  ?_ToMainLow_recvmsg 0118  
                                 ??_i2c_int_handler 0085                                     ___lwmod@counter 0104  
                                ?_ToMainLow_sendmsg 0017                                         _SSPCON1bits 000FC6  
                                       _SSPCON2bits 000FC5                                      i2send_msg@data 006E  
                             ??_InterruptHandlerLow 0039                                 ??_ToMainLow_recvmsg 011C  
                                    i2send_msg@qmsg 0074                                      i2send_msg@slot 0073  
                                    i2send_msg@qptr 006A                                 ??_ToMainLow_sendmsg 001A  
                               _FromMainLow_recvmsg 1BA4                                      ??_handle_start 0060  
                               _FromMainLow_sendmsg 1AEE  
