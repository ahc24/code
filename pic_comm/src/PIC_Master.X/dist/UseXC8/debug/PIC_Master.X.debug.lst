

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 15 17:30:11 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	param0,global,class=BANK0,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001D1C                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for uart_transmit_interrupt_handler@done
    88  001D1C  01                 	db	1
    89  0000                     _BAUDCONbits	set	3966
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATB	set	3978
    93  0000                     _LATBbits	set	3978
    94  0000                     _LATDbits	set	3980
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _OSCTUNEbits	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIR1bits	set	3998
   100  0000                     _PORTBbits	set	3969
   101  0000                     _RCONbits	set	4048
   102  0000                     _RCREG1	set	4015
   103  0000                     _RCSTA1bits	set	4012
   104  0000                     _SPBRG1	set	4016
   105  0000                     _SPBRGH1	set	3967
   106  0000                     _SSP1STATbits	set	4039
   107  0000                     _SSPADD	set	4040
   108  0000                     _SSPBUF	set	4041
   109  0000                     _SSPCON1	set	4038
   110  0000                     _SSPCON1bits	set	4038
   111  0000                     _SSPCON2	set	4037
   112  0000                     _SSPCON2bits	set	4037
   113  0000                     _SSPSTAT	set	4039
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _T0CON	set	4053
   116  0000                     _T0CONbits	set	4053
   117  0000                     _T1CON	set	4045
   118  0000                     _T1CONbits	set	4045
   119  0000                     _T1GCON	set	3994
   120  0000                     _T1GCONbits	set	3994
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR1H	set	4047
   124  0000                     _TMR1L	set	4046
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISBbits	set	3987
   127  0000                     _TRISCbits	set	3988
   128  0000                     _TRISD	set	3989
   129  0000                     _TXREG1	set	4014
   130  0000                     _TXSTA1bits	set	4013
   131                           
   132                           	psect	nvBANK0
   133  0000D4                     __pnvBANK0:
   134                           	opt stack 0
   135  0000D4                     _ic_ptr:
   136                           	opt stack 0
   137  0000D4                     	ds	2
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  001586                     __pcinit:
   143                           	opt stack 0
   144  001586                     start_initialization:
   145                           	opt stack 0
   146  001586                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK5 (138 bytes)
   150  001586  EE05  F000         	lfsr	0,__pbssBANK5
   151  00158A  0E8A               	movlw	138
   152  00158C                     clear_0:
   153  00158C  6AEE               	clrf	postinc0,c
   154  00158E  06E8               	decf	wreg,f,c
   155  001590  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK4 (138 bytes)
   158  001592  EE04  F000         	lfsr	0,__pbssBANK4
   159  001596  0E8A               	movlw	138
   160  001598                     clear_1:
   161  001598  6AEE               	clrf	postinc0,c
   162  00159A  06E8               	decf	wreg,f,c
   163  00159C  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to BANK3 (138 bytes)
   166  00159E  EE03  F000         	lfsr	0,__pbssBANK3
   167  0015A2  0E8A               	movlw	138
   168  0015A4                     clear_2:
   169  0015A4  6AEE               	clrf	postinc0,c
   170  0015A6  06E8               	decf	wreg,f,c
   171  0015A8  E1FD               	bnz	clear_2
   172                           
   173                           ; Clear objects allocated to BANK2 (138 bytes)
   174  0015AA  EE02  F000         	lfsr	0,__pbssBANK2
   175  0015AE  0E8A               	movlw	138
   176  0015B0                     clear_3:
   177  0015B0  6AEE               	clrf	postinc0,c
   178  0015B2  06E8               	decf	wreg,f,c
   179  0015B4  E1FD               	bnz	clear_3
   180                           
   181                           ; Clear objects allocated to BANK1 (14 bytes)
   182  0015B6  EE01  F092         	lfsr	0,__pbssBANK1
   183  0015BA  0E0E               	movlw	14
   184  0015BC                     clear_4:
   185  0015BC  6AEE               	clrf	postinc0,c
   186  0015BE  06E8               	decf	wreg,f,c
   187  0015C0  E1FD               	bnz	clear_4
   188                           
   189                           ; Clear objects allocated to BANK0 (55 bytes)
   190  0015C2  EE00  F09D         	lfsr	0,__pbssBANK0
   191  0015C6  0E37               	movlw	55
   192  0015C8                     clear_5:
   193  0015C8  6AEE               	clrf	postinc0,c
   194  0015CA  06E8               	decf	wreg,f,c
   195  0015CC  E1FD               	bnz	clear_5
   196                           
   197                           ; Clear objects allocated to COMRAM (21 bytes)
   198  0015CE  EE00  F04A         	lfsr	0,__pbssCOMRAM
   199  0015D2  0E15               	movlw	21
   200  0015D4                     clear_6:
   201  0015D4  6AEE               	clrf	postinc0,c
   202  0015D6  06E8               	decf	wreg,f,c
   203  0015D8  E1FD               	bnz	clear_6
   204                           
   205                           ; Initialize objects allocated to COMRAM (1 bytes)
   206                           ; load TBLPTR registers with __pidataCOMRAM
   207  0015DA  0E1C               	movlw	low __pidataCOMRAM
   208  0015DC  6EF6               	movwf	tblptrl,c
   209  0015DE  0E1D               	movlw	high __pidataCOMRAM
   210  0015E0  6EF7               	movwf	tblptrh,c
   211  0015E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   212  0015E4  6EF8               	movwf	tblptru,c
   213  0015E6  0009               	tblrd		*+	;fetch initializer
   214  0015E8  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   215  0015EC                     end_of_initialization:
   216                           	opt stack 0
   217  0015EC                     __end_of__initialization:
   218                           	opt stack 0
   219  0015EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  0015EE  6EF8               	movwf	tblptru,c
   221  0015F0  0100               	movlb	0
   222  0015F2  EFF1  F003         	goto	_main	;jump to C main() function
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           
   230                           	psect	bssCOMRAM
   231  00004A                     __pbssCOMRAM:
   232                           	opt stack 0
   233  00004A                     uart_frame_message@sent_counter:
   234                           	opt stack 0
   235  00004A                     	ds	1
   236  00004B                     uart_receive_interrupt_handler@done:
   237                           	opt stack 0
   238  00004B                     	ds	1
   239  00004C                     uart_receive_interrupt_handler@error:
   240                           	opt stack 0
   241  00004C                     	ds	1
   242  00004D                     uart_receive_interrupt_handler@index:
   243                           	opt stack 0
   244  00004D                     	ds	1
   245  00004E                     uart_receive_interrupt_handler@received_counter:
   246                           	opt stack 0
   247  00004E                     	ds	1
   248  00004F                     uart_receive_interrupt_handler@start_byte_bad:
   249                           	opt stack 0
   250  00004F                     	ds	1
   251  000050                     uart_transmit_interrupt_handler@index:
   252                           	opt stack 0
   253  000050                     	ds	1
   254  000051                     i2c_int_handler@sensor_bank_front:
   255                           	opt stack 0
   256  000051                     	ds	14
   257                           tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           tblptrl	equ	0xFF6
   260                           tablat	equ	0xFF5
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           
   264                           	psect	dataCOMRAM
   265  00005F                     __pdataCOMRAM:
   266                           	opt stack 0
   267  00005F                     uart_transmit_interrupt_handler@done:
   268                           	opt stack 0
   269  00005F                     	ds	1
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           
   277                           	psect	bssBANK0
   278  00009D                     __pbssBANK0:
   279                           	opt stack 0
   280  00009D                     uart_receive_interrupt_handler@frame:
   281                           	opt stack 0
   282  00009D                     	ds	18
   283  0000AF                     _need_sensor_data:
   284                           	opt stack 0
   285  0000AF                     	ds	2
   286  0000B1                     _MQ_Main_Willing_to_block:
   287                           	opt stack 0
   288  0000B1                     	ds	1
   289  0000B2                     timer1_lthread@left_speed:
   290                           	opt stack 0
   291  0000B2                     	ds	1
   292  0000B3                     timer1_lthread@right_speed:
   293                           	opt stack 0
   294  0000B3                     	ds	1
   295  0000B4                     uart_transmit_interrupt_handler@message:
   296                           	opt stack 0
   297  0000B4                     	ds	18
   298  0000C6                     i2c_int_handler@sensor_bank_side:
   299                           	opt stack 0
   300  0000C6                     	ds	14
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308                           	psect	bssBANK1
   309  000192                     __pbssBANK1:
   310                           	opt stack 0
   311  000192                     i2c_int_handler@sensor_bank_ventril:
   312                           	opt stack 0
   313  000192                     	ds	14
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           
   321                           	psect	bssBANK2
   322  000200                     __pbssBANK2:
   323                           	opt stack 0
   324  000200                     _ToMainLow_MQ:
   325                           	opt stack 0
   326  000200                     	ds	138
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           
   334                           	psect	bssBANK3
   335  000300                     __pbssBANK3:
   336                           	opt stack 0
   337  000300                     _ToMainHigh_MQ:
   338                           	opt stack 0
   339  000300                     	ds	138
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347                           	psect	bssBANK4
   348  000400                     __pbssBANK4:
   349                           	opt stack 0
   350  000400                     _FromMainLow_MQ:
   351                           	opt stack 0
   352  000400                     	ds	138
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           
   360                           	psect	bssBANK5
   361  000500                     __pbssBANK5:
   362                           	opt stack 0
   363  000500                     _FromMainHigh_MQ:
   364                           	opt stack 0
   365  000500                     	ds	138
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373                           	psect	cstackBANK1
   374  000100                     __pcstackBANK1:
   375                           	opt stack 0
   376  000100                     ?___lwmod:
   377                           	opt stack 0
   378  000100                     OpenTimer0@config:
   379                           	opt stack 0
   380  000100                     OpenTimer1@config1:
   381                           	opt stack 0
   382  000100                     init_queue@qptr:
   383                           	opt stack 0
   384  000100                     init_i2c@ic:
   385                           	opt stack 0
   386  000100                     i2c_configure_slave@ptr_thingy:
   387                           	opt stack 0
   388  000100                     timer0_lthread@tptr:
   389                           	opt stack 0
   390  000100                     init_timer1_lthread@tptr:
   391                           	opt stack 0
   392  000100                     ___lwmod@dividend:
   393                           	opt stack 0
   394  000100                     memcpy@d1:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x0
   398  000100                     	ds	1
   399  000101                     ??_OpenTimer1:
   400                           
   401                           ; 0 bytes @ 0x1
   402  000101                     	ds	1
   403  000102                     init_queue@i:
   404                           	opt stack 0
   405  000102                     i2c_configure_slave@addr:
   406                           	opt stack 0
   407  000102                     OpenTimer1@config:
   408                           	opt stack 0
   409  000102                     timer0_lthread@msgtype:
   410                           	opt stack 0
   411  000102                     ___lwmod@divisor:
   412                           	opt stack 0
   413  000102                     memcpy@s1:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x2
   417  000102                     	ds	1
   418  000103                     
   419                           ; 0 bytes @ 0x3
   420  000103                     	ds	1
   421  000104                     ___lwmod@counter:
   422                           	opt stack 0
   423  000104                     timer0_lthread@length:
   424                           	opt stack 0
   425  000104                     memcpy@n:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x4
   429  000104                     	ds	2
   430  000106                     timer0_lthread@msgbuffer:
   431                           	opt stack 0
   432  000106                     memcpy@d:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x6
   436  000106                     	ds	2
   437  000108                     timer0_lthread@msgval:
   438                           	opt stack 0
   439  000108                     memcpy@s:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x8
   443  000108                     	ds	2
   444  00010A                     send_msg@qptr:
   445                           	opt stack 0
   446  00010A                     recv_msg@qptr:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0xA
   450  00010A                     	ds	2
   451  00010C                     send_msg@length:
   452                           	opt stack 0
   453  00010C                     recv_msg@maxlength:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0xC
   457  00010C                     	ds	1
   458  00010D                     send_msg@msgtype:
   459                           	opt stack 0
   460  00010D                     recv_msg@msgtype:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0xD
   464  00010D                     	ds	1
   465  00010E                     send_msg@data:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0xE
   469  00010E                     	ds	1
   470  00010F                     recv_msg@data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0xF
   474  00010F                     	ds	1
   475  000110                     ??_send_msg:
   476                           
   477                           ; 0 bytes @ 0x10
   478  000110                     	ds	1
   479  000111                     ??_recv_msg:
   480  000111                     send_msg@tlength:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x11
   484  000111                     	ds	2
   485  000113                     send_msg@slot:
   486                           	opt stack 0
   487  000113                     recv_msg@slot:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x13
   491  000113                     	ds	1
   492  000114                     send_msg@qmsg:
   493                           	opt stack 0
   494  000114                     recv_msg@tlength:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x14
   498  000114                     	ds	2
   499  000116                     FromMainLow_sendmsg@msgtype:
   500                           	opt stack 0
   501  000116                     FromMainHigh_sendmsg@msgtype:
   502                           	opt stack 0
   503  000116                     recv_msg@qmsg:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x16
   507  000116                     	ds	1
   508  000117                     FromMainLow_sendmsg@data:
   509                           	opt stack 0
   510  000117                     FromMainHigh_sendmsg@data:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x17
   514  000117                     	ds	1
   515  000118                     ToMainLow_recvmsg@msgtype:
   516                           	opt stack 0
   517  000118                     ToMainHigh_recvmsg@msgtype:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x18
   521  000118                     	ds	1
   522  000119                     FromMainLow_sendmsg@length:
   523                           	opt stack 0
   524  000119                     FromMainHigh_sendmsg@length:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x19
   528  000119                     	ds	1
   529  00011A                     ToMainLow_recvmsg@data:
   530                           	opt stack 0
   531  00011A                     ToMainHigh_recvmsg@data:
   532                           	opt stack 0
   533  00011A                     send_uart_message@message_ptr:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00011A                     	ds	2
   538  00011C                     ToMainLow_recvmsg@maxlength:
   539                           	opt stack 0
   540  00011C                     ToMainHigh_recvmsg@maxlength:
   541                           	opt stack 0
   542  00011C                     send_uart_message@message_q_code:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x1C
   546  00011C                     	ds	1
   547  00011D                     timer1_lthread@tptr:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x1D
   551  00011D                     	ds	2
   552  00011F                     timer1_lthread@msgtype:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x1F
   556  00011F                     	ds	2
   557  000121                     timer1_lthread@length:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x21
   561  000121                     	ds	2
   562  000123                     timer1_lthread@msgbuffer:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x23
   566  000123                     	ds	2
   567  000125                     timer1_lthread@whatever_msg:
   568                           	opt stack 0
   569                           
   570                           ; 14 bytes @ 0x25
   571  000125                     	ds	14
   572  000133                     timer1_lthread@retval:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x33
   576  000133                     	ds	1
   577  000134                     main@sensor_data:
   578                           	opt stack 0
   579                           
   580                           ; 14 bytes @ 0x34
   581  000134                     	ds	14
   582  000142                     main@last_reg_recvd:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x42
   586  000142                     	ds	1
   587  000143                     main@myByte1:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x43
   591  000143                     	ds	1
   592  000144                     main@myByte2:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x44
   596  000144                     	ds	1
   597  000145                     main@msgbuffer:
   598                           	opt stack 0
   599                           
   600                           ; 15 bytes @ 0x45
   601  000145                     	ds	15
   602  000154                     main@t0thread_data:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x54
   606  000154                     	ds	2
   607  000156                     main@uart_response:
   608                           	opt stack 0
   609                           
   610                           ; 14 bytes @ 0x56
   611  000156                     	ds	14
   612  000164                     main@need_sensor_data:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x64
   616  000164                     	ds	1
   617  000165                     main@jjj:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x65
   621  000165                     	ds	2
   622  000167                     main@z:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x67
   626  000167                     	ds	1
   627  000168                     main@t1thread_data:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x68
   631  000168                     	ds	2
   632  00016A                     main@length:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x6A
   636  00016A                     	ds	1
   637  00016B                     main@msgtype:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x6B
   641  00016B                     	ds	1
   642  00016C                     main@ic:
   643                           	opt stack 0
   644                           
   645                           ; 38 bytes @ 0x6C
   646  00016C                     	ds	38
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           
   654                           	psect	cstackBANK0
   655  000060                     __pcstackBANK0:
   656                           	opt stack 0
   657  000060                     ?_in_high_int:
   658                           	opt stack 0
   659  000060                     handle_start@data_read:
   660                           	opt stack 0
   661  000060                     check_msg@qptr:
   662                           	opt stack 0
   663  000060                     WriteTimer0@timer0:
   664                           	opt stack 0
   665  000060                     i2memcpy@d1:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x0
   669  000060                     	ds	2
   670  000062                     ??_check_msg:
   671  000062                     ?_in_low_int:
   672                           	opt stack 0
   673  000062                     WriteTimer0@timer:
   674                           	opt stack 0
   675  000062                     i2memcpy@s1:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x2
   679  000062                     	ds	2
   680  000064                     i2memcpy@n:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x4
   684  000064                     	ds	2
   685  000066                     i2memcpy@d:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x6
   689  000066                     	ds	2
   690  000068                     i2memcpy@s:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x8
   694  000068                     	ds	2
   695  00006A                     i2send_msg@qptr:
   696                           	opt stack 0
   697  00006A                     i2recv_msg@qptr:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0xA
   701  00006A                     	ds	2
   702  00006C                     i2send_msg@length:
   703                           	opt stack 0
   704  00006C                     i2recv_msg@maxlength:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0xC
   708  00006C                     	ds	1
   709  00006D                     i2send_msg@msgtype:
   710                           	opt stack 0
   711  00006D                     i2recv_msg@msgtype:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0xD
   715  00006D                     	ds	1
   716  00006E                     i2send_msg@data:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0xE
   720  00006E                     	ds	1
   721  00006F                     i2recv_msg@data:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0xF
   725  00006F                     	ds	1
   726  000070                     ??i2_send_msg:
   727                           
   728                           ; 0 bytes @ 0x10
   729  000070                     	ds	1
   730  000071                     ??i2_recv_msg:
   731  000071                     i2send_msg@tlength:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x11
   735  000071                     	ds	2
   736  000073                     i2send_msg@slot:
   737                           	opt stack 0
   738  000073                     i2recv_msg@slot:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x13
   742  000073                     	ds	1
   743  000074                     i2send_msg@qmsg:
   744                           	opt stack 0
   745  000074                     i2recv_msg@tlength:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x14
   749  000074                     	ds	2
   750  000076                     ToMainHigh_sendmsg@msgtype:
   751                           	opt stack 0
   752  000076                     i2recv_msg@qmsg:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x16
   756  000076                     	ds	1
   757  000077                     ToMainHigh_sendmsg@data:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x17
   761  000077                     	ds	1
   762  000078                     FromMainHigh_recvmsg@msgtype:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x18
   766  000078                     	ds	1
   767  000079                     ToMainHigh_sendmsg@length:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x19
   771  000079                     	ds	1
   772  00007A                     FromMainHigh_recvmsg@data:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0x1A
   776  00007A                     	ds	2
   777  00007C                     FromMainHigh_recvmsg@maxlength:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x1C
   781  00007C                     	ds	1
   782  00007D                     retrieve_sensor_values@sensor_bank_side:
   783                           	opt stack 0
   784  00007D                     timer0_int_handler@length:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x1D
   788  00007D                     	ds	2
   789  00007F                     retrieve_sensor_values@sensor_bank_front:
   790                           	opt stack 0
   791  00007F                     timer0_int_handler@msgtype:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x1F
   795  00007F                     	ds	2
   796  000081                     retrieve_sensor_values@sensor_bank_ventril:
   797                           	opt stack 0
   798  000081                     timer0_int_handler@val:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x21
   802  000081                     	ds	2
   803  000083                     retrieve_sensor_values@length:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x23
   807  000083                     	ds	1
   808  000084                     retrieve_sensor_values@msgtype:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x24
   812  000084                     	ds	1
   813  000085                     ??_i2c_int_handler:
   814                           
   815                           ; 0 bytes @ 0x25
   816  000085                     	ds	1
   817  000086                     i2c_int_handler@error_buf:
   818                           	opt stack 0
   819                           
   820                           ; 3 bytes @ 0x26
   821  000086                     	ds	3
   822  000089                     i2c_int_handler@data_written:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x29
   826  000089                     	ds	1
   827  00008A                     i2c_int_handler@overrun_error:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x2A
   831  00008A                     	ds	1
   832  00008B                     i2c_int_handler@i2c_data:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x2B
   836  00008B                     	ds	1
   837  00008C                     i2c_int_handler@msg_to_send:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x2C
   841  00008C                     	ds	1
   842  00008D                     i2c_int_handler@msg_ready:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x2D
   846  00008D                     	ds	1
   847  00008E                     i2c_int_handler@data_read:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x2E
   851  00008E                     	ds	1
   852  00008F                     ??_InterruptHandlerHigh:
   853                           
   854                           ; 0 bytes @ 0x2F
   855  00008F                     	ds	14
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           
   863                           	psect	cstackCOMRAM
   864  000001                     __pcstackCOMRAM:
   865                           	opt stack 0
   866  000001                     ?_ReadTimer1:
   867                           	opt stack 0
   868  000001                     uart_frame_message@inner:
   869                           	opt stack 0
   870  000001                     WriteTimer1@timer1:
   871                           	opt stack 0
   872  000001                     i1memcpy@d1:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x0
   876  000001                     	ds	2
   877  000003                     uart_frame_message@outer:
   878                           	opt stack 0
   879  000003                     ReadTimer1@timer:
   880                           	opt stack 0
   881  000003                     WriteTimer1@timer:
   882                           	opt stack 0
   883  000003                     i1memcpy@s1:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x2
   887  000003                     	ds	2
   888  000005                     ??_uart_frame_message:
   889  000005                     i1memcpy@n:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x4
   893  000005                     	ds	2
   894  000007                     uart_frame_message@checksum:
   895                           	opt stack 0
   896  000007                     i1memcpy@d:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x6
   900  000007                     	ds	1
   901  000008                     uart_frame_message@i:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x7
   905  000008                     	ds	1
   906  000009                     i1memcpy@s:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x8
   910  000009                     	ds	2
   911  00000B                     i1send_msg@qptr:
   912                           	opt stack 0
   913  00000B                     i1recv_msg@qptr:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0xA
   917  00000B                     	ds	2
   918  00000D                     i1send_msg@length:
   919                           	opt stack 0
   920  00000D                     i1recv_msg@maxlength:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0xC
   924  00000D                     	ds	1
   925  00000E                     i1send_msg@msgtype:
   926                           	opt stack 0
   927  00000E                     i1recv_msg@msgtype:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0xD
   931  00000E                     	ds	1
   932  00000F                     i1send_msg@data:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0xE
   936  00000F                     	ds	1
   937  000010                     i1recv_msg@data:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0xF
   941  000010                     	ds	1
   942  000011                     ??i1_send_msg:
   943                           
   944                           ; 0 bytes @ 0x10
   945  000011                     	ds	1
   946  000012                     ??i1_recv_msg:
   947  000012                     i1send_msg@tlength:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x11
   951  000012                     	ds	2
   952  000014                     i1send_msg@slot:
   953                           	opt stack 0
   954  000014                     i1recv_msg@slot:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x13
   958  000014                     	ds	1
   959  000015                     i1send_msg@qmsg:
   960                           	opt stack 0
   961  000015                     i1recv_msg@tlength:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x14
   965  000015                     	ds	2
   966  000017                     ToMainLow_sendmsg@msgtype:
   967                           	opt stack 0
   968  000017                     i1recv_msg@qmsg:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x16
   972  000017                     	ds	1
   973  000018                     ToMainLow_sendmsg@data:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x17
   977  000018                     	ds	1
   978  000019                     FromMainLow_recvmsg@msgtype:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x18
   982  000019                     	ds	1
   983  00001A                     ToMainLow_sendmsg@length:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x19
   987  00001A                     	ds	1
   988  00001B                     ??_uart_receive_interrupt_handler:
   989  00001B                     FromMainLow_recvmsg@data:
   990                           	opt stack 0
   991  00001B                     timer1_int_handler@result:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x1A
   995  00001B                     	ds	2
   996  00001D                     FromMainLow_recvmsg@maxlength:
   997                           	opt stack 0
   998  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   999                           	opt stack 0
  1000                           
  1001                           ; 14 bytes @ 0x1C
  1002  00001D                     	ds	1
  1003  00001E                     uart_transmit_interrupt_handler@data:
  1004                           	opt stack 0
  1005                           
  1006                           ; 14 bytes @ 0x1D
  1007  00001E                     	ds	13
  1008  00002B                     uart_receive_interrupt_handler@status:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x2A
  1012  00002B                     	ds	1
  1013  00002C                     uart_receive_interrupt_handler@status_2231:
  1014                           	opt stack 0
  1015  00002C                     uart_transmit_interrupt_handler@msgtype:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x2B
  1019  00002C                     	ds	1
  1020  00002D                     uart_transmit_interrupt_handler@message_status:
  1021                           	opt stack 0
  1022  00002D                     uart_receive_interrupt_handler@bad_checksum_message:
  1023                           	opt stack 0
  1024                           
  1025                           ; 3 bytes @ 0x2C
  1026  00002D                     	ds	3
  1027  000030                     uart_receive_interrupt_handler@bad_counter_id:
  1028                           	opt stack 0
  1029                           
  1030                           ; 2 bytes @ 0x2F
  1031  000030                     	ds	2
  1032  000032                     uart_receive_interrupt_handler@bad_start_id:
  1033                           	opt stack 0
  1034                           
  1035                           ; 1 bytes @ 0x31
  1036  000032                     	ds	1
  1037  000033                     uart_receive_interrupt_handler@bad_end_id:
  1038                           	opt stack 0
  1039                           
  1040                           ; 1 bytes @ 0x32
  1041  000033                     	ds	1
  1042  000034                     uart_receive_interrupt_handler@message_count:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0x33
  1046  000034                     	ds	1
  1047  000035                     uart_receive_interrupt_handler@checksum:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x34
  1051  000035                     	ds	1
  1052  000036                     uart_receive_interrupt_handler@i:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x35
  1056  000036                     	ds	2
  1057  000038                     uart_receive_interrupt_handler@msg_id:
  1058                           	opt stack 0
  1059                           
  1060                           ; 1 bytes @ 0x37
  1061  000038                     	ds	1
  1062  000039                     ??_InterruptHandlerLow:
  1063                           
  1064                           ; 0 bytes @ 0x38
  1065  000039                     	ds	17
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           
  1073 ;;
  1074 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1075 ;;
  1076 ;; *************** function _main *****************
  1077 ;; Defined at:
  1078 ;;		line 188 in file "../src/main.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  uart_respons   14   86[BANK1 ] unsigned char [14]
  1083 ;;  jjj             2  101[BANK1 ] int 
  1084 ;;  ic             38  108[BANK1 ] struct __i2c_comm
  1085 ;;  msgbuffer      15   69[BANK1 ] unsigned char [15]
  1086 ;;  sensor_data    14   52[BANK1 ] unsigned char [14]
  1087 ;;  t1thread_dat    2  104[BANK1 ] struct __timer1_thread_s
  1088 ;;  t0thread_dat    2   84[BANK1 ] struct __timer0_thread_s
  1089 ;;  uthread_data    2    0        struct __uart_thread_str
  1090 ;;  msgtype         1  107[BANK1 ] unsigned char 
  1091 ;;  length          1  106[BANK1 ] char 
  1092 ;;  z               1  103[BANK1 ] unsigned char 
  1093 ;;  need_sensor_    1  100[BANK1 ] unsigned char 
  1094 ;;  myByte2         1   68[BANK1 ] unsigned char 
  1095 ;;  myByte1         1   67[BANK1 ] unsigned char 
  1096 ;;  last_reg_rec    1   66[BANK1 ] unsigned char 
  1097 ;;  i               1    0        unsigned char 
  1098 ;;  c               1    0        unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;		None               void
  1101 ;; Registers used:
  1102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1109 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1111 ;;      Totals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;Total ram usage:       94 bytes
  1113 ;; Hardware stack levels required when called:   16
  1114 ;; This function calls:
  1115 ;;		_OpenTimer0
  1116 ;;		_OpenTimer1
  1117 ;;		_ToMainHigh_recvmsg
  1118 ;;		_ToMainLow_recvmsg
  1119 ;;		_blip
  1120 ;;		_blip1
  1121 ;;		_blip2
  1122 ;;		_blip3
  1123 ;;		_debug_configure
  1124 ;;		_enable_interrupts
  1125 ;;		_i2c_configure_slave
  1126 ;;		_init_i2c
  1127 ;;		_init_queues
  1128 ;;		_init_timer1_lthread
  1129 ;;		_send_uart_message
  1130 ;;		_timer0_lthread
  1131 ;;		_timer1_lthread
  1132 ;;		_uart_configure
  1133 ;; This function is called by:
  1134 ;;		Startup code after reset
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text0
  1139  0007E2                     __ptext0:
  1140                           	opt stack 0
  1141  0007E2                     _main:
  1142                           	opt stack 14
  1143                           
  1144                           ;main.c: 189: char c;
  1145                           ;main.c: 190: signed char length;
  1146                           ;main.c: 191: unsigned char msgtype;
  1147                           ;main.c: 192: unsigned char last_reg_recvd;
  1148                           ;main.c: 193: i2c_comm ic;
  1149                           ;main.c: 194: unsigned char msgbuffer[14 + 1];
  1150                           ;main.c: 195: unsigned char i;
  1151                           ;main.c: 196: uart_thread_struct uthread_data;
  1152                           ;main.c: 197: timer1_thread_struct t1thread_data;
  1153                           ;main.c: 198: timer0_thread_struct t0thread_data;
  1154                           ;main.c: 199: unsigned char need_sensor_data = 1;
  1155                           
  1156                           ;incstack = 0
  1157  0007E2  0E01               	movlw	1
  1158  0007E4  0101               	movlb	1	; () banked
  1159  0007E6  6F64               	movwf	main@need_sensor_data& (0+255),b
  1160                           
  1161                           ;main.c: 215: OSCCON = 0xE0;
  1162  0007E8  0EE0               	movlw	224
  1163  0007EA  6ED3               	movwf	4051,c	;volatile
  1164                           
  1165                           ; BSR set to: 1
  1166                           ;main.c: 223: OSCTUNEbits.PLLEN = 1;
  1167  0007EC  8C9B               	bsf	3995,6,c	;volatile
  1168                           
  1169                           ; BSR set to: 1
  1170                           ;main.c: 238: init_i2c(&ic);
  1171  0007EE  0101               	movlb	1	; () banked
  1172  0007F0  0E01               	movlw	high main@ic
  1173  0007F2  0101               	movlb	1	; () banked
  1174  0007F4  6F01               	movwf	(init_i2c@ic+1)& (0+255),b
  1175  0007F6  0101               	movlb	1	; () banked
  1176  0007F8  0E6C               	movlw	low main@ic
  1177  0007FA  0101               	movlb	1	; () banked
  1178  0007FC  6F00               	movwf	init_i2c@ic& (0+255),b
  1179  0007FE  EC32  F00B         	call	_init_i2c	;wreg free
  1180                           
  1181                           ;main.c: 241: init_timer1_lthread(&t1thread_data);
  1182  000802  0101               	movlb	1	; () banked
  1183  000804  0E01               	movlw	high main@t1thread_data
  1184  000806  0101               	movlb	1	; () banked
  1185  000808  6F01               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1186  00080A  0101               	movlb	1	; () banked
  1187  00080C  0E68               	movlw	low main@t1thread_data
  1188  00080E  0101               	movlb	1	; () banked
  1189  000810  6F00               	movwf	init_timer1_lthread@tptr& (0+255),b
  1190  000812  EC29  F00E         	call	_init_timer1_lthread	;wreg free
  1191                           
  1192                           ;main.c: 244: init_queues();
  1193  000816  ECF9  F00B         	call	_init_queues	;wreg free
  1194                           
  1195                           ;main.c: 248: TRISB = 0x0;
  1196  00081A  0E00               	movlw	0
  1197  00081C  6E93               	movwf	3987,c	;volatile
  1198                           
  1199                           ;main.c: 249: LATB = 0x0;
  1200  00081E  0E00               	movlw	0
  1201  000820  6E8A               	movwf	3978,c	;volatile
  1202                           
  1203                           ;main.c: 262: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1204  000822  0E96               	movlw	150
  1205  000824  ECE4  F00D         	call	_OpenTimer0
  1206                           
  1207                           ;main.c: 269: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1208  000828  0E00               	movlw	0
  1209  00082A  0101               	movlb	1	; () banked
  1210  00082C  6F00               	movwf	OpenTimer1@config1& (0+255),b
  1211  00082E  0E9B               	movlw	155
  1212  000830  ECB4  F00C         	call	_OpenTimer1
  1213                           
  1214                           ;main.c: 278: IPR1bits.TMR1IP = 0;
  1215  000834  909F               	bcf	3999,0,c	;volatile
  1216                           
  1217                           ;main.c: 280: IPR1bits.RCIP = 0;
  1218  000836  9A9F               	bcf	3999,5,c	;volatile
  1219                           
  1220                           ;main.c: 283: IPR1bits.SSPIP = 1;
  1221  000838  869F               	bsf	3999,3,c	;volatile
  1222                           
  1223                           ;main.c: 292: i2c_configure_slave(0x9E,&need_sensor_data);
  1224  00083A  0101               	movlb	1	; () banked
  1225  00083C  0E01               	movlw	high main@need_sensor_data
  1226  00083E  0101               	movlb	1	; () banked
  1227  000840  6F01               	movwf	(i2c_configure_slave@ptr_thingy+1)& (0+255),b
  1228  000842  0101               	movlb	1	; () banked
  1229  000844  0E64               	movlw	low main@need_sensor_data
  1230  000846  0101               	movlb	1	; () banked
  1231  000848  6F00               	movwf	i2c_configure_slave@ptr_thingy& (0+255),b
  1232  00084A  0E9E               	movlw	158
  1233  00084C  ECEF  F00C         	call	_i2c_configure_slave
  1234                           
  1235                           ;main.c: 307: PIE1bits.SSPIE = 1;
  1236  000850  869D               	bsf	3997,3,c	;volatile
  1237                           
  1238                           ;main.c: 332: debug_configure();
  1239  000852  EC5C  F00E         	call	_debug_configure	;wreg free
  1240                           
  1241                           ;main.c: 333: blip();
  1242  000856  EC71  F00E         	call	_blip	;wreg free
  1243                           
  1244                           ;main.c: 334: blip1();
  1245  00085A  EC6D  F00E         	call	_blip1	;wreg free
  1246                           
  1247                           ;main.c: 335: blip2();
  1248  00085E  EC69  F00E         	call	_blip2	;wreg free
  1249                           
  1250                           ;main.c: 336: blip3();
  1251  000862  EC65  F00E         	call	_blip3	;wreg free
  1252                           
  1253                           ;main.c: 345: enable_interrupts();
  1254  000866  EC61  F00E         	call	_enable_interrupts	;wreg free
  1255                           
  1256                           ;main.c: 358: uart_configure();
  1257  00086A  EC09  F00E         	call	_uart_configure	;wreg free
  1258                           
  1259                           ;main.c: 360: unsigned char myByte1 = 0x44;
  1260  00086E  0E44               	movlw	68
  1261  000870  0101               	movlb	1	; () banked
  1262  000872  6F43               	movwf	main@myByte1& (0+255),b
  1263                           
  1264                           ; BSR set to: 1
  1265                           ;main.c: 361: unsigned char myByte2 = 0x44;
  1266  000874  0E44               	movlw	68
  1267  000876  0101               	movlb	1	; () banked
  1268  000878  6F44               	movwf	main@myByte2& (0+255),b
  1269                           
  1270                           ; BSR set to: 1
  1271                           ;main.c: 369: unsigned char sensor_data[14];
  1272                           ;main.c: 370: sensor_data[0] = 0x03;
  1273  00087A  0E03               	movlw	3
  1274  00087C  0101               	movlb	1	; () banked
  1275  00087E  6F34               	movwf	main@sensor_data& (0+255),b
  1276                           
  1277                           ; BSR set to: 1
  1278                           ;main.c: 371: unsigned char z;
  1279                           ;main.c: 372: for(z=1;z<14;z++)
  1280  000880  0E01               	movlw	1
  1281  000882  0101               	movlb	1	; () banked
  1282  000884  6F67               	movwf	main@z& (0+255),b
  1283  000886  D00F               	goto	L3
  1284  000888                     l3655:
  1285                           
  1286                           ; BSR set to: 1
  1287                           ;main.c: 373: {
  1288                           ;main.c: 374: sensor_data[z] = 0x00;
  1289  000888  0101               	movlb	1	; () banked
  1290  00088A  5167               	movf	main@z& (0+255),w,b
  1291  00088C  0D01               	mullw	1
  1292  00088E  0101               	movlb	1	; () banked
  1293  000890  0E34               	movlw	low main@sensor_data
  1294  000892  24F3               	addwf	prodl,w,c
  1295  000894  6ED9               	movwf	fsr2l,c
  1296  000896  0101               	movlb	1	; () banked
  1297  000898  0E01               	movlw	high main@sensor_data
  1298  00089A  20F4               	addwfc	prodh,w,c
  1299  00089C  6EDA               	movwf	fsr2h,c
  1300  00089E  0E00               	movlw	0
  1301  0008A0  6EDF               	movwf	indf2,c
  1302                           
  1303                           ; BSR set to: 1
  1304  0008A2  0101               	movlb	1	; () banked
  1305  0008A4  2B67               	incf	main@z& (0+255),f,b
  1306  0008A6                     L3:
  1307                           
  1308                           ; BSR set to: 1
  1309  0008A6  0E0D               	movlw	13
  1310  0008A8  0101               	movlb	1	; () banked
  1311  0008AA  6567               	cpfsgt	main@z& (0+255),b
  1312  0008AC  D7ED               	goto	l3655
  1313  0008AE                     l3661:
  1314                           
  1315                           ;main.c: 390: if( need_sensor_data )
  1316  0008AE  0101               	movlb	1	; () banked
  1317  0008B0  5164               	movf	main@need_sensor_data& (0+255),w,b
  1318  0008B2  B4D8               	btfsc	status,2,c
  1319  0008B4  D003               	goto	l3665
  1320                           
  1321                           ; BSR set to: 1
  1322                           ;main.c: 391: {
  1323                           ;main.c: 394: need_sensor_data = 0;
  1324  0008B6  0E00               	movlw	0
  1325  0008B8  0101               	movlb	1	; () banked
  1326  0008BA  6F64               	movwf	main@need_sensor_data& (0+255),b
  1327  0008BC                     l3665:
  1328                           
  1329                           ; BSR set to: 1
  1330                           ;main.c: 395: }
  1331                           ;main.c: 405: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1332  0008BC  0101               	movlb	1	; () banked
  1333  0008BE  0E01               	movlw	high main@msgtype
  1334  0008C0  0101               	movlb	1	; () banked
  1335  0008C2  6F19               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1336  0008C4  0101               	movlb	1	; () banked
  1337  0008C6  0E6B               	movlw	low main@msgtype
  1338  0008C8  0101               	movlb	1	; () banked
  1339  0008CA  6F18               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1340  0008CC  0101               	movlb	1	; () banked
  1341  0008CE  0E01               	movlw	high main@msgbuffer
  1342  0008D0  0101               	movlb	1	; () banked
  1343  0008D2  6F1B               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1344  0008D4  0101               	movlb	1	; () banked
  1345  0008D6  0E45               	movlw	low main@msgbuffer
  1346  0008D8  0101               	movlb	1	; () banked
  1347  0008DA  6F1A               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1348  0008DC  0E0E               	movlw	14
  1349  0008DE  EC26  F00D         	call	_ToMainHigh_recvmsg
  1350  0008E2  0101               	movlb	1	; () banked
  1351  0008E4  6F6A               	movwf	main@length& (0+255),b
  1352                           
  1353                           ; BSR set to: 1
  1354                           ;main.c: 406: if (length < 0) {
  1355  0008E6  0101               	movlb	1	; () banked
  1356  0008E8  BF6A               	btfsc	main@length& (0+255),7,b
  1357  0008EA  D031               	goto	l3679
  1358  0008EC  D024               	goto	l3677
  1359  0008EE                     l3671:
  1360                           
  1361                           ; BSR set to: 1
  1362                           ;main.c: 416: {
  1363                           ;main.c: 417: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1364  0008EE  0101               	movlb	1	; () banked
  1365  0008F0  0E01               	movlw	high main@t0thread_data
  1366  0008F2  0101               	movlb	1	; () banked
  1367  0008F4  6F01               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1368  0008F6  0101               	movlb	1	; () banked
  1369  0008F8  0E54               	movlw	low main@t0thread_data
  1370  0008FA  0101               	movlb	1	; () banked
  1371  0008FC  6F00               	movwf	timer0_lthread@tptr& (0+255),b
  1372  0008FE  0101               	movlb	1	; () banked
  1373  000900  C16B  F102         	movff	main@msgtype,timer0_lthread@msgtype
  1374  000904  0101               	movlb	1	; () banked
  1375  000906  6B03               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1376  000908  0101               	movlb	1	; () banked
  1377  00090A  516A               	movf	main@length& (0+255),w,b
  1378  00090C  0101               	movlb	1	; () banked
  1379  00090E  6F04               	movwf	timer0_lthread@length& (0+255),b
  1380  000910  0101               	movlb	1	; () banked
  1381  000912  6B05               	clrf	(timer0_lthread@length+1)& (0+255),b
  1382  000914  0101               	movlb	1	; () banked
  1383  000916  BF04               	btfsc	timer0_lthread@length& (0+255),7,b
  1384  000918  0705               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1385  00091A  0101               	movlb	1	; () banked
  1386  00091C  0E01               	movlw	high main@msgbuffer
  1387  00091E  0101               	movlb	1	; () banked
  1388  000920  6F07               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1389  000922  0101               	movlb	1	; () banked
  1390  000924  0E45               	movlw	low main@msgbuffer
  1391  000926  0101               	movlb	1	; () banked
  1392  000928  6F06               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1393  00092A  EC55  F00E         	call	_timer0_lthread	;wreg free
  1394                           
  1395                           ;main.c: 418: break;
  1396  00092E  D00F               	goto	l3679
  1397  000930                     l114:
  1398                           
  1399                           ;main.c: 421: case 41:
  1400                           ;main.c: 422: {
  1401                           ;main.c: 425: last_reg_recvd = msgbuffer[0];
  1402  000930  C145  F142         	movff	main@msgbuffer,main@last_reg_recvd
  1403                           
  1404                           ;main.c: 426: break;
  1405  000934  D00C               	goto	l3679
  1406  000936                     l3677:
  1407  000936  0101               	movlb	1	; () banked
  1408  000938  516B               	movf	main@msgtype& (0+255),w,b
  1409                           
  1410                           ; Switch size 1, requested type "space"
  1411                           ; Number of cases is 4, Range of values is 10 to 42
  1412                           ; switch strategies available:
  1413                           ; Name         Instructions Cycles
  1414                           ; simple_byte           13     7 (average)
  1415                           ;	Chosen strategy is simple_byte
  1416  00093A  0A0A               	xorlw	10	; case 10
  1417  00093C  B4D8               	btfsc	status,2,c
  1418  00093E  D7D7               	goto	l3671
  1419  000940  0A22               	xorlw	34	; case 40
  1420  000942  B4D8               	btfsc	status,2,c
  1421  000944  D7F5               	goto	l114
  1422  000946  0A01               	xorlw	1	; case 41
  1423  000948  B4D8               	btfsc	status,2,c
  1424  00094A  D7F2               	goto	l114
  1425  00094C  0A03               	xorlw	3	; case 42
  1426  00094E                     l3679:
  1427                           
  1428                           ;main.c: 445: }
  1429                           ;main.c: 448: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1430  00094E  0101               	movlb	1	; () banked
  1431  000950  0E01               	movlw	high main@msgtype
  1432  000952  0101               	movlb	1	; () banked
  1433  000954  6F19               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1434  000956  0101               	movlb	1	; () banked
  1435  000958  0E6B               	movlw	low main@msgtype
  1436  00095A  0101               	movlb	1	; () banked
  1437  00095C  6F18               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1438  00095E  0101               	movlb	1	; () banked
  1439  000960  0E01               	movlw	high main@msgbuffer
  1440  000962  0101               	movlb	1	; () banked
  1441  000964  6F1B               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1442  000966  0101               	movlb	1	; () banked
  1443  000968  0E45               	movlw	low main@msgbuffer
  1444  00096A  0101               	movlb	1	; () banked
  1445  00096C  6F1A               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1446  00096E  0E0E               	movlw	14
  1447  000970  EC0B  F00D         	call	_ToMainLow_recvmsg
  1448  000974  0101               	movlb	1	; () banked
  1449  000976  6F6A               	movwf	main@length& (0+255),b
  1450                           
  1451                           ; BSR set to: 1
  1452                           ;main.c: 449: if (length < 0) {
  1453  000978  0101               	movlb	1	; () banked
  1454  00097A  BF6A               	btfsc	main@length& (0+255),7,b
  1455  00097C  D798               	goto	l3661
  1456                           
  1457                           ; BSR set to: 1
  1458                           ;main.c: 455: else
  1459                           ;main.c: 456: {
  1460                           ;main.c: 457: unsigned char uart_response[14];
  1461                           ;main.c: 458: int jjj;
  1462                           ;main.c: 459: for(jjj=0;jjj<14;jjj++)
  1463                           
  1464                           ; BSR set to: 1
  1465                           
  1466                           ; BSR set to: 1
  1467                           ;main.c: 453: }
  1468                           ;main.c: 454: }
  1469                           
  1470                           ; BSR set to: 1
  1471  00097E  0E00               	movlw	0
  1472  000980  0101               	movlb	1	; () banked
  1473  000982  6F66               	movwf	(main@jjj+1)& (0+255),b
  1474  000984  0E00               	movlw	0
  1475  000986  0101               	movlb	1	; () banked
  1476  000988  6F65               	movwf	main@jjj& (0+255),b
  1477  00098A                     
  1478                           ; BSR set to: 1
  1479  00098A  0101               	movlb	1	; () banked
  1480  00098C  5166               	movf	(main@jjj+1)& (0+255),w,b
  1481  00098E  0A80               	xorlw	128
  1482  000990  0F80               	addlw	-128
  1483  000992  0E0E               	movlw	14
  1484  000994  B4D8               	btfsc	status,2,c
  1485  000996  5D65               	subwf	main@jjj& (0+255),w,b
  1486  000998  B0D8               	btfsc	status,0,c
  1487  00099A  D094               	goto	l3739
  1488                           
  1489                           ; BSR set to: 1
  1490                           ;main.c: 460: {
  1491                           ;main.c: 461: uart_response[jjj] = 0;
  1492                           
  1493                           ; BSR set to: 1
  1494                           
  1495                           ; BSR set to: 1
  1496  00099C  0101               	movlb	1	; () banked
  1497  00099E  0E56               	movlw	low main@uart_response
  1498  0009A0  0101               	movlb	1	; () banked
  1499  0009A2  2565               	addwf	main@jjj& (0+255),w,b
  1500  0009A4  6ED9               	movwf	fsr2l,c
  1501  0009A6  0101               	movlb	1	; () banked
  1502  0009A8  0E01               	movlw	high main@uart_response
  1503  0009AA  0101               	movlb	1	; () banked
  1504  0009AC  2166               	addwfc	(main@jjj+1)& (0+255),w,b
  1505  0009AE  6EDA               	movwf	fsr2h,c
  1506  0009B0  0E00               	movlw	0
  1507  0009B2  6EDF               	movwf	indf2,c
  1508                           
  1509                           ; BSR set to: 1
  1510  0009B4  0101               	movlb	1	; () banked
  1511  0009B6  4B65               	infsnz	main@jjj& (0+255),f,b
  1512  0009B8  2B66               	incf	(main@jjj+1)& (0+255),f,b
  1513  0009BA  D7E7               	goto	L2
  1514  0009BC                     l3697:
  1515                           
  1516                           ; BSR set to: 1
  1517                           ;main.c: 466: {
  1518                           ;main.c: 467: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1519  0009BC  0101               	movlb	1	; () banked
  1520  0009BE  0E01               	movlw	high main@t1thread_data
  1521  0009C0  0101               	movlb	1	; () banked
  1522  0009C2  6F1E               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1523  0009C4  0101               	movlb	1	; () banked
  1524  0009C6  0E68               	movlw	low main@t1thread_data
  1525  0009C8  0101               	movlb	1	; () banked
  1526  0009CA  6F1D               	movwf	timer1_lthread@tptr& (0+255),b
  1527  0009CC  0101               	movlb	1	; () banked
  1528  0009CE  C16B  F11F         	movff	main@msgtype,timer1_lthread@msgtype
  1529  0009D2  0101               	movlb	1	; () banked
  1530  0009D4  6B20               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1531  0009D6  0101               	movlb	1	; () banked
  1532  0009D8  516A               	movf	main@length& (0+255),w,b
  1533  0009DA  0101               	movlb	1	; () banked
  1534  0009DC  6F21               	movwf	timer1_lthread@length& (0+255),b
  1535  0009DE  0101               	movlb	1	; () banked
  1536  0009E0  6B22               	clrf	(timer1_lthread@length+1)& (0+255),b
  1537  0009E2  0101               	movlb	1	; () banked
  1538  0009E4  BF21               	btfsc	timer1_lthread@length& (0+255),7,b
  1539  0009E6  0722               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1540  0009E8  0101               	movlb	1	; () banked
  1541  0009EA  0E01               	movlw	high main@msgbuffer
  1542  0009EC  0101               	movlb	1	; () banked
  1543  0009EE  6F24               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1544  0009F0  0101               	movlb	1	; () banked
  1545  0009F2  0E45               	movlw	low main@msgbuffer
  1546  0009F4  0101               	movlb	1	; () banked
  1547  0009F6  6F23               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1548  0009F8  EC3E  F00A         	call	_timer1_lthread	;wreg free
  1549                           
  1550                           ;main.c: 468: break;
  1551  0009FC  D758               	goto	l3661
  1552  0009FE                     l3699:
  1553                           
  1554                           ;main.c: 473: {
  1555                           ;main.c: 474: uart_response[0] = 0xf1;
  1556  0009FE  0EF1               	movlw	241
  1557  000A00  0101               	movlb	1	; () banked
  1558  000A02  6F56               	movwf	main@uart_response& (0+255),b
  1559                           
  1560                           ; BSR set to: 1
  1561                           ;main.c: 475: uart_response[1] = msgbuffer[0];
  1562  000A04  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1563                           
  1564                           ; BSR set to: 1
  1565                           ;main.c: 476: send_uart_message( uart_response );
  1566  000A08  0101               	movlb	1	; () banked
  1567  000A0A  0E01               	movlw	high main@uart_response
  1568  000A0C  0101               	movlb	1	; () banked
  1569  000A0E  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1570  000A10  0101               	movlb	1	; () banked
  1571  000A12  0E56               	movlw	low main@uart_response
  1572  000A14  0101               	movlb	1	; () banked
  1573  000A16  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1574  000A18  EC19  F00E         	call	_send_uart_message	;wreg free
  1575                           
  1576                           ;main.c: 477: break;
  1577  000A1C  D748               	goto	l3661
  1578  000A1E                     l3705:
  1579                           
  1580                           ;main.c: 480: {
  1581                           ;main.c: 481: uart_response[0] = 0xf2;
  1582  000A1E  0EF2               	movlw	242
  1583  000A20  0101               	movlb	1	; () banked
  1584  000A22  6F56               	movwf	main@uart_response& (0+255),b
  1585                           
  1586                           ; BSR set to: 1
  1587                           ;main.c: 482: uart_response[1] = msgbuffer[0];
  1588  000A24  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;main.c: 483: uart_response[2] = msgbuffer[1];
  1592  000A28  C146  F158         	movff	main@msgbuffer+1,main@uart_response+2
  1593                           
  1594                           ; BSR set to: 1
  1595                           ;main.c: 484: send_uart_message( uart_response );
  1596  000A2C  0101               	movlb	1	; () banked
  1597  000A2E  0E01               	movlw	high main@uart_response
  1598  000A30  0101               	movlb	1	; () banked
  1599  000A32  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1600  000A34  0101               	movlb	1	; () banked
  1601  000A36  0E56               	movlw	low main@uart_response
  1602  000A38  0101               	movlb	1	; () banked
  1603  000A3A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1604  000A3C  EC19  F00E         	call	_send_uart_message	;wreg free
  1605                           
  1606                           ;main.c: 485: break;
  1607  000A40  D736               	goto	l3661
  1608  000A42                     l3713:
  1609                           
  1610                           ;main.c: 488: {
  1611                           ;main.c: 489: uart_response[0] = 0xf3;
  1612  000A42  0EF3               	movlw	243
  1613  000A44  0101               	movlb	1	; () banked
  1614  000A46  6F56               	movwf	main@uart_response& (0+255),b
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1618  000A48  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1619                           
  1620                           ; BSR set to: 1
  1621                           ;main.c: 491: send_uart_message( uart_response );
  1622  000A4C  0101               	movlb	1	; () banked
  1623  000A4E  0E01               	movlw	high main@uart_response
  1624  000A50  0101               	movlb	1	; () banked
  1625  000A52  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1626  000A54  0101               	movlb	1	; () banked
  1627  000A56  0E56               	movlw	low main@uart_response
  1628  000A58  0101               	movlb	1	; () banked
  1629  000A5A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1630  000A5C  EC19  F00E         	call	_send_uart_message	;wreg free
  1631                           
  1632                           ;main.c: 492: break;
  1633  000A60  D726               	goto	l3661
  1634  000A62                     l3719:
  1635                           
  1636                           ;main.c: 495: {
  1637                           ;main.c: 496: uart_response[0] = 0xf4;
  1638  000A62  0EF4               	movlw	244
  1639  000A64  0101               	movlb	1	; () banked
  1640  000A66  6F56               	movwf	main@uart_response& (0+255),b
  1641                           
  1642                           ; BSR set to: 1
  1643                           ;main.c: 497: uart_response[1] = msgbuffer[0];
  1644  000A68  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 498: send_uart_message( uart_response );
  1648  000A6C  0101               	movlb	1	; () banked
  1649  000A6E  0E01               	movlw	high main@uart_response
  1650  000A70  0101               	movlb	1	; () banked
  1651  000A72  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1652  000A74  0101               	movlb	1	; () banked
  1653  000A76  0E56               	movlw	low main@uart_response
  1654  000A78  0101               	movlb	1	; () banked
  1655  000A7A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1656  000A7C  EC19  F00E         	call	_send_uart_message	;wreg free
  1657                           
  1658                           ;main.c: 499: break;
  1659  000A80  D716               	goto	l3661
  1660  000A82                     l3725:
  1661                           
  1662                           ;main.c: 503: {
  1663                           ;main.c: 504: uart_response[0] = 0x11;
  1664  000A82  0E11               	movlw	17
  1665  000A84  0101               	movlb	1	; () banked
  1666  000A86  6F56               	movwf	main@uart_response& (0+255),b
  1667                           
  1668                           ; BSR set to: 1
  1669                           ;main.c: 505: uart_response[1] = msgbuffer[0];
  1670  000A88  C145  F157         	movff	main@msgbuffer,main@uart_response+1
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;main.c: 506: send_uart_message( uart_response );
  1674  000A8C  0101               	movlb	1	; () banked
  1675  000A8E  0E01               	movlw	high main@uart_response
  1676  000A90  0101               	movlb	1	; () banked
  1677  000A92  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1678  000A94  0101               	movlb	1	; () banked
  1679  000A96  0E56               	movlw	low main@uart_response
  1680  000A98  0101               	movlb	1	; () banked
  1681  000A9A  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1682  000A9C  EC19  F00E         	call	_send_uart_message	;wreg free
  1683                           
  1684                           ;main.c: 507: break;
  1685  000AA0  D706               	goto	l3661
  1686  000AA2                     l3731:
  1687                           
  1688                           ;main.c: 516: {
  1689                           ;main.c: 517: send_uart_message( sensor_data );
  1690  000AA2  0101               	movlb	1	; () banked
  1691  000AA4  0E01               	movlw	high main@sensor_data
  1692  000AA6  0101               	movlb	1	; () banked
  1693  000AA8  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1694  000AAA  0101               	movlb	1	; () banked
  1695  000AAC  0E34               	movlw	low main@sensor_data
  1696  000AAE  0101               	movlb	1	; () banked
  1697  000AB0  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1698  000AB2  EC19  F00E         	call	_send_uart_message	;wreg free
  1699  000AB6  D6FB               	goto	l3661
  1700  000AB8                     l3735:
  1701  000AB8  0101               	movlb	1	; () banked
  1702  000ABA  5145               	movf	main@msgbuffer& (0+255),w,b
  1703                           
  1704                           ; Switch size 1, requested type "space"
  1705                           ; Number of cases is 1, Range of values is 2 to 2
  1706                           ; switch strategies available:
  1707                           ; Name         Instructions Cycles
  1708                           ; simple_byte            4     3 (average)
  1709                           ;	Chosen strategy is simple_byte
  1710  000ABC  0A02               	xorlw	2	; case 2
  1711  000ABE  B4D8               	btfsc	status,2,c
  1712  000AC0  D7F0               	goto	l3731
  1713  000AC2  D6F5               	goto	l3661
  1714  000AC4                     l3739:
  1715                           
  1716                           ; BSR set to: 1
  1717  000AC4  0101               	movlb	1	; () banked
  1718  000AC6  516B               	movf	main@msgtype& (0+255),w,b
  1719                           
  1720                           ; Switch size 1, requested type "space"
  1721                           ; Number of cases is 8, Range of values is 11 to 36
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte           25    13 (average)
  1725                           ;	Chosen strategy is simple_byte
  1726  000AC8  0A0B               	xorlw	11	; case 11
  1727  000ACA  B4D8               	btfsc	status,2,c
  1728  000ACC  D777               	goto	l3697
  1729  000ACE  0A15               	xorlw	21	; case 30
  1730  000AD0  B4D8               	btfsc	status,2,c
  1731  000AD2  D795               	goto	l3699
  1732  000AD4  0A01               	xorlw	1	; case 31
  1733  000AD6  B4D8               	btfsc	status,2,c
  1734  000AD8  D7EF               	goto	l3735
  1735  000ADA  0A3F               	xorlw	63	; case 32
  1736  000ADC  B4D8               	btfsc	status,2,c
  1737  000ADE  D78F               	goto	l3699
  1738  000AE0  0A01               	xorlw	1	; case 33
  1739  000AE2  B4D8               	btfsc	status,2,c
  1740  000AE4  D79C               	goto	l3705
  1741  000AE6  0A03               	xorlw	3	; case 34
  1742  000AE8  B4D8               	btfsc	status,2,c
  1743  000AEA  D7AB               	goto	l3713
  1744  000AEC  0A01               	xorlw	1	; case 35
  1745  000AEE  B4D8               	btfsc	status,2,c
  1746  000AF0  D7B8               	goto	l3719
  1747  000AF2  0A07               	xorlw	7	; case 36
  1748  000AF4  B4D8               	btfsc	status,2,c
  1749  000AF6  D7C5               	goto	l3725
  1750  000AF8  D6DA               	goto	l3661
  1751  000AFA                     __end_of_main:
  1752                           	opt stack 0
  1753                           tblptru	equ	0xFF8
  1754                           tblptrh	equ	0xFF7
  1755                           tblptrl	equ	0xFF6
  1756                           tablat	equ	0xFF5
  1757                           prodh	equ	0xFF4
  1758                           prodl	equ	0xFF3
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           indf2	equ	0xFDF
  1762                           fsr2h	equ	0xFDA
  1763                           fsr2l	equ	0xFD9
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _uart_configure *****************
  1767 ;; Defined at:
  1768 ;;		line 22 in file "../src/my_uart.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;		None               void
  1775 ;; Registers used:
  1776 ;;		wreg, status,2
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:   11
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text1
  1797  001C12                     __ptext1:
  1798                           	opt stack 0
  1799  001C12                     _uart_configure:
  1800                           	opt stack 18
  1801                           
  1802                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1803                           
  1804                           ; BSR set to: 1
  1805                           ;incstack = 0
  1806  001C12  8E94               	bsf	3988,7,c	;volatile
  1807                           
  1808                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1809  001C14  9C94               	bcf	3988,6,c	;volatile
  1810                           
  1811                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1812  001C16  867E               	bsf	3966,3,c	;volatile
  1813                           
  1814                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1815  001C18  84AD               	bsf	4013,2,c	;volatile
  1816                           
  1817                           ;my_uart.c: 31: SPBRGH1 = 0x00;
  1818  001C1A  0E00               	movlw	0
  1819  001C1C  6E7F               	movwf	3967,c	;volatile
  1820                           
  1821                           ;my_uart.c: 32: SPBRG1 = 0xCF;
  1822  001C1E  0ECF               	movlw	207
  1823  001C20  6EB0               	movwf	4016,c	;volatile
  1824                           
  1825                           ;my_uart.c: 34: TXSTA1bits.SYNC = 0;
  1826  001C22  98AD               	bcf	4013,4,c	;volatile
  1827                           
  1828                           ;my_uart.c: 35: RCSTA1bits.SPEN = 1;
  1829  001C24  8EAC               	bsf	4012,7,c	;volatile
  1830                           
  1831                           ;my_uart.c: 38: IPR1bits.TX1IP = 0;
  1832  001C26  989F               	bcf	3999,4,c	;volatile
  1833                           
  1834                           ;my_uart.c: 40: PIE1bits.TX1IE = 0;
  1835  001C28  989D               	bcf	3997,4,c	;volatile
  1836                           
  1837                           ;my_uart.c: 41: PIE1bits.RC1IE = 1;
  1838  001C2A  8A9D               	bsf	3997,5,c	;volatile
  1839                           
  1840                           ;my_uart.c: 43: TXSTA1bits.TXEN = 1;
  1841  001C2C  8AAD               	bsf	4013,5,c	;volatile
  1842                           
  1843                           ;my_uart.c: 44: RCSTA1bits.CREN = 1;
  1844  001C2E  88AC               	bsf	4012,4,c	;volatile
  1845  001C30  0012               	return	
  1846  001C32                     __end_of_uart_configure:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           indf2	equ	0xFDF
  1857                           fsr2h	equ	0xFDA
  1858                           fsr2l	equ	0xFD9
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _timer1_lthread *****************
  1862 ;; Defined at:
  1863 ;;		line 16 in file "../src/timer1_thread.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  tptr            2   29[BANK1 ] PTR struct __timer1_thre
  1866 ;;		 -> main@t1thread_data(2), 
  1867 ;;  msgtype         2   31[BANK1 ] int 
  1868 ;;  length          2   33[BANK1 ] int 
  1869 ;;  msgbuffer       2   35[BANK1 ] PTR unsigned char 
  1870 ;;		 -> main@msgbuffer(15), 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  whatever_msg   14   37[BANK1 ] unsigned char [14]
  1873 ;;  retval          1   51[BANK1 ] char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2   29[BANK1 ] int 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1883 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;Total ram usage:       23 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:   15
  1890 ;; This function calls:
  1891 ;;		_FromMainHigh_sendmsg
  1892 ;;		___lwmod
  1893 ;;		_blink0
  1894 ;;		_send_uart_message
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text2
  1901  00147C                     __ptext2:
  1902                           	opt stack 0
  1903  00147C                     _timer1_lthread:
  1904                           	opt stack 14
  1905                           
  1906                           ;timer1_thread.c: 17: signed char retval;
  1907                           ;timer1_thread.c: 19: blink0();
  1908                           
  1909                           ;incstack = 0
  1910  00147C  EC8C  F00E         	call	_blink0	;wreg free
  1911                           
  1912                           ;timer1_thread.c: 21: static unsigned char left_speed = 0;
  1913                           ;timer1_thread.c: 22: static unsigned char right_speed = 0;
  1914                           ;timer1_thread.c: 24: unsigned char whatever_msg[14];
  1915                           ;timer1_thread.c: 26: whatever_msg[0] = 0x01;
  1916  001480  0E01               	movlw	1
  1917  001482  0101               	movlb	1	; () banked
  1918  001484  6F25               	movwf	timer1_lthread@whatever_msg& (0+255),b
  1919                           
  1920                           ; BSR set to: 1
  1921                           ;timer1_thread.c: 27: whatever_msg[1] = left_speed++;
  1922  001486  C0B2  F126         	movff	timer1_lthread@left_speed,timer1_lthread@whatever_msg+1
  1923                           
  1924                           ; BSR set to: 1
  1925  00148A  0100               	movlb	0	; () banked
  1926  00148C  2BB2               	incf	timer1_lthread@left_speed& (0+255),f,b
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;timer1_thread.c: 28: whatever_msg[2] = right_speed++;
  1930  00148E  C0B3  F127         	movff	timer1_lthread@right_speed,timer1_lthread@whatever_msg+2
  1931                           
  1932                           ; BSR set to: 0
  1933  001492  0100               	movlb	0	; () banked
  1934  001494  2BB3               	incf	timer1_lthread@right_speed& (0+255),f,b
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;timer1_thread.c: 31: send_uart_message( whatever_msg );
  1938  001496  0101               	movlb	1	; () banked
  1939  001498  0E01               	movlw	high timer1_lthread@whatever_msg
  1940  00149A  0101               	movlb	1	; () banked
  1941  00149C  6F1B               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1942  00149E  0101               	movlb	1	; () banked
  1943  0014A0  0E25               	movlw	low timer1_lthread@whatever_msg
  1944  0014A2  0101               	movlb	1	; () banked
  1945  0014A4  6F1A               	movwf	send_uart_message@message_ptr& (0+255),b
  1946  0014A6  EC19  F00E         	call	_send_uart_message	;wreg free
  1947                           
  1948                           ;timer1_thread.c: 33: tptr->msgcount++;
  1949  0014AA  C11D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1950  0014AE  C11E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1951  0014B2  2ADE               	incf	postinc2,f,c
  1952  0014B4  0E00               	movlw	0
  1953  0014B6  22DD               	addwfc	postdec2,f,c
  1954                           
  1955                           ;timer1_thread.c: 36: if ((tptr->msgcount % 10) == 9) {
  1956  0014B8  C11D  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1957  0014BC  C11E  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1958  0014C0  0101               	movlb	1	; () banked
  1959  0014C2  CFDE F100          	movff	postinc2,___lwmod@dividend
  1960  0014C6  0101               	movlb	1	; () banked
  1961  0014C8  CFDD F101          	movff	postdec2,___lwmod@dividend+1
  1962  0014CC  0E00               	movlw	0
  1963  0014CE  0101               	movlb	1	; () banked
  1964  0014D0  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
  1965  0014D2  0E0A               	movlw	10
  1966  0014D4  0101               	movlb	1	; () banked
  1967  0014D6  6F02               	movwf	___lwmod@divisor& (0+255),b
  1968  0014D8  EC99  F00B         	call	___lwmod	;wreg free
  1969  0014DC  0101               	movlb	1	; () banked
  1970  0014DE  5100               	movf	?___lwmod& (0+255),w,b
  1971  0014E0  0A09               	xorlw	9
  1972  0014E2  0101               	movlb	1	; () banked
  1973  0014E4  1101               	iorwf	(?___lwmod+1)& (0+255),w,b
  1974  0014E6  A4D8               	btfss	status,2,c
  1975  0014E8  0012               	return	
  1976                           
  1977                           ; BSR set to: 1
  1978                           ;timer1_thread.c: 37: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1979  0014EA  0E14               	movlw	20
  1980  0014EC  0101               	movlb	1	; () banked
  1981  0014EE  6F16               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1982  0014F0  0101               	movlb	1	; () banked
  1983  0014F2  C11E  F118         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1984  0014F6  0101               	movlb	1	; () banked
  1985  0014F8  C11D  F117         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1986  0014FC  0E02               	movlw	2
  1987  0014FE  EC8C  F00D         	call	_FromMainHigh_sendmsg
  1988  001502  0101               	movlb	1	; () banked
  1989  001504  6F33               	movwf	timer1_lthread@retval& (0+255),b
  1990  001506  0012               	return	
  1991  001508                     __end_of_timer1_lthread:
  1992                           	opt stack 0
  1993                           tblptru	equ	0xFF8
  1994                           tblptrh	equ	0xFF7
  1995                           tblptrl	equ	0xFF6
  1996                           tablat	equ	0xFF5
  1997                           prodh	equ	0xFF4
  1998                           prodl	equ	0xFF3
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           indf2	equ	0xFDF
  2002                           postinc2	equ	0xFDE
  2003                           postdec2	equ	0xFDD
  2004                           fsr2h	equ	0xFDA
  2005                           fsr2l	equ	0xFD9
  2006                           status	equ	0xFD8
  2007                           
  2008 ;; *************** function _send_uart_message *****************
  2009 ;; Defined at:
  2010 ;;		line 182 in file "../src/my_uart.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  message_ptr     2   26[BANK1 ] PTR unsigned char 
  2013 ;;		 -> timer1_lthread@whatever_msg(14), main@uart_response(14), main@sensor_data(14), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  message_q_co    1   28[BANK1 ] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      unsigned char 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2025 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;Total ram usage:        3 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:   14
  2032 ;; This function calls:
  2033 ;;		_FromMainLow_sendmsg
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;;		_timer1_lthread
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text3
  2041  001C32                     __ptext3:
  2042                           	opt stack 0
  2043  001C32                     _send_uart_message:
  2044                           	opt stack 14
  2045                           
  2046                           ;my_uart.c: 184: unsigned char message_q_code = FromMainLow_sendmsg(14,31,(void *) messa
      +                          ge_ptr );
  2047                           
  2048                           ; BSR set to: 1
  2049                           ;incstack = 0
  2050  001C32  0E1F               	movlw	31
  2051  001C34  0101               	movlb	1	; () banked
  2052  001C36  6F16               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2053  001C38  0101               	movlb	1	; () banked
  2054  001C3A  C11B  F118         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2055  001C3E  0101               	movlb	1	; () banked
  2056  001C40  C11A  F117         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2057  001C44  0E0E               	movlw	14
  2058  001C46  EC75  F00D         	call	_FromMainLow_sendmsg
  2059  001C4A  0101               	movlb	1	; () banked
  2060  001C4C  6F1C               	movwf	send_uart_message@message_q_code& (0+255),b
  2061                           
  2062                           ; BSR set to: 1
  2063                           ;my_uart.c: 189: }
  2064                           ;my_uart.c: 191: PIE1bits.TX1IE = 1;
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;my_uart.c: 187: {
  2068                           ;my_uart.c: 188: return 0x02;
  2069                           ;	Return value of _send_uart_message is never used
  2070                           
  2071                           ;my_uart.c: 186: if( message_q_code == -1)
  2072  001C4E  889D               	bsf	3997,4,c	;volatile
  2073                           
  2074                           ; BSR set to: 1
  2075                           
  2076                           ;my_uart.c: 192: return 0x00;
  2077                           ;	Return value of _send_uart_message is never used
  2078  001C50  0012               	return	
  2079  001C52                     __end_of_send_uart_message:
  2080                           	opt stack 0
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           prodh	equ	0xFF4
  2086                           prodl	equ	0xFF3
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           indf2	equ	0xFDF
  2090                           postinc2	equ	0xFDE
  2091                           postdec2	equ	0xFDD
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _FromMainLow_sendmsg *****************
  2097 ;; Defined at:
  2098 ;;		line 150 in file "../src/messages.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  length          1    wreg     unsigned char 
  2101 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2102 ;;  data            2   23[BANK1 ] PTR void 
  2103 ;;		 -> timer1_lthread@whatever_msg(14), main@uart_response(14), main@sensor_data(14), 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  length          1   25[BANK1 ] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      char 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2115 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;Total ram usage:        4 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:   13
  2122 ;; This function calls:
  2123 ;;		_send_msg
  2124 ;; This function is called by:
  2125 ;;		_send_uart_message
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text4
  2130  001AEA                     __ptext4:
  2131                           	opt stack 0
  2132  001AEA                     _FromMainLow_sendmsg:
  2133                           	opt stack 14
  2134                           
  2135                           ; BSR set to: 1
  2136                           ;incstack = 0
  2137                           ;FromMainLow_sendmsg@length stored from wreg
  2138  001AEA  0101               	movlb	1	; () banked
  2139  001AEC  6F19               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2143  001AEE  0104               	movlb	4	; () banked
  2144  001AF0  0E04               	movlw	high _FromMainLow_MQ
  2145  001AF2  0101               	movlb	1	; () banked
  2146  001AF4  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2147  001AF6  0104               	movlb	4	; () banked
  2148  001AF8  0E00               	movlw	low _FromMainLow_MQ
  2149  001AFA  0101               	movlb	1	; () banked
  2150  001AFC  6F0A               	movwf	send_msg@qptr& (0+255),b
  2151  001AFE  C119  F10C         	movff	FromMainLow_sendmsg@length,send_msg@length
  2152  001B02  C116  F10D         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2153  001B06  0101               	movlb	1	; () banked
  2154  001B08  C118  F10F         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2155  001B0C  0101               	movlb	1	; () banked
  2156  001B0E  C117  F10E         	movff	FromMainLow_sendmsg@data,send_msg@data
  2157  001B12  EC6C  F007         	call	_send_msg	;wreg free
  2158  001B16  0012               	return	
  2159  001B18                     __end_of_FromMainLow_sendmsg:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           prodh	equ	0xFF4
  2166                           prodl	equ	0xFF3
  2167                           postinc0	equ	0xFEE
  2168                           wreg	equ	0xFE8
  2169                           indf2	equ	0xFDF
  2170                           postinc2	equ	0xFDE
  2171                           postdec2	equ	0xFDD
  2172                           fsr2h	equ	0xFDA
  2173                           fsr2l	equ	0xFD9
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function _blink0 *****************
  2177 ;; Defined at:
  2178 ;;		line 46 in file "../src/debug.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:   11
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_timer1_lthread
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text5
  2207  001D18                     __ptext5:
  2208                           	opt stack 0
  2209  001D18                     _blink0:
  2210                           	opt stack 17
  2211                           
  2212                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  2213                           
  2214                           ;incstack = 0
  2215  001D18  708A               	btg	3978,0,c	;volatile
  2216  001D1A  0012               	return	
  2217  001D1C                     __end_of_blink0:
  2218                           	opt stack 0
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           prodh	equ	0xFF4
  2224                           prodl	equ	0xFF3
  2225                           postinc0	equ	0xFEE
  2226                           wreg	equ	0xFE8
  2227                           indf2	equ	0xFDF
  2228                           postinc2	equ	0xFDE
  2229                           postdec2	equ	0xFDD
  2230                           fsr2h	equ	0xFDA
  2231                           fsr2l	equ	0xFD9
  2232                           status	equ	0xFD8
  2233                           
  2234 ;; *************** function ___lwmod *****************
  2235 ;; Defined at:
  2236 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  dividend        2    0[BANK1 ] unsigned int 
  2239 ;;  divisor         2    2[BANK1 ] unsigned int 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  counter         1    4[BANK1 ] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2    0[BANK1 ] unsigned int 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2251 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2252 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;Total ram usage:        5 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:   11
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_timer1_lthread
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text6
  2266  001732                     __ptext6:
  2267                           	opt stack 0
  2268  001732                     ___lwmod:
  2269                           	opt stack 17
  2270                           
  2271                           ;incstack = 0
  2272  001732  0101               	movlb	1	; () banked
  2273  001734  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2274  001736  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  2275  001738  B4D8               	btfsc	status,2,c
  2276  00173A  D026               	goto	l1130
  2277                           
  2278                           ; BSR set to: 1
  2279  00173C  0E01               	movlw	1
  2280  00173E  0101               	movlb	1	; () banked
  2281  001740  6F04               	movwf	___lwmod@counter& (0+255),b
  2282  001742  D006               	goto	l3455
  2283  001744                     l3453:
  2284                           
  2285                           ; BSR set to: 1
  2286  001744  0101               	movlb	1	; () banked
  2287  001746  90D8               	bcf	status,0,c
  2288  001748  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  2289  00174A  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2290  00174C  0101               	movlb	1	; () banked
  2291  00174E  2B04               	incf	___lwmod@counter& (0+255),f,b
  2292  001750                     l3455:
  2293                           
  2294                           ; BSR set to: 1
  2295  001750  0101               	movlb	1	; () banked
  2296  001752  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2297  001754  D7F7               	goto	l3453
  2298  001756                     l3457:
  2299                           
  2300                           ; BSR set to: 1
  2301  001756  0101               	movlb	1	; () banked
  2302  001758  5102               	movf	___lwmod@divisor& (0+255),w,b
  2303  00175A  0101               	movlb	1	; () banked
  2304  00175C  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  2305  00175E  0101               	movlb	1	; () banked
  2306  001760  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2307  001762  0101               	movlb	1	; () banked
  2308  001764  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2309  001766  A0D8               	btfss	status,0,c
  2310  001768  D008               	goto	l3461
  2311                           
  2312                           ; BSR set to: 1
  2313  00176A  0101               	movlb	1	; () banked
  2314  00176C  5102               	movf	___lwmod@divisor& (0+255),w,b
  2315  00176E  0101               	movlb	1	; () banked
  2316  001770  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  2317  001772  0101               	movlb	1	; () banked
  2318  001774  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2319  001776  0101               	movlb	1	; () banked
  2320  001778  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2321  00177A                     l3461:
  2322                           
  2323                           ; BSR set to: 1
  2324  00177A  0101               	movlb	1	; () banked
  2325  00177C  90D8               	bcf	status,0,c
  2326  00177E  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2327  001780  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  2328                           
  2329                           ; BSR set to: 1
  2330  001782  0101               	movlb	1	; () banked
  2331  001784  2F04               	decfsz	___lwmod@counter& (0+255),f,b
  2332  001786  D7E7               	goto	l3457
  2333  001788                     l1130:
  2334                           
  2335                           ; BSR set to: 1
  2336  001788  C100  F100         	movff	___lwmod@dividend,?___lwmod
  2337  00178C  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  2338                           
  2339                           ; BSR set to: 1
  2340  001790  0012               	return	
  2341  001792                     __end_of___lwmod:
  2342                           	opt stack 0
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           prodh	equ	0xFF4
  2348                           prodl	equ	0xFF3
  2349                           postinc0	equ	0xFEE
  2350                           wreg	equ	0xFE8
  2351                           indf2	equ	0xFDF
  2352                           postinc2	equ	0xFDE
  2353                           postdec2	equ	0xFDD
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _FromMainHigh_sendmsg *****************
  2359 ;; Defined at:
  2360 ;;		line 174 in file "../src/messages.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  length          1    wreg     unsigned char 
  2363 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2364 ;;  data            2   23[BANK1 ] PTR void 
  2365 ;;		 -> main@t1thread_data(2), 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  length          1   25[BANK1 ] unsigned char 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      char 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2377 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2378 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2380 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2381 ;;Total ram usage:        4 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:   13
  2384 ;; This function calls:
  2385 ;;		_send_msg
  2386 ;; This function is called by:
  2387 ;;		_timer1_lthread
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text7
  2392  001B18                     __ptext7:
  2393                           	opt stack 0
  2394  001B18                     _FromMainHigh_sendmsg:
  2395                           	opt stack 15
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;incstack = 0
  2399                           ;FromMainHigh_sendmsg@length stored from wreg
  2400  001B18  0101               	movlb	1	; () banked
  2401  001B1A  6F19               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2405  001B1C  0105               	movlb	5	; () banked
  2406  001B1E  0E05               	movlw	high _FromMainHigh_MQ
  2407  001B20  0101               	movlb	1	; () banked
  2408  001B22  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2409  001B24  0105               	movlb	5	; () banked
  2410  001B26  0E00               	movlw	low _FromMainHigh_MQ
  2411  001B28  0101               	movlb	1	; () banked
  2412  001B2A  6F0A               	movwf	send_msg@qptr& (0+255),b
  2413  001B2C  C119  F10C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2414  001B30  C116  F10D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2415  001B34  0101               	movlb	1	; () banked
  2416  001B36  C118  F10F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2417  001B3A  0101               	movlb	1	; () banked
  2418  001B3C  C117  F10E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2419  001B40  EC6C  F007         	call	_send_msg	;wreg free
  2420  001B44  0012               	return	
  2421  001B46                     __end_of_FromMainHigh_sendmsg:
  2422                           	opt stack 0
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           postinc0	equ	0xFEE
  2430                           wreg	equ	0xFE8
  2431                           indf2	equ	0xFDF
  2432                           postinc2	equ	0xFDE
  2433                           postdec2	equ	0xFDD
  2434                           fsr2h	equ	0xFDA
  2435                           fsr2l	equ	0xFD9
  2436                           status	equ	0xFD8
  2437                           
  2438 ;; *************** function _send_msg *****************
  2439 ;; Defined at:
  2440 ;;		line 24 in file "../src/messages.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2443 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2444 ;;  length          1   12[BANK1 ] unsigned char 
  2445 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2446 ;;  data            2   14[BANK1 ] PTR void 
  2447 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  2448 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  2449 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  2450 ;;		 -> main@t1thread_data(2), main@ic(38), 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2453 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  2454 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2455 ;;  tlength         2   17[BANK1 ] unsigned int 
  2456 ;;  slot            1   19[BANK1 ] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      char 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2466 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2467 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2468 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2469 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;Total ram usage:       12 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:   12
  2473 ;; This function calls:
  2474 ;;		_memcpy
  2475 ;; This function is called by:
  2476 ;;		_FromMainLow_sendmsg
  2477 ;;		_FromMainHigh_sendmsg
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text8
  2482  000ED8                     __ptext8:
  2483                           	opt stack 0
  2484  000ED8                     _send_msg:
  2485                           	opt stack 14
  2486                           
  2487                           ;messages.c: 25: unsigned char slot;
  2488                           ;messages.c: 27: msg *qmsg;
  2489                           ;messages.c: 28: size_t tlength = length;
  2490                           
  2491                           ;incstack = 0
  2492  000ED8  0101               	movlb	1	; () banked
  2493  000EDA  C10C  F111         	movff	send_msg@length,send_msg@tlength
  2494  000EDE  0101               	movlb	1	; () banked
  2495  000EE0  6B12               	clrf	(send_msg@tlength+1)& (0+255),b
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2499  000EE2  0101               	movlb	1	; () banked
  2500  000EE4  EE20 F088          	lfsr	2,136
  2501  000EE8  0101               	movlb	1	; () banked
  2502  000EEA  510A               	movf	send_msg@qptr& (0+255),w,b
  2503  000EEC  26D9               	addwf	fsr2l,f,c
  2504  000EEE  0101               	movlb	1	; () banked
  2505  000EF0  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2506  000EF2  22DA               	addwfc	fsr2h,f,c
  2507  000EF4  50DF               	movf	indf2,w,c
  2508  000EF6  0101               	movlb	1	; () banked
  2509  000EF8  6F13               	movwf	send_msg@slot& (0+255),b
  2510                           
  2511                           ; BSR set to: 1
  2512                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2513  000EFA  0101               	movlb	1	; () banked
  2514  000EFC  5113               	movf	send_msg@slot& (0+255),w,b
  2515  000EFE  0D11               	mullw	17
  2516  000F00  50F3               	movf	prodl,w,c
  2517  000F02  0101               	movlb	1	; () banked
  2518  000F04  250A               	addwf	send_msg@qptr& (0+255),w,b
  2519  000F06  0101               	movlb	1	; () banked
  2520  000F08  6F14               	movwf	send_msg@qmsg& (0+255),b
  2521  000F0A  50F4               	movf	prodh,w,c
  2522  000F0C  0101               	movlb	1	; () banked
  2523  000F0E  210B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2524  000F10  0101               	movlb	1	; () banked
  2525  000F12  6F15               	movwf	(send_msg@qmsg+1)& (0+255),b
  2526                           
  2527                           ; BSR set to: 1
  2528                           ;messages.c: 41: if (qmsg->full != 0) {
  2529  000F14  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2530  000F18  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2531  000F1C  50DF               	movf	indf2,w,c
  2532  000F1E  B4D8               	btfsc	status,2,c
  2533  000F20  D002               	goto	l3377
  2534                           
  2535                           ; BSR set to: 1
  2536                           ;messages.c: 42: return (-1);
  2537  000F22  0EFF               	movlw	255
  2538  000F24  0012               	return	
  2539  000F26                     l3377:
  2540                           
  2541                           ; BSR set to: 1
  2542                           ;messages.c: 43: }
  2543                           ;messages.c: 46: qmsg->length = length;
  2544  000F26  0101               	movlb	1	; () banked
  2545  000F28  EE20 F001          	lfsr	2,1
  2546  000F2C  0101               	movlb	1	; () banked
  2547  000F2E  5114               	movf	send_msg@qmsg& (0+255),w,b
  2548  000F30  26D9               	addwf	fsr2l,f,c
  2549  000F32  0101               	movlb	1	; () banked
  2550  000F34  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2551  000F36  22DA               	addwfc	fsr2h,f,c
  2552  000F38  0101               	movlb	1	; () banked
  2553  000F3A  C10C  FFDF         	movff	send_msg@length,indf2
  2554                           
  2555                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2556  000F3E  0101               	movlb	1	; () banked
  2557  000F40  EE20 F002          	lfsr	2,2
  2558  000F44  0101               	movlb	1	; () banked
  2559  000F46  5114               	movf	send_msg@qmsg& (0+255),w,b
  2560  000F48  26D9               	addwf	fsr2l,f,c
  2561  000F4A  0101               	movlb	1	; () banked
  2562  000F4C  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2563  000F4E  22DA               	addwfc	fsr2h,f,c
  2564  000F50  0101               	movlb	1	; () banked
  2565  000F52  C10D  FFDF         	movff	send_msg@msgtype,indf2
  2566                           
  2567                           ; BSR set to: 1
  2568                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2569  000F56  0E03               	movlw	3
  2570  000F58  0101               	movlb	1	; () banked
  2571  000F5A  2514               	addwf	send_msg@qmsg& (0+255),w,b
  2572  000F5C  0101               	movlb	1	; () banked
  2573  000F5E  6F00               	movwf	memcpy@d1& (0+255),b
  2574  000F60  0E00               	movlw	0
  2575  000F62  0101               	movlb	1	; () banked
  2576  000F64  2115               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2577  000F66  0101               	movlb	1	; () banked
  2578  000F68  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  2579  000F6A  0101               	movlb	1	; () banked
  2580  000F6C  C10F  F103         	movff	send_msg@data+1,memcpy@s1+1
  2581  000F70  0101               	movlb	1	; () banked
  2582  000F72  C10E  F102         	movff	send_msg@data,memcpy@s1
  2583  000F76  C111  F104         	movff	send_msg@tlength,memcpy@n
  2584  000F7A  C112  F105         	movff	send_msg@tlength+1,memcpy@n+1
  2585  000F7E  EC25  F00C         	call	_memcpy	;wreg free
  2586                           
  2587                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  2588  000F82  0101               	movlb	1	; () banked
  2589  000F84  EE20 F088          	lfsr	2,136
  2590  000F88  0101               	movlb	1	; () banked
  2591  000F8A  510A               	movf	send_msg@qptr& (0+255),w,b
  2592  000F8C  26D9               	addwf	fsr2l,f,c
  2593  000F8E  0101               	movlb	1	; () banked
  2594  000F90  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2595  000F92  22DA               	addwfc	fsr2h,f,c
  2596  000F94  0101               	movlb	1	; () banked
  2597  000F96  EE10 F088          	lfsr	1,136
  2598  000F9A  0101               	movlb	1	; () banked
  2599  000F9C  510A               	movf	send_msg@qptr& (0+255),w,b
  2600  000F9E  26E1               	addwf	fsr1l,f,c
  2601  000FA0  0101               	movlb	1	; () banked
  2602  000FA2  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2603  000FA4  22E2               	addwfc	fsr1h,f,c
  2604  000FA6  50E7               	movf	indf1,w,c
  2605  000FA8  0101               	movlb	1	; () banked
  2606  000FAA  6F10               	movwf	??_send_msg& (0+255),b
  2607  000FAC  0101               	movlb	1	; () banked
  2608  000FAE  2910               	incf	??_send_msg& (0+255),w,b
  2609  000FB0  0B07               	andlw	7
  2610  000FB2  6EDF               	movwf	indf2,c
  2611                           
  2612                           ; BSR set to: 1
  2613                           ;messages.c: 59: qmsg->full = 1;
  2614  000FB4  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2615  000FB8  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2616  000FBC  0E01               	movlw	1
  2617  000FBE  6EDF               	movwf	indf2,c
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;messages.c: 60: return (1);
  2621  000FC0  0E01               	movlw	1
  2622  000FC2  0012               	return	
  2623  000FC4                     __end_of_send_msg:
  2624                           	opt stack 0
  2625                           tblptru	equ	0xFF8
  2626                           tblptrh	equ	0xFF7
  2627                           tblptrl	equ	0xFF6
  2628                           tablat	equ	0xFF5
  2629                           prodh	equ	0xFF4
  2630                           prodl	equ	0xFF3
  2631                           postinc0	equ	0xFEE
  2632                           wreg	equ	0xFE8
  2633                           indf1	equ	0xFE7
  2634                           fsr1h	equ	0xFE2
  2635                           fsr1l	equ	0xFE1
  2636                           indf2	equ	0xFDF
  2637                           postinc2	equ	0xFDE
  2638                           postdec2	equ	0xFDD
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _timer0_lthread *****************
  2644 ;; Defined at:
  2645 ;;		line 9 in file "../src/timer0_thread.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2648 ;;		 -> main@t0thread_data(2), 
  2649 ;;  msgtype         2    2[BANK1 ] int 
  2650 ;;  length          2    4[BANK1 ] int 
  2651 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2652 ;;		 -> main@msgbuffer(15), 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2655 ;;		 -> main@msgbuffer(15), 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  2    0[BANK1 ] int 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2665 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;Total ram usage:       10 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:   11
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text9
  2680  001CAA                     __ptext9:
  2681                           	opt stack 0
  2682  001CAA                     _timer0_lthread:
  2683                           	opt stack 18
  2684                           
  2685                           ;timer0_thread.c: 10: unsigned int *msgval;
  2686                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2687                           
  2688                           ; BSR set to: 1
  2689                           ;incstack = 0
  2690  001CAA  0101               	movlb	1	; () banked
  2691  001CAC  C107  F109         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2692  001CB0  0101               	movlb	1	; () banked
  2693  001CB2  C106  F108         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2694                           
  2695                           ; BSR set to: 1
  2696  001CB6  0012               	return	
  2697  001CB8                     __end_of_timer0_lthread:
  2698                           	opt stack 0
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           prodh	equ	0xFF4
  2704                           prodl	equ	0xFF3
  2705                           postinc0	equ	0xFEE
  2706                           wreg	equ	0xFE8
  2707                           indf1	equ	0xFE7
  2708                           fsr1h	equ	0xFE2
  2709                           fsr1l	equ	0xFE1
  2710                           indf2	equ	0xFDF
  2711                           postinc2	equ	0xFDE
  2712                           postdec2	equ	0xFDD
  2713                           fsr2h	equ	0xFDA
  2714                           fsr2l	equ	0xFD9
  2715                           status	equ	0xFD8
  2716                           
  2717 ;; *************** function _init_timer1_lthread *****************
  2718 ;; Defined at:
  2719 ;;		line 8 in file "../src/timer1_thread.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2722 ;;		 -> main@t1thread_data(2), 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;		None               void
  2727 ;; Registers used:
  2728 ;;		wreg, fsr2l, fsr2h
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2734 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2737 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;Total ram usage:        2 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:   11
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text10
  2749  001C52                     __ptext10:
  2750                           	opt stack 0
  2751  001C52                     _init_timer1_lthread:
  2752                           	opt stack 18
  2753                           
  2754                           ;timer1_thread.c: 9: tptr->msgcount = 0;
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;incstack = 0
  2758  001C52  C100  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2759  001C56  C101  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2760  001C5A  0E00               	movlw	0
  2761  001C5C  6EDE               	movwf	postinc2,c
  2762  001C5E  0E00               	movlw	0
  2763  001C60  6EDD               	movwf	postdec2,c
  2764  001C62  0012               	return	
  2765  001C64                     __end_of_init_timer1_lthread:
  2766                           	opt stack 0
  2767                           tblptru	equ	0xFF8
  2768                           tblptrh	equ	0xFF7
  2769                           tblptrl	equ	0xFF6
  2770                           tablat	equ	0xFF5
  2771                           prodh	equ	0xFF4
  2772                           prodl	equ	0xFF3
  2773                           postinc0	equ	0xFEE
  2774                           wreg	equ	0xFE8
  2775                           indf1	equ	0xFE7
  2776                           fsr1h	equ	0xFE2
  2777                           fsr1l	equ	0xFE1
  2778                           indf2	equ	0xFDF
  2779                           postinc2	equ	0xFDE
  2780                           postdec2	equ	0xFDD
  2781                           fsr2h	equ	0xFDA
  2782                           fsr2l	equ	0xFD9
  2783                           status	equ	0xFD8
  2784                           
  2785 ;; *************** function _init_queues *****************
  2786 ;; Defined at:
  2787 ;;		line 194 in file "../src/messages.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;		None               void
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:   12
  2808 ;; This function calls:
  2809 ;;		_init_queue
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text11
  2816  0017F2                     __ptext11:
  2817                           	opt stack 0
  2818  0017F2                     _init_queues:
  2819                           	opt stack 17
  2820                           
  2821                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2822                           
  2823                           ;incstack = 0
  2824  0017F2  0E00               	movlw	0
  2825  0017F4  0100               	movlb	0	; () banked
  2826  0017F6  6FB1               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2830  0017F8  0102               	movlb	2	; () banked
  2831  0017FA  0E02               	movlw	high _ToMainLow_MQ
  2832  0017FC  0101               	movlb	1	; () banked
  2833  0017FE  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2834  001800  0102               	movlb	2	; () banked
  2835  001802  0E00               	movlw	low _ToMainLow_MQ
  2836  001804  0101               	movlb	1	; () banked
  2837  001806  6F00               	movwf	init_queue@qptr& (0+255),b
  2838  001808  EC67  F00B         	call	_init_queue	;wreg free
  2839                           
  2840                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2841  00180C  0103               	movlb	3	; () banked
  2842  00180E  0E03               	movlw	high _ToMainHigh_MQ
  2843  001810  0101               	movlb	1	; () banked
  2844  001812  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2845  001814  0103               	movlb	3	; () banked
  2846  001816  0E00               	movlw	low _ToMainHigh_MQ
  2847  001818  0101               	movlb	1	; () banked
  2848  00181A  6F00               	movwf	init_queue@qptr& (0+255),b
  2849  00181C  EC67  F00B         	call	_init_queue	;wreg free
  2850                           
  2851                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2852  001820  0104               	movlb	4	; () banked
  2853  001822  0E04               	movlw	high _FromMainLow_MQ
  2854  001824  0101               	movlb	1	; () banked
  2855  001826  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2856  001828  0104               	movlb	4	; () banked
  2857  00182A  0E00               	movlw	low _FromMainLow_MQ
  2858  00182C  0101               	movlb	1	; () banked
  2859  00182E  6F00               	movwf	init_queue@qptr& (0+255),b
  2860  001830  EC67  F00B         	call	_init_queue	;wreg free
  2861                           
  2862                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2863  001834  0105               	movlb	5	; () banked
  2864  001836  0E05               	movlw	high _FromMainHigh_MQ
  2865  001838  0101               	movlb	1	; () banked
  2866  00183A  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2867  00183C  0105               	movlb	5	; () banked
  2868  00183E  0E00               	movlw	low _FromMainHigh_MQ
  2869  001840  0101               	movlb	1	; () banked
  2870  001842  6F00               	movwf	init_queue@qptr& (0+255),b
  2871  001844  EC67  F00B         	call	_init_queue	;wreg free
  2872  001848  0012               	return	
  2873  00184A                     __end_of_init_queues:
  2874                           	opt stack 0
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           prodh	equ	0xFF4
  2880                           prodl	equ	0xFF3
  2881                           postinc0	equ	0xFEE
  2882                           wreg	equ	0xFE8
  2883                           indf1	equ	0xFE7
  2884                           fsr1h	equ	0xFE2
  2885                           fsr1l	equ	0xFE1
  2886                           indf2	equ	0xFDF
  2887                           postinc2	equ	0xFDE
  2888                           postdec2	equ	0xFDD
  2889                           fsr2h	equ	0xFDA
  2890                           fsr2l	equ	0xFD9
  2891                           status	equ	0xFD8
  2892                           
  2893 ;; *************** function _init_queue *****************
  2894 ;; Defined at:
  2895 ;;		line 14 in file "../src/messages.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2898 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  i               1    2[BANK1 ] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;		None               void
  2903 ;; Registers used:
  2904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2910 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;Total ram usage:        3 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:   11
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_init_queues
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text12
  2925  0016CE                     __ptext12:
  2926                           	opt stack 0
  2927  0016CE                     _init_queue:
  2928                           	opt stack 17
  2929                           
  2930                           ;messages.c: 15: unsigned char i;
  2931                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2932                           
  2933                           ;incstack = 0
  2934  0016CE  0101               	movlb	1	; () banked
  2935  0016D0  EE20 F088          	lfsr	2,136
  2936  0016D4  0101               	movlb	1	; () banked
  2937  0016D6  5100               	movf	init_queue@qptr& (0+255),w,b
  2938  0016D8  26D9               	addwf	fsr2l,f,c
  2939  0016DA  0101               	movlb	1	; () banked
  2940  0016DC  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  2941  0016DE  22DA               	addwfc	fsr2h,f,c
  2942  0016E0  0E00               	movlw	0
  2943  0016E2  6EDF               	movwf	indf2,c
  2944                           
  2945                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2946  0016E4  0101               	movlb	1	; () banked
  2947  0016E6  EE20 F089          	lfsr	2,137
  2948  0016EA  0101               	movlb	1	; () banked
  2949  0016EC  5100               	movf	init_queue@qptr& (0+255),w,b
  2950  0016EE  26D9               	addwf	fsr2l,f,c
  2951  0016F0  0101               	movlb	1	; () banked
  2952  0016F2  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  2953  0016F4  22DA               	addwfc	fsr2h,f,c
  2954  0016F6  0E00               	movlw	0
  2955  0016F8  6EDF               	movwf	indf2,c
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;messages.c: 19: for (i = 0; i < 8; i++) {
  2959  0016FA  0E00               	movlw	0
  2960  0016FC  0101               	movlb	1	; () banked
  2961  0016FE  6F02               	movwf	init_queue@i& (0+255),b
  2962                           
  2963                           ; BSR set to: 1
  2964  001700  0E07               	movlw	7
  2965  001702  0101               	movlb	1	; () banked
  2966  001704  6502               	cpfsgt	init_queue@i& (0+255),b
  2967  001706  D001               	goto	l3405
  2968  001708  0012               	return	
  2969  00170A                     l3405:
  2970                           
  2971                           ; BSR set to: 1
  2972                           ;messages.c: 20: qptr->queue[i].full = 0;
  2973  00170A  0101               	movlb	1	; () banked
  2974  00170C  5102               	movf	init_queue@i& (0+255),w,b
  2975  00170E  0D11               	mullw	17
  2976  001710  50F3               	movf	prodl,w,c
  2977  001712  0101               	movlb	1	; () banked
  2978  001714  2500               	addwf	init_queue@qptr& (0+255),w,b
  2979  001716  6ED9               	movwf	fsr2l,c
  2980  001718  50F4               	movf	prodh,w,c
  2981  00171A  0101               	movlb	1	; () banked
  2982  00171C  2101               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2983  00171E  6EDA               	movwf	fsr2h,c
  2984  001720  0E00               	movlw	0
  2985  001722  6EDF               	movwf	indf2,c
  2986                           
  2987                           ; BSR set to: 1
  2988  001724  0101               	movlb	1	; () banked
  2989  001726  2B02               	incf	init_queue@i& (0+255),f,b
  2990                           
  2991                           ; BSR set to: 1
  2992  001728  0E07               	movlw	7
  2993  00172A  0101               	movlb	1	; () banked
  2994  00172C  6502               	cpfsgt	init_queue@i& (0+255),b
  2995  00172E  D7ED               	goto	l3405
  2996  001730  0012               	return	
  2997  001732                     __end_of_init_queue:
  2998                           	opt stack 0
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           postinc0	equ	0xFEE
  3006                           wreg	equ	0xFE8
  3007                           indf1	equ	0xFE7
  3008                           fsr1h	equ	0xFE2
  3009                           fsr1l	equ	0xFE1
  3010                           indf2	equ	0xFDF
  3011                           postinc2	equ	0xFDE
  3012                           postdec2	equ	0xFDD
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _init_i2c *****************
  3018 ;; Defined at:
  3019 ;;		line 327 in file "../src/my_i2c.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3022 ;;		 -> main@ic(38), 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;		None               void
  3027 ;; Registers used:
  3028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3034 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;Total ram usage:        2 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:   11
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_main
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text13
  3049  001664                     __ptext13:
  3050                           	opt stack 0
  3051  001664                     _init_i2c:
  3052                           	opt stack 18
  3053                           
  3054                           ;my_i2c.c: 328: ic_ptr = ic;
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;incstack = 0
  3058  001664  0101               	movlb	1	; () banked
  3059  001666  0100               	movlb	0	; () banked
  3060  001668  C101  F0D5         	movff	init_i2c@ic+1,_ic_ptr+1
  3061  00166C  0101               	movlb	1	; () banked
  3062  00166E  0100               	movlb	0	; () banked
  3063  001670  C100  F0D4         	movff	init_i2c@ic,_ic_ptr
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;my_i2c.c: 329: ic_ptr->buflen = 0;
  3067  001674  0100               	movlb	0	; () banked
  3068  001676  EE20 F00E          	lfsr	2,14
  3069  00167A  0100               	movlb	0	; () banked
  3070  00167C  51D4               	movf	_ic_ptr& (0+255),w,b
  3071  00167E  26D9               	addwf	fsr2l,f,c
  3072  001680  0100               	movlb	0	; () banked
  3073  001682  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  3074  001684  22DA               	addwfc	fsr2h,f,c
  3075  001686  0E00               	movlw	0
  3076  001688  6EDF               	movwf	indf2,c
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;my_i2c.c: 330: ic_ptr->event_count = 0;
  3080  00168A  0100               	movlb	0	; () banked
  3081  00168C  EE20 F020          	lfsr	2,32
  3082  001690  0100               	movlb	0	; () banked
  3083  001692  51D4               	movf	_ic_ptr& (0+255),w,b
  3084  001694  26D9               	addwf	fsr2l,f,c
  3085  001696  0100               	movlb	0	; () banked
  3086  001698  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  3087  00169A  22DA               	addwfc	fsr2h,f,c
  3088  00169C  0E00               	movlw	0
  3089  00169E  6EDF               	movwf	indf2,c
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;my_i2c.c: 331: ic_ptr->status = 0x5;
  3093  0016A0  0100               	movlb	0	; () banked
  3094  0016A2  EE20 F021          	lfsr	2,33
  3095  0016A6  0100               	movlb	0	; () banked
  3096  0016A8  51D4               	movf	_ic_ptr& (0+255),w,b
  3097  0016AA  26D9               	addwf	fsr2l,f,c
  3098  0016AC  0100               	movlb	0	; () banked
  3099  0016AE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  3100  0016B0  22DA               	addwfc	fsr2h,f,c
  3101  0016B2  0E05               	movlw	5
  3102  0016B4  6EDF               	movwf	indf2,c
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;my_i2c.c: 332: ic_ptr->error_count = 0;
  3106  0016B6  0100               	movlb	0	; () banked
  3107  0016B8  EE20 F023          	lfsr	2,35
  3108  0016BC  0100               	movlb	0	; () banked
  3109  0016BE  51D4               	movf	_ic_ptr& (0+255),w,b
  3110  0016C0  26D9               	addwf	fsr2l,f,c
  3111  0016C2  0100               	movlb	0	; () banked
  3112  0016C4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  3113  0016C6  22DA               	addwfc	fsr2h,f,c
  3114  0016C8  0E00               	movlw	0
  3115  0016CA  6EDF               	movwf	indf2,c
  3116                           
  3117                           ; BSR set to: 0
  3118  0016CC  0012               	return	
  3119  0016CE                     __end_of_init_i2c:
  3120                           	opt stack 0
  3121                           tblptru	equ	0xFF8
  3122                           tblptrh	equ	0xFF7
  3123                           tblptrl	equ	0xFF6
  3124                           tablat	equ	0xFF5
  3125                           prodh	equ	0xFF4
  3126                           prodl	equ	0xFF3
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           indf1	equ	0xFE7
  3130                           fsr1h	equ	0xFE2
  3131                           fsr1l	equ	0xFE1
  3132                           indf2	equ	0xFDF
  3133                           postinc2	equ	0xFDE
  3134                           postdec2	equ	0xFDD
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8
  3138                           
  3139 ;; *************** function _i2c_configure_slave *****************
  3140 ;; Defined at:
  3141 ;;		line 338 in file "../src/my_i2c.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  addr            1    wreg     unsigned char 
  3144 ;;  ptr_thingy      2    0[BANK1 ] PTR unsigned char 
  3145 ;;		 -> main@need_sensor_data(1), 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  addr            1    2[BANK1 ] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;		None               void
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3157 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;Total ram usage:        3 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:   11
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text14
  3172  0019DE                     __ptext14:
  3173                           	opt stack 0
  3174  0019DE                     _i2c_configure_slave:
  3175                           	opt stack 18
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;incstack = 0
  3179                           ;i2c_configure_slave@addr stored from wreg
  3180  0019DE  0101               	movlb	1	; () banked
  3181  0019E0  6F02               	movwf	i2c_configure_slave@addr& (0+255),b
  3182                           
  3183                           ; BSR set to: 1
  3184                           ;my_i2c.c: 340: need_sensor_data = ptr_thingy;
  3185  0019E2  0101               	movlb	1	; () banked
  3186  0019E4  0100               	movlb	0	; () banked
  3187  0019E6  C101  F0B0         	movff	i2c_configure_slave@ptr_thingy+1,_need_sensor_data+1
  3188  0019EA  0101               	movlb	1	; () banked
  3189  0019EC  0100               	movlb	0	; () banked
  3190  0019EE  C100  F0AF         	movff	i2c_configure_slave@ptr_thingy,_need_sensor_data
  3191                           
  3192                           ;my_i2c.c: 348: TRISBbits.TRISB4 = 1;
  3193  0019F2  8893               	bsf	3987,4,c	;volatile
  3194                           
  3195                           ;my_i2c.c: 349: TRISBbits.TRISB5 = 1;
  3196  0019F4  8A93               	bsf	3987,5,c	;volatile
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;my_i2c.c: 357: SSPADD = addr;
  3200  0019F6  C102  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;my_i2c.c: 359: SSPSTAT = 0x0;
  3204  0019FA  0E00               	movlw	0
  3205  0019FC  6EC7               	movwf	4039,c	;volatile
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;my_i2c.c: 360: SSPCON1 = 0x0;
  3209  0019FE  0E00               	movlw	0
  3210  001A00  6EC6               	movwf	4038,c	;volatile
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;my_i2c.c: 361: SSPCON2 = 0x0;
  3214  001A02  0E00               	movlw	0
  3215  001A04  6EC5               	movwf	4037,c	;volatile
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;my_i2c.c: 362: SSPCON1 |= 0x0E;
  3219  001A06  0E0E               	movlw	14
  3220  001A08  12C6               	iorwf	4038,f,c	;volatile
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;my_i2c.c: 363: SSPSTAT |= 0b10000000;
  3224  001A0A  8EC7               	bsf	4039,7,c	;volatile
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;my_i2c.c: 378: PORTBbits.SCL1 = 1;
  3228  001A0C  8881               	bsf	3969,4,c	;volatile
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;my_i2c.c: 379: PORTBbits.SDA1 = 1;
  3232  001A0E  8A81               	bsf	3969,5,c	;volatile
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;my_i2c.c: 388: SSPCON2bits.SEN = 1;
  3236  001A10  80C5               	bsf	4037,0,c	;volatile
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;my_i2c.c: 389: SSPCON1 |= 0b00100000;
  3240  001A12  8AC6               	bsf	4038,5,c	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243  001A14  0012               	return	
  3244  001A16                     __end_of_i2c_configure_slave:
  3245                           	opt stack 0
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           prodh	equ	0xFF4
  3251                           prodl	equ	0xFF3
  3252                           postinc0	equ	0xFEE
  3253                           wreg	equ	0xFE8
  3254                           indf1	equ	0xFE7
  3255                           fsr1h	equ	0xFE2
  3256                           fsr1l	equ	0xFE1
  3257                           indf2	equ	0xFDF
  3258                           postinc2	equ	0xFDE
  3259                           postdec2	equ	0xFDD
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function _enable_interrupts *****************
  3265 ;; Defined at:
  3266 ;;		line 14 in file "../src/interrupts.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;		None               void
  3273 ;; Registers used:
  3274 ;;		None
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:   11
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text15
  3295  001CC2                     __ptext15:
  3296                           	opt stack 0
  3297  001CC2                     _enable_interrupts:
  3298                           	opt stack 18
  3299                           
  3300                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;incstack = 0
  3304  001CC2  8ED0               	bsf	4048,7,c	;volatile
  3305                           
  3306                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3307  001CC4  8EF2               	bsf	intcon,7,c	;volatile
  3308                           
  3309                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3310  001CC6  8CF2               	bsf	intcon,6,c	;volatile
  3311  001CC8  0012               	return	
  3312  001CCA                     __end_of_enable_interrupts:
  3313                           	opt stack 0
  3314                           tblptru	equ	0xFF8
  3315                           tblptrh	equ	0xFF7
  3316                           tblptrl	equ	0xFF6
  3317                           tablat	equ	0xFF5
  3318                           prodh	equ	0xFF4
  3319                           prodl	equ	0xFF3
  3320                           intcon	equ	0xFF2
  3321                           postinc0	equ	0xFEE
  3322                           wreg	equ	0xFE8
  3323                           indf1	equ	0xFE7
  3324                           fsr1h	equ	0xFE2
  3325                           fsr1l	equ	0xFE1
  3326                           indf2	equ	0xFDF
  3327                           postinc2	equ	0xFDE
  3328                           postdec2	equ	0xFDD
  3329                           fsr2h	equ	0xFDA
  3330                           fsr2l	equ	0xFD9
  3331                           status	equ	0xFD8
  3332                           
  3333 ;; *************** function _debug_configure *****************
  3334 ;; Defined at:
  3335 ;;		line 3 in file "../src/debug.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;		None               void
  3342 ;; Registers used:
  3343 ;;		wreg, status,2
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:   11
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text16
  3364  001CB8                     __ptext16:
  3365                           	opt stack 0
  3366  001CB8                     _debug_configure:
  3367                           	opt stack 18
  3368                           
  3369                           ;debug.c: 5: TRISD = 0x00;
  3370                           
  3371                           ;incstack = 0
  3372  001CB8  0E00               	movlw	0
  3373  001CBA  6E95               	movwf	3989,c	;volatile
  3374                           
  3375                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3376  001CBC  9093               	bcf	3987,0,c	;volatile
  3377                           
  3378                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3379  001CBE  9293               	bcf	3987,1,c	;volatile
  3380  001CC0  0012               	return	
  3381  001CC2                     __end_of_debug_configure:
  3382                           	opt stack 0
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           prodh	equ	0xFF4
  3388                           prodl	equ	0xFF3
  3389                           intcon	equ	0xFF2
  3390                           postinc0	equ	0xFEE
  3391                           wreg	equ	0xFE8
  3392                           indf1	equ	0xFE7
  3393                           fsr1h	equ	0xFE2
  3394                           fsr1l	equ	0xFE1
  3395                           indf2	equ	0xFDF
  3396                           postinc2	equ	0xFDE
  3397                           postdec2	equ	0xFDD
  3398                           fsr2h	equ	0xFDA
  3399                           fsr2l	equ	0xFD9
  3400                           status	equ	0xFD8
  3401                           
  3402 ;; *************** function _blip3 *****************
  3403 ;; Defined at:
  3404 ;;		line 32 in file "../src/debug.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;		None               void
  3411 ;; Registers used:
  3412 ;;		None
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3422 ;;Total ram usage:        0 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:   11
  3425 ;; This function calls:
  3426 ;;		Nothing
  3427 ;; This function is called by:
  3428 ;;		_main
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text17
  3433  001CCA                     __ptext17:
  3434                           	opt stack 0
  3435  001CCA                     _blip3:
  3436                           	opt stack 18
  3437                           
  3438                           ;debug.c: 34: LATDbits.LD6 = 0;
  3439                           
  3440                           ;incstack = 0
  3441  001CCA  9C8C               	bcf	3980,6,c	;volatile
  3442                           
  3443                           ;debug.c: 35: LATDbits.LD6 = 1;
  3444  001CCC  8C8C               	bsf	3980,6,c	;volatile
  3445                           
  3446                           ;debug.c: 36: LATDbits.LD6 = 0;
  3447  001CCE  9C8C               	bcf	3980,6,c	;volatile
  3448  001CD0  0012               	return	
  3449  001CD2                     __end_of_blip3:
  3450                           	opt stack 0
  3451                           tblptru	equ	0xFF8
  3452                           tblptrh	equ	0xFF7
  3453                           tblptrl	equ	0xFF6
  3454                           tablat	equ	0xFF5
  3455                           prodh	equ	0xFF4
  3456                           prodl	equ	0xFF3
  3457                           intcon	equ	0xFF2
  3458                           postinc0	equ	0xFEE
  3459                           wreg	equ	0xFE8
  3460                           indf1	equ	0xFE7
  3461                           fsr1h	equ	0xFE2
  3462                           fsr1l	equ	0xFE1
  3463                           indf2	equ	0xFDF
  3464                           postinc2	equ	0xFDE
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _blip2 *****************
  3471 ;; Defined at:
  3472 ;;		line 25 in file "../src/debug.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;		None               void
  3479 ;; Registers used:
  3480 ;;		None
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;Total ram usage:        0 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:   11
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text18
  3501  001CD2                     __ptext18:
  3502                           	opt stack 0
  3503  001CD2                     _blip2:
  3504                           	opt stack 18
  3505                           
  3506                           ;debug.c: 27: LATDbits.LD5 = 0;
  3507                           
  3508                           ;incstack = 0
  3509  001CD2  9A8C               	bcf	3980,5,c	;volatile
  3510                           
  3511                           ;debug.c: 28: LATDbits.LD5 = 1;
  3512  001CD4  8A8C               	bsf	3980,5,c	;volatile
  3513                           
  3514                           ;debug.c: 29: LATDbits.LD5 = 0;
  3515  001CD6  9A8C               	bcf	3980,5,c	;volatile
  3516  001CD8  0012               	return	
  3517  001CDA                     __end_of_blip2:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           intcon	equ	0xFF2
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           indf1	equ	0xFE7
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           indf2	equ	0xFDF
  3532                           postinc2	equ	0xFDE
  3533                           postdec2	equ	0xFDD
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8
  3537                           
  3538 ;; *************** function _blip1 *****************
  3539 ;; Defined at:
  3540 ;;		line 18 in file "../src/debug.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;		None               void
  3547 ;; Registers used:
  3548 ;;		None
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:   11
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text19
  3569  001CDA                     __ptext19:
  3570                           	opt stack 0
  3571  001CDA                     _blip1:
  3572                           	opt stack 18
  3573                           
  3574                           ;debug.c: 20: LATDbits.LD4 = 0;
  3575                           
  3576                           ;incstack = 0
  3577  001CDA  988C               	bcf	3980,4,c	;volatile
  3578                           
  3579                           ;debug.c: 21: LATDbits.LD4 = 1;
  3580  001CDC  888C               	bsf	3980,4,c	;volatile
  3581                           
  3582                           ;debug.c: 22: LATDbits.LD4 = 0;
  3583  001CDE  988C               	bcf	3980,4,c	;volatile
  3584  001CE0  0012               	return	
  3585  001CE2                     __end_of_blip1:
  3586                           	opt stack 0
  3587                           tblptru	equ	0xFF8
  3588                           tblptrh	equ	0xFF7
  3589                           tblptrl	equ	0xFF6
  3590                           tablat	equ	0xFF5
  3591                           prodh	equ	0xFF4
  3592                           prodl	equ	0xFF3
  3593                           intcon	equ	0xFF2
  3594                           postinc0	equ	0xFEE
  3595                           wreg	equ	0xFE8
  3596                           indf1	equ	0xFE7
  3597                           fsr1h	equ	0xFE2
  3598                           fsr1l	equ	0xFE1
  3599                           indf2	equ	0xFDF
  3600                           postinc2	equ	0xFDE
  3601                           postdec2	equ	0xFDD
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8
  3605                           
  3606 ;; *************** function _blip *****************
  3607 ;; Defined at:
  3608 ;;		line 11 in file "../src/debug.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;		None               void
  3615 ;; Registers used:
  3616 ;;		None
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:   11
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text20
  3637  001CE2                     __ptext20:
  3638                           	opt stack 0
  3639  001CE2                     _blip:
  3640                           	opt stack 18
  3641                           
  3642                           ;debug.c: 13: LATDbits.LD2 = 0;
  3643                           
  3644                           ;incstack = 0
  3645  001CE2  948C               	bcf	3980,2,c	;volatile
  3646                           
  3647                           ;debug.c: 14: LATDbits.LD2 = 1;
  3648  001CE4  848C               	bsf	3980,2,c	;volatile
  3649                           
  3650                           ;debug.c: 15: LATDbits.LD2 = 0;
  3651  001CE6  948C               	bcf	3980,2,c	;volatile
  3652  001CE8  0012               	return	
  3653  001CEA                     __end_of_blip:
  3654                           	opt stack 0
  3655                           tblptru	equ	0xFF8
  3656                           tblptrh	equ	0xFF7
  3657                           tblptrl	equ	0xFF6
  3658                           tablat	equ	0xFF5
  3659                           prodh	equ	0xFF4
  3660                           prodl	equ	0xFF3
  3661                           intcon	equ	0xFF2
  3662                           postinc0	equ	0xFEE
  3663                           wreg	equ	0xFE8
  3664                           indf1	equ	0xFE7
  3665                           fsr1h	equ	0xFE2
  3666                           fsr1l	equ	0xFE1
  3667                           indf2	equ	0xFDF
  3668                           postinc2	equ	0xFDE
  3669                           postdec2	equ	0xFDD
  3670                           fsr2h	equ	0xFDA
  3671                           fsr2l	equ	0xFD9
  3672                           status	equ	0xFD8
  3673                           
  3674 ;; *************** function _ToMainLow_recvmsg *****************
  3675 ;; Defined at:
  3676 ;;		line 112 in file "../src/messages.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  maxlength       1    wreg     unsigned char 
  3679 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3680 ;;		 -> main@msgtype(1), 
  3681 ;;  data            2   26[BANK1 ] PTR void 
  3682 ;;		 -> main@msgbuffer(15), 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      char 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3694 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3695 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;Total ram usage:        5 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:   13
  3701 ;; This function calls:
  3702 ;;		_recv_msg
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text21
  3709  001A16                     __ptext21:
  3710                           	opt stack 0
  3711  001A16                     _ToMainLow_recvmsg:
  3712                           	opt stack 16
  3713                           
  3714                           ;incstack = 0
  3715                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3716  001A16  0101               	movlb	1	; () banked
  3717  001A18  6F1C               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3718                           
  3719                           ; BSR set to: 1
  3720                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3721  001A1A  0102               	movlb	2	; () banked
  3722  001A1C  0E02               	movlw	high _ToMainLow_MQ
  3723  001A1E  0101               	movlb	1	; () banked
  3724  001A20  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  3725  001A22  0102               	movlb	2	; () banked
  3726  001A24  0E00               	movlw	low _ToMainLow_MQ
  3727  001A26  0101               	movlb	1	; () banked
  3728  001A28  6F0A               	movwf	recv_msg@qptr& (0+255),b
  3729  001A2A  C11C  F10C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3730  001A2E  0101               	movlb	1	; () banked
  3731  001A30  C119  F10E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3732  001A34  0101               	movlb	1	; () banked
  3733  001A36  C118  F10D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3734  001A3A  0101               	movlb	1	; () banked
  3735  001A3C  C11B  F110         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3736  001A40  0101               	movlb	1	; () banked
  3737  001A42  C11A  F10F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3738  001A46  EC4E  F006         	call	_recv_msg	;wreg free
  3739  001A4A  0012               	return	
  3740  001A4C                     __end_of_ToMainLow_recvmsg:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           postinc0	equ	0xFEE
  3750                           wreg	equ	0xFE8
  3751                           indf1	equ	0xFE7
  3752                           fsr1h	equ	0xFE2
  3753                           fsr1l	equ	0xFE1
  3754                           indf2	equ	0xFDF
  3755                           postinc2	equ	0xFDE
  3756                           postdec2	equ	0xFDD
  3757                           fsr2h	equ	0xFDA
  3758                           fsr2l	equ	0xFD9
  3759                           status	equ	0xFD8
  3760                           
  3761 ;; *************** function _ToMainHigh_recvmsg *****************
  3762 ;; Defined at:
  3763 ;;		line 135 in file "../src/messages.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  maxlength       1    wreg     unsigned char 
  3766 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3767 ;;		 -> main@msgtype(1), 
  3768 ;;  data            2   26[BANK1 ] PTR void 
  3769 ;;		 -> main@msgbuffer(15), 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      char 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3781 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;Total ram usage:        5 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:   13
  3788 ;; This function calls:
  3789 ;;		_recv_msg
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text22
  3796  001A4C                     __ptext22:
  3797                           	opt stack 0
  3798  001A4C                     _ToMainHigh_recvmsg:
  3799                           	opt stack 16
  3800                           
  3801                           ;incstack = 0
  3802                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3803  001A4C  0101               	movlb	1	; () banked
  3804  001A4E  6F1C               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3805                           
  3806                           ; BSR set to: 1
  3807                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3808  001A50  0103               	movlb	3	; () banked
  3809  001A52  0E03               	movlw	high _ToMainHigh_MQ
  3810  001A54  0101               	movlb	1	; () banked
  3811  001A56  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  3812  001A58  0103               	movlb	3	; () banked
  3813  001A5A  0E00               	movlw	low _ToMainHigh_MQ
  3814  001A5C  0101               	movlb	1	; () banked
  3815  001A5E  6F0A               	movwf	recv_msg@qptr& (0+255),b
  3816  001A60  C11C  F10C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3817  001A64  0101               	movlb	1	; () banked
  3818  001A66  C119  F10E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3819  001A6A  0101               	movlb	1	; () banked
  3820  001A6C  C118  F10D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3821  001A70  0101               	movlb	1	; () banked
  3822  001A72  C11B  F110         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3823  001A76  0101               	movlb	1	; () banked
  3824  001A78  C11A  F10F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3825  001A7C  EC4E  F006         	call	_recv_msg	;wreg free
  3826  001A80  0012               	return	
  3827  001A82                     __end_of_ToMainHigh_recvmsg:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           prodh	equ	0xFF4
  3834                           prodl	equ	0xFF3
  3835                           intcon	equ	0xFF2
  3836                           postinc0	equ	0xFEE
  3837                           wreg	equ	0xFE8
  3838                           indf1	equ	0xFE7
  3839                           fsr1h	equ	0xFE2
  3840                           fsr1l	equ	0xFE1
  3841                           indf2	equ	0xFDF
  3842                           postinc2	equ	0xFDE
  3843                           postdec2	equ	0xFDD
  3844                           fsr2h	equ	0xFDA
  3845                           fsr2l	equ	0xFD9
  3846                           status	equ	0xFD8
  3847                           
  3848 ;; *************** function _recv_msg *****************
  3849 ;; Defined at:
  3850 ;;		line 63 in file "../src/messages.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3853 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  3854 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3855 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3856 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  3857 ;;  data            2   15[BANK1 ] PTR void 
  3858 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3861 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  3862 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  3863 ;;  tlength         2   20[BANK1 ] unsigned int 
  3864 ;;  slot            1   19[BANK1 ] unsigned char 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      char 
  3867 ;; Registers used:
  3868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3874 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;Total ram usage:       14 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:   12
  3881 ;; This function calls:
  3882 ;;		_memcpy
  3883 ;; This function is called by:
  3884 ;;		_ToMainLow_recvmsg
  3885 ;;		_ToMainHigh_recvmsg
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text23
  3890  000C9C                     __ptext23:
  3891                           	opt stack 0
  3892  000C9C                     _recv_msg:
  3893                           	opt stack 16
  3894                           
  3895                           ;messages.c: 64: unsigned char slot;
  3896                           ;messages.c: 68: msg *qmsg;
  3897                           ;messages.c: 69: size_t tlength;
  3898                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3899                           
  3900                           ;incstack = 0
  3901  000C9C  0101               	movlb	1	; () banked
  3902  000C9E  EE20 F089          	lfsr	2,137
  3903  000CA2  0101               	movlb	1	; () banked
  3904  000CA4  510A               	movf	recv_msg@qptr& (0+255),w,b
  3905  000CA6  26D9               	addwf	fsr2l,f,c
  3906  000CA8  0101               	movlb	1	; () banked
  3907  000CAA  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3908  000CAC  22DA               	addwfc	fsr2h,f,c
  3909  000CAE  50DF               	movf	indf2,w,c
  3910  000CB0  0101               	movlb	1	; () banked
  3911  000CB2  6F13               	movwf	recv_msg@slot& (0+255),b
  3912                           
  3913                           ; BSR set to: 1
  3914                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3915  000CB4  0101               	movlb	1	; () banked
  3916  000CB6  5113               	movf	recv_msg@slot& (0+255),w,b
  3917  000CB8  0D11               	mullw	17
  3918  000CBA  50F3               	movf	prodl,w,c
  3919  000CBC  0101               	movlb	1	; () banked
  3920  000CBE  250A               	addwf	recv_msg@qptr& (0+255),w,b
  3921  000CC0  0101               	movlb	1	; () banked
  3922  000CC2  6F16               	movwf	recv_msg@qmsg& (0+255),b
  3923  000CC4  50F4               	movf	prodh,w,c
  3924  000CC6  0101               	movlb	1	; () banked
  3925  000CC8  210B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3926  000CCA  0101               	movlb	1	; () banked
  3927  000CCC  6F17               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3928                           
  3929                           ; BSR set to: 1
  3930                           ;messages.c: 74: if (qmsg->full == 1) {
  3931  000CCE  0E01               	movlw	1
  3932  000CD0  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  3933  000CD4  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3934  000CD8  62DF               	cpfseq	indf2,c
  3935  000CDA  D06D               	goto	l3439
  3936                           
  3937                           ; BSR set to: 1
  3938                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3939  000CDC  0101               	movlb	1	; () banked
  3940  000CDE  EE20 F001          	lfsr	2,1
  3941  000CE2  0101               	movlb	1	; () banked
  3942  000CE4  5116               	movf	recv_msg@qmsg& (0+255),w,b
  3943  000CE6  26D9               	addwf	fsr2l,f,c
  3944  000CE8  0101               	movlb	1	; () banked
  3945  000CEA  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3946  000CEC  22DA               	addwfc	fsr2h,f,c
  3947  000CEE  50DF               	movf	indf2,w,c
  3948  000CF0  0101               	movlb	1	; () banked
  3949  000CF2  5D0C               	subwf	recv_msg@maxlength& (0+255),w,b
  3950  000CF4  B0D8               	btfsc	status,0,c
  3951  000CF6  D002               	goto	l3423
  3952                           
  3953                           ; BSR set to: 1
  3954                           ;messages.c: 77: return (-3);
  3955  000CF8  0EFD               	movlw	253
  3956  000CFA  0012               	return	
  3957  000CFC                     l3423:
  3958                           
  3959                           ; BSR set to: 1
  3960                           ;messages.c: 78: }
  3961                           ;messages.c: 80: tlength = qmsg->length;
  3962  000CFC  0101               	movlb	1	; () banked
  3963  000CFE  EE20 F001          	lfsr	2,1
  3964  000D02  0101               	movlb	1	; () banked
  3965  000D04  5116               	movf	recv_msg@qmsg& (0+255),w,b
  3966  000D06  26D9               	addwf	fsr2l,f,c
  3967  000D08  0101               	movlb	1	; () banked
  3968  000D0A  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3969  000D0C  22DA               	addwfc	fsr2h,f,c
  3970  000D0E  50DF               	movf	indf2,w,c
  3971  000D10  0101               	movlb	1	; () banked
  3972  000D12  6F11               	movwf	??_recv_msg& (0+255),b
  3973  000D14  0101               	movlb	1	; () banked
  3974  000D16  5111               	movf	??_recv_msg& (0+255),w,b
  3975  000D18  0101               	movlb	1	; () banked
  3976  000D1A  6F14               	movwf	recv_msg@tlength& (0+255),b
  3977  000D1C  0101               	movlb	1	; () banked
  3978  000D1E  6B15               	clrf	(recv_msg@tlength+1)& (0+255),b
  3979                           
  3980                           ; BSR set to: 1
  3981                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3982  000D20  0101               	movlb	1	; () banked
  3983  000D22  C110  F101         	movff	recv_msg@data+1,memcpy@d1+1
  3984  000D26  0101               	movlb	1	; () banked
  3985  000D28  C10F  F100         	movff	recv_msg@data,memcpy@d1
  3986  000D2C  0E03               	movlw	3
  3987  000D2E  0101               	movlb	1	; () banked
  3988  000D30  2516               	addwf	recv_msg@qmsg& (0+255),w,b
  3989  000D32  0101               	movlb	1	; () banked
  3990  000D34  6F11               	movwf	??_recv_msg& (0+255),b
  3991  000D36  0E00               	movlw	0
  3992  000D38  0101               	movlb	1	; () banked
  3993  000D3A  2117               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3994  000D3C  0101               	movlb	1	; () banked
  3995  000D3E  6F12               	movwf	(??_recv_msg+1)& (0+255),b
  3996  000D40  C111  F102         	movff	??_recv_msg,memcpy@s1
  3997  000D44  C112  F103         	movff	??_recv_msg+1,memcpy@s1+1
  3998  000D48  C114  F104         	movff	recv_msg@tlength,memcpy@n
  3999  000D4C  C115  F105         	movff	recv_msg@tlength+1,memcpy@n+1
  4000  000D50  EC25  F00C         	call	_memcpy	;wreg free
  4001                           
  4002                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  4003  000D54  0101               	movlb	1	; () banked
  4004  000D56  EE20 F089          	lfsr	2,137
  4005  000D5A  0101               	movlb	1	; () banked
  4006  000D5C  510A               	movf	recv_msg@qptr& (0+255),w,b
  4007  000D5E  26D9               	addwf	fsr2l,f,c
  4008  000D60  0101               	movlb	1	; () banked
  4009  000D62  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4010  000D64  22DA               	addwfc	fsr2h,f,c
  4011  000D66  0101               	movlb	1	; () banked
  4012  000D68  EE10 F089          	lfsr	1,137
  4013  000D6C  0101               	movlb	1	; () banked
  4014  000D6E  510A               	movf	recv_msg@qptr& (0+255),w,b
  4015  000D70  26E1               	addwf	fsr1l,f,c
  4016  000D72  0101               	movlb	1	; () banked
  4017  000D74  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4018  000D76  22E2               	addwfc	fsr1h,f,c
  4019  000D78  50E7               	movf	indf1,w,c
  4020  000D7A  0101               	movlb	1	; () banked
  4021  000D7C  6F11               	movwf	??_recv_msg& (0+255),b
  4022  000D7E  0101               	movlb	1	; () banked
  4023  000D80  2911               	incf	??_recv_msg& (0+255),w,b
  4024  000D82  0B07               	andlw	7
  4025  000D84  6EDF               	movwf	indf2,c
  4026                           
  4027                           ; BSR set to: 1
  4028                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4029  000D86  0101               	movlb	1	; () banked
  4030  000D88  EE20 F002          	lfsr	2,2
  4031  000D8C  0101               	movlb	1	; () banked
  4032  000D8E  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4033  000D90  26D9               	addwf	fsr2l,f,c
  4034  000D92  0101               	movlb	1	; () banked
  4035  000D94  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4036  000D96  22DA               	addwfc	fsr2h,f,c
  4037  000D98  C10D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4038  000D9C  C10E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4039  000DA0  CFDF FFE7          	movff	indf2,indf1
  4040                           
  4041                           ; BSR set to: 1
  4042                           ;messages.c: 91: qmsg->full = 0;
  4043  000DA4  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4044  000DA8  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4045  000DAC  0E00               	movlw	0
  4046  000DAE  6EDF               	movwf	indf2,c
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;messages.c: 92: return (tlength);
  4050  000DB0  0101               	movlb	1	; () banked
  4051  000DB2  5114               	movf	recv_msg@tlength& (0+255),w,b
  4052  000DB4  0012               	return	
  4053  000DB6                     l3439:
  4054                           
  4055                           ; BSR set to: 1
  4056                           ;messages.c: 94: return (-4);
  4057  000DB6  0EFC               	movlw	252
  4058  000DB8  0012               	return	
  4059  000DBA                     __end_of_recv_msg:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           tblptrh	equ	0xFF7
  4063                           tblptrl	equ	0xFF6
  4064                           tablat	equ	0xFF5
  4065                           prodh	equ	0xFF4
  4066                           prodl	equ	0xFF3
  4067                           intcon	equ	0xFF2
  4068                           postinc0	equ	0xFEE
  4069                           wreg	equ	0xFE8
  4070                           indf1	equ	0xFE7
  4071                           fsr1h	equ	0xFE2
  4072                           fsr1l	equ	0xFE1
  4073                           indf2	equ	0xFDF
  4074                           postinc2	equ	0xFDE
  4075                           postdec2	equ	0xFDD
  4076                           fsr2h	equ	0xFDA
  4077                           fsr2l	equ	0xFD9
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function _memcpy *****************
  4081 ;; Defined at:
  4082 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  d1              2    0[BANK1 ] PTR void 
  4085 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4086 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  4087 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  4088 ;;  s1              2    2[BANK1 ] PTR const void 
  4089 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4090 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4091 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  4092 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4093 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  4094 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  4095 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4096 ;;  n               2    4[BANK1 ] unsigned int 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4099 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4100 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4101 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  4102 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4103 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  4104 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  4105 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4106 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4107 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  4108 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  4109 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  2    0[BANK1 ] PTR void 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4119 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4120 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;Total ram usage:       10 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:   11
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_send_msg
  4130 ;;		_recv_msg
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text24
  4135  00184A                     __ptext24:
  4136                           	opt stack 0
  4137  00184A                     _memcpy:
  4138                           	opt stack 14
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;incstack = 0
  4142  00184A  0101               	movlb	1	; () banked
  4143  00184C  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
  4144  001850  0101               	movlb	1	; () banked
  4145  001852  C102  F108         	movff	memcpy@s1,memcpy@s
  4146  001856  0101               	movlb	1	; () banked
  4147  001858  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
  4148  00185C  0101               	movlb	1	; () banked
  4149  00185E  C100  F106         	movff	memcpy@d1,memcpy@d
  4150  001862  D010               	goto	l3363
  4151  001864                     l3357:
  4152                           
  4153                           ; BSR set to: 1
  4154  001864  C108  FFD9         	movff	memcpy@s,fsr2l
  4155  001868  C109  FFDA         	movff	memcpy@s+1,fsr2h
  4156  00186C  C106  FFE1         	movff	memcpy@d,fsr1l
  4157  001870  C107  FFE2         	movff	memcpy@d+1,fsr1h
  4158  001874  CFDF FFE7          	movff	indf2,indf1
  4159                           
  4160                           ; BSR set to: 1
  4161  001878  0101               	movlb	1	; () banked
  4162  00187A  4B08               	infsnz	memcpy@s& (0+255),f,b
  4163  00187C  2B09               	incf	(memcpy@s+1)& (0+255),f,b
  4164                           
  4165                           ; BSR set to: 1
  4166  00187E  0101               	movlb	1	; () banked
  4167  001880  4B06               	infsnz	memcpy@d& (0+255),f,b
  4168  001882  2B07               	incf	(memcpy@d+1)& (0+255),f,b
  4169  001884                     l3363:
  4170                           
  4171                           ; BSR set to: 1
  4172  001884  0101               	movlb	1	; () banked
  4173  001886  0704               	decf	memcpy@n& (0+255),f,b
  4174  001888  A0D8               	btfss	status,0,c
  4175  00188A  0705               	decf	(memcpy@n+1)& (0+255),f,b
  4176  00188C  0101               	movlb	1	; () banked
  4177  00188E  2904               	incf	memcpy@n& (0+255),w,b
  4178  001890  B4D8               	btfsc	status,2,c
  4179  001892  2905               	incf	(memcpy@n+1)& (0+255),w,b
  4180  001894  B4D8               	btfsc	status,2,c
  4181                           
  4182                           ; BSR set to: 1
  4183                           
  4184                           ; BSR set to: 1
  4185                           ;	Return value of _memcpy is never used
  4186  001896  0012               	return	
  4187  001898  D7E5               	goto	l3357
  4188  00189A                     __end_of_memcpy:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           intcon	equ	0xFF2
  4197                           postinc0	equ	0xFEE
  4198                           wreg	equ	0xFE8
  4199                           indf1	equ	0xFE7
  4200                           fsr1h	equ	0xFE2
  4201                           fsr1l	equ	0xFE1
  4202                           indf2	equ	0xFDF
  4203                           postinc2	equ	0xFDE
  4204                           postdec2	equ	0xFDD
  4205                           fsr2h	equ	0xFDA
  4206                           fsr2l	equ	0xFD9
  4207                           status	equ	0xFD8
  4208                           
  4209 ;; *************** function _OpenTimer1 *****************
  4210 ;; Defined at:
  4211 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  config          1    wreg     unsigned char 
  4214 ;;  config1         1    0[BANK1 ] unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  config          1    2[BANK1 ] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;		None               void
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4226 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4227 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4229 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4230 ;;Total ram usage:        3 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:   11
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_main
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text25
  4241  001968                     __ptext25:
  4242                           	opt stack 0
  4243  001968                     _OpenTimer1:
  4244                           	opt stack 18
  4245                           
  4246                           ; BSR set to: 1
  4247                           ;incstack = 0
  4248                           ;OpenTimer1@config stored from wreg
  4249  001968  0101               	movlb	1	; () banked
  4250  00196A  6F02               	movwf	OpenTimer1@config& (0+255),b
  4251                           
  4252                           ; BSR set to: 1
  4253  00196C  0101               	movlb	1	; () banked
  4254  00196E  5100               	movf	OpenTimer1@config1& (0+255),w,b
  4255  001970  0BF3               	andlw	243
  4256  001972  6E9A               	movwf	3994,c	;volatile
  4257  001974  C102  F101         	movff	OpenTimer1@config,??_OpenTimer1
  4258  001978  0E7F               	movlw	127
  4259  00197A  0101               	movlb	1	; () banked
  4260  00197C  1701               	andwf	??_OpenTimer1& (0+255),f,b
  4261  00197E  0101               	movlb	1	; () banked
  4262  001980  90D8               	bcf	status,0,c
  4263  001982  3501               	rlcf	??_OpenTimer1& (0+255),w,b
  4264  001984  6ECD               	movwf	4045,c	;volatile
  4265                           
  4266                           ; BSR set to: 1
  4267  001986  0E00               	movlw	0
  4268  001988  6ECF               	movwf	4047,c	;volatile
  4269                           
  4270                           ; BSR set to: 1
  4271  00198A  0E00               	movlw	0
  4272  00198C  6ECE               	movwf	4046,c	;volatile
  4273                           
  4274                           ; BSR set to: 1
  4275  00198E  909E               	bcf	3998,0,c	;volatile
  4276                           
  4277                           ; BSR set to: 1
  4278  001990  0101               	movlb	1	; () banked
  4279  001992  AF02               	btfss	OpenTimer1@config& (0+255),7,b
  4280  001994  D002               	goto	l581
  4281                           
  4282                           ; BSR set to: 1
  4283  001996  809D               	bsf	3997,0,c	;volatile
  4284  001998  D001               	goto	l582
  4285  00199A                     l581:
  4286                           
  4287                           ; BSR set to: 1
  4288  00199A  909D               	bcf	3997,0,c	;volatile
  4289  00199C                     l582:
  4290                           
  4291                           ; BSR set to: 1
  4292  00199C  BE9A               	btfsc	3994,7,c	;volatile
  4293                           
  4294                           ; BSR set to: 1
  4295  00199E  869A               	bsf	3994,3,c	;volatile
  4296                           
  4297                           ; BSR set to: 1
  4298  0019A0  80CD               	bsf	4045,0,c	;volatile
  4299                           
  4300                           ; BSR set to: 1
  4301  0019A2  0012               	return	
  4302  0019A4                     __end_of_OpenTimer1:
  4303                           	opt stack 0
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           prodh	equ	0xFF4
  4309                           prodl	equ	0xFF3
  4310                           intcon	equ	0xFF2
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           indf1	equ	0xFE7
  4314                           fsr1h	equ	0xFE2
  4315                           fsr1l	equ	0xFE1
  4316                           indf2	equ	0xFDF
  4317                           postinc2	equ	0xFDE
  4318                           postdec2	equ	0xFDD
  4319                           fsr2h	equ	0xFDA
  4320                           fsr2l	equ	0xFD9
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function _OpenTimer0 *****************
  4324 ;; Defined at:
  4325 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  config          1    wreg     unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  config          1    0[BANK1 ] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;		None               void
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4340 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4342 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4343 ;;Total ram usage:        1 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:   11
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_main
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text26
  4354  001BC8                     __ptext26:
  4355                           	opt stack 0
  4356  001BC8                     _OpenTimer0:
  4357                           	opt stack 18
  4358                           
  4359                           ; BSR set to: 1
  4360                           ;incstack = 0
  4361                           ;OpenTimer0@config stored from wreg
  4362  001BC8  0101               	movlb	1	; () banked
  4363  001BCA  6F00               	movwf	OpenTimer0@config& (0+255),b
  4364                           
  4365                           ; BSR set to: 1
  4366  001BCC  0101               	movlb	1	; () banked
  4367  001BCE  5100               	movf	OpenTimer0@config& (0+255),w,b
  4368  001BD0  0B7F               	andlw	127
  4369  001BD2  6ED5               	movwf	4053,c	;volatile
  4370                           
  4371                           ; BSR set to: 1
  4372  001BD4  0E00               	movlw	0
  4373  001BD6  6ED7               	movwf	4055,c	;volatile
  4374                           
  4375                           ; BSR set to: 1
  4376  001BD8  0E00               	movlw	0
  4377  001BDA  6ED6               	movwf	4054,c	;volatile
  4378                           
  4379                           ; BSR set to: 1
  4380  001BDC  94F2               	bcf	intcon,2,c	;volatile
  4381                           
  4382                           ; BSR set to: 1
  4383  001BDE  0101               	movlb	1	; () banked
  4384  001BE0  AF00               	btfss	OpenTimer0@config& (0+255),7,b
  4385  001BE2  D002               	goto	l553
  4386                           
  4387                           ; BSR set to: 1
  4388  001BE4  8AF2               	bsf	intcon,5,c	;volatile
  4389  001BE6  D001               	goto	l554
  4390  001BE8                     l553:
  4391                           
  4392                           ; BSR set to: 1
  4393  001BE8  9AF2               	bcf	intcon,5,c	;volatile
  4394  001BEA                     l554:
  4395                           
  4396                           ; BSR set to: 1
  4397  001BEA  8ED5               	bsf	4053,7,c	;volatile
  4398                           
  4399                           ; BSR set to: 1
  4400  001BEC  0012               	return	
  4401  001BEE                     __end_of_OpenTimer0:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           intcon	equ	0xFF2
  4410                           postinc0	equ	0xFEE
  4411                           wreg	equ	0xFE8
  4412                           indf1	equ	0xFE7
  4413                           fsr1h	equ	0xFE2
  4414                           fsr1l	equ	0xFE1
  4415                           indf2	equ	0xFDF
  4416                           postinc2	equ	0xFDE
  4417                           postdec2	equ	0xFDD
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422 ;; *************** function _InterruptHandlerLow *****************
  4423 ;; Defined at:
  4424 ;;		line 131 in file "../src/interrupts.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;		None
  4429 ;; Return value:  Size  Location     Type
  4430 ;;		None               void
  4431 ;; Registers used:
  4432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4440 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4441 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4442 ;;Total ram usage:       17 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:   10
  4445 ;; This function calls:
  4446 ;;		_timer1_int_handler
  4447 ;;		_uart_receive_interrupt_handler
  4448 ;;		_uart_transmit_interrupt_handler
  4449 ;; This function is called by:
  4450 ;;		Interrupt level 1
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	intcodelo
  4455  000018                     __pintcodelo:
  4456                           	opt stack 0
  4457  000018                     _InterruptHandlerLow:
  4458                           	opt stack 14
  4459                           
  4460                           ; BSR set to: 1
  4461                           ;incstack = 0
  4462  000018  CFD8 F039          	movff	status,??_InterruptHandlerLow
  4463  00001C  CFE8 F03A          	movff	wreg,??_InterruptHandlerLow+1
  4464  000020  CFE0 F03B          	movff	bsr,??_InterruptHandlerLow+2
  4465  000024  CFFA F03C          	movff	pclath,??_InterruptHandlerLow+3
  4466  000028  CFFB F03D          	movff	pclatu,??_InterruptHandlerLow+4
  4467  00002C  CFE9 F03E          	movff	fsr0l,??_InterruptHandlerLow+5
  4468  000030  CFEA F03F          	movff	fsr0h,??_InterruptHandlerLow+6
  4469  000034  CFE1 F040          	movff	fsr1l,??_InterruptHandlerLow+7
  4470  000038  CFE2 F041          	movff	fsr1h,??_InterruptHandlerLow+8
  4471  00003C  CFD9 F042          	movff	fsr2l,??_InterruptHandlerLow+9
  4472  000040  CFDA F043          	movff	fsr2h,??_InterruptHandlerLow+10
  4473  000044  CFF3 F044          	movff	prodl,??_InterruptHandlerLow+11
  4474  000048  CFF4 F045          	movff	prodh,??_InterruptHandlerLow+12
  4475  00004C  CFF6 F046          	movff	tblptrl,??_InterruptHandlerLow+13
  4476  000050  CFF7 F047          	movff	tblptrh,??_InterruptHandlerLow+14
  4477  000054  CFF8 F048          	movff	tblptru,??_InterruptHandlerLow+15
  4478  000058  CFF5 F049          	movff	tablat,??_InterruptHandlerLow+16
  4479                           
  4480                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  4481  00005C  A09E               	btfss	3998,0,c	;volatile
  4482  00005E  D003               	goto	i1l3167
  4483                           
  4484                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  4485  000060  909E               	bcf	3998,0,c	;volatile
  4486                           
  4487                           ;interrupts.c: 139: timer1_int_handler();
  4488  000062  ECBA  F00D         	call	_timer1_int_handler	;wreg free
  4489  000066                     i1l3167:
  4490                           
  4491                           ;interrupts.c: 140: }
  4492                           ;interrupts.c: 143: if (PIR1bits.RCIF) {
  4493  000066  AA9E               	btfss	3998,5,c	;volatile
  4494  000068  D003               	goto	i1l3173
  4495                           
  4496                           ;interrupts.c: 144: PIR1bits.RCIF = 0;
  4497  00006A  9A9E               	bcf	3998,5,c	;volatile
  4498                           
  4499                           ;interrupts.c: 148: uart_receive_interrupt_handler();
  4500  00006C  EC7D  F005         	call	_uart_receive_interrupt_handler	;wreg free
  4501  000070                     i1l3173:
  4502                           
  4503                           ;interrupts.c: 149: }
  4504                           ;interrupts.c: 153: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4505  000070  B89E               	btfsc	3998,4,c	;volatile
  4506  000072  A89D               	btfss	3997,4,c	;volatile
  4507  000074  D002               	goto	i1l52
  4508                           
  4509                           ;interrupts.c: 154: {
  4510                           ;interrupts.c: 158: uart_transmit_interrupt_handler();
  4511  000076  ECEC  F009         	call	_uart_transmit_interrupt_handler	;wreg free
  4512  00007A                     i1l52:
  4513  00007A  C049  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4514  00007E  C048  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4515  000082  C047  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4516  000086  C046  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4517  00008A  C045  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4518  00008E  C044  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4519  000092  C043  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4520  000096  C042  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4521  00009A  C041  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4522  00009E  C040  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4523  0000A2  C03F  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4524  0000A6  C03E  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4525  0000AA  C03D  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4526  0000AE  C03C  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4527  0000B2  C03B  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4528  0000B6  C03A  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4529  0000BA  C039  FFD8         	movff	??_InterruptHandlerLow,status
  4530  0000BE  0010               	retfie	
  4531  0000C0                     __end_of_InterruptHandlerLow:
  4532                           	opt stack 0
  4533                           pclatu	equ	0xFFB
  4534                           pclath	equ	0xFFA
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           prodh	equ	0xFF4
  4540                           prodl	equ	0xFF3
  4541                           intcon	equ	0xFF2
  4542                           postinc0	equ	0xFEE
  4543                           fsr0h	equ	0xFEA
  4544                           fsr0l	equ	0xFE9
  4545                           wreg	equ	0xFE8
  4546                           indf1	equ	0xFE7
  4547                           fsr1h	equ	0xFE2
  4548                           fsr1l	equ	0xFE1
  4549                           bsr	equ	0xFE0
  4550                           indf2	equ	0xFDF
  4551                           postinc2	equ	0xFDE
  4552                           postdec2	equ	0xFDD
  4553                           fsr2h	equ	0xFDA
  4554                           fsr2l	equ	0xFD9
  4555                           status	equ	0xFD8
  4556                           
  4557 ;; *************** function _uart_transmit_interrupt_handler *****************
  4558 ;; Defined at:
  4559 ;;		line 196 in file "../src/my_uart.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  message_stat    1   44[COMRAM] char 
  4564 ;;  data           14   29[COMRAM] unsigned char [14]
  4565 ;;  msgtype         1   43[COMRAM] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;		None               void
  4568 ;; Registers used:
  4569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;Total ram usage:       16 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    9
  4582 ;; This function calls:
  4583 ;;		_FromMainLow_recvmsg
  4584 ;;		_uart_frame_message
  4585 ;; This function is called by:
  4586 ;;		_InterruptHandlerLow
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text28
  4591  0013D8                     __ptext28:
  4592                           	opt stack 0
  4593  0013D8                     _uart_transmit_interrupt_handler:
  4594                           	opt stack 14
  4595                           
  4596                           ;my_uart.c: 199: static unsigned char done = 1;
  4597                           ;my_uart.c: 200: static unsigned char index = 0;
  4598                           ;my_uart.c: 202: unsigned char data[14];
  4599                           ;my_uart.c: 203: static unsigned char message[(14 + 2 + 2)];
  4600                           ;my_uart.c: 205: unsigned char msgtype = 31;
  4601                           
  4602                           ;incstack = 0
  4603  0013D8  0E1F               	movlw	31
  4604  0013DA  6E2C               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4605                           
  4606                           ;my_uart.c: 207: if( done )
  4607  0013DC  505F               	movf	uart_transmit_interrupt_handler@done,w,c
  4608  0013DE  B4D8               	btfsc	status,2,c
  4609  0013E0  D03A               	goto	i1l3005
  4610                           
  4611                           ;my_uart.c: 208: {
  4612                           ;my_uart.c: 209: signed char message_status = FromMainLow_recvmsg(14,&msgtype, (void*)da
      +                          ta );
  4613  0013E2  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4614  0013E4  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4615  0013E6  0E2C               	movlw	low uart_transmit_interrupt_handler@msgtype
  4616  0013E8  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4617  0013EA  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4618  0013EC  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4619  0013EE  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4620  0013F0  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4621  0013F2  0E0E               	movlw	14
  4622  0013F4  ECD0  F00D         	call	_FromMainLow_recvmsg
  4623  0013F8  6E2D               	movwf	uart_transmit_interrupt_handler@message_status,c
  4624                           
  4625                           ;my_uart.c: 211: if( message_status == -4)
  4626  0013FA  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4627  0013FC  0AFC               	xorlw	252
  4628  0013FE  A4D8               	btfss	status,2,c
  4629  001400  D002               	goto	i1l2977
  4630                           
  4631                           ;my_uart.c: 212: {
  4632                           ;my_uart.c: 214: PIE1bits.TX1IE = 0;
  4633  001402  989D               	bcf	3997,4,c	;volatile
  4634                           
  4635                           ;my_uart.c: 215: }
  4636  001404  0012               	return	
  4637  001406                     i1l2977:
  4638                           
  4639                           ;my_uart.c: 216: else if( message_status > 0 )
  4640  001406  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4641  001408  0A80               	xorlw	128
  4642  00140A  0F7F               	addlw	-129
  4643  00140C  A0D8               	btfss	status,0,c
  4644  00140E  0012               	return	
  4645                           
  4646                           ;my_uart.c: 217: {
  4647                           ;my_uart.c: 218: uart_frame_message( data , message );
  4648  001410  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4649  001412  6E02               	movwf	uart_frame_message@inner+1,c
  4650  001414  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4651  001416  6E01               	movwf	uart_frame_message@inner,c
  4652  001418  0100               	movlb	0	; () banked
  4653  00141A  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4654  00141C  6E04               	movwf	uart_frame_message@outer+1,c
  4655  00141E  0100               	movlb	0	; () banked
  4656  001420  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4657  001422  6E03               	movwf	uart_frame_message@outer,c
  4658  001424  EC58  F008         	call	_uart_frame_message	;wreg free
  4659                           
  4660                           ;my_uart.c: 219: index = 0;
  4661  001428  0E00               	movlw	0
  4662  00142A  6E50               	movwf	uart_transmit_interrupt_handler@index,c
  4663                           
  4664                           ;my_uart.c: 220: done = 0;
  4665  00142C  0E00               	movlw	0
  4666  00142E  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4667                           
  4668                           ;my_uart.c: 222: TXREG1 = message[index];
  4669  001430  5050               	movf	uart_transmit_interrupt_handler@index,w,c
  4670  001432  0D01               	mullw	1
  4671  001434  0100               	movlb	0	; () banked
  4672  001436  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4673  001438  24F3               	addwf	prodl,w,c
  4674  00143A  6ED9               	movwf	fsr2l,c
  4675  00143C  0100               	movlb	0	; () banked
  4676  00143E  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4677  001440  20F4               	addwfc	prodh,w,c
  4678  001442  6EDA               	movwf	fsr2h,c
  4679  001444  50DF               	movf	indf2,w,c
  4680  001446  6EAE               	movwf	4014,c	;volatile
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;my_uart.c: 223: index++;
  4684  001448  2A50               	incf	uart_transmit_interrupt_handler@index,f,c
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;my_uart.c: 224: if( index >= (14 + 2 + 2) )
  4688  00144A  0E11               	movlw	17
  4689  00144C  6450               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4690  00144E  0012               	return	
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;my_uart.c: 225: {
  4694                           ;my_uart.c: 226: done = 1;
  4695  001450  0E01               	movlw	1
  4696  001452  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4697  001454  0012               	return	
  4698  001456                     i1l3005:
  4699                           
  4700                           ;my_uart.c: 243: else
  4701                           ;my_uart.c: 244: {
  4702                           ;my_uart.c: 246: TXREG1 = message[index];
  4703  001456  5050               	movf	uart_transmit_interrupt_handler@index,w,c
  4704  001458  0D01               	mullw	1
  4705  00145A  0100               	movlb	0	; () banked
  4706  00145C  0EB4               	movlw	low uart_transmit_interrupt_handler@message
  4707  00145E  24F3               	addwf	prodl,w,c
  4708  001460  6ED9               	movwf	fsr2l,c
  4709  001462  0100               	movlb	0	; () banked
  4710  001464  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4711  001466  20F4               	addwfc	prodh,w,c
  4712  001468  6EDA               	movwf	fsr2h,c
  4713  00146A  50DF               	movf	indf2,w,c
  4714  00146C  6EAE               	movwf	4014,c	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;my_uart.c: 247: index++;
  4718  00146E  2A50               	incf	uart_transmit_interrupt_handler@index,f,c
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;my_uart.c: 248: if( index >= (14 + 2 + 2) )
  4722  001470  0E11               	movlw	17
  4723  001472  6450               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4724  001474  0012               	return	
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;my_uart.c: 249: {
  4728                           ;my_uart.c: 250: done = 1;
  4729  001476  0E01               	movlw	1
  4730  001478  6E5F               	movwf	uart_transmit_interrupt_handler@done,c
  4731  00147A  0012               	return	
  4732  00147C                     __end_of_uart_transmit_interrupt_handler:
  4733                           	opt stack 0
  4734                           pclatu	equ	0xFFB
  4735                           pclath	equ	0xFFA
  4736                           tblptru	equ	0xFF8
  4737                           tblptrh	equ	0xFF7
  4738                           tblptrl	equ	0xFF6
  4739                           tablat	equ	0xFF5
  4740                           prodh	equ	0xFF4
  4741                           prodl	equ	0xFF3
  4742                           intcon	equ	0xFF2
  4743                           postinc0	equ	0xFEE
  4744                           fsr0h	equ	0xFEA
  4745                           fsr0l	equ	0xFE9
  4746                           wreg	equ	0xFE8
  4747                           indf1	equ	0xFE7
  4748                           fsr1h	equ	0xFE2
  4749                           fsr1l	equ	0xFE1
  4750                           bsr	equ	0xFE0
  4751                           indf2	equ	0xFDF
  4752                           postinc2	equ	0xFDE
  4753                           postdec2	equ	0xFDD
  4754                           fsr2h	equ	0xFDA
  4755                           fsr2l	equ	0xFD9
  4756                           status	equ	0xFD8
  4757                           
  4758 ;; *************** function _uart_frame_message *****************
  4759 ;; Defined at:
  4760 ;;		line 364 in file "../src/my_uart.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  inner           2    0[COMRAM] PTR unsigned char 
  4763 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  4764 ;;  outer           2    2[COMRAM] PTR unsigned char 
  4765 ;;		 -> uart_transmit_interrupt_handler@message(18), 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  i               1    7[COMRAM] unsigned char 
  4768 ;;  checksum        1    6[COMRAM] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;		None               void
  4771 ;; Registers used:
  4772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4781 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4782 ;;Total ram usage:        8 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    6
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_uart_transmit_interrupt_handler
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text29
  4793  0010B0                     __ptext29:
  4794                           	opt stack 0
  4795  0010B0                     _uart_frame_message:
  4796                           	opt stack 16
  4797                           
  4798                           ;my_uart.c: 366: static unsigned char sent_counter = 0;
  4799                           ;my_uart.c: 368: outer[0] = 0xff;
  4800                           
  4801                           ;incstack = 0
  4802  0010B0  C003  FFD9         	movff	uart_frame_message@outer,fsr2l
  4803  0010B4  C004  FFDA         	movff	uart_frame_message@outer+1,fsr2h
  4804  0010B8  0EFF               	movlw	255
  4805  0010BA  6EDF               	movwf	indf2,c
  4806                           
  4807                           ;my_uart.c: 369: outer[1] = sent_counter++;
  4808  0010BC  EE20 F001          	lfsr	2,1
  4809  0010C0  5003               	movf	uart_frame_message@outer,w,c
  4810  0010C2  26D9               	addwf	fsr2l,f,c
  4811  0010C4  5004               	movf	uart_frame_message@outer+1,w,c
  4812  0010C6  22DA               	addwfc	fsr2h,f,c
  4813  0010C8  C04A  FFDF         	movff	uart_frame_message@sent_counter,indf2
  4814  0010CC  2A4A               	incf	uart_frame_message@sent_counter,f,c
  4815                           
  4816                           ;my_uart.c: 370: outer[(14 + 2 + 2)-1] = 0xfe;
  4817  0010CE  EE20 F011          	lfsr	2,17
  4818  0010D2  5003               	movf	uart_frame_message@outer,w,c
  4819  0010D4  26D9               	addwf	fsr2l,f,c
  4820  0010D6  5004               	movf	uart_frame_message@outer+1,w,c
  4821  0010D8  22DA               	addwfc	fsr2h,f,c
  4822  0010DA  0EFE               	movlw	254
  4823  0010DC  6EDF               	movwf	indf2,c
  4824                           
  4825                           ;my_uart.c: 372: unsigned char checksum = 0;
  4826  0010DE  0E00               	movlw	0
  4827  0010E0  6E07               	movwf	uart_frame_message@checksum,c
  4828                           
  4829                           ;my_uart.c: 373: unsigned char i;
  4830                           ;my_uart.c: 374: for(i=0;i<14;i++)
  4831  0010E2  0E00               	movlw	0
  4832  0010E4  6E08               	movwf	uart_frame_message@i,c
  4833  0010E6  D049               	goto	L4
  4834  0010E8                     i1l2593:
  4835                           
  4836                           ;my_uart.c: 375: {
  4837                           ;my_uart.c: 376: if( inner[i] == 0xff || inner[i] == 0xfe )
  4838  0010E8  5008               	movf	uart_frame_message@i,w,c
  4839  0010EA  0D01               	mullw	1
  4840  0010EC  50F3               	movf	prodl,w,c
  4841  0010EE  2401               	addwf	uart_frame_message@inner,w,c
  4842  0010F0  6ED9               	movwf	fsr2l,c
  4843  0010F2  50F4               	movf	prodh,w,c
  4844  0010F4  2002               	addwfc	uart_frame_message@inner+1,w,c
  4845  0010F6  6EDA               	movwf	fsr2h,c
  4846  0010F8  50DF               	movf	indf2,w,c
  4847  0010FA  0AFF               	xorlw	255
  4848  0010FC  B4D8               	btfsc	status,2,c
  4849  0010FE  D00B               	goto	i1l2597
  4850  001100  5008               	movf	uart_frame_message@i,w,c
  4851  001102  0D01               	mullw	1
  4852  001104  50F3               	movf	prodl,w,c
  4853  001106  2401               	addwf	uart_frame_message@inner,w,c
  4854  001108  6ED9               	movwf	fsr2l,c
  4855  00110A  50F4               	movf	prodh,w,c
  4856  00110C  2002               	addwfc	uart_frame_message@inner+1,w,c
  4857  00110E  6EDA               	movwf	fsr2h,c
  4858  001110  0EFE               	movlw	254
  4859  001112  62DF               	cpfseq	indf2,c
  4860  001114  D010               	goto	i1l2599
  4861  001116                     i1l2597:
  4862                           
  4863                           ;my_uart.c: 377: {
  4864                           ;my_uart.c: 378: outer[i+2] = 0xfd;
  4865  001116  5008               	movf	uart_frame_message@i,w,c
  4866  001118  6E05               	movwf	??_uart_frame_message& (0+255),c
  4867  00111A  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  4868  00111C  0E02               	movlw	2
  4869  00111E  2605               	addwf	??_uart_frame_message,f,c
  4870  001120  0E00               	movlw	0
  4871  001122  2206               	addwfc	??_uart_frame_message+1,f,c
  4872  001124  5005               	movf	??_uart_frame_message,w,c
  4873  001126  2403               	addwf	uart_frame_message@outer,w,c
  4874  001128  6ED9               	movwf	fsr2l,c
  4875  00112A  5006               	movf	??_uart_frame_message+1,w,c
  4876  00112C  2004               	addwfc	uart_frame_message@outer+1,w,c
  4877  00112E  6EDA               	movwf	fsr2h,c
  4878  001130  0EFD               	movlw	253
  4879  001132  6EDF               	movwf	indf2,c
  4880                           
  4881                           ;my_uart.c: 379: }
  4882  001134  D017               	goto	i1l2601
  4883  001136                     i1l2599:
  4884                           
  4885                           ;my_uart.c: 380: else
  4886                           ;my_uart.c: 381: {
  4887                           ;my_uart.c: 382: outer[i+2] = inner[i];
  4888  001136  5008               	movf	uart_frame_message@i,w,c
  4889  001138  0D01               	mullw	1
  4890  00113A  50F3               	movf	prodl,w,c
  4891  00113C  2401               	addwf	uart_frame_message@inner,w,c
  4892  00113E  6ED9               	movwf	fsr2l,c
  4893  001140  50F4               	movf	prodh,w,c
  4894  001142  2002               	addwfc	uart_frame_message@inner+1,w,c
  4895  001144  6EDA               	movwf	fsr2h,c
  4896  001146  5008               	movf	uart_frame_message@i,w,c
  4897  001148  6E05               	movwf	??_uart_frame_message& (0+255),c
  4898  00114A  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  4899  00114C  0E02               	movlw	2
  4900  00114E  2605               	addwf	??_uart_frame_message,f,c
  4901  001150  0E00               	movlw	0
  4902  001152  2206               	addwfc	??_uart_frame_message+1,f,c
  4903  001154  5005               	movf	??_uart_frame_message,w,c
  4904  001156  2403               	addwf	uart_frame_message@outer,w,c
  4905  001158  6EE1               	movwf	fsr1l,c
  4906  00115A  5006               	movf	??_uart_frame_message+1,w,c
  4907  00115C  2004               	addwfc	uart_frame_message@outer+1,w,c
  4908  00115E  6EE2               	movwf	fsr1h,c
  4909  001160  CFDF FFE7          	movff	indf2,indf1
  4910  001164                     i1l2601:
  4911                           
  4912                           ;my_uart.c: 383: }
  4913                           ;my_uart.c: 384: checksum ^= inner[i];
  4914  001164  5008               	movf	uart_frame_message@i,w,c
  4915  001166  0D01               	mullw	1
  4916  001168  50F3               	movf	prodl,w,c
  4917  00116A  2401               	addwf	uart_frame_message@inner,w,c
  4918  00116C  6ED9               	movwf	fsr2l,c
  4919  00116E  50F4               	movf	prodh,w,c
  4920  001170  2002               	addwfc	uart_frame_message@inner+1,w,c
  4921  001172  6EDA               	movwf	fsr2h,c
  4922  001174  50DF               	movf	indf2,w,c
  4923  001176  1A07               	xorwf	uart_frame_message@checksum,f,c
  4924  001178  2A08               	incf	uart_frame_message@i,f,c
  4925  00117A                     L4:
  4926  00117A  0E0D               	movlw	13
  4927  00117C  6408               	cpfsgt	uart_frame_message@i,c
  4928  00117E  D7B4               	goto	i1l2593
  4929                           
  4930                           ;my_uart.c: 385: }
  4931                           ;my_uart.c: 386: outer[(14 + 2 + 2)-2] = checksum;
  4932  001180  EE20 F010          	lfsr	2,16
  4933  001184  5003               	movf	uart_frame_message@outer,w,c
  4934  001186  26D9               	addwf	fsr2l,f,c
  4935  001188  5004               	movf	uart_frame_message@outer+1,w,c
  4936  00118A  22DA               	addwfc	fsr2h,f,c
  4937  00118C  C007  FFDF         	movff	uart_frame_message@checksum,indf2
  4938  001190  0012               	return	
  4939  001192                     __end_of_uart_frame_message:
  4940                           	opt stack 0
  4941                           pclatu	equ	0xFFB
  4942                           pclath	equ	0xFFA
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           postinc0	equ	0xFEE
  4951                           fsr0h	equ	0xFEA
  4952                           fsr0l	equ	0xFE9
  4953                           wreg	equ	0xFE8
  4954                           indf1	equ	0xFE7
  4955                           fsr1h	equ	0xFE2
  4956                           fsr1l	equ	0xFE1
  4957                           bsr	equ	0xFE0
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _FromMainLow_recvmsg *****************
  4966 ;; Defined at:
  4967 ;;		line 159 in file "../src/messages.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  maxlength       1    wreg     unsigned char 
  4970 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  4971 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  4972 ;;  data            2   26[COMRAM] PTR void 
  4973 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  maxlength       1   28[COMRAM] unsigned char 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      char 
  4978 ;; Registers used:
  4979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4988 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;Total ram usage:        5 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    8
  4992 ;; This function calls:
  4993 ;;		i1_recv_msg
  4994 ;; This function is called by:
  4995 ;;		_uart_transmit_interrupt_handler
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text30
  5000  001BA0                     __ptext30:
  5001                           	opt stack 0
  5002  001BA0                     _FromMainLow_recvmsg:
  5003                           	opt stack 14
  5004                           
  5005                           ;incstack = 0
  5006                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5007  001BA0  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5008                           
  5009                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5010  001BA2  0104               	movlb	4	; () banked
  5011  001BA4  0E04               	movlw	high _FromMainLow_MQ
  5012  001BA6  6E0C               	movwf	i1recv_msg@qptr+1,c
  5013  001BA8  0104               	movlb	4	; () banked
  5014  001BAA  0E00               	movlw	low _FromMainLow_MQ
  5015  001BAC  6E0B               	movwf	i1recv_msg@qptr,c
  5016  001BAE  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5017  001BB2  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5018  001BB6  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5019  001BBA  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5020  001BBE  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5021  001BC2  ECC9  F008         	call	i1_recv_msg	;wreg free
  5022  001BC6  0012               	return	
  5023  001BC8                     __end_of_FromMainLow_recvmsg:
  5024                           	opt stack 0
  5025                           pclatu	equ	0xFFB
  5026                           pclath	equ	0xFFA
  5027                           tblptru	equ	0xFF8
  5028                           tblptrh	equ	0xFF7
  5029                           tblptrl	equ	0xFF6
  5030                           tablat	equ	0xFF5
  5031                           prodh	equ	0xFF4
  5032                           prodl	equ	0xFF3
  5033                           intcon	equ	0xFF2
  5034                           postinc0	equ	0xFEE
  5035                           fsr0h	equ	0xFEA
  5036                           fsr0l	equ	0xFE9
  5037                           wreg	equ	0xFE8
  5038                           indf1	equ	0xFE7
  5039                           fsr1h	equ	0xFE2
  5040                           fsr1l	equ	0xFE1
  5041                           bsr	equ	0xFE0
  5042                           indf2	equ	0xFDF
  5043                           postinc2	equ	0xFDE
  5044                           postdec2	equ	0xFDD
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8
  5048                           
  5049 ;; *************** function i1_recv_msg *****************
  5050 ;; Defined at:
  5051 ;;		line 63 in file "../src/messages.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5054 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5055 ;;  maxlength       1   12[COMRAM] unsigned char 
  5056 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5057 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  5058 ;;  data            2   15[COMRAM] PTR void 
  5059 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5062 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5063 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5064 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5065 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      char 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5075 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5078 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5079 ;;Total ram usage:       14 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    7
  5082 ;; This function calls:
  5083 ;;		i1_memcpy
  5084 ;; This function is called by:
  5085 ;;		_FromMainLow_recvmsg
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text31
  5090  001192                     __ptext31:
  5091                           	opt stack 0
  5092  001192                     i1_recv_msg:
  5093                           	opt stack 14
  5094                           
  5095                           ;messages.c: 64: unsigned char slot;
  5096                           ;messages.c: 68: msg *qmsg;
  5097                           ;messages.c: 69: size_t tlength;
  5098                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5099                           
  5100                           ;incstack = 0
  5101  001192  EE20 F089          	lfsr	2,137
  5102  001196  500B               	movf	i1recv_msg@qptr,w,c
  5103  001198  26D9               	addwf	fsr2l,f,c
  5104  00119A  500C               	movf	i1recv_msg@qptr+1,w,c
  5105  00119C  22DA               	addwfc	fsr2h,f,c
  5106  00119E  50DF               	movf	indf2,w,c
  5107  0011A0  6E14               	movwf	i1recv_msg@slot,c
  5108                           
  5109                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5110  0011A2  5014               	movf	i1recv_msg@slot,w,c
  5111  0011A4  0D11               	mullw	17
  5112  0011A6  50F3               	movf	prodl,w,c
  5113  0011A8  240B               	addwf	i1recv_msg@qptr,w,c
  5114  0011AA  6E17               	movwf	i1recv_msg@qmsg,c
  5115  0011AC  50F4               	movf	prodh,w,c
  5116  0011AE  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5117  0011B0  6E18               	movwf	i1recv_msg@qmsg+1,c
  5118                           
  5119                           ;messages.c: 74: if (qmsg->full == 1) {
  5120  0011B2  0E01               	movlw	1
  5121  0011B4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5122  0011B8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5123  0011BC  62DF               	cpfseq	indf2,c
  5124  0011BE  D050               	goto	i1l2457
  5125                           
  5126                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5127  0011C0  EE20 F001          	lfsr	2,1
  5128  0011C4  5017               	movf	i1recv_msg@qmsg,w,c
  5129  0011C6  26D9               	addwf	fsr2l,f,c
  5130  0011C8  5018               	movf	i1recv_msg@qmsg+1,w,c
  5131  0011CA  22DA               	addwfc	fsr2h,f,c
  5132  0011CC  50DF               	movf	indf2,w,c
  5133  0011CE  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5134  0011D0  B0D8               	btfsc	status,0,c
  5135  0011D2  D002               	goto	i1l2441
  5136                           
  5137                           ;messages.c: 77: return (-3);
  5138  0011D4  0EFD               	movlw	253
  5139  0011D6  0012               	return	
  5140  0011D8                     i1l2441:
  5141                           
  5142                           ;messages.c: 78: }
  5143                           ;messages.c: 80: tlength = qmsg->length;
  5144  0011D8  EE20 F001          	lfsr	2,1
  5145  0011DC  5017               	movf	i1recv_msg@qmsg,w,c
  5146  0011DE  26D9               	addwf	fsr2l,f,c
  5147  0011E0  5018               	movf	i1recv_msg@qmsg+1,w,c
  5148  0011E2  22DA               	addwfc	fsr2h,f,c
  5149  0011E4  50DF               	movf	indf2,w,c
  5150  0011E6  6E12               	movwf	??i1_recv_msg& (0+255),c
  5151  0011E8  5012               	movf	??i1_recv_msg,w,c
  5152  0011EA  6E15               	movwf	i1recv_msg@tlength,c
  5153  0011EC  6A16               	clrf	i1recv_msg@tlength+1,c
  5154                           
  5155                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5156  0011EE  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5157  0011F2  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5158  0011F6  0E03               	movlw	3
  5159  0011F8  2417               	addwf	i1recv_msg@qmsg,w,c
  5160  0011FA  6E12               	movwf	??i1_recv_msg& (0+255),c
  5161  0011FC  0E00               	movlw	0
  5162  0011FE  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5163  001200  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5164  001202  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5165  001206  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5166  00120A  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5167  00120E  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5168  001212  EC75  F00C         	call	i1_memcpy	;wreg free
  5169                           
  5170                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  5171  001216  EE20 F089          	lfsr	2,137
  5172  00121A  500B               	movf	i1recv_msg@qptr,w,c
  5173  00121C  26D9               	addwf	fsr2l,f,c
  5174  00121E  500C               	movf	i1recv_msg@qptr+1,w,c
  5175  001220  22DA               	addwfc	fsr2h,f,c
  5176  001222  EE10 F089          	lfsr	1,137
  5177  001226  500B               	movf	i1recv_msg@qptr,w,c
  5178  001228  26E1               	addwf	fsr1l,f,c
  5179  00122A  500C               	movf	i1recv_msg@qptr+1,w,c
  5180  00122C  22E2               	addwfc	fsr1h,f,c
  5181  00122E  50E7               	movf	indf1,w,c
  5182  001230  6E12               	movwf	??i1_recv_msg& (0+255),c
  5183  001232  2812               	incf	??i1_recv_msg,w,c
  5184  001234  0B07               	andlw	7
  5185  001236  6EDF               	movwf	indf2,c
  5186                           
  5187                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5188  001238  EE20 F002          	lfsr	2,2
  5189  00123C  5017               	movf	i1recv_msg@qmsg,w,c
  5190  00123E  26D9               	addwf	fsr2l,f,c
  5191  001240  5018               	movf	i1recv_msg@qmsg+1,w,c
  5192  001242  22DA               	addwfc	fsr2h,f,c
  5193  001244  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5194  001248  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5195  00124C  CFDF FFE7          	movff	indf2,indf1
  5196                           
  5197                           ;messages.c: 91: qmsg->full = 0;
  5198  001250  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5199  001254  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5200  001258  0E00               	movlw	0
  5201  00125A  6EDF               	movwf	indf2,c
  5202                           
  5203                           ;messages.c: 92: return (tlength);
  5204  00125C  5015               	movf	i1recv_msg@tlength,w,c
  5205  00125E  0012               	return	
  5206  001260                     i1l2457:
  5207                           
  5208                           ;messages.c: 94: return (-4);
  5209  001260  0EFC               	movlw	252
  5210  001262  0012               	return	
  5211  001264                     __end_ofi1_recv_msg:
  5212                           	opt stack 0
  5213                           pclatu	equ	0xFFB
  5214                           pclath	equ	0xFFA
  5215                           tblptru	equ	0xFF8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           tablat	equ	0xFF5
  5219                           prodh	equ	0xFF4
  5220                           prodl	equ	0xFF3
  5221                           intcon	equ	0xFF2
  5222                           postinc0	equ	0xFEE
  5223                           fsr0h	equ	0xFEA
  5224                           fsr0l	equ	0xFE9
  5225                           wreg	equ	0xFE8
  5226                           indf1	equ	0xFE7
  5227                           fsr1h	equ	0xFE2
  5228                           fsr1l	equ	0xFE1
  5229                           bsr	equ	0xFE0
  5230                           indf2	equ	0xFDF
  5231                           postinc2	equ	0xFDE
  5232                           postdec2	equ	0xFDD
  5233                           fsr2h	equ	0xFDA
  5234                           fsr2l	equ	0xFD9
  5235                           status	equ	0xFD8
  5236                           
  5237 ;; *************** function _uart_receive_interrupt_handler *****************
  5238 ;; Defined at:
  5239 ;;		line 54 in file "../src/my_uart.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  bad_start_id    1   49[COMRAM] unsigned char 
  5244 ;;  message_coun    1   51[COMRAM] unsigned char 
  5245 ;;  status          1   42[COMRAM] unsigned char 
  5246 ;;  bad_end_id      1   50[COMRAM] unsigned char 
  5247 ;;  msg_id          1   55[COMRAM] unsigned char 
  5248 ;;  status          1   43[COMRAM] unsigned char 
  5249 ;;  bad_checksum    3   44[COMRAM] unsigned char [3]
  5250 ;;  bad_counter_    2   47[COMRAM] unsigned char [2]
  5251 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5252 ;;  i               2   53[COMRAM] int 
  5253 ;;  checksum        1   52[COMRAM] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;		None               void
  5256 ;; Registers used:
  5257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;Total ram usage:       30 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    9
  5270 ;; This function calls:
  5271 ;;		_ToMainLow_sendmsg
  5272 ;; This function is called by:
  5273 ;;		_InterruptHandlerLow
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text32
  5278  000AFA                     __ptext32:
  5279                           	opt stack 0
  5280  000AFA                     _uart_receive_interrupt_handler:
  5281                           	opt stack 14
  5282                           
  5283                           ;my_uart.c: 57: static unsigned char frame[(14 + 2 + 2)];
  5284                           ;my_uart.c: 58: static unsigned char index = 0;
  5285                           ;my_uart.c: 59: static unsigned char done = 0;
  5286                           ;my_uart.c: 60: static unsigned char received_counter = 0;
  5287                           ;my_uart.c: 62: static unsigned char start_byte_bad = 0;
  5288                           ;my_uart.c: 63: static unsigned char error = 0;
  5289                           ;my_uart.c: 65: if(!done)
  5290                           
  5291                           ;incstack = 0
  5292  000AFA  664B               	tstfsz	uart_receive_interrupt_handler@done,c
  5293  000AFC  D03F               	goto	i1l2911
  5294                           
  5295                           ;my_uart.c: 66: {
  5296                           ;my_uart.c: 67: frame[index] = RCREG1;
  5297  000AFE  504D               	movf	uart_receive_interrupt_handler@index,w,c
  5298  000B00  0D01               	mullw	1
  5299  000B02  0100               	movlb	0	; () banked
  5300  000B04  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5301  000B06  24F3               	addwf	prodl,w,c
  5302  000B08  6ED9               	movwf	fsr2l,c
  5303  000B0A  0100               	movlb	0	; () banked
  5304  000B0C  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5305  000B0E  20F4               	addwfc	prodh,w,c
  5306  000B10  6EDA               	movwf	fsr2h,c
  5307  000B12  CFAF FFDF          	movff	4015,indf2	;volatile
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;my_uart.c: 71: }
  5311                           ;my_uart.c: 72: if( index == 0 )
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;my_uart.c: 69: {
  5315  000B16  664D               	tstfsz	uart_receive_interrupt_handler@index,c
  5316  000B18  D019               	goto	i1l2897
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;my_uart.c: 73: {
  5320                           ;my_uart.c: 74: if( frame[0] != 0xff )
  5321  000B1A  0100               	movlb	0	; () banked
  5322  000B1C  299D               	incf	uart_receive_interrupt_handler@frame& (0+255),w,b
  5323  000B1E  B4D8               	btfsc	status,2,c
  5324  000B20  D012               	goto	i1l2895
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;my_uart.c: 75: {
  5328                           ;my_uart.c: 76: if( !start_byte_bad )
  5329  000B22  664F               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5330  000B24  D00D               	goto	i1l2889
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;my_uart.c: 77: {
  5334                           ;my_uart.c: 78: start_byte_bad = 1;
  5335  000B26  0E01               	movlw	1
  5336  000B28  6E4F               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;my_uart.c: 79: unsigned char bad_start_id = received_counter;
  5340  000B2A  C04E  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;my_uart.c: 80: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5344  000B2E  0E22               	movlw	34
  5345  000B30  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5346  000B32  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5347  000B34  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5348  000B36  0E32               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5349  000B38  6E18               	movwf	ToMainLow_sendmsg@data,c
  5350  000B3A  0E01               	movlw	1
  5351  000B3C  ECF7  F00D         	call	_ToMainLow_sendmsg
  5352  000B40                     i1l2889:
  5353                           
  5354                           ;my_uart.c: 82: }
  5355                           ;my_uart.c: 83: index = 0;
  5356  000B40  0E00               	movlw	0
  5357  000B42  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5358  000B44  0012               	return	
  5359  000B46                     i1l2895:
  5360                           
  5361                           ;my_uart.c: 86: else
  5362                           ;my_uart.c: 87: {
  5363                           ;my_uart.c: 88: start_byte_bad = 0;
  5364  000B46  0E00               	movlw	0
  5365  000B48  6E4F               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5366  000B4A  D017               	goto	i1l2909
  5367  000B4C                     i1l2897:
  5368                           
  5369                           ;my_uart.c: 91: else if( index >= (14 + 2 + 2) - 1 )
  5370  000B4C  0E10               	movlw	16
  5371  000B4E  644D               	cpfsgt	uart_receive_interrupt_handler@index,c
  5372  000B50  D014               	goto	i1l2909
  5373                           
  5374                           ;my_uart.c: 92: {
  5375                           ;my_uart.c: 93: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5376  000B52  0100               	movlb	0	; () banked
  5377  000B54  51AE               	movf	(uart_receive_interrupt_handler@frame+17)& (0+255),w,b
  5378  000B56  0AFE               	xorlw	254
  5379  000B58  B4D8               	btfsc	status,2,c
  5380  000B5A  D00F               	goto	i1l2909
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;my_uart.c: 94: {
  5384                           ;my_uart.c: 96: index = 0;
  5385  000B5C  0E00               	movlw	0
  5386  000B5E  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;my_uart.c: 99: unsigned char bad_end_id = received_counter;
  5390  000B60  C04E  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;my_uart.c: 100: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5394  000B64  0E23               	movlw	35
  5395  000B66  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5396  000B68  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5397  000B6A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5398  000B6C  0E33               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5399  000B6E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5400  000B70  0E01               	movlw	1
  5401  000B72  ECF7  F00D         	call	_ToMainLow_sendmsg
  5402                           
  5403                           ;my_uart.c: 101: error = 1;
  5404  000B76  0E01               	movlw	1
  5405  000B78  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5406  000B7A                     i1l2909:
  5407                           
  5408                           ;my_uart.c: 102: }
  5409                           ;my_uart.c: 103: }
  5410                           ;my_uart.c: 104: index++;
  5411  000B7A  2A4D               	incf	uart_receive_interrupt_handler@index,f,c
  5412  000B7C                     i1l2911:
  5413                           
  5414                           ;my_uart.c: 105: }
  5415                           ;my_uart.c: 107: if( index >= (14 + 2 + 2) )
  5416  000B7C  0E11               	movlw	17
  5417  000B7E  644D               	cpfsgt	uart_receive_interrupt_handler@index,c
  5418  000B80  0012               	return	
  5419                           
  5420                           ;my_uart.c: 108: {
  5421                           ;my_uart.c: 109: index = 0;
  5422  000B82  0E00               	movlw	0
  5423  000B84  6E4D               	movwf	uart_receive_interrupt_handler@index,c
  5424                           
  5425                           ;my_uart.c: 111: if( received_counter != frame[1] )
  5426  000B86  0100               	movlb	0	; () banked
  5427  000B88  519E               	movf	(uart_receive_interrupt_handler@frame+1)& (0+255),w,b
  5428  000B8A  184E               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5429  000B8C  B4D8               	btfsc	status,2,c
  5430  000B8E  D00F               	goto	i1l2921
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;my_uart.c: 112: {
  5434                           ;my_uart.c: 114: unsigned char bad_counter_id[2];
  5435                           ;my_uart.c: 115: bad_counter_id[0] = received_counter;
  5436  000B90  C04E  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5437                           
  5438                           ;my_uart.c: 116: bad_counter_id[1] = frame[1];
  5439  000B94  C09E  F031         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;my_uart.c: 117: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5443  000B98  0E21               	movlw	33
  5444  000B9A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5445  000B9C  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5446  000B9E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5447  000BA0  0E30               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5448  000BA2  6E18               	movwf	ToMainLow_sendmsg@data,c
  5449  000BA4  0E02               	movlw	2
  5450  000BA6  ECF7  F00D         	call	_ToMainLow_sendmsg
  5451                           
  5452                           ;my_uart.c: 118: error = 1;
  5453  000BAA  0E01               	movlw	1
  5454  000BAC  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5455  000BAE                     i1l2921:
  5456                           
  5457                           ;my_uart.c: 119: }
  5458                           ;my_uart.c: 122: unsigned char gooey_uart_center[14];
  5459                           ;my_uart.c: 123: unsigned char checksum = 0;
  5460  000BAE  0E00               	movlw	0
  5461  000BB0  6E35               	movwf	uart_receive_interrupt_handler@checksum,c
  5462                           
  5463                           ;my_uart.c: 124: int i;
  5464                           ;my_uart.c: 125: for(i = 0; i < 14; i++)
  5465  000BB2  0E00               	movlw	0
  5466  000BB4  6E37               	movwf	uart_receive_interrupt_handler@i+1,c
  5467  000BB6  0E00               	movlw	0
  5468  000BB8  6E36               	movwf	uart_receive_interrupt_handler@i,c
  5469  000BBA  5037               	movf	uart_receive_interrupt_handler@i+1,w,c
  5470  000BBC  0A80               	xorlw	128
  5471  000BBE  0F80               	addlw	-128
  5472  000BC0  0E0E               	movlw	14
  5473  000BC2  B4D8               	btfsc	status,2,c
  5474  000BC4  5C36               	subwf	uart_receive_interrupt_handler@i,w,c
  5475  000BC6  B0D8               	btfsc	status,0,c
  5476  000BC8  D021               	goto	i1l2937
  5477                           
  5478                           ;my_uart.c: 126: {
  5479                           ;my_uart.c: 127: gooey_uart_center[i] = frame[i+2];
  5480  000BCA  0E02               	movlw	2
  5481  000BCC  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5482  000BCE  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5483  000BD0  0E00               	movlw	0
  5484  000BD2  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5485  000BD4  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5486  000BD6  0100               	movlb	0	; () banked
  5487  000BD8  0E9D               	movlw	low uart_receive_interrupt_handler@frame
  5488  000BDA  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5489  000BDC  6ED9               	movwf	fsr2l,c
  5490  000BDE  0100               	movlb	0	; () banked
  5491  000BE0  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5492  000BE2  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5493  000BE4  6EDA               	movwf	fsr2h,c
  5494  000BE6  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5495  000BE8  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5496  000BEA  6EE1               	movwf	fsr1l,c
  5497  000BEC  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5498  000BEE  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5499  000BF0  6EE2               	movwf	fsr1h,c
  5500  000BF2  CFDF FFE7          	movff	indf2,indf1
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;my_uart.c: 128: checksum ^= gooey_uart_center[i];
  5504  000BF6  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5505  000BF8  2436               	addwf	uart_receive_interrupt_handler@i,w,c
  5506  000BFA  6ED9               	movwf	fsr2l,c
  5507  000BFC  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5508  000BFE  2037               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5509  000C00  6EDA               	movwf	fsr2h,c
  5510  000C02  50DF               	movf	indf2,w,c
  5511  000C04  1A35               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5512                           
  5513                           ; BSR set to: 0
  5514  000C06  4A36               	infsnz	uart_receive_interrupt_handler@i,f,c
  5515  000C08  2A37               	incf	uart_receive_interrupt_handler@i+1,f,c
  5516  000C0A  D7D7               	goto	L5
  5517  000C0C                     i1l2937:
  5518                           
  5519                           ;my_uart.c: 129: }
  5520                           ;my_uart.c: 131: if( checksum != frame[(14 + 2 + 2) - 2] )
  5521  000C0C  0100               	movlb	0	; () banked
  5522  000C0E  51AD               	movf	(uart_receive_interrupt_handler@frame+16)& (0+255),w,b
  5523  000C10  1835               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5524  000C12  B4D8               	btfsc	status,2,c
  5525  000C14  D011               	goto	i1l2945
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;my_uart.c: 132: {
  5529                           ;my_uart.c: 134: unsigned char bad_checksum_message[3];
  5530                           ;my_uart.c: 135: bad_checksum_message[0] = received_counter;
  5531  000C16  C04E  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_message
  5532                           
  5533                           ;my_uart.c: 136: bad_checksum_message[1] = frame[(14 + 2 + 2) - 2];
  5534  000C1A  C0AD  F02E         	movff	uart_receive_interrupt_handler@frame+16,uart_receive_interrupt_handler@bad_checks
      +                          um_message+1
  5535                           
  5536                           ;my_uart.c: 137: bad_checksum_message[2] = checksum;
  5537  000C1E  C035  F02F         	movff	uart_receive_interrupt_handler@checksum,uart_receive_interrupt_handler@bad_checks
      +                          um_message+2
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;my_uart.c: 138: ToMainLow_sendmsg(3,32,(void *)&bad_checksum_message);
  5541  000C22  0E20               	movlw	32
  5542  000C24  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5543  000C26  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_message
  5544  000C28  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5545  000C2A  0E2D               	movlw	low uart_receive_interrupt_handler@bad_checksum_message
  5546  000C2C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5547  000C2E  0E03               	movlw	3
  5548  000C30  ECF7  F00D         	call	_ToMainLow_sendmsg
  5549                           
  5550                           ;my_uart.c: 139: error = 1;
  5551  000C34  0E01               	movlw	1
  5552  000C36  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5553  000C38                     i1l2945:
  5554                           
  5555                           ;my_uart.c: 140: }
  5556                           ;my_uart.c: 145: if( !error )
  5557  000C38  664C               	tstfsz	uart_receive_interrupt_handler@error,c
  5558  000C3A  D02C               	goto	i1l2965
  5559                           
  5560                           ;my_uart.c: 146: {
  5561                           ;my_uart.c: 148: unsigned char msg_id = gooey_uart_center[0];
  5562  000C3C  C01D  F038         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5563                           
  5564                           ;my_uart.c: 150: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5565  000C40  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5566  000C42  0A11               	xorlw	17
  5567  000C44  B4D8               	btfsc	status,2,c
  5568  000C46  D01C               	goto	i1l422
  5569  000C48  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5570  000C4A  0AF1               	xorlw	241
  5571  000C4C  B4D8               	btfsc	status,2,c
  5572  000C4E  D018               	goto	i1l422
  5573  000C50  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5574  000C52  0AF2               	xorlw	242
  5575  000C54  B4D8               	btfsc	status,2,c
  5576  000C56  D014               	goto	i1l422
  5577  000C58  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5578  000C5A  0AF3               	xorlw	243
  5579  000C5C  B4D8               	btfsc	status,2,c
  5580  000C5E  D010               	goto	i1l422
  5581  000C60  5038               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5582  000C62  0AF4               	xorlw	244
  5583  000C64  B4D8               	btfsc	status,2,c
  5584  000C66  D00C               	goto	i1l422
  5585                           
  5586                           ;my_uart.c: 151: {
  5587                           ;my_uart.c: 152: unsigned char message_count = received_counter;
  5588  000C68  C04E  F034         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5589                           
  5590                           ;my_uart.c: 153: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5591  000C6C  0E24               	movlw	36
  5592  000C6E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5593  000C70  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5594  000C72  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5595  000C74  0E34               	movlw	low uart_receive_interrupt_handler@message_count
  5596  000C76  6E18               	movwf	ToMainLow_sendmsg@data,c
  5597  000C78  0E01               	movlw	1
  5598  000C7A  ECF7  F00D         	call	_ToMainLow_sendmsg
  5599  000C7E  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5600  000C80                     i1l422:
  5601                           
  5602                           ;my_uart.c: 154: }
  5603                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5604  000C80  0E1F               	movlw	31
  5605  000C82  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5606  000C84  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5607  000C86  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5608  000C88  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5609  000C8A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5610  000C8C  0E0E               	movlw	14
  5611  000C8E  ECF7  F00D         	call	_ToMainLow_sendmsg
  5612  000C92  6E2C               	movwf	uart_receive_interrupt_handler@status_2231,c
  5613  000C94                     i1l2965:
  5614                           
  5615                           ;my_uart.c: 167: }
  5616                           ;my_uart.c: 168: }
  5617                           ;my_uart.c: 170: received_counter++;
  5618  000C94  2A4E               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5619                           
  5620                           ;my_uart.c: 171: error = 0;
  5621  000C96  0E00               	movlw	0
  5622  000C98  6E4C               	movwf	uart_receive_interrupt_handler@error,c
  5623  000C9A  0012               	return	
  5624  000C9C                     __end_of_uart_receive_interrupt_handler:
  5625                           	opt stack 0
  5626                           pclatu	equ	0xFFB
  5627                           pclath	equ	0xFFA
  5628                           tblptru	equ	0xFF8
  5629                           tblptrh	equ	0xFF7
  5630                           tblptrl	equ	0xFF6
  5631                           tablat	equ	0xFF5
  5632                           prodh	equ	0xFF4
  5633                           prodl	equ	0xFF3
  5634                           intcon	equ	0xFF2
  5635                           postinc0	equ	0xFEE
  5636                           fsr0h	equ	0xFEA
  5637                           fsr0l	equ	0xFE9
  5638                           wreg	equ	0xFE8
  5639                           indf1	equ	0xFE7
  5640                           fsr1h	equ	0xFE2
  5641                           fsr1l	equ	0xFE1
  5642                           bsr	equ	0xFE0
  5643                           indf2	equ	0xFDF
  5644                           postinc2	equ	0xFDE
  5645                           postdec2	equ	0xFDD
  5646                           fsr2h	equ	0xFDA
  5647                           fsr2l	equ	0xFD9
  5648                           status	equ	0xFD8
  5649                           
  5650 ;; *************** function _timer1_int_handler *****************
  5651 ;; Defined at:
  5652 ;;		line 38 in file "../src/user_interrupts.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  result          2   26[COMRAM] unsigned int 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;		None               void
  5659 ;; Registers used:
  5660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;Total ram usage:        2 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    9
  5673 ;; This function calls:
  5674 ;;		_ReadTimer1
  5675 ;;		_ToMainLow_sendmsg
  5676 ;;		_WriteTimer1
  5677 ;; This function is called by:
  5678 ;;		_InterruptHandlerLow
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text33
  5683  001B74                     __ptext33:
  5684                           	opt stack 0
  5685  001B74                     _timer1_int_handler:
  5686                           	opt stack 14
  5687                           
  5688                           ;user_interrupts.c: 42: unsigned int result;
  5689                           ;user_interrupts.c: 49: result = ReadTimer1();
  5690                           
  5691                           ;incstack = 0
  5692  001B74  EC3B  F00E         	call	_ReadTimer1	;wreg free
  5693  001B78  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5694  001B7C  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5695                           
  5696                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5697  001B80  0E0B               	movlw	11
  5698  001B82  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5699  001B84  0E00               	movlw	0
  5700  001B86  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5701  001B88  0E00               	movlw	0
  5702  001B8A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5703  001B8C  0E00               	movlw	0
  5704  001B8E  ECF7  F00D         	call	_ToMainLow_sendmsg
  5705                           
  5706                           ;user_interrupts.c: 53: WriteTimer1(0);
  5707  001B92  0E00               	movlw	0
  5708  001B94  6E02               	movwf	WriteTimer1@timer1+1,c
  5709  001B96  0E00               	movlw	0
  5710  001B98  6E01               	movwf	WriteTimer1@timer1,c
  5711  001B9A  EC32  F00E         	call	_WriteTimer1	;wreg free
  5712  001B9E  0012               	return	
  5713  001BA0                     __end_of_timer1_int_handler:
  5714                           	opt stack 0
  5715                           pclatu	equ	0xFFB
  5716                           pclath	equ	0xFFA
  5717                           tblptru	equ	0xFF8
  5718                           tblptrh	equ	0xFF7
  5719                           tblptrl	equ	0xFF6
  5720                           tablat	equ	0xFF5
  5721                           prodh	equ	0xFF4
  5722                           prodl	equ	0xFF3
  5723                           intcon	equ	0xFF2
  5724                           postinc0	equ	0xFEE
  5725                           fsr0h	equ	0xFEA
  5726                           fsr0l	equ	0xFE9
  5727                           wreg	equ	0xFE8
  5728                           indf1	equ	0xFE7
  5729                           fsr1h	equ	0xFE2
  5730                           fsr1l	equ	0xFE1
  5731                           bsr	equ	0xFE0
  5732                           indf2	equ	0xFDF
  5733                           postinc2	equ	0xFDE
  5734                           postdec2	equ	0xFDD
  5735                           fsr2h	equ	0xFDA
  5736                           fsr2l	equ	0xFD9
  5737                           status	equ	0xFD8
  5738                           
  5739 ;; *************** function _WriteTimer1 *****************
  5740 ;; Defined at:
  5741 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  timer1          2    0[COMRAM] unsigned int 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  timer           2    2[COMRAM] struct Timers
  5746 ;; Return value:  Size  Location     Type
  5747 ;;		None               void
  5748 ;; Registers used:
  5749 ;;		None
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;Total ram usage:        4 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:    6
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		_timer1_int_handler
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text34
  5770  001C64                     __ptext34:
  5771                           	opt stack 0
  5772  001C64                     _WriteTimer1:
  5773                           	opt stack 16
  5774                           
  5775                           ;incstack = 0
  5776  001C64  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5777  001C68  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5778  001C6C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5779  001C70  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5780  001C74  0012               	return	
  5781  001C76                     __end_of_WriteTimer1:
  5782                           	opt stack 0
  5783                           pclatu	equ	0xFFB
  5784                           pclath	equ	0xFFA
  5785                           tblptru	equ	0xFF8
  5786                           tblptrh	equ	0xFF7
  5787                           tblptrl	equ	0xFF6
  5788                           tablat	equ	0xFF5
  5789                           prodh	equ	0xFF4
  5790                           prodl	equ	0xFF3
  5791                           intcon	equ	0xFF2
  5792                           postinc0	equ	0xFEE
  5793                           fsr0h	equ	0xFEA
  5794                           fsr0l	equ	0xFE9
  5795                           wreg	equ	0xFE8
  5796                           indf1	equ	0xFE7
  5797                           fsr1h	equ	0xFE2
  5798                           fsr1l	equ	0xFE1
  5799                           bsr	equ	0xFE0
  5800                           indf2	equ	0xFDF
  5801                           postinc2	equ	0xFDE
  5802                           postdec2	equ	0xFDD
  5803                           fsr2h	equ	0xFDA
  5804                           fsr2l	equ	0xFD9
  5805                           status	equ	0xFD8
  5806                           
  5807 ;; *************** function _ToMainLow_sendmsg *****************
  5808 ;; Defined at:
  5809 ;;		line 103 in file "../src/messages.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  length          1    wreg     unsigned char 
  5812 ;;  msgtype         1   22[COMRAM] unsigned char 
  5813 ;;  data            2   23[COMRAM] PTR void 
  5814 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_message(3)
      +, uart_receive_interrupt_handler@gooey_uart_center(14), 
  5815 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  length          1   25[COMRAM] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      char 
  5820 ;; Registers used:
  5821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5827 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5831 ;;Total ram usage:        4 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    8
  5834 ;; This function calls:
  5835 ;;		i1_send_msg
  5836 ;; This function is called by:
  5837 ;;		_uart_receive_interrupt_handler
  5838 ;;		_timer1_int_handler
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text35
  5843  001BEE                     __ptext35:
  5844                           	opt stack 0
  5845  001BEE                     _ToMainLow_sendmsg:
  5846                           	opt stack 14
  5847                           
  5848                           ;incstack = 0
  5849                           ;ToMainLow_sendmsg@length stored from wreg
  5850  001BEE  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5851                           
  5852                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5853  001BF0  0102               	movlb	2	; () banked
  5854  001BF2  0E02               	movlw	high _ToMainLow_MQ
  5855  001BF4  6E0C               	movwf	i1send_msg@qptr+1,c
  5856  001BF6  0102               	movlb	2	; () banked
  5857  001BF8  0E00               	movlw	low _ToMainLow_MQ
  5858  001BFA  6E0B               	movwf	i1send_msg@qptr,c
  5859  001BFC  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5860  001C00  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5861  001C04  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5862  001C08  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5863  001C0C  EC97  F009         	call	i1_send_msg	;wreg free
  5864  001C10  0012               	return	
  5865  001C12                     __end_of_ToMainLow_sendmsg:
  5866                           	opt stack 0
  5867                           pclatu	equ	0xFFB
  5868                           pclath	equ	0xFFA
  5869                           tblptru	equ	0xFF8
  5870                           tblptrh	equ	0xFF7
  5871                           tblptrl	equ	0xFF6
  5872                           tablat	equ	0xFF5
  5873                           prodh	equ	0xFF4
  5874                           prodl	equ	0xFF3
  5875                           intcon	equ	0xFF2
  5876                           postinc0	equ	0xFEE
  5877                           fsr0h	equ	0xFEA
  5878                           fsr0l	equ	0xFE9
  5879                           wreg	equ	0xFE8
  5880                           indf1	equ	0xFE7
  5881                           fsr1h	equ	0xFE2
  5882                           fsr1l	equ	0xFE1
  5883                           bsr	equ	0xFE0
  5884                           indf2	equ	0xFDF
  5885                           postinc2	equ	0xFDE
  5886                           postdec2	equ	0xFDD
  5887                           fsr2h	equ	0xFDA
  5888                           fsr2l	equ	0xFD9
  5889                           status	equ	0xFD8
  5890                           
  5891 ;; *************** function i1_send_msg *****************
  5892 ;; Defined at:
  5893 ;;		line 24 in file "../src/messages.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5896 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5897 ;;  length          1   12[COMRAM] unsigned char 
  5898 ;;  msgtype         1   13[COMRAM] unsigned char 
  5899 ;;  data            2   14[COMRAM] PTR void 
  5900 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  5901 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  5902 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  5903 ;;		 -> main@t1thread_data(2), main@ic(38), 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5906 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  5907 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  5908 ;;  send_msg        2   17[COMRAM] unsigned int 
  5909 ;;  send_msg        1   19[COMRAM] unsigned char 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      char 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5919 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5920 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;Total ram usage:       12 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    7
  5926 ;; This function calls:
  5927 ;;		i1_memcpy
  5928 ;; This function is called by:
  5929 ;;		_ToMainLow_sendmsg
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text36
  5934  00132E                     __ptext36:
  5935                           	opt stack 0
  5936  00132E                     i1_send_msg:
  5937                           	opt stack 14
  5938                           
  5939                           ;messages.c: 25: unsigned char slot;
  5940                           ;messages.c: 27: msg *qmsg;
  5941                           ;messages.c: 28: size_t tlength = length;
  5942                           
  5943                           ;incstack = 0
  5944  00132E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5945  001332  6A13               	clrf	i1send_msg@tlength+1,c
  5946                           
  5947                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5948  001334  EE20 F088          	lfsr	2,136
  5949  001338  500B               	movf	i1send_msg@qptr,w,c
  5950  00133A  26D9               	addwf	fsr2l,f,c
  5951  00133C  500C               	movf	i1send_msg@qptr+1,w,c
  5952  00133E  22DA               	addwfc	fsr2h,f,c
  5953  001340  50DF               	movf	indf2,w,c
  5954  001342  6E14               	movwf	i1send_msg@slot,c
  5955                           
  5956                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5957  001344  5014               	movf	i1send_msg@slot,w,c
  5958  001346  0D11               	mullw	17
  5959  001348  50F3               	movf	prodl,w,c
  5960  00134A  240B               	addwf	i1send_msg@qptr,w,c
  5961  00134C  6E15               	movwf	i1send_msg@qmsg,c
  5962  00134E  50F4               	movf	prodh,w,c
  5963  001350  200C               	addwfc	i1send_msg@qptr+1,w,c
  5964  001352  6E16               	movwf	i1send_msg@qmsg+1,c
  5965                           
  5966                           ;messages.c: 41: if (qmsg->full != 0) {
  5967  001354  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5968  001358  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5969  00135C  50DF               	movf	indf2,w,c
  5970  00135E  B4D8               	btfsc	status,2,c
  5971  001360  D002               	goto	i1l2393
  5972                           
  5973                           ;messages.c: 42: return (-1);
  5974  001362  0EFF               	movlw	255
  5975  001364  0012               	return	
  5976  001366                     i1l2393:
  5977                           
  5978                           ;messages.c: 43: }
  5979                           ;messages.c: 46: qmsg->length = length;
  5980  001366  EE20 F001          	lfsr	2,1
  5981  00136A  5015               	movf	i1send_msg@qmsg,w,c
  5982  00136C  26D9               	addwf	fsr2l,f,c
  5983  00136E  5016               	movf	i1send_msg@qmsg+1,w,c
  5984  001370  22DA               	addwfc	fsr2h,f,c
  5985  001372  C00D  FFDF         	movff	i1send_msg@length,indf2
  5986                           
  5987                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5988  001376  EE20 F002          	lfsr	2,2
  5989  00137A  5015               	movf	i1send_msg@qmsg,w,c
  5990  00137C  26D9               	addwf	fsr2l,f,c
  5991  00137E  5016               	movf	i1send_msg@qmsg+1,w,c
  5992  001380  22DA               	addwfc	fsr2h,f,c
  5993  001382  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5994                           
  5995                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5996  001386  0E03               	movlw	3
  5997  001388  2415               	addwf	i1send_msg@qmsg,w,c
  5998  00138A  6E01               	movwf	i1memcpy@d1,c
  5999  00138C  0E00               	movlw	0
  6000  00138E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6001  001390  6E02               	movwf	i1memcpy@d1+1,c
  6002  001392  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6003  001396  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6004  00139A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6005  00139E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6006  0013A2  EC75  F00C         	call	i1_memcpy	;wreg free
  6007                           
  6008                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  6009  0013A6  EE20 F088          	lfsr	2,136
  6010  0013AA  500B               	movf	i1send_msg@qptr,w,c
  6011  0013AC  26D9               	addwf	fsr2l,f,c
  6012  0013AE  500C               	movf	i1send_msg@qptr+1,w,c
  6013  0013B0  22DA               	addwfc	fsr2h,f,c
  6014  0013B2  EE10 F088          	lfsr	1,136
  6015  0013B6  500B               	movf	i1send_msg@qptr,w,c
  6016  0013B8  26E1               	addwf	fsr1l,f,c
  6017  0013BA  500C               	movf	i1send_msg@qptr+1,w,c
  6018  0013BC  22E2               	addwfc	fsr1h,f,c
  6019  0013BE  50E7               	movf	indf1,w,c
  6020  0013C0  6E11               	movwf	??i1_send_msg& (0+255),c
  6021  0013C2  2811               	incf	??i1_send_msg,w,c
  6022  0013C4  0B07               	andlw	7
  6023  0013C6  6EDF               	movwf	indf2,c
  6024                           
  6025                           ;messages.c: 59: qmsg->full = 1;
  6026  0013C8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6027  0013CC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6028  0013D0  0E01               	movlw	1
  6029  0013D2  6EDF               	movwf	indf2,c
  6030                           
  6031                           ;messages.c: 60: return (1);
  6032  0013D4  0E01               	movlw	1
  6033  0013D6  0012               	return	
  6034  0013D8                     __end_ofi1_send_msg:
  6035                           	opt stack 0
  6036                           pclatu	equ	0xFFB
  6037                           pclath	equ	0xFFA
  6038                           tblptru	equ	0xFF8
  6039                           tblptrh	equ	0xFF7
  6040                           tblptrl	equ	0xFF6
  6041                           tablat	equ	0xFF5
  6042                           prodh	equ	0xFF4
  6043                           prodl	equ	0xFF3
  6044                           intcon	equ	0xFF2
  6045                           postinc0	equ	0xFEE
  6046                           fsr0h	equ	0xFEA
  6047                           fsr0l	equ	0xFE9
  6048                           wreg	equ	0xFE8
  6049                           indf1	equ	0xFE7
  6050                           fsr1h	equ	0xFE2
  6051                           fsr1l	equ	0xFE1
  6052                           bsr	equ	0xFE0
  6053                           indf2	equ	0xFDF
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function i1_memcpy *****************
  6061 ;; Defined at:
  6062 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  d1              2    0[COMRAM] PTR void 
  6065 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6066 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  6067 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  6068 ;;  s1              2    2[COMRAM] PTR const void 
  6069 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6070 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6071 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  6072 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6073 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  6074 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  6075 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6076 ;;  n               2    4[COMRAM] unsigned int 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6079 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6080 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6081 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  6082 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6083 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  6084 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  6085 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6086 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6087 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  6088 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  6089 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  2    0[COMRAM] PTR void 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6099 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;Total ram usage:       10 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    6
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		i1_send_msg
  6110 ;;		i1_recv_msg
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text37
  6115  0018EA                     __ptext37:
  6116                           	opt stack 0
  6117  0018EA                     i1_memcpy:
  6118                           	opt stack 14
  6119                           
  6120                           ;incstack = 0
  6121  0018EA  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6122  0018EE  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6123  0018F2  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6124  0018F6  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6125  0018FA  D00E               	goto	i1l2367
  6126  0018FC                     i1l2361:
  6127  0018FC  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6128  001900  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6129  001904  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6130  001908  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6131  00190C  CFDF FFE7          	movff	indf2,indf1
  6132  001910  4A09               	infsnz	i1memcpy@s,f,c
  6133  001912  2A0A               	incf	i1memcpy@s+1,f,c
  6134  001914  4A07               	infsnz	i1memcpy@d,f,c
  6135  001916  2A08               	incf	i1memcpy@d+1,f,c
  6136  001918                     i1l2367:
  6137  001918  0605               	decf	i1memcpy@n,f,c
  6138  00191A  A0D8               	btfss	status,0,c
  6139  00191C  0606               	decf	i1memcpy@n+1,f,c
  6140  00191E  2805               	incf	i1memcpy@n& (0+255),w,c
  6141  001920  B4D8               	btfsc	status,2,c
  6142  001922  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6143  001924  B4D8               	btfsc	status,2,c
  6144                           
  6145                           ;	Return value of i1_memcpy is never used
  6146  001926  0012               	return	
  6147  001928  D7E9               	goto	i1l2361
  6148  00192A                     __end_ofi1_memcpy:
  6149                           	opt stack 0
  6150                           pclatu	equ	0xFFB
  6151                           pclath	equ	0xFFA
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           postinc0	equ	0xFEE
  6160                           fsr0h	equ	0xFEA
  6161                           fsr0l	equ	0xFE9
  6162                           wreg	equ	0xFE8
  6163                           indf1	equ	0xFE7
  6164                           fsr1h	equ	0xFE2
  6165                           fsr1l	equ	0xFE1
  6166                           bsr	equ	0xFE0
  6167                           indf2	equ	0xFDF
  6168                           postinc2	equ	0xFDE
  6169                           postdec2	equ	0xFDD
  6170                           fsr2h	equ	0xFDA
  6171                           fsr2l	equ	0xFD9
  6172                           status	equ	0xFD8
  6173                           
  6174 ;; *************** function _ReadTimer1 *****************
  6175 ;; Defined at:
  6176 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;  timer           2    2[COMRAM] struct Timers
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  2    0[COMRAM] unsigned int 
  6183 ;; Registers used:
  6184 ;;		None
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;Total ram usage:        4 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    6
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_timer1_int_handler
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text38
  6205  001C76                     __ptext38:
  6206                           	opt stack 0
  6207  001C76                     _ReadTimer1:
  6208                           	opt stack 16
  6209                           
  6210                           ;incstack = 0
  6211  001C76  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6212  001C7A  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6213  001C7E  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6214  001C82  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6215  001C86  0012               	return	
  6216  001C88                     __end_of_ReadTimer1:
  6217                           	opt stack 0
  6218                           pclatu	equ	0xFFB
  6219                           pclath	equ	0xFFA
  6220                           tblptru	equ	0xFF8
  6221                           tblptrh	equ	0xFF7
  6222                           tblptrl	equ	0xFF6
  6223                           tablat	equ	0xFF5
  6224                           prodh	equ	0xFF4
  6225                           prodl	equ	0xFF3
  6226                           intcon	equ	0xFF2
  6227                           postinc0	equ	0xFEE
  6228                           fsr0h	equ	0xFEA
  6229                           fsr0l	equ	0xFE9
  6230                           wreg	equ	0xFE8
  6231                           indf1	equ	0xFE7
  6232                           fsr1h	equ	0xFE2
  6233                           fsr1l	equ	0xFE1
  6234                           bsr	equ	0xFE0
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function _InterruptHandlerHigh *****************
  6243 ;; Defined at:
  6244 ;;		line 86 in file "../src/interrupts.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6260 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;Total ram usage:       14 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    5
  6265 ;; This function calls:
  6266 ;;		_SleepIfOkay
  6267 ;;		_i2c_int_handler
  6268 ;;		_timer0_int_handler
  6269 ;; This function is called by:
  6270 ;;		Interrupt level 2
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	intcode
  6275  000008                     __pintcode:
  6276                           	opt stack 0
  6277  000008                     _InterruptHandlerHigh:
  6278                           	opt stack 14
  6279                           
  6280                           ;incstack = 0
  6281  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh
  6282  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+1
  6283  000010  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+2
  6284  000014  EF84  F00A         	goto	int_func
  6285                           pclatu	equ	0xFFB
  6286                           pclath	equ	0xFFA
  6287                           tblptru	equ	0xFF8
  6288                           tblptrh	equ	0xFF7
  6289                           tblptrl	equ	0xFF6
  6290                           tablat	equ	0xFF5
  6291                           prodh	equ	0xFF4
  6292                           prodl	equ	0xFF3
  6293                           intcon	equ	0xFF2
  6294                           postinc0	equ	0xFEE
  6295                           fsr0h	equ	0xFEA
  6296                           fsr0l	equ	0xFE9
  6297                           wreg	equ	0xFE8
  6298                           indf1	equ	0xFE7
  6299                           fsr1h	equ	0xFE2
  6300                           fsr1l	equ	0xFE1
  6301                           bsr	equ	0xFE0
  6302                           indf2	equ	0xFDF
  6303                           postinc2	equ	0xFDE
  6304                           postdec2	equ	0xFDD
  6305                           fsr2h	equ	0xFDA
  6306                           fsr2l	equ	0xFD9
  6307                           status	equ	0xFD8
  6308                           
  6309                           	psect	intcode_body
  6310  001508                     __pintcode_body:
  6311                           	opt stack 14
  6312  001508                     int_func:
  6313                           	opt stack 14
  6314  001508  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+3
  6315  00150C  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+4
  6316  001510  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+5
  6317  001514  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+6
  6318  001518  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+7
  6319  00151C  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+8
  6320  001520  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+9
  6321  001524  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+10
  6322  001528  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+11
  6323  00152C  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+12
  6324  001530  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+13
  6325                           
  6326                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6327  001534  A69E               	btfss	3998,3,c	;volatile
  6328  001536  D003               	goto	i2l3153
  6329                           
  6330                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6331  001538  969E               	bcf	3998,3,c	;volatile
  6332                           
  6333                           ;interrupts.c: 98: i2c_int_handler();
  6334  00153A  EC62  F000         	call	_i2c_int_handler	;wreg free
  6335  00153E                     i2l3153:
  6336                           
  6337                           ;interrupts.c: 99: }
  6338                           ;interrupts.c: 102: if (INTCONbits.TMR0IF) {
  6339  00153E  A4F2               	btfss	intcon,2,c	;volatile
  6340  001540  D003               	goto	i2l3159
  6341                           
  6342                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6343  001542  94F2               	bcf	intcon,2,c	;volatile
  6344                           
  6345                           ;interrupts.c: 108: timer0_int_handler();
  6346  001544  ECFB  F00A         	call	_timer0_int_handler	;wreg free
  6347  001548                     i2l3159:
  6348                           
  6349                           ;interrupts.c: 109: }
  6350                           ;interrupts.c: 118: SleepIfOkay();
  6351  001548  ECC9  F00B         	call	_SleepIfOkay	;wreg free
  6352  00154C  C09C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6353  001550  C09B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6354  001554  C09A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6355  001558  C099  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6356  00155C  C098  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6357  001560  C097  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6358  001564  C096  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6359  001568  C095  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6360  00156C  C094  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6361  001570  C093  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6362  001574  C092  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6363  001578  C091  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6364  00157C  C090  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6365  001580  C08F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6366  001584  0011               	retfie		f
  6367  001586                     __end_of_InterruptHandlerHigh:
  6368                           	opt stack 0
  6369                           pclatu	equ	0xFFB
  6370                           pclath	equ	0xFFA
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           prodh	equ	0xFF4
  6376                           prodl	equ	0xFF3
  6377                           intcon	equ	0xFF2
  6378                           postinc0	equ	0xFEE
  6379                           fsr0h	equ	0xFEA
  6380                           fsr0l	equ	0xFE9
  6381                           wreg	equ	0xFE8
  6382                           indf1	equ	0xFE7
  6383                           fsr1h	equ	0xFE2
  6384                           fsr1l	equ	0xFE1
  6385                           bsr	equ	0xFE0
  6386                           indf2	equ	0xFDF
  6387                           postinc2	equ	0xFDE
  6388                           postdec2	equ	0xFDD
  6389                           fsr2h	equ	0xFDA
  6390                           fsr2l	equ	0xFD9
  6391                           status	equ	0xFD8
  6392                           
  6393 ;; *************** function _timer0_int_handler *****************
  6394 ;; Defined at:
  6395 ;;		line 16 in file "../src/user_interrupts.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  val             2   33[BANK0 ] unsigned int 
  6400 ;;  msgtype         2   31[BANK0 ] int 
  6401 ;;  length          2   29[BANK0 ] int 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;		None               void
  6404 ;; Registers used:
  6405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6412 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;Total ram usage:        6 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    3
  6418 ;; This function calls:
  6419 ;;		_FromMainHigh_recvmsg
  6420 ;;		_ToMainHigh_sendmsg
  6421 ;;		_WriteTimer0
  6422 ;; This function is called by:
  6423 ;;		_InterruptHandlerHigh
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text40
  6428  0015F6                     __ptext40:
  6429                           	opt stack 0
  6430  0015F6                     _timer0_int_handler:
  6431                           	opt stack 15
  6432                           
  6433                           ;user_interrupts.c: 20: unsigned int val;
  6434                           ;user_interrupts.c: 21: int length, msgtype;
  6435                           ;user_interrupts.c: 25: WriteTimer0(0);
  6436                           
  6437                           ;incstack = 0
  6438  0015F6  0E00               	movlw	0
  6439  0015F8  0100               	movlb	0	; () banked
  6440  0015FA  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6441  0015FC  0E00               	movlw	0
  6442  0015FE  0100               	movlb	0	; () banked
  6443  001600  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6444  001602  EC44  F00E         	call	_WriteTimer0	;wreg free
  6445                           
  6446                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6447  001606  0100               	movlb	0	; () banked
  6448  001608  0E00               	movlw	high timer0_int_handler@msgtype
  6449  00160A  0100               	movlb	0	; () banked
  6450  00160C  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6451  00160E  0100               	movlb	0	; () banked
  6452  001610  0E7F               	movlw	low timer0_int_handler@msgtype
  6453  001612  0100               	movlb	0	; () banked
  6454  001614  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6455  001616  0100               	movlb	0	; () banked
  6456  001618  0E00               	movlw	high timer0_int_handler@val
  6457  00161A  0100               	movlb	0	; () banked
  6458  00161C  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6459  00161E  0100               	movlb	0	; () banked
  6460  001620  0E81               	movlw	low timer0_int_handler@val
  6461  001622  0100               	movlb	0	; () banked
  6462  001624  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6463  001626  0E02               	movlw	2
  6464  001628  EC41  F00D         	call	_FromMainHigh_recvmsg
  6465  00162C  0100               	movlb	0	; () banked
  6466  00162E  6F7D               	movwf	timer0_int_handler@length& (0+255),b
  6467  001630  0100               	movlb	0	; () banked
  6468  001632  6B7E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6469  001634  0100               	movlb	0	; () banked
  6470  001636  BF7D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6471  001638  077E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6475  00163A  0100               	movlb	0	; () banked
  6476  00163C  517D               	movf	timer0_int_handler@length& (0+255),w,b
  6477  00163E  0A02               	xorlw	2
  6478  001640  117E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6479  001642  A4D8               	btfss	status,2,c
  6480  001644  0012               	return	
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6484  001646  0E0A               	movlw	10
  6485  001648  0100               	movlb	0	; () banked
  6486  00164A  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6487  00164C  0100               	movlb	0	; () banked
  6488  00164E  0E00               	movlw	high timer0_int_handler@val
  6489  001650  0100               	movlb	0	; () banked
  6490  001652  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6491  001654  0100               	movlb	0	; () banked
  6492  001656  0E81               	movlw	low timer0_int_handler@val
  6493  001658  0100               	movlb	0	; () banked
  6494  00165A  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6495  00165C  0E02               	movlw	2
  6496  00165E  ECA3  F00D         	call	_ToMainHigh_sendmsg
  6497  001662  0012               	return	
  6498  001664                     __end_of_timer0_int_handler:
  6499                           	opt stack 0
  6500                           pclatu	equ	0xFFB
  6501                           pclath	equ	0xFFA
  6502                           tblptru	equ	0xFF8
  6503                           tblptrh	equ	0xFF7
  6504                           tblptrl	equ	0xFF6
  6505                           tablat	equ	0xFF5
  6506                           prodh	equ	0xFF4
  6507                           prodl	equ	0xFF3
  6508                           intcon	equ	0xFF2
  6509                           postinc0	equ	0xFEE
  6510                           fsr0h	equ	0xFEA
  6511                           fsr0l	equ	0xFE9
  6512                           wreg	equ	0xFE8
  6513                           indf1	equ	0xFE7
  6514                           fsr1h	equ	0xFE2
  6515                           fsr1l	equ	0xFE1
  6516                           bsr	equ	0xFE0
  6517                           indf2	equ	0xFDF
  6518                           postinc2	equ	0xFDE
  6519                           postdec2	equ	0xFDD
  6520                           fsr2h	equ	0xFDA
  6521                           fsr2l	equ	0xFD9
  6522                           status	equ	0xFD8
  6523                           
  6524 ;; *************** function _WriteTimer0 *****************
  6525 ;; Defined at:
  6526 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  timer0          2    0[BANK0 ] unsigned int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  timer           2    2[BANK0 ] struct Timers
  6531 ;; Return value:  Size  Location     Type
  6532 ;;		None               void
  6533 ;; Registers used:
  6534 ;;		None
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6544 ;;Total ram usage:        4 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_timer0_int_handler
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text41
  6554  001C88                     __ptext41:
  6555                           	opt stack 0
  6556  001C88                     _WriteTimer0:
  6557                           	opt stack 17
  6558                           
  6559                           ;incstack = 0
  6560  001C88  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6561  001C8C  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6562  001C90  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6563  001C94  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6564  001C98  0012               	return	
  6565  001C9A                     __end_of_WriteTimer0:
  6566                           	opt stack 0
  6567                           pclatu	equ	0xFFB
  6568                           pclath	equ	0xFFA
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           prodh	equ	0xFF4
  6574                           prodl	equ	0xFF3
  6575                           intcon	equ	0xFF2
  6576                           postinc0	equ	0xFEE
  6577                           fsr0h	equ	0xFEA
  6578                           fsr0l	equ	0xFE9
  6579                           wreg	equ	0xFE8
  6580                           indf1	equ	0xFE7
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           bsr	equ	0xFE0
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           postdec2	equ	0xFDD
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _i2c_int_handler *****************
  6592 ;; Defined at:
  6593 ;;		line 103 in file "../src/my_i2c.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  l               2    0        int 
  6598 ;;  error_buf       3   38[BANK0 ] unsigned char [3]
  6599 ;;  data_read       1   46[BANK0 ] unsigned char 
  6600 ;;  msg_ready       1   45[BANK0 ] unsigned char 
  6601 ;;  msg_to_send     1   44[BANK0 ] unsigned char 
  6602 ;;  i2c_data        1   43[BANK0 ] unsigned char 
  6603 ;;  overrun_erro    1   42[BANK0 ] unsigned char 
  6604 ;;  data_written    1   41[BANK0 ] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;		None               void
  6607 ;; Registers used:
  6608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6618 ;;Total ram usage:       10 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    4
  6621 ;; This function calls:
  6622 ;;		_ToMainHigh_sendmsg
  6623 ;;		_blip4
  6624 ;;		_handle_start
  6625 ;;		_retrieve_sensor_values
  6626 ;;		i2_blip
  6627 ;;		i2_blip1
  6628 ;;		i2_blip2
  6629 ;;		i2_blip3
  6630 ;; This function is called by:
  6631 ;;		_InterruptHandlerHigh
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text42
  6636  0000C4                     __ptext42:
  6637                           	opt stack 0
  6638  0000C4                     _i2c_int_handler:
  6639                           	opt stack 14
  6640                           
  6641                           ;my_i2c.c: 104: blip1();
  6642                           
  6643                           ;incstack = 0
  6644  0000C4  EC7D  F00E         	call	i2_blip1	;wreg free
  6645                           
  6646                           ;my_i2c.c: 106: static unsigned char sensor_bank_side[14];
  6647                           ;my_i2c.c: 107: static unsigned char sensor_bank_front[14];
  6648                           ;my_i2c.c: 108: static unsigned char sensor_bank_ventril[14];
  6649                           ;my_i2c.c: 110: unsigned char i2c_data;
  6650                           ;my_i2c.c: 111: unsigned char data_read = 0;
  6651  0000C8  0E00               	movlw	0
  6652  0000CA  0100               	movlb	0	; () banked
  6653  0000CC  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;my_i2c.c: 112: unsigned char data_written = 0;
  6657  0000CE  0E00               	movlw	0
  6658  0000D0  0100               	movlb	0	; () banked
  6659  0000D2  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;my_i2c.c: 113: unsigned char msg_ready = 0;
  6663  0000D4  0E00               	movlw	0
  6664  0000D6  0100               	movlb	0	; () banked
  6665  0000D8  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;my_i2c.c: 114: unsigned char msg_to_send = 0;
  6669  0000DA  0E00               	movlw	0
  6670  0000DC  0100               	movlb	0	; () banked
  6671  0000DE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;my_i2c.c: 115: unsigned char overrun_error = 0;
  6675  0000E0  0E00               	movlw	0
  6676  0000E2  0100               	movlb	0	; () banked
  6677  0000E4  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;my_i2c.c: 116: unsigned char error_buf[3];
  6681                           ;my_i2c.c: 119: if (SSPCON1bits.SSPOV == 1) {
  6682  0000E6  ACC6               	btfss	4038,6,c	;volatile
  6683  0000E8  D024               	goto	i2l2677
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;my_i2c.c: 120: SSPCON1bits.SSPOV = 0;
  6687  0000EA  9CC6               	bcf	4038,6,c	;volatile
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;my_i2c.c: 124: ic_ptr->status = 0x5;
  6691  0000EC  0100               	movlb	0	; () banked
  6692  0000EE  EE20 F021          	lfsr	2,33
  6693  0000F2  0100               	movlb	0	; () banked
  6694  0000F4  51D4               	movf	_ic_ptr& (0+255),w,b
  6695  0000F6  26D9               	addwf	fsr2l,f,c
  6696  0000F8  0100               	movlb	0	; () banked
  6697  0000FA  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6698  0000FC  22DA               	addwfc	fsr2h,f,c
  6699  0000FE  0E05               	movlw	5
  6700  000100  6EDF               	movwf	indf2,c
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;my_i2c.c: 125: overrun_error = 1;
  6704  000102  0E01               	movlw	1
  6705  000104  0100               	movlb	0	; () banked
  6706  000106  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;my_i2c.c: 126: ic_ptr->error_count++;
  6710  000108  0100               	movlb	0	; () banked
  6711  00010A  EE20 F023          	lfsr	2,35
  6712  00010E  0100               	movlb	0	; () banked
  6713  000110  51D4               	movf	_ic_ptr& (0+255),w,b
  6714  000112  26D9               	addwf	fsr2l,f,c
  6715  000114  0100               	movlb	0	; () banked
  6716  000116  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6717  000118  22DA               	addwfc	fsr2h,f,c
  6718  00011A  2ADF               	incf	indf2,f,c
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;my_i2c.c: 127: ic_ptr->error_code = 0x4;
  6722  00011C  0100               	movlb	0	; () banked
  6723  00011E  EE20 F022          	lfsr	2,34
  6724  000122  0100               	movlb	0	; () banked
  6725  000124  51D4               	movf	_ic_ptr& (0+255),w,b
  6726  000126  26D9               	addwf	fsr2l,f,c
  6727  000128  0100               	movlb	0	; () banked
  6728  00012A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6729  00012C  22DA               	addwfc	fsr2h,f,c
  6730  00012E  0E04               	movlw	4
  6731  000130  6EDF               	movwf	indf2,c
  6732  000132                     i2l2677:
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;my_i2c.c: 128: }
  6736                           ;my_i2c.c: 130: if (SSPSTATbits.BF == 1) {
  6737  000132  A0C7               	btfss	4039,0,c	;volatile
  6738  000134  D005               	goto	i2l2683
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;my_i2c.c: 131: i2c_data = SSPBUF;
  6742  000136  CFC9 F08B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;my_i2c.c: 132: data_read = 1;
  6746  00013A  0E01               	movlw	1
  6747  00013C  0100               	movlb	0	; () banked
  6748  00013E  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6749  000140                     i2l2683:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;my_i2c.c: 133: }
  6753                           ;my_i2c.c: 135: if (!overrun_error) {
  6754  000140  0100               	movlb	0	; () banked
  6755  000142  678A               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6756  000144  D25E               	goto	i2l304
  6757  000146  D247               	goto	i2l2801
  6758  000148                     i2l306:
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;my_i2c.c: 138: {
  6762                           ;my_i2c.c: 140: if (SSPSTATbits.S == 1) {
  6763  000148  A6C7               	btfss	4039,3,c	;volatile
  6764  00014A  D25B               	goto	i2l304
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;my_i2c.c: 141: handle_start(data_read);
  6768  00014C  0100               	movlb	0	; () banked
  6769  00014E  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6770  000150  EC32  F009         	call	_handle_start
  6771                           
  6772                           ;my_i2c.c: 143: if (ic_ptr->status == 0x8) {
  6773  000154  0100               	movlb	0	; () banked
  6774  000156  EE20 F021          	lfsr	2,33
  6775  00015A  0100               	movlb	0	; () banked
  6776  00015C  51D4               	movf	_ic_ptr& (0+255),w,b
  6777  00015E  26D9               	addwf	fsr2l,f,c
  6778  000160  0100               	movlb	0	; () banked
  6779  000162  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6780  000164  22DA               	addwfc	fsr2h,f,c
  6781  000166  0E08               	movlw	8
  6782  000168  62DF               	cpfseq	indf2,c
  6783  00016A  D24B               	goto	i2l304
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;my_i2c.c: 144: data_read = 0;
  6787  00016C  0E00               	movlw	0
  6788  00016E  0100               	movlb	0	; () banked
  6789  000170  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6790                           
  6791                           ;my_i2c.c: 145: msg_to_send = 1;
  6792  000172  0E01               	movlw	1
  6793  000174  0100               	movlb	0	; () banked
  6794  000176  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6795  000178  D244               	goto	i2l304
  6796  00017A                     i2l310:
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;my_i2c.c: 151: {
  6800                           ;my_i2c.c: 154: if (SSPSTATbits.P == 1) {
  6801  00017A  A8C7               	btfss	4039,4,c	;volatile
  6802  00017C  D02A               	goto	i2l2703
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;my_i2c.c: 157: ic_ptr->event_count++;
  6806  00017E  0100               	movlb	0	; () banked
  6807  000180  EE20 F020          	lfsr	2,32
  6808  000184  0100               	movlb	0	; () banked
  6809  000186  51D4               	movf	_ic_ptr& (0+255),w,b
  6810  000188  26D9               	addwf	fsr2l,f,c
  6811  00018A  0100               	movlb	0	; () banked
  6812  00018C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6813  00018E  22DA               	addwfc	fsr2h,f,c
  6814  000190  2ADF               	incf	indf2,f,c
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;my_i2c.c: 158: if (data_read) {
  6818  000192  0100               	movlb	0	; () banked
  6819  000194  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6820  000196  B4D8               	btfsc	status,2,c
  6821  000198  D213               	goto	L10
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6825  00019A  BAC7               	btfsc	4039,5,c	;volatile
  6826  00019C  D004               	goto	i2l2701
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;my_i2c.c: 160: msg_ready = 1;
  6830  00019E  0E01               	movlw	1
  6831  0001A0  0100               	movlb	0	; () banked
  6832  0001A2  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6833                           
  6834                           ;my_i2c.c: 161: } else {
  6835  0001A4  D20D               	goto	L10
  6836  0001A6                     i2l2701:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;my_i2c.c: 162: ic_ptr->error_count++;
  6840  0001A6  0100               	movlb	0	; () banked
  6841  0001A8  EE20 F023          	lfsr	2,35
  6842  0001AC  0100               	movlb	0	; () banked
  6843  0001AE  51D4               	movf	_ic_ptr& (0+255),w,b
  6844  0001B0  26D9               	addwf	fsr2l,f,c
  6845  0001B2  0100               	movlb	0	; () banked
  6846  0001B4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6847  0001B6  22DA               	addwfc	fsr2h,f,c
  6848  0001B8  2ADF               	incf	indf2,f,c
  6849                           
  6850                           ;my_i2c.c: 163: ic_ptr->error_code = 0x6;
  6851  0001BA  0100               	movlb	0	; () banked
  6852  0001BC  EE20 F022          	lfsr	2,34
  6853  0001C0  0100               	movlb	0	; () banked
  6854  0001C2  51D4               	movf	_ic_ptr& (0+255),w,b
  6855  0001C4  26D9               	addwf	fsr2l,f,c
  6856  0001C6  0100               	movlb	0	; () banked
  6857  0001C8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6858  0001CA  22DA               	addwfc	fsr2h,f,c
  6859  0001CC  0E06               	movlw	6
  6860  0001CE  6EDF               	movwf	indf2,c
  6861                           
  6862                           ; BSR set to: 0
  6863  0001D0  D1F7               	goto	L10
  6864  0001D2                     i2l2703:
  6865                           
  6866                           ; BSR set to: 0
  6867  0001D2  0100               	movlb	0	; () banked
  6868  0001D4  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  6869  0001D6  B4D8               	btfsc	status,2,c
  6870  0001D8  D214               	goto	i2l304
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;my_i2c.c: 168: ic_ptr->event_count++;
  6874  0001DA  0100               	movlb	0	; () banked
  6875  0001DC  EE20 F020          	lfsr	2,32
  6876  0001E0  0100               	movlb	0	; () banked
  6877  0001E2  51D4               	movf	_ic_ptr& (0+255),w,b
  6878  0001E4  26D9               	addwf	fsr2l,f,c
  6879  0001E6  0100               	movlb	0	; () banked
  6880  0001E8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6881  0001EA  22DA               	addwfc	fsr2h,f,c
  6882  0001EC  2ADF               	incf	indf2,f,c
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;my_i2c.c: 169: if (SSPSTATbits.D_A == 0) {
  6886  0001EE  BAC7               	btfsc	4039,5,c	;volatile
  6887  0001F0  D02C               	goto	i2l2723
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;my_i2c.c: 170: if (SSPSTATbits.R_W == 0) {
  6891  0001F2  B4C7               	btfsc	4039,2,c	;volatile
  6892  0001F4  D00B               	goto	i2l2713
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;my_i2c.c: 171: ic_ptr->status = 0x7;
  6896  0001F6  0100               	movlb	0	; () banked
  6897  0001F8  EE20 F021          	lfsr	2,33
  6898  0001FC  0100               	movlb	0	; () banked
  6899  0001FE  51D4               	movf	_ic_ptr& (0+255),w,b
  6900  000200  26D9               	addwf	fsr2l,f,c
  6901  000202  0100               	movlb	0	; () banked
  6902  000204  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6903  000206  22DA               	addwfc	fsr2h,f,c
  6904  000208  0E07               	movlw	7
  6905  00020A  D082               	goto	L8
  6906  00020C                     i2l2713:
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;my_i2c.c: 173: blip3();
  6910  00020C  EC75  F00E         	call	i2_blip3	;wreg free
  6911                           
  6912                           ;my_i2c.c: 174: ic_ptr->status = 0x8;
  6913  000210  0100               	movlb	0	; () banked
  6914  000212  EE20 F021          	lfsr	2,33
  6915  000216  0100               	movlb	0	; () banked
  6916  000218  51D4               	movf	_ic_ptr& (0+255),w,b
  6917  00021A  26D9               	addwf	fsr2l,f,c
  6918  00021C  0100               	movlb	0	; () banked
  6919  00021E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6920  000220  22DA               	addwfc	fsr2h,f,c
  6921  000222  0E08               	movlw	8
  6922  000224  6EDF               	movwf	indf2,c
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;my_i2c.c: 175: msg_to_send = 1;
  6926  000226  0E01               	movlw	1
  6927  000228  0100               	movlb	0	; () banked
  6928  00022A  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;my_i2c.c: 177: data_read = 0;
  6932  00022C  0E00               	movlw	0
  6933  00022E  0100               	movlb	0	; () banked
  6934  000230  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;my_i2c.c: 178: ic_ptr->outbufind = 0;
  6938  000232  0100               	movlb	0	; () banked
  6939  000234  EE20 F01E          	lfsr	2,30
  6940  000238  0100               	movlb	0	; () banked
  6941  00023A  51D4               	movf	_ic_ptr& (0+255),w,b
  6942  00023C  26D9               	addwf	fsr2l,f,c
  6943  00023E  0100               	movlb	0	; () banked
  6944  000240  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6945  000242  22DA               	addwfc	fsr2h,f,c
  6946  000244  0E00               	movlw	0
  6947  000246  6EDF               	movwf	indf2,c
  6948                           
  6949                           ;my_i2c.c: 179: goto l;
  6950  000248  D020               	goto	i2l2725
  6951  00024A                     i2l2723:
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;my_i2c.c: 182: ic_ptr->error_count++;
  6955  00024A  0100               	movlb	0	; () banked
  6956  00024C  EE20 F023          	lfsr	2,35
  6957  000250  0100               	movlb	0	; () banked
  6958  000252  51D4               	movf	_ic_ptr& (0+255),w,b
  6959  000254  26D9               	addwf	fsr2l,f,c
  6960  000256  0100               	movlb	0	; () banked
  6961  000258  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6962  00025A  22DA               	addwfc	fsr2h,f,c
  6963  00025C  2ADF               	incf	indf2,f,c
  6964                           
  6965                           ;my_i2c.c: 183: ic_ptr->status = 0x5;
  6966  00025E  0100               	movlb	0	; () banked
  6967  000260  EE20 F021          	lfsr	2,33
  6968  000264  0100               	movlb	0	; () banked
  6969  000266  51D4               	movf	_ic_ptr& (0+255),w,b
  6970  000268  26D9               	addwf	fsr2l,f,c
  6971  00026A  0100               	movlb	0	; () banked
  6972  00026C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6973  00026E  22DA               	addwfc	fsr2h,f,c
  6974  000270  0E05               	movlw	5
  6975  000272  6EDF               	movwf	indf2,c
  6976                           
  6977                           ;my_i2c.c: 184: ic_ptr->error_code = 0x6;
  6978  000274  0100               	movlb	0	; () banked
  6979  000276  EE20 F022          	lfsr	2,34
  6980  00027A  0100               	movlb	0	; () banked
  6981  00027C  51D4               	movf	_ic_ptr& (0+255),w,b
  6982  00027E  26D9               	addwf	fsr2l,f,c
  6983  000280  0100               	movlb	0	; () banked
  6984  000282  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  6985  000284  22DA               	addwfc	fsr2h,f,c
  6986  000286  0E06               	movlw	6
  6987  000288  D043               	goto	L8
  6988  00028A                     i2l2725:
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;my_i2c.c: 191: {
  6992                           ;my_i2c.c: 192: blip4();
  6993  00028A  EC85  F00E         	call	_blip4	;wreg free
  6994                           
  6995                           ;my_i2c.c: 194: if (ic_ptr->outbufind < 14) {
  6996  00028E  0100               	movlb	0	; () banked
  6997  000290  EE20 F01E          	lfsr	2,30
  6998  000294  0100               	movlb	0	; () banked
  6999  000296  51D4               	movf	_ic_ptr& (0+255),w,b
  7000  000298  26D9               	addwf	fsr2l,f,c
  7001  00029A  0100               	movlb	0	; () banked
  7002  00029C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7003  00029E  22DA               	addwfc	fsr2h,f,c
  7004  0002A0  50DF               	movf	indf2,w,c
  7005  0002A2  0100               	movlb	0	; () banked
  7006  0002A4  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7007  0002A6  0E0E               	movlw	14
  7008  0002A8  0100               	movlb	0	; () banked
  7009  0002AA  5D85               	subwf	??_i2c_int_handler& (0+255),w,b
  7010  0002AC  B0D8               	btfsc	status,0,c
  7011  0002AE  D02D               	goto	i2l2737
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;my_i2c.c: 195: blip4();
  7015  0002B0  EC85  F00E         	call	_blip4	;wreg free
  7016                           
  7017                           ;my_i2c.c: 196: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7018  0002B4  0100               	movlb	0	; () banked
  7019  0002B6  EE20 F01E          	lfsr	2,30
  7020  0002BA  0100               	movlb	0	; () banked
  7021  0002BC  51D4               	movf	_ic_ptr& (0+255),w,b
  7022  0002BE  26D9               	addwf	fsr2l,f,c
  7023  0002C0  0100               	movlb	0	; () banked
  7024  0002C2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7025  0002C4  22DA               	addwfc	fsr2h,f,c
  7026  0002C6  50DF               	movf	indf2,w,c
  7027  0002C8  0100               	movlb	0	; () banked
  7028  0002CA  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7029  0002CC  0100               	movlb	0	; () banked
  7030  0002CE  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7031  0002D0  0D01               	mullw	1
  7032  0002D2  0E10               	movlw	16
  7033  0002D4  26F3               	addwf	prodl,f,c
  7034  0002D6  0E00               	movlw	0
  7035  0002D8  22F4               	addwfc	prodh,f,c
  7036  0002DA  50F3               	movf	prodl,w,c
  7037  0002DC  0100               	movlb	0	; () banked
  7038  0002DE  25D4               	addwf	_ic_ptr& (0+255),w,b
  7039  0002E0  6ED9               	movwf	fsr2l,c
  7040  0002E2  50F4               	movf	prodh,w,c
  7041  0002E4  0100               	movlb	0	; () banked
  7042  0002E6  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7043  0002E8  6EDA               	movwf	fsr2h,c
  7044  0002EA  50DF               	movf	indf2,w,c
  7045  0002EC  6EC9               	movwf	4041,c	;volatile
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;my_i2c.c: 197: ic_ptr->outbufind++;
  7049  0002EE  0100               	movlb	0	; () banked
  7050  0002F0  EE20 F01E          	lfsr	2,30
  7051  0002F4  0100               	movlb	0	; () banked
  7052  0002F6  51D4               	movf	_ic_ptr& (0+255),w,b
  7053  0002F8  26D9               	addwf	fsr2l,f,c
  7054  0002FA  0100               	movlb	0	; () banked
  7055  0002FC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7056  0002FE  22DA               	addwfc	fsr2h,f,c
  7057  000300  2ADF               	incf	indf2,f,c
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;my_i2c.c: 198: data_written = 1;
  7061  000302  0E01               	movlw	1
  7062  000304  0100               	movlb	0	; () banked
  7063  000306  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  7064                           
  7065                           ;my_i2c.c: 199: } else {
  7066  000308  D17C               	goto	i2l304
  7067  00030A                     i2l2737:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;my_i2c.c: 200: blip3();
  7071  00030A  EC75  F00E         	call	i2_blip3	;wreg free
  7072  00030E  D158               	goto	L10
  7073  000310                     L8:
  7074  000310  6EDF               	movwf	indf2,c
  7075  000312  D177               	goto	i2l304
  7076  000314                     i2l2741:
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;my_i2c.c: 207: {
  7080                           ;my_i2c.c: 208: blip2();
  7081  000314  EC79  F00E         	call	i2_blip2	;wreg free
  7082                           
  7083                           ;my_i2c.c: 210: if (SSPSTATbits.P == 1) {
  7084  000318  A8C7               	btfss	4039,4,c	;volatile
  7085  00031A  D05A               	goto	i2l2763
  7086                           
  7087                           ;my_i2c.c: 213: ic_ptr->event_count++;
  7088  00031C  0100               	movlb	0	; () banked
  7089  00031E  EE20 F020          	lfsr	2,32
  7090  000322  0100               	movlb	0	; () banked
  7091  000324  51D4               	movf	_ic_ptr& (0+255),w,b
  7092  000326  26D9               	addwf	fsr2l,f,c
  7093  000328  0100               	movlb	0	; () banked
  7094  00032A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7095  00032C  22DA               	addwfc	fsr2h,f,c
  7096  00032E  2ADF               	incf	indf2,f,c
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;my_i2c.c: 214: if (data_read) {
  7100  000330  0100               	movlb	0	; () banked
  7101  000332  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7102  000334  B4D8               	btfsc	status,2,c
  7103  000336  D048               	goto	i2l2759
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;my_i2c.c: 215: if (SSPSTATbits.D_A == 1) {
  7107  000338  AAC7               	btfss	4039,5,c	;volatile
  7108  00033A  D025               	goto	i2l2757
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;my_i2c.c: 216: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7112  00033C  0100               	movlb	0	; () banked
  7113  00033E  EE20 F00E          	lfsr	2,14
  7114  000342  0100               	movlb	0	; () banked
  7115  000344  51D4               	movf	_ic_ptr& (0+255),w,b
  7116  000346  26D9               	addwf	fsr2l,f,c
  7117  000348  0100               	movlb	0	; () banked
  7118  00034A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7119  00034C  22DA               	addwfc	fsr2h,f,c
  7120  00034E  50DF               	movf	indf2,w,c
  7121  000350  0100               	movlb	0	; () banked
  7122  000352  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7123  000354  0100               	movlb	0	; () banked
  7124  000356  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7125  000358  0D01               	mullw	1
  7126  00035A  50F3               	movf	prodl,w,c
  7127  00035C  0100               	movlb	0	; () banked
  7128  00035E  25D4               	addwf	_ic_ptr& (0+255),w,b
  7129  000360  6ED9               	movwf	fsr2l,c
  7130  000362  50F4               	movf	prodh,w,c
  7131  000364  0100               	movlb	0	; () banked
  7132  000366  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7133  000368  6EDA               	movwf	fsr2h,c
  7134  00036A  0100               	movlb	0	; () banked
  7135  00036C  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;my_i2c.c: 217: ic_ptr->buflen++;
  7139  000370  0100               	movlb	0	; () banked
  7140  000372  EE20 F00E          	lfsr	2,14
  7141  000376  0100               	movlb	0	; () banked
  7142  000378  51D4               	movf	_ic_ptr& (0+255),w,b
  7143  00037A  26D9               	addwf	fsr2l,f,c
  7144  00037C  0100               	movlb	0	; () banked
  7145  00037E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7146  000380  22DA               	addwfc	fsr2h,f,c
  7147  000382  2ADF               	incf	indf2,f,c
  7148  000384  D021               	goto	i2l2759
  7149  000386                     i2l2757:
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;my_i2c.c: 220: ic_ptr->error_count++;
  7153  000386  0100               	movlb	0	; () banked
  7154  000388  EE20 F023          	lfsr	2,35
  7155  00038C  0100               	movlb	0	; () banked
  7156  00038E  51D4               	movf	_ic_ptr& (0+255),w,b
  7157  000390  26D9               	addwf	fsr2l,f,c
  7158  000392  0100               	movlb	0	; () banked
  7159  000394  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7160  000396  22DA               	addwfc	fsr2h,f,c
  7161  000398  2ADF               	incf	indf2,f,c
  7162                           
  7163                           ;my_i2c.c: 221: ic_ptr->error_code = 0x6;
  7164  00039A  0100               	movlb	0	; () banked
  7165  00039C  EE20 F022          	lfsr	2,34
  7166  0003A0  0100               	movlb	0	; () banked
  7167  0003A2  51D4               	movf	_ic_ptr& (0+255),w,b
  7168  0003A4  26D9               	addwf	fsr2l,f,c
  7169  0003A6  0100               	movlb	0	; () banked
  7170  0003A8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7171  0003AA  22DA               	addwfc	fsr2h,f,c
  7172  0003AC  0E06               	movlw	6
  7173  0003AE  6EDF               	movwf	indf2,c
  7174                           
  7175                           ;my_i2c.c: 222: ic_ptr->status = 0x5;
  7176  0003B0  0100               	movlb	0	; () banked
  7177  0003B2  EE20 F021          	lfsr	2,33
  7178  0003B6  0100               	movlb	0	; () banked
  7179  0003B8  51D4               	movf	_ic_ptr& (0+255),w,b
  7180  0003BA  26D9               	addwf	fsr2l,f,c
  7181  0003BC  0100               	movlb	0	; () banked
  7182  0003BE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7183  0003C0  22DA               	addwfc	fsr2h,f,c
  7184  0003C2  0E05               	movlw	5
  7185  0003C4  6EDF               	movwf	indf2,c
  7186  0003C6  D0FC               	goto	L10
  7187  0003C8                     i2l2759:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;my_i2c.c: 225: msg_ready = 1;
  7191  0003C8  0E01               	movlw	1
  7192  0003CA  0100               	movlb	0	; () banked
  7193  0003CC  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7194                           
  7195                           ; BSR set to: 0
  7196  0003CE  D0F8               	goto	L10
  7197  0003D0                     i2l2763:
  7198                           
  7199                           ;my_i2c.c: 229: else if (data_read)
  7200  0003D0  0100               	movlb	0	; () banked
  7201  0003D2  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7202  0003D4  B4D8               	btfsc	status,2,c
  7203  0003D6  D115               	goto	i2l304
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;my_i2c.c: 230: {
  7207                           ;my_i2c.c: 232: ic_ptr->event_count++;
  7208  0003D8  0100               	movlb	0	; () banked
  7209  0003DA  EE20 F020          	lfsr	2,32
  7210  0003DE  0100               	movlb	0	; () banked
  7211  0003E0  51D4               	movf	_ic_ptr& (0+255),w,b
  7212  0003E2  26D9               	addwf	fsr2l,f,c
  7213  0003E4  0100               	movlb	0	; () banked
  7214  0003E6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7215  0003E8  22DA               	addwfc	fsr2h,f,c
  7216  0003EA  2ADF               	incf	indf2,f,c
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;my_i2c.c: 233: if (SSP1STATbits.D_A == 1) {
  7220  0003EC  AAC7               	btfss	4039,5,c	;volatile
  7221  0003EE  D025               	goto	i2l333
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;my_i2c.c: 234: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7225  0003F0  0100               	movlb	0	; () banked
  7226  0003F2  EE20 F00E          	lfsr	2,14
  7227  0003F6  0100               	movlb	0	; () banked
  7228  0003F8  51D4               	movf	_ic_ptr& (0+255),w,b
  7229  0003FA  26D9               	addwf	fsr2l,f,c
  7230  0003FC  0100               	movlb	0	; () banked
  7231  0003FE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7232  000400  22DA               	addwfc	fsr2h,f,c
  7233  000402  50DF               	movf	indf2,w,c
  7234  000404  0100               	movlb	0	; () banked
  7235  000406  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7236  000408  0100               	movlb	0	; () banked
  7237  00040A  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7238  00040C  0D01               	mullw	1
  7239  00040E  50F3               	movf	prodl,w,c
  7240  000410  0100               	movlb	0	; () banked
  7241  000412  25D4               	addwf	_ic_ptr& (0+255),w,b
  7242  000414  6ED9               	movwf	fsr2l,c
  7243  000416  50F4               	movf	prodh,w,c
  7244  000418  0100               	movlb	0	; () banked
  7245  00041A  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7246  00041C  6EDA               	movwf	fsr2h,c
  7247  00041E  0100               	movlb	0	; () banked
  7248  000420  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;my_i2c.c: 235: ic_ptr->buflen++;
  7252  000424  0100               	movlb	0	; () banked
  7253  000426  EE20 F00E          	lfsr	2,14
  7254  00042A  0100               	movlb	0	; () banked
  7255  00042C  51D4               	movf	_ic_ptr& (0+255),w,b
  7256  00042E  26D9               	addwf	fsr2l,f,c
  7257  000430  0100               	movlb	0	; () banked
  7258  000432  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7259  000434  22DA               	addwfc	fsr2h,f,c
  7260  000436  2ADF               	incf	indf2,f,c
  7261                           
  7262                           ;my_i2c.c: 236: }
  7263  000438  D0E4               	goto	i2l304
  7264  00043A                     i2l333:
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;my_i2c.c: 237: else
  7268                           ;my_i2c.c: 238: {
  7269                           ;my_i2c.c: 239: if (SSPSTATbits.R_W == 1)
  7270  00043A  A4C7               	btfss	4039,2,c	;volatile
  7271  00043C  D6B4               	goto	i2l2701
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;my_i2c.c: 240: {
  7275                           ;my_i2c.c: 241: blip();
  7276  00043E  EC81  F00E         	call	i2_blip	;wreg free
  7277                           
  7278                           ;my_i2c.c: 242: ic_ptr->status = 0x8;
  7279  000442  0100               	movlb	0	; () banked
  7280  000444  EE20 F021          	lfsr	2,33
  7281  000448  0100               	movlb	0	; () banked
  7282  00044A  51D4               	movf	_ic_ptr& (0+255),w,b
  7283  00044C  26D9               	addwf	fsr2l,f,c
  7284  00044E  0100               	movlb	0	; () banked
  7285  000450  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7286  000452  22DA               	addwfc	fsr2h,f,c
  7287  000454  0E08               	movlw	8
  7288  000456  6EDF               	movwf	indf2,c
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;my_i2c.c: 249: {
  7292                           ;my_i2c.c: 251: ic_ptr->outbuffer[0] = ic_ptr->buffer[0];
  7293                           
  7294                           ; BSR set to: 0
  7295                           
  7296                           ;my_i2c.c: 245: {
  7297                           ;my_i2c.c: 246: int l;
  7298                           ;my_i2c.c: 248: default:
  7299                           
  7300                           ;my_i2c.c: 244: switch( ic_ptr->buffer[0] )
  7301  000458  C0D4  FFD9         	movff	_ic_ptr,fsr2l
  7302  00045C  C0D5  FFDA         	movff	_ic_ptr+1,fsr2h
  7303  000460  0100               	movlb	0	; () banked
  7304  000462  EE10 F010          	lfsr	1,16
  7305  000466  0100               	movlb	0	; () banked
  7306  000468  51D4               	movf	_ic_ptr& (0+255),w,b
  7307  00046A  26E1               	addwf	fsr1l,f,c
  7308  00046C  0100               	movlb	0	; () banked
  7309  00046E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7310  000470  22E2               	addwfc	fsr1h,f,c
  7311  000472  CFDF FFE7          	movff	indf2,indf1
  7312                           
  7313                           ;my_i2c.c: 252: ic_ptr->outbuffer[1] = ic_ptr->buffer[1];
  7314  000476  0100               	movlb	0	; () banked
  7315  000478  EE20 F001          	lfsr	2,1
  7316  00047C  0100               	movlb	0	; () banked
  7317  00047E  51D4               	movf	_ic_ptr& (0+255),w,b
  7318  000480  26D9               	addwf	fsr2l,f,c
  7319  000482  0100               	movlb	0	; () banked
  7320  000484  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7321  000486  22DA               	addwfc	fsr2h,f,c
  7322  000488  0100               	movlb	0	; () banked
  7323  00048A  EE10 F011          	lfsr	1,17
  7324  00048E  0100               	movlb	0	; () banked
  7325  000490  51D4               	movf	_ic_ptr& (0+255),w,b
  7326  000492  26E1               	addwf	fsr1l,f,c
  7327  000494  0100               	movlb	0	; () banked
  7328  000496  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7329  000498  22E2               	addwfc	fsr1h,f,c
  7330  00049A  CFDF FFE7          	movff	indf2,indf1
  7331                           
  7332                           ;my_i2c.c: 253: ic_ptr->outbuffer[2] = ic_ptr->buffer[2];
  7333  00049E  0100               	movlb	0	; () banked
  7334  0004A0  EE20 F002          	lfsr	2,2
  7335  0004A4  0100               	movlb	0	; () banked
  7336  0004A6  51D4               	movf	_ic_ptr& (0+255),w,b
  7337  0004A8  26D9               	addwf	fsr2l,f,c
  7338  0004AA  0100               	movlb	0	; () banked
  7339  0004AC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7340  0004AE  22DA               	addwfc	fsr2h,f,c
  7341  0004B0  0100               	movlb	0	; () banked
  7342  0004B2  EE10 F012          	lfsr	1,18
  7343  0004B6  0100               	movlb	0	; () banked
  7344  0004B8  51D4               	movf	_ic_ptr& (0+255),w,b
  7345  0004BA  26E1               	addwf	fsr1l,f,c
  7346  0004BC  0100               	movlb	0	; () banked
  7347  0004BE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7348  0004C0  22E2               	addwfc	fsr1h,f,c
  7349  0004C2  CFDF FFE7          	movff	indf2,indf1
  7350                           
  7351                           ;my_i2c.c: 254: ic_ptr->outbuffer[3] = ic_ptr->buffer[3];
  7352  0004C6  0100               	movlb	0	; () banked
  7353  0004C8  EE20 F003          	lfsr	2,3
  7354  0004CC  0100               	movlb	0	; () banked
  7355  0004CE  51D4               	movf	_ic_ptr& (0+255),w,b
  7356  0004D0  26D9               	addwf	fsr2l,f,c
  7357  0004D2  0100               	movlb	0	; () banked
  7358  0004D4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7359  0004D6  22DA               	addwfc	fsr2h,f,c
  7360  0004D8  0100               	movlb	0	; () banked
  7361  0004DA  EE10 F013          	lfsr	1,19
  7362  0004DE  0100               	movlb	0	; () banked
  7363  0004E0  51D4               	movf	_ic_ptr& (0+255),w,b
  7364  0004E2  26E1               	addwf	fsr1l,f,c
  7365  0004E4  0100               	movlb	0	; () banked
  7366  0004E6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7367  0004E8  22E2               	addwfc	fsr1h,f,c
  7368  0004EA  CFDF FFE7          	movff	indf2,indf1
  7369                           
  7370                           ;my_i2c.c: 255: ic_ptr->outbuffer[4] = ic_ptr->buffer[4];
  7371  0004EE  0100               	movlb	0	; () banked
  7372  0004F0  EE20 F004          	lfsr	2,4
  7373  0004F4  0100               	movlb	0	; () banked
  7374  0004F6  51D4               	movf	_ic_ptr& (0+255),w,b
  7375  0004F8  26D9               	addwf	fsr2l,f,c
  7376  0004FA  0100               	movlb	0	; () banked
  7377  0004FC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7378  0004FE  22DA               	addwfc	fsr2h,f,c
  7379  000500  0100               	movlb	0	; () banked
  7380  000502  EE10 F014          	lfsr	1,20
  7381  000506  0100               	movlb	0	; () banked
  7382  000508  51D4               	movf	_ic_ptr& (0+255),w,b
  7383  00050A  26E1               	addwf	fsr1l,f,c
  7384  00050C  0100               	movlb	0	; () banked
  7385  00050E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7386  000510  22E2               	addwfc	fsr1h,f,c
  7387  000512  CFDF FFE7          	movff	indf2,indf1
  7388                           
  7389                           ;my_i2c.c: 256: ic_ptr->outbuffer[5] = ic_ptr->buffer[5];
  7390  000516  0100               	movlb	0	; () banked
  7391  000518  EE20 F005          	lfsr	2,5
  7392  00051C  0100               	movlb	0	; () banked
  7393  00051E  51D4               	movf	_ic_ptr& (0+255),w,b
  7394  000520  26D9               	addwf	fsr2l,f,c
  7395  000522  0100               	movlb	0	; () banked
  7396  000524  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7397  000526  22DA               	addwfc	fsr2h,f,c
  7398  000528  0100               	movlb	0	; () banked
  7399  00052A  EE10 F015          	lfsr	1,21
  7400  00052E  0100               	movlb	0	; () banked
  7401  000530  51D4               	movf	_ic_ptr& (0+255),w,b
  7402  000532  26E1               	addwf	fsr1l,f,c
  7403  000534  0100               	movlb	0	; () banked
  7404  000536  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7405  000538  22E2               	addwfc	fsr1h,f,c
  7406  00053A  CFDF FFE7          	movff	indf2,indf1
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;my_i2c.c: 261: ic_ptr->outbuflen = 6;
  7410                           
  7411                           ; BSR set to: 0
  7412                           
  7413                           ; BSR set to: 0
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;my_i2c.c: 258: }
  7417                           ;my_i2c.c: 259: }
  7418                           
  7419                           ;my_i2c.c: 257: break;
  7420  00053E  0100               	movlb	0	; () banked
  7421  000540  EE20 F01F          	lfsr	2,31
  7422  000544  0100               	movlb	0	; () banked
  7423  000546  51D4               	movf	_ic_ptr& (0+255),w,b
  7424  000548  26D9               	addwf	fsr2l,f,c
  7425  00054A  0100               	movlb	0	; () banked
  7426  00054C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7427  00054E  22DA               	addwfc	fsr2h,f,c
  7428  000550  0E06               	movlw	6
  7429  000552  6EDF               	movwf	indf2,c
  7430                           
  7431                           ;my_i2c.c: 262: ic_ptr->outbufind = 0;
  7432  000554  0100               	movlb	0	; () banked
  7433  000556  EE20 F01E          	lfsr	2,30
  7434  00055A  0100               	movlb	0	; () banked
  7435  00055C  51D4               	movf	_ic_ptr& (0+255),w,b
  7436  00055E  26D9               	addwf	fsr2l,f,c
  7437  000560  0100               	movlb	0	; () banked
  7438  000562  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7439  000564  22DA               	addwfc	fsr2h,f,c
  7440  000566  0E00               	movlw	0
  7441  000568  6EDF               	movwf	indf2,c
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;my_i2c.c: 263: msg_ready = 1;
  7445  00056A  0E01               	movlw	1
  7446  00056C  0100               	movlb	0	; () banked
  7447  00056E  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;my_i2c.c: 264: msg_to_send = 1;
  7451  000570  0E01               	movlw	1
  7452  000572  0100               	movlb	0	; () banked
  7453  000574  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;my_i2c.c: 266: data_read = 0;
  7457  000576  0E00               	movlw	0
  7458  000578  0100               	movlb	0	; () banked
  7459  00057A  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;my_i2c.c: 267: ic_ptr->outbufind = 0;
  7463  00057C  0100               	movlb	0	; () banked
  7464  00057E  EE20 F01E          	lfsr	2,30
  7465  000582  0100               	movlb	0	; () banked
  7466  000584  51D4               	movf	_ic_ptr& (0+255),w,b
  7467  000586  26D9               	addwf	fsr2l,f,c
  7468  000588  0100               	movlb	0	; () banked
  7469  00058A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7470  00058C  22DA               	addwfc	fsr2h,f,c
  7471  00058E  0E00               	movlw	0
  7472  000590  6EDF               	movwf	indf2,c
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;my_i2c.c: 268: SSPBUF = ic_ptr->outbuffer[0];
  7476  000592  0100               	movlb	0	; () banked
  7477  000594  EE20 F010          	lfsr	2,16
  7478  000598  0100               	movlb	0	; () banked
  7479  00059A  51D4               	movf	_ic_ptr& (0+255),w,b
  7480  00059C  26D9               	addwf	fsr2l,f,c
  7481  00059E  0100               	movlb	0	; () banked
  7482  0005A0  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7483  0005A2  22DA               	addwfc	fsr2h,f,c
  7484  0005A4  50DF               	movf	indf2,w,c
  7485  0005A6  6EC9               	movwf	4041,c	;volatile
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;my_i2c.c: 269: ic_ptr->outbufind++;
  7489  0005A8  0100               	movlb	0	; () banked
  7490  0005AA  EE20 F01E          	lfsr	2,30
  7491  0005AE  0100               	movlb	0	; () banked
  7492  0005B0  51D4               	movf	_ic_ptr& (0+255),w,b
  7493  0005B2  26D9               	addwf	fsr2l,f,c
  7494  0005B4  0100               	movlb	0	; () banked
  7495  0005B6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7496  0005B8  22DA               	addwfc	fsr2h,f,c
  7497  0005BA  2ADF               	incf	indf2,f,c
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;my_i2c.c: 270: SSPCON1bits.CKP = 1;
  7501  0005BC  88C6               	bsf	4038,4,c	;volatile
  7502                           
  7503                           ;my_i2c.c: 271: }
  7504  0005BE  D021               	goto	i2l304
  7505  0005C0                     L10:
  7506                           
  7507                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  7508  0005C0  0100               	movlb	0	; () banked
  7509  0005C2  EE20 F021          	lfsr	2,33
  7510  0005C6  0100               	movlb	0	; () banked
  7511  0005C8  51D4               	movf	_ic_ptr& (0+255),w,b
  7512  0005CA  26D9               	addwf	fsr2l,f,c
  7513  0005CC  0100               	movlb	0	; () banked
  7514  0005CE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7515  0005D0  22DA               	addwfc	fsr2h,f,c
  7516  0005D2  0E05               	movlw	5
  7517  0005D4  D69D               	goto	L8
  7518  0005D6                     i2l2801:
  7519                           
  7520                           ; BSR set to: 0
  7521  0005D6  0100               	movlb	0	; () banked
  7522  0005D8  EE20 F021          	lfsr	2,33
  7523  0005DC  0100               	movlb	0	; () banked
  7524  0005DE  51D4               	movf	_ic_ptr& (0+255),w,b
  7525  0005E0  26D9               	addwf	fsr2l,f,c
  7526  0005E2  0100               	movlb	0	; () banked
  7527  0005E4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7528  0005E6  22DA               	addwfc	fsr2h,f,c
  7529  0005E8  50DF               	movf	indf2,w,c
  7530                           
  7531                           ; Switch size 1, requested type "space"
  7532                           ; Number of cases is 4, Range of values is 5 to 8
  7533                           ; switch strategies available:
  7534                           ; Name         Instructions Cycles
  7535                           ; simple_byte           13     7 (average)
  7536                           ;	Chosen strategy is simple_byte
  7537  0005EA  0A05               	xorlw	5	; case 5
  7538  0005EC  B4D8               	btfsc	status,2,c
  7539  0005EE  D5AC               	goto	i2l306
  7540  0005F0  0A03               	xorlw	3	; case 6
  7541  0005F2  B4D8               	btfsc	status,2,c
  7542  0005F4  D5C2               	goto	i2l310
  7543  0005F6  0A01               	xorlw	1	; case 7
  7544  0005F8  B4D8               	btfsc	status,2,c
  7545  0005FA  D68C               	goto	i2l2741
  7546  0005FC  0A0F               	xorlw	15	; case 8
  7547  0005FE  B4D8               	btfsc	status,2,c
  7548  000600  D644               	goto	i2l2725
  7549  000602                     i2l304:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;my_i2c.c: 283: }
  7553                           ;my_i2c.c: 286: if (data_read || data_written) {
  7554  000602  0100               	movlb	0	; () banked
  7555  000604  678E               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7556  000606  D004               	goto	i2l342
  7557                           
  7558                           ; BSR set to: 0
  7559  000608  0100               	movlb	0	; () banked
  7560  00060A  5189               	movf	i2c_int_handler@data_written& (0+255),w,b
  7561  00060C  B4D8               	btfsc	status,2,c
  7562  00060E  D002               	goto	i2l2807
  7563  000610                     i2l342:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;my_i2c.c: 288: if (SSPCON1bits.CKP == 0) {
  7567  000610  A8C6               	btfss	4038,4,c	;volatile
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;my_i2c.c: 289: SSPCON1bits.CKP = 1;
  7571  000612  88C6               	bsf	4038,4,c	;volatile
  7572  000614                     i2l2807:
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;my_i2c.c: 290: }
  7576                           ;my_i2c.c: 291: }
  7577                           ;my_i2c.c: 296: if ((ic_ptr->buflen > 14 - 2) && (!msg_ready)) {
  7578  000614  0100               	movlb	0	; () banked
  7579  000616  EE20 F00E          	lfsr	2,14
  7580  00061A  0100               	movlb	0	; () banked
  7581  00061C  51D4               	movf	_ic_ptr& (0+255),w,b
  7582  00061E  26D9               	addwf	fsr2l,f,c
  7583  000620  0100               	movlb	0	; () banked
  7584  000622  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7585  000624  22DA               	addwfc	fsr2h,f,c
  7586  000626  0E0C               	movlw	12
  7587  000628  64DF               	cpfsgt	indf2,c
  7588  00062A  D023               	goto	i2l2813
  7589                           
  7590                           ; BSR set to: 0
  7591  00062C  0100               	movlb	0	; () banked
  7592  00062E  678D               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7593  000630  D020               	goto	i2l2813
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;my_i2c.c: 297: ic_ptr->status = 0x5;
  7597  000632  0100               	movlb	0	; () banked
  7598  000634  EE20 F021          	lfsr	2,33
  7599  000638  0100               	movlb	0	; () banked
  7600  00063A  51D4               	movf	_ic_ptr& (0+255),w,b
  7601  00063C  26D9               	addwf	fsr2l,f,c
  7602  00063E  0100               	movlb	0	; () banked
  7603  000640  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7604  000642  22DA               	addwfc	fsr2h,f,c
  7605  000644  0E05               	movlw	5
  7606  000646  6EDF               	movwf	indf2,c
  7607                           
  7608                           ;my_i2c.c: 298: ic_ptr->error_count++;
  7609  000648  0100               	movlb	0	; () banked
  7610  00064A  EE20 F023          	lfsr	2,35
  7611  00064E  0100               	movlb	0	; () banked
  7612  000650  51D4               	movf	_ic_ptr& (0+255),w,b
  7613  000652  26D9               	addwf	fsr2l,f,c
  7614  000654  0100               	movlb	0	; () banked
  7615  000656  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7616  000658  22DA               	addwfc	fsr2h,f,c
  7617  00065A  2ADF               	incf	indf2,f,c
  7618                           
  7619                           ;my_i2c.c: 299: ic_ptr->error_code = 0x7;
  7620  00065C  0100               	movlb	0	; () banked
  7621  00065E  EE20 F022          	lfsr	2,34
  7622  000662  0100               	movlb	0	; () banked
  7623  000664  51D4               	movf	_ic_ptr& (0+255),w,b
  7624  000666  26D9               	addwf	fsr2l,f,c
  7625  000668  0100               	movlb	0	; () banked
  7626  00066A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7627  00066C  22DA               	addwfc	fsr2h,f,c
  7628  00066E  0E07               	movlw	7
  7629  000670  6EDF               	movwf	indf2,c
  7630  000672                     i2l2813:
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;my_i2c.c: 300: }
  7634                           ;my_i2c.c: 302: if (msg_ready) {
  7635  000672  0100               	movlb	0	; () banked
  7636  000674  518D               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7637  000676  B4D8               	btfsc	status,2,c
  7638  000678  D03F               	goto	i2l2821
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;my_i2c.c: 303: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7642  00067A  0100               	movlb	0	; () banked
  7643  00067C  EE20 F020          	lfsr	2,32
  7644  000680  0100               	movlb	0	; () banked
  7645  000682  51D4               	movf	_ic_ptr& (0+255),w,b
  7646  000684  26D9               	addwf	fsr2l,f,c
  7647  000686  0100               	movlb	0	; () banked
  7648  000688  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7649  00068A  22DA               	addwfc	fsr2h,f,c
  7650  00068C  0100               	movlb	0	; () banked
  7651  00068E  EE10 F00E          	lfsr	1,14
  7652  000692  0100               	movlb	0	; () banked
  7653  000694  51D4               	movf	_ic_ptr& (0+255),w,b
  7654  000696  26E1               	addwf	fsr1l,f,c
  7655  000698  0100               	movlb	0	; () banked
  7656  00069A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7657  00069C  22E2               	addwfc	fsr1h,f,c
  7658  00069E  50E7               	movf	indf1,w,c
  7659  0006A0  0100               	movlb	0	; () banked
  7660  0006A2  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7661  0006A4  0100               	movlb	0	; () banked
  7662  0006A6  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7663  0006A8  0D01               	mullw	1
  7664  0006AA  50F3               	movf	prodl,w,c
  7665  0006AC  0100               	movlb	0	; () banked
  7666  0006AE  25D4               	addwf	_ic_ptr& (0+255),w,b
  7667  0006B0  6EE1               	movwf	fsr1l,c
  7668  0006B2  50F4               	movf	prodh,w,c
  7669  0006B4  0100               	movlb	0	; () banked
  7670  0006B6  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7671  0006B8  6EE2               	movwf	fsr1h,c
  7672  0006BA  CFDF FFE7          	movff	indf2,indf1
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;my_i2c.c: 304: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7676  0006BE  0E28               	movlw	40
  7677  0006C0  0100               	movlb	0	; () banked
  7678  0006C2  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7679  0006C4  0100               	movlb	0	; () banked
  7680  0006C6  C0D5  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7681  0006CA  0100               	movlb	0	; () banked
  7682  0006CC  C0D4  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7683  0006D0  0100               	movlb	0	; () banked
  7684  0006D2  EE20 F00E          	lfsr	2,14
  7685  0006D6  0100               	movlb	0	; () banked
  7686  0006D8  51D4               	movf	_ic_ptr& (0+255),w,b
  7687  0006DA  26D9               	addwf	fsr2l,f,c
  7688  0006DC  0100               	movlb	0	; () banked
  7689  0006DE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7690  0006E0  22DA               	addwfc	fsr2h,f,c
  7691  0006E2  50DF               	movf	indf2,w,c
  7692  0006E4  0100               	movlb	0	; () banked
  7693  0006E6  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7694  0006E8  0100               	movlb	0	; () banked
  7695  0006EA  2985               	incf	??_i2c_int_handler& (0+255),w,b
  7696  0006EC  ECA3  F00D         	call	_ToMainHigh_sendmsg
  7697                           
  7698                           ;my_i2c.c: 305: ic_ptr->buflen = 0;
  7699  0006F0  0100               	movlb	0	; () banked
  7700  0006F2  EE20 F00E          	lfsr	2,14
  7701  0006F6  D041               	goto	L9
  7702  0006F8                     i2l2821:
  7703                           
  7704                           ; BSR set to: 0
  7705  0006F8  0100               	movlb	0	; () banked
  7706  0006FA  EE20 F023          	lfsr	2,35
  7707  0006FE  0100               	movlb	0	; () banked
  7708  000700  51D4               	movf	_ic_ptr& (0+255),w,b
  7709  000702  26D9               	addwf	fsr2l,f,c
  7710  000704  0100               	movlb	0	; () banked
  7711  000706  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7712  000708  22DA               	addwfc	fsr2h,f,c
  7713  00070A  50DF               	movf	indf2,w,c
  7714  00070C  B4D8               	btfsc	status,2,c
  7715  00070E  D03D               	goto	i2l2829
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;my_i2c.c: 307: error_buf[0] = ic_ptr->error_count;
  7719  000710  0100               	movlb	0	; () banked
  7720  000712  EE20 F023          	lfsr	2,35
  7721  000716  0100               	movlb	0	; () banked
  7722  000718  51D4               	movf	_ic_ptr& (0+255),w,b
  7723  00071A  26D9               	addwf	fsr2l,f,c
  7724  00071C  0100               	movlb	0	; () banked
  7725  00071E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7726  000720  22DA               	addwfc	fsr2h,f,c
  7727  000722  50DF               	movf	indf2,w,c
  7728  000724  0100               	movlb	0	; () banked
  7729  000726  6F86               	movwf	i2c_int_handler@error_buf& (0+255),b
  7730                           
  7731                           ;my_i2c.c: 308: error_buf[1] = ic_ptr->error_code;
  7732  000728  0100               	movlb	0	; () banked
  7733  00072A  EE20 F022          	lfsr	2,34
  7734  00072E  0100               	movlb	0	; () banked
  7735  000730  51D4               	movf	_ic_ptr& (0+255),w,b
  7736  000732  26D9               	addwf	fsr2l,f,c
  7737  000734  0100               	movlb	0	; () banked
  7738  000736  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7739  000738  22DA               	addwfc	fsr2h,f,c
  7740  00073A  50DF               	movf	indf2,w,c
  7741  00073C  0100               	movlb	0	; () banked
  7742  00073E  6F87               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7743                           
  7744                           ;my_i2c.c: 309: error_buf[2] = ic_ptr->event_count;
  7745  000740  0100               	movlb	0	; () banked
  7746  000742  EE20 F020          	lfsr	2,32
  7747  000746  0100               	movlb	0	; () banked
  7748  000748  51D4               	movf	_ic_ptr& (0+255),w,b
  7749  00074A  26D9               	addwf	fsr2l,f,c
  7750  00074C  0100               	movlb	0	; () banked
  7751  00074E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7752  000750  22DA               	addwfc	fsr2h,f,c
  7753  000752  50DF               	movf	indf2,w,c
  7754  000754  0100               	movlb	0	; () banked
  7755  000756  6F88               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;my_i2c.c: 310: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7759  000758  0E29               	movlw	41
  7760  00075A  0100               	movlb	0	; () banked
  7761  00075C  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7762  00075E  0100               	movlb	0	; () banked
  7763  000760  0E00               	movlw	high i2c_int_handler@error_buf
  7764  000762  0100               	movlb	0	; () banked
  7765  000764  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7766  000766  0100               	movlb	0	; () banked
  7767  000768  0E86               	movlw	low i2c_int_handler@error_buf
  7768  00076A  0100               	movlb	0	; () banked
  7769  00076C  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7770  00076E  0E03               	movlw	3
  7771  000770  ECA3  F00D         	call	_ToMainHigh_sendmsg
  7772                           
  7773                           ;my_i2c.c: 311: ic_ptr->error_count = 0;
  7774  000774  0100               	movlb	0	; () banked
  7775  000776  EE20 F023          	lfsr	2,35
  7776  00077A                     L9:
  7777  00077A  0100               	movlb	0	; () banked
  7778  00077C  51D4               	movf	_ic_ptr& (0+255),w,b
  7779  00077E  26D9               	addwf	fsr2l,f,c
  7780  000780  0100               	movlb	0	; () banked
  7781  000782  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7782  000784  22DA               	addwfc	fsr2h,f,c
  7783  000786  0E00               	movlw	0
  7784  000788  6EDF               	movwf	indf2,c
  7785  00078A                     i2l2829:
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;my_i2c.c: 312: }
  7789                           ;my_i2c.c: 313: if (msg_to_send) {
  7790  00078A  0100               	movlb	0	; () banked
  7791  00078C  518C               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7792  00078E  B4D8               	btfsc	status,2,c
  7793  000790  D00F               	goto	i2l2835
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;my_i2c.c: 315: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7797  000792  0E2A               	movlw	42
  7798  000794  0100               	movlb	0	; () banked
  7799  000796  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7800  000798  0100               	movlb	0	; () banked
  7801  00079A  C0D5  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7802  00079E  0100               	movlb	0	; () banked
  7803  0007A0  C0D4  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7804  0007A4  0E00               	movlw	0
  7805  0007A6  ECA3  F00D         	call	_ToMainHigh_sendmsg
  7806                           
  7807                           ;my_i2c.c: 316: msg_to_send = 0;
  7808  0007AA  0E00               	movlw	0
  7809  0007AC  0100               	movlb	0	; () banked
  7810  0007AE  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7811  0007B0                     i2l2835:
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;my_i2c.c: 317: }
  7815                           ;my_i2c.c: 319: retrieve_sensor_values( sensor_bank_side , sensor_bank_front , sensor_ba
      +                          nk_ventril );
  7816  0007B0  0100               	movlb	0	; () banked
  7817  0007B2  0E00               	movlw	high i2c_int_handler@sensor_bank_side
  7818  0007B4  0100               	movlb	0	; () banked
  7819  0007B6  6F7E               	movwf	(retrieve_sensor_values@sensor_bank_side+1)& (0+255),b
  7820  0007B8  0100               	movlb	0	; () banked
  7821  0007BA  0EC6               	movlw	low i2c_int_handler@sensor_bank_side
  7822  0007BC  0100               	movlb	0	; () banked
  7823  0007BE  6F7D               	movwf	retrieve_sensor_values@sensor_bank_side& (0+255),b
  7824  0007C0  0E00               	movlw	high i2c_int_handler@sensor_bank_front
  7825  0007C2  0100               	movlb	0	; () banked
  7826  0007C4  6F80               	movwf	(retrieve_sensor_values@sensor_bank_front+1)& (0+255),b
  7827  0007C6  0E51               	movlw	low i2c_int_handler@sensor_bank_front
  7828  0007C8  0100               	movlb	0	; () banked
  7829  0007CA  6F7F               	movwf	retrieve_sensor_values@sensor_bank_front& (0+255),b
  7830  0007CC  0101               	movlb	1	; () banked
  7831  0007CE  0E01               	movlw	high i2c_int_handler@sensor_bank_ventril
  7832  0007D0  0100               	movlb	0	; () banked
  7833  0007D2  6F82               	movwf	(retrieve_sensor_values@sensor_bank_ventril+1)& (0+255),b
  7834  0007D4  0101               	movlb	1	; () banked
  7835  0007D6  0E92               	movlw	low i2c_int_handler@sensor_bank_ventril
  7836  0007D8  0100               	movlb	0	; () banked
  7837  0007DA  6F81               	movwf	retrieve_sensor_values@sensor_bank_ventril& (0+255),b
  7838  0007DC  ECD2  F00C         	call	_retrieve_sensor_values	;wreg free
  7839  0007E0  0012               	return	
  7840  0007E2                     __end_of_i2c_int_handler:
  7841                           	opt stack 0
  7842                           pclatu	equ	0xFFB
  7843                           pclath	equ	0xFFA
  7844                           tblptru	equ	0xFF8
  7845                           tblptrh	equ	0xFF7
  7846                           tblptrl	equ	0xFF6
  7847                           tablat	equ	0xFF5
  7848                           prodh	equ	0xFF4
  7849                           prodl	equ	0xFF3
  7850                           intcon	equ	0xFF2
  7851                           postinc0	equ	0xFEE
  7852                           fsr0h	equ	0xFEA
  7853                           fsr0l	equ	0xFE9
  7854                           wreg	equ	0xFE8
  7855                           indf1	equ	0xFE7
  7856                           fsr1h	equ	0xFE2
  7857                           fsr1l	equ	0xFE1
  7858                           bsr	equ	0xFE0
  7859                           indf2	equ	0xFDF
  7860                           postinc2	equ	0xFDE
  7861                           postdec2	equ	0xFDD
  7862                           fsr2h	equ	0xFDA
  7863                           fsr2l	equ	0xFD9
  7864                           status	equ	0xFD8
  7865                           
  7866 ;; *************** function i2_blip3 *****************
  7867 ;; Defined at:
  7868 ;;		line 32 in file "../src/debug.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;		None
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;		None
  7873 ;; Return value:  Size  Location     Type
  7874 ;;		None               void
  7875 ;; Registers used:
  7876 ;;		None
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7886 ;;Total ram usage:        0 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; This function calls:
  7889 ;;		Nothing
  7890 ;; This function is called by:
  7891 ;;		_i2c_int_handler
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text43
  7896  001CEA                     __ptext43:
  7897                           	opt stack 0
  7898  001CEA                     i2_blip3:
  7899                           	opt stack 17
  7900                           
  7901                           ;debug.c: 34: LATDbits.LD6 = 0;
  7902                           
  7903                           ;incstack = 0
  7904  001CEA  9C8C               	bcf	3980,6,c	;volatile
  7905                           
  7906                           ;debug.c: 35: LATDbits.LD6 = 1;
  7907  001CEC  8C8C               	bsf	3980,6,c	;volatile
  7908                           
  7909                           ;debug.c: 36: LATDbits.LD6 = 0;
  7910  001CEE  9C8C               	bcf	3980,6,c	;volatile
  7911  001CF0  0012               	return	
  7912  001CF2                     __end_ofi2_blip3:
  7913                           	opt stack 0
  7914                           pclatu	equ	0xFFB
  7915                           pclath	equ	0xFFA
  7916                           tblptru	equ	0xFF8
  7917                           tblptrh	equ	0xFF7
  7918                           tblptrl	equ	0xFF6
  7919                           tablat	equ	0xFF5
  7920                           prodh	equ	0xFF4
  7921                           prodl	equ	0xFF3
  7922                           intcon	equ	0xFF2
  7923                           postinc0	equ	0xFEE
  7924                           fsr0h	equ	0xFEA
  7925                           fsr0l	equ	0xFE9
  7926                           wreg	equ	0xFE8
  7927                           indf1	equ	0xFE7
  7928                           fsr1h	equ	0xFE2
  7929                           fsr1l	equ	0xFE1
  7930                           bsr	equ	0xFE0
  7931                           indf2	equ	0xFDF
  7932                           postinc2	equ	0xFDE
  7933                           postdec2	equ	0xFDD
  7934                           fsr2h	equ	0xFDA
  7935                           fsr2l	equ	0xFD9
  7936                           status	equ	0xFD8
  7937                           
  7938 ;; *************** function i2_blip2 *****************
  7939 ;; Defined at:
  7940 ;;		line 25 in file "../src/debug.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;		None
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;		None               void
  7947 ;; Registers used:
  7948 ;;		None
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7958 ;;Total ram usage:        0 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_i2c_int_handler
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           	psect	text44
  7968  001CF2                     __ptext44:
  7969                           	opt stack 0
  7970  001CF2                     i2_blip2:
  7971                           	opt stack 17
  7972                           
  7973                           ;debug.c: 27: LATDbits.LD5 = 0;
  7974                           
  7975                           ;incstack = 0
  7976  001CF2  9A8C               	bcf	3980,5,c	;volatile
  7977                           
  7978                           ;debug.c: 28: LATDbits.LD5 = 1;
  7979  001CF4  8A8C               	bsf	3980,5,c	;volatile
  7980                           
  7981                           ;debug.c: 29: LATDbits.LD5 = 0;
  7982  001CF6  9A8C               	bcf	3980,5,c	;volatile
  7983  001CF8  0012               	return	
  7984  001CFA                     __end_ofi2_blip2:
  7985                           	opt stack 0
  7986                           pclatu	equ	0xFFB
  7987                           pclath	equ	0xFFA
  7988                           tblptru	equ	0xFF8
  7989                           tblptrh	equ	0xFF7
  7990                           tblptrl	equ	0xFF6
  7991                           tablat	equ	0xFF5
  7992                           prodh	equ	0xFF4
  7993                           prodl	equ	0xFF3
  7994                           intcon	equ	0xFF2
  7995                           postinc0	equ	0xFEE
  7996                           fsr0h	equ	0xFEA
  7997                           fsr0l	equ	0xFE9
  7998                           wreg	equ	0xFE8
  7999                           indf1	equ	0xFE7
  8000                           fsr1h	equ	0xFE2
  8001                           fsr1l	equ	0xFE1
  8002                           bsr	equ	0xFE0
  8003                           indf2	equ	0xFDF
  8004                           postinc2	equ	0xFDE
  8005                           postdec2	equ	0xFDD
  8006                           fsr2h	equ	0xFDA
  8007                           fsr2l	equ	0xFD9
  8008                           status	equ	0xFD8
  8009                           
  8010 ;; *************** function i2_blip1 *****************
  8011 ;; Defined at:
  8012 ;;		line 18 in file "../src/debug.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;		None
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;		None               void
  8019 ;; Registers used:
  8020 ;;		None
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8030 ;;Total ram usage:        0 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_i2c_int_handler
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           	psect	text45
  8040  001CFA                     __ptext45:
  8041                           	opt stack 0
  8042  001CFA                     i2_blip1:
  8043                           	opt stack 17
  8044                           
  8045                           ;debug.c: 20: LATDbits.LD4 = 0;
  8046                           
  8047                           ;incstack = 0
  8048  001CFA  988C               	bcf	3980,4,c	;volatile
  8049                           
  8050                           ;debug.c: 21: LATDbits.LD4 = 1;
  8051  001CFC  888C               	bsf	3980,4,c	;volatile
  8052                           
  8053                           ;debug.c: 22: LATDbits.LD4 = 0;
  8054  001CFE  988C               	bcf	3980,4,c	;volatile
  8055  001D00  0012               	return	
  8056  001D02                     __end_ofi2_blip1:
  8057                           	opt stack 0
  8058                           pclatu	equ	0xFFB
  8059                           pclath	equ	0xFFA
  8060                           tblptru	equ	0xFF8
  8061                           tblptrh	equ	0xFF7
  8062                           tblptrl	equ	0xFF6
  8063                           tablat	equ	0xFF5
  8064                           prodh	equ	0xFF4
  8065                           prodl	equ	0xFF3
  8066                           intcon	equ	0xFF2
  8067                           postinc0	equ	0xFEE
  8068                           fsr0h	equ	0xFEA
  8069                           fsr0l	equ	0xFE9
  8070                           wreg	equ	0xFE8
  8071                           indf1	equ	0xFE7
  8072                           fsr1h	equ	0xFE2
  8073                           fsr1l	equ	0xFE1
  8074                           bsr	equ	0xFE0
  8075                           indf2	equ	0xFDF
  8076                           postinc2	equ	0xFDE
  8077                           postdec2	equ	0xFDD
  8078                           fsr2h	equ	0xFDA
  8079                           fsr2l	equ	0xFD9
  8080                           status	equ	0xFD8
  8081                           
  8082 ;; *************** function i2_blip *****************
  8083 ;; Defined at:
  8084 ;;		line 11 in file "../src/debug.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;		None
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;		None               void
  8091 ;; Registers used:
  8092 ;;		None
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8102 ;;Total ram usage:        0 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_i2c_int_handler
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text46
  8112  001D02                     __ptext46:
  8113                           	opt stack 0
  8114  001D02                     i2_blip:
  8115                           	opt stack 17
  8116                           
  8117                           ;debug.c: 13: LATDbits.LD2 = 0;
  8118                           
  8119                           ;incstack = 0
  8120  001D02  948C               	bcf	3980,2,c	;volatile
  8121                           
  8122                           ;debug.c: 14: LATDbits.LD2 = 1;
  8123  001D04  848C               	bsf	3980,2,c	;volatile
  8124                           
  8125                           ;debug.c: 15: LATDbits.LD2 = 0;
  8126  001D06  948C               	bcf	3980,2,c	;volatile
  8127  001D08  0012               	return	
  8128  001D0A                     __end_ofi2_blip:
  8129                           	opt stack 0
  8130                           pclatu	equ	0xFFB
  8131                           pclath	equ	0xFFA
  8132                           tblptru	equ	0xFF8
  8133                           tblptrh	equ	0xFF7
  8134                           tblptrl	equ	0xFF6
  8135                           tablat	equ	0xFF5
  8136                           prodh	equ	0xFF4
  8137                           prodl	equ	0xFF3
  8138                           intcon	equ	0xFF2
  8139                           postinc0	equ	0xFEE
  8140                           fsr0h	equ	0xFEA
  8141                           fsr0l	equ	0xFE9
  8142                           wreg	equ	0xFE8
  8143                           indf1	equ	0xFE7
  8144                           fsr1h	equ	0xFE2
  8145                           fsr1l	equ	0xFE1
  8146                           bsr	equ	0xFE0
  8147                           indf2	equ	0xFDF
  8148                           postinc2	equ	0xFDE
  8149                           postdec2	equ	0xFDD
  8150                           fsr2h	equ	0xFDA
  8151                           fsr2l	equ	0xFD9
  8152                           status	equ	0xFD8
  8153                           
  8154 ;; *************** function _retrieve_sensor_values *****************
  8155 ;; Defined at:
  8156 ;;		line 394 in file "../src/my_i2c.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;  sensor_bank_    2   29[BANK0 ] PTR unsigned char 
  8159 ;;		 -> i2c_int_handler@sensor_bank_side(14), 
  8160 ;;  sensor_bank_    2   31[BANK0 ] PTR unsigned char 
  8161 ;;		 -> i2c_int_handler@sensor_bank_front(14), 
  8162 ;;  sensor_bank_    2   33[BANK0 ] PTR unsigned char 
  8163 ;;		 -> i2c_int_handler@sensor_bank_ventril(14), 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  i               2    0        int 
  8166 ;;  msgtype         1   36[BANK0 ] unsigned char 
  8167 ;;  length          1   35[BANK0 ] char 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;		None               void
  8170 ;; Registers used:
  8171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8177 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8180 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;Total ram usage:        8 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:    3
  8184 ;; This function calls:
  8185 ;;		_FromMainHigh_recvmsg
  8186 ;; This function is called by:
  8187 ;;		_i2c_int_handler
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text47
  8192  0019A4                     __ptext47:
  8193                           	opt stack 0
  8194  0019A4                     _retrieve_sensor_values:
  8195                           	opt stack 14
  8196                           
  8197                           ;my_i2c.c: 396: unsigned char msgtype = 40;
  8198                           
  8199                           ;incstack = 0
  8200  0019A4  0E28               	movlw	40
  8201  0019A6  0100               	movlb	0	; () banked
  8202  0019A8  6F84               	movwf	retrieve_sensor_values@msgtype& (0+255),b
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;my_i2c.c: 398: int i;
  8206                           ;my_i2c.c: 399: signed char length = FromMainHigh_recvmsg( 14 , &msgtype , (void *)senso
      +                          r_bank_side );
  8207  0019AA  0100               	movlb	0	; () banked
  8208  0019AC  0E00               	movlw	high retrieve_sensor_values@msgtype
  8209  0019AE  0100               	movlb	0	; () banked
  8210  0019B0  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  8211  0019B2  0100               	movlb	0	; () banked
  8212  0019B4  0E84               	movlw	low retrieve_sensor_values@msgtype
  8213  0019B6  0100               	movlb	0	; () banked
  8214  0019B8  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  8215  0019BA  0100               	movlb	0	; () banked
  8216  0019BC  C07E  F07B         	movff	retrieve_sensor_values@sensor_bank_side+1,FromMainHigh_recvmsg@data+1
  8217  0019C0  0100               	movlb	0	; () banked
  8218  0019C2  C07D  F07A         	movff	retrieve_sensor_values@sensor_bank_side,FromMainHigh_recvmsg@data
  8219  0019C6  0E0E               	movlw	14
  8220  0019C8  EC41  F00D         	call	_FromMainHigh_recvmsg
  8221  0019CC  0100               	movlb	0	; () banked
  8222  0019CE  6F83               	movwf	retrieve_sensor_values@length& (0+255),b
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;my_i2c.c: 407: }
  8226                           ;my_i2c.c: 411: *need_sensor_data = 1;
  8227                           
  8228                           ; BSR set to: 0
  8229                           
  8230                           ; BSR set to: 0
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;my_i2c.c: 403: }
  8234                           
  8235                           ; BSR set to: 0
  8236  0019D0  C0AF  FFD9         	movff	_need_sensor_data,fsr2l
  8237  0019D4  C0B0  FFDA         	movff	_need_sensor_data+1,fsr2h
  8238  0019D8  0E01               	movlw	1
  8239  0019DA  6EDF               	movwf	indf2,c
  8240                           
  8241                           ; BSR set to: 0
  8242  0019DC  0012               	return	
  8243  0019DE                     __end_of_retrieve_sensor_values:
  8244                           	opt stack 0
  8245                           pclatu	equ	0xFFB
  8246                           pclath	equ	0xFFA
  8247                           tblptru	equ	0xFF8
  8248                           tblptrh	equ	0xFF7
  8249                           tblptrl	equ	0xFF6
  8250                           tablat	equ	0xFF5
  8251                           prodh	equ	0xFF4
  8252                           prodl	equ	0xFF3
  8253                           intcon	equ	0xFF2
  8254                           postinc0	equ	0xFEE
  8255                           fsr0h	equ	0xFEA
  8256                           fsr0l	equ	0xFE9
  8257                           wreg	equ	0xFE8
  8258                           indf1	equ	0xFE7
  8259                           fsr1h	equ	0xFE2
  8260                           fsr1l	equ	0xFE1
  8261                           bsr	equ	0xFE0
  8262                           indf2	equ	0xFDF
  8263                           postinc2	equ	0xFDE
  8264                           postdec2	equ	0xFDD
  8265                           fsr2h	equ	0xFDA
  8266                           fsr2l	equ	0xFD9
  8267                           status	equ	0xFD8
  8268                           
  8269 ;; *************** function _FromMainHigh_recvmsg *****************
  8270 ;; Defined at:
  8271 ;;		line 183 in file "../src/messages.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  maxlength       1    wreg     unsigned char 
  8274 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8275 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), 
  8276 ;;  data            2   26[BANK0 ] PTR void 
  8277 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@sensor_bank_side(14), 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      char 
  8282 ;; Registers used:
  8283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8289 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;Total ram usage:        5 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    2
  8296 ;; This function calls:
  8297 ;;		i2_recv_msg
  8298 ;; This function is called by:
  8299 ;;		_retrieve_sensor_values
  8300 ;;		_timer0_int_handler
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text48
  8305  001A82                     __ptext48:
  8306                           	opt stack 0
  8307  001A82                     _FromMainHigh_recvmsg:
  8308                           	opt stack 15
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;incstack = 0
  8312                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8313  001A82  0100               	movlb	0	; () banked
  8314  001A84  6F7C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8318  001A86  0105               	movlb	5	; () banked
  8319  001A88  0E05               	movlw	high _FromMainHigh_MQ
  8320  001A8A  0100               	movlb	0	; () banked
  8321  001A8C  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8322  001A8E  0105               	movlb	5	; () banked
  8323  001A90  0E00               	movlw	low _FromMainHigh_MQ
  8324  001A92  0100               	movlb	0	; () banked
  8325  001A94  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  8326  001A96  C07C  F06C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8327  001A9A  0100               	movlb	0	; () banked
  8328  001A9C  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8329  001AA0  0100               	movlb	0	; () banked
  8330  001AA2  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8331  001AA6  0100               	movlb	0	; () banked
  8332  001AA8  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8333  001AAC  0100               	movlb	0	; () banked
  8334  001AAE  C07A  F06F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8335  001AB2  ECDD  F006         	call	i2_recv_msg	;wreg free
  8336  001AB6  0012               	return	
  8337  001AB8                     __end_of_FromMainHigh_recvmsg:
  8338                           	opt stack 0
  8339                           pclatu	equ	0xFFB
  8340                           pclath	equ	0xFFA
  8341                           tblptru	equ	0xFF8
  8342                           tblptrh	equ	0xFF7
  8343                           tblptrl	equ	0xFF6
  8344                           tablat	equ	0xFF5
  8345                           prodh	equ	0xFF4
  8346                           prodl	equ	0xFF3
  8347                           intcon	equ	0xFF2
  8348                           postinc0	equ	0xFEE
  8349                           fsr0h	equ	0xFEA
  8350                           fsr0l	equ	0xFE9
  8351                           wreg	equ	0xFE8
  8352                           indf1	equ	0xFE7
  8353                           fsr1h	equ	0xFE2
  8354                           fsr1l	equ	0xFE1
  8355                           bsr	equ	0xFE0
  8356                           indf2	equ	0xFDF
  8357                           postinc2	equ	0xFDE
  8358                           postdec2	equ	0xFDD
  8359                           fsr2h	equ	0xFDA
  8360                           fsr2l	equ	0xFD9
  8361                           status	equ	0xFD8
  8362                           
  8363 ;; *************** function i2_recv_msg *****************
  8364 ;; Defined at:
  8365 ;;		line 63 in file "../src/messages.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8368 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8369 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8370 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8371 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), ma
      +in@msgtype(1), 
  8372 ;;  data            2   15[BANK0 ] PTR void 
  8373 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), main@
      +msgbuffer(15), 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8376 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8377 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8378 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8379 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      char 
  8382 ;; Registers used:
  8383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8389 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8390 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8392 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;Total ram usage:       14 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:    1
  8396 ;; This function calls:
  8397 ;;		i2_memcpy
  8398 ;; This function is called by:
  8399 ;;		_FromMainHigh_recvmsg
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text49
  8404  000DBA                     __ptext49:
  8405                           	opt stack 0
  8406  000DBA                     i2_recv_msg:
  8407                           	opt stack 15
  8408                           
  8409                           ;messages.c: 64: unsigned char slot;
  8410                           ;messages.c: 68: msg *qmsg;
  8411                           ;messages.c: 69: size_t tlength;
  8412                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8413                           
  8414                           ;incstack = 0
  8415  000DBA  0100               	movlb	0	; () banked
  8416  000DBC  EE20 F089          	lfsr	2,137
  8417  000DC0  0100               	movlb	0	; () banked
  8418  000DC2  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8419  000DC4  26D9               	addwf	fsr2l,f,c
  8420  000DC6  0100               	movlb	0	; () banked
  8421  000DC8  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8422  000DCA  22DA               	addwfc	fsr2h,f,c
  8423  000DCC  50DF               	movf	indf2,w,c
  8424  000DCE  0100               	movlb	0	; () banked
  8425  000DD0  6F73               	movwf	i2recv_msg@slot& (0+255),b
  8426                           
  8427                           ; BSR set to: 0
  8428                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8429  000DD2  0100               	movlb	0	; () banked
  8430  000DD4  5173               	movf	i2recv_msg@slot& (0+255),w,b
  8431  000DD6  0D11               	mullw	17
  8432  000DD8  50F3               	movf	prodl,w,c
  8433  000DDA  0100               	movlb	0	; () banked
  8434  000DDC  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8435  000DDE  0100               	movlb	0	; () banked
  8436  000DE0  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  8437  000DE2  50F4               	movf	prodh,w,c
  8438  000DE4  0100               	movlb	0	; () banked
  8439  000DE6  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8440  000DE8  0100               	movlb	0	; () banked
  8441  000DEA  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;messages.c: 74: if (qmsg->full == 1) {
  8445  000DEC  0E01               	movlw	1
  8446  000DEE  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8447  000DF2  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8448  000DF6  62DF               	cpfseq	indf2,c
  8449  000DF8  D06D               	goto	i2l2355
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8453  000DFA  0100               	movlb	0	; () banked
  8454  000DFC  EE20 F001          	lfsr	2,1
  8455  000E00  0100               	movlb	0	; () banked
  8456  000E02  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8457  000E04  26D9               	addwf	fsr2l,f,c
  8458  000E06  0100               	movlb	0	; () banked
  8459  000E08  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8460  000E0A  22DA               	addwfc	fsr2h,f,c
  8461  000E0C  50DF               	movf	indf2,w,c
  8462  000E0E  0100               	movlb	0	; () banked
  8463  000E10  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8464  000E12  B0D8               	btfsc	status,0,c
  8465  000E14  D002               	goto	i2l2339
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;messages.c: 77: return (-3);
  8469  000E16  0EFD               	movlw	253
  8470  000E18  0012               	return	
  8471  000E1A                     i2l2339:
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;messages.c: 78: }
  8475                           ;messages.c: 80: tlength = qmsg->length;
  8476  000E1A  0100               	movlb	0	; () banked
  8477  000E1C  EE20 F001          	lfsr	2,1
  8478  000E20  0100               	movlb	0	; () banked
  8479  000E22  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8480  000E24  26D9               	addwf	fsr2l,f,c
  8481  000E26  0100               	movlb	0	; () banked
  8482  000E28  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8483  000E2A  22DA               	addwfc	fsr2h,f,c
  8484  000E2C  50DF               	movf	indf2,w,c
  8485  000E2E  0100               	movlb	0	; () banked
  8486  000E30  6F71               	movwf	??i2_recv_msg& (0+255),b
  8487  000E32  0100               	movlb	0	; () banked
  8488  000E34  5171               	movf	??i2_recv_msg& (0+255),w,b
  8489  000E36  0100               	movlb	0	; () banked
  8490  000E38  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  8491  000E3A  0100               	movlb	0	; () banked
  8492  000E3C  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8496  000E3E  0100               	movlb	0	; () banked
  8497  000E40  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8498  000E44  0100               	movlb	0	; () banked
  8499  000E46  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  8500  000E4A  0E03               	movlw	3
  8501  000E4C  0100               	movlb	0	; () banked
  8502  000E4E  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8503  000E50  0100               	movlb	0	; () banked
  8504  000E52  6F71               	movwf	??i2_recv_msg& (0+255),b
  8505  000E54  0E00               	movlw	0
  8506  000E56  0100               	movlb	0	; () banked
  8507  000E58  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8508  000E5A  0100               	movlb	0	; () banked
  8509  000E5C  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  8510  000E5E  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  8511  000E62  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8512  000E66  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  8513  000E6A  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8514  000E6E  EC4D  F00C         	call	i2_memcpy	;wreg free
  8515                           
  8516                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 8;
  8517  000E72  0100               	movlb	0	; () banked
  8518  000E74  EE20 F089          	lfsr	2,137
  8519  000E78  0100               	movlb	0	; () banked
  8520  000E7A  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8521  000E7C  26D9               	addwf	fsr2l,f,c
  8522  000E7E  0100               	movlb	0	; () banked
  8523  000E80  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8524  000E82  22DA               	addwfc	fsr2h,f,c
  8525  000E84  0100               	movlb	0	; () banked
  8526  000E86  EE10 F089          	lfsr	1,137
  8527  000E8A  0100               	movlb	0	; () banked
  8528  000E8C  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8529  000E8E  26E1               	addwf	fsr1l,f,c
  8530  000E90  0100               	movlb	0	; () banked
  8531  000E92  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8532  000E94  22E2               	addwfc	fsr1h,f,c
  8533  000E96  50E7               	movf	indf1,w,c
  8534  000E98  0100               	movlb	0	; () banked
  8535  000E9A  6F71               	movwf	??i2_recv_msg& (0+255),b
  8536  000E9C  0100               	movlb	0	; () banked
  8537  000E9E  2971               	incf	??i2_recv_msg& (0+255),w,b
  8538  000EA0  0B07               	andlw	7
  8539  000EA2  6EDF               	movwf	indf2,c
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8543  000EA4  0100               	movlb	0	; () banked
  8544  000EA6  EE20 F002          	lfsr	2,2
  8545  000EAA  0100               	movlb	0	; () banked
  8546  000EAC  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8547  000EAE  26D9               	addwf	fsr2l,f,c
  8548  000EB0  0100               	movlb	0	; () banked
  8549  000EB2  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8550  000EB4  22DA               	addwfc	fsr2h,f,c
  8551  000EB6  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8552  000EBA  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8553  000EBE  CFDF FFE7          	movff	indf2,indf1
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;messages.c: 91: qmsg->full = 0;
  8557  000EC2  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8558  000EC6  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8559  000ECA  0E00               	movlw	0
  8560  000ECC  6EDF               	movwf	indf2,c
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;messages.c: 92: return (tlength);
  8564  000ECE  0100               	movlb	0	; () banked
  8565  000ED0  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  8566  000ED2  0012               	return	
  8567  000ED4                     i2l2355:
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;messages.c: 94: return (-4);
  8571  000ED4  0EFC               	movlw	252
  8572  000ED6  0012               	return	
  8573  000ED8                     __end_ofi2_recv_msg:
  8574                           	opt stack 0
  8575                           pclatu	equ	0xFFB
  8576                           pclath	equ	0xFFA
  8577                           tblptru	equ	0xFF8
  8578                           tblptrh	equ	0xFF7
  8579                           tblptrl	equ	0xFF6
  8580                           tablat	equ	0xFF5
  8581                           prodh	equ	0xFF4
  8582                           prodl	equ	0xFF3
  8583                           intcon	equ	0xFF2
  8584                           postinc0	equ	0xFEE
  8585                           fsr0h	equ	0xFEA
  8586                           fsr0l	equ	0xFE9
  8587                           wreg	equ	0xFE8
  8588                           indf1	equ	0xFE7
  8589                           fsr1h	equ	0xFE2
  8590                           fsr1l	equ	0xFE1
  8591                           bsr	equ	0xFE0
  8592                           indf2	equ	0xFDF
  8593                           postinc2	equ	0xFDE
  8594                           postdec2	equ	0xFDD
  8595                           fsr2h	equ	0xFDA
  8596                           fsr2l	equ	0xFD9
  8597                           status	equ	0xFD8
  8598                           
  8599 ;; *************** function _handle_start *****************
  8600 ;; Defined at:
  8601 ;;		line 72 in file "../src/my_i2c.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;  data_read       1    wreg     unsigned char 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;  data_read       1    0[BANK0 ] unsigned char 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;		None               void
  8608 ;; Registers used:
  8609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8618 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8619 ;;Total ram usage:        1 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_i2c_int_handler
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           	psect	text50
  8629  001264                     __ptext50:
  8630                           	opt stack 0
  8631  001264                     _handle_start:
  8632                           	opt stack 17
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;incstack = 0
  8636                           ;handle_start@data_read stored from wreg
  8637  001264  0100               	movlb	0	; () banked
  8638  001266  6F60               	movwf	handle_start@data_read& (0+255),b
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8642  001268  0100               	movlb	0	; () banked
  8643  00126A  EE20 F020          	lfsr	2,32
  8644  00126E  0100               	movlb	0	; () banked
  8645  001270  51D4               	movf	_ic_ptr& (0+255),w,b
  8646  001272  26D9               	addwf	fsr2l,f,c
  8647  001274  0100               	movlb	0	; () banked
  8648  001276  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8649  001278  22DA               	addwfc	fsr2h,f,c
  8650  00127A  0E01               	movlw	1
  8651  00127C  6EDF               	movwf	indf2,c
  8652                           
  8653                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8654  00127E  0100               	movlb	0	; () banked
  8655  001280  EE20 F00E          	lfsr	2,14
  8656  001284  0100               	movlb	0	; () banked
  8657  001286  51D4               	movf	_ic_ptr& (0+255),w,b
  8658  001288  26D9               	addwf	fsr2l,f,c
  8659  00128A  0100               	movlb	0	; () banked
  8660  00128C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8661  00128E  22DA               	addwfc	fsr2h,f,c
  8662  001290  0E00               	movlw	0
  8663  001292  6EDF               	movwf	indf2,c
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;my_i2c.c: 76: if (data_read) {
  8667  001294  0100               	movlb	0	; () banked
  8668  001296  5160               	movf	handle_start@data_read& (0+255),w,b
  8669  001298  B4D8               	btfsc	status,2,c
  8670  00129A  D03D               	goto	i2l2565
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8674  00129C  AAC7               	btfss	4039,5,c	;volatile
  8675  00129E  D021               	goto	i2l288
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8679  0012A0  0100               	movlb	0	; () banked
  8680  0012A2  EE20 F021          	lfsr	2,33
  8681  0012A6  0100               	movlb	0	; () banked
  8682  0012A8  51D4               	movf	_ic_ptr& (0+255),w,b
  8683  0012AA  26D9               	addwf	fsr2l,f,c
  8684  0012AC  0100               	movlb	0	; () banked
  8685  0012AE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8686  0012B0  22DA               	addwfc	fsr2h,f,c
  8687  0012B2  0E05               	movlw	5
  8688  0012B4  6EDF               	movwf	indf2,c
  8689                           
  8690                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8691  0012B6  0100               	movlb	0	; () banked
  8692  0012B8  EE20 F023          	lfsr	2,35
  8693  0012BC  0100               	movlb	0	; () banked
  8694  0012BE  51D4               	movf	_ic_ptr& (0+255),w,b
  8695  0012C0  26D9               	addwf	fsr2l,f,c
  8696  0012C2  0100               	movlb	0	; () banked
  8697  0012C4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8698  0012C6  22DA               	addwfc	fsr2h,f,c
  8699  0012C8  2ADF               	incf	indf2,f,c
  8700                           
  8701                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8702  0012CA  0100               	movlb	0	; () banked
  8703  0012CC  EE20 F022          	lfsr	2,34
  8704  0012D0  0100               	movlb	0	; () banked
  8705  0012D2  51D4               	movf	_ic_ptr& (0+255),w,b
  8706  0012D4  26D9               	addwf	fsr2l,f,c
  8707  0012D6  0100               	movlb	0	; () banked
  8708  0012D8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8709  0012DA  22DA               	addwfc	fsr2h,f,c
  8710  0012DC  0E05               	movlw	5
  8711  0012DE  6EDF               	movwf	indf2,c
  8712                           
  8713                           ;my_i2c.c: 83: } else {
  8714  0012E0  0012               	return	
  8715  0012E2                     i2l288:
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8719  0012E2  A4C7               	btfss	4039,2,c	;volatile
  8720  0012E4  D00C               	goto	i2l2563
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8724  0012E6  0100               	movlb	0	; () banked
  8725  0012E8  EE20 F021          	lfsr	2,33
  8726  0012EC  0100               	movlb	0	; () banked
  8727  0012EE  51D4               	movf	_ic_ptr& (0+255),w,b
  8728  0012F0  26D9               	addwf	fsr2l,f,c
  8729  0012F2  0100               	movlb	0	; () banked
  8730  0012F4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8731  0012F6  22DA               	addwfc	fsr2h,f,c
  8732  0012F8  0E08               	movlw	8
  8733  0012FA  6EDF               	movwf	indf2,c
  8734                           
  8735                           ;my_i2c.c: 87: } else {
  8736  0012FC  0012               	return	
  8737  0012FE                     i2l2563:
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  8741  0012FE  0100               	movlb	0	; () banked
  8742  001300  EE20 F021          	lfsr	2,33
  8743  001304  0100               	movlb	0	; () banked
  8744  001306  51D4               	movf	_ic_ptr& (0+255),w,b
  8745  001308  26D9               	addwf	fsr2l,f,c
  8746  00130A  0100               	movlb	0	; () banked
  8747  00130C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8748  00130E  22DA               	addwfc	fsr2h,f,c
  8749  001310  0E07               	movlw	7
  8750  001312  6EDF               	movwf	indf2,c
  8751  001314  0012               	return	
  8752  001316                     i2l2565:
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  8756  001316  0100               	movlb	0	; () banked
  8757  001318  EE20 F021          	lfsr	2,33
  8758  00131C  0100               	movlb	0	; () banked
  8759  00131E  51D4               	movf	_ic_ptr& (0+255),w,b
  8760  001320  26D9               	addwf	fsr2l,f,c
  8761  001322  0100               	movlb	0	; () banked
  8762  001324  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8763  001326  22DA               	addwfc	fsr2h,f,c
  8764  001328  0E06               	movlw	6
  8765  00132A  6EDF               	movwf	indf2,c
  8766  00132C  0012               	return	
  8767  00132E                     __end_of_handle_start:
  8768                           	opt stack 0
  8769                           pclatu	equ	0xFFB
  8770                           pclath	equ	0xFFA
  8771                           tblptru	equ	0xFF8
  8772                           tblptrh	equ	0xFF7
  8773                           tblptrl	equ	0xFF6
  8774                           tablat	equ	0xFF5
  8775                           prodh	equ	0xFF4
  8776                           prodl	equ	0xFF3
  8777                           intcon	equ	0xFF2
  8778                           postinc0	equ	0xFEE
  8779                           fsr0h	equ	0xFEA
  8780                           fsr0l	equ	0xFE9
  8781                           wreg	equ	0xFE8
  8782                           indf1	equ	0xFE7
  8783                           fsr1h	equ	0xFE2
  8784                           fsr1l	equ	0xFE1
  8785                           bsr	equ	0xFE0
  8786                           indf2	equ	0xFDF
  8787                           postinc2	equ	0xFDE
  8788                           postdec2	equ	0xFDD
  8789                           fsr2h	equ	0xFDA
  8790                           fsr2l	equ	0xFD9
  8791                           status	equ	0xFD8
  8792                           
  8793 ;; *************** function _blip4 *****************
  8794 ;; Defined at:
  8795 ;;		line 39 in file "../src/debug.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;		None
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;		None               void
  8802 ;; Registers used:
  8803 ;;		None
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;Total ram usage:        0 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_i2c_int_handler
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text51
  8823  001D0A                     __ptext51:
  8824                           	opt stack 0
  8825  001D0A                     _blip4:
  8826                           	opt stack 17
  8827                           
  8828                           ;debug.c: 41: LATDbits.LD7 = 0;
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;incstack = 0
  8832  001D0A  9E8C               	bcf	3980,7,c	;volatile
  8833                           
  8834                           ;debug.c: 42: LATDbits.LD7 = 1;
  8835  001D0C  8E8C               	bsf	3980,7,c	;volatile
  8836                           
  8837                           ;debug.c: 43: LATDbits.LD7 = 0;
  8838  001D0E  9E8C               	bcf	3980,7,c	;volatile
  8839  001D10  0012               	return	
  8840  001D12                     __end_of_blip4:
  8841                           	opt stack 0
  8842                           pclatu	equ	0xFFB
  8843                           pclath	equ	0xFFA
  8844                           tblptru	equ	0xFF8
  8845                           tblptrh	equ	0xFF7
  8846                           tblptrl	equ	0xFF6
  8847                           tablat	equ	0xFF5
  8848                           prodh	equ	0xFF4
  8849                           prodl	equ	0xFF3
  8850                           intcon	equ	0xFF2
  8851                           postinc0	equ	0xFEE
  8852                           fsr0h	equ	0xFEA
  8853                           fsr0l	equ	0xFE9
  8854                           wreg	equ	0xFE8
  8855                           indf1	equ	0xFE7
  8856                           fsr1h	equ	0xFE2
  8857                           fsr1l	equ	0xFE1
  8858                           bsr	equ	0xFE0
  8859                           indf2	equ	0xFDF
  8860                           postinc2	equ	0xFDE
  8861                           postdec2	equ	0xFDD
  8862                           fsr2h	equ	0xFDA
  8863                           fsr2l	equ	0xFD9
  8864                           status	equ	0xFD8
  8865                           
  8866 ;; *************** function _ToMainHigh_sendmsg *****************
  8867 ;; Defined at:
  8868 ;;		line 126 in file "../src/messages.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  length          1    wreg     unsigned char 
  8871 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8872 ;;  data            2   23[BANK0 ] PTR void 
  8873 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  length          1   25[BANK0 ] unsigned char 
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      char 
  8878 ;; Registers used:
  8879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8885 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8888 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8889 ;;Total ram usage:        4 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    2
  8892 ;; This function calls:
  8893 ;;		i2_send_msg
  8894 ;; This function is called by:
  8895 ;;		_i2c_int_handler
  8896 ;;		_timer0_int_handler
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           	psect	text52
  8901  001B46                     __ptext52:
  8902                           	opt stack 0
  8903  001B46                     _ToMainHigh_sendmsg:
  8904                           	opt stack 15
  8905                           
  8906                           ;incstack = 0
  8907                           ;ToMainHigh_sendmsg@length stored from wreg
  8908  001B46  0100               	movlb	0	; () banked
  8909  001B48  6F79               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8913                           ;	Return value of _ToMainHigh_sendmsg is never used
  8914  001B4A  0103               	movlb	3	; () banked
  8915  001B4C  0E03               	movlw	high _ToMainHigh_MQ
  8916  001B4E  0100               	movlb	0	; () banked
  8917  001B50  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8918  001B52  0103               	movlb	3	; () banked
  8919  001B54  0E00               	movlw	low _ToMainHigh_MQ
  8920  001B56  0100               	movlb	0	; () banked
  8921  001B58  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  8922  001B5A  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8923  001B5E  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8924  001B62  0100               	movlb	0	; () banked
  8925  001B64  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8926  001B68  0100               	movlb	0	; () banked
  8927  001B6A  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8928  001B6E  ECE2  F007         	call	i2_send_msg	;wreg free
  8929  001B72  0012               	return	
  8930  001B74                     __end_of_ToMainHigh_sendmsg:
  8931                           	opt stack 0
  8932                           pclatu	equ	0xFFB
  8933                           pclath	equ	0xFFA
  8934                           tblptru	equ	0xFF8
  8935                           tblptrh	equ	0xFF7
  8936                           tblptrl	equ	0xFF6
  8937                           tablat	equ	0xFF5
  8938                           prodh	equ	0xFF4
  8939                           prodl	equ	0xFF3
  8940                           intcon	equ	0xFF2
  8941                           postinc0	equ	0xFEE
  8942                           fsr0h	equ	0xFEA
  8943                           fsr0l	equ	0xFE9
  8944                           wreg	equ	0xFE8
  8945                           indf1	equ	0xFE7
  8946                           fsr1h	equ	0xFE2
  8947                           fsr1l	equ	0xFE1
  8948                           bsr	equ	0xFE0
  8949                           indf2	equ	0xFDF
  8950                           postinc2	equ	0xFDE
  8951                           postdec2	equ	0xFDD
  8952                           fsr2h	equ	0xFDA
  8953                           fsr2l	equ	0xFD9
  8954                           status	equ	0xFD8
  8955                           
  8956 ;; *************** function i2_send_msg *****************
  8957 ;; Defined at:
  8958 ;;		line 24 in file "../src/messages.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8961 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8962 ;;  length          1   12[BANK0 ] unsigned char 
  8963 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8964 ;;  data            2   14[BANK0 ] PTR void 
  8965 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  8966 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  8967 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@senso
      +r_data(14), 
  8968 ;;		 -> main@t1thread_data(2), main@ic(38), 
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8971 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  8972 ;;		 -> FromMainHigh_MQ(138), FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  8973 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8974 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      char 
  8977 ;; Registers used:
  8978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8984 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8985 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8987 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8988 ;;Total ram usage:       12 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    1
  8991 ;; This function calls:
  8992 ;;		i2_memcpy
  8993 ;; This function is called by:
  8994 ;;		_ToMainHigh_sendmsg
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text53
  8999  000FC4                     __ptext53:
  9000                           	opt stack 0
  9001  000FC4                     i2_send_msg:
  9002                           	opt stack 15
  9003                           
  9004                           ;messages.c: 25: unsigned char slot;
  9005                           ;messages.c: 27: msg *qmsg;
  9006                           ;messages.c: 28: size_t tlength = length;
  9007                           
  9008                           ;incstack = 0
  9009  000FC4  0100               	movlb	0	; () banked
  9010  000FC6  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  9011  000FCA  0100               	movlb	0	; () banked
  9012  000FCC  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9016  000FCE  0100               	movlb	0	; () banked
  9017  000FD0  EE20 F088          	lfsr	2,136
  9018  000FD4  0100               	movlb	0	; () banked
  9019  000FD6  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9020  000FD8  26D9               	addwf	fsr2l,f,c
  9021  000FDA  0100               	movlb	0	; () banked
  9022  000FDC  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9023  000FDE  22DA               	addwfc	fsr2h,f,c
  9024  000FE0  50DF               	movf	indf2,w,c
  9025  000FE2  0100               	movlb	0	; () banked
  9026  000FE4  6F73               	movwf	i2send_msg@slot& (0+255),b
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9030  000FE6  0100               	movlb	0	; () banked
  9031  000FE8  5173               	movf	i2send_msg@slot& (0+255),w,b
  9032  000FEA  0D11               	mullw	17
  9033  000FEC  50F3               	movf	prodl,w,c
  9034  000FEE  0100               	movlb	0	; () banked
  9035  000FF0  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  9036  000FF2  0100               	movlb	0	; () banked
  9037  000FF4  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  9038  000FF6  50F4               	movf	prodh,w,c
  9039  000FF8  0100               	movlb	0	; () banked
  9040  000FFA  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9041  000FFC  0100               	movlb	0	; () banked
  9042  000FFE  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;messages.c: 41: if (qmsg->full != 0) {
  9046  001000  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9047  001004  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9048  001008  50DF               	movf	indf2,w,c
  9049  00100A  B4D8               	btfsc	status,2,c
  9050  00100C  D002               	goto	i2l2417
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;messages.c: 42: return (-1);
  9054  00100E  0EFF               	movlw	255
  9055  001010  0012               	return	
  9056  001012                     i2l2417:
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;messages.c: 43: }
  9060                           ;messages.c: 46: qmsg->length = length;
  9061  001012  0100               	movlb	0	; () banked
  9062  001014  EE20 F001          	lfsr	2,1
  9063  001018  0100               	movlb	0	; () banked
  9064  00101A  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  9065  00101C  26D9               	addwf	fsr2l,f,c
  9066  00101E  0100               	movlb	0	; () banked
  9067  001020  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9068  001022  22DA               	addwfc	fsr2h,f,c
  9069  001024  0100               	movlb	0	; () banked
  9070  001026  C06C  FFDF         	movff	i2send_msg@length,indf2
  9071                           
  9072                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9073  00102A  0100               	movlb	0	; () banked
  9074  00102C  EE20 F002          	lfsr	2,2
  9075  001030  0100               	movlb	0	; () banked
  9076  001032  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  9077  001034  26D9               	addwf	fsr2l,f,c
  9078  001036  0100               	movlb	0	; () banked
  9079  001038  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9080  00103A  22DA               	addwfc	fsr2h,f,c
  9081  00103C  0100               	movlb	0	; () banked
  9082  00103E  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9086  001042  0E03               	movlw	3
  9087  001044  0100               	movlb	0	; () banked
  9088  001046  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  9089  001048  0100               	movlb	0	; () banked
  9090  00104A  6F60               	movwf	i2memcpy@d1& (0+255),b
  9091  00104C  0E00               	movlw	0
  9092  00104E  0100               	movlb	0	; () banked
  9093  001050  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9094  001052  0100               	movlb	0	; () banked
  9095  001054  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  9096  001056  0100               	movlb	0	; () banked
  9097  001058  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9098  00105C  0100               	movlb	0	; () banked
  9099  00105E  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  9100  001062  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  9101  001066  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9102  00106A  EC4D  F00C         	call	i2_memcpy	;wreg free
  9103                           
  9104                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 8;
  9105  00106E  0100               	movlb	0	; () banked
  9106  001070  EE20 F088          	lfsr	2,136
  9107  001074  0100               	movlb	0	; () banked
  9108  001076  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9109  001078  26D9               	addwf	fsr2l,f,c
  9110  00107A  0100               	movlb	0	; () banked
  9111  00107C  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9112  00107E  22DA               	addwfc	fsr2h,f,c
  9113  001080  0100               	movlb	0	; () banked
  9114  001082  EE10 F088          	lfsr	1,136
  9115  001086  0100               	movlb	0	; () banked
  9116  001088  516A               	movf	i2send_msg@qptr& (0+255),w,b
  9117  00108A  26E1               	addwf	fsr1l,f,c
  9118  00108C  0100               	movlb	0	; () banked
  9119  00108E  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9120  001090  22E2               	addwfc	fsr1h,f,c
  9121  001092  50E7               	movf	indf1,w,c
  9122  001094  0100               	movlb	0	; () banked
  9123  001096  6F70               	movwf	??i2_send_msg& (0+255),b
  9124  001098  0100               	movlb	0	; () banked
  9125  00109A  2970               	incf	??i2_send_msg& (0+255),w,b
  9126  00109C  0B07               	andlw	7
  9127  00109E  6EDF               	movwf	indf2,c
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;messages.c: 59: qmsg->full = 1;
  9131  0010A0  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9132  0010A4  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9133  0010A8  0E01               	movlw	1
  9134  0010AA  6EDF               	movwf	indf2,c
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;messages.c: 60: return (1);
  9138  0010AC  0E01               	movlw	1
  9139  0010AE  0012               	return	
  9140  0010B0                     __end_ofi2_send_msg:
  9141                           	opt stack 0
  9142                           pclatu	equ	0xFFB
  9143                           pclath	equ	0xFFA
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           intcon	equ	0xFF2
  9151                           postinc0	equ	0xFEE
  9152                           fsr0h	equ	0xFEA
  9153                           fsr0l	equ	0xFE9
  9154                           wreg	equ	0xFE8
  9155                           indf1	equ	0xFE7
  9156                           fsr1h	equ	0xFE2
  9157                           fsr1l	equ	0xFE1
  9158                           bsr	equ	0xFE0
  9159                           indf2	equ	0xFDF
  9160                           postinc2	equ	0xFDE
  9161                           postdec2	equ	0xFDD
  9162                           fsr2h	equ	0xFDA
  9163                           fsr2l	equ	0xFD9
  9164                           status	equ	0xFD8
  9165                           
  9166 ;; *************** function i2_memcpy *****************
  9167 ;; Defined at:
  9168 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  d1              2    0[BANK0 ] PTR void 
  9171 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9172 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9173 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9174 ;;  s1              2    2[BANK0 ] PTR const void 
  9175 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9176 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9177 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  9178 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9179 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  9180 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  9181 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9182 ;;  n               2    4[BANK0 ] unsigned int 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9185 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9186 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9187 ;;		 -> NULL(0), timer0_int_handler@val(2), timer1_lthread@whatever_msg(14), uart_receive_interrupt_handler@message_coun
      +t(1), 
  9188 ;;		 -> uart_receive_interrupt_handler@bad_checksum_message(3), uart_receive_interrupt_handler@gooey_uart_center(14), ua
      +rt_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9189 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(138), FromMainLow_
      +MQ(138), 
  9190 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), main@uart_response(14), main@sensor_data(14), 
  9191 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9192 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9193 ;;		 -> FromMainLow_MQ.queue(136), FromMainHigh_MQ.queue(136), ToMainHigh_MQ.queue(136), ToMainLow_MQ.queue(136), 
  9194 ;;		 -> timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), i2c_int_handler@sensor_bank_side(14), FromM
      +ainHigh_MQ(138), 
  9195 ;;		 -> FromMainLow_MQ(138), ToMainHigh_MQ(138), ToMainLow_MQ(138), main@msgbuffer(15), 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  2    0[BANK0 ] PTR void 
  9198 ;; Registers used:
  9199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9205 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9206 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9208 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9209 ;;Total ram usage:       10 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		i2_send_msg
  9215 ;;		i2_recv_msg
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text54
  9220  00189A                     __ptext54:
  9221                           	opt stack 0
  9222  00189A                     i2_memcpy:
  9223                           	opt stack 15
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;incstack = 0
  9227  00189A  0100               	movlb	0	; () banked
  9228  00189C  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9229  0018A0  0100               	movlb	0	; () banked
  9230  0018A2  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  9231  0018A6  0100               	movlb	0	; () banked
  9232  0018A8  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9233  0018AC  0100               	movlb	0	; () banked
  9234  0018AE  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  9235  0018B2  D010               	goto	i2l2301
  9236  0018B4                     i2l2295:
  9237                           
  9238                           ; BSR set to: 0
  9239  0018B4  C068  FFD9         	movff	i2memcpy@s,fsr2l
  9240  0018B8  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  9241  0018BC  C066  FFE1         	movff	i2memcpy@d,fsr1l
  9242  0018C0  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  9243  0018C4  CFDF FFE7          	movff	indf2,indf1
  9244                           
  9245                           ; BSR set to: 0
  9246  0018C8  0100               	movlb	0	; () banked
  9247  0018CA  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  9248  0018CC  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  9249                           
  9250                           ; BSR set to: 0
  9251  0018CE  0100               	movlb	0	; () banked
  9252  0018D0  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  9253  0018D2  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  9254  0018D4                     i2l2301:
  9255                           
  9256                           ; BSR set to: 0
  9257  0018D4  0100               	movlb	0	; () banked
  9258  0018D6  0764               	decf	i2memcpy@n& (0+255),f,b
  9259  0018D8  A0D8               	btfss	status,0,c
  9260  0018DA  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  9261  0018DC  0100               	movlb	0	; () banked
  9262  0018DE  2964               	incf	i2memcpy@n& (0+255),w,b
  9263  0018E0  B4D8               	btfsc	status,2,c
  9264  0018E2  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  9265  0018E4  B4D8               	btfsc	status,2,c
  9266                           
  9267                           ; BSR set to: 0
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;	Return value of i2_memcpy is never used
  9271  0018E6  0012               	return	
  9272  0018E8  D7E5               	goto	i2l2295
  9273  0018EA                     __end_ofi2_memcpy:
  9274                           	opt stack 0
  9275                           pclatu	equ	0xFFB
  9276                           pclath	equ	0xFFA
  9277                           tblptru	equ	0xFF8
  9278                           tblptrh	equ	0xFF7
  9279                           tblptrl	equ	0xFF6
  9280                           tablat	equ	0xFF5
  9281                           prodh	equ	0xFF4
  9282                           prodl	equ	0xFF3
  9283                           intcon	equ	0xFF2
  9284                           postinc0	equ	0xFEE
  9285                           fsr0h	equ	0xFEA
  9286                           fsr0l	equ	0xFE9
  9287                           wreg	equ	0xFE8
  9288                           indf1	equ	0xFE7
  9289                           fsr1h	equ	0xFE2
  9290                           fsr1l	equ	0xFE1
  9291                           bsr	equ	0xFE0
  9292                           indf2	equ	0xFDF
  9293                           postinc2	equ	0xFDE
  9294                           postdec2	equ	0xFDD
  9295                           fsr2h	equ	0xFDA
  9296                           fsr2l	equ	0xFD9
  9297                           status	equ	0xFD8
  9298                           
  9299 ;; *************** function _SleepIfOkay *****************
  9300 ;; Defined at:
  9301 ;;		line 226 in file "../src/messages.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;		None
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;		None               void
  9308 ;; Registers used:
  9309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9319 ;;Total ram usage:        0 bytes
  9320 ;; Hardware stack levels used:    1
  9321 ;; Hardware stack levels required when called:    2
  9322 ;; This function calls:
  9323 ;;		_check_msg
  9324 ;;		_enter_sleep_mode
  9325 ;;		_in_high_int
  9326 ;;		_in_low_int
  9327 ;; This function is called by:
  9328 ;;		_InterruptHandlerHigh
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text55
  9333  001792                     __ptext55:
  9334                           	opt stack 0
  9335  001792                     _SleepIfOkay:
  9336                           	opt stack 16
  9337                           
  9338                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;incstack = 0
  9342  001792  0100               	movlb	0	; () banked
  9343  001794  67B1               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9344  001796  D001               	goto	i2l2849
  9345  001798  0012               	return	
  9346  00179A                     i2l2849:
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;messages.c: 230: }
  9350                           ;messages.c: 233: if (in_low_int()) {
  9351  00179A  EC95  F00C         	call	_in_low_int	;wreg free
  9352  00179E  0100               	movlb	0	; () banked
  9353  0017A0  5163               	movf	(?_in_low_int+1)& (0+255),w,b
  9354  0017A2  0100               	movlb	0	; () banked
  9355  0017A4  1162               	iorwf	?_in_low_int& (0+255),w,b
  9356  0017A6  A4D8               	btfss	status,2,c
  9357  0017A8  0012               	return	
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;messages.c: 235: }
  9361                           ;messages.c: 238: if (!in_high_int()) {
  9362                           
  9363                           ; BSR set to: 0
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;messages.c: 234: return;
  9367  0017AA  EC4D  F00E         	call	_in_high_int	;wreg free
  9368  0017AE  0100               	movlb	0	; () banked
  9369  0017B0  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9370  0017B2  0100               	movlb	0	; () banked
  9371  0017B4  1160               	iorwf	?_in_high_int& (0+255),w,b
  9372  0017B6  B4D8               	btfsc	status,2,c
  9373  0017B8  0012               	return	
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;messages.c: 240: }
  9377                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9378                           
  9379                           ; BSR set to: 0
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;messages.c: 239: return;
  9383  0017BA  0103               	movlb	3	; () banked
  9384  0017BC  0E03               	movlw	high _ToMainHigh_MQ
  9385  0017BE  0100               	movlb	0	; () banked
  9386  0017C0  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9387  0017C2  0103               	movlb	3	; () banked
  9388  0017C4  0E00               	movlw	low _ToMainHigh_MQ
  9389  0017C6  0100               	movlb	0	; () banked
  9390  0017C8  6F60               	movwf	check_msg@qptr& (0+255),b
  9391  0017CA  EC5C  F00D         	call	_check_msg	;wreg free
  9392  0017CE  0900               	iorlw	0
  9393  0017D0  A4D8               	btfss	status,2,c
  9394  0017D2  0012               	return	
  9395                           
  9396                           ;messages.c: 247: }
  9397                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9398                           
  9399                           ;messages.c: 246: return;
  9400  0017D4  0102               	movlb	2	; () banked
  9401  0017D6  0E02               	movlw	high _ToMainLow_MQ
  9402  0017D8  0100               	movlb	0	; () banked
  9403  0017DA  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  9404  0017DC  0102               	movlb	2	; () banked
  9405  0017DE  0E00               	movlw	low _ToMainLow_MQ
  9406  0017E0  0100               	movlb	0	; () banked
  9407  0017E2  6F60               	movwf	check_msg@qptr& (0+255),b
  9408  0017E4  EC5C  F00D         	call	_check_msg	;wreg free
  9409  0017E8  0900               	iorlw	0
  9410  0017EA  B4D8               	btfsc	status,2,c
  9411                           
  9412                           ;messages.c: 250: }
  9413                           ;messages.c: 251: enter_sleep_mode();
  9414                           
  9415                           ;messages.c: 249: return;
  9416  0017EC  EC89  F00E         	call	_enter_sleep_mode	;wreg free
  9417  0017F0  0012               	return	
  9418  0017F2                     __end_of_SleepIfOkay:
  9419                           	opt stack 0
  9420                           pclatu	equ	0xFFB
  9421                           pclath	equ	0xFFA
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           postinc0	equ	0xFEE
  9430                           fsr0h	equ	0xFEA
  9431                           fsr0l	equ	0xFE9
  9432                           wreg	equ	0xFE8
  9433                           indf1	equ	0xFE7
  9434                           fsr1h	equ	0xFE2
  9435                           fsr1l	equ	0xFE1
  9436                           bsr	equ	0xFE0
  9437                           indf2	equ	0xFDF
  9438                           postinc2	equ	0xFDE
  9439                           postdec2	equ	0xFDD
  9440                           fsr2h	equ	0xFDA
  9441                           fsr2l	equ	0xFD9
  9442                           status	equ	0xFD8
  9443                           
  9444 ;; *************** function _in_low_int *****************
  9445 ;; Defined at:
  9446 ;;		line 33 in file "../src/interrupts.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  2    2[BANK0 ] int 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2, status,0, cstack
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9463 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9464 ;;Total ram usage:        2 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; Hardware stack levels required when called:    1
  9467 ;; This function calls:
  9468 ;;		_in_high_int
  9469 ;; This function is called by:
  9470 ;;		_SleepIfOkay
  9471 ;;		_in_main
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           	psect	text56
  9476  00192A                     __ptext56:
  9477                           	opt stack 0
  9478  00192A                     _in_low_int:
  9479                           	opt stack 16
  9480                           
  9481                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9482                           
  9483                           ;incstack = 0
  9484  00192A  ACF2               	btfss	intcon,6,c	;volatile
  9485  00192C  D007               	goto	i2l2469
  9486                           
  9487                           ;interrupts.c: 35: return (0);
  9488  00192E  0E00               	movlw	0
  9489  001930  0100               	movlb	0	; () banked
  9490  001932  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9491  001934  0E00               	movlw	0
  9492  001936  0100               	movlb	0	; () banked
  9493  001938  6F62               	movwf	?_in_low_int& (0+255),b
  9494  00193A  0012               	return	
  9495  00193C                     i2l2469:
  9496  00193C  EC4D  F00E         	call	_in_high_int	;wreg free
  9497  001940  0100               	movlb	0	; () banked
  9498  001942  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  9499  001944  0100               	movlb	0	; () banked
  9500  001946  1160               	iorwf	?_in_high_int& (0+255),w,b
  9501  001948  B4D8               	btfsc	status,2,c
  9502  00194A  D007               	goto	i2l2477
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;interrupts.c: 37: return (0);
  9506  00194C  0E00               	movlw	0
  9507  00194E  0100               	movlb	0	; () banked
  9508  001950  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9509  001952  0E00               	movlw	0
  9510  001954  0100               	movlb	0	; () banked
  9511  001956  6F62               	movwf	?_in_low_int& (0+255),b
  9512  001958  0012               	return	
  9513  00195A                     i2l2477:
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;interrupts.c: 39: return (1);
  9517  00195A  0E00               	movlw	0
  9518  00195C  0100               	movlb	0	; () banked
  9519  00195E  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  9520  001960  0E01               	movlw	1
  9521  001962  0100               	movlb	0	; () banked
  9522  001964  6F62               	movwf	?_in_low_int& (0+255),b
  9523  001966  0012               	return	
  9524  001968                     __end_of_in_low_int:
  9525                           	opt stack 0
  9526                           pclatu	equ	0xFFB
  9527                           pclath	equ	0xFFA
  9528                           tblptru	equ	0xFF8
  9529                           tblptrh	equ	0xFF7
  9530                           tblptrl	equ	0xFF6
  9531                           tablat	equ	0xFF5
  9532                           prodh	equ	0xFF4
  9533                           prodl	equ	0xFF3
  9534                           intcon	equ	0xFF2
  9535                           postinc0	equ	0xFEE
  9536                           fsr0h	equ	0xFEA
  9537                           fsr0l	equ	0xFE9
  9538                           wreg	equ	0xFE8
  9539                           indf1	equ	0xFE7
  9540                           fsr1h	equ	0xFE2
  9541                           fsr1l	equ	0xFE1
  9542                           bsr	equ	0xFE0
  9543                           indf2	equ	0xFDF
  9544                           postinc2	equ	0xFDE
  9545                           postdec2	equ	0xFDD
  9546                           fsr2h	equ	0xFDA
  9547                           fsr2l	equ	0xFD9
  9548                           status	equ	0xFD8
  9549                           
  9550 ;; *************** function _in_high_int *****************
  9551 ;; Defined at:
  9552 ;;		line 25 in file "../src/interrupts.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;		None
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;		None
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  2    0[BANK0 ] int 
  9559 ;; Registers used:
  9560 ;;		wreg, status,2
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9569 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9570 ;;Total ram usage:        2 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; This function calls:
  9573 ;;		Nothing
  9574 ;; This function is called by:
  9575 ;;		_in_low_int
  9576 ;;		_SleepIfOkay
  9577 ;;		_in_main
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text57
  9582  001C9A                     __ptext57:
  9583                           	opt stack 0
  9584  001C9A                     _in_high_int:
  9585                           	opt stack 16
  9586                           
  9587                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;incstack = 0
  9591  001C9A  0E00               	movlw	0
  9592  001C9C  AEF2               	btfss	intcon,7,c	;volatile
  9593  001C9E  0E01               	movlw	1
  9594  001CA0  0100               	movlb	0	; () banked
  9595  001CA2  6F60               	movwf	?_in_high_int& (0+255),b
  9596  001CA4  0100               	movlb	0	; () banked
  9597  001CA6  6B61               	clrf	(?_in_high_int+1)& (0+255),b
  9598  001CA8  0012               	return	
  9599  001CAA                     __end_of_in_high_int:
  9600                           	opt stack 0
  9601                           pclatu	equ	0xFFB
  9602                           pclath	equ	0xFFA
  9603                           tblptru	equ	0xFF8
  9604                           tblptrh	equ	0xFF7
  9605                           tblptrl	equ	0xFF6
  9606                           tablat	equ	0xFF5
  9607                           prodh	equ	0xFF4
  9608                           prodl	equ	0xFF3
  9609                           intcon	equ	0xFF2
  9610                           postinc0	equ	0xFEE
  9611                           fsr0h	equ	0xFEA
  9612                           fsr0l	equ	0xFE9
  9613                           wreg	equ	0xFE8
  9614                           indf1	equ	0xFE7
  9615                           fsr1h	equ	0xFE2
  9616                           fsr1l	equ	0xFE1
  9617                           bsr	equ	0xFE0
  9618                           indf2	equ	0xFDF
  9619                           postinc2	equ	0xFDE
  9620                           postdec2	equ	0xFDD
  9621                           fsr2h	equ	0xFDA
  9622                           fsr2l	equ	0xFD9
  9623                           status	equ	0xFD8
  9624                           
  9625 ;; *************** function _enter_sleep_mode *****************
  9626 ;; Defined at:
  9627 ;;		line 202 in file "../src/messages.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;		None
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;		None
  9632 ;; Return value:  Size  Location     Type
  9633 ;;		None               void
  9634 ;; Registers used:
  9635 ;;		None
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9645 ;;Total ram usage:        0 bytes
  9646 ;; Hardware stack levels used:    1
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		_SleepIfOkay
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654                           	psect	text58
  9655  001D12                     __ptext58:
  9656                           	opt stack 0
  9657  001D12                     _enter_sleep_mode:
  9658                           	opt stack 17
  9659                           
  9660                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;incstack = 0
  9664  001D12  8ED3               	bsf	4051,7,c	;volatile
  9665  001D14  0003               	sleep		;# 
  9666  001D16  0012               	return	
  9667  001D18                     __end_of_enter_sleep_mode:
  9668                           	opt stack 0
  9669                           pclatu	equ	0xFFB
  9670                           pclath	equ	0xFFA
  9671                           tblptru	equ	0xFF8
  9672                           tblptrh	equ	0xFF7
  9673                           tblptrl	equ	0xFF6
  9674                           tablat	equ	0xFF5
  9675                           prodh	equ	0xFF4
  9676                           prodl	equ	0xFF3
  9677                           intcon	equ	0xFF2
  9678                           postinc0	equ	0xFEE
  9679                           fsr0h	equ	0xFEA
  9680                           fsr0l	equ	0xFE9
  9681                           wreg	equ	0xFE8
  9682                           indf1	equ	0xFE7
  9683                           fsr1h	equ	0xFE2
  9684                           fsr1l	equ	0xFE1
  9685                           bsr	equ	0xFE0
  9686                           indf2	equ	0xFDF
  9687                           postinc2	equ	0xFDE
  9688                           postdec2	equ	0xFDD
  9689                           fsr2h	equ	0xFDA
  9690                           fsr2l	equ	0xFD9
  9691                           status	equ	0xFD8
  9692                           
  9693 ;; *************** function _check_msg *****************
  9694 ;; Defined at:
  9695 ;;		line 220 in file "../src/messages.c"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9698 ;;		 -> ToMainHigh_MQ(138), ToMainLow_MQ(138), 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;		None
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      unsigned char 
  9703 ;; Registers used:
  9704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9710 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9712 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9713 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9714 ;;Total ram usage:        3 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		_SleepIfOkay
  9720 ;;		_block_on_To_msgqueues
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           	psect	text59
  9725  001AB8                     __ptext59:
  9726                           	opt stack 0
  9727  001AB8                     _check_msg:
  9728                           	opt stack 17
  9729                           
  9730                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9731                           
  9732                           ;incstack = 0
  9733  001AB8  0100               	movlb	0	; () banked
  9734  001ABA  EE20 F089          	lfsr	2,137
  9735  001ABE  0100               	movlb	0	; () banked
  9736  001AC0  5160               	movf	check_msg@qptr& (0+255),w,b
  9737  001AC2  26D9               	addwf	fsr2l,f,c
  9738  001AC4  0100               	movlb	0	; () banked
  9739  001AC6  5161               	movf	(check_msg@qptr+1)& (0+255),w,b
  9740  001AC8  22DA               	addwfc	fsr2h,f,c
  9741  001ACA  50DF               	movf	indf2,w,c
  9742  001ACC  0100               	movlb	0	; () banked
  9743  001ACE  6F62               	movwf	??_check_msg& (0+255),b
  9744  001AD0  0100               	movlb	0	; () banked
  9745  001AD2  5162               	movf	??_check_msg& (0+255),w,b
  9746  001AD4  0D11               	mullw	17
  9747  001AD6  50F3               	movf	prodl,w,c
  9748  001AD8  0100               	movlb	0	; () banked
  9749  001ADA  2560               	addwf	check_msg@qptr& (0+255),w,b
  9750  001ADC  6ED9               	movwf	fsr2l,c
  9751  001ADE  50F4               	movf	prodh,w,c
  9752  001AE0  0100               	movlb	0	; () banked
  9753  001AE2  2161               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9754  001AE4  6EDA               	movwf	fsr2h,c
  9755  001AE6  50DF               	movf	indf2,w,c
  9756  001AE8  0012               	return	
  9757  001AEA                     __end_of_check_msg:
  9758                           	opt stack 0
  9759  0000                     pclatu	equ	0xFFB
  9760                           pclath	equ	0xFFA
  9761                           tblptru	equ	0xFF8
  9762                           tblptrh	equ	0xFF7
  9763                           tblptrl	equ	0xFF6
  9764                           tablat	equ	0xFF5
  9765                           prodh	equ	0xFF4
  9766                           prodl	equ	0xFF3
  9767                           intcon	equ	0xFF2
  9768                           postinc0	equ	0xFEE
  9769                           fsr0h	equ	0xFEA
  9770                           fsr0l	equ	0xFE9
  9771                           wreg	equ	0xFE8
  9772                           indf1	equ	0xFE7
  9773                           fsr1h	equ	0xFE2
  9774                           fsr1l	equ	0xFE1
  9775                           bsr	equ	0xFE0
  9776                           indf2	equ	0xFDF
  9777                           postinc2	equ	0xFDE
  9778                           postdec2	equ	0xFDD
  9779                           fsr2h	equ	0xFDA
  9780                           fsr2l	equ	0xFD9
  9781                           status	equ	0xFD8
  9782                           pclatu	equ	0xFFB
  9783                           pclath	equ	0xFFA
  9784                           tblptru	equ	0xFF8
  9785                           tblptrh	equ	0xFF7
  9786                           tblptrl	equ	0xFF6
  9787                           tablat	equ	0xFF5
  9788                           prodh	equ	0xFF4
  9789                           prodl	equ	0xFF3
  9790                           intcon	equ	0xFF2
  9791                           postinc0	equ	0xFEE
  9792                           fsr0h	equ	0xFEA
  9793                           fsr0l	equ	0xFE9
  9794                           wreg	equ	0xFE8
  9795                           indf1	equ	0xFE7
  9796                           fsr1h	equ	0xFE2
  9797                           fsr1l	equ	0xFE1
  9798                           bsr	equ	0xFE0
  9799                           indf2	equ	0xFDF
  9800                           postinc2	equ	0xFDE
  9801                           postdec2	equ	0xFDD
  9802                           fsr2h	equ	0xFDA
  9803                           fsr2l	equ	0xFD9
  9804                           status	equ	0xFD8
  9805                           
  9806                           	psect	param0
  9807  0000                     pclatu	equ	0xFFB
  9808                           pclath	equ	0xFFA
  9809                           tblptru	equ	0xFF8
  9810                           tblptrh	equ	0xFF7
  9811                           tblptrl	equ	0xFF6
  9812                           tablat	equ	0xFF5
  9813                           prodh	equ	0xFF4
  9814                           prodl	equ	0xFF3
  9815                           intcon	equ	0xFF2
  9816                           postinc0	equ	0xFEE
  9817                           fsr0h	equ	0xFEA
  9818                           fsr0l	equ	0xFE9
  9819                           wreg	equ	0xFE8
  9820                           indf1	equ	0xFE7
  9821                           fsr1h	equ	0xFE2
  9822                           fsr1l	equ	0xFE1
  9823                           bsr	equ	0xFE0
  9824                           indf2	equ	0xFDF
  9825                           postinc2	equ	0xFDE
  9826                           postdec2	equ	0xFDD
  9827                           fsr2h	equ	0xFDA
  9828                           fsr2l	equ	0xFD9
  9829                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         642
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      95
    BANK0           160     61     118
    BANK1           256    146     160
    BANK2           256      0     138
    BANK3           256      0     138
    BANK4           256      0     138
    BANK5           256      0     138
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    retrieve_sensor_values@sensor_bank_ventril	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_ventril(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_front	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_front(COMRAM[14]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK2[14]), ToMainHigh_MQ.data(BANK3[14]), FromMainLow_MQ.data(BANK4[14]), FromMainHigh_MQ.data(BANK5[14]), 
		 -> ToMainLow_MQ.queue.data(BANK2[14]), ToMainHigh_MQ.queue.data(BANK3[14]), FromMainHigh_MQ.queue.data(BANK5[14]), FromMainLow_MQ.queue.data(BANK4[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@whatever_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), 
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 138
		 -> ToMainLow_MQ.data(BANK2[14]), ToMainHigh_MQ.data(BANK3[14]), FromMainLow_MQ.data(BANK4[14]), FromMainHigh_MQ.data(BANK5[14]), 
		 -> ToMainLow_MQ.queue.data(BANK2[14]), ToMainHigh_MQ.queue.data(BANK3[14]), FromMainHigh_MQ.queue.data(BANK5[14]), FromMainLow_MQ.queue.data(BANK4[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@whatever_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), 
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    uart_frame_message@inner	PTR unsigned char  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    uart_frame_message@outer	PTR unsigned char  size(2) Largest target is 18
		 -> uart_transmit_interrupt_handler@message(BANK0[18]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> timer1_lthread@whatever_msg(BANK1[14]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 

    retrieve_sensor_values@sensor_bank_side	PTR unsigned char  size(2) Largest target is 14
		 -> i2c_int_handler@sensor_bank_side(BANK0[14]), 

    i2c_configure_slave@ptr_thingy	PTR unsigned char  size(2) Largest target is 1
		 -> main@need_sensor_data(BANK1[1]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), main@need_sensor_data(BANK1[1]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@sensor_bank_side(BANK0[14]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> timer1_lthread@whatever_msg(BANK1[14]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 15
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), main@msgbuffer(BANK1[15]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    sp__memcpy	PTR void  size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), i2c_int_handler@sensor_bank_side(BANK0[14]), FromMainHigh_MQ(BANK5[138]), 
		 -> FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), main@msgbuffer(BANK1[15]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), timer1_lthread@whatever_msg(BANK1[14]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_message(COMRAM[3]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@sensor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 138
		 -> FromMainLow_MQ.queue(BANK4[136]), FromMainHigh_MQ.queue(BANK5[136]), ToMainHigh_MQ.queue(BANK3[136]), ToMainLow_MQ.queue(BANK2[136]), 
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 138
		 -> FromMainHigh_MQ(BANK5[138]), FromMainLow_MQ(BANK4[138]), ToMainHigh_MQ(BANK3[138]), ToMainLow_MQ(BANK2[138]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_retrieve_sensor_values
    _retrieve_sensor_values->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                98    98      0   15462
                                             52 BANK1     94    94      0
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      23    15      8    5337
                                             29 BANK1     23    15      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (2) _send_uart_message                                    3     1      2    2510
                                             26 BANK1      3     1      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _FromMainLow_sendmsg                                  4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (4) _send_msg                                            12     6      6    1798
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  3     1      2     127
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2052
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1829
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     158
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    5357
                                             56 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                     16    16      0    1629
                                             29 COMRAM    16    16      0
                _FromMainLow_recvmsg
                 _uart_frame_message
 ---------------------------------------------------------------------------------
 (8) _uart_frame_message                                   8     4      4     528
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4     907
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      30    30      0    2088
                                             26 COMRAM    30    30      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    1640
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    1521
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    5548
                                             47 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    2441
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    12    12      0    2851
                                             37 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                              _blip4
                       _handle_start
             _retrieve_sensor_values
                             i2_blip
                            i2_blip1
                            i2_blip2
                            i2_blip3
 ---------------------------------------------------------------------------------
 (13) i2_blip3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _retrieve_sensor_values                             10     4      6    1246
                                             29 BANK0      8     2      6
               _FromMainHigh_recvmsg
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1013
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7     735
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _blip4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1203
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     713
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
     _blink0
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
     _uart_frame_message

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _blip4
     _handle_start
     _retrieve_sensor_values
       _FromMainHigh_recvmsg
         i2_recv_msg
           i2_memcpy
     i2_blip
     i2_blip1
     i2_blip2
     i2_blip3
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      8A      16       53.9%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      8A      14       53.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8A      12       53.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      8A      10       53.9%
BITBANK1           100      0       0       7        0.0%
BANK1              100     92      A0       8       62.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      76       5       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39D       6        0.0%
DATA                 0      0     39D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 15 17:30:11 2014

                                 ??_debug_configure 0100                     __size_of_retrieve_sensor_values 003A  
                          _MQ_Main_Willing_to_block 00B1                                         _SSPSTATbits 000FC7  
                uart_receive_interrupt_handler@done 004B                           __end_of_ToMainLow_recvmsg 1A4C  
                                                bsr 000FE0                           __end_of_ToMainLow_sendmsg 1C12  
                                      __CFG_CP0$OFF 000000                                   i2recv_msg@msgtype 006D  
                                 i2recv_msg@tlength 0074                                ?_FromMainLow_recvmsg 0019  
                                               l114 0930                                                 l553 1BE8  
                                               l554 1BEA                                                 l581 199A  
                                               l582 199C                                ?_FromMainLow_sendmsg 0116  
                              __size_of_WriteTimer0 0012                                __size_of_WriteTimer1 0012  
                                  ??_uart_configure 0100                                      _FromMainLow_MQ 0400  
                                               prod 000FF3                                                 wreg 000FE8  
                                        _TXSTA1bits 000FAD                                        __CFG_IESO$ON 000000  
                                      ?_in_high_int 0060                                     ReadTimer1@timer 0003  
                               i2recv_msg@maxlength 006C                                                l1130 1788  
                                              l3405 170A                                                l3423 0CFC  
                                              l3363 1884                                                l3357 1864  
                                              l3461 177A                                                l3453 1744  
                                              l3439 0DB6                                                l3455 1750  
                                              l3377 0F26                                                l3457 1756  
                                              l3713 0A42                                                l3705 0A1E  
                                              l3731 0AA2                                                l3725 0A82  
                                              l3661 08AE                                                l3735 0AB8  
                                              l3719 0A62                                                l3671 08EE  
                                              l3655 0888                                                l3665 08BC  
                                              l3739 0AC4                                                l3677 0936  
                                              l3679 094E                                                l3697 09BC  
                                              l3699 09FE                                                _LATB 000F8A  
                                              i1l52 007A                                         main@myByte1 0143  
                                       main@myByte2 0144                                     _FromMainHigh_MQ 0500  
                                              _blip 1CE2                                          i1_recv_msg 1192  
                                              _main 07E2                                                fsr0h 000FEA  
                                              fsr1h 000FE2                                                fsr0l 000FE9  
                                              fsr2h 000FDA                                                indf1 000FE7  
                                              fsr1l 000FE1                                                indf2 000FDF  
                                              fsr2l 000FD9                              __CFG_DSWDTOSC$T1OSCREF 000000  
                                       main@msgtype 016B                                          i1_send_msg 132E  
                                              pclat 000FFA                                                prodh 000FF4  
                                   __end_ofi2_blip1 1D02                                                prodl 000FF3  
                                   __end_ofi2_blip2 1CFA                                     __end_ofi2_blip3 1CF2  
                             handle_start@data_read 0060                                                start 00C0  
                                        i2_recv_msg 0DBA                                          i2_send_msg 0FC4  
                      retrieve_sensor_values@length 0083                           ToMainHigh_recvmsg@msgtype 0118  
                                    send_msg@length 010C                         __size_of_timer0_int_handler 006E  
                                     __CFG_PLLDIV$3 000000              uart_receive_interrupt_handler@checksum 0035  
                             ??_FromMainLow_recvmsg 001D                                               ?_blip 0001  
                             ??_FromMainLow_sendmsg 0119                                               ?_main 0001  
                                             _T0CON 000FD5                                               _T1CON 000FCD  
                                             i1l422 0C80                                     __end_of___lwmod 1792  
                                        i1memcpy@d1 0001                                               i2l310 017A  
                                             i2l304 0602                                               i2l306 0148  
                                             i2l333 043A                                               i2l342 0610  
                                             i2l288 12E2                                          i1memcpy@s1 0003  
                       FromMainHigh_recvmsg@msgtype 0078                                               _TMR0H 000FD7  
                                             _TMR1H 000FCF                                               _TMR0L 000FD6  
                                             _TMR1L 000FCE                                               _TRISB 000F93  
                                             _TRISD 000F95                                          i2memcpy@d1 0060  
                                    __CFG_FCMEN$OFF 000000                                          i2memcpy@s1 0062  
                                      ?_init_queues 0001                           __size_of_enter_sleep_mode 0006  
                                             _blip1 1CDA                                               _blip2 1CD2  
                                             _blip3 1CCA                                               _blip4 1D0A  
                            _retrieve_sensor_values 19A4         uart_receive_interrupt_handler@message_count 0034  
                        ToMainLow_recvmsg@maxlength 011C                                               main@z 0167  
                           timer0_lthread@msgbuffer 0106                                      __CFG_T1DIG$OFF 000000  
                           i2c_configure_slave@addr 0102                                main@need_sensor_data 0164  
                                             tablat 000FF5                             uart_frame_message@inner 0001  
                                             status 000FD8                             uart_frame_message@outer 0003  
                                  __end_ofi1_memcpy 192A                                    __end_ofi2_memcpy 18EA  
                                   __initialization 1586                                        __end_of_blip 1CEA  
                                      __end_of_main 0AFA                                          _ReadTimer1 1C76  
                       __size_of_timer1_int_handler 002C                          __size_of_ToMainLow_recvmsg 0036  
                        __size_of_ToMainLow_sendmsg 0024                       __size_of_FromMainHigh_recvmsg 0036  
                                    __CFG_OSC$HSPLL 000000                       __size_of_FromMainHigh_sendmsg 002E  
                                            ??_blip 0100                                              ??_main 0134  
                                   send_msg@msgtype 010D                                       __activetblptr 000002  
                                   send_msg@tlength 0111                          FromMainLow_sendmsg@msgtype 0116  
                              __end_of_handle_start 132E                                              ?_blip1 0001  
                                            ?_blip2 0001                                              ?_blip3 0001  
                                            ?_blip4 0001                                              _T1GCON 000F9A  
                                         ??i2_blip1 0060                                           ??i2_blip2 0060  
                                         ??i2_blip3 0060                                              i1l3005 1456  
                                            i1l2361 18FC                                              i1l2441 11D8  
                                            i1l2601 1164                                              i1l3173 0070  
                                            i1l2367 1918                                              i1l3167 0066  
                                            i1l2393 1366                                              i1l2457 1260  
                                            i1l2911 0B7C                                              i1l2921 0BAE  
                                            i1l2593 10E8                                              i2l2301 18D4  
                                            i1l2909 0B7A                                              i1l2597 1116  
                                            i1l2599 1136                                              i1l2945 0C38  
                                            i1l2937 0C0C                                              i1l2965 0C94  
                                            i1l2895 0B46                                              i2l2417 1012  
                                            i2l3153 153E                                              i1l2889 0B40  
                                            i1l2897 0B4C                                              i1l2977 1406  
                                        _OpenTimer0 1BC8                                          _OpenTimer1 1968  
                                            i2l2339 0E1A                                              i2l2355 0ED4  
                                            i2l2701 01A6                                      __CFG_WDTEN$OFF 000000  
                                            i2l2295 18B4                                              i2l2703 01D2  
                                            i2l3159 1548                                              i2l2713 020C  
                                            i2l2801 05D6                                              i2l2563 12FE  
                                            i2l2723 024A                                              i2l2477 195A  
                                            i2l2469 193C                                              i2l2565 1316  
                                            i2l2821 06F8                                              i2l2813 0672  
                                            i2l2741 0314                                              i2l2725 028A  
                                            i2l2807 0614                                              i2l2737 030A  
                                            i2l2835 07B0                                              i2l2763 03D0  
                                            i2l2683 0140                                              i2l2829 078A  
                                            i2l2757 0386                                              i2l2677 0132  
                                            i2l2759 03C8                                              i2l2849 179A  
                                            _RCREG1 000FAF                         __end_of_i2c_configure_slave 1A16  
                                     ??_SleepIfOkay 0064                                              _OSCCON 000FD3  
                                            _SPBRG1 000FB0                                         ?i1_recv_msg 000B  
                                            _SSPADD 000FC8                                      __CFG_WPCFG$OFF 000000  
                                            _SSPBUF 000FC9                                              _TXREG1 000FAE  
                                       ?i1_send_msg 000B                                              i2_blip 1D02  
                                timer0_lthread@tptr 0100                                      __CFG_WPDIS$OFF 000000  
                           FromMainLow_recvmsg@data 001B                                         ?i2_recv_msg 006A  
                                       ?i2_send_msg 006A                                      __CFG_XINST$OFF 000000  
                        __end_of_uart_frame_message 1192                    ??_uart_receive_interrupt_handler 001B  
                   ?_uart_receive_interrupt_handler 0001                                     _i2c_int_handler 00C4  
                                            _blink0 1D18                                    OpenTimer0@config 0100  
                                            _ic_ptr 00D4                                           ??___lwmod 0104  
                                     main@msgbuffer 0145                                    __end_of_init_i2c 16CE  
                                  OpenTimer1@config 0102                                              _memcpy 184A  
                                            clear_0 158C                                              clear_1 1598  
                                            clear_2 15A4                                              clear_3 15B0  
                                            clear_4 15BC                                              clear_5 15C8  
                                            clear_6 15D4                                              main@ic 016C  
                                  __end_of_recv_msg 0DBA       uart_transmit_interrupt_handler@message_status 002D  
                                  __end_of_send_msg 0FC4                                        __pdataCOMRAM 005F  
                             timer0_int_handler@val 0081                             i2c_int_handler@i2c_data 008B  
                                            tblptrh 000FF7                                              tblptrl 000FF6  
                                            tblptru 000FF8                uart_receive_interrupt_handler@msg_id 0038  
                                       init_queue@i 0102                uart_receive_interrupt_handler@status 002B  
                          ToMainLow_recvmsg@msgtype 0118                                __size_of_in_high_int 0010  
                           FromMainLow_sendmsg@data 0117                                     _debug_configure 1CB8  
              uart_transmit_interrupt_handler@index 0050                                          __accesstop 0060  
                           __end_of__initialization 15EC                          __end_of_ToMainHigh_recvmsg 1A82  
                        __end_of_ToMainHigh_sendmsg 1B74                                 uart_frame_message@i 0008  
                                   __CFG_IOL1WAY$ON 000000                                __CFG_WPEND$PAGE_WPFP 000000  
                                  _need_sensor_data 00AF             retrieve_sensor_values@sensor_bank_front 007F  
                       __end_of_init_timer1_lthread 1C64                                 __end_of_SleepIfOkay 17F2  
                                    __pcstackCOMRAM 0001                  i2c_int_handler@sensor_bank_ventril 0192  
                                       ?_ReadTimer1 0001                                       __end_of_blip1 1CE2  
                                     __end_of_blip2 1CDA                                       __end_of_blip3 1CD2  
                                     __end_of_blip4 1D12                     send_uart_message@message_q_code 011C  
                                __size_of_check_msg 0032                                     __CFG_DSWDTPS$G2 000000  
                         timer0_int_handler@msgtype 007F                                 __size_ofi1_recv_msg 00D2  
                               __size_ofi1_send_msg 00AA                                           ?i1_memcpy 0001  
                     __size_of_InterruptHandlerHigh 157E                         __end_of_InterruptHandlerLow 00C0  
                                         ?i2_memcpy 0060                                       _ToMainHigh_MQ 0300  
                               __size_ofi2_recv_msg 011E                                    _enter_sleep_mode 1D12  
                               __size_ofi2_send_msg 00EC                                timer1_lthread@length 0121  
                                           ??_blip1 0100                                             ??_blip2 0100  
                                           ??_blip3 0100                                             ??_blip4 0060  
                                     check_msg@qptr 0060                                timer1_lthread@retval 0133  
                              __size_of_init_queues 0058                                          __pbssBANK0 009D  
                                        __pbssBANK1 0192                                          __pbssBANK2 0200  
                                        __pbssBANK3 0300                                          __pbssBANK4 0400  
                                        __pbssBANK5 0500                                         ?_OpenTimer0 0001  
                                       ?_OpenTimer1 0100                                             ?i2_blip 0001  
                           __end_of_i2c_int_handler 07E2                                  timer1_lthread@tptr 011D  
            retrieve_sensor_values@sensor_bank_side 007D                                             ?_blink0 0001  
                                 recv_msg@maxlength 010C                                     recv_msg@msgtype 010D  
                                   recv_msg@tlength 0114                               __size_of_handle_start 00CA  
                                  WriteTimer0@timer 0062                                             ?_memcpy 0100  
                                  WriteTimer1@timer 0003                                       ??_WriteTimer0 0062  
                                     ??_WriteTimer1 0003                             __size_of_timer0_lthread 000E  
                           __size_of_timer1_lthread 008C                             ?_retrieve_sensor_values 007D  
                                        ??i1_memcpy 0007                                          ??i2_memcpy 0066  
                           __end_of_debug_configure 1CC2                                             _SPBRGH1 000F7F  
                                  i1send_msg@length 000D                    i2c_int_handler@sensor_bank_front 0051  
                                           _SSPCON1 000FC6                                             _SSPCON2 000FC5  
                                           _SSPSTAT 000FC7                                 __size_of_ReadTimer1 0012  
                                 __end_of_check_msg 1AEA                                             i2_blip1 1CFA  
                                           i2_blip2 1CF2                                             i2_blip3 1CEA  
                         timer1_lthread@right_speed 00B3                                           ?_init_i2c 0100  
                                       _SleepIfOkay 1792                                   _send_uart_message 1C32  
                   i2c_int_handler@sensor_bank_side 00C6                                     __size_ofi2_blip 0008  
                                         ?_recv_msg 010A                                          _in_low_int 192A  
                                      _handle_start 1264                                             __Hparam 0000  
                                         ?_send_msg 010A                                             __Lparam 0000  
                                ?_send_uart_message 011A           uart_receive_interrupt_handler@status_2231 002C  
                        __end_of_timer0_int_handler 1664                         __end_of_FromMainLow_recvmsg 1BC8  
                       __end_of_FromMainLow_sendmsg 1B18                                             ___lwmod 1732  
                                   __size_of_blink0 0004                                     __CFG_STVREN$OFF 000000  
                               ??_send_uart_message 011C                                             __pcinit 1586  
                                   __size_of_memcpy 0050                                          _init_queue 16CE  
                                           __ramtop 0F00                                 __size_of_OpenTimer0 0026  
                               __size_of_OpenTimer1 003C                                             __ptext0 07E2  
                                           __ptext1 1C12                                             __ptext2 147C  
                                           __ptext3 1C32                                             __ptext4 1AEA  
                                           __ptext5 1D18                                             __ptext6 1732  
                                           __ptext7 1B18                                             __ptext8 0ED8  
                                           __ptext9 1CAA                      __end_of_retrieve_sensor_values 19DE  
                                         _T0CONbits 000FD5                                   OpenTimer1@config1 0100  
                                         _T1CONbits 000FCD                       i2c_configure_slave@ptr_thingy 0100  
                               __end_of_WriteTimer0 1C9A                                 __end_of_WriteTimer1 1C76  
                                           main@jjj 0165                                      __pintcode_body 1508  
                      __end_of_FromMainHigh_recvmsg 1AB8                                end_of_initialization 15EC  
                           timer1_lthread@msgbuffer 0123                        __end_of_FromMainHigh_sendmsg 1B46  
                        FromMainHigh_sendmsg@length 0119                           __end_of_send_uart_message 1C52  
                                           memcpy@d 0106                                             memcpy@n 0104  
                                           memcpy@s 0108                                          ??_init_i2c 0102  
                                      ??i1_recv_msg 0012                             __size_of_uart_configure 0020  
                       i2c_int_handler@data_written 0089                                       __Lmediumconst 0000  
                                           int_func 1508                                        ??i1_send_msg 0011  
          uart_receive_interrupt_handler@bad_end_id 0033          uart_receive_interrupt_handler@bad_start_id 0032  
                                  ?_i2c_int_handler 0001                                        ??i2_recv_msg 0071  
                                        ??_recv_msg 0111                                        ??i2_send_msg 0070  
                                        ??_send_msg 0110     uart_receive_interrupt_handler@gooey_uart_center 001D  
                        __end_of_timer1_int_handler 1BA0                                             postdec2 000FDD  
                                           postinc0 000FEE                                             postinc2 000FDE  
                         ToMainHigh_sendmsg@msgtype 0076                                           _PORTBbits 000F81  
                        timer1_lthread@whatever_msg 0125                                    __CFG_DSBOREN$OFF 000000  
                                _uart_frame_message 10B0                                  __end_ofi1_recv_msg 1264  
                                  __CFG_CPUDIV$OSC1 000000                                  __end_ofi1_send_msg 13D8  
                       FromMainHigh_sendmsg@msgtype 0116              __end_of_uart_receive_interrupt_handler 0C9C  
           __size_of_uart_receive_interrupt_handler 01A2                      _uart_receive_interrupt_handler 0AFA  
                                  ?_debug_configure 0001                                           _TRISBbits 000F93  
                                         _TRISCbits 000F94                                  __end_ofi2_recv_msg 0ED8  
                                __end_ofi2_send_msg 10B0                                 ?_uart_frame_message 0001  
                     FromMainHigh_recvmsg@maxlength 007C                            timer1_int_handler@result 001B  
                                 __CFG_WPFP$PAGE_63 000000                                          main@length 016A  
                                       ?_in_low_int 0062                                      __end_ofi2_blip 1D0A  
                             timer0_lthread@msgtype 0102                                 __CFG_MSSP7B_EN$MSK7 000000  
                      __size_of_i2c_configure_slave 0038                            __end_of_enter_sleep_mode 1D18  
                                      ??_ReadTimer1 0003                                ??_uart_frame_message 0005  
                                _ToMainHigh_recvmsg 1A4C                                           i1memcpy@d 0007  
                                _ToMainHigh_sendmsg 1B46                                           i1memcpy@n 0005  
                                         i1memcpy@s 0009                                         _BAUDCONbits 000F7E  
                                    __end_of_blink0 1D1C                                       __pidataCOMRAM 1D1C  
                                    _timer0_lthread 1CAA                                         ?_init_queue 0100  
                                         i2memcpy@d 0066                                         _WriteTimer0 1C88  
                                       _WriteTimer1 1C64                                           i2memcpy@n 0064  
                                         i2memcpy@s 0068                                      _timer1_lthread 147C  
                                    __end_of_memcpy 189A                                   _enable_interrupts 1CC2  
                                  __CFG_DSWDTEN$OFF 000000                                 ?_ToMainHigh_recvmsg 0118  
                          i2c_int_handler@data_read 008E                                 ?_ToMainHigh_sendmsg 0076  
                                ?_enable_interrupts 0001                                 start_initialization 1586  
                                     ??_in_high_int 0062        uart_receive_interrupt_handler@start_byte_bad 004F  
                                 __size_ofi1_memcpy 0040                                   __size_ofi2_memcpy 0050  
                         FromMainLow_sendmsg@length 0119                                 ??_enable_interrupts 0100  
                                      ??_OpenTimer0 0100                                        ??_OpenTimer1 0101  
                                __end_of_ReadTimer1 1C88                     uart_receive_interrupt_handler@i 0036  
                        __size_of_send_uart_message 0020                                   main@uart_response 0156  
            uart_transmit_interrupt_handler@message 00B4                                            ??i2_blip 0060  
                      __end_of_InterruptHandlerHigh 1586                                          init_i2c@ic 0100  
                              ??_ToMainHigh_recvmsg 011C                                ??_ToMainHigh_sendmsg 0079  
            uart_transmit_interrupt_handler@msgtype 002C                              __end_of_timer0_lthread 1CB8  
                                          ??_blink0 0100                            i2c_int_handler@error_buf 0086  
                            __end_of_timer1_lthread 1508                                    __CFG_LPT1OSC$OFF 000000  
                         __end_of_enable_interrupts 1CCA                                            ??_memcpy 0106  
                             timer1_lthread@msgtype 011F                                _FromMainHigh_recvmsg 1A82  
uart_receive_interrupt_handler@bad_checksum_message 002D                 uart_receive_interrupt_handler@frame 009D  
               uart_receive_interrupt_handler@index 004D                                _FromMainHigh_sendmsg 1B18  
               uart_receive_interrupt_handler@error 004C                        __size_of_init_timer1_lthread 0012  
                                __end_of_OpenTimer0 1BEE                                  __end_of_OpenTimer1 19A4  
                          i2c_int_handler@msg_ready 008D                                         __pbssCOMRAM 004A  
                                     ??_init_queues 0103                                       __pcstackBANK0 0060  
                                     __pcstackBANK1 0100                                 __size_of_in_low_int 003E  
                                          ?i2_blip1 0001                                            ?i2_blip2 0001  
                                          ?i2_blip3 0001                            ToMainLow_sendmsg@msgtype 0017  
                      __size_of_InterruptHandlerLow 00A8                                 __end_of_in_high_int 1CAA  
                                    _uart_configure 1C12                                        ?_SleepIfOkay 0001  
                             ToMainLow_recvmsg@data 011A                                        _ToMainLow_MQ 0200  
                               __size_of_init_queue 0064                                           _check_msg 1AB8  
                                         __pnvBANK0 00D4                                   __size_of_init_i2c 006A  
                                      recv_msg@data 010F                                        recv_msg@qmsg 0116  
                                      recv_msg@slot 0113                                        recv_msg@qptr 010A  
                                 __size_of_recv_msg 011E                                           __pintcode 0008  
                                 __size_of_send_msg 00EC                                     ?_timer0_lthread 0100  
                                          ?___lwmod 0100                               ?_FromMainHigh_recvmsg 0078  
                                   ?_timer1_lthread 011D                               ?_FromMainHigh_sendmsg 0116  
                                       __pintcodelo 0018                              ToMainHigh_recvmsg@data 011A  
                        i2c_int_handler@msg_to_send 008C                                   WriteTimer0@timer0 0060  
                                _timer0_int_handler 15F6                          uart_frame_message@checksum 0007  
                                 WriteTimer1@timer1 0001                                __CFG_RTCOSC$T1OSCREF 000000  
                             ToMainLow_sendmsg@data 0018                                      __size_of_blip1 0008  
                                    __size_of_blip2 0008                                      __size_of_blip3 0008  
                                    __size_of_blip4 0008                              __end_of_uart_configure 1C32  
                               i1recv_msg@maxlength 000D                                 ?_timer0_int_handler 0001  
      uart_receive_interrupt_handler@bad_counter_id 0030                                 __end_of_init_queues 184A  
                                          _LATBbits 000F8A                                            _LATDbits 000F8C  
                                        ?_check_msg 0060                                            _IPR1bits 000F9F  
                                          _PIE1bits 000F9D                       retrieve_sensor_values@msgtype 0084  
                                          _PIR1bits 000F9E                              ToMainHigh_sendmsg@data 0077  
                                          _RCONbits 000FD0                                    __CFG_WDTPS$32768 000000  
                                    i1recv_msg@data 0010                                ??_timer0_int_handler 007D  
                                    i1recv_msg@qmsg 0017                                      i1recv_msg@slot 0014  
                                    i1recv_msg@qptr 000B      uart_receive_interrupt_handler@received_counter 004E  
                      FromMainLow_recvmsg@maxlength 001D                          __size_of_enable_interrupts 0008  
                                 i1send_msg@msgtype 000E                                   i1send_msg@tlength 0012  
                        FromMainLow_recvmsg@msgtype 0019                        __size_of_FromMainLow_recvmsg 0028  
                      __size_of_FromMainLow_sendmsg 002E                                timer0_lthread@length 0104  
                                _timer1_int_handler 1B74                                            i1_memcpy 18EA  
                              _InterruptHandlerHigh 0008                                            i2_memcpy 189A  
                              timer0_lthread@msgval 0108                            FromMainHigh_recvmsg@data 007A  
                                       _in_high_int 1C9A                                        send_msg@data 010E  
                               _i2c_configure_slave 19DE                                        send_msg@qmsg 0114  
                                      send_msg@slot 0113                                        send_msg@qptr 010A  
                                   ?_uart_configure 0001                                 ?_timer1_int_handler 0001  
                                  __size_ofi2_blip1 0008                                    __size_ofi2_blip2 0008  
                                  __size_ofi2_blip3 0008                                            __Hparam0 0000  
                                      ??_in_low_int 0064                                            __Lparam0 0000  
                              ?_i2c_configure_slave 0100                                   ?_enter_sleep_mode 0001  
                            ??_FromMainHigh_recvmsg 007C                              ??_FromMainHigh_sendmsg 0119  
                              ??_timer1_int_handler 001B             __end_of_uart_transmit_interrupt_handler 147C  
          __size_of_uart_transmit_interrupt_handler 00A4                   ??_uart_transmit_interrupt_handler 001E  
                  ?_uart_transmit_interrupt_handler 0001                     _uart_transmit_interrupt_handler 13D8  
                          __size_of_i2c_int_handler 071E                                  ??_enter_sleep_mode 0060  
                                  __size_of___lwmod 0060                                        ??_init_queue 0102  
                                      ?_WriteTimer0 0060                                        ?_WriteTimer1 0001  
                          FromMainHigh_sendmsg@data 0117                             ToMainLow_sendmsg@length 001A  
                                 main@t0thread_data 0154                      uart_frame_message@sent_counter 004A  
                             ?_InterruptHandlerHigh 0001                 uart_transmit_interrupt_handler@data 001E  
               uart_transmit_interrupt_handler@done 005F                            timer1_lthread@left_speed 00B2  
                                 i2send_msg@msgtype 006D                         ToMainHigh_recvmsg@maxlength 011C  
                                 i2send_msg@tlength 0071                             init_timer1_lthread@tptr 0100  
                                       _init_queues 17F2                                  __end_of_in_low_int 1968  
                                          __ptext10 1C52                                            __ptext11 17F2  
                                          __ptext20 1CE2                                            __ptext12 16CE  
                                          __ptext21 1A16                                            __ptext13 1664  
                                        _T1GCONbits 000F9A                                            __ptext30 1BA0  
                                          __ptext22 1A4C                                            __ptext14 19DE  
                                          __ptext31 1192                                            __ptext23 0C9C  
                                          __ptext15 1CC2                                            __ptext40 15F6  
                                          __ptext32 0AFA                                            __ptext24 184A  
                                          __ptext16 1CB8                                            __ptext41 1C88  
                                          __ptext33 1B74                                            __ptext25 1968  
                                          __ptext17 1CCA                                            __ptext50 1264  
                                          __ptext42 00C4                                            __ptext34 1C64  
                                          __ptext26 1BC8                                            __ptext18 1CD2  
                                          __ptext51 1D0A                                            __ptext43 1CEA  
                                          __ptext35 1BEE                                            __ptext19 1CDA  
                                          __ptext52 1B46                                            __ptext44 1CF2  
                                          __ptext36 132E                                            __ptext28 13D8  
                                          __ptext53 0FC4                                            __ptext45 1CFA  
                                          __ptext37 18EA                                            __ptext29 10B0  
                                          __ptext54 189A                                            __ptext46 1D02  
                                          __ptext38 1C76                                            __ptext55 1792  
                                          __ptext47 19A4                                            __ptext56 192A  
                                          __ptext48 1A82                                            __ptext57 1C9A  
                                          __ptext49 0DBA                                            __ptext58 1D12  
                                          __ptext59 1AB8                                      i1send_msg@data 000F  
                                    i1send_msg@qmsg 0015                                      i1send_msg@slot 0014  
                                    i1send_msg@qptr 000B                            timer0_int_handler@length 007D  
         retrieve_sensor_values@sensor_bank_ventril 0081                                            _init_i2c 1664  
                          __size_of_debug_configure 000A                                 _init_timer1_lthread 1C52  
                                     __size_of_blip 0008                                       __size_of_main 0318  
                                 main@t1thread_data 0168                                         ??_check_msg 0062  
                                __end_of_init_queue 1732                                __size_of_SleepIfOkay 0060  
                                          _recv_msg 0C9C                               ??_i2c_configure_slave 0102  
                                          _send_msg 0ED8                                      init_queue@qptr 0100  
                          ??_retrieve_sensor_values 0083                                      i2recv_msg@data 006F  
                       __size_of_uart_frame_message 00E2                                      i2recv_msg@qmsg 0076  
                                    i2recv_msg@slot 0073                                      i2recv_msg@qptr 006A  
                                      _SSP1STATbits 000FC7                                 _InterruptHandlerLow 0018  
                              ?_init_timer1_lthread 0100                                     main@sensor_data 0134  
                                       _OSCTUNEbits 000F9B                                          _INTCONbits 000FF2  
                                          memcpy@d1 0100                                            memcpy@s1 0102  
                      i2c_int_handler@overrun_error 008A                                    i2send_msg@length 006C  
                                          intlevel1 0000                                            intlevel2 0000  
                              ?_InterruptHandlerLow 0001                        send_uart_message@message_ptr 011A  
                                  ___lwmod@dividend 0100                                          _RCSTA1bits 000FAC  
                                     ?_handle_start 0001                                    ??_timer0_lthread 0108  
                       __size_of_ToMainHigh_recvmsg 0036                         __size_of_ToMainHigh_sendmsg 002E  
                                        _OSCCONbits 000FD3                                    ??_timer1_lthread 0125  
                                 i1recv_msg@msgtype 000E                                   i1recv_msg@tlength 0015  
                          ToMainHigh_sendmsg@length 0079                               ??_init_timer1_lthread 0102  
                            ??_InterruptHandlerHigh 008F                                   _ToMainLow_recvmsg 1A16  
                                 _ToMainLow_sendmsg 1BEE                                  main@last_reg_recvd 0142  
                                   ___lwmod@divisor 0102                                  ?_ToMainLow_recvmsg 0118  
                                 ??_i2c_int_handler 0085                                     ___lwmod@counter 0104  
                                ?_ToMainLow_sendmsg 0017                                         _SSPCON1bits 000FC6  
                                       _SSPCON2bits 000FC5                                      i2send_msg@data 006E  
                             ??_InterruptHandlerLow 0039                                 ??_ToMainLow_recvmsg 011C  
                                    i2send_msg@qmsg 0074                                      i2send_msg@slot 0073  
                                    i2send_msg@qptr 006A                                 ??_ToMainLow_sendmsg 001A  
                               _FromMainLow_recvmsg 1BA0                                      ??_handle_start 0060  
                               _FromMainLow_sendmsg 1AEA  
