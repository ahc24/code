

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Oct 17 15:11:56 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	param0,global,class=BANK0,space=1,delta=1
    81  0000                     
    82                           	psect	idataCOMRAM
    83  001DEC                     __pidataCOMRAM:
    84                           	opt stack 0
    85                           
    86                           ;initializer for uart_transmit_interrupt_handler@done
    87  001DEC  01                 	db	1
    88  0000                     _BAUDCONbits	set	4024
    89  0000                     _INTCONbits	set	4082
    90  0000                     _IPR1bits	set	3999
    91  0000                     _LATB	set	3978
    92  0000                     _LATBbits	set	3978
    93  0000                     _LATDbits	set	3980
    94  0000                     _OSCCON	set	4051
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _OSCTUNEbits	set	3995
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PIR1bits	set	3998
    99  0000                     _RCONbits	set	4048
   100  0000                     _RCREG1	set	4014
   101  0000                     _RCSTA1bits	set	4011
   102  0000                     _SPBRG	set	4015
   103  0000                     _SPBRGH	set	4016
   104  0000                     _SSP1STATbits	set	4039
   105  0000                     _SSPADD	set	4040
   106  0000                     _SSPBUF	set	4041
   107  0000                     _SSPCON1	set	4038
   108  0000                     _SSPCON1bits	set	4038
   109  0000                     _SSPCON2	set	4037
   110  0000                     _SSPCON2bits	set	4037
   111  0000                     _SSPSTAT	set	4039
   112  0000                     _SSPSTATbits	set	4039
   113  0000                     _T0CON	set	4053
   114  0000                     _T0CONbits	set	4053
   115  0000                     _T1CON	set	4045
   116  0000                     _T1CONbits	set	4045
   117  0000                     _TMR0H	set	4055
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR1H	set	4047
   120  0000                     _TMR1L	set	4046
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISBbits	set	3987
   123  0000                     _TRISCbits	set	3988
   124  0000                     _TRISD	set	3989
   125  0000                     _TXREG1	set	4013
   126  0000                     _TXSTA1bits	set	4012
   127                           
   128                           	psect	nvBANK0
   129  0000C5                     __pnvBANK0:
   130                           	opt stack 0
   131  0000C5                     _ic_ptr:
   132                           	opt stack 0
   133  0000C5                     	ds	2
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  00192E                     __pcinit:
   139                           	opt stack 0
   140  00192E                     start_initialization:
   141                           	opt stack 0
   142  00192E                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK3 (87 bytes)
   146  00192E  EE03  F000         	lfsr	0,__pbssBANK3
   147  001932  0E57               	movlw	87
   148  001934                     clear_0:
   149  001934  6AEE               	clrf	postinc0,c
   150  001936  06E8               	decf	wreg,f,c
   151  001938  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK2 (174 bytes)
   154  00193A  EE02  F000         	lfsr	0,__pbssBANK2
   155  00193E  0EAE               	movlw	174
   156  001940                     clear_1:
   157  001940  6AEE               	clrf	postinc0,c
   158  001942  06E8               	decf	wreg,f,c
   159  001944  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK1 (87 bytes)
   162  001946  EE01  F062         	lfsr	0,__pbssBANK1
   163  00194A  0E57               	movlw	87
   164  00194C                     clear_2:
   165  00194C  6AEE               	clrf	postinc0,c
   166  00194E  06E8               	decf	wreg,f,c
   167  001950  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to BANK0 (1 bytes)
   170  001952  0100               	movlb	0
   171  001954  6BC7               	clrf	__pbssBANK0& (0+255),b
   172                           
   173                           ; Clear objects allocated to COMRAM (27 bytes)
   174  001956  EE00  F048         	lfsr	0,__pbssCOMRAM
   175  00195A  0E1B               	movlw	27
   176  00195C                     clear_3:
   177  00195C  6AEE               	clrf	postinc0,c
   178  00195E  06E8               	decf	wreg,f,c
   179  001960  E1FD               	bnz	clear_3
   180                           
   181                           ; Initialize objects allocated to COMRAM (1 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  001962  0EEC               	movlw	low __pidataCOMRAM
   184  001964  6EF6               	movwf	tblptrl,c
   185  001966  0E1D               	movlw	high __pidataCOMRAM
   186  001968  6EF7               	movwf	tblptrh,c
   187  00196A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  00196C  6EF8               	movwf	tblptru,c
   189  00196E  0009               	tblrd		*+	;fetch initializer
   190  001970  CFF5 F063          	movff	tablat,__pdataCOMRAM
   191  001974                     end_of_initialization:
   192                           	opt stack 0
   193  001974                     __end_of__initialization:
   194                           	opt stack 0
   195  001974  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  001976  6EF8               	movwf	tblptru,c
   197  001978  0100               	movlb	0
   198  00197A  EF71  F003         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           
   206                           	psect	bssCOMRAM
   207  000048                     __pbssCOMRAM:
   208                           	opt stack 0
   209  000048                     uart_receive_interrupt_handler@frame:
   210                           	opt stack 0
   211  000048                     	ds	18
   212  00005A                     _need_sensor_data:
   213                           	opt stack 0
   214  00005A                     	ds	2
   215  00005C                     uart_frame_message@sent_counter:
   216                           	opt stack 0
   217  00005C                     	ds	1
   218  00005D                     uart_receive_interrupt_handler@done:
   219                           	opt stack 0
   220  00005D                     	ds	1
   221  00005E                     uart_receive_interrupt_handler@error:
   222                           	opt stack 0
   223  00005E                     	ds	1
   224  00005F                     uart_receive_interrupt_handler@index:
   225                           	opt stack 0
   226  00005F                     	ds	1
   227  000060                     uart_receive_interrupt_handler@received_counter:
   228                           	opt stack 0
   229  000060                     	ds	1
   230  000061                     uart_receive_interrupt_handler@start_byte_bad:
   231                           	opt stack 0
   232  000061                     	ds	1
   233  000062                     uart_transmit_interrupt_handler@index:
   234                           	opt stack 0
   235  000062                     	ds	1
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           
   243                           	psect	dataCOMRAM
   244  000063                     __pdataCOMRAM:
   245                           	opt stack 0
   246  000063                     uart_transmit_interrupt_handler@done:
   247                           	opt stack 0
   248  000063                     	ds	1
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           
   256                           	psect	bssBANK0
   257  0000C7                     __pbssBANK0:
   258                           	opt stack 0
   259  0000C7                     _MQ_Main_Willing_to_block:
   260                           	opt stack 0
   261  0000C7                     	ds	1
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           
   269                           	psect	bssBANK1
   270  000162                     __pbssBANK1:
   271                           	opt stack 0
   272  000162                     _ToMainLow_MQ:
   273                           	opt stack 0
   274  000162                     	ds	87
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	bssBANK2
   283  000200                     __pbssBANK2:
   284                           	opt stack 0
   285  000200                     _FromMainLow_MQ:
   286                           	opt stack 0
   287  000200                     	ds	87
   288  000257                     _ToMainHigh_MQ:
   289                           	opt stack 0
   290  000257                     	ds	87
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           
   298                           	psect	bssBANK3
   299  000300                     __pbssBANK3:
   300                           	opt stack 0
   301  000300                     _FromMainHigh_MQ:
   302                           	opt stack 0
   303  000300                     	ds	87
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           
   311                           	psect	cstackBANK1
   312  000100                     __pcstackBANK1:
   313                           	opt stack 0
   314  000100                     send_msg@qptr:
   315                           	opt stack 0
   316  000100                     recv_msg@qptr:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x0
   320  000100                     	ds	2
   321  000102                     send_msg@length:
   322                           	opt stack 0
   323  000102                     recv_msg@maxlength:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x2
   327  000102                     	ds	1
   328  000103                     send_msg@msgtype:
   329                           	opt stack 0
   330  000103                     recv_msg@msgtype:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x3
   334  000103                     	ds	1
   335  000104                     send_msg@data:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x4
   339  000104                     	ds	1
   340  000105                     recv_msg@data:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x5
   344  000105                     	ds	1
   345  000106                     send_msg@tlength:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x6
   349  000106                     	ds	1
   350  000107                     recv_msg@slot:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x7
   354  000107                     	ds	1
   355  000108                     send_msg@slot:
   356                           	opt stack 0
   357  000108                     recv_msg@tlength:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x8
   361  000108                     	ds	1
   362  000109                     send_msg@qmsg:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x9
   366  000109                     	ds	1
   367  00010A                     recv_msg@qmsg:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0xA
   371  00010A                     	ds	1
   372  00010B                     FromMainLow_sendmsg@msgtype:
   373                           	opt stack 0
   374  00010B                     FromMainHigh_sendmsg@msgtype:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0xB
   378  00010B                     	ds	1
   379  00010C                     ToMainLow_recvmsg@msgtype:
   380                           	opt stack 0
   381  00010C                     ToMainHigh_recvmsg@msgtype:
   382                           	opt stack 0
   383  00010C                     FromMainLow_sendmsg@data:
   384                           	opt stack 0
   385  00010C                     FromMainHigh_sendmsg@data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0xC
   389  00010C                     	ds	2
   390  00010E                     ToMainLow_recvmsg@data:
   391                           	opt stack 0
   392  00010E                     ToMainHigh_recvmsg@data:
   393                           	opt stack 0
   394  00010E                     send_uart_message@message_ptr:
   395                           	opt stack 0
   396  00010E                     timer1_lthread@tptr:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0xE
   400  00010E                     	ds	2
   401  000110                     i_like_to_moveit_moveit@right_side_speed:
   402                           	opt stack 0
   403  000110                     timer1_lthread@msgtype:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407  000110                     	ds	1
   408  000111                     i_like_to_moveit_moveit@left_side_speed:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x11
   412  000111                     	ds	1
   413  000112                     timer1_lthread@length:
   414                           	opt stack 0
   415  000112                     i_like_to_moveit_moveit@moves:
   416                           	opt stack 0
   417                           
   418                           ; 4 bytes @ 0x12
   419  000112                     	ds	2
   420  000114                     timer1_lthread@msgbuffer:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x14
   424  000114                     	ds	2
   425  000116                     main@motor_data:
   426                           	opt stack 0
   427                           
   428                           ; 14 bytes @ 0x16
   429  000116                     	ds	14
   430  000124                     main@msgbuffer:
   431                           	opt stack 0
   432                           
   433                           ; 15 bytes @ 0x24
   434  000124                     	ds	15
   435  000133                     main@last_reg_recvd:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x33
   439  000133                     	ds	1
   440  000134                     main@need_sensor_data:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x34
   444  000134                     	ds	1
   445  000135                     main@t0thread_data:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x35
   449  000135                     	ds	2
   450  000137                     main@poop:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x37
   454  000137                     	ds	1
   455  000138                     main@t1thread_data:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x38
   459  000138                     	ds	2
   460  00013A                     main@length:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x3A
   464  00013A                     	ds	1
   465  00013B                     main@msgtype:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x3B
   469  00013B                     	ds	1
   470  00013C                     main@ic:
   471                           	opt stack 0
   472                           
   473                           ; 38 bytes @ 0x3C
   474  00013C                     	ds	38
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           
   482                           	psect	cstackBANK0
   483  000080                     __pcstackBANK0:
   484                           	opt stack 0
   485  000080                     ?_in_high_int:
   486                           	opt stack 0
   487  000080                     ?i2___awmod:
   488                           	opt stack 0
   489  000080                     handle_start@data_read:
   490                           	opt stack 0
   491  000080                     check_msg@qptr:
   492                           	opt stack 0
   493  000080                     start_i2c_slave_reply@msg:
   494                           	opt stack 0
   495  000080                     WriteTimer0@timer0:
   496                           	opt stack 0
   497  000080                     i2memcpy@d1:
   498                           	opt stack 0
   499  000080                     i2___awmod@dividend:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x0
   503  000080                     	ds	2
   504  000082                     ??_check_msg:
   505  000082                     ??_start_i2c_slave_reply:
   506  000082                     ?_in_low_int:
   507                           	opt stack 0
   508  000082                     WriteTimer0@timer:
   509                           	opt stack 0
   510  000082                     i2memcpy@s1:
   511                           	opt stack 0
   512  000082                     i2___awmod@divisor:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x2
   516  000082                     	ds	2
   517  000084                     start_i2c_slave_reply@length:
   518                           	opt stack 0
   519  000084                     i2___awmod@counter:
   520                           	opt stack 0
   521  000084                     i2memcpy@n:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x4
   525  000084                     	ds	1
   526  000085                     i2___awmod@sign:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x5
   530  000085                     	ds	1
   531  000086                     i2memcpy@d:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x6
   535  000086                     	ds	2
   536  000088                     i2memcpy@s:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x8
   540  000088                     	ds	2
   541  00008A                     i2send_msg@qptr:
   542                           	opt stack 0
   543  00008A                     i2recv_msg@qptr:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0xA
   547  00008A                     	ds	2
   548  00008C                     i2send_msg@length:
   549                           	opt stack 0
   550  00008C                     i2recv_msg@maxlength:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0xC
   554  00008C                     	ds	1
   555  00008D                     i2send_msg@msgtype:
   556                           	opt stack 0
   557  00008D                     i2recv_msg@msgtype:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0xD
   561  00008D                     	ds	1
   562  00008E                     i2send_msg@data:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0xE
   566  00008E                     	ds	1
   567  00008F                     i2recv_msg@data:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0xF
   571  00008F                     	ds	1
   572  000090                     ??i2_send_msg:
   573                           
   574                           ; 0 bytes @ 0x10
   575  000090                     	ds	1
   576  000091                     ??i2_recv_msg:
   577  000091                     i2send_msg@tlength:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x11
   581  000091                     	ds	2
   582  000093                     i2send_msg@slot:
   583                           	opt stack 0
   584  000093                     i2recv_msg@slot:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x13
   588  000093                     	ds	1
   589  000094                     i2send_msg@qmsg:
   590                           	opt stack 0
   591  000094                     i2recv_msg@tlength:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x14
   595  000094                     	ds	2
   596  000096                     ToMainHigh_sendmsg@msgtype:
   597                           	opt stack 0
   598  000096                     i2recv_msg@qmsg:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x16
   602  000096                     	ds	1
   603  000097                     ToMainHigh_sendmsg@data:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x17
   607  000097                     	ds	1
   608  000098                     FromMainHigh_recvmsg@msgtype:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x18
   612  000098                     	ds	1
   613  000099                     ToMainHigh_sendmsg@length:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x19
   617  000099                     	ds	1
   618  00009A                     FromMainHigh_recvmsg@data:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x1A
   622  00009A                     	ds	2
   623  00009C                     FromMainHigh_recvmsg@maxlength:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x1C
   627  00009C                     	ds	1
   628  00009D                     ??_i2c_int_handler:
   629  00009D                     timer0_int_handler@length:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x1D
   633  00009D                     	ds	1
   634  00009E                     i2c_int_handler@length:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x1E
   638  00009E                     	ds	1
   639  00009F                     timer0_int_handler@msgtype:
   640                           	opt stack 0
   641  00009F                     i2c_int_handler@error_buf:
   642                           	opt stack 0
   643                           
   644                           ; 3 bytes @ 0x1F
   645  00009F                     	ds	2
   646  0000A1                     timer0_int_handler@val:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x21
   650  0000A1                     	ds	1
   651  0000A2                     i2c_int_handler@data_written:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x22
   655  0000A2                     	ds	1
   656  0000A3                     i2c_int_handler@overrun_error:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x23
   660  0000A3                     	ds	1
   661  0000A4                     i2c_int_handler@need_data:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x24
   665  0000A4                     	ds	1
   666  0000A5                     i2c_int_handler@i2c_data:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x25
   670  0000A5                     	ds	1
   671  0000A6                     i2c_int_handler@msg_to_send:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x26
   675  0000A6                     	ds	1
   676  0000A7                     i2c_int_handler@msg_type:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x27
   680  0000A7                     	ds	1
   681  0000A8                     i2c_int_handler@msg_ready:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x28
   685  0000A8                     	ds	1
   686  0000A9                     i2c_int_handler@data_read:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x29
   690  0000A9                     	ds	1
   691  0000AA                     ??_InterruptHandlerHigh:
   692                           
   693                           ; 0 bytes @ 0x2A
   694  0000AA                     	ds	14
   695  0000B8                     ?___awmod:
   696                           	opt stack 0
   697  0000B8                     ?___lwmod:
   698                           	opt stack 0
   699  0000B8                     i2c_configure_slave@addr:
   700                           	opt stack 0
   701  0000B8                     OpenTimer0@config:
   702                           	opt stack 0
   703  0000B8                     OpenTimer1@config:
   704                           	opt stack 0
   705  0000B8                     init_queue@qptr:
   706                           	opt stack 0
   707  0000B8                     init_i2c@ic:
   708                           	opt stack 0
   709  0000B8                     timer0_lthread@tptr:
   710                           	opt stack 0
   711  0000B8                     init_timer1_lthread@tptr:
   712                           	opt stack 0
   713  0000B8                     ___awmod@dividend:
   714                           	opt stack 0
   715  0000B8                     ___lwmod@dividend:
   716                           	opt stack 0
   717  0000B8                     memcpy@d1:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x38
   721  0000B8                     	ds	2
   722  0000BA                     init_queue@i:
   723                           	opt stack 0
   724  0000BA                     timer0_lthread@msgtype:
   725                           	opt stack 0
   726  0000BA                     ___awmod@divisor:
   727                           	opt stack 0
   728  0000BA                     ___lwmod@divisor:
   729                           	opt stack 0
   730  0000BA                     memcpy@s1:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x3A
   734  0000BA                     	ds	1
   735  0000BB                     
   736                           ; 0 bytes @ 0x3B
   737  0000BB                     	ds	1
   738  0000BC                     ___awmod@counter:
   739                           	opt stack 0
   740  0000BC                     ___lwmod@counter:
   741                           	opt stack 0
   742  0000BC                     timer0_lthread@length:
   743                           	opt stack 0
   744  0000BC                     memcpy@n:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x3C
   748  0000BC                     	ds	1
   749  0000BD                     ___awmod@sign:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x3D
   753  0000BD                     	ds	1
   754  0000BE                     timer0_lthread@msgbuffer:
   755                           	opt stack 0
   756  0000BE                     memcpy@d:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x3E
   760  0000BE                     	ds	2
   761  0000C0                     timer0_lthread@msgval:
   762                           	opt stack 0
   763  0000C0                     memcpy@s:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x40
   767  0000C0                     	ds	2
   768  0000C2                     ??_send_msg:
   769  0000C2                     ??_recv_msg:
   770                           
   771                           ; 0 bytes @ 0x42
   772  0000C2                     	ds	1
   773  0000C3                     FromMainLow_sendmsg@length:
   774                           	opt stack 0
   775  0000C3                     FromMainHigh_sendmsg@length:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x43
   779  0000C3                     	ds	1
   780  0000C4                     ToMainLow_recvmsg@maxlength:
   781                           	opt stack 0
   782  0000C4                     ToMainHigh_recvmsg@maxlength:
   783                           	opt stack 0
   784  0000C4                     send_uart_message@message_q_code:
   785                           	opt stack 0
   786  0000C4                     timer1_lthread@retval:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x44
   790  0000C4                     	ds	1
   791  0000C5                     tblptru	equ	0xFF8
   792                           tblptrh	equ	0xFF7
   793                           tblptrl	equ	0xFF6
   794                           tablat	equ	0xFF5
   795                           postinc0	equ	0xFEE
   796                           wreg	equ	0xFE8
   797                           
   798                           ; 0 bytes @ 0x45
   799                           
   800                           	psect	cstackCOMRAM
   801  000001                     __pcstackCOMRAM:
   802                           	opt stack 0
   803  000001                     ?_ReadTimer1:
   804                           	opt stack 0
   805  000001                     ?i1___awmod:
   806                           	opt stack 0
   807  000001                     WriteTimer1@timer1:
   808                           	opt stack 0
   809  000001                     i1memcpy@d1:
   810                           	opt stack 0
   811  000001                     i1___awmod@dividend:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x0
   815  000001                     	ds	2
   816  000003                     ReadTimer1@timer:
   817                           	opt stack 0
   818  000003                     WriteTimer1@timer:
   819                           	opt stack 0
   820  000003                     i1memcpy@s1:
   821                           	opt stack 0
   822  000003                     i1___awmod@divisor:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x2
   826  000003                     	ds	2
   827  000005                     i1___awmod@counter:
   828                           	opt stack 0
   829  000005                     i1memcpy@n:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x4
   833  000005                     	ds	1
   834  000006                     i1___awmod@sign:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x5
   838  000006                     	ds	1
   839  000007                     i1memcpy@d:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x6
   843  000007                     	ds	2
   844  000009                     i1memcpy@s:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x8
   848  000009                     	ds	2
   849  00000B                     i1send_msg@qptr:
   850                           	opt stack 0
   851  00000B                     i1recv_msg@qptr:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0xA
   855  00000B                     	ds	2
   856  00000D                     i1send_msg@length:
   857                           	opt stack 0
   858  00000D                     i1recv_msg@maxlength:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0xC
   862  00000D                     	ds	1
   863  00000E                     i1send_msg@msgtype:
   864                           	opt stack 0
   865  00000E                     i1recv_msg@msgtype:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0xD
   869  00000E                     	ds	1
   870  00000F                     i1send_msg@data:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0xE
   874  00000F                     	ds	1
   875  000010                     i1recv_msg@data:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0xF
   879  000010                     	ds	1
   880  000011                     ??i1_send_msg:
   881                           
   882                           ; 0 bytes @ 0x10
   883  000011                     	ds	1
   884  000012                     ??i1_recv_msg:
   885  000012                     i1send_msg@tlength:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x11
   889  000012                     	ds	2
   890  000014                     i1send_msg@slot:
   891                           	opt stack 0
   892  000014                     i1recv_msg@slot:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x13
   896  000014                     	ds	1
   897  000015                     i1send_msg@qmsg:
   898                           	opt stack 0
   899  000015                     i1recv_msg@tlength:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x14
   903  000015                     	ds	2
   904  000017                     ToMainLow_sendmsg@msgtype:
   905                           	opt stack 0
   906  000017                     i1recv_msg@qmsg:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x16
   910  000017                     	ds	1
   911  000018                     ToMainLow_sendmsg@data:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x17
   915  000018                     	ds	1
   916  000019                     FromMainLow_recvmsg@msgtype:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x18
   920  000019                     	ds	1
   921  00001A                     ToMainLow_sendmsg@length:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x19
   925  00001A                     	ds	1
   926  00001B                     ??_uart_receive_interrupt_handler:
   927  00001B                     FromMainLow_recvmsg@data:
   928                           	opt stack 0
   929  00001B                     timer1_int_handler@result:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x1A
   933  00001B                     	ds	2
   934  00001D                     FromMainLow_recvmsg@maxlength:
   935                           	opt stack 0
   936  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   937                           	opt stack 0
   938                           
   939                           ; 14 bytes @ 0x1C
   940  00001D                     	ds	1
   941  00001E                     uart_transmit_interrupt_handler@data:
   942                           	opt stack 0
   943                           
   944                           ; 4 bytes @ 0x1D
   945  00001E                     	ds	4
   946  000022                     uart_transmit_interrupt_handler@msgtype:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x21
   950  000022                     	ds	1
   951  000023                     uart_transmit_interrupt_handler@message_status:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0x22
   955  000023                     	ds	8
   956  00002B                     uart_receive_interrupt_handler@status:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x2A
   960  00002B                     	ds	1
   961  00002C                     uart_receive_interrupt_handler@status_1930:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x2B
   965  00002C                     	ds	1
   966  00002D                     uart_receive_interrupt_handler@bad_counter_id:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x2C
   970  00002D                     	ds	2
   971  00002F                     uart_receive_interrupt_handler@checksum:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x2E
   975  00002F                     	ds	1
   976  000030                     uart_receive_interrupt_handler@bad_start_id:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x2F
   980  000030                     	ds	1
   981  000031                     uart_receive_interrupt_handler@bad_end_id:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x30
   985  000031                     	ds	1
   986  000032                     uart_receive_interrupt_handler@bad_checksum_id:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x31
   990  000032                     	ds	1
   991  000033                     uart_receive_interrupt_handler@message_count:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x32
   995  000033                     	ds	1
   996  000034                     uart_receive_interrupt_handler@msg_id:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x33
  1000  000034                     	ds	1
  1001  000035                     uart_receive_interrupt_handler@i:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x34
  1005  000035                     	ds	2
  1006  000037                     ??_InterruptHandlerLow:
  1007                           
  1008                           ; 0 bytes @ 0x36
  1009  000037                     	ds	17
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           postinc0	equ	0xFEE
  1015                           wreg	equ	0xFE8
  1016                           
  1017 ;;
  1018 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1019 ;;
  1020 ;; *************** function _main *****************
  1021 ;; Defined at:
  1022 ;;		line 189 in file "../src/main.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  motor_data     14   22[BANK1 ] unsigned char [14]
  1027 ;;  poop            1   55[BANK1 ] unsigned char 
  1028 ;;  ic             38   60[BANK1 ] struct __i2c_comm
  1029 ;;  msgbuffer      15   36[BANK1 ] unsigned char [15]
  1030 ;;  t1thread_dat    2   56[BANK1 ] struct __timer1_thread_s
  1031 ;;  t0thread_dat    2   53[BANK1 ] struct __timer0_thread_s
  1032 ;;  uthread_data    2    0        struct __uart_thread_str
  1033 ;;  msgtype         1   59[BANK1 ] unsigned char 
  1034 ;;  length          1   58[BANK1 ] char 
  1035 ;;  need_sensor_    1   52[BANK1 ] unsigned char 
  1036 ;;  last_reg_rec    1   51[BANK1 ] unsigned char 
  1037 ;;  i               1    0        unsigned char 
  1038 ;;  c               1    0        unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       0      76       0       0
  1050 ;;      Temps:          0       0       0       0       0
  1051 ;;      Totals:         0       0      76       0       0
  1052 ;;Total ram usage:       76 bytes
  1053 ;; Hardware stack levels required when called:   15
  1054 ;; This function calls:
  1055 ;;		_FromMainHigh_sendmsg
  1056 ;;		_OpenTimer0
  1057 ;;		_OpenTimer1
  1058 ;;		_ToMainHigh_recvmsg
  1059 ;;		_ToMainLow_recvmsg
  1060 ;;		_blip
  1061 ;;		_blip1
  1062 ;;		_blip2
  1063 ;;		_blip3
  1064 ;;		_debug_configure
  1065 ;;		_enable_interrupts
  1066 ;;		_i2c_configure_slave
  1067 ;;		_i_like_to_moveit_moveit
  1068 ;;		_init_i2c
  1069 ;;		_init_queues
  1070 ;;		_init_timer1_lthread
  1071 ;;		_timer0_lthread
  1072 ;;		_timer1_lthread
  1073 ;;		_uart_configure
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text0
  1080  0006E2                     __ptext0:
  1081                           	opt stack 0
  1082  0006E2                     _main:
  1083                           	opt stack 16
  1084                           
  1085                           ;main.c: 190: char c;
  1086                           ;main.c: 191: signed char length;
  1087                           ;main.c: 192: unsigned char msgtype;
  1088                           ;main.c: 193: unsigned char last_reg_recvd;
  1089                           ;main.c: 194: i2c_comm ic;
  1090                           ;main.c: 195: unsigned char msgbuffer[14 + 1];
  1091                           ;main.c: 196: unsigned char i;
  1092                           ;main.c: 197: uart_thread_struct uthread_data;
  1093                           ;main.c: 198: timer1_thread_struct t1thread_data;
  1094                           ;main.c: 199: timer0_thread_struct t0thread_data;
  1095                           ;main.c: 200: unsigned char need_sensor_data = 1;
  1096                           
  1097                           ;incstack = 0
  1098  0006E2  0E01               	movlw	1
  1099  0006E4  0101               	movlb	1	; () banked
  1100  0006E6  6F34               	movwf	main@need_sensor_data& (0+255),b
  1101                           
  1102                           ;main.c: 208: OSCCON = 0x82;
  1103  0006E8  0E82               	movlw	130
  1104  0006EA  6ED3               	movwf	4051,c	;volatile
  1105                           
  1106                           ; BSR set to: 1
  1107                           ;main.c: 209: OSCTUNEbits.PLLEN = 1;
  1108  0006EC  8C9B               	bsf	3995,6,c	;volatile
  1109                           
  1110                           ; BSR set to: 1
  1111                           ;main.c: 239: init_i2c(&ic);
  1112  0006EE  0101               	movlb	1	; () banked
  1113  0006F0  0E01               	movlw	high main@ic
  1114  0006F2  0100               	movlb	0	; () banked
  1115  0006F4  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
  1116  0006F6  0101               	movlb	1	; () banked
  1117  0006F8  0E3C               	movlw	low main@ic
  1118  0006FA  0100               	movlb	0	; () banked
  1119  0006FC  6FB8               	movwf	init_i2c@ic& (0+255),b
  1120  0006FE  EC75  F00B         	call	_init_i2c	;wreg free
  1121                           
  1122                           ;main.c: 242: init_timer1_lthread(&t1thread_data);
  1123  000702  0101               	movlb	1	; () banked
  1124  000704  0E01               	movlw	high main@t1thread_data
  1125  000706  0100               	movlb	0	; () banked
  1126  000708  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1127  00070A  0101               	movlb	1	; () banked
  1128  00070C  0E38               	movlw	low main@t1thread_data
  1129  00070E  0100               	movlb	0	; () banked
  1130  000710  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1131  000712  EC99  F00E         	call	_init_timer1_lthread	;wreg free
  1132                           
  1133                           ;main.c: 245: init_queues();
  1134  000716  EC6B  F00C         	call	_init_queues	;wreg free
  1135                           
  1136                           ;main.c: 249: TRISB = 0x0;
  1137  00071A  0E00               	movlw	0
  1138  00071C  6E93               	movwf	3987,c	;volatile
  1139                           
  1140                           ;main.c: 250: LATB = 0x0;
  1141  00071E  0E00               	movlw	0
  1142  000720  6E8A               	movwf	3978,c	;volatile
  1143                           
  1144                           ;main.c: 263: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1145  000722  0E96               	movlw	150
  1146  000724  EC54  F00E         	call	_OpenTimer0
  1147                           
  1148                           ;main.c: 272: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1149  000728  0EF5               	movlw	245
  1150  00072A  EC9F  F00D         	call	_OpenTimer1
  1151                           
  1152                           ;main.c: 279: IPR1bits.TMR1IP = 0;
  1153  00072E  909F               	bcf	3999,0,c	;volatile
  1154                           
  1155                           ;main.c: 281: IPR1bits.RCIP = 0;
  1156  000730  9A9F               	bcf	3999,5,c	;volatile
  1157                           
  1158                           ;main.c: 284: IPR1bits.SSPIP = 1;
  1159  000732  869F               	bsf	3999,3,c	;volatile
  1160                           
  1161                           ;main.c: 293: i2c_configure_slave(0x9E);
  1162  000734  0E9E               	movlw	158
  1163  000736  EC2C  F00E         	call	_i2c_configure_slave
  1164                           
  1165                           ;main.c: 308: PIE1bits.SSPIE = 1;
  1166  00073A  869D               	bsf	3997,3,c	;volatile
  1167                           
  1168                           ;main.c: 333: debug_configure();
  1169  00073C  ECCC  F00E         	call	_debug_configure	;wreg free
  1170                           
  1171                           ;main.c: 334: blip();
  1172  000740  ECE1  F00E         	call	_blip	;wreg free
  1173                           
  1174                           ;main.c: 335: blip1();
  1175  000744  ECDD  F00E         	call	_blip1	;wreg free
  1176                           
  1177                           ;main.c: 336: blip2();
  1178  000748  ECD9  F00E         	call	_blip2	;wreg free
  1179                           
  1180                           ;main.c: 337: blip3();
  1181  00074C  ECD5  F00E         	call	_blip3	;wreg free
  1182                           
  1183                           ;main.c: 346: enable_interrupts();
  1184  000750  ECD1  F00E         	call	_enable_interrupts	;wreg free
  1185                           
  1186                           ;main.c: 359: uart_configure();
  1187  000754  EC79  F00E         	call	_uart_configure	;wreg free
  1188  000758                     l4202:
  1189                           
  1190                           ;main.c: 390: unsigned char motor_data[14];
  1191                           ;main.c: 393: unsigned char poop;
  1192                           ;main.c: 394: for(poop=0;poop<14;poop++)
  1193  000758  0E00               	movlw	0
  1194  00075A  0101               	movlb	1	; () banked
  1195  00075C  6F37               	movwf	main@poop& (0+255),b
  1196  00075E  D00F               	goto	L1
  1197  000760                     l4208:
  1198                           
  1199                           ; BSR set to: 1
  1200                           ;main.c: 395: {
  1201                           ;main.c: 396: motor_data[poop]=0x55;
  1202  000760  0101               	movlb	1	; () banked
  1203  000762  5137               	movf	main@poop& (0+255),w,b
  1204  000764  0D01               	mullw	1
  1205  000766  0101               	movlb	1	; () banked
  1206  000768  0E16               	movlw	low main@motor_data
  1207  00076A  24F3               	addwf	prodl,w,c
  1208  00076C  6ED9               	movwf	fsr2l,c
  1209  00076E  0101               	movlb	1	; () banked
  1210  000770  0E01               	movlw	high main@motor_data
  1211  000772  20F4               	addwfc	prodh,w,c
  1212  000774  6EDA               	movwf	fsr2h,c
  1213  000776  0E55               	movlw	85
  1214  000778  6EDF               	movwf	indf2,c
  1215                           
  1216                           ; BSR set to: 1
  1217  00077A  0101               	movlb	1	; () banked
  1218  00077C  2B37               	incf	main@poop& (0+255),f,b
  1219  00077E                     L1:
  1220                           
  1221                           ; BSR set to: 1
  1222  00077E  0E0D               	movlw	13
  1223  000780  0101               	movlb	1	; () banked
  1224  000782  6537               	cpfsgt	main@poop& (0+255),b
  1225  000784  D7ED               	goto	l4208
  1226                           
  1227                           ; BSR set to: 1
  1228                           ;main.c: 397: }
  1229                           ;main.c: 404: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1230                           
  1231                           ; BSR set to: 1
  1232  000786  0101               	movlb	1	; () banked
  1233  000788  0E01               	movlw	high main@msgtype
  1234  00078A  0101               	movlb	1	; () banked
  1235  00078C  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1236  00078E  0101               	movlb	1	; () banked
  1237  000790  0E3B               	movlw	low main@msgtype
  1238  000792  0101               	movlb	1	; () banked
  1239  000794  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1240  000796  0101               	movlb	1	; () banked
  1241  000798  0E01               	movlw	high main@msgbuffer
  1242  00079A  0101               	movlb	1	; () banked
  1243  00079C  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1244  00079E  0101               	movlb	1	; () banked
  1245  0007A0  0E24               	movlw	low main@msgbuffer
  1246  0007A2  0101               	movlb	1	; () banked
  1247  0007A4  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1248  0007A6  0E0E               	movlw	14
  1249  0007A8  EC69  F00D         	call	_ToMainHigh_recvmsg
  1250  0007AC  0101               	movlb	1	; () banked
  1251  0007AE  6F3A               	movwf	main@length& (0+255),b
  1252                           
  1253                           ; BSR set to: 1
  1254                           ;main.c: 405: if (length < 0) {
  1255  0007B0  0101               	movlb	1	; () banked
  1256  0007B2  BF3A               	btfsc	main@length& (0+255),7,b
  1257  0007B4  D051               	goto	l4236
  1258  0007B6  D042               	goto	l4234
  1259  0007B8                     l4220:
  1260                           
  1261                           ; BSR set to: 1
  1262                           ;main.c: 415: {
  1263                           ;main.c: 416: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1264  0007B8  0101               	movlb	1	; () banked
  1265  0007BA  0E01               	movlw	high main@t0thread_data
  1266  0007BC  0100               	movlb	0	; () banked
  1267  0007BE  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1268  0007C0  0101               	movlb	1	; () banked
  1269  0007C2  0E35               	movlw	low main@t0thread_data
  1270  0007C4  0100               	movlb	0	; () banked
  1271  0007C6  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1272  0007C8  0101               	movlb	1	; () banked
  1273  0007CA  0100               	movlb	0	; () banked
  1274  0007CC  C13B  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1275  0007D0  0100               	movlb	0	; () banked
  1276  0007D2  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1277  0007D4  0101               	movlb	1	; () banked
  1278  0007D6  513A               	movf	main@length& (0+255),w,b
  1279  0007D8  0100               	movlb	0	; () banked
  1280  0007DA  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1281  0007DC  0100               	movlb	0	; () banked
  1282  0007DE  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1283  0007E0  0100               	movlb	0	; () banked
  1284  0007E2  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1285  0007E4  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1286  0007E6  0101               	movlb	1	; () banked
  1287  0007E8  0E01               	movlw	high main@msgbuffer
  1288  0007EA  0100               	movlb	0	; () banked
  1289  0007EC  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1290  0007EE  0101               	movlb	1	; () banked
  1291  0007F0  0E24               	movlw	low main@msgbuffer
  1292  0007F2  0100               	movlb	0	; () banked
  1293  0007F4  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1294  0007F6  ECC5  F00E         	call	_timer0_lthread	;wreg free
  1295                           
  1296                           ;main.c: 417: break;
  1297  0007FA  D02E               	goto	l4236
  1298  0007FC                     l4222:
  1299                           
  1300                           ;main.c: 424: {
  1301                           ;main.c: 425: i_like_to_moveit_moveit( (signed char)msgbuffer[1] , (signed char)msgbuffe
      +                          r[2] );
  1302  0007FC  C126  F110         	movff	main@msgbuffer+2,i_like_to_moveit_moveit@right_side_speed
  1303  000800  0101               	movlb	1	; () banked
  1304  000802  5125               	movf	(main@msgbuffer+1)& (0+255),w,b
  1305  000804  EC11  F00A         	call	_i_like_to_moveit_moveit
  1306                           
  1307                           ;main.c: 426: blip();
  1308  000808  ECE1  F00E         	call	_blip	;wreg free
  1309                           
  1310                           ;main.c: 427: break;
  1311  00080C  D005               	goto	l121
  1312  00080E                     l4228:
  1313  00080E  0101               	movlb	1	; () banked
  1314  000810  5124               	movf	main@msgbuffer& (0+255),w,b
  1315                           
  1316                           ; Switch size 1, requested type "space"
  1317                           ; Number of cases is 1, Range of values is 1 to 1
  1318                           ; switch strategies available:
  1319                           ; Name         Instructions Cycles
  1320                           ; simple_byte            4     3 (average)
  1321                           ;	Chosen strategy is simple_byte
  1322  000812  0A01               	xorlw	1	; case 1
  1323  000814  B4D8               	btfsc	status,2,c
  1324  000816  D7F2               	goto	l4222
  1325  000818                     l121:
  1326                           
  1327                           ;main.c: 437: {
  1328                           ;main.c: 440: last_reg_recvd = msgbuffer[0];
  1329  000818  C124  F133         	movff	main@msgbuffer,main@last_reg_recvd
  1330                           
  1331                           ;main.c: 441: break;
  1332  00081C  D01D               	goto	l4236
  1333  00081E                     l4230:
  1334                           
  1335                           ;main.c: 444: {
  1336                           ;main.c: 445: FromMainHigh_sendmsg(14,40,(void *) motor_data);
  1337  00081E  0E28               	movlw	40
  1338  000820  0101               	movlb	1	; () banked
  1339  000822  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1340  000824  0101               	movlb	1	; () banked
  1341  000826  0E01               	movlw	high main@motor_data
  1342  000828  0101               	movlb	1	; () banked
  1343  00082A  6F0D               	movwf	(FromMainHigh_sendmsg@data+1)& (0+255),b
  1344  00082C  0101               	movlb	1	; () banked
  1345  00082E  0E16               	movlw	low main@motor_data
  1346  000830  0101               	movlb	1	; () banked
  1347  000832  6F0C               	movwf	FromMainHigh_sendmsg@data& (0+255),b
  1348  000834  0E0E               	movlw	14
  1349  000836  ECD1  F00D         	call	_FromMainHigh_sendmsg
  1350                           
  1351                           ;main.c: 447: break;
  1352  00083A  D00E               	goto	l4236
  1353  00083C                     l4234:
  1354  00083C  0101               	movlb	1	; () banked
  1355  00083E  513B               	movf	main@msgtype& (0+255),w,b
  1356                           
  1357                           ; Switch size 1, requested type "space"
  1358                           ; Number of cases is 4, Range of values is 10 to 42
  1359                           ; switch strategies available:
  1360                           ; Name         Instructions Cycles
  1361                           ; simple_byte           13     7 (average)
  1362                           ;	Chosen strategy is simple_byte
  1363  000840  0A0A               	xorlw	10	; case 10
  1364  000842  B4D8               	btfsc	status,2,c
  1365  000844  D7B9               	goto	l4220
  1366  000846  0A22               	xorlw	34	; case 40
  1367  000848  B4D8               	btfsc	status,2,c
  1368  00084A  D7E1               	goto	l4228
  1369  00084C  0A01               	xorlw	1	; case 41
  1370  00084E  B4D8               	btfsc	status,2,c
  1371  000850  D7E3               	goto	l121
  1372  000852  0A03               	xorlw	3	; case 42
  1373  000854  B4D8               	btfsc	status,2,c
  1374  000856  D7E3               	goto	l4230
  1375  000858                     l4236:
  1376                           
  1377                           ;main.c: 455: }
  1378                           ;main.c: 458: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1379  000858  0101               	movlb	1	; () banked
  1380  00085A  0E01               	movlw	high main@msgtype
  1381  00085C  0101               	movlb	1	; () banked
  1382  00085E  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1383  000860  0101               	movlb	1	; () banked
  1384  000862  0E3B               	movlw	low main@msgtype
  1385  000864  0101               	movlb	1	; () banked
  1386  000866  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1387  000868  0101               	movlb	1	; () banked
  1388  00086A  0E01               	movlw	high main@msgbuffer
  1389  00086C  0101               	movlb	1	; () banked
  1390  00086E  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1391  000870  0101               	movlb	1	; () banked
  1392  000872  0E24               	movlw	low main@msgbuffer
  1393  000874  0101               	movlb	1	; () banked
  1394  000876  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1395  000878  0E0E               	movlw	14
  1396  00087A  EC4E  F00D         	call	_ToMainLow_recvmsg
  1397  00087E  0101               	movlb	1	; () banked
  1398  000880  6F3A               	movwf	main@length& (0+255),b
  1399                           
  1400                           ; BSR set to: 1
  1401                           ;main.c: 459: if (length < 0) {
  1402  000882  0101               	movlb	1	; () banked
  1403  000884  BF3A               	btfsc	main@length& (0+255),7,b
  1404  000886  D768               	goto	l4202
  1405  000888  D021               	goto	l4248
  1406  00088A                     l4242:
  1407                           
  1408                           ; BSR set to: 1
  1409                           ;main.c: 478: {
  1410                           ;main.c: 479: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1411  00088A  0101               	movlb	1	; () banked
  1412  00088C  0E01               	movlw	high main@t1thread_data
  1413  00088E  0101               	movlb	1	; () banked
  1414  000890  6F0F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1415  000892  0101               	movlb	1	; () banked
  1416  000894  0E38               	movlw	low main@t1thread_data
  1417  000896  0101               	movlb	1	; () banked
  1418  000898  6F0E               	movwf	timer1_lthread@tptr& (0+255),b
  1419  00089A  0101               	movlb	1	; () banked
  1420  00089C  C13B  F110         	movff	main@msgtype,timer1_lthread@msgtype
  1421  0008A0  0101               	movlb	1	; () banked
  1422  0008A2  6B11               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1423  0008A4  0101               	movlb	1	; () banked
  1424  0008A6  513A               	movf	main@length& (0+255),w,b
  1425  0008A8  0101               	movlb	1	; () banked
  1426  0008AA  6F12               	movwf	timer1_lthread@length& (0+255),b
  1427  0008AC  0101               	movlb	1	; () banked
  1428  0008AE  6B13               	clrf	(timer1_lthread@length+1)& (0+255),b
  1429  0008B0  0101               	movlb	1	; () banked
  1430  0008B2  BF12               	btfsc	timer1_lthread@length& (0+255),7,b
  1431  0008B4  0713               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1432  0008B6  0101               	movlb	1	; () banked
  1433  0008B8  0E01               	movlw	high main@msgbuffer
  1434  0008BA  0101               	movlb	1	; () banked
  1435  0008BC  6F15               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1436  0008BE  0101               	movlb	1	; () banked
  1437  0008C0  0E24               	movlw	low main@msgbuffer
  1438  0008C2  0101               	movlb	1	; () banked
  1439  0008C4  6F14               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1440  0008C6  ECDA  F00B         	call	_timer1_lthread	;wreg free
  1441                           
  1442                           ;main.c: 480: break;
  1443  0008CA  D746               	goto	l4202
  1444  0008CC                     l4248:
  1445  0008CC  0101               	movlb	1	; () banked
  1446  0008CE  513B               	movf	main@msgtype& (0+255),w,b
  1447                           
  1448                           ; Switch size 1, requested type "space"
  1449                           ; Number of cases is 8, Range of values is 11 to 36
  1450                           ; switch strategies available:
  1451                           ; Name         Instructions Cycles
  1452                           ; simple_byte           25    13 (average)
  1453                           ;	Chosen strategy is simple_byte
  1454  0008D0  0A0B               	xorlw	11	; case 11
  1455  0008D2  B4D8               	btfsc	status,2,c
  1456  0008D4  D7DA               	goto	l4242
  1457  0008D6  0A15               	xorlw	21	; case 30
  1458  0008D8  B4D8               	btfsc	status,2,c
  1459  0008DA  D73E               	goto	l4202
  1460  0008DC  0A01               	xorlw	1	; case 31
  1461  0008DE  B4D8               	btfsc	status,2,c
  1462  0008E0  D73B               	goto	l4202
  1463  0008E2  0A3F               	xorlw	63	; case 32
  1464  0008E4  B4D8               	btfsc	status,2,c
  1465  0008E6  D738               	goto	l4202
  1466  0008E8  0A01               	xorlw	1	; case 33
  1467  0008EA  B4D8               	btfsc	status,2,c
  1468  0008EC  D735               	goto	l4202
  1469  0008EE  0A03               	xorlw	3	; case 34
  1470  0008F0  B4D8               	btfsc	status,2,c
  1471  0008F2  D732               	goto	l4202
  1472  0008F4  0A01               	xorlw	1	; case 35
  1473  0008F6  B4D8               	btfsc	status,2,c
  1474  0008F8  D72F               	goto	l4202
  1475  0008FA  0A07               	xorlw	7	; case 36
  1476  0008FC  D72D               	goto	l4202
  1477  0008FE                     __end_of_main:
  1478                           	opt stack 0
  1479                           tblptru	equ	0xFF8
  1480                           tblptrh	equ	0xFF7
  1481                           tblptrl	equ	0xFF6
  1482                           tablat	equ	0xFF5
  1483                           prodh	equ	0xFF4
  1484                           prodl	equ	0xFF3
  1485                           postinc0	equ	0xFEE
  1486                           wreg	equ	0xFE8
  1487                           indf2	equ	0xFDF
  1488                           fsr2h	equ	0xFDA
  1489                           fsr2l	equ	0xFD9
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function _uart_configure *****************
  1493 ;; Defined at:
  1494 ;;		line 22 in file "../src/my_uart.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;		None               void
  1501 ;; Registers used:
  1502 ;;		wreg, status,2
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:   10
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text1
  1523  001CF2                     __ptext1:
  1524                           	opt stack 0
  1525  001CF2                     _uart_configure:
  1526                           	opt stack 20
  1527                           
  1528                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1529                           
  1530                           ; BSR set to: 1
  1531                           ;incstack = 0
  1532  001CF2  8E94               	bsf	3988,7,c	;volatile
  1533                           
  1534                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1535  001CF4  9C94               	bcf	3988,6,c	;volatile
  1536                           
  1537                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1538  001CF6  86B8               	bsf	4024,3,c	;volatile
  1539                           
  1540                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1541  001CF8  84AC               	bsf	4012,2,c	;volatile
  1542                           
  1543                           ;my_uart.c: 36: SPBRGH = 0x04;
  1544  001CFA  0E04               	movlw	4
  1545  001CFC  6EB0               	movwf	4016,c	;volatile
  1546                           
  1547                           ;my_uart.c: 37: SPBRG = 0xe1;
  1548  001CFE  0EE1               	movlw	225
  1549  001D00  6EAF               	movwf	4015,c	;volatile
  1550                           
  1551                           ;my_uart.c: 41: TXSTA1bits.SYNC = 0;
  1552  001D02  98AC               	bcf	4012,4,c	;volatile
  1553                           
  1554                           ;my_uart.c: 42: RCSTA1bits.SPEN = 1;
  1555  001D04  8EAB               	bsf	4011,7,c	;volatile
  1556                           
  1557                           ;my_uart.c: 45: IPR1bits.TX1IP = 0;
  1558  001D06  989F               	bcf	3999,4,c	;volatile
  1559                           
  1560                           ;my_uart.c: 47: PIE1bits.TX1IE = 0;
  1561  001D08  989D               	bcf	3997,4,c	;volatile
  1562                           
  1563                           ;my_uart.c: 48: PIE1bits.RC1IE = 1;
  1564  001D0A  8A9D               	bsf	3997,5,c	;volatile
  1565                           
  1566                           ;my_uart.c: 50: TXSTA1bits.TXEN = 1;
  1567  001D0C  8AAC               	bsf	4012,5,c	;volatile
  1568                           
  1569                           ;my_uart.c: 51: RCSTA1bits.CREN = 1;
  1570  001D0E  88AB               	bsf	4011,4,c	;volatile
  1571  001D10  0012               	return	
  1572  001D12                     __end_of_uart_configure:
  1573                           	opt stack 0
  1574                           tblptru	equ	0xFF8
  1575                           tblptrh	equ	0xFF7
  1576                           tblptrl	equ	0xFF6
  1577                           tablat	equ	0xFF5
  1578                           prodh	equ	0xFF4
  1579                           prodl	equ	0xFF3
  1580                           postinc0	equ	0xFEE
  1581                           wreg	equ	0xFE8
  1582                           indf2	equ	0xFDF
  1583                           fsr2h	equ	0xFDA
  1584                           fsr2l	equ	0xFD9
  1585                           status	equ	0xFD8
  1586                           
  1587 ;; *************** function _timer1_lthread *****************
  1588 ;; Defined at:
  1589 ;;		line 15 in file "../src/timer1_thread.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1592 ;;		 -> main@t1thread_data(2), 
  1593 ;;  msgtype         2   16[BANK1 ] int 
  1594 ;;  length          2   18[BANK1 ] int 
  1595 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1596 ;;		 -> main@msgbuffer(15), 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  retval          1   68[BANK0 ] char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2   14[BANK1 ] int 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1608 ;;      Params:         0       0       8       0       0
  1609 ;;      Locals:         0       1       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       1       8       0       0
  1612 ;;Total ram usage:        9 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:   13
  1615 ;; This function calls:
  1616 ;;		_FromMainHigh_sendmsg
  1617 ;;		___lwmod
  1618 ;;		_blink0
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text2
  1625  0017B4                     __ptext2:
  1626                           	opt stack 0
  1627  0017B4                     _timer1_lthread:
  1628                           	opt stack 17
  1629                           
  1630                           ;timer1_thread.c: 16: signed char retval;
  1631                           ;timer1_thread.c: 18: blink0();
  1632                           
  1633                           ;incstack = 0
  1634  0017B4  ECF4  F00E         	call	_blink0	;wreg free
  1635                           
  1636                           ;timer1_thread.c: 20: tptr->msgcount++;
  1637  0017B8  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1638  0017BC  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1639  0017C0  2ADE               	incf	postinc2,f,c
  1640  0017C2  0E00               	movlw	0
  1641  0017C4  22DD               	addwfc	postdec2,f,c
  1642                           
  1643                           ;timer1_thread.c: 23: if ((tptr->msgcount % 10) == 9) {
  1644  0017C6  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1645  0017CA  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1646  0017CE  0100               	movlb	0	; () banked
  1647  0017D0  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1648  0017D4  0100               	movlb	0	; () banked
  1649  0017D6  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1650  0017DA  0E00               	movlw	0
  1651  0017DC  0100               	movlb	0	; () banked
  1652  0017DE  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1653  0017E0  0E0A               	movlw	10
  1654  0017E2  0100               	movlb	0	; () banked
  1655  0017E4  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1656  0017E6  EC0B  F00C         	call	___lwmod	;wreg free
  1657  0017EA  0100               	movlb	0	; () banked
  1658  0017EC  51B8               	movf	?___lwmod& (0+255),w,b
  1659  0017EE  0A09               	xorlw	9
  1660  0017F0  0100               	movlb	0	; () banked
  1661  0017F2  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1662  0017F4  A4D8               	btfss	status,2,c
  1663  0017F6  0012               	return	
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;timer1_thread.c: 24: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1667  0017F8  0E14               	movlw	20
  1668  0017FA  0101               	movlb	1	; () banked
  1669  0017FC  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1670  0017FE  0101               	movlb	1	; () banked
  1671  001800  C10F  F10D         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1672  001804  0101               	movlb	1	; () banked
  1673  001806  C10E  F10C         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1674  00180A  0E02               	movlw	2
  1675  00180C  ECD1  F00D         	call	_FromMainHigh_sendmsg
  1676  001810  0100               	movlb	0	; () banked
  1677  001812  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1678  001814  0012               	return	
  1679  001816                     __end_of_timer1_lthread:
  1680                           	opt stack 0
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           prodh	equ	0xFF4
  1686                           prodl	equ	0xFF3
  1687                           postinc0	equ	0xFEE
  1688                           wreg	equ	0xFE8
  1689                           indf2	equ	0xFDF
  1690                           postinc2	equ	0xFDE
  1691                           postdec2	equ	0xFDD
  1692                           fsr2h	equ	0xFDA
  1693                           fsr2l	equ	0xFD9
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function _blink0 *****************
  1697 ;; Defined at:
  1698 ;;		line 46 in file "../src/debug.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;		None               void
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:   10
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_timer1_lthread
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text3
  1727  001DE8                     __ptext3:
  1728                           	opt stack 0
  1729  001DE8                     _blink0:
  1730                           	opt stack 19
  1731                           
  1732                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;incstack = 0
  1736  001DE8  708A               	btg	3978,0,c	;volatile
  1737  001DEA  0012               	return	
  1738  001DEC                     __end_of_blink0:
  1739                           	opt stack 0
  1740                           tblptru	equ	0xFF8
  1741                           tblptrh	equ	0xFF7
  1742                           tblptrl	equ	0xFF6
  1743                           tablat	equ	0xFF5
  1744                           prodh	equ	0xFF4
  1745                           prodl	equ	0xFF3
  1746                           postinc0	equ	0xFEE
  1747                           wreg	equ	0xFE8
  1748                           indf2	equ	0xFDF
  1749                           postinc2	equ	0xFDE
  1750                           postdec2	equ	0xFDD
  1751                           fsr2h	equ	0xFDA
  1752                           fsr2l	equ	0xFD9
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function ___lwmod *****************
  1756 ;; Defined at:
  1757 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  dividend        2   56[BANK0 ] unsigned int 
  1760 ;;  divisor         2   58[BANK0 ] unsigned int 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  counter         1   60[BANK0 ] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2   56[BANK0 ] unsigned int 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1772 ;;      Params:         0       4       0       0       0
  1773 ;;      Locals:         0       1       0       0       0
  1774 ;;      Temps:          0       0       0       0       0
  1775 ;;      Totals:         0       5       0       0       0
  1776 ;;Total ram usage:        5 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:   10
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_timer1_lthread
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text4
  1787  001816                     __ptext4:
  1788                           	opt stack 0
  1789  001816                     ___lwmod:
  1790                           	opt stack 19
  1791                           
  1792                           ;incstack = 0
  1793  001816  0100               	movlb	0	; () banked
  1794  001818  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1795  00181A  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  1796  00181C  B4D8               	btfsc	status,2,c
  1797  00181E  D026               	goto	l1123
  1798                           
  1799                           ; BSR set to: 0
  1800  001820  0E01               	movlw	1
  1801  001822  0100               	movlb	0	; () banked
  1802  001824  6FBC               	movwf	___lwmod@counter& (0+255),b
  1803  001826  D006               	goto	l3722
  1804  001828                     l3720:
  1805                           
  1806                           ; BSR set to: 0
  1807  001828  0100               	movlb	0	; () banked
  1808  00182A  90D8               	bcf	status,0,c
  1809  00182C  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  1810  00182E  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1811  001830  0100               	movlb	0	; () banked
  1812  001832  2BBC               	incf	___lwmod@counter& (0+255),f,b
  1813  001834                     l3722:
  1814                           
  1815                           ; BSR set to: 0
  1816  001834  0100               	movlb	0	; () banked
  1817  001836  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1818  001838  D7F7               	goto	l3720
  1819  00183A                     l3724:
  1820                           
  1821                           ; BSR set to: 0
  1822  00183A  0100               	movlb	0	; () banked
  1823  00183C  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1824  00183E  0100               	movlb	0	; () banked
  1825  001840  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  1826  001842  0100               	movlb	0	; () banked
  1827  001844  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1828  001846  0100               	movlb	0	; () banked
  1829  001848  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1830  00184A  A0D8               	btfss	status,0,c
  1831  00184C  D008               	goto	l3728
  1832                           
  1833                           ; BSR set to: 0
  1834  00184E  0100               	movlb	0	; () banked
  1835  001850  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1836  001852  0100               	movlb	0	; () banked
  1837  001854  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  1838  001856  0100               	movlb	0	; () banked
  1839  001858  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1840  00185A  0100               	movlb	0	; () banked
  1841  00185C  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1842  00185E                     l3728:
  1843                           
  1844                           ; BSR set to: 0
  1845  00185E  0100               	movlb	0	; () banked
  1846  001860  90D8               	bcf	status,0,c
  1847  001862  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1848  001864  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  1849                           
  1850                           ; BSR set to: 0
  1851  001866  0100               	movlb	0	; () banked
  1852  001868  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  1853  00186A  D7E7               	goto	l3724
  1854  00186C                     l1123:
  1855                           
  1856                           ; BSR set to: 0
  1857  00186C  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  1858  001870  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  1859                           
  1860                           ; BSR set to: 0
  1861  001874  0012               	return	
  1862  001876                     __end_of___lwmod:
  1863                           	opt stack 0
  1864                           tblptru	equ	0xFF8
  1865                           tblptrh	equ	0xFF7
  1866                           tblptrl	equ	0xFF6
  1867                           tablat	equ	0xFF5
  1868                           prodh	equ	0xFF4
  1869                           prodl	equ	0xFF3
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           indf2	equ	0xFDF
  1873                           postinc2	equ	0xFDE
  1874                           postdec2	equ	0xFDD
  1875                           fsr2h	equ	0xFDA
  1876                           fsr2l	equ	0xFD9
  1877                           status	equ	0xFD8
  1878                           
  1879 ;; *************** function _FromMainHigh_sendmsg *****************
  1880 ;; Defined at:
  1881 ;;		line 174 in file "../src/messages.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  length          1    wreg     unsigned char 
  1884 ;;  msgtype         1   11[BANK1 ] unsigned char 
  1885 ;;  data            2   12[BANK1 ] PTR void 
  1886 ;;		 -> main@motor_data(14), main@t1thread_data(2), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  length          1   67[BANK0 ] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      char 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1898 ;;      Params:         0       0       3       0       0
  1899 ;;      Locals:         0       1       0       0       0
  1900 ;;      Temps:          0       0       0       0       0
  1901 ;;      Totals:         0       1       3       0       0
  1902 ;;Total ram usage:        4 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:   12
  1905 ;; This function calls:
  1906 ;;		_send_msg
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;;		_timer1_lthread
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text5
  1914  001BA2                     __ptext5:
  1915                           	opt stack 0
  1916  001BA2                     _FromMainHigh_sendmsg:
  1917                           	opt stack 17
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;incstack = 0
  1921                           ;FromMainHigh_sendmsg@length stored from wreg
  1922  001BA2  0100               	movlb	0	; () banked
  1923  001BA4  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1927  001BA6  0103               	movlb	3	; () banked
  1928  001BA8  0E03               	movlw	high _FromMainHigh_MQ
  1929  001BAA  0101               	movlb	1	; () banked
  1930  001BAC  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  1931  001BAE  0103               	movlb	3	; () banked
  1932  001BB0  0E00               	movlw	low _FromMainHigh_MQ
  1933  001BB2  0101               	movlb	1	; () banked
  1934  001BB4  6F00               	movwf	send_msg@qptr& (0+255),b
  1935  001BB6  C0C3  F102         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1936  001BBA  C10B  F103         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1937  001BBE  0101               	movlb	1	; () banked
  1938  001BC0  C10D  F105         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1939  001BC4  0101               	movlb	1	; () banked
  1940  001BC6  C10C  F104         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1941  001BCA  EC84  F006         	call	_send_msg	;wreg free
  1942  001BCE  0012               	return	
  1943  001BD0                     __end_of_FromMainHigh_sendmsg:
  1944                           	opt stack 0
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           indf2	equ	0xFDF
  1954                           postinc2	equ	0xFDE
  1955                           postdec2	equ	0xFDD
  1956                           fsr2h	equ	0xFDA
  1957                           fsr2l	equ	0xFD9
  1958                           status	equ	0xFD8
  1959                           
  1960 ;; *************** function _timer0_lthread *****************
  1961 ;; Defined at:
  1962 ;;		line 9 in file "../src/timer0_thread.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  1965 ;;		 -> main@t0thread_data(2), 
  1966 ;;  msgtype         2   58[BANK0 ] int 
  1967 ;;  length          2   60[BANK0 ] int 
  1968 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  1969 ;;		 -> main@msgbuffer(15), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  1972 ;;		 -> main@msgbuffer(15), 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2   56[BANK0 ] int 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1982 ;;      Params:         0       8       0       0       0
  1983 ;;      Locals:         0       2       0       0       0
  1984 ;;      Temps:          0       0       0       0       0
  1985 ;;      Totals:         0      10       0       0       0
  1986 ;;Total ram usage:       10 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:   10
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text6
  1997  001D8A                     __ptext6:
  1998                           	opt stack 0
  1999  001D8A                     _timer0_lthread:
  2000                           	opt stack 20
  2001                           
  2002                           ;timer0_thread.c: 10: unsigned int *msgval;
  2003                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2004                           
  2005                           ;incstack = 0
  2006  001D8A  0100               	movlb	0	; () banked
  2007  001D8C  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2008  001D90  0100               	movlb	0	; () banked
  2009  001D92  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2010                           
  2011                           ; BSR set to: 0
  2012  001D96  0012               	return	
  2013  001D98                     __end_of_timer0_lthread:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           prodh	equ	0xFF4
  2020                           prodl	equ	0xFF3
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           indf2	equ	0xFDF
  2024                           postinc2	equ	0xFDE
  2025                           postdec2	equ	0xFDD
  2026                           fsr2h	equ	0xFDA
  2027                           fsr2l	equ	0xFD9
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _init_timer1_lthread *****************
  2031 ;; Defined at:
  2032 ;;		line 7 in file "../src/timer1_thread.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2035 ;;		 -> main@t1thread_data(2), 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;		None               void
  2040 ;; Registers used:
  2041 ;;		wreg, fsr2l, fsr2h
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2047 ;;      Params:         0       2       0       0       0
  2048 ;;      Locals:         0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0
  2050 ;;      Totals:         0       2       0       0       0
  2051 ;;Total ram usage:        2 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:   10
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_main
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text7
  2062  001D32                     __ptext7:
  2063                           	opt stack 0
  2064  001D32                     _init_timer1_lthread:
  2065                           	opt stack 20
  2066                           
  2067                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;incstack = 0
  2071  001D32  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2072  001D36  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2073  001D3A  0E00               	movlw	0
  2074  001D3C  6EDE               	movwf	postinc2,c
  2075  001D3E  0E00               	movlw	0
  2076  001D40  6EDD               	movwf	postdec2,c
  2077  001D42  0012               	return	
  2078  001D44                     __end_of_init_timer1_lthread:
  2079                           	opt stack 0
  2080                           tblptru	equ	0xFF8
  2081                           tblptrh	equ	0xFF7
  2082                           tblptrl	equ	0xFF6
  2083                           tablat	equ	0xFF5
  2084                           prodh	equ	0xFF4
  2085                           prodl	equ	0xFF3
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           indf2	equ	0xFDF
  2089                           postinc2	equ	0xFDE
  2090                           postdec2	equ	0xFDD
  2091                           fsr2h	equ	0xFDA
  2092                           fsr2l	equ	0xFD9
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function _init_queues *****************
  2096 ;; Defined at:
  2097 ;;		line 194 in file "../src/messages.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;		None               void
  2104 ;; Registers used:
  2105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:   11
  2118 ;; This function calls:
  2119 ;;		_init_queue
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text8
  2126  0018D6                     __ptext8:
  2127                           	opt stack 0
  2128  0018D6                     _init_queues:
  2129                           	opt stack 19
  2130                           
  2131                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2132                           
  2133                           ;incstack = 0
  2134  0018D6  0E00               	movlw	0
  2135  0018D8  0100               	movlb	0	; () banked
  2136  0018DA  6FC7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2140  0018DC  0101               	movlb	1	; () banked
  2141  0018DE  0E01               	movlw	high _ToMainLow_MQ
  2142  0018E0  0100               	movlb	0	; () banked
  2143  0018E2  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2144  0018E4  0101               	movlb	1	; () banked
  2145  0018E6  0E62               	movlw	low _ToMainLow_MQ
  2146  0018E8  0100               	movlb	0	; () banked
  2147  0018EA  6FB8               	movwf	init_queue@qptr& (0+255),b
  2148  0018EC  ECA8  F00B         	call	_init_queue	;wreg free
  2149                           
  2150                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2151  0018F0  0102               	movlb	2	; () banked
  2152  0018F2  0E02               	movlw	high _ToMainHigh_MQ
  2153  0018F4  0100               	movlb	0	; () banked
  2154  0018F6  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2155  0018F8  0102               	movlb	2	; () banked
  2156  0018FA  0E57               	movlw	low _ToMainHigh_MQ
  2157  0018FC  0100               	movlb	0	; () banked
  2158  0018FE  6FB8               	movwf	init_queue@qptr& (0+255),b
  2159  001900  ECA8  F00B         	call	_init_queue	;wreg free
  2160                           
  2161                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2162  001904  0102               	movlb	2	; () banked
  2163  001906  0E02               	movlw	high _FromMainLow_MQ
  2164  001908  0100               	movlb	0	; () banked
  2165  00190A  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2166  00190C  0102               	movlb	2	; () banked
  2167  00190E  0E00               	movlw	low _FromMainLow_MQ
  2168  001910  0100               	movlb	0	; () banked
  2169  001912  6FB8               	movwf	init_queue@qptr& (0+255),b
  2170  001914  ECA8  F00B         	call	_init_queue	;wreg free
  2171                           
  2172                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2173  001918  0103               	movlb	3	; () banked
  2174  00191A  0E03               	movlw	high _FromMainHigh_MQ
  2175  00191C  0100               	movlb	0	; () banked
  2176  00191E  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2177  001920  0103               	movlb	3	; () banked
  2178  001922  0E00               	movlw	low _FromMainHigh_MQ
  2179  001924  0100               	movlb	0	; () banked
  2180  001926  6FB8               	movwf	init_queue@qptr& (0+255),b
  2181  001928  ECA8  F00B         	call	_init_queue	;wreg free
  2182  00192C  0012               	return	
  2183  00192E                     __end_of_init_queues:
  2184                           	opt stack 0
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           prodh	equ	0xFF4
  2190                           prodl	equ	0xFF3
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           indf2	equ	0xFDF
  2194                           postinc2	equ	0xFDE
  2195                           postdec2	equ	0xFDD
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _init_queue *****************
  2201 ;; Defined at:
  2202 ;;		line 14 in file "../src/messages.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2205 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  i               1   58[BANK0 ] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2217 ;;      Params:         0       2       0       0       0
  2218 ;;      Locals:         0       1       0       0       0
  2219 ;;      Temps:          0       0       0       0       0
  2220 ;;      Totals:         0       3       0       0       0
  2221 ;;Total ram usage:        3 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:   10
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_init_queues
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text9
  2232  001750                     __ptext9:
  2233                           	opt stack 0
  2234  001750                     _init_queue:
  2235                           	opt stack 19
  2236                           
  2237                           ;messages.c: 15: unsigned char i;
  2238                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2239                           
  2240                           ;incstack = 0
  2241  001750  0100               	movlb	0	; () banked
  2242  001752  EE20 F055          	lfsr	2,85
  2243  001756  0100               	movlb	0	; () banked
  2244  001758  51B8               	movf	init_queue@qptr& (0+255),w,b
  2245  00175A  26D9               	addwf	fsr2l,f,c
  2246  00175C  0100               	movlb	0	; () banked
  2247  00175E  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2248  001760  22DA               	addwfc	fsr2h,f,c
  2249  001762  0E00               	movlw	0
  2250  001764  6EDF               	movwf	indf2,c
  2251                           
  2252                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2253  001766  0100               	movlb	0	; () banked
  2254  001768  EE20 F056          	lfsr	2,86
  2255  00176C  0100               	movlb	0	; () banked
  2256  00176E  51B8               	movf	init_queue@qptr& (0+255),w,b
  2257  001770  26D9               	addwf	fsr2l,f,c
  2258  001772  0100               	movlb	0	; () banked
  2259  001774  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2260  001776  22DA               	addwfc	fsr2h,f,c
  2261  001778  0E00               	movlw	0
  2262  00177A  6EDF               	movwf	indf2,c
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2266  00177C  0E00               	movlw	0
  2267  00177E  0100               	movlb	0	; () banked
  2268  001780  6FBA               	movwf	init_queue@i& (0+255),b
  2269                           
  2270                           ; BSR set to: 0
  2271  001782  0E04               	movlw	4
  2272  001784  0100               	movlb	0	; () banked
  2273  001786  65BA               	cpfsgt	init_queue@i& (0+255),b
  2274  001788  D001               	goto	l2664
  2275  00178A  0012               	return	
  2276  00178C                     l2664:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;messages.c: 20: qptr->queue[i].full = 0;
  2280  00178C  0100               	movlb	0	; () banked
  2281  00178E  51BA               	movf	init_queue@i& (0+255),w,b
  2282  001790  0D11               	mullw	17
  2283  001792  50F3               	movf	prodl,w,c
  2284  001794  0100               	movlb	0	; () banked
  2285  001796  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2286  001798  6ED9               	movwf	fsr2l,c
  2287  00179A  50F4               	movf	prodh,w,c
  2288  00179C  0100               	movlb	0	; () banked
  2289  00179E  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2290  0017A0  6EDA               	movwf	fsr2h,c
  2291  0017A2  0E00               	movlw	0
  2292  0017A4  6EDF               	movwf	indf2,c
  2293                           
  2294                           ; BSR set to: 0
  2295  0017A6  0100               	movlb	0	; () banked
  2296  0017A8  2BBA               	incf	init_queue@i& (0+255),f,b
  2297                           
  2298                           ; BSR set to: 0
  2299  0017AA  0E04               	movlw	4
  2300  0017AC  0100               	movlb	0	; () banked
  2301  0017AE  65BA               	cpfsgt	init_queue@i& (0+255),b
  2302  0017B0  D7ED               	goto	l2664
  2303  0017B2  0012               	return	
  2304  0017B4                     __end_of_init_queue:
  2305                           	opt stack 0
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           prodh	equ	0xFF4
  2311                           prodl	equ	0xFF3
  2312                           postinc0	equ	0xFEE
  2313                           wreg	equ	0xFE8
  2314                           indf2	equ	0xFDF
  2315                           postinc2	equ	0xFDE
  2316                           postdec2	equ	0xFDD
  2317                           fsr2h	equ	0xFDA
  2318                           fsr2l	equ	0xFD9
  2319                           status	equ	0xFD8
  2320                           
  2321 ;; *************** function _init_i2c *****************
  2322 ;; Defined at:
  2323 ;;		line 358 in file "../src/my_i2c.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2326 ;;		 -> main@ic(38), 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;		None               void
  2331 ;; Registers used:
  2332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2338 ;;      Params:         0       2       0       0       0
  2339 ;;      Locals:         0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0
  2341 ;;      Totals:         0       2       0       0       0
  2342 ;;Total ram usage:        2 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:   10
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text10
  2353  0016EA                     __ptext10:
  2354                           	opt stack 0
  2355  0016EA                     _init_i2c:
  2356                           	opt stack 20
  2357                           
  2358                           ;my_i2c.c: 359: ic_ptr = ic;
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;incstack = 0
  2362  0016EA  0100               	movlb	0	; () banked
  2363  0016EC  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2364  0016F0  0100               	movlb	0	; () banked
  2365  0016F2  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;my_i2c.c: 360: ic_ptr->buflen = 0;
  2369  0016F6  0100               	movlb	0	; () banked
  2370  0016F8  EE20 F00E          	lfsr	2,14
  2371  0016FC  0100               	movlb	0	; () banked
  2372  0016FE  51C5               	movf	_ic_ptr& (0+255),w,b
  2373  001700  26D9               	addwf	fsr2l,f,c
  2374  001702  0100               	movlb	0	; () banked
  2375  001704  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2376  001706  22DA               	addwfc	fsr2h,f,c
  2377  001708  0E00               	movlw	0
  2378  00170A  6EDF               	movwf	indf2,c
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;my_i2c.c: 361: ic_ptr->event_count = 0;
  2382  00170C  0100               	movlb	0	; () banked
  2383  00170E  EE20 F020          	lfsr	2,32
  2384  001712  0100               	movlb	0	; () banked
  2385  001714  51C5               	movf	_ic_ptr& (0+255),w,b
  2386  001716  26D9               	addwf	fsr2l,f,c
  2387  001718  0100               	movlb	0	; () banked
  2388  00171A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2389  00171C  22DA               	addwfc	fsr2h,f,c
  2390  00171E  0E00               	movlw	0
  2391  001720  6EDF               	movwf	indf2,c
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;my_i2c.c: 362: ic_ptr->status = 0x5;
  2395  001722  0100               	movlb	0	; () banked
  2396  001724  EE20 F021          	lfsr	2,33
  2397  001728  0100               	movlb	0	; () banked
  2398  00172A  51C5               	movf	_ic_ptr& (0+255),w,b
  2399  00172C  26D9               	addwf	fsr2l,f,c
  2400  00172E  0100               	movlb	0	; () banked
  2401  001730  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2402  001732  22DA               	addwfc	fsr2h,f,c
  2403  001734  0E05               	movlw	5
  2404  001736  6EDF               	movwf	indf2,c
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;my_i2c.c: 363: ic_ptr->error_count = 0;
  2408  001738  0100               	movlb	0	; () banked
  2409  00173A  EE20 F023          	lfsr	2,35
  2410  00173E  0100               	movlb	0	; () banked
  2411  001740  51C5               	movf	_ic_ptr& (0+255),w,b
  2412  001742  26D9               	addwf	fsr2l,f,c
  2413  001744  0100               	movlb	0	; () banked
  2414  001746  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2415  001748  22DA               	addwfc	fsr2h,f,c
  2416  00174A  0E00               	movlw	0
  2417  00174C  6EDF               	movwf	indf2,c
  2418                           
  2419                           ; BSR set to: 0
  2420  00174E  0012               	return	
  2421  001750                     __end_of_init_i2c:
  2422                           	opt stack 0
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           postinc0	equ	0xFEE
  2430                           wreg	equ	0xFE8
  2431                           indf2	equ	0xFDF
  2432                           postinc2	equ	0xFDE
  2433                           postdec2	equ	0xFDD
  2434                           fsr2h	equ	0xFDA
  2435                           fsr2l	equ	0xFD9
  2436                           status	equ	0xFD8
  2437                           
  2438 ;; *************** function _i_like_to_moveit_moveit *****************
  2439 ;; Defined at:
  2440 ;;		line 3 in file "C:/Users/alex/Documents/VI/School/Embedded/code/pic_motor/src/src/motor.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  left_side_sp    1    wreg     char 
  2443 ;;  right_side_s    1   16[BANK1 ] char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  left_side_sp    1   17[BANK1 ] char 
  2446 ;;  moves           4   18[BANK1 ] unsigned char [4]
  2447 ;; Return value:  Size  Location     Type
  2448 ;;		None               void
  2449 ;; Registers used:
  2450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2456 ;;      Params:         0       0       1       0       0
  2457 ;;      Locals:         0       0       5       0       0
  2458 ;;      Temps:          0       0       0       0       0
  2459 ;;      Totals:         0       0       6       0       0
  2460 ;;Total ram usage:        6 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:   14
  2463 ;; This function calls:
  2464 ;;		_send_uart_message
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text11
  2471  001422                     __ptext11:
  2472                           	opt stack 0
  2473  001422                     _i_like_to_moveit_moveit:
  2474                           	opt stack 16
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;incstack = 0
  2478                           ;i_like_to_moveit_moveit@left_side_speed stored from wreg
  2479  001422  0101               	movlb	1	; () banked
  2480  001424  6F11               	movwf	i_like_to_moveit_moveit@left_side_speed& (0+255),b
  2481                           
  2482                           ; BSR set to: 1
  2483                           ;motor.c: 5: unsigned char moves[4];
  2484                           ;motor.c: 11: moves[0] = 128;
  2485  001426  0E80               	movlw	128
  2486  001428  0101               	movlb	1	; () banked
  2487  00142A  6F12               	movwf	i_like_to_moveit_moveit@moves& (0+255),b
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;motor.c: 13: if( left_side_speed >=0 )
  2491  00142C  0101               	movlb	1	; () banked
  2492  00142E  BF11               	btfsc	i_like_to_moveit_moveit@left_side_speed& (0+255),7,b
  2493  001430  D006               	goto	l4084
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;motor.c: 14: {
  2497                           ;motor.c: 15: moves[1] = 0;
  2498  001432  0E00               	movlw	0
  2499  001434  0101               	movlb	1	; () banked
  2500  001436  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;motor.c: 16: moves[2] = left_side_speed;
  2504  001438  C111  F114         	movff	i_like_to_moveit_moveit@left_side_speed,i_like_to_moveit_moveit@moves+2
  2505                           
  2506                           ;motor.c: 17: }
  2507  00143C  D010               	goto	l529
  2508  00143E                     l4084:
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;motor.c: 18: else
  2512                           ;motor.c: 19: {
  2513                           ;motor.c: 20: moves[1] = 1;
  2514  00143E  0E01               	movlw	1
  2515  001440  0101               	movlb	1	; () banked
  2516  001442  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2517                           
  2518                           ; BSR set to: 1
  2519                           ;motor.c: 22: if(left_side_speed == -128)
  2520  001444  0101               	movlb	1	; () banked
  2521  001446  5111               	movf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2522  001448  0A80               	xorlw	128
  2523  00144A  A4D8               	btfss	status,2,c
  2524  00144C  D003               	goto	l4090
  2525                           
  2526                           ; BSR set to: 1
  2527                           ;motor.c: 23: {
  2528                           ;motor.c: 24: moves[2] = (unsigned char)((-left_side_speed)-1);
  2529  00144E  0101               	movlb	1	; () banked
  2530  001450  2911               	incf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2531  001452  D002               	goto	L2
  2532  001454                     l4090:
  2533                           
  2534                           ; BSR set to: 1
  2535                           ;motor.c: 26: else
  2536                           ;motor.c: 27: {
  2537                           ;motor.c: 28: moves[2] = (unsigned char)(-left_side_speed);
  2538  001454  0101               	movlb	1	; () banked
  2539  001456  5111               	movf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2540  001458                     L2:
  2541  001458  0800               	sublw	0
  2542  00145A  0101               	movlb	1	; () banked
  2543  00145C  6F14               	movwf	(i_like_to_moveit_moveit@moves+2)& (0+255),b
  2544  00145E                     l529:
  2545                           
  2546                           ; BSR set to: 1
  2547                           ;motor.c: 29: }
  2548                           ;motor.c: 30: }
  2549                           ;motor.c: 32: moves[3] = (moves[0] + moves[1] + moves[2])&127;
  2550  00145E  0101               	movlb	1	; () banked
  2551  001460  5113               	movf	(i_like_to_moveit_moveit@moves+1)& (0+255),w,b
  2552  001462  0101               	movlb	1	; () banked
  2553  001464  2514               	addwf	(i_like_to_moveit_moveit@moves+2)& (0+255),w,b
  2554  001466  0101               	movlb	1	; () banked
  2555  001468  2512               	addwf	i_like_to_moveit_moveit@moves& (0+255),w,b
  2556  00146A  0B7F               	andlw	127
  2557  00146C  0101               	movlb	1	; () banked
  2558  00146E  6F15               	movwf	(i_like_to_moveit_moveit@moves+3)& (0+255),b
  2559                           
  2560                           ; BSR set to: 1
  2561                           ;motor.c: 34: send_uart_message(moves);
  2562  001470  0101               	movlb	1	; () banked
  2563  001472  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2564  001474  0101               	movlb	1	; () banked
  2565  001476  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2566  001478  0101               	movlb	1	; () banked
  2567  00147A  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2568  00147C  0101               	movlb	1	; () banked
  2569  00147E  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2570  001480  EC89  F00E         	call	_send_uart_message	;wreg free
  2571                           
  2572                           ;motor.c: 36: if( right_side_speed >=0 )
  2573  001484  0101               	movlb	1	; () banked
  2574  001486  BF10               	btfsc	i_like_to_moveit_moveit@right_side_speed& (0+255),7,b
  2575  001488  D006               	goto	l4100
  2576                           
  2577                           ; BSR set to: 1
  2578                           ;motor.c: 37: {
  2579                           ;motor.c: 38: moves[1] = 4;
  2580  00148A  0E04               	movlw	4
  2581  00148C  0101               	movlb	1	; () banked
  2582  00148E  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;motor.c: 39: moves[2] = right_side_speed;
  2586  001490  C110  F114         	movff	i_like_to_moveit_moveit@right_side_speed,i_like_to_moveit_moveit@moves+2
  2587                           
  2588                           ;motor.c: 40: }
  2589  001494  D010               	goto	l533
  2590  001496                     l4100:
  2591                           
  2592                           ; BSR set to: 1
  2593                           ;motor.c: 41: else
  2594                           ;motor.c: 42: {
  2595                           ;motor.c: 43: moves[1] = 5;
  2596  001496  0E05               	movlw	5
  2597  001498  0101               	movlb	1	; () banked
  2598  00149A  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2599                           
  2600                           ; BSR set to: 1
  2601                           ;motor.c: 45: if(right_side_speed == -128)
  2602  00149C  0101               	movlb	1	; () banked
  2603  00149E  5110               	movf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2604  0014A0  0A80               	xorlw	128
  2605  0014A2  A4D8               	btfss	status,2,c
  2606  0014A4  D003               	goto	l4106
  2607                           
  2608                           ; BSR set to: 1
  2609                           ;motor.c: 46: {
  2610                           ;motor.c: 47: moves[2] = (unsigned char)((-right_side_speed)-1);
  2611  0014A6  0101               	movlb	1	; () banked
  2612  0014A8  2910               	incf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2613  0014AA  D002               	goto	L3
  2614  0014AC                     l4106:
  2615                           
  2616                           ; BSR set to: 1
  2617                           ;motor.c: 49: else
  2618                           ;motor.c: 50: {
  2619                           ;motor.c: 51: moves[2] = (unsigned char)(-right_side_speed);
  2620  0014AC  0101               	movlb	1	; () banked
  2621  0014AE  5110               	movf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2622  0014B0                     L3:
  2623  0014B0  0800               	sublw	0
  2624  0014B2  0101               	movlb	1	; () banked
  2625  0014B4  6F14               	movwf	(i_like_to_moveit_moveit@moves+2)& (0+255),b
  2626  0014B6                     l533:
  2627                           
  2628                           ; BSR set to: 1
  2629                           ;motor.c: 52: }
  2630                           ;motor.c: 53: }
  2631                           ;motor.c: 55: moves[3] = (moves[0] + moves[1] + moves[2])&127;
  2632  0014B6  0101               	movlb	1	; () banked
  2633  0014B8  5113               	movf	(i_like_to_moveit_moveit@moves+1)& (0+255),w,b
  2634  0014BA  0101               	movlb	1	; () banked
  2635  0014BC  2514               	addwf	(i_like_to_moveit_moveit@moves+2)& (0+255),w,b
  2636  0014BE  0101               	movlb	1	; () banked
  2637  0014C0  2512               	addwf	i_like_to_moveit_moveit@moves& (0+255),w,b
  2638  0014C2  0B7F               	andlw	127
  2639  0014C4  0101               	movlb	1	; () banked
  2640  0014C6  6F15               	movwf	(i_like_to_moveit_moveit@moves+3)& (0+255),b
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;motor.c: 57: send_uart_message(moves);
  2644  0014C8  0101               	movlb	1	; () banked
  2645  0014CA  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2646  0014CC  0101               	movlb	1	; () banked
  2647  0014CE  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2648  0014D0  0101               	movlb	1	; () banked
  2649  0014D2  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2650  0014D4  0101               	movlb	1	; () banked
  2651  0014D6  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2652  0014D8  EC89  F00E         	call	_send_uart_message	;wreg free
  2653  0014DC  0012               	return	
  2654  0014DE                     __end_of_i_like_to_moveit_moveit:
  2655                           	opt stack 0
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           prodh	equ	0xFF4
  2661                           prodl	equ	0xFF3
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           indf2	equ	0xFDF
  2665                           postinc2	equ	0xFDE
  2666                           postdec2	equ	0xFDD
  2667                           fsr2h	equ	0xFDA
  2668                           fsr2l	equ	0xFD9
  2669                           status	equ	0xFD8
  2670                           
  2671 ;; *************** function _send_uart_message *****************
  2672 ;; Defined at:
  2673 ;;		line 186 in file "../src/my_uart.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  message_ptr     2   14[BANK1 ] PTR unsigned char 
  2676 ;;		 -> i_like_to_moveit_moveit@moves(4), 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  message_q_co    1   68[BANK0 ] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      unsigned char 
  2681 ;; Registers used:
  2682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2688 ;;      Params:         0       0       2       0       0
  2689 ;;      Locals:         0       1       0       0       0
  2690 ;;      Temps:          0       0       0       0       0
  2691 ;;      Totals:         0       1       2       0       0
  2692 ;;Total ram usage:        3 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:   13
  2695 ;; This function calls:
  2696 ;;		_FromMainLow_sendmsg
  2697 ;; This function is called by:
  2698 ;;		_i_like_to_moveit_moveit
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text12
  2703  001D12                     __ptext12:
  2704                           	opt stack 0
  2705  001D12                     _send_uart_message:
  2706                           	opt stack 16
  2707                           
  2708                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(4,31,(void *) messag
      +                          e_ptr );
  2709                           
  2710                           ;incstack = 0
  2711  001D12  0E1F               	movlw	31
  2712  001D14  0101               	movlb	1	; () banked
  2713  001D16  6F0B               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2714  001D18  0101               	movlb	1	; () banked
  2715  001D1A  C10F  F10D         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2716  001D1E  0101               	movlb	1	; () banked
  2717  001D20  C10E  F10C         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2718  001D24  0E04               	movlw	4
  2719  001D26  ECE8  F00D         	call	_FromMainLow_sendmsg
  2720  001D2A  0100               	movlb	0	; () banked
  2721  001D2C  6FC4               	movwf	send_uart_message@message_q_code& (0+255),b
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;my_uart.c: 193: }
  2725                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;my_uart.c: 191: {
  2729                           ;my_uart.c: 192: return 0x02;
  2730                           ;	Return value of _send_uart_message is never used
  2731                           
  2732                           ;my_uart.c: 190: if( message_q_code == -1)
  2733  001D2E  889D               	bsf	3997,4,c	;volatile
  2734                           
  2735                           ; BSR set to: 0
  2736                           
  2737                           ;my_uart.c: 196: return 0x00;
  2738                           ;	Return value of _send_uart_message is never used
  2739  001D30  0012               	return	
  2740  001D32                     __end_of_send_uart_message:
  2741                           	opt stack 0
  2742                           tblptru	equ	0xFF8
  2743                           tblptrh	equ	0xFF7
  2744                           tblptrl	equ	0xFF6
  2745                           tablat	equ	0xFF5
  2746                           prodh	equ	0xFF4
  2747                           prodl	equ	0xFF3
  2748                           postinc0	equ	0xFEE
  2749                           wreg	equ	0xFE8
  2750                           indf2	equ	0xFDF
  2751                           postinc2	equ	0xFDE
  2752                           postdec2	equ	0xFDD
  2753                           fsr2h	equ	0xFDA
  2754                           fsr2l	equ	0xFD9
  2755                           status	equ	0xFD8
  2756                           
  2757 ;; *************** function _FromMainLow_sendmsg *****************
  2758 ;; Defined at:
  2759 ;;		line 150 in file "../src/messages.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  length          1    wreg     unsigned char 
  2762 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2763 ;;  data            2   12[BANK1 ] PTR void 
  2764 ;;		 -> i_like_to_moveit_moveit@moves(4), 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  length          1   67[BANK0 ] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      char 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2776 ;;      Params:         0       0       3       0       0
  2777 ;;      Locals:         0       1       0       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         0       1       3       0       0
  2780 ;;Total ram usage:        4 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:   12
  2783 ;; This function calls:
  2784 ;;		_send_msg
  2785 ;; This function is called by:
  2786 ;;		_send_uart_message
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text13
  2791  001BD0                     __ptext13:
  2792                           	opt stack 0
  2793  001BD0                     _FromMainLow_sendmsg:
  2794                           	opt stack 16
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;incstack = 0
  2798                           ;FromMainLow_sendmsg@length stored from wreg
  2799  001BD0  0100               	movlb	0	; () banked
  2800  001BD2  6FC3               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2804  001BD4  0102               	movlb	2	; () banked
  2805  001BD6  0E02               	movlw	high _FromMainLow_MQ
  2806  001BD8  0101               	movlb	1	; () banked
  2807  001BDA  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2808  001BDC  0102               	movlb	2	; () banked
  2809  001BDE  0E00               	movlw	low _FromMainLow_MQ
  2810  001BE0  0101               	movlb	1	; () banked
  2811  001BE2  6F00               	movwf	send_msg@qptr& (0+255),b
  2812  001BE4  C0C3  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  2813  001BE8  C10B  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2814  001BEC  0101               	movlb	1	; () banked
  2815  001BEE  C10D  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2816  001BF2  0101               	movlb	1	; () banked
  2817  001BF4  C10C  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  2818  001BF8  EC84  F006         	call	_send_msg	;wreg free
  2819  001BFC  0012               	return	
  2820  001BFE                     __end_of_FromMainLow_sendmsg:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           indf2	equ	0xFDF
  2831                           postinc2	equ	0xFDE
  2832                           postdec2	equ	0xFDD
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837 ;; *************** function _send_msg *****************
  2838 ;; Defined at:
  2839 ;;		line 24 in file "../src/messages.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2842 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2843 ;;  length          1    2[BANK1 ] unsigned char 
  2844 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2845 ;;  data            2    4[BANK1 ] PTR void 
  2846 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  2847 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  2848 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread
      +_data(2), 
  2849 ;;		 -> main@ic(38), 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2852 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  2853 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2854 ;;  tlength         2    6[BANK1 ] unsigned int 
  2855 ;;  slot            1    8[BANK1 ] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      char 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2865 ;;      Params:         0       0       6       0       0
  2866 ;;      Locals:         0       0       5       0       0
  2867 ;;      Temps:          0       1       0       0       0
  2868 ;;      Totals:         0       1      11       0       0
  2869 ;;Total ram usage:       12 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:   11
  2872 ;; This function calls:
  2873 ;;		___awmod
  2874 ;;		_memcpy
  2875 ;; This function is called by:
  2876 ;;		_FromMainLow_sendmsg
  2877 ;;		_FromMainHigh_sendmsg
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text14
  2882  000D08                     __ptext14:
  2883                           	opt stack 0
  2884  000D08                     _send_msg:
  2885                           	opt stack 17
  2886                           
  2887                           ;messages.c: 25: unsigned char slot;
  2888                           ;messages.c: 27: msg *qmsg;
  2889                           ;messages.c: 28: size_t tlength = length;
  2890                           
  2891                           ;incstack = 0
  2892  000D08  0101               	movlb	1	; () banked
  2893  000D0A  C102  F106         	movff	send_msg@length,send_msg@tlength
  2894  000D0E  0101               	movlb	1	; () banked
  2895  000D10  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  2896                           
  2897                           ; BSR set to: 1
  2898                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2899  000D12  0101               	movlb	1	; () banked
  2900  000D14  EE20 F055          	lfsr	2,85
  2901  000D18  0101               	movlb	1	; () banked
  2902  000D1A  5100               	movf	send_msg@qptr& (0+255),w,b
  2903  000D1C  26D9               	addwf	fsr2l,f,c
  2904  000D1E  0101               	movlb	1	; () banked
  2905  000D20  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2906  000D22  22DA               	addwfc	fsr2h,f,c
  2907  000D24  50DF               	movf	indf2,w,c
  2908  000D26  0101               	movlb	1	; () banked
  2909  000D28  6F08               	movwf	send_msg@slot& (0+255),b
  2910                           
  2911                           ; BSR set to: 1
  2912                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2913  000D2A  0101               	movlb	1	; () banked
  2914  000D2C  5108               	movf	send_msg@slot& (0+255),w,b
  2915  000D2E  0D11               	mullw	17
  2916  000D30  50F3               	movf	prodl,w,c
  2917  000D32  0101               	movlb	1	; () banked
  2918  000D34  2500               	addwf	send_msg@qptr& (0+255),w,b
  2919  000D36  0101               	movlb	1	; () banked
  2920  000D38  6F09               	movwf	send_msg@qmsg& (0+255),b
  2921  000D3A  50F4               	movf	prodh,w,c
  2922  000D3C  0101               	movlb	1	; () banked
  2923  000D3E  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2924  000D40  0101               	movlb	1	; () banked
  2925  000D42  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;messages.c: 41: if (qmsg->full != 0) {
  2929  000D44  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2930  000D48  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2931  000D4C  50DF               	movf	indf2,w,c
  2932  000D4E  B4D8               	btfsc	status,2,c
  2933  000D50  D002               	goto	l3530
  2934                           
  2935                           ; BSR set to: 1
  2936                           ;messages.c: 42: return (-1);
  2937  000D52  0EFF               	movlw	255
  2938  000D54  0012               	return	
  2939  000D56                     l3530:
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;messages.c: 43: }
  2943                           ;messages.c: 46: qmsg->length = length;
  2944  000D56  0101               	movlb	1	; () banked
  2945  000D58  EE20 F001          	lfsr	2,1
  2946  000D5C  0101               	movlb	1	; () banked
  2947  000D5E  5109               	movf	send_msg@qmsg& (0+255),w,b
  2948  000D60  26D9               	addwf	fsr2l,f,c
  2949  000D62  0101               	movlb	1	; () banked
  2950  000D64  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2951  000D66  22DA               	addwfc	fsr2h,f,c
  2952  000D68  0101               	movlb	1	; () banked
  2953  000D6A  C102  FFDF         	movff	send_msg@length,indf2
  2954                           
  2955                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2956  000D6E  0101               	movlb	1	; () banked
  2957  000D70  EE20 F002          	lfsr	2,2
  2958  000D74  0101               	movlb	1	; () banked
  2959  000D76  5109               	movf	send_msg@qmsg& (0+255),w,b
  2960  000D78  26D9               	addwf	fsr2l,f,c
  2961  000D7A  0101               	movlb	1	; () banked
  2962  000D7C  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2963  000D7E  22DA               	addwfc	fsr2h,f,c
  2964  000D80  0101               	movlb	1	; () banked
  2965  000D82  C103  FFDF         	movff	send_msg@msgtype,indf2
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2969  000D86  0E03               	movlw	3
  2970  000D88  0101               	movlb	1	; () banked
  2971  000D8A  2509               	addwf	send_msg@qmsg& (0+255),w,b
  2972  000D8C  0100               	movlb	0	; () banked
  2973  000D8E  6FB8               	movwf	memcpy@d1& (0+255),b
  2974  000D90  0E00               	movlw	0
  2975  000D92  0101               	movlb	1	; () banked
  2976  000D94  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2977  000D96  0100               	movlb	0	; () banked
  2978  000D98  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  2979  000D9A  0101               	movlb	1	; () banked
  2980  000D9C  0100               	movlb	0	; () banked
  2981  000D9E  C105  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  2982  000DA2  0101               	movlb	1	; () banked
  2983  000DA4  0100               	movlb	0	; () banked
  2984  000DA6  C104  F0BA         	movff	send_msg@data,memcpy@s1
  2985  000DAA  C106  F0BC         	movff	send_msg@tlength,memcpy@n
  2986  000DAE  C107  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  2987  000DB2  ECBF  F00C         	call	_memcpy	;wreg free
  2988                           
  2989                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2990  000DB6  0101               	movlb	1	; () banked
  2991  000DB8  EE20 F055          	lfsr	2,85
  2992  000DBC  0101               	movlb	1	; () banked
  2993  000DBE  5100               	movf	send_msg@qptr& (0+255),w,b
  2994  000DC0  26D9               	addwf	fsr2l,f,c
  2995  000DC2  0101               	movlb	1	; () banked
  2996  000DC4  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2997  000DC6  22DA               	addwfc	fsr2h,f,c
  2998  000DC8  0101               	movlb	1	; () banked
  2999  000DCA  EE10 F055          	lfsr	1,85
  3000  000DCE  0101               	movlb	1	; () banked
  3001  000DD0  5100               	movf	send_msg@qptr& (0+255),w,b
  3002  000DD2  26E1               	addwf	fsr1l,f,c
  3003  000DD4  0101               	movlb	1	; () banked
  3004  000DD6  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3005  000DD8  22E2               	addwfc	fsr1h,f,c
  3006  000DDA  50E7               	movf	indf1,w,c
  3007  000DDC  0100               	movlb	0	; () banked
  3008  000DDE  6FC2               	movwf	??_send_msg& (0+255),b
  3009  000DE0  0E01               	movlw	1
  3010  000DE2  0100               	movlb	0	; () banked
  3011  000DE4  25C2               	addwf	??_send_msg& (0+255),w,b
  3012  000DE6  0100               	movlb	0	; () banked
  3013  000DE8  6FB8               	movwf	___awmod@dividend& (0+255),b
  3014  000DEA  0100               	movlb	0	; () banked
  3015  000DEC  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3016  000DEE  0E00               	movlw	0
  3017  000DF0  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3018  000DF2  0E00               	movlw	0
  3019  000DF4  0100               	movlb	0	; () banked
  3020  000DF6  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3021  000DF8  0E05               	movlw	5
  3022  000DFA  0100               	movlb	0	; () banked
  3023  000DFC  6FBA               	movwf	___awmod@divisor& (0+255),b
  3024  000DFE  ECED  F008         	call	___awmod	;wreg free
  3025  000E02  0100               	movlb	0	; () banked
  3026  000E04  51B8               	movf	?___awmod& (0+255),w,b
  3027  000E06  6EDF               	movwf	indf2,c
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;messages.c: 59: qmsg->full = 1;
  3031  000E08  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3032  000E0C  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3033  000E10  0E01               	movlw	1
  3034  000E12  6EDF               	movwf	indf2,c
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;messages.c: 60: return (1);
  3038  000E14  0E01               	movlw	1
  3039  000E16  0012               	return	
  3040  000E18                     __end_of_send_msg:
  3041                           	opt stack 0
  3042                           tblptru	equ	0xFF8
  3043                           tblptrh	equ	0xFF7
  3044                           tblptrl	equ	0xFF6
  3045                           tablat	equ	0xFF5
  3046                           prodh	equ	0xFF4
  3047                           prodl	equ	0xFF3
  3048                           postinc0	equ	0xFEE
  3049                           wreg	equ	0xFE8
  3050                           indf1	equ	0xFE7
  3051                           fsr1h	equ	0xFE2
  3052                           fsr1l	equ	0xFE1
  3053                           indf2	equ	0xFDF
  3054                           postinc2	equ	0xFDE
  3055                           postdec2	equ	0xFDD
  3056                           fsr2h	equ	0xFDA
  3057                           fsr2l	equ	0xFD9
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _i2c_configure_slave *****************
  3061 ;; Defined at:
  3062 ;;		line 369 in file "../src/my_i2c.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  addr            1    wreg     unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  addr            1   56[BANK0 ] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;		None               void
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3076 ;;      Params:         0       0       0       0       0
  3077 ;;      Locals:         0       1       0       0       0
  3078 ;;      Temps:          0       0       0       0       0
  3079 ;;      Totals:         0       1       0       0       0
  3080 ;;Total ram usage:        1 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:   10
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text15
  3091  001C58                     __ptext15:
  3092                           	opt stack 0
  3093  001C58                     _i2c_configure_slave:
  3094                           	opt stack 20
  3095                           
  3096                           ;incstack = 0
  3097                           ;i2c_configure_slave@addr stored from wreg
  3098  001C58  0100               	movlb	0	; () banked
  3099  001C5A  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;my_i2c.c: 381: TRISCbits.TRISC3 = 1;
  3103  001C5C  8694               	bsf	3988,3,c	;volatile
  3104                           
  3105                           ;my_i2c.c: 382: TRISCbits.TRISC4 = 1;
  3106  001C5E  8894               	bsf	3988,4,c	;volatile
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;my_i2c.c: 387: SSPADD = addr;
  3110  001C60  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;my_i2c.c: 389: SSPSTAT = 0x0;
  3114  001C64  0E00               	movlw	0
  3115  001C66  6EC7               	movwf	4039,c	;volatile
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;my_i2c.c: 390: SSPCON1 = 0x0;
  3119  001C68  0E00               	movlw	0
  3120  001C6A  6EC6               	movwf	4038,c	;volatile
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;my_i2c.c: 391: SSPCON2 = 0x0;
  3124  001C6C  0E00               	movlw	0
  3125  001C6E  6EC5               	movwf	4037,c	;volatile
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;my_i2c.c: 392: SSPCON1 |= 0x0E;
  3129  001C70  0E0E               	movlw	14
  3130  001C72  12C6               	iorwf	4038,f,c	;volatile
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;my_i2c.c: 393: SSPSTAT |= 0b10000000;
  3134  001C74  8EC7               	bsf	4039,7,c	;volatile
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;my_i2c.c: 396: TRISCbits.TRISC3 = 1;
  3138  001C76  8694               	bsf	3988,3,c	;volatile
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;my_i2c.c: 397: TRISCbits.TRISC4 = 1;
  3142  001C78  8894               	bsf	3988,4,c	;volatile
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;my_i2c.c: 418: SSPCON2bits.SEN = 1;
  3146  001C7A  80C5               	bsf	4037,0,c	;volatile
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;my_i2c.c: 419: SSPCON1 |= 0b00100000;
  3150  001C7C  8AC6               	bsf	4038,5,c	;volatile
  3151                           
  3152                           ; BSR set to: 0
  3153  001C7E  0012               	return	
  3154  001C80                     __end_of_i2c_configure_slave:
  3155                           	opt stack 0
  3156                           tblptru	equ	0xFF8
  3157                           tblptrh	equ	0xFF7
  3158                           tblptrl	equ	0xFF6
  3159                           tablat	equ	0xFF5
  3160                           prodh	equ	0xFF4
  3161                           prodl	equ	0xFF3
  3162                           postinc0	equ	0xFEE
  3163                           wreg	equ	0xFE8
  3164                           indf1	equ	0xFE7
  3165                           fsr1h	equ	0xFE2
  3166                           fsr1l	equ	0xFE1
  3167                           indf2	equ	0xFDF
  3168                           postinc2	equ	0xFDE
  3169                           postdec2	equ	0xFDD
  3170                           fsr2h	equ	0xFDA
  3171                           fsr2l	equ	0xFD9
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function _enable_interrupts *****************
  3175 ;; Defined at:
  3176 ;;		line 14 in file "../src/interrupts.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;		None               void
  3183 ;; Registers used:
  3184 ;;		None
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3190 ;;      Params:         0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:   10
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text16
  3205  001DA2                     __ptext16:
  3206                           	opt stack 0
  3207  001DA2                     _enable_interrupts:
  3208                           	opt stack 20
  3209                           
  3210                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;incstack = 0
  3214  001DA2  8ED0               	bsf	4048,7,c	;volatile
  3215                           
  3216                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3217  001DA4  8EF2               	bsf	intcon,7,c	;volatile
  3218                           
  3219                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3220  001DA6  8CF2               	bsf	intcon,6,c	;volatile
  3221  001DA8  0012               	return	
  3222  001DAA                     __end_of_enable_interrupts:
  3223                           	opt stack 0
  3224                           tblptru	equ	0xFF8
  3225                           tblptrh	equ	0xFF7
  3226                           tblptrl	equ	0xFF6
  3227                           tablat	equ	0xFF5
  3228                           prodh	equ	0xFF4
  3229                           prodl	equ	0xFF3
  3230                           intcon	equ	0xFF2
  3231                           postinc0	equ	0xFEE
  3232                           wreg	equ	0xFE8
  3233                           indf1	equ	0xFE7
  3234                           fsr1h	equ	0xFE2
  3235                           fsr1l	equ	0xFE1
  3236                           indf2	equ	0xFDF
  3237                           postinc2	equ	0xFDE
  3238                           postdec2	equ	0xFDD
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _debug_configure *****************
  3244 ;; Defined at:
  3245 ;;		line 3 in file "../src/debug.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;		None               void
  3252 ;; Registers used:
  3253 ;;		wreg, status,2
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3259 ;;      Params:         0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:   10
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_main
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text17
  3274  001D98                     __ptext17:
  3275                           	opt stack 0
  3276  001D98                     _debug_configure:
  3277                           	opt stack 20
  3278                           
  3279                           ;debug.c: 5: TRISD = 0x00;
  3280                           
  3281                           ;incstack = 0
  3282  001D98  0E00               	movlw	0
  3283  001D9A  6E95               	movwf	3989,c	;volatile
  3284                           
  3285                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3286  001D9C  9093               	bcf	3987,0,c	;volatile
  3287                           
  3288                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3289  001D9E  9293               	bcf	3987,1,c	;volatile
  3290  001DA0  0012               	return	
  3291  001DA2                     __end_of_debug_configure:
  3292                           	opt stack 0
  3293                           tblptru	equ	0xFF8
  3294                           tblptrh	equ	0xFF7
  3295                           tblptrl	equ	0xFF6
  3296                           tablat	equ	0xFF5
  3297                           prodh	equ	0xFF4
  3298                           prodl	equ	0xFF3
  3299                           intcon	equ	0xFF2
  3300                           postinc0	equ	0xFEE
  3301                           wreg	equ	0xFE8
  3302                           indf1	equ	0xFE7
  3303                           fsr1h	equ	0xFE2
  3304                           fsr1l	equ	0xFE1
  3305                           indf2	equ	0xFDF
  3306                           postinc2	equ	0xFDE
  3307                           postdec2	equ	0xFDD
  3308                           fsr2h	equ	0xFDA
  3309                           fsr2l	equ	0xFD9
  3310                           status	equ	0xFD8
  3311                           
  3312 ;; *************** function _blip3 *****************
  3313 ;; Defined at:
  3314 ;;		line 32 in file "../src/debug.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;		None               void
  3321 ;; Registers used:
  3322 ;;		None
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3328 ;;      Params:         0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:   10
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text18
  3343  001DAA                     __ptext18:
  3344                           	opt stack 0
  3345  001DAA                     _blip3:
  3346                           	opt stack 20
  3347                           
  3348                           ;debug.c: 34: LATDbits.LD6 = 0;
  3349                           
  3350                           ;incstack = 0
  3351  001DAA  9C8C               	bcf	3980,6,c	;volatile
  3352                           
  3353                           ;debug.c: 35: LATDbits.LD6 = 1;
  3354  001DAC  8C8C               	bsf	3980,6,c	;volatile
  3355                           
  3356                           ;debug.c: 36: LATDbits.LD6 = 0;
  3357  001DAE  9C8C               	bcf	3980,6,c	;volatile
  3358  001DB0  0012               	return	
  3359  001DB2                     __end_of_blip3:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodh	equ	0xFF4
  3366                           prodl	equ	0xFF3
  3367                           intcon	equ	0xFF2
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           indf1	equ	0xFE7
  3371                           fsr1h	equ	0xFE2
  3372                           fsr1l	equ	0xFE1
  3373                           indf2	equ	0xFDF
  3374                           postinc2	equ	0xFDE
  3375                           postdec2	equ	0xFDD
  3376                           fsr2h	equ	0xFDA
  3377                           fsr2l	equ	0xFD9
  3378                           status	equ	0xFD8
  3379                           
  3380 ;; *************** function _blip2 *****************
  3381 ;; Defined at:
  3382 ;;		line 25 in file "../src/debug.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;		None               void
  3389 ;; Registers used:
  3390 ;;		None
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:   10
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_main
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text19
  3411  001DB2                     __ptext19:
  3412                           	opt stack 0
  3413  001DB2                     _blip2:
  3414                           	opt stack 20
  3415                           
  3416                           ;debug.c: 27: LATDbits.LD5 = 0;
  3417                           
  3418                           ;incstack = 0
  3419  001DB2  9A8C               	bcf	3980,5,c	;volatile
  3420                           
  3421                           ;debug.c: 28: LATDbits.LD5 = 1;
  3422  001DB4  8A8C               	bsf	3980,5,c	;volatile
  3423                           
  3424                           ;debug.c: 29: LATDbits.LD5 = 0;
  3425  001DB6  9A8C               	bcf	3980,5,c	;volatile
  3426  001DB8  0012               	return	
  3427  001DBA                     __end_of_blip2:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           prodh	equ	0xFF4
  3434                           prodl	equ	0xFF3
  3435                           intcon	equ	0xFF2
  3436                           postinc0	equ	0xFEE
  3437                           wreg	equ	0xFE8
  3438                           indf1	equ	0xFE7
  3439                           fsr1h	equ	0xFE2
  3440                           fsr1l	equ	0xFE1
  3441                           indf2	equ	0xFDF
  3442                           postinc2	equ	0xFDE
  3443                           postdec2	equ	0xFDD
  3444                           fsr2h	equ	0xFDA
  3445                           fsr2l	equ	0xFD9
  3446                           status	equ	0xFD8
  3447                           
  3448 ;; *************** function _blip1 *****************
  3449 ;; Defined at:
  3450 ;;		line 18 in file "../src/debug.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;		None               void
  3457 ;; Registers used:
  3458 ;;		None
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3464 ;;      Params:         0       0       0       0       0
  3465 ;;      Locals:         0       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0
  3467 ;;      Totals:         0       0       0       0       0
  3468 ;;Total ram usage:        0 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:   10
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_main
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text20
  3479  001DBA                     __ptext20:
  3480                           	opt stack 0
  3481  001DBA                     _blip1:
  3482                           	opt stack 20
  3483                           
  3484                           ;debug.c: 20: LATDbits.LD4 = 0;
  3485                           
  3486                           ;incstack = 0
  3487  001DBA  988C               	bcf	3980,4,c	;volatile
  3488                           
  3489                           ;debug.c: 21: LATDbits.LD4 = 1;
  3490  001DBC  888C               	bsf	3980,4,c	;volatile
  3491                           
  3492                           ;debug.c: 22: LATDbits.LD4 = 0;
  3493  001DBE  988C               	bcf	3980,4,c	;volatile
  3494  001DC0  0012               	return	
  3495  001DC2                     __end_of_blip1:
  3496                           	opt stack 0
  3497                           tblptru	equ	0xFF8
  3498                           tblptrh	equ	0xFF7
  3499                           tblptrl	equ	0xFF6
  3500                           tablat	equ	0xFF5
  3501                           prodh	equ	0xFF4
  3502                           prodl	equ	0xFF3
  3503                           intcon	equ	0xFF2
  3504                           postinc0	equ	0xFEE
  3505                           wreg	equ	0xFE8
  3506                           indf1	equ	0xFE7
  3507                           fsr1h	equ	0xFE2
  3508                           fsr1l	equ	0xFE1
  3509                           indf2	equ	0xFDF
  3510                           postinc2	equ	0xFDE
  3511                           postdec2	equ	0xFDD
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function _blip *****************
  3517 ;; Defined at:
  3518 ;;		line 11 in file "../src/debug.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;		None               void
  3525 ;; Registers used:
  3526 ;;		None
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3532 ;;      Params:         0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0
  3535 ;;      Totals:         0       0       0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:   10
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text21
  3547  001DC2                     __ptext21:
  3548                           	opt stack 0
  3549  001DC2                     _blip:
  3550                           	opt stack 20
  3551                           
  3552                           ;debug.c: 13: LATDbits.LD2 = 0;
  3553                           
  3554                           ;incstack = 0
  3555  001DC2  948C               	bcf	3980,2,c	;volatile
  3556                           
  3557                           ;debug.c: 14: LATDbits.LD2 = 1;
  3558  001DC4  848C               	bsf	3980,2,c	;volatile
  3559                           
  3560                           ;debug.c: 15: LATDbits.LD2 = 0;
  3561  001DC6  948C               	bcf	3980,2,c	;volatile
  3562  001DC8  0012               	return	
  3563  001DCA                     __end_of_blip:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           tblptrh	equ	0xFF7
  3567                           tblptrl	equ	0xFF6
  3568                           tablat	equ	0xFF5
  3569                           prodh	equ	0xFF4
  3570                           prodl	equ	0xFF3
  3571                           intcon	equ	0xFF2
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           indf1	equ	0xFE7
  3575                           fsr1h	equ	0xFE2
  3576                           fsr1l	equ	0xFE1
  3577                           indf2	equ	0xFDF
  3578                           postinc2	equ	0xFDE
  3579                           postdec2	equ	0xFDD
  3580                           fsr2h	equ	0xFDA
  3581                           fsr2l	equ	0xFD9
  3582                           status	equ	0xFD8
  3583                           
  3584 ;; *************** function _ToMainLow_recvmsg *****************
  3585 ;; Defined at:
  3586 ;;		line 112 in file "../src/messages.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  maxlength       1    wreg     unsigned char 
  3589 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3590 ;;		 -> main@msgtype(1), 
  3591 ;;  data            2   14[BANK1 ] PTR void 
  3592 ;;		 -> main@msgbuffer(15), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      char 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3604 ;;      Params:         0       0       4       0       0
  3605 ;;      Locals:         0       1       0       0       0
  3606 ;;      Temps:          0       0       0       0       0
  3607 ;;      Totals:         0       1       4       0       0
  3608 ;;Total ram usage:        5 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:   12
  3611 ;; This function calls:
  3612 ;;		_recv_msg
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text22
  3619  001A9C                     __ptext22:
  3620                           	opt stack 0
  3621  001A9C                     _ToMainLow_recvmsg:
  3622                           	opt stack 18
  3623                           
  3624                           ;incstack = 0
  3625                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3626  001A9C  0100               	movlb	0	; () banked
  3627  001A9E  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3631  001AA0  0101               	movlb	1	; () banked
  3632  001AA2  0E01               	movlw	high _ToMainLow_MQ
  3633  001AA4  0101               	movlb	1	; () banked
  3634  001AA6  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3635  001AA8  0101               	movlb	1	; () banked
  3636  001AAA  0E62               	movlw	low _ToMainLow_MQ
  3637  001AAC  0101               	movlb	1	; () banked
  3638  001AAE  6F00               	movwf	recv_msg@qptr& (0+255),b
  3639  001AB0  C0C4  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3640  001AB4  0101               	movlb	1	; () banked
  3641  001AB6  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3642  001ABA  0101               	movlb	1	; () banked
  3643  001ABC  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3644  001AC0  0101               	movlb	1	; () banked
  3645  001AC2  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3646  001AC6  0101               	movlb	1	; () banked
  3647  001AC8  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3648  001ACC  EC44  F005         	call	_recv_msg	;wreg free
  3649  001AD0  0012               	return	
  3650  001AD2                     __end_of_ToMainLow_recvmsg:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           intcon	equ	0xFF2
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           indf1	equ	0xFE7
  3662                           fsr1h	equ	0xFE2
  3663                           fsr1l	equ	0xFE1
  3664                           indf2	equ	0xFDF
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           fsr2h	equ	0xFDA
  3668                           fsr2l	equ	0xFD9
  3669                           status	equ	0xFD8
  3670                           
  3671 ;; *************** function _ToMainHigh_recvmsg *****************
  3672 ;; Defined at:
  3673 ;;		line 135 in file "../src/messages.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  maxlength       1    wreg     unsigned char 
  3676 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3677 ;;		 -> main@msgtype(1), 
  3678 ;;  data            2   14[BANK1 ] PTR void 
  3679 ;;		 -> main@msgbuffer(15), 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      char 
  3684 ;; Registers used:
  3685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3691 ;;      Params:         0       0       4       0       0
  3692 ;;      Locals:         0       1       0       0       0
  3693 ;;      Temps:          0       0       0       0       0
  3694 ;;      Totals:         0       1       4       0       0
  3695 ;;Total ram usage:        5 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:   12
  3698 ;; This function calls:
  3699 ;;		_recv_msg
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text23
  3706  001AD2                     __ptext23:
  3707                           	opt stack 0
  3708  001AD2                     _ToMainHigh_recvmsg:
  3709                           	opt stack 18
  3710                           
  3711                           ;incstack = 0
  3712                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3713  001AD2  0100               	movlb	0	; () banked
  3714  001AD4  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3718  001AD6  0102               	movlb	2	; () banked
  3719  001AD8  0E02               	movlw	high _ToMainHigh_MQ
  3720  001ADA  0101               	movlb	1	; () banked
  3721  001ADC  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3722  001ADE  0102               	movlb	2	; () banked
  3723  001AE0  0E57               	movlw	low _ToMainHigh_MQ
  3724  001AE2  0101               	movlb	1	; () banked
  3725  001AE4  6F00               	movwf	recv_msg@qptr& (0+255),b
  3726  001AE6  C0C4  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3727  001AEA  0101               	movlb	1	; () banked
  3728  001AEC  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3729  001AF0  0101               	movlb	1	; () banked
  3730  001AF2  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3731  001AF6  0101               	movlb	1	; () banked
  3732  001AF8  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3733  001AFC  0101               	movlb	1	; () banked
  3734  001AFE  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3735  001B02  EC44  F005         	call	_recv_msg	;wreg free
  3736  001B06  0012               	return	
  3737  001B08                     __end_of_ToMainHigh_recvmsg:
  3738                           	opt stack 0
  3739                           tblptru	equ	0xFF8
  3740                           tblptrh	equ	0xFF7
  3741                           tblptrl	equ	0xFF6
  3742                           tablat	equ	0xFF5
  3743                           prodh	equ	0xFF4
  3744                           prodl	equ	0xFF3
  3745                           intcon	equ	0xFF2
  3746                           postinc0	equ	0xFEE
  3747                           wreg	equ	0xFE8
  3748                           indf1	equ	0xFE7
  3749                           fsr1h	equ	0xFE2
  3750                           fsr1l	equ	0xFE1
  3751                           indf2	equ	0xFDF
  3752                           postinc2	equ	0xFDE
  3753                           postdec2	equ	0xFDD
  3754                           fsr2h	equ	0xFDA
  3755                           fsr2l	equ	0xFD9
  3756                           status	equ	0xFD8
  3757                           
  3758 ;; *************** function _recv_msg *****************
  3759 ;; Defined at:
  3760 ;;		line 63 in file "../src/messages.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3763 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3764 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3765 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3766 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  3767 ;;		 -> main@msgtype(1), 
  3768 ;;  data            2    5[BANK1 ] PTR void 
  3769 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), 
  3770 ;;		 -> main@ic(38), 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3773 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3774 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3775 ;;  tlength         2    8[BANK1 ] unsigned int 
  3776 ;;  slot            1    7[BANK1 ] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      char 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3786 ;;      Params:         0       0       7       0       0
  3787 ;;      Locals:         0       0       5       0       0
  3788 ;;      Temps:          0       2       0       0       0
  3789 ;;      Totals:         0       2      12       0       0
  3790 ;;Total ram usage:       14 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:   11
  3793 ;; This function calls:
  3794 ;;		___awmod
  3795 ;;		_memcpy
  3796 ;; This function is called by:
  3797 ;;		_ToMainLow_recvmsg
  3798 ;;		_ToMainHigh_recvmsg
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text24
  3803  000A88                     __ptext24:
  3804                           	opt stack 0
  3805  000A88                     _recv_msg:
  3806                           	opt stack 18
  3807                           
  3808                           ;messages.c: 64: unsigned char slot;
  3809                           ;messages.c: 68: msg *qmsg;
  3810                           ;messages.c: 69: size_t tlength;
  3811                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3812                           
  3813                           ;incstack = 0
  3814  000A88  0101               	movlb	1	; () banked
  3815  000A8A  EE20 F056          	lfsr	2,86
  3816  000A8E  0101               	movlb	1	; () banked
  3817  000A90  5100               	movf	recv_msg@qptr& (0+255),w,b
  3818  000A92  26D9               	addwf	fsr2l,f,c
  3819  000A94  0101               	movlb	1	; () banked
  3820  000A96  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3821  000A98  22DA               	addwfc	fsr2h,f,c
  3822  000A9A  50DF               	movf	indf2,w,c
  3823  000A9C  0101               	movlb	1	; () banked
  3824  000A9E  6F07               	movwf	recv_msg@slot& (0+255),b
  3825                           
  3826                           ; BSR set to: 1
  3827                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3828  000AA0  0101               	movlb	1	; () banked
  3829  000AA2  5107               	movf	recv_msg@slot& (0+255),w,b
  3830  000AA4  0D11               	mullw	17
  3831  000AA6  50F3               	movf	prodl,w,c
  3832  000AA8  0101               	movlb	1	; () banked
  3833  000AAA  2500               	addwf	recv_msg@qptr& (0+255),w,b
  3834  000AAC  0101               	movlb	1	; () banked
  3835  000AAE  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  3836  000AB0  50F4               	movf	prodh,w,c
  3837  000AB2  0101               	movlb	1	; () banked
  3838  000AB4  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3839  000AB6  0101               	movlb	1	; () banked
  3840  000AB8  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3841                           
  3842                           ; BSR set to: 1
  3843                           ;messages.c: 74: if (qmsg->full == 1) {
  3844  000ABA  0E01               	movlw	1
  3845  000ABC  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  3846  000AC0  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3847  000AC4  62DF               	cpfseq	indf2,c
  3848  000AC6  D07F               	goto	l3690
  3849                           
  3850                           ; BSR set to: 1
  3851                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3852  000AC8  0101               	movlb	1	; () banked
  3853  000ACA  EE20 F001          	lfsr	2,1
  3854  000ACE  0101               	movlb	1	; () banked
  3855  000AD0  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3856  000AD2  26D9               	addwf	fsr2l,f,c
  3857  000AD4  0101               	movlb	1	; () banked
  3858  000AD6  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3859  000AD8  22DA               	addwfc	fsr2h,f,c
  3860  000ADA  50DF               	movf	indf2,w,c
  3861  000ADC  0101               	movlb	1	; () banked
  3862  000ADE  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  3863  000AE0  B0D8               	btfsc	status,0,c
  3864  000AE2  D002               	goto	l3674
  3865                           
  3866                           ; BSR set to: 1
  3867                           ;messages.c: 77: return (-3);
  3868  000AE4  0EFD               	movlw	253
  3869  000AE6  0012               	return	
  3870  000AE8                     l3674:
  3871                           
  3872                           ; BSR set to: 1
  3873                           ;messages.c: 78: }
  3874                           ;messages.c: 80: tlength = qmsg->length;
  3875  000AE8  0101               	movlb	1	; () banked
  3876  000AEA  EE20 F001          	lfsr	2,1
  3877  000AEE  0101               	movlb	1	; () banked
  3878  000AF0  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3879  000AF2  26D9               	addwf	fsr2l,f,c
  3880  000AF4  0101               	movlb	1	; () banked
  3881  000AF6  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3882  000AF8  22DA               	addwfc	fsr2h,f,c
  3883  000AFA  50DF               	movf	indf2,w,c
  3884  000AFC  0100               	movlb	0	; () banked
  3885  000AFE  6FC2               	movwf	??_recv_msg& (0+255),b
  3886  000B00  0100               	movlb	0	; () banked
  3887  000B02  51C2               	movf	??_recv_msg& (0+255),w,b
  3888  000B04  0101               	movlb	1	; () banked
  3889  000B06  6F08               	movwf	recv_msg@tlength& (0+255),b
  3890  000B08  0101               	movlb	1	; () banked
  3891  000B0A  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  3892                           
  3893                           ; BSR set to: 1
  3894                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3895  000B0C  0101               	movlb	1	; () banked
  3896  000B0E  0100               	movlb	0	; () banked
  3897  000B10  C106  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  3898  000B14  0101               	movlb	1	; () banked
  3899  000B16  0100               	movlb	0	; () banked
  3900  000B18  C105  F0B8         	movff	recv_msg@data,memcpy@d1
  3901  000B1C  0E03               	movlw	3
  3902  000B1E  0101               	movlb	1	; () banked
  3903  000B20  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  3904  000B22  0100               	movlb	0	; () banked
  3905  000B24  6FC2               	movwf	??_recv_msg& (0+255),b
  3906  000B26  0E00               	movlw	0
  3907  000B28  0101               	movlb	1	; () banked
  3908  000B2A  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3909  000B2C  0100               	movlb	0	; () banked
  3910  000B2E  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  3911  000B30  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  3912  000B34  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  3913  000B38  C108  F0BC         	movff	recv_msg@tlength,memcpy@n
  3914  000B3C  C109  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  3915  000B40  ECBF  F00C         	call	_memcpy	;wreg free
  3916                           
  3917                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  3918  000B44  0101               	movlb	1	; () banked
  3919  000B46  EE20 F056          	lfsr	2,86
  3920  000B4A  0101               	movlb	1	; () banked
  3921  000B4C  5100               	movf	recv_msg@qptr& (0+255),w,b
  3922  000B4E  26D9               	addwf	fsr2l,f,c
  3923  000B50  0101               	movlb	1	; () banked
  3924  000B52  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3925  000B54  22DA               	addwfc	fsr2h,f,c
  3926  000B56  0101               	movlb	1	; () banked
  3927  000B58  EE10 F056          	lfsr	1,86
  3928  000B5C  0101               	movlb	1	; () banked
  3929  000B5E  5100               	movf	recv_msg@qptr& (0+255),w,b
  3930  000B60  26E1               	addwf	fsr1l,f,c
  3931  000B62  0101               	movlb	1	; () banked
  3932  000B64  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3933  000B66  22E2               	addwfc	fsr1h,f,c
  3934  000B68  50E7               	movf	indf1,w,c
  3935  000B6A  0100               	movlb	0	; () banked
  3936  000B6C  6FC2               	movwf	??_recv_msg& (0+255),b
  3937  000B6E  0E01               	movlw	1
  3938  000B70  0100               	movlb	0	; () banked
  3939  000B72  25C2               	addwf	??_recv_msg& (0+255),w,b
  3940  000B74  0100               	movlb	0	; () banked
  3941  000B76  6FB8               	movwf	___awmod@dividend& (0+255),b
  3942  000B78  0100               	movlb	0	; () banked
  3943  000B7A  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3944  000B7C  0E00               	movlw	0
  3945  000B7E  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3946  000B80  0E00               	movlw	0
  3947  000B82  0100               	movlb	0	; () banked
  3948  000B84  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3949  000B86  0E05               	movlw	5
  3950  000B88  0100               	movlb	0	; () banked
  3951  000B8A  6FBA               	movwf	___awmod@divisor& (0+255),b
  3952  000B8C  ECED  F008         	call	___awmod	;wreg free
  3953  000B90  0100               	movlb	0	; () banked
  3954  000B92  51B8               	movf	?___awmod& (0+255),w,b
  3955  000B94  6EDF               	movwf	indf2,c
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3959  000B96  0101               	movlb	1	; () banked
  3960  000B98  EE20 F002          	lfsr	2,2
  3961  000B9C  0101               	movlb	1	; () banked
  3962  000B9E  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3963  000BA0  26D9               	addwf	fsr2l,f,c
  3964  000BA2  0101               	movlb	1	; () banked
  3965  000BA4  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3966  000BA6  22DA               	addwfc	fsr2h,f,c
  3967  000BA8  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  3968  000BAC  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3969  000BB0  CFDF FFE7          	movff	indf2,indf1
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;messages.c: 91: qmsg->full = 0;
  3973  000BB4  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  3974  000BB8  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3975  000BBC  0E00               	movlw	0
  3976  000BBE  6EDF               	movwf	indf2,c
  3977                           
  3978                           ; BSR set to: 1
  3979                           ;messages.c: 92: return (tlength);
  3980  000BC0  0101               	movlb	1	; () banked
  3981  000BC2  5108               	movf	recv_msg@tlength& (0+255),w,b
  3982  000BC4  0012               	return	
  3983  000BC6                     l3690:
  3984                           
  3985                           ; BSR set to: 1
  3986                           ;messages.c: 94: return (-4);
  3987  000BC6  0EFC               	movlw	252
  3988  000BC8  0012               	return	
  3989  000BCA                     __end_of_recv_msg:
  3990                           	opt stack 0
  3991                           tblptru	equ	0xFF8
  3992                           tblptrh	equ	0xFF7
  3993                           tblptrl	equ	0xFF6
  3994                           tablat	equ	0xFF5
  3995                           prodh	equ	0xFF4
  3996                           prodl	equ	0xFF3
  3997                           intcon	equ	0xFF2
  3998                           postinc0	equ	0xFEE
  3999                           wreg	equ	0xFE8
  4000                           indf1	equ	0xFE7
  4001                           fsr1h	equ	0xFE2
  4002                           fsr1l	equ	0xFE1
  4003                           indf2	equ	0xFDF
  4004                           postinc2	equ	0xFDE
  4005                           postdec2	equ	0xFDD
  4006                           fsr2h	equ	0xFDA
  4007                           fsr2l	equ	0xFD9
  4008                           status	equ	0xFD8
  4009                           
  4010 ;; *************** function _memcpy *****************
  4011 ;; Defined at:
  4012 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  d1              2   56[BANK0 ] PTR void 
  4015 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4016 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), 
  4017 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4018 ;;		 -> main@ic(38), 
  4019 ;;  s1              2   58[BANK0 ] PTR const void 
  4020 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4021 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4022 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  4023 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4024 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  4025 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(2), 
  4026 ;;		 -> main@ic(38), 
  4027 ;;  n               2   60[BANK0 ] unsigned int 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  4030 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4031 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4032 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  4033 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4034 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  4035 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(2), 
  4036 ;;		 -> main@ic(38), 
  4037 ;;  d               2   62[BANK0 ] PTR unsigned char 
  4038 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4039 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), 
  4040 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4041 ;;		 -> main@ic(38), 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  2   56[BANK0 ] PTR void 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4051 ;;      Params:         0       6       0       0       0
  4052 ;;      Locals:         0       4       0       0       0
  4053 ;;      Temps:          0       0       0       0       0
  4054 ;;      Totals:         0      10       0       0       0
  4055 ;;Total ram usage:       10 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:   10
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_send_msg
  4062 ;;		_recv_msg
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           	psect	text25
  4067  00197E                     __ptext25:
  4068                           	opt stack 0
  4069  00197E                     _memcpy:
  4070                           	opt stack 17
  4071                           
  4072                           ; BSR set to: 1
  4073                           ;incstack = 0
  4074  00197E  0100               	movlb	0	; () banked
  4075  001980  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4076  001984  0100               	movlb	0	; () banked
  4077  001986  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4078  00198A  0100               	movlb	0	; () banked
  4079  00198C  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4080  001990  0100               	movlb	0	; () banked
  4081  001992  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4082  001996  D010               	goto	l3480
  4083  001998                     l3474:
  4084                           
  4085                           ; BSR set to: 0
  4086  001998  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4087  00199C  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4088  0019A0  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4089  0019A4  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4090  0019A8  CFDF FFE7          	movff	indf2,indf1
  4091                           
  4092                           ; BSR set to: 0
  4093  0019AC  0100               	movlb	0	; () banked
  4094  0019AE  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4095  0019B0  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4096                           
  4097                           ; BSR set to: 0
  4098  0019B2  0100               	movlb	0	; () banked
  4099  0019B4  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4100  0019B6  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4101  0019B8                     l3480:
  4102                           
  4103                           ; BSR set to: 0
  4104  0019B8  0100               	movlb	0	; () banked
  4105  0019BA  07BC               	decf	memcpy@n& (0+255),f,b
  4106  0019BC  A0D8               	btfss	status,0,c
  4107  0019BE  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4108  0019C0  0100               	movlb	0	; () banked
  4109  0019C2  29BC               	incf	memcpy@n& (0+255),w,b
  4110  0019C4  B4D8               	btfsc	status,2,c
  4111  0019C6  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4112  0019C8  B4D8               	btfsc	status,2,c
  4113                           
  4114                           ; BSR set to: 0
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;	Return value of _memcpy is never used
  4118  0019CA  0012               	return	
  4119  0019CC  D7E5               	goto	l3474
  4120  0019CE                     __end_of_memcpy:
  4121                           	opt stack 0
  4122                           tblptru	equ	0xFF8
  4123                           tblptrh	equ	0xFF7
  4124                           tblptrl	equ	0xFF6
  4125                           tablat	equ	0xFF5
  4126                           prodh	equ	0xFF4
  4127                           prodl	equ	0xFF3
  4128                           intcon	equ	0xFF2
  4129                           postinc0	equ	0xFEE
  4130                           wreg	equ	0xFE8
  4131                           indf1	equ	0xFE7
  4132                           fsr1h	equ	0xFE2
  4133                           fsr1l	equ	0xFE1
  4134                           indf2	equ	0xFDF
  4135                           postinc2	equ	0xFDE
  4136                           postdec2	equ	0xFDD
  4137                           fsr2h	equ	0xFDA
  4138                           fsr2l	equ	0xFD9
  4139                           status	equ	0xFD8
  4140                           
  4141 ;; *************** function ___awmod *****************
  4142 ;; Defined at:
  4143 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  dividend        2   56[BANK0 ] int 
  4146 ;;  divisor         2   58[BANK0 ] int 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  sign            1   61[BANK0 ] unsigned char 
  4149 ;;  counter         1   60[BANK0 ] unsigned char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  2   56[BANK0 ] int 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0, prodl
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4159 ;;      Params:         0       4       0       0       0
  4160 ;;      Locals:         0       2       0       0       0
  4161 ;;      Temps:          0       0       0       0       0
  4162 ;;      Totals:         0       6       0       0       0
  4163 ;;Total ram usage:        6 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:   10
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_send_msg
  4170 ;;		_recv_msg
  4171 ;;		i1_send_msg
  4172 ;;		i2_send_msg
  4173 ;;		i1_recv_msg
  4174 ;;		i2_recv_msg
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text26
  4179  0011DA                     __ptext26:
  4180                           	opt stack 0
  4181  0011DA                     ___awmod:
  4182                           	opt stack 17
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;incstack = 0
  4186  0011DA  0E00               	movlw	0
  4187  0011DC  0100               	movlb	0	; () banked
  4188  0011DE  6FBD               	movwf	___awmod@sign& (0+255),b
  4189                           
  4190                           ; BSR set to: 0
  4191  0011E0  0100               	movlb	0	; () banked
  4192  0011E2  51B9               	movf	(___awmod@dividend+1)& (0+255),w,b
  4193  0011E4  0A80               	xorlw	128
  4194  0011E6  6EF3               	movwf	prodl,c
  4195  0011E8  0E80               	movlw	128
  4196  0011EA  5CF3               	subwf	prodl,w,c
  4197  0011EC  0E00               	movlw	0
  4198  0011EE  B4D8               	btfsc	status,2,c
  4199  0011F0  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4200  0011F2  B0D8               	btfsc	status,0,c
  4201  0011F4  D009               	goto	l3490
  4202                           
  4203                           ; BSR set to: 0
  4204  0011F6  0100               	movlb	0	; () banked
  4205  0011F8  6DB8               	negf	___awmod@dividend& (0+255),b
  4206  0011FA  0100               	movlb	0	; () banked
  4207  0011FC  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4208  0011FE  B0D8               	btfsc	status,0,c
  4209  001200  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4210                           
  4211                           ; BSR set to: 0
  4212  001202  0E01               	movlw	1
  4213  001204  0100               	movlb	0	; () banked
  4214  001206  6FBD               	movwf	___awmod@sign& (0+255),b
  4215  001208                     l3490:
  4216                           
  4217                           ; BSR set to: 0
  4218  001208  0100               	movlb	0	; () banked
  4219  00120A  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4220  00120C  0A80               	xorlw	128
  4221  00120E  6EF3               	movwf	prodl,c
  4222  001210  0E80               	movlw	128
  4223  001212  5CF3               	subwf	prodl,w,c
  4224  001214  0E00               	movlw	0
  4225  001216  B4D8               	btfsc	status,2,c
  4226  001218  5DBA               	subwf	___awmod@divisor& (0+255),w,b
  4227  00121A  B0D8               	btfsc	status,0,c
  4228  00121C  D006               	goto	l3494
  4229                           
  4230                           ; BSR set to: 0
  4231  00121E  0100               	movlb	0	; () banked
  4232  001220  6DBA               	negf	___awmod@divisor& (0+255),b
  4233  001222  0100               	movlb	0	; () banked
  4234  001224  1FBB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4235  001226  B0D8               	btfsc	status,0,c
  4236  001228  2BBB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4237  00122A                     l3494:
  4238                           
  4239                           ; BSR set to: 0
  4240  00122A  0100               	movlb	0	; () banked
  4241  00122C  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4242  00122E  11BA               	iorwf	___awmod@divisor& (0+255),w,b
  4243  001230  B4D8               	btfsc	status,2,c
  4244  001232  D026               	goto	l3510
  4245                           
  4246                           ; BSR set to: 0
  4247  001234  0E01               	movlw	1
  4248  001236  0100               	movlb	0	; () banked
  4249  001238  6FBC               	movwf	___awmod@counter& (0+255),b
  4250  00123A  D006               	goto	l3500
  4251  00123C                     l3498:
  4252                           
  4253                           ; BSR set to: 0
  4254  00123C  0100               	movlb	0	; () banked
  4255  00123E  90D8               	bcf	status,0,c
  4256  001240  37BA               	rlcf	___awmod@divisor& (0+255),f,b
  4257  001242  37BB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4258  001244  0100               	movlb	0	; () banked
  4259  001246  2BBC               	incf	___awmod@counter& (0+255),f,b
  4260  001248                     l3500:
  4261                           
  4262                           ; BSR set to: 0
  4263  001248  0100               	movlb	0	; () banked
  4264  00124A  AFBB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4265  00124C  D7F7               	goto	l3498
  4266  00124E                     l3502:
  4267                           
  4268                           ; BSR set to: 0
  4269  00124E  0100               	movlb	0	; () banked
  4270  001250  51BA               	movf	___awmod@divisor& (0+255),w,b
  4271  001252  0100               	movlb	0	; () banked
  4272  001254  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4273  001256  0100               	movlb	0	; () banked
  4274  001258  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4275  00125A  0100               	movlb	0	; () banked
  4276  00125C  59B9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4277  00125E  A0D8               	btfss	status,0,c
  4278  001260  D008               	goto	l3506
  4279                           
  4280                           ; BSR set to: 0
  4281  001262  0100               	movlb	0	; () banked
  4282  001264  51BA               	movf	___awmod@divisor& (0+255),w,b
  4283  001266  0100               	movlb	0	; () banked
  4284  001268  5FB8               	subwf	___awmod@dividend& (0+255),f,b
  4285  00126A  0100               	movlb	0	; () banked
  4286  00126C  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4287  00126E  0100               	movlb	0	; () banked
  4288  001270  5BB9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4289  001272                     l3506:
  4290                           
  4291                           ; BSR set to: 0
  4292  001272  0100               	movlb	0	; () banked
  4293  001274  90D8               	bcf	status,0,c
  4294  001276  33BB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4295  001278  33BA               	rrcf	___awmod@divisor& (0+255),f,b
  4296                           
  4297                           ; BSR set to: 0
  4298  00127A  0100               	movlb	0	; () banked
  4299  00127C  2FBC               	decfsz	___awmod@counter& (0+255),f,b
  4300  00127E  D7E7               	goto	l3502
  4301  001280                     l3510:
  4302                           
  4303                           ; BSR set to: 0
  4304  001280  0100               	movlb	0	; () banked
  4305  001282  51BD               	movf	___awmod@sign& (0+255),w,b
  4306  001284  B4D8               	btfsc	status,2,c
  4307  001286  D006               	goto	l3514
  4308                           
  4309                           ; BSR set to: 0
  4310  001288  0100               	movlb	0	; () banked
  4311  00128A  6DB8               	negf	___awmod@dividend& (0+255),b
  4312  00128C  0100               	movlb	0	; () banked
  4313  00128E  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4314  001290  B0D8               	btfsc	status,0,c
  4315  001292  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4316  001294                     l3514:
  4317                           
  4318                           ; BSR set to: 0
  4319  001294  C0B8  F0B8         	movff	___awmod@dividend,?___awmod
  4320  001298  C0B9  F0B9         	movff	___awmod@dividend+1,?___awmod+1
  4321  00129C  0012               	return	
  4322  00129E                     __end_of___awmod:
  4323                           	opt stack 0
  4324                           tblptru	equ	0xFF8
  4325                           tblptrh	equ	0xFF7
  4326                           tblptrl	equ	0xFF6
  4327                           tablat	equ	0xFF5
  4328                           prodh	equ	0xFF4
  4329                           prodl	equ	0xFF3
  4330                           intcon	equ	0xFF2
  4331                           postinc0	equ	0xFEE
  4332                           wreg	equ	0xFE8
  4333                           indf1	equ	0xFE7
  4334                           fsr1h	equ	0xFE2
  4335                           fsr1l	equ	0xFE1
  4336                           indf2	equ	0xFDF
  4337                           postinc2	equ	0xFDE
  4338                           postdec2	equ	0xFDD
  4339                           fsr2h	equ	0xFDA
  4340                           fsr2l	equ	0xFD9
  4341                           status	equ	0xFD8
  4342                           
  4343 ;; *************** function _OpenTimer1 *****************
  4344 ;; Defined at:
  4345 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  config          1    wreg     unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  config          1   56[BANK0 ] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;		None               void
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4359 ;;      Params:         0       0       0       0       0
  4360 ;;      Locals:         0       1       0       0       0
  4361 ;;      Temps:          0       0       0       0       0
  4362 ;;      Totals:         0       1       0       0       0
  4363 ;;Total ram usage:        1 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:   10
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text27
  4374  001B3E                     __ptext27:
  4375                           	opt stack 0
  4376  001B3E                     _OpenTimer1:
  4377                           	opt stack 20
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;incstack = 0
  4381                           ;OpenTimer1@config stored from wreg
  4382  001B3E  0100               	movlb	0	; () banked
  4383  001B40  6FB8               	movwf	OpenTimer1@config& (0+255),b
  4384                           
  4385                           ; BSR set to: 0
  4386  001B42  0100               	movlb	0	; () banked
  4387  001B44  51B8               	movf	OpenTimer1@config& (0+255),w,b
  4388  001B46  0B7E               	andlw	126
  4389  001B48  6ECD               	movwf	4045,c	;volatile
  4390                           
  4391                           ; BSR set to: 0
  4392  001B4A  0100               	movlb	0	; () banked
  4393  001B4C  ADB8               	btfss	OpenTimer1@config& (0+255),6,b
  4394  001B4E  D002               	goto	l573
  4395                           
  4396                           ; BSR set to: 0
  4397  001B50  8ECD               	bsf	4045,7,c	;volatile
  4398  001B52  D001               	goto	l3196
  4399  001B54                     l573:
  4400                           
  4401                           ; BSR set to: 0
  4402  001B54  9ECD               	bcf	4045,7,c	;volatile
  4403  001B56                     l3196:
  4404                           
  4405                           ; BSR set to: 0
  4406  001B56  0E00               	movlw	0
  4407  001B58  6ECF               	movwf	4047,c	;volatile
  4408  001B5A  0E00               	movlw	0
  4409  001B5C  6ECE               	movwf	4046,c	;volatile
  4410                           
  4411                           ; BSR set to: 0
  4412  001B5E  909E               	bcf	3998,0,c	;volatile
  4413                           
  4414                           ; BSR set to: 0
  4415  001B60  0100               	movlb	0	; () banked
  4416  001B62  AFB8               	btfss	OpenTimer1@config& (0+255),7,b
  4417  001B64  D002               	goto	l575
  4418                           
  4419                           ; BSR set to: 0
  4420  001B66  809D               	bsf	3997,0,c	;volatile
  4421  001B68  D001               	goto	l576
  4422  001B6A                     l575:
  4423                           
  4424                           ; BSR set to: 0
  4425  001B6A  909D               	bcf	3997,0,c	;volatile
  4426  001B6C                     l576:
  4427                           
  4428                           ; BSR set to: 0
  4429  001B6C  80CD               	bsf	4045,0,c	;volatile
  4430                           
  4431                           ; BSR set to: 0
  4432  001B6E  0012               	return	
  4433  001B70                     __end_of_OpenTimer1:
  4434                           	opt stack 0
  4435                           tblptru	equ	0xFF8
  4436                           tblptrh	equ	0xFF7
  4437                           tblptrl	equ	0xFF6
  4438                           tablat	equ	0xFF5
  4439                           prodh	equ	0xFF4
  4440                           prodl	equ	0xFF3
  4441                           intcon	equ	0xFF2
  4442                           postinc0	equ	0xFEE
  4443                           wreg	equ	0xFE8
  4444                           indf1	equ	0xFE7
  4445                           fsr1h	equ	0xFE2
  4446                           fsr1l	equ	0xFE1
  4447                           indf2	equ	0xFDF
  4448                           postinc2	equ	0xFDE
  4449                           postdec2	equ	0xFDD
  4450                           fsr2h	equ	0xFDA
  4451                           fsr2l	equ	0xFD9
  4452                           status	equ	0xFD8
  4453                           
  4454 ;; *************** function _OpenTimer0 *****************
  4455 ;; Defined at:
  4456 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  config          1    wreg     unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  config          1   56[BANK0 ] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;		None               void
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4470 ;;      Params:         0       0       0       0       0
  4471 ;;      Locals:         0       1       0       0       0
  4472 ;;      Temps:          0       0       0       0       0
  4473 ;;      Totals:         0       1       0       0       0
  4474 ;;Total ram usage:        1 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:   10
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_main
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text28
  4485  001CA8                     __ptext28:
  4486                           	opt stack 0
  4487  001CA8                     _OpenTimer0:
  4488                           	opt stack 20
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;incstack = 0
  4492                           ;OpenTimer0@config stored from wreg
  4493  001CA8  0100               	movlb	0	; () banked
  4494  001CAA  6FB8               	movwf	OpenTimer0@config& (0+255),b
  4495                           
  4496                           ; BSR set to: 0
  4497  001CAC  0100               	movlb	0	; () banked
  4498  001CAE  51B8               	movf	OpenTimer0@config& (0+255),w,b
  4499  001CB0  0B7F               	andlw	127
  4500  001CB2  6ED5               	movwf	4053,c	;volatile
  4501                           
  4502                           ; BSR set to: 0
  4503  001CB4  0E00               	movlw	0
  4504  001CB6  6ED7               	movwf	4055,c	;volatile
  4505                           
  4506                           ; BSR set to: 0
  4507  001CB8  0E00               	movlw	0
  4508  001CBA  6ED6               	movwf	4054,c	;volatile
  4509                           
  4510                           ; BSR set to: 0
  4511  001CBC  94F2               	bcf	intcon,2,c	;volatile
  4512                           
  4513                           ; BSR set to: 0
  4514  001CBE  0100               	movlb	0	; () banked
  4515  001CC0  AFB8               	btfss	OpenTimer0@config& (0+255),7,b
  4516  001CC2  D002               	goto	l549
  4517                           
  4518                           ; BSR set to: 0
  4519  001CC4  8AF2               	bsf	intcon,5,c	;volatile
  4520  001CC6  D001               	goto	l550
  4521  001CC8                     l549:
  4522                           
  4523                           ; BSR set to: 0
  4524  001CC8  9AF2               	bcf	intcon,5,c	;volatile
  4525  001CCA                     l550:
  4526                           
  4527                           ; BSR set to: 0
  4528  001CCA  8ED5               	bsf	4053,7,c	;volatile
  4529                           
  4530                           ; BSR set to: 0
  4531  001CCC  0012               	return	
  4532  001CCE                     __end_of_OpenTimer0:
  4533                           	opt stack 0
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           prodh	equ	0xFF4
  4539                           prodl	equ	0xFF3
  4540                           intcon	equ	0xFF2
  4541                           postinc0	equ	0xFEE
  4542                           wreg	equ	0xFE8
  4543                           indf1	equ	0xFE7
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           indf2	equ	0xFDF
  4547                           postinc2	equ	0xFDE
  4548                           postdec2	equ	0xFDD
  4549                           fsr2h	equ	0xFDA
  4550                           fsr2l	equ	0xFD9
  4551                           status	equ	0xFD8
  4552                           
  4553 ;; *************** function _InterruptHandlerLow *****************
  4554 ;; Defined at:
  4555 ;;		line 135 in file "../src/interrupts.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4569 ;;      Params:         0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0
  4571 ;;      Temps:         17       0       0       0       0
  4572 ;;      Totals:        17       0       0       0       0
  4573 ;;Total ram usage:       17 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    9
  4576 ;; This function calls:
  4577 ;;		_timer1_int_handler
  4578 ;;		_uart_receive_interrupt_handler
  4579 ;;		_uart_transmit_interrupt_handler
  4580 ;; This function is called by:
  4581 ;;		Interrupt level 1
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	intcodelo
  4586  000018                     __pintcodelo:
  4587                           	opt stack 0
  4588  000018                     _InterruptHandlerLow:
  4589                           	opt stack 16
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;incstack = 0
  4593  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4594  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4595  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4596  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4597  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4598  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4599  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4600  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4601  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4602  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4603  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4604  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4605  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4606  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4607  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4608  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4609  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4610                           
  4611                           ;interrupts.c: 138: if (PIR1bits.TMR1IF) {
  4612  00005C  A09E               	btfss	3998,0,c	;volatile
  4613  00005E  D003               	goto	i1l4148
  4614                           
  4615                           ;interrupts.c: 139: PIR1bits.TMR1IF = 0;
  4616  000060  909E               	bcf	3998,0,c	;volatile
  4617                           
  4618                           ;interrupts.c: 143: timer1_int_handler();
  4619  000062  EC16  F00E         	call	_timer1_int_handler	;wreg free
  4620  000066                     i1l4148:
  4621                           
  4622                           ;interrupts.c: 144: }
  4623                           ;interrupts.c: 147: if (PIR1bits.RCIF) {
  4624  000066  AA9E               	btfss	3998,5,c	;volatile
  4625  000068  D003               	goto	i1l4154
  4626                           
  4627                           ;interrupts.c: 148: PIR1bits.RCIF = 0;
  4628  00006A  9A9E               	bcf	3998,5,c	;volatile
  4629                           
  4630                           ;interrupts.c: 152: uart_receive_interrupt_handler();
  4631  00006C  EC7F  F004         	call	_uart_receive_interrupt_handler	;wreg free
  4632  000070                     i1l4154:
  4633                           
  4634                           ;interrupts.c: 153: }
  4635                           ;interrupts.c: 157: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4636  000070  B89E               	btfsc	3998,4,c	;volatile
  4637  000072  A89D               	btfss	3997,4,c	;volatile
  4638  000074  D002               	goto	i1l54
  4639                           
  4640                           ;interrupts.c: 158: {
  4641                           ;interrupts.c: 162: uart_transmit_interrupt_handler();
  4642  000076  ECB7  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4643  00007A                     i1l54:
  4644  00007A  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4645  00007E  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4646  000082  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4647  000086  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4648  00008A  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4649  00008E  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4650  000092  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4651  000096  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4652  00009A  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4653  00009E  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4654  0000A2  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4655  0000A6  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4656  0000AA  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4657  0000AE  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4658  0000B2  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4659  0000B6  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4660  0000BA  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4661  0000BE  0010               	retfie	
  4662  0000C0                     __end_of_InterruptHandlerLow:
  4663                           	opt stack 0
  4664                           pclatu	equ	0xFFB
  4665                           pclath	equ	0xFFA
  4666                           tblptru	equ	0xFF8
  4667                           tblptrh	equ	0xFF7
  4668                           tblptrl	equ	0xFF6
  4669                           tablat	equ	0xFF5
  4670                           prodh	equ	0xFF4
  4671                           prodl	equ	0xFF3
  4672                           intcon	equ	0xFF2
  4673                           postinc0	equ	0xFEE
  4674                           fsr0h	equ	0xFEA
  4675                           fsr0l	equ	0xFE9
  4676                           wreg	equ	0xFE8
  4677                           indf1	equ	0xFE7
  4678                           fsr1h	equ	0xFE2
  4679                           fsr1l	equ	0xFE1
  4680                           bsr	equ	0xFE0
  4681                           indf2	equ	0xFDF
  4682                           postinc2	equ	0xFDE
  4683                           postdec2	equ	0xFDD
  4684                           fsr2h	equ	0xFDA
  4685                           fsr2l	equ	0xFD9
  4686                           status	equ	0xFD8
  4687                           
  4688 ;; *************** function _uart_transmit_interrupt_handler *****************
  4689 ;; Defined at:
  4690 ;;		line 200 in file "../src/my_uart.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  message_stat    1   34[COMRAM] char 
  4695 ;;  data            4   29[COMRAM] unsigned char [4]
  4696 ;;  msgtype         1   33[COMRAM] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;		None               void
  4699 ;; Registers used:
  4700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4706 ;;      Params:         0       0       0       0       0
  4707 ;;      Locals:         6       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0
  4709 ;;      Totals:         6       0       0       0       0
  4710 ;;Total ram usage:        6 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    8
  4713 ;; This function calls:
  4714 ;;		_FromMainLow_recvmsg
  4715 ;;		i1_blip
  4716 ;; This function is called by:
  4717 ;;		_InterruptHandlerLow
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text30
  4722  00156E                     __ptext30:
  4723                           	opt stack 0
  4724  00156E                     _uart_transmit_interrupt_handler:
  4725                           	opt stack 16
  4726                           
  4727                           ;my_uart.c: 202: blip();
  4728                           
  4729                           ;incstack = 0
  4730  00156E  ECE5  F00E         	call	i1_blip	;wreg free
  4731                           
  4732                           ;my_uart.c: 204: static unsigned char done = 1;
  4733                           ;my_uart.c: 205: static unsigned char index = 0;
  4734                           ;my_uart.c: 207: unsigned char data[4];
  4735                           ;my_uart.c: 210: unsigned char msgtype = 31;
  4736  001572  0E1F               	movlw	31
  4737  001574  6E22               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4738                           
  4739                           ;my_uart.c: 212: if( done )
  4740  001576  5063               	movf	uart_transmit_interrupt_handler@done,w,c
  4741  001578  B4D8               	btfsc	status,2,c
  4742  00157A  D02C               	goto	i1l4064
  4743                           
  4744                           ;my_uart.c: 213: {
  4745                           ;my_uart.c: 214: signed char message_status = FromMainLow_recvmsg(4,&msgtype, (void*)dat
      +                          a );
  4746  00157C  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4747  00157E  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4748  001580  0E22               	movlw	low uart_transmit_interrupt_handler@msgtype
  4749  001582  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4750  001584  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4751  001586  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4752  001588  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4753  00158A  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4754  00158C  0E04               	movlw	4
  4755  00158E  EC40  F00E         	call	_FromMainLow_recvmsg
  4756  001592  6E23               	movwf	uart_transmit_interrupt_handler@message_status,c
  4757                           
  4758                           ;my_uart.c: 216: if( message_status == -4)
  4759  001594  5023               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4760  001596  0AFC               	xorlw	252
  4761  001598  A4D8               	btfss	status,2,c
  4762  00159A  D002               	goto	i1l4040
  4763                           
  4764                           ;my_uart.c: 217: {
  4765                           ;my_uart.c: 219: PIE1bits.TX1IE = 0;
  4766  00159C  989D               	bcf	3997,4,c	;volatile
  4767                           
  4768                           ;my_uart.c: 220: }
  4769  00159E  0012               	return	
  4770  0015A0                     i1l4040:
  4771                           
  4772                           ;my_uart.c: 221: else if( message_status > 0 )
  4773  0015A0  5023               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4774  0015A2  0A80               	xorlw	128
  4775  0015A4  0F7F               	addlw	-129
  4776  0015A6  A0D8               	btfss	status,0,c
  4777  0015A8  0012               	return	
  4778                           
  4779                           ;my_uart.c: 222: {
  4780                           ;my_uart.c: 224: index = 0;
  4781  0015AA  0E00               	movlw	0
  4782  0015AC  6E62               	movwf	uart_transmit_interrupt_handler@index,c
  4783                           
  4784                           ;my_uart.c: 225: done = 0;
  4785  0015AE  0E00               	movlw	0
  4786  0015B0  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4787                           
  4788                           ;my_uart.c: 227: TXREG1 = data[index];
  4789  0015B2  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4790  0015B4  0D01               	mullw	1
  4791  0015B6  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4792  0015B8  24F3               	addwf	prodl,w,c
  4793  0015BA  6ED9               	movwf	fsr2l,c
  4794  0015BC  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4795  0015BE  20F4               	addwfc	prodh,w,c
  4796  0015C0  6EDA               	movwf	fsr2h,c
  4797  0015C2  50DF               	movf	indf2,w,c
  4798  0015C4  6EAD               	movwf	4013,c	;volatile
  4799                           
  4800                           ;my_uart.c: 228: index++;
  4801  0015C6  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4802                           
  4803                           ;my_uart.c: 229: if( index >= 4 )
  4804  0015C8  0E03               	movlw	3
  4805  0015CA  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4806  0015CC  0012               	return	
  4807                           
  4808                           ;my_uart.c: 230: {
  4809                           ;my_uart.c: 231: done = 1;
  4810  0015CE  0E01               	movlw	1
  4811  0015D0  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4812  0015D2  0012               	return	
  4813  0015D4                     i1l4064:
  4814                           
  4815                           ;my_uart.c: 248: else
  4816                           ;my_uart.c: 249: {
  4817                           ;my_uart.c: 251: TXREG1 = data[index];
  4818  0015D4  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4819  0015D6  0D01               	mullw	1
  4820  0015D8  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4821  0015DA  24F3               	addwf	prodl,w,c
  4822  0015DC  6ED9               	movwf	fsr2l,c
  4823  0015DE  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4824  0015E0  20F4               	addwfc	prodh,w,c
  4825  0015E2  6EDA               	movwf	fsr2h,c
  4826  0015E4  50DF               	movf	indf2,w,c
  4827  0015E6  6EAD               	movwf	4013,c	;volatile
  4828                           
  4829                           ;my_uart.c: 252: index++;
  4830  0015E8  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4831                           
  4832                           ;my_uart.c: 253: if( index >= 4 )
  4833  0015EA  0E03               	movlw	3
  4834  0015EC  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4835  0015EE  0012               	return	
  4836                           
  4837                           ;my_uart.c: 254: {
  4838                           ;my_uart.c: 255: done = 1;
  4839  0015F0  0E01               	movlw	1
  4840  0015F2  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4841  0015F4  0012               	return	
  4842  0015F6                     __end_of_uart_transmit_interrupt_handler:
  4843                           	opt stack 0
  4844                           pclatu	equ	0xFFB
  4845                           pclath	equ	0xFFA
  4846                           tblptru	equ	0xFF8
  4847                           tblptrh	equ	0xFF7
  4848                           tblptrl	equ	0xFF6
  4849                           tablat	equ	0xFF5
  4850                           prodh	equ	0xFF4
  4851                           prodl	equ	0xFF3
  4852                           intcon	equ	0xFF2
  4853                           postinc0	equ	0xFEE
  4854                           fsr0h	equ	0xFEA
  4855                           fsr0l	equ	0xFE9
  4856                           wreg	equ	0xFE8
  4857                           indf1	equ	0xFE7
  4858                           fsr1h	equ	0xFE2
  4859                           fsr1l	equ	0xFE1
  4860                           bsr	equ	0xFE0
  4861                           indf2	equ	0xFDF
  4862                           postinc2	equ	0xFDE
  4863                           postdec2	equ	0xFDD
  4864                           fsr2h	equ	0xFDA
  4865                           fsr2l	equ	0xFD9
  4866                           status	equ	0xFD8
  4867                           
  4868 ;; *************** function i1_blip *****************
  4869 ;; Defined at:
  4870 ;;		line 11 in file "../src/debug.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;		None               void
  4877 ;; Registers used:
  4878 ;;		None
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4884 ;;      Params:         0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0
  4887 ;;      Totals:         0       0       0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    5
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_uart_transmit_interrupt_handler
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text31
  4899  001DCA                     __ptext31:
  4900                           	opt stack 0
  4901  001DCA                     i1_blip:
  4902                           	opt stack 18
  4903                           
  4904                           ;debug.c: 13: LATDbits.LD2 = 0;
  4905                           
  4906                           ;incstack = 0
  4907  001DCA  948C               	bcf	3980,2,c	;volatile
  4908                           
  4909                           ;debug.c: 14: LATDbits.LD2 = 1;
  4910  001DCC  848C               	bsf	3980,2,c	;volatile
  4911                           
  4912                           ;debug.c: 15: LATDbits.LD2 = 0;
  4913  001DCE  948C               	bcf	3980,2,c	;volatile
  4914  001DD0  0012               	return	
  4915  001DD2                     __end_ofi1_blip:
  4916                           	opt stack 0
  4917                           pclatu	equ	0xFFB
  4918                           pclath	equ	0xFFA
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           prodh	equ	0xFF4
  4924                           prodl	equ	0xFF3
  4925                           intcon	equ	0xFF2
  4926                           postinc0	equ	0xFEE
  4927                           fsr0h	equ	0xFEA
  4928                           fsr0l	equ	0xFE9
  4929                           wreg	equ	0xFE8
  4930                           indf1	equ	0xFE7
  4931                           fsr1h	equ	0xFE2
  4932                           fsr1l	equ	0xFE1
  4933                           bsr	equ	0xFE0
  4934                           indf2	equ	0xFDF
  4935                           postinc2	equ	0xFDE
  4936                           postdec2	equ	0xFDD
  4937                           fsr2h	equ	0xFDA
  4938                           fsr2l	equ	0xFD9
  4939                           status	equ	0xFD8
  4940                           
  4941 ;; *************** function _FromMainLow_recvmsg *****************
  4942 ;; Defined at:
  4943 ;;		line 159 in file "../src/messages.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  maxlength       1    wreg     unsigned char 
  4946 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  4947 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  4948 ;;  data            2   26[COMRAM] PTR void 
  4949 ;;		 -> uart_transmit_interrupt_handler@data(4), 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  maxlength       1   28[COMRAM] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      char 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4961 ;;      Params:         4       0       0       0       0
  4962 ;;      Locals:         1       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0
  4964 ;;      Totals:         5       0       0       0       0
  4965 ;;Total ram usage:        5 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    7
  4968 ;; This function calls:
  4969 ;;		i1_recv_msg
  4970 ;; This function is called by:
  4971 ;;		_uart_transmit_interrupt_handler
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text32
  4976  001C80                     __ptext32:
  4977                           	opt stack 0
  4978  001C80                     _FromMainLow_recvmsg:
  4979                           	opt stack 16
  4980                           
  4981                           ;incstack = 0
  4982                           ;FromMainLow_recvmsg@maxlength stored from wreg
  4983  001C80  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  4984                           
  4985                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  4986  001C82  0102               	movlb	2	; () banked
  4987  001C84  0E02               	movlw	high _FromMainLow_MQ
  4988  001C86  6E0C               	movwf	i1recv_msg@qptr+1,c
  4989  001C88  0102               	movlb	2	; () banked
  4990  001C8A  0E00               	movlw	low _FromMainLow_MQ
  4991  001C8C  6E0B               	movwf	i1recv_msg@qptr,c
  4992  001C8E  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  4993  001C92  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  4994  001C96  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  4995  001C9A  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  4996  001C9E  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  4997  001CA2  EC14  F008         	call	i1_recv_msg	;wreg free
  4998  001CA6  0012               	return	
  4999  001CA8                     __end_of_FromMainLow_recvmsg:
  5000                           	opt stack 0
  5001                           pclatu	equ	0xFFB
  5002                           pclath	equ	0xFFA
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           prodh	equ	0xFF4
  5008                           prodl	equ	0xFF3
  5009                           intcon	equ	0xFF2
  5010                           postinc0	equ	0xFEE
  5011                           fsr0h	equ	0xFEA
  5012                           fsr0l	equ	0xFE9
  5013                           wreg	equ	0xFE8
  5014                           indf1	equ	0xFE7
  5015                           fsr1h	equ	0xFE2
  5016                           fsr1l	equ	0xFE1
  5017                           bsr	equ	0xFE0
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function i1_recv_msg *****************
  5026 ;; Defined at:
  5027 ;;		line 63 in file "../src/messages.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5030 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5031 ;;  maxlength       1   12[COMRAM] unsigned char 
  5032 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5033 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  5034 ;;		 -> main@msgtype(1), 
  5035 ;;  data            2   15[COMRAM] PTR void 
  5036 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), 
  5037 ;;		 -> main@ic(38), 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5040 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5041 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5042 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5043 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      char 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5053 ;;      Params:         7       0       0       0       0
  5054 ;;      Locals:         5       0       0       0       0
  5055 ;;      Temps:          2       0       0       0       0
  5056 ;;      Totals:        14       0       0       0       0
  5057 ;;Total ram usage:       14 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    6
  5060 ;; This function calls:
  5061 ;;		i1___awmod
  5062 ;;		i1_memcpy
  5063 ;; This function is called by:
  5064 ;;		_FromMainLow_recvmsg
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text33
  5069  001028                     __ptext33:
  5070                           	opt stack 0
  5071  001028                     i1_recv_msg:
  5072                           	opt stack 16
  5073                           
  5074                           ;messages.c: 64: unsigned char slot;
  5075                           ;messages.c: 68: msg *qmsg;
  5076                           ;messages.c: 69: size_t tlength;
  5077                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5078                           
  5079                           ;incstack = 0
  5080  001028  EE20 F056          	lfsr	2,86
  5081  00102C  500B               	movf	i1recv_msg@qptr,w,c
  5082  00102E  26D9               	addwf	fsr2l,f,c
  5083  001030  500C               	movf	i1recv_msg@qptr+1,w,c
  5084  001032  22DA               	addwfc	fsr2h,f,c
  5085  001034  50DF               	movf	indf2,w,c
  5086  001036  6E14               	movwf	i1recv_msg@slot,c
  5087                           
  5088                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5089  001038  5014               	movf	i1recv_msg@slot,w,c
  5090  00103A  0D11               	mullw	17
  5091  00103C  50F3               	movf	prodl,w,c
  5092  00103E  240B               	addwf	i1recv_msg@qptr,w,c
  5093  001040  6E17               	movwf	i1recv_msg@qmsg,c
  5094  001042  50F4               	movf	prodh,w,c
  5095  001044  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5096  001046  6E18               	movwf	i1recv_msg@qmsg+1,c
  5097                           
  5098                           ;messages.c: 74: if (qmsg->full == 1) {
  5099  001048  0E01               	movlw	1
  5100  00104A  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5101  00104E  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5102  001052  62DF               	cpfseq	indf2,c
  5103  001054  D05B               	goto	i1l3622
  5104                           
  5105                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5106  001056  EE20 F001          	lfsr	2,1
  5107  00105A  5017               	movf	i1recv_msg@qmsg,w,c
  5108  00105C  26D9               	addwf	fsr2l,f,c
  5109  00105E  5018               	movf	i1recv_msg@qmsg+1,w,c
  5110  001060  22DA               	addwfc	fsr2h,f,c
  5111  001062  50DF               	movf	indf2,w,c
  5112  001064  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5113  001066  B0D8               	btfsc	status,0,c
  5114  001068  D002               	goto	i1l3606
  5115                           
  5116                           ;messages.c: 77: return (-3);
  5117  00106A  0EFD               	movlw	253
  5118  00106C  0012               	return	
  5119  00106E                     i1l3606:
  5120                           
  5121                           ;messages.c: 78: }
  5122                           ;messages.c: 80: tlength = qmsg->length;
  5123  00106E  EE20 F001          	lfsr	2,1
  5124  001072  5017               	movf	i1recv_msg@qmsg,w,c
  5125  001074  26D9               	addwf	fsr2l,f,c
  5126  001076  5018               	movf	i1recv_msg@qmsg+1,w,c
  5127  001078  22DA               	addwfc	fsr2h,f,c
  5128  00107A  50DF               	movf	indf2,w,c
  5129  00107C  6E12               	movwf	??i1_recv_msg& (0+255),c
  5130  00107E  5012               	movf	??i1_recv_msg,w,c
  5131  001080  6E15               	movwf	i1recv_msg@tlength,c
  5132  001082  6A16               	clrf	i1recv_msg@tlength+1,c
  5133                           
  5134                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5135  001084  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5136  001088  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5137  00108C  0E03               	movlw	3
  5138  00108E  2417               	addwf	i1recv_msg@qmsg,w,c
  5139  001090  6E12               	movwf	??i1_recv_msg& (0+255),c
  5140  001092  0E00               	movlw	0
  5141  001094  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5142  001096  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5143  001098  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5144  00109C  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5145  0010A0  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5146  0010A4  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5147  0010A8  EC0F  F00D         	call	i1_memcpy	;wreg free
  5148                           
  5149                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5150  0010AC  EE20 F056          	lfsr	2,86
  5151  0010B0  500B               	movf	i1recv_msg@qptr,w,c
  5152  0010B2  26D9               	addwf	fsr2l,f,c
  5153  0010B4  500C               	movf	i1recv_msg@qptr+1,w,c
  5154  0010B6  22DA               	addwfc	fsr2h,f,c
  5155  0010B8  EE10 F056          	lfsr	1,86
  5156  0010BC  500B               	movf	i1recv_msg@qptr,w,c
  5157  0010BE  26E1               	addwf	fsr1l,f,c
  5158  0010C0  500C               	movf	i1recv_msg@qptr+1,w,c
  5159  0010C2  22E2               	addwfc	fsr1h,f,c
  5160  0010C4  50E7               	movf	indf1,w,c
  5161  0010C6  6E12               	movwf	??i1_recv_msg& (0+255),c
  5162  0010C8  0E01               	movlw	1
  5163  0010CA  2412               	addwf	??i1_recv_msg,w,c
  5164  0010CC  6E01               	movwf	i1___awmod@dividend,c
  5165  0010CE  6A02               	clrf	i1___awmod@dividend+1,c
  5166  0010D0  0E00               	movlw	0
  5167  0010D2  2202               	addwfc	i1___awmod@dividend+1,f,c
  5168  0010D4  0E00               	movlw	0
  5169  0010D6  6E04               	movwf	i1___awmod@divisor+1,c
  5170  0010D8  0E05               	movlw	5
  5171  0010DA  6E03               	movwf	i1___awmod@divisor,c
  5172  0010DC  EC6F  F00A         	call	i1___awmod	;wreg free
  5173  0010E0  5001               	movf	?i1___awmod,w,c
  5174  0010E2  6EDF               	movwf	indf2,c
  5175                           
  5176                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5177  0010E4  EE20 F002          	lfsr	2,2
  5178  0010E8  5017               	movf	i1recv_msg@qmsg,w,c
  5179  0010EA  26D9               	addwf	fsr2l,f,c
  5180  0010EC  5018               	movf	i1recv_msg@qmsg+1,w,c
  5181  0010EE  22DA               	addwfc	fsr2h,f,c
  5182  0010F0  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5183  0010F4  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5184  0010F8  CFDF FFE7          	movff	indf2,indf1
  5185                           
  5186                           ;messages.c: 91: qmsg->full = 0;
  5187  0010FC  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5188  001100  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5189  001104  0E00               	movlw	0
  5190  001106  6EDF               	movwf	indf2,c
  5191                           
  5192                           ;messages.c: 92: return (tlength);
  5193  001108  5015               	movf	i1recv_msg@tlength,w,c
  5194  00110A  0012               	return	
  5195  00110C                     i1l3622:
  5196                           
  5197                           ;messages.c: 94: return (-4);
  5198  00110C  0EFC               	movlw	252
  5199  00110E  0012               	return	
  5200  001110                     __end_ofi1_recv_msg:
  5201                           	opt stack 0
  5202                           pclatu	equ	0xFFB
  5203                           pclath	equ	0xFFA
  5204                           tblptru	equ	0xFF8
  5205                           tblptrh	equ	0xFF7
  5206                           tblptrl	equ	0xFF6
  5207                           tablat	equ	0xFF5
  5208                           prodh	equ	0xFF4
  5209                           prodl	equ	0xFF3
  5210                           intcon	equ	0xFF2
  5211                           postinc0	equ	0xFEE
  5212                           fsr0h	equ	0xFEA
  5213                           fsr0l	equ	0xFE9
  5214                           wreg	equ	0xFE8
  5215                           indf1	equ	0xFE7
  5216                           fsr1h	equ	0xFE2
  5217                           fsr1l	equ	0xFE1
  5218                           bsr	equ	0xFE0
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           postdec2	equ	0xFDD
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226 ;; *************** function _uart_receive_interrupt_handler *****************
  5227 ;; Defined at:
  5228 ;;		line 61 in file "../src/my_uart.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5233 ;;  message_coun    1   50[COMRAM] unsigned char 
  5234 ;;  status          1   42[COMRAM] unsigned char 
  5235 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5236 ;;  msg_id          1   51[COMRAM] unsigned char 
  5237 ;;  status          1   43[COMRAM] unsigned char 
  5238 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5239 ;;  bad_counter_    2   44[COMRAM] unsigned char [2]
  5240 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5241 ;;  i               2   52[COMRAM] int 
  5242 ;;  checksum        1   46[COMRAM] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;		None               void
  5245 ;; Registers used:
  5246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5252 ;;      Params:         0       0       0       0       0
  5253 ;;      Locals:        26       0       0       0       0
  5254 ;;      Temps:          2       0       0       0       0
  5255 ;;      Totals:        28       0       0       0       0
  5256 ;;Total ram usage:       28 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    8
  5259 ;; This function calls:
  5260 ;;		_ToMainLow_sendmsg
  5261 ;; This function is called by:
  5262 ;;		_InterruptHandlerLow
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text34
  5267  0008FE                     __ptext34:
  5268                           	opt stack 0
  5269  0008FE                     _uart_receive_interrupt_handler:
  5270                           	opt stack 16
  5271                           
  5272                           ;my_uart.c: 64: static unsigned char frame[(14 + 2 + 2)];
  5273                           ;my_uart.c: 65: static unsigned char index = 0;
  5274                           ;my_uart.c: 66: static unsigned char done = 0;
  5275                           ;my_uart.c: 67: static unsigned char received_counter = 0;
  5276                           ;my_uart.c: 69: static unsigned char start_byte_bad = 0;
  5277                           ;my_uart.c: 70: static unsigned char error = 0;
  5278                           ;my_uart.c: 72: if(!done)
  5279                           
  5280                           ;incstack = 0
  5281  0008FE  665D               	tstfsz	uart_receive_interrupt_handler@done,c
  5282  000900  D03B               	goto	i1l3970
  5283                           
  5284                           ;my_uart.c: 73: {
  5285                           ;my_uart.c: 74: frame[index] = RCREG1;
  5286  000902  505F               	movf	uart_receive_interrupt_handler@index,w,c
  5287  000904  0D01               	mullw	1
  5288  000906  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5289  000908  24F3               	addwf	prodl,w,c
  5290  00090A  6ED9               	movwf	fsr2l,c
  5291  00090C  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5292  00090E  20F4               	addwfc	prodh,w,c
  5293  000910  6EDA               	movwf	fsr2h,c
  5294  000912  CFAE FFDF          	movff	4014,indf2	;volatile
  5295                           
  5296                           ;my_uart.c: 78: }
  5297                           ;my_uart.c: 79: if( index == 0 )
  5298                           
  5299                           ;my_uart.c: 76: {
  5300  000916  665F               	tstfsz	uart_receive_interrupt_handler@index,c
  5301  000918  D018               	goto	i1l3956
  5302                           
  5303                           ;my_uart.c: 80: {
  5304                           ;my_uart.c: 81: if( frame[0] != 0xff )
  5305  00091A  2848               	incf	uart_receive_interrupt_handler@frame,w,c
  5306  00091C  B4D8               	btfsc	status,2,c
  5307  00091E  D012               	goto	i1l3954
  5308                           
  5309                           ;my_uart.c: 82: {
  5310                           ;my_uart.c: 83: if( !start_byte_bad )
  5311  000920  6661               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5312  000922  D00D               	goto	i1l3948
  5313                           
  5314                           ;my_uart.c: 84: {
  5315                           ;my_uart.c: 85: start_byte_bad = 1;
  5316  000924  0E01               	movlw	1
  5317  000926  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5318                           
  5319                           ;my_uart.c: 86: unsigned char bad_start_id = received_counter;
  5320  000928  C060  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5321                           
  5322                           ;my_uart.c: 87: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5323  00092C  0E22               	movlw	34
  5324  00092E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5325  000930  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5326  000932  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5327  000934  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5328  000936  6E18               	movwf	ToMainLow_sendmsg@data,c
  5329  000938  0E01               	movlw	1
  5330  00093A  EC67  F00E         	call	_ToMainLow_sendmsg
  5331  00093E                     i1l3948:
  5332                           
  5333                           ;my_uart.c: 89: }
  5334                           ;my_uart.c: 90: index = 0;
  5335  00093E  0E00               	movlw	0
  5336  000940  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5337  000942  0012               	return	
  5338  000944                     i1l3954:
  5339                           
  5340                           ;my_uart.c: 93: else
  5341                           ;my_uart.c: 94: {
  5342                           ;my_uart.c: 95: start_byte_bad = 0;
  5343  000944  0E00               	movlw	0
  5344  000946  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5345  000948  D016               	goto	i1l3968
  5346  00094A                     i1l3956:
  5347                           
  5348                           ;my_uart.c: 98: else if( index >= (14 + 2 + 2) - 1 )
  5349  00094A  0E10               	movlw	16
  5350  00094C  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5351  00094E  D013               	goto	i1l3968
  5352                           
  5353                           ;my_uart.c: 99: {
  5354                           ;my_uart.c: 100: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5355  000950  5059               	movf	uart_receive_interrupt_handler@frame+17,w,c
  5356  000952  0AFE               	xorlw	254
  5357  000954  B4D8               	btfsc	status,2,c
  5358  000956  D00F               	goto	i1l3968
  5359                           
  5360                           ;my_uart.c: 101: {
  5361                           ;my_uart.c: 103: index = 0;
  5362  000958  0E00               	movlw	0
  5363  00095A  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5364                           
  5365                           ;my_uart.c: 106: unsigned char bad_end_id = received_counter;
  5366  00095C  C060  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5367                           
  5368                           ;my_uart.c: 107: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5369  000960  0E23               	movlw	35
  5370  000962  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5371  000964  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5372  000966  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5373  000968  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5374  00096A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5375  00096C  0E01               	movlw	1
  5376  00096E  EC67  F00E         	call	_ToMainLow_sendmsg
  5377                           
  5378                           ;my_uart.c: 108: error = 1;
  5379  000972  0E01               	movlw	1
  5380  000974  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5381  000976                     i1l3968:
  5382                           
  5383                           ;my_uart.c: 109: }
  5384                           ;my_uart.c: 110: }
  5385                           ;my_uart.c: 111: index++;
  5386  000976  2A5F               	incf	uart_receive_interrupt_handler@index,f,c
  5387  000978                     i1l3970:
  5388                           
  5389                           ;my_uart.c: 112: }
  5390                           ;my_uart.c: 114: if( index >= (14 + 2 + 2) )
  5391  000978  0E11               	movlw	17
  5392  00097A  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5393  00097C  0012               	return	
  5394                           
  5395                           ;my_uart.c: 115: {
  5396                           ;my_uart.c: 116: index = 0;
  5397  00097E  0E00               	movlw	0
  5398  000980  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5399                           
  5400                           ;my_uart.c: 118: if( received_counter != frame[1] )
  5401  000982  5049               	movf	uart_receive_interrupt_handler@frame+1,w,c
  5402  000984  1860               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5403  000986  B4D8               	btfsc	status,2,c
  5404  000988  D00F               	goto	i1l3980
  5405                           
  5406                           ;my_uart.c: 119: {
  5407                           ;my_uart.c: 121: unsigned char bad_counter_id[2];
  5408                           ;my_uart.c: 122: bad_counter_id[0] = received_counter;
  5409  00098A  C060  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5410                           
  5411                           ;my_uart.c: 123: bad_counter_id[1] = frame[1];
  5412  00098E  C049  F02E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5413                           
  5414                           ;my_uart.c: 124: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5415  000992  0E21               	movlw	33
  5416  000994  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5417  000996  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5418  000998  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5419  00099A  0E2D               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5420  00099C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5421  00099E  0E02               	movlw	2
  5422  0009A0  EC67  F00E         	call	_ToMainLow_sendmsg
  5423                           
  5424                           ;my_uart.c: 125: error = 1;
  5425  0009A4  0E01               	movlw	1
  5426  0009A6  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5427  0009A8                     i1l3980:
  5428                           
  5429                           ;my_uart.c: 126: }
  5430                           ;my_uart.c: 129: unsigned char gooey_uart_center[14];
  5431                           ;my_uart.c: 130: unsigned char checksum = 0;
  5432  0009A8  0E00               	movlw	0
  5433  0009AA  6E2F               	movwf	uart_receive_interrupt_handler@checksum,c
  5434                           
  5435                           ;my_uart.c: 131: int i;
  5436                           ;my_uart.c: 132: for(i = 0; i < 14; i++)
  5437  0009AC  0E00               	movlw	0
  5438  0009AE  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5439  0009B0  0E00               	movlw	0
  5440  0009B2  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5441  0009B4  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5442  0009B6  0A80               	xorlw	128
  5443  0009B8  0F80               	addlw	-128
  5444  0009BA  0E0E               	movlw	14
  5445  0009BC  B4D8               	btfsc	status,2,c
  5446  0009BE  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5447  0009C0  B0D8               	btfsc	status,0,c
  5448  0009C2  D01F               	goto	i1l3996
  5449                           
  5450                           ;my_uart.c: 133: {
  5451                           ;my_uart.c: 134: gooey_uart_center[i] = frame[i+2];
  5452  0009C4  0E02               	movlw	2
  5453  0009C6  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5454  0009C8  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5455  0009CA  0E00               	movlw	0
  5456  0009CC  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5457  0009CE  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5458  0009D0  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5459  0009D2  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5460  0009D4  6ED9               	movwf	fsr2l,c
  5461  0009D6  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5462  0009D8  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5463  0009DA  6EDA               	movwf	fsr2h,c
  5464  0009DC  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5465  0009DE  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5466  0009E0  6EE1               	movwf	fsr1l,c
  5467  0009E2  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5468  0009E4  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5469  0009E6  6EE2               	movwf	fsr1h,c
  5470  0009E8  CFDF FFE7          	movff	indf2,indf1
  5471                           
  5472                           ;my_uart.c: 135: checksum ^= gooey_uart_center[i];
  5473  0009EC  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5474  0009EE  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5475  0009F0  6ED9               	movwf	fsr2l,c
  5476  0009F2  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5477  0009F4  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5478  0009F6  6EDA               	movwf	fsr2h,c
  5479  0009F8  50DF               	movf	indf2,w,c
  5480  0009FA  1A2F               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5481  0009FC  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5482  0009FE  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5483  000A00  D7D9               	goto	L4
  5484  000A02                     i1l3996:
  5485                           
  5486                           ;my_uart.c: 136: }
  5487                           ;my_uart.c: 138: if( checksum != frame[(14 + 2 + 2) - 2] )
  5488  000A02  5058               	movf	uart_receive_interrupt_handler@frame+16,w,c
  5489  000A04  182F               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5490  000A06  B4D8               	btfsc	status,2,c
  5491  000A08  D00D               	goto	i1l4004
  5492                           
  5493                           ;my_uart.c: 139: {
  5494                           ;my_uart.c: 141: unsigned char bad_checksum_id = received_counter;
  5495  000A0A  C060  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5496                           
  5497                           ;my_uart.c: 142: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5498  000A0E  0E20               	movlw	32
  5499  000A10  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5500  000A12  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5501  000A14  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5502  000A16  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5503  000A18  6E18               	movwf	ToMainLow_sendmsg@data,c
  5504  000A1A  0E01               	movlw	1
  5505  000A1C  EC67  F00E         	call	_ToMainLow_sendmsg
  5506                           
  5507                           ;my_uart.c: 143: error = 1;
  5508  000A20  0E01               	movlw	1
  5509  000A22  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5510  000A24                     i1l4004:
  5511                           
  5512                           ;my_uart.c: 144: }
  5513                           ;my_uart.c: 149: if( !error )
  5514  000A24  665E               	tstfsz	uart_receive_interrupt_handler@error,c
  5515  000A26  D02C               	goto	i1l4024
  5516                           
  5517                           ;my_uart.c: 150: {
  5518                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5519  000A28  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5520                           
  5521                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5522  000A2C  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5523  000A2E  0A11               	xorlw	17
  5524  000A30  B4D8               	btfsc	status,2,c
  5525  000A32  D01C               	goto	i1l413
  5526  000A34  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5527  000A36  0AF1               	xorlw	241
  5528  000A38  B4D8               	btfsc	status,2,c
  5529  000A3A  D018               	goto	i1l413
  5530  000A3C  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5531  000A3E  0AF2               	xorlw	242
  5532  000A40  B4D8               	btfsc	status,2,c
  5533  000A42  D014               	goto	i1l413
  5534  000A44  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5535  000A46  0AF3               	xorlw	243
  5536  000A48  B4D8               	btfsc	status,2,c
  5537  000A4A  D010               	goto	i1l413
  5538  000A4C  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5539  000A4E  0AF4               	xorlw	244
  5540  000A50  B4D8               	btfsc	status,2,c
  5541  000A52  D00C               	goto	i1l413
  5542                           
  5543                           ;my_uart.c: 155: {
  5544                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5545  000A54  C060  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5546                           
  5547                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5548  000A58  0E24               	movlw	36
  5549  000A5A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5550  000A5C  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5551  000A5E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5552  000A60  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5553  000A62  6E18               	movwf	ToMainLow_sendmsg@data,c
  5554  000A64  0E01               	movlw	1
  5555  000A66  EC67  F00E         	call	_ToMainLow_sendmsg
  5556  000A6A  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5557  000A6C                     i1l413:
  5558                           
  5559                           ;my_uart.c: 158: }
  5560                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5561  000A6C  0E1F               	movlw	31
  5562  000A6E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5563  000A70  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5564  000A72  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5565  000A74  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5566  000A76  6E18               	movwf	ToMainLow_sendmsg@data,c
  5567  000A78  0E0E               	movlw	14
  5568  000A7A  EC67  F00E         	call	_ToMainLow_sendmsg
  5569  000A7E  6E2C               	movwf	uart_receive_interrupt_handler@status_1930,c
  5570  000A80                     i1l4024:
  5571                           
  5572                           ;my_uart.c: 171: }
  5573                           ;my_uart.c: 172: }
  5574                           ;my_uart.c: 174: received_counter++;
  5575  000A80  2A60               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5576                           
  5577                           ;my_uart.c: 175: error = 0;
  5578  000A82  0E00               	movlw	0
  5579  000A84  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5580  000A86  0012               	return	
  5581  000A88                     __end_of_uart_receive_interrupt_handler:
  5582                           	opt stack 0
  5583                           pclatu	equ	0xFFB
  5584                           pclath	equ	0xFFA
  5585                           tblptru	equ	0xFF8
  5586                           tblptrh	equ	0xFF7
  5587                           tblptrl	equ	0xFF6
  5588                           tablat	equ	0xFF5
  5589                           prodh	equ	0xFF4
  5590                           prodl	equ	0xFF3
  5591                           intcon	equ	0xFF2
  5592                           postinc0	equ	0xFEE
  5593                           fsr0h	equ	0xFEA
  5594                           fsr0l	equ	0xFE9
  5595                           wreg	equ	0xFE8
  5596                           indf1	equ	0xFE7
  5597                           fsr1h	equ	0xFE2
  5598                           fsr1l	equ	0xFE1
  5599                           bsr	equ	0xFE0
  5600                           indf2	equ	0xFDF
  5601                           postinc2	equ	0xFDE
  5602                           postdec2	equ	0xFDD
  5603                           fsr2h	equ	0xFDA
  5604                           fsr2l	equ	0xFD9
  5605                           status	equ	0xFD8
  5606                           
  5607 ;; *************** function _timer1_int_handler *****************
  5608 ;; Defined at:
  5609 ;;		line 38 in file "../src/user_interrupts.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  result          2   26[COMRAM] unsigned int 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;		None               void
  5616 ;; Registers used:
  5617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5623 ;;      Params:         0       0       0       0       0
  5624 ;;      Locals:         2       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0
  5626 ;;      Totals:         2       0       0       0       0
  5627 ;;Total ram usage:        2 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    8
  5630 ;; This function calls:
  5631 ;;		_ReadTimer1
  5632 ;;		_ToMainLow_sendmsg
  5633 ;;		_WriteTimer1
  5634 ;; This function is called by:
  5635 ;;		_InterruptHandlerLow
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text35
  5640  001C2C                     __ptext35:
  5641                           	opt stack 0
  5642  001C2C                     _timer1_int_handler:
  5643                           	opt stack 16
  5644                           
  5645                           ;user_interrupts.c: 42: unsigned int result;
  5646                           ;user_interrupts.c: 49: result = ReadTimer1();
  5647                           
  5648                           ;incstack = 0
  5649  001C2C  ECAB  F00E         	call	_ReadTimer1	;wreg free
  5650  001C30  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5651  001C34  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5652                           
  5653                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5654  001C38  0E0B               	movlw	11
  5655  001C3A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5656  001C3C  0E00               	movlw	0
  5657  001C3E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5658  001C40  0E00               	movlw	0
  5659  001C42  6E18               	movwf	ToMainLow_sendmsg@data,c
  5660  001C44  0E00               	movlw	0
  5661  001C46  EC67  F00E         	call	_ToMainLow_sendmsg
  5662                           
  5663                           ;user_interrupts.c: 53: WriteTimer1(0);
  5664  001C4A  0E00               	movlw	0
  5665  001C4C  6E02               	movwf	WriteTimer1@timer1+1,c
  5666  001C4E  0E00               	movlw	0
  5667  001C50  6E01               	movwf	WriteTimer1@timer1,c
  5668  001C52  ECA2  F00E         	call	_WriteTimer1	;wreg free
  5669  001C56  0012               	return	
  5670  001C58                     __end_of_timer1_int_handler:
  5671                           	opt stack 0
  5672                           pclatu	equ	0xFFB
  5673                           pclath	equ	0xFFA
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           prodh	equ	0xFF4
  5679                           prodl	equ	0xFF3
  5680                           intcon	equ	0xFF2
  5681                           postinc0	equ	0xFEE
  5682                           fsr0h	equ	0xFEA
  5683                           fsr0l	equ	0xFE9
  5684                           wreg	equ	0xFE8
  5685                           indf1	equ	0xFE7
  5686                           fsr1h	equ	0xFE2
  5687                           fsr1l	equ	0xFE1
  5688                           bsr	equ	0xFE0
  5689                           indf2	equ	0xFDF
  5690                           postinc2	equ	0xFDE
  5691                           postdec2	equ	0xFDD
  5692                           fsr2h	equ	0xFDA
  5693                           fsr2l	equ	0xFD9
  5694                           status	equ	0xFD8
  5695                           
  5696 ;; *************** function _WriteTimer1 *****************
  5697 ;; Defined at:
  5698 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  timer1          2    0[COMRAM] unsigned int 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  timer           2    2[COMRAM] struct Timers
  5703 ;; Return value:  Size  Location     Type
  5704 ;;		None               void
  5705 ;; Registers used:
  5706 ;;		None
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5712 ;;      Params:         2       0       0       0       0
  5713 ;;      Locals:         2       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0
  5715 ;;      Totals:         4       0       0       0       0
  5716 ;;Total ram usage:        4 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    5
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		_timer1_int_handler
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text36
  5727  001D44                     __ptext36:
  5728                           	opt stack 0
  5729  001D44                     _WriteTimer1:
  5730                           	opt stack 18
  5731                           
  5732                           ;incstack = 0
  5733  001D44  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5734  001D48  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5735  001D4C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5736  001D50  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5737  001D54  0012               	return	
  5738  001D56                     __end_of_WriteTimer1:
  5739                           	opt stack 0
  5740                           pclatu	equ	0xFFB
  5741                           pclath	equ	0xFFA
  5742                           tblptru	equ	0xFF8
  5743                           tblptrh	equ	0xFF7
  5744                           tblptrl	equ	0xFF6
  5745                           tablat	equ	0xFF5
  5746                           prodh	equ	0xFF4
  5747                           prodl	equ	0xFF3
  5748                           intcon	equ	0xFF2
  5749                           postinc0	equ	0xFEE
  5750                           fsr0h	equ	0xFEA
  5751                           fsr0l	equ	0xFE9
  5752                           wreg	equ	0xFE8
  5753                           indf1	equ	0xFE7
  5754                           fsr1h	equ	0xFE2
  5755                           fsr1l	equ	0xFE1
  5756                           bsr	equ	0xFE0
  5757                           indf2	equ	0xFDF
  5758                           postinc2	equ	0xFDE
  5759                           postdec2	equ	0xFDD
  5760                           fsr2h	equ	0xFDA
  5761                           fsr2l	equ	0xFD9
  5762                           status	equ	0xFD8
  5763                           
  5764 ;; *************** function _ToMainLow_sendmsg *****************
  5765 ;; Defined at:
  5766 ;;		line 103 in file "../src/messages.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  length          1    wreg     unsigned char 
  5769 ;;  msgtype         1   22[COMRAM] unsigned char 
  5770 ;;  data            2   23[COMRAM] PTR void 
  5771 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5772 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  length          1   25[COMRAM] unsigned char 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      char 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5784 ;;      Params:         3       0       0       0       0
  5785 ;;      Locals:         1       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0
  5787 ;;      Totals:         4       0       0       0       0
  5788 ;;Total ram usage:        4 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    7
  5791 ;; This function calls:
  5792 ;;		i1_send_msg
  5793 ;; This function is called by:
  5794 ;;		_uart_receive_interrupt_handler
  5795 ;;		_timer1_int_handler
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text37
  5800  001CCE                     __ptext37:
  5801                           	opt stack 0
  5802  001CCE                     _ToMainLow_sendmsg:
  5803                           	opt stack 16
  5804                           
  5805                           ;incstack = 0
  5806                           ;ToMainLow_sendmsg@length stored from wreg
  5807  001CCE  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5808                           
  5809                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5810  001CD0  0101               	movlb	1	; () banked
  5811  001CD2  0E01               	movlw	high _ToMainLow_MQ
  5812  001CD4  6E0C               	movwf	i1send_msg@qptr+1,c
  5813  001CD6  0101               	movlb	1	; () banked
  5814  001CD8  0E62               	movlw	low _ToMainLow_MQ
  5815  001CDA  6E0B               	movwf	i1send_msg@qptr,c
  5816  001CDC  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5817  001CE0  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5818  001CE4  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5819  001CE8  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5820  001CEC  ECB1  F009         	call	i1_send_msg	;wreg free
  5821  001CF0  0012               	return	
  5822  001CF2                     __end_of_ToMainLow_sendmsg:
  5823                           	opt stack 0
  5824                           pclatu	equ	0xFFB
  5825                           pclath	equ	0xFFA
  5826                           tblptru	equ	0xFF8
  5827                           tblptrh	equ	0xFF7
  5828                           tblptrl	equ	0xFF6
  5829                           tablat	equ	0xFF5
  5830                           prodh	equ	0xFF4
  5831                           prodl	equ	0xFF3
  5832                           intcon	equ	0xFF2
  5833                           postinc0	equ	0xFEE
  5834                           fsr0h	equ	0xFEA
  5835                           fsr0l	equ	0xFE9
  5836                           wreg	equ	0xFE8
  5837                           indf1	equ	0xFE7
  5838                           fsr1h	equ	0xFE2
  5839                           fsr1l	equ	0xFE1
  5840                           bsr	equ	0xFE0
  5841                           indf2	equ	0xFDF
  5842                           postinc2	equ	0xFDE
  5843                           postdec2	equ	0xFDD
  5844                           fsr2h	equ	0xFDA
  5845                           fsr2l	equ	0xFD9
  5846                           status	equ	0xFD8
  5847                           
  5848 ;; *************** function i1_send_msg *****************
  5849 ;; Defined at:
  5850 ;;		line 24 in file "../src/messages.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5853 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5854 ;;  length          1   12[COMRAM] unsigned char 
  5855 ;;  msgtype         1   13[COMRAM] unsigned char 
  5856 ;;  data            2   14[COMRAM] PTR void 
  5857 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  5858 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  5859 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread
      +_data(2), 
  5860 ;;		 -> main@ic(38), 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5863 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5864 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5865 ;;  send_msg        2   17[COMRAM] unsigned int 
  5866 ;;  send_msg        1   19[COMRAM] unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      char 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5876 ;;      Params:         6       0       0       0       0
  5877 ;;      Locals:         5       0       0       0       0
  5878 ;;      Temps:          1       0       0       0       0
  5879 ;;      Totals:        12       0       0       0       0
  5880 ;;Total ram usage:       12 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    6
  5883 ;; This function calls:
  5884 ;;		i1___awmod
  5885 ;;		i1_memcpy
  5886 ;; This function is called by:
  5887 ;;		_ToMainLow_sendmsg
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text38
  5892  001362                     __ptext38:
  5893                           	opt stack 0
  5894  001362                     i1_send_msg:
  5895                           	opt stack 16
  5896                           
  5897                           ;messages.c: 25: unsigned char slot;
  5898                           ;messages.c: 27: msg *qmsg;
  5899                           ;messages.c: 28: size_t tlength = length;
  5900                           
  5901                           ;incstack = 0
  5902  001362  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5903  001366  6A13               	clrf	i1send_msg@tlength+1,c
  5904                           
  5905                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5906  001368  EE20 F055          	lfsr	2,85
  5907  00136C  500B               	movf	i1send_msg@qptr,w,c
  5908  00136E  26D9               	addwf	fsr2l,f,c
  5909  001370  500C               	movf	i1send_msg@qptr+1,w,c
  5910  001372  22DA               	addwfc	fsr2h,f,c
  5911  001374  50DF               	movf	indf2,w,c
  5912  001376  6E14               	movwf	i1send_msg@slot,c
  5913                           
  5914                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5915  001378  5014               	movf	i1send_msg@slot,w,c
  5916  00137A  0D11               	mullw	17
  5917  00137C  50F3               	movf	prodl,w,c
  5918  00137E  240B               	addwf	i1send_msg@qptr,w,c
  5919  001380  6E15               	movwf	i1send_msg@qmsg,c
  5920  001382  50F4               	movf	prodh,w,c
  5921  001384  200C               	addwfc	i1send_msg@qptr+1,w,c
  5922  001386  6E16               	movwf	i1send_msg@qmsg+1,c
  5923                           
  5924                           ;messages.c: 41: if (qmsg->full != 0) {
  5925  001388  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5926  00138C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5927  001390  50DF               	movf	indf2,w,c
  5928  001392  B4D8               	btfsc	status,2,c
  5929  001394  D002               	goto	i1l3558
  5930                           
  5931                           ;messages.c: 42: return (-1);
  5932  001396  0EFF               	movlw	255
  5933  001398  0012               	return	
  5934  00139A                     i1l3558:
  5935                           
  5936                           ;messages.c: 43: }
  5937                           ;messages.c: 46: qmsg->length = length;
  5938  00139A  EE20 F001          	lfsr	2,1
  5939  00139E  5015               	movf	i1send_msg@qmsg,w,c
  5940  0013A0  26D9               	addwf	fsr2l,f,c
  5941  0013A2  5016               	movf	i1send_msg@qmsg+1,w,c
  5942  0013A4  22DA               	addwfc	fsr2h,f,c
  5943  0013A6  C00D  FFDF         	movff	i1send_msg@length,indf2
  5944                           
  5945                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5946  0013AA  EE20 F002          	lfsr	2,2
  5947  0013AE  5015               	movf	i1send_msg@qmsg,w,c
  5948  0013B0  26D9               	addwf	fsr2l,f,c
  5949  0013B2  5016               	movf	i1send_msg@qmsg+1,w,c
  5950  0013B4  22DA               	addwfc	fsr2h,f,c
  5951  0013B6  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5952                           
  5953                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5954  0013BA  0E03               	movlw	3
  5955  0013BC  2415               	addwf	i1send_msg@qmsg,w,c
  5956  0013BE  6E01               	movwf	i1memcpy@d1,c
  5957  0013C0  0E00               	movlw	0
  5958  0013C2  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5959  0013C4  6E02               	movwf	i1memcpy@d1+1,c
  5960  0013C6  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5961  0013CA  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5962  0013CE  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5963  0013D2  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5964  0013D6  EC0F  F00D         	call	i1_memcpy	;wreg free
  5965                           
  5966                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  5967  0013DA  EE20 F055          	lfsr	2,85
  5968  0013DE  500B               	movf	i1send_msg@qptr,w,c
  5969  0013E0  26D9               	addwf	fsr2l,f,c
  5970  0013E2  500C               	movf	i1send_msg@qptr+1,w,c
  5971  0013E4  22DA               	addwfc	fsr2h,f,c
  5972  0013E6  EE10 F055          	lfsr	1,85
  5973  0013EA  500B               	movf	i1send_msg@qptr,w,c
  5974  0013EC  26E1               	addwf	fsr1l,f,c
  5975  0013EE  500C               	movf	i1send_msg@qptr+1,w,c
  5976  0013F0  22E2               	addwfc	fsr1h,f,c
  5977  0013F2  50E7               	movf	indf1,w,c
  5978  0013F4  6E11               	movwf	??i1_send_msg& (0+255),c
  5979  0013F6  0E01               	movlw	1
  5980  0013F8  2411               	addwf	??i1_send_msg,w,c
  5981  0013FA  6E01               	movwf	i1___awmod@dividend,c
  5982  0013FC  6A02               	clrf	i1___awmod@dividend+1,c
  5983  0013FE  0E00               	movlw	0
  5984  001400  2202               	addwfc	i1___awmod@dividend+1,f,c
  5985  001402  0E00               	movlw	0
  5986  001404  6E04               	movwf	i1___awmod@divisor+1,c
  5987  001406  0E05               	movlw	5
  5988  001408  6E03               	movwf	i1___awmod@divisor,c
  5989  00140A  EC6F  F00A         	call	i1___awmod	;wreg free
  5990  00140E  5001               	movf	?i1___awmod,w,c
  5991  001410  6EDF               	movwf	indf2,c
  5992                           
  5993                           ;messages.c: 59: qmsg->full = 1;
  5994  001412  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5995  001416  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5996  00141A  0E01               	movlw	1
  5997  00141C  6EDF               	movwf	indf2,c
  5998                           
  5999                           ;messages.c: 60: return (1);
  6000  00141E  0E01               	movlw	1
  6001  001420  0012               	return	
  6002  001422                     __end_ofi1_send_msg:
  6003                           	opt stack 0
  6004                           pclatu	equ	0xFFB
  6005                           pclath	equ	0xFFA
  6006                           tblptru	equ	0xFF8
  6007                           tblptrh	equ	0xFF7
  6008                           tblptrl	equ	0xFF6
  6009                           tablat	equ	0xFF5
  6010                           prodh	equ	0xFF4
  6011                           prodl	equ	0xFF3
  6012                           intcon	equ	0xFF2
  6013                           postinc0	equ	0xFEE
  6014                           fsr0h	equ	0xFEA
  6015                           fsr0l	equ	0xFE9
  6016                           wreg	equ	0xFE8
  6017                           indf1	equ	0xFE7
  6018                           fsr1h	equ	0xFE2
  6019                           fsr1l	equ	0xFE1
  6020                           bsr	equ	0xFE0
  6021                           indf2	equ	0xFDF
  6022                           postinc2	equ	0xFDE
  6023                           postdec2	equ	0xFDD
  6024                           fsr2h	equ	0xFDA
  6025                           fsr2l	equ	0xFD9
  6026                           status	equ	0xFD8
  6027                           
  6028 ;; *************** function i1_memcpy *****************
  6029 ;; Defined at:
  6030 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  d1              2    0[COMRAM] PTR void 
  6033 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6034 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), 
  6035 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6036 ;;		 -> main@ic(38), 
  6037 ;;  s1              2    2[COMRAM] PTR const void 
  6038 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6039 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6040 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  6041 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6042 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  6043 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(2), 
  6044 ;;		 -> main@ic(38), 
  6045 ;;  n               2    4[COMRAM] unsigned int 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6048 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6049 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6050 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  6051 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6052 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  6053 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(2), 
  6054 ;;		 -> main@ic(38), 
  6055 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6056 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6057 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), 
  6058 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6059 ;;		 -> main@ic(38), 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  2    0[COMRAM] PTR void 
  6062 ;; Registers used:
  6063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6069 ;;      Params:         6       0       0       0       0
  6070 ;;      Locals:         4       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0
  6072 ;;      Totals:        10       0       0       0       0
  6073 ;;Total ram usage:       10 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    5
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		i1_send_msg
  6080 ;;		i1_recv_msg
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text39
  6085  001A1E                     __ptext39:
  6086                           	opt stack 0
  6087  001A1E                     i1_memcpy:
  6088                           	opt stack 16
  6089                           
  6090                           ;incstack = 0
  6091  001A1E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6092  001A22  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6093  001A26  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6094  001A2A  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6095  001A2E  D00E               	goto	i1l2428
  6096  001A30                     i1l2422:
  6097  001A30  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6098  001A34  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6099  001A38  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6100  001A3C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6101  001A40  CFDF FFE7          	movff	indf2,indf1
  6102  001A44  4A09               	infsnz	i1memcpy@s,f,c
  6103  001A46  2A0A               	incf	i1memcpy@s+1,f,c
  6104  001A48  4A07               	infsnz	i1memcpy@d,f,c
  6105  001A4A  2A08               	incf	i1memcpy@d+1,f,c
  6106  001A4C                     i1l2428:
  6107  001A4C  0605               	decf	i1memcpy@n,f,c
  6108  001A4E  A0D8               	btfss	status,0,c
  6109  001A50  0606               	decf	i1memcpy@n+1,f,c
  6110  001A52  2805               	incf	i1memcpy@n& (0+255),w,c
  6111  001A54  B4D8               	btfsc	status,2,c
  6112  001A56  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6113  001A58  B4D8               	btfsc	status,2,c
  6114                           
  6115                           ;	Return value of i1_memcpy is never used
  6116  001A5A  0012               	return	
  6117  001A5C  D7E9               	goto	i1l2422
  6118  001A5E                     __end_ofi1_memcpy:
  6119                           	opt stack 0
  6120                           pclatu	equ	0xFFB
  6121                           pclath	equ	0xFFA
  6122                           tblptru	equ	0xFF8
  6123                           tblptrh	equ	0xFF7
  6124                           tblptrl	equ	0xFF6
  6125                           tablat	equ	0xFF5
  6126                           prodh	equ	0xFF4
  6127                           prodl	equ	0xFF3
  6128                           intcon	equ	0xFF2
  6129                           postinc0	equ	0xFEE
  6130                           fsr0h	equ	0xFEA
  6131                           fsr0l	equ	0xFE9
  6132                           wreg	equ	0xFE8
  6133                           indf1	equ	0xFE7
  6134                           fsr1h	equ	0xFE2
  6135                           fsr1l	equ	0xFE1
  6136                           bsr	equ	0xFE0
  6137                           indf2	equ	0xFDF
  6138                           postinc2	equ	0xFDE
  6139                           postdec2	equ	0xFDD
  6140                           fsr2h	equ	0xFDA
  6141                           fsr2l	equ	0xFD9
  6142                           status	equ	0xFD8
  6143                           
  6144 ;; *************** function i1___awmod *****************
  6145 ;; Defined at:
  6146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  dividend        2    0[COMRAM] int 
  6149 ;;  divisor         2    2[COMRAM] int 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  __awmod         1    5[COMRAM] unsigned char 
  6152 ;;  __awmod         1    4[COMRAM] unsigned char 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  2    0[COMRAM] int 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0, prodl
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6162 ;;      Params:         4       0       0       0       0
  6163 ;;      Locals:         2       0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0
  6165 ;;      Totals:         6       0       0       0       0
  6166 ;;Total ram usage:        6 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:    5
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		i1_send_msg
  6173 ;;		i1_recv_msg
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text40
  6178  0014DE                     __ptext40:
  6179                           	opt stack 0
  6180  0014DE                     i1___awmod:
  6181                           	opt stack 16
  6182                           
  6183                           ;incstack = 0
  6184  0014DE  0E00               	movlw	0
  6185  0014E0  6E06               	movwf	i1___awmod@sign,c
  6186  0014E2  5002               	movf	i1___awmod@dividend+1,w,c
  6187  0014E4  0A80               	xorlw	128
  6188  0014E6  6EF3               	movwf	prodl,c
  6189  0014E8  0E80               	movlw	128
  6190  0014EA  5CF3               	subwf	prodl,w,c
  6191  0014EC  0E00               	movlw	0
  6192  0014EE  B4D8               	btfsc	status,2,c
  6193  0014F0  5C01               	subwf	i1___awmod@dividend,w,c
  6194  0014F2  B0D8               	btfsc	status,0,c
  6195  0014F4  D006               	goto	i1l2448
  6196  0014F6  6C01               	negf	i1___awmod@dividend,c
  6197  0014F8  1E02               	comf	i1___awmod@dividend+1,f,c
  6198  0014FA  B0D8               	btfsc	status,0,c
  6199  0014FC  2A02               	incf	i1___awmod@dividend+1,f,c
  6200  0014FE  0E01               	movlw	1
  6201  001500  6E06               	movwf	i1___awmod@sign,c
  6202  001502                     i1l2448:
  6203  001502  5004               	movf	i1___awmod@divisor+1,w,c
  6204  001504  0A80               	xorlw	128
  6205  001506  6EF3               	movwf	prodl,c
  6206  001508  0E80               	movlw	128
  6207  00150A  5CF3               	subwf	prodl,w,c
  6208  00150C  0E00               	movlw	0
  6209  00150E  B4D8               	btfsc	status,2,c
  6210  001510  5C03               	subwf	i1___awmod@divisor,w,c
  6211  001512  B0D8               	btfsc	status,0,c
  6212  001514  D004               	goto	i1l2452
  6213  001516  6C03               	negf	i1___awmod@divisor,c
  6214  001518  1E04               	comf	i1___awmod@divisor+1,f,c
  6215  00151A  B0D8               	btfsc	status,0,c
  6216  00151C  2A04               	incf	i1___awmod@divisor+1,f,c
  6217  00151E                     i1l2452:
  6218  00151E  5004               	movf	i1___awmod@divisor+1,w,c
  6219  001520  1003               	iorwf	i1___awmod@divisor,w,c
  6220  001522  B4D8               	btfsc	status,2,c
  6221  001524  D018               	goto	i1l2468
  6222  001526  0E01               	movlw	1
  6223  001528  6E05               	movwf	i1___awmod@counter,c
  6224  00152A  D004               	goto	i1l2458
  6225  00152C                     i1l2456:
  6226  00152C  90D8               	bcf	status,0,c
  6227  00152E  3603               	rlcf	i1___awmod@divisor,f,c
  6228  001530  3604               	rlcf	i1___awmod@divisor+1,f,c
  6229  001532  2A05               	incf	i1___awmod@counter,f,c
  6230  001534                     i1l2458:
  6231  001534  AE04               	btfss	i1___awmod@divisor+1,7,c
  6232  001536  D7FA               	goto	i1l2456
  6233  001538                     i1l2460:
  6234  001538  5003               	movf	i1___awmod@divisor,w,c
  6235  00153A  5C01               	subwf	i1___awmod@dividend,w,c
  6236  00153C  5004               	movf	i1___awmod@divisor+1,w,c
  6237  00153E  5802               	subwfb	i1___awmod@dividend+1,w,c
  6238  001540  A0D8               	btfss	status,0,c
  6239  001542  D004               	goto	i1l2464
  6240  001544  5003               	movf	i1___awmod@divisor,w,c
  6241  001546  5E01               	subwf	i1___awmod@dividend,f,c
  6242  001548  5004               	movf	i1___awmod@divisor+1,w,c
  6243  00154A  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6244  00154C                     i1l2464:
  6245  00154C  90D8               	bcf	status,0,c
  6246  00154E  3204               	rrcf	i1___awmod@divisor+1,f,c
  6247  001550  3203               	rrcf	i1___awmod@divisor,f,c
  6248  001552  2E05               	decfsz	i1___awmod@counter,f,c
  6249  001554  D7F1               	goto	i1l2460
  6250  001556                     i1l2468:
  6251  001556  5006               	movf	i1___awmod@sign,w,c
  6252  001558  B4D8               	btfsc	status,2,c
  6253  00155A  D004               	goto	i1l2472
  6254  00155C  6C01               	negf	i1___awmod@dividend,c
  6255  00155E  1E02               	comf	i1___awmod@dividend+1,f,c
  6256  001560  B0D8               	btfsc	status,0,c
  6257  001562  2A02               	incf	i1___awmod@dividend+1,f,c
  6258  001564                     i1l2472:
  6259  001564  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6260  001568  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6261  00156C  0012               	return	
  6262  00156E                     __end_ofi1___awmod:
  6263                           	opt stack 0
  6264                           pclatu	equ	0xFFB
  6265                           pclath	equ	0xFFA
  6266                           tblptru	equ	0xFF8
  6267                           tblptrh	equ	0xFF7
  6268                           tblptrl	equ	0xFF6
  6269                           tablat	equ	0xFF5
  6270                           prodh	equ	0xFF4
  6271                           prodl	equ	0xFF3
  6272                           intcon	equ	0xFF2
  6273                           postinc0	equ	0xFEE
  6274                           fsr0h	equ	0xFEA
  6275                           fsr0l	equ	0xFE9
  6276                           wreg	equ	0xFE8
  6277                           indf1	equ	0xFE7
  6278                           fsr1h	equ	0xFE2
  6279                           fsr1l	equ	0xFE1
  6280                           bsr	equ	0xFE0
  6281                           indf2	equ	0xFDF
  6282                           postinc2	equ	0xFDE
  6283                           postdec2	equ	0xFDD
  6284                           fsr2h	equ	0xFDA
  6285                           fsr2l	equ	0xFD9
  6286                           status	equ	0xFD8
  6287                           
  6288 ;; *************** function _ReadTimer1 *****************
  6289 ;; Defined at:
  6290 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  timer           2    2[COMRAM] struct Timers
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  2    0[COMRAM] unsigned int 
  6297 ;; Registers used:
  6298 ;;		None
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6304 ;;      Params:         2       0       0       0       0
  6305 ;;      Locals:         2       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0
  6307 ;;      Totals:         4       0       0       0       0
  6308 ;;Total ram usage:        4 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    5
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_timer1_int_handler
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text41
  6319  001D56                     __ptext41:
  6320                           	opt stack 0
  6321  001D56                     _ReadTimer1:
  6322                           	opt stack 18
  6323                           
  6324                           ;incstack = 0
  6325  001D56  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6326  001D5A  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6327  001D5E  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6328  001D62  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6329  001D66  0012               	return	
  6330  001D68                     __end_of_ReadTimer1:
  6331                           	opt stack 0
  6332                           pclatu	equ	0xFFB
  6333                           pclath	equ	0xFFA
  6334                           tblptru	equ	0xFF8
  6335                           tblptrh	equ	0xFF7
  6336                           tblptrl	equ	0xFF6
  6337                           tablat	equ	0xFF5
  6338                           prodh	equ	0xFF4
  6339                           prodl	equ	0xFF3
  6340                           intcon	equ	0xFF2
  6341                           postinc0	equ	0xFEE
  6342                           fsr0h	equ	0xFEA
  6343                           fsr0l	equ	0xFE9
  6344                           wreg	equ	0xFE8
  6345                           indf1	equ	0xFE7
  6346                           fsr1h	equ	0xFE2
  6347                           fsr1l	equ	0xFE1
  6348                           bsr	equ	0xFE0
  6349                           indf2	equ	0xFDF
  6350                           postinc2	equ	0xFDE
  6351                           postdec2	equ	0xFDD
  6352                           fsr2h	equ	0xFDA
  6353                           fsr2l	equ	0xFD9
  6354                           status	equ	0xFD8
  6355                           
  6356 ;; *************** function _InterruptHandlerHigh *****************
  6357 ;; Defined at:
  6358 ;;		line 86 in file "../src/interrupts.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;		None               void
  6365 ;; Registers used:
  6366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6372 ;;      Params:         0       0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0
  6374 ;;      Temps:          0      14       0       0       0
  6375 ;;      Totals:         0      14       0       0       0
  6376 ;;Total ram usage:       14 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    4
  6379 ;; This function calls:
  6380 ;;		_SleepIfOkay
  6381 ;;		_i2c_int_handler
  6382 ;;		_timer0_int_handler
  6383 ;; This function is called by:
  6384 ;;		Interrupt level 2
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	intcode
  6389  000008                     __pintcode:
  6390                           	opt stack 0
  6391  000008                     _InterruptHandlerHigh:
  6392                           	opt stack 16
  6393                           
  6394                           ;incstack = 0
  6395  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh
  6396  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+1
  6397  000010  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6398  000014  EFFB  F00A         	goto	int_func
  6399                           pclatu	equ	0xFFB
  6400                           pclath	equ	0xFFA
  6401                           tblptru	equ	0xFF8
  6402                           tblptrh	equ	0xFF7
  6403                           tblptrl	equ	0xFF6
  6404                           tablat	equ	0xFF5
  6405                           prodh	equ	0xFF4
  6406                           prodl	equ	0xFF3
  6407                           intcon	equ	0xFF2
  6408                           postinc0	equ	0xFEE
  6409                           fsr0h	equ	0xFEA
  6410                           fsr0l	equ	0xFE9
  6411                           wreg	equ	0xFE8
  6412                           indf1	equ	0xFE7
  6413                           fsr1h	equ	0xFE2
  6414                           fsr1l	equ	0xFE1
  6415                           bsr	equ	0xFE0
  6416                           indf2	equ	0xFDF
  6417                           postinc2	equ	0xFDE
  6418                           postdec2	equ	0xFDD
  6419                           fsr2h	equ	0xFDA
  6420                           fsr2l	equ	0xFD9
  6421                           status	equ	0xFD8
  6422                           
  6423                           	psect	intcode_body
  6424  0015F6                     __pintcode_body:
  6425                           	opt stack 16
  6426  0015F6                     int_func:
  6427                           	opt stack 16
  6428  0015F6  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6429  0015FA  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6430  0015FE  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6431  001602  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6432  001606  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6433  00160A  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+8
  6434  00160E  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+9
  6435  001612  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6436  001616  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6437  00161A  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+12
  6438  00161E  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+13
  6439                           
  6440                           ;interrupts.c: 87: LATDbits.LD6 = 0;
  6441  001622  9C8C               	bcf	3980,6,c	;volatile
  6442                           
  6443                           ;interrupts.c: 88: LATDbits.LD6 = 1;
  6444  001624  8C8C               	bsf	3980,6,c	;volatile
  6445                           
  6446                           ;interrupts.c: 93: if (PIR1bits.SSPIF) {
  6447  001626  A69E               	btfss	3998,3,c	;volatile
  6448  001628  D003               	goto	i2l4130
  6449                           
  6450                           ;interrupts.c: 95: PIR1bits.SSPIF = 0;
  6451  00162A  969E               	bcf	3998,3,c	;volatile
  6452                           
  6453                           ;interrupts.c: 100: i2c_int_handler();
  6454  00162C  EC62  F000         	call	_i2c_int_handler	;wreg free
  6455  001630                     i2l4130:
  6456                           
  6457                           ;interrupts.c: 101: }
  6458                           ;interrupts.c: 104: if (INTCONbits.TMR0IF) {
  6459  001630  A4F2               	btfss	intcon,2,c	;volatile
  6460  001632  D003               	goto	i2l4136
  6461                           
  6462                           ;interrupts.c: 105: INTCONbits.TMR0IF = 0;
  6463  001634  94F2               	bcf	intcon,2,c	;volatile
  6464                           
  6465                           ;interrupts.c: 110: timer0_int_handler();
  6466  001636  EC3E  F00B         	call	_timer0_int_handler	;wreg free
  6467  00163A                     i2l4136:
  6468                           
  6469                           ;interrupts.c: 111: }
  6470                           ;interrupts.c: 120: SleepIfOkay();
  6471  00163A  EC3B  F00C         	call	_SleepIfOkay	;wreg free
  6472                           
  6473                           ;interrupts.c: 121: LATDbits.LD6 = 1;
  6474  00163E  8C8C               	bsf	3980,6,c	;volatile
  6475                           
  6476                           ;interrupts.c: 122: LATDbits.LD6 = 0;
  6477  001640  9C8C               	bcf	3980,6,c	;volatile
  6478  001642  C0B7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6479  001646  C0B6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6480  00164A  C0B5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6481  00164E  C0B4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6482  001652  C0B3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6483  001656  C0B2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6484  00165A  C0B1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6485  00165E  C0B0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6486  001662  C0AF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6487  001666  C0AE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6488  00166A  C0AD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6489  00166E  C0AC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6490  001672  C0AB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6491  001676  C0AA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6492  00167A  0011               	retfie		f
  6493  00167C                     __end_of_InterruptHandlerHigh:
  6494                           	opt stack 0
  6495                           pclatu	equ	0xFFB
  6496                           pclath	equ	0xFFA
  6497                           tblptru	equ	0xFF8
  6498                           tblptrh	equ	0xFF7
  6499                           tblptrl	equ	0xFF6
  6500                           tablat	equ	0xFF5
  6501                           prodh	equ	0xFF4
  6502                           prodl	equ	0xFF3
  6503                           intcon	equ	0xFF2
  6504                           postinc0	equ	0xFEE
  6505                           fsr0h	equ	0xFEA
  6506                           fsr0l	equ	0xFE9
  6507                           wreg	equ	0xFE8
  6508                           indf1	equ	0xFE7
  6509                           fsr1h	equ	0xFE2
  6510                           fsr1l	equ	0xFE1
  6511                           bsr	equ	0xFE0
  6512                           indf2	equ	0xFDF
  6513                           postinc2	equ	0xFDE
  6514                           postdec2	equ	0xFDD
  6515                           fsr2h	equ	0xFDA
  6516                           fsr2l	equ	0xFD9
  6517                           status	equ	0xFD8
  6518                           
  6519 ;; *************** function _timer0_int_handler *****************
  6520 ;; Defined at:
  6521 ;;		line 16 in file "../src/user_interrupts.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  val             2   33[BANK0 ] unsigned int 
  6526 ;;  msgtype         2   31[BANK0 ] int 
  6527 ;;  length          2   29[BANK0 ] int 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;		None               void
  6530 ;; Registers used:
  6531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6537 ;;      Params:         0       0       0       0       0
  6538 ;;      Locals:         0       6       0       0       0
  6539 ;;      Temps:          0       0       0       0       0
  6540 ;;      Totals:         0       6       0       0       0
  6541 ;;Total ram usage:        6 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    3
  6544 ;; This function calls:
  6545 ;;		_FromMainHigh_recvmsg
  6546 ;;		_ToMainHigh_sendmsg
  6547 ;;		_WriteTimer0
  6548 ;; This function is called by:
  6549 ;;		_InterruptHandlerHigh
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text43
  6554  00167C                     __ptext43:
  6555                           	opt stack 0
  6556  00167C                     _timer0_int_handler:
  6557                           	opt stack 16
  6558                           
  6559                           ;user_interrupts.c: 20: unsigned int val;
  6560                           ;user_interrupts.c: 21: int length, msgtype;
  6561                           ;user_interrupts.c: 25: WriteTimer0(0);
  6562                           
  6563                           ;incstack = 0
  6564  00167C  0E00               	movlw	0
  6565  00167E  0100               	movlb	0	; () banked
  6566  001680  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6567  001682  0E00               	movlw	0
  6568  001684  0100               	movlb	0	; () banked
  6569  001686  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6570  001688  ECB4  F00E         	call	_WriteTimer0	;wreg free
  6571                           
  6572                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6573  00168C  0100               	movlb	0	; () banked
  6574  00168E  0E00               	movlw	high timer0_int_handler@msgtype
  6575  001690  0100               	movlb	0	; () banked
  6576  001692  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6577  001694  0100               	movlb	0	; () banked
  6578  001696  0E9F               	movlw	low timer0_int_handler@msgtype
  6579  001698  0100               	movlb	0	; () banked
  6580  00169A  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6581  00169C  0100               	movlb	0	; () banked
  6582  00169E  0E00               	movlw	high timer0_int_handler@val
  6583  0016A0  0100               	movlb	0	; () banked
  6584  0016A2  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6585  0016A4  0100               	movlb	0	; () banked
  6586  0016A6  0EA1               	movlw	low timer0_int_handler@val
  6587  0016A8  0100               	movlb	0	; () banked
  6588  0016AA  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6589  0016AC  0E02               	movlw	2
  6590  0016AE  EC84  F00D         	call	_FromMainHigh_recvmsg
  6591  0016B2  0100               	movlb	0	; () banked
  6592  0016B4  6F9D               	movwf	timer0_int_handler@length& (0+255),b
  6593  0016B6  0100               	movlb	0	; () banked
  6594  0016B8  6B9E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6595  0016BA  0100               	movlb	0	; () banked
  6596  0016BC  BF9D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6597  0016BE  079E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6601  0016C0  0100               	movlb	0	; () banked
  6602  0016C2  519D               	movf	timer0_int_handler@length& (0+255),w,b
  6603  0016C4  0A02               	xorlw	2
  6604  0016C6  119E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6605  0016C8  A4D8               	btfss	status,2,c
  6606  0016CA  0012               	return	
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6610  0016CC  0E0A               	movlw	10
  6611  0016CE  0100               	movlb	0	; () banked
  6612  0016D0  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6613  0016D2  0100               	movlb	0	; () banked
  6614  0016D4  0E00               	movlw	high timer0_int_handler@val
  6615  0016D6  0100               	movlb	0	; () banked
  6616  0016D8  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6617  0016DA  0100               	movlb	0	; () banked
  6618  0016DC  0EA1               	movlw	low timer0_int_handler@val
  6619  0016DE  0100               	movlb	0	; () banked
  6620  0016E0  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6621  0016E2  0E02               	movlw	2
  6622  0016E4  ECFF  F00D         	call	_ToMainHigh_sendmsg
  6623  0016E8  0012               	return	
  6624  0016EA                     __end_of_timer0_int_handler:
  6625                           	opt stack 0
  6626                           pclatu	equ	0xFFB
  6627                           pclath	equ	0xFFA
  6628                           tblptru	equ	0xFF8
  6629                           tblptrh	equ	0xFF7
  6630                           tblptrl	equ	0xFF6
  6631                           tablat	equ	0xFF5
  6632                           prodh	equ	0xFF4
  6633                           prodl	equ	0xFF3
  6634                           intcon	equ	0xFF2
  6635                           postinc0	equ	0xFEE
  6636                           fsr0h	equ	0xFEA
  6637                           fsr0l	equ	0xFE9
  6638                           wreg	equ	0xFE8
  6639                           indf1	equ	0xFE7
  6640                           fsr1h	equ	0xFE2
  6641                           fsr1l	equ	0xFE1
  6642                           bsr	equ	0xFE0
  6643                           indf2	equ	0xFDF
  6644                           postinc2	equ	0xFDE
  6645                           postdec2	equ	0xFDD
  6646                           fsr2h	equ	0xFDA
  6647                           fsr2l	equ	0xFD9
  6648                           status	equ	0xFD8
  6649                           
  6650 ;; *************** function _WriteTimer0 *****************
  6651 ;; Defined at:
  6652 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  timer0          2    0[BANK0 ] unsigned int 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  timer           2    2[BANK0 ] struct Timers
  6657 ;; Return value:  Size  Location     Type
  6658 ;;		None               void
  6659 ;; Registers used:
  6660 ;;		None
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6666 ;;      Params:         0       2       0       0       0
  6667 ;;      Locals:         0       2       0       0       0
  6668 ;;      Temps:          0       0       0       0       0
  6669 ;;      Totals:         0       4       0       0       0
  6670 ;;Total ram usage:        4 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_timer0_int_handler
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text44
  6680  001D68                     __ptext44:
  6681                           	opt stack 0
  6682  001D68                     _WriteTimer0:
  6683                           	opt stack 18
  6684                           
  6685                           ;incstack = 0
  6686  001D68  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6687  001D6C  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6688  001D70  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6689  001D74  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6690  001D78  0012               	return	
  6691  001D7A                     __end_of_WriteTimer0:
  6692                           	opt stack 0
  6693                           pclatu	equ	0xFFB
  6694                           pclath	equ	0xFFA
  6695                           tblptru	equ	0xFF8
  6696                           tblptrh	equ	0xFF7
  6697                           tblptrl	equ	0xFF6
  6698                           tablat	equ	0xFF5
  6699                           prodh	equ	0xFF4
  6700                           prodl	equ	0xFF3
  6701                           intcon	equ	0xFF2
  6702                           postinc0	equ	0xFEE
  6703                           fsr0h	equ	0xFEA
  6704                           fsr0l	equ	0xFE9
  6705                           wreg	equ	0xFE8
  6706                           indf1	equ	0xFE7
  6707                           fsr1h	equ	0xFE2
  6708                           fsr1l	equ	0xFE1
  6709                           bsr	equ	0xFE0
  6710                           indf2	equ	0xFDF
  6711                           postinc2	equ	0xFDE
  6712                           postdec2	equ	0xFDD
  6713                           fsr2h	equ	0xFDA
  6714                           fsr2l	equ	0xFD9
  6715                           status	equ	0xFD8
  6716                           
  6717 ;; *************** function _i2c_int_handler *****************
  6718 ;; Defined at:
  6719 ;;		line 103 in file "../src/my_i2c.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;		None
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;  msg_type        1   39[BANK0 ] unsigned char 
  6724 ;;  length          1   30[BANK0 ] unsigned char 
  6725 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  6726 ;;  data_read       1   41[BANK0 ] unsigned char 
  6727 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  6728 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  6729 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  6730 ;;  need_data       1   36[BANK0 ] unsigned char 
  6731 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6732 ;;  data_written    1   34[BANK0 ] unsigned char 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;		None               void
  6735 ;; Registers used:
  6736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6742 ;;      Params:         0       0       0       0       0
  6743 ;;      Locals:         0      12       0       0       0
  6744 ;;      Temps:          0       1       0       0       0
  6745 ;;      Totals:         0      13       0       0       0
  6746 ;;Total ram usage:       13 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:    3
  6749 ;; This function calls:
  6750 ;;		_FromMainHigh_recvmsg
  6751 ;;		_ToMainHigh_sendmsg
  6752 ;;		_handle_start
  6753 ;;		_start_i2c_slave_reply
  6754 ;;		i2_blip1
  6755 ;;		i2_blip2
  6756 ;; This function is called by:
  6757 ;;		_InterruptHandlerHigh
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text45
  6762  0000C4                     __ptext45:
  6763                           	opt stack 0
  6764  0000C4                     _i2c_int_handler:
  6765                           	opt stack 16
  6766                           
  6767                           ;my_i2c.c: 106: LATDbits.LD2 = 0;
  6768                           
  6769                           ;incstack = 0
  6770  0000C4  948C               	bcf	3980,2,c	;volatile
  6771                           
  6772                           ;my_i2c.c: 107: LATDbits.LD2 = 1;
  6773  0000C6  848C               	bsf	3980,2,c	;volatile
  6774                           
  6775                           ;my_i2c.c: 109: unsigned char i2c_data;
  6776                           ;my_i2c.c: 110: unsigned char data_read = 0;
  6777  0000C8  0E00               	movlw	0
  6778  0000CA  0100               	movlb	0	; () banked
  6779  0000CC  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6780                           
  6781                           ;my_i2c.c: 111: unsigned char data_written = 0;
  6782  0000CE  0E00               	movlw	0
  6783  0000D0  0100               	movlb	0	; () banked
  6784  0000D2  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6785                           
  6786                           ;my_i2c.c: 112: unsigned char msg_ready = 0;
  6787  0000D4  0E00               	movlw	0
  6788  0000D6  0100               	movlb	0	; () banked
  6789  0000D8  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6790                           
  6791                           ;my_i2c.c: 113: unsigned char msg_to_send = 0;
  6792  0000DA  0E00               	movlw	0
  6793  0000DC  0100               	movlb	0	; () banked
  6794  0000DE  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6795                           
  6796                           ;my_i2c.c: 114: unsigned char overrun_error = 0;
  6797  0000E0  0E00               	movlw	0
  6798  0000E2  0100               	movlb	0	; () banked
  6799  0000E4  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6800                           
  6801                           ;my_i2c.c: 115: unsigned char error_buf[3];
  6802                           ;my_i2c.c: 116: unsigned char need_data = 1;
  6803  0000E6  0E01               	movlw	1
  6804  0000E8  0100               	movlb	0	; () banked
  6805  0000EA  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;my_i2c.c: 118: blip1();
  6809  0000EC  ECED  F00E         	call	i2_blip1	;wreg free
  6810                           
  6811                           ;my_i2c.c: 120: if (SSPCON1bits.SSPOV == 1) {
  6812  0000F0  ACC6               	btfss	4038,6,c	;volatile
  6813  0000F2  D024               	goto	i2l3750
  6814                           
  6815                           ;my_i2c.c: 121: SSPCON1bits.SSPOV = 0;
  6816  0000F4  9CC6               	bcf	4038,6,c	;volatile
  6817                           
  6818                           ;my_i2c.c: 125: ic_ptr->status = 0x5;
  6819  0000F6  0100               	movlb	0	; () banked
  6820  0000F8  EE20 F021          	lfsr	2,33
  6821  0000FC  0100               	movlb	0	; () banked
  6822  0000FE  51C5               	movf	_ic_ptr& (0+255),w,b
  6823  000100  26D9               	addwf	fsr2l,f,c
  6824  000102  0100               	movlb	0	; () banked
  6825  000104  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6826  000106  22DA               	addwfc	fsr2h,f,c
  6827  000108  0E05               	movlw	5
  6828  00010A  6EDF               	movwf	indf2,c
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;my_i2c.c: 126: overrun_error = 1;
  6832  00010C  0E01               	movlw	1
  6833  00010E  0100               	movlb	0	; () banked
  6834  000110  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;my_i2c.c: 127: ic_ptr->error_count++;
  6838  000112  0100               	movlb	0	; () banked
  6839  000114  EE20 F023          	lfsr	2,35
  6840  000118  0100               	movlb	0	; () banked
  6841  00011A  51C5               	movf	_ic_ptr& (0+255),w,b
  6842  00011C  26D9               	addwf	fsr2l,f,c
  6843  00011E  0100               	movlb	0	; () banked
  6844  000120  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6845  000122  22DA               	addwfc	fsr2h,f,c
  6846  000124  2ADF               	incf	indf2,f,c
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;my_i2c.c: 128: ic_ptr->error_code = 0x4;
  6850  000126  0100               	movlb	0	; () banked
  6851  000128  EE20 F022          	lfsr	2,34
  6852  00012C  0100               	movlb	0	; () banked
  6853  00012E  51C5               	movf	_ic_ptr& (0+255),w,b
  6854  000130  26D9               	addwf	fsr2l,f,c
  6855  000132  0100               	movlb	0	; () banked
  6856  000134  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6857  000136  22DA               	addwfc	fsr2h,f,c
  6858  000138  0E04               	movlw	4
  6859  00013A  6EDF               	movwf	indf2,c
  6860  00013C                     i2l3750:
  6861                           
  6862                           ;my_i2c.c: 129: }
  6863                           ;my_i2c.c: 131: if (SSPSTATbits.BF == 1) {
  6864  00013C  A0C7               	btfss	4039,0,c	;volatile
  6865  00013E  D005               	goto	i2l3756
  6866                           
  6867                           ;my_i2c.c: 132: i2c_data = SSPBUF;
  6868  000140  CFC9 F0A5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6869                           
  6870                           ;my_i2c.c: 133: data_read = 1;
  6871  000144  0E01               	movlw	1
  6872  000146  0100               	movlb	0	; () banked
  6873  000148  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6874  00014A                     i2l3756:
  6875                           
  6876                           ;my_i2c.c: 134: }
  6877                           ;my_i2c.c: 136: blip1();
  6878  00014A  ECED  F00E         	call	i2_blip1	;wreg free
  6879                           
  6880                           ;my_i2c.c: 138: if (!overrun_error) {
  6881  00014E  0100               	movlb	0	; () banked
  6882  000150  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6883  000152  D1C6               	goto	i2l3862
  6884  000154  D1AF               	goto	i2l3860
  6885  000156                     i2l295:
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;my_i2c.c: 141: {
  6889                           ;my_i2c.c: 143: if (SSPSTATbits.S == 1) {
  6890  000156  A6C7               	btfss	4039,3,c	;volatile
  6891  000158  D1C3               	goto	i2l3862
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;my_i2c.c: 144: handle_start(data_read);
  6895  00015A  0100               	movlb	0	; () banked
  6896  00015C  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6897  00015E  EC88  F008         	call	_handle_start
  6898                           
  6899                           ;my_i2c.c: 146: if (ic_ptr->status == 0x8) {
  6900  000162  0100               	movlb	0	; () banked
  6901  000164  EE20 F021          	lfsr	2,33
  6902  000168  0100               	movlb	0	; () banked
  6903  00016A  51C5               	movf	_ic_ptr& (0+255),w,b
  6904  00016C  26D9               	addwf	fsr2l,f,c
  6905  00016E  0100               	movlb	0	; () banked
  6906  000170  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6907  000172  22DA               	addwfc	fsr2h,f,c
  6908  000174  0E08               	movlw	8
  6909  000176  62DF               	cpfseq	indf2,c
  6910  000178  D1B3               	goto	i2l3862
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;my_i2c.c: 147: data_read = 0;
  6914  00017A  0E00               	movlw	0
  6915  00017C  0100               	movlb	0	; () banked
  6916  00017E  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6917                           
  6918                           ;my_i2c.c: 148: msg_to_send = 1;
  6919  000180  0E01               	movlw	1
  6920  000182  0100               	movlb	0	; () banked
  6921  000184  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6922  000186  D1AC               	goto	i2l3862
  6923  000188                     i2l299:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;my_i2c.c: 154: {
  6927                           ;my_i2c.c: 157: if (SSPSTATbits.P == 1) {
  6928  000188  A8C7               	btfss	4039,4,c	;volatile
  6929  00018A  D02A               	goto	i2l3778
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;my_i2c.c: 160: ic_ptr->event_count++;
  6933  00018C  0100               	movlb	0	; () banked
  6934  00018E  EE20 F020          	lfsr	2,32
  6935  000192  0100               	movlb	0	; () banked
  6936  000194  51C5               	movf	_ic_ptr& (0+255),w,b
  6937  000196  26D9               	addwf	fsr2l,f,c
  6938  000198  0100               	movlb	0	; () banked
  6939  00019A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6940  00019C  22DA               	addwfc	fsr2h,f,c
  6941  00019E  2ADF               	incf	indf2,f,c
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;my_i2c.c: 161: if (data_read) {
  6945  0001A0  0100               	movlb	0	; () banked
  6946  0001A2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6947  0001A4  B4D8               	btfsc	status,2,c
  6948  0001A6  D17B               	goto	L10
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  6952  0001A8  BAC7               	btfsc	4039,5,c	;volatile
  6953  0001AA  D004               	goto	i2l3776
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;my_i2c.c: 163: msg_ready = 1;
  6957  0001AC  0E01               	movlw	1
  6958  0001AE  0100               	movlb	0	; () banked
  6959  0001B0  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6960                           
  6961                           ;my_i2c.c: 164: } else {
  6962  0001B2  D175               	goto	L10
  6963  0001B4                     i2l3776:
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;my_i2c.c: 165: ic_ptr->error_count++;
  6967  0001B4  0100               	movlb	0	; () banked
  6968  0001B6  EE20 F023          	lfsr	2,35
  6969  0001BA  0100               	movlb	0	; () banked
  6970  0001BC  51C5               	movf	_ic_ptr& (0+255),w,b
  6971  0001BE  26D9               	addwf	fsr2l,f,c
  6972  0001C0  0100               	movlb	0	; () banked
  6973  0001C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6974  0001C4  22DA               	addwfc	fsr2h,f,c
  6975  0001C6  2ADF               	incf	indf2,f,c
  6976                           
  6977                           ;my_i2c.c: 166: ic_ptr->error_code = 0x6;
  6978  0001C8  0100               	movlb	0	; () banked
  6979  0001CA  EE20 F022          	lfsr	2,34
  6980  0001CE  0100               	movlb	0	; () banked
  6981  0001D0  51C5               	movf	_ic_ptr& (0+255),w,b
  6982  0001D2  26D9               	addwf	fsr2l,f,c
  6983  0001D4  0100               	movlb	0	; () banked
  6984  0001D6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6985  0001D8  22DA               	addwfc	fsr2h,f,c
  6986  0001DA  0E06               	movlw	6
  6987  0001DC  6EDF               	movwf	indf2,c
  6988                           
  6989                           ; BSR set to: 0
  6990  0001DE  D15F               	goto	L10
  6991  0001E0                     i2l3778:
  6992                           
  6993                           ; BSR set to: 0
  6994  0001E0  0100               	movlb	0	; () banked
  6995  0001E2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6996  0001E4  B4D8               	btfsc	status,2,c
  6997  0001E6  D17C               	goto	i2l3862
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;my_i2c.c: 171: ic_ptr->event_count++;
  7001  0001E8  0100               	movlb	0	; () banked
  7002  0001EA  EE20 F020          	lfsr	2,32
  7003  0001EE  0100               	movlb	0	; () banked
  7004  0001F0  51C5               	movf	_ic_ptr& (0+255),w,b
  7005  0001F2  26D9               	addwf	fsr2l,f,c
  7006  0001F4  0100               	movlb	0	; () banked
  7007  0001F6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7008  0001F8  22DA               	addwfc	fsr2h,f,c
  7009  0001FA  2ADF               	incf	indf2,f,c
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;my_i2c.c: 172: if (SSPSTATbits.D_A == 0)
  7013  0001FC  BAC7               	btfsc	4039,5,c	;volatile
  7014  0001FE  D02A               	goto	i2l3794
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;my_i2c.c: 173: {
  7018                           ;my_i2c.c: 174: if (SSPSTATbits.R_W == 0)
  7019  000200  B4C7               	btfsc	4039,2,c	;volatile
  7020  000202  D00B               	goto	i2l3788
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;my_i2c.c: 175: {
  7024                           ;my_i2c.c: 176: ic_ptr->status = 0x7;
  7025  000204  0100               	movlb	0	; () banked
  7026  000206  EE20 F021          	lfsr	2,33
  7027  00020A  0100               	movlb	0	; () banked
  7028  00020C  51C5               	movf	_ic_ptr& (0+255),w,b
  7029  00020E  26D9               	addwf	fsr2l,f,c
  7030  000210  0100               	movlb	0	; () banked
  7031  000212  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7032  000214  22DA               	addwfc	fsr2h,f,c
  7033  000216  0E07               	movlw	7
  7034  000218  D079               	goto	L7
  7035  00021A                     i2l3788:
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;my_i2c.c: 178: else
  7039                           ;my_i2c.c: 179: {
  7040                           ;my_i2c.c: 180: ic_ptr->status = 0x8;
  7041  00021A  0100               	movlb	0	; () banked
  7042  00021C  EE20 F021          	lfsr	2,33
  7043  000220  0100               	movlb	0	; () banked
  7044  000222  51C5               	movf	_ic_ptr& (0+255),w,b
  7045  000224  26D9               	addwf	fsr2l,f,c
  7046  000226  0100               	movlb	0	; () banked
  7047  000228  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7048  00022A  22DA               	addwfc	fsr2h,f,c
  7049  00022C  0E08               	movlw	8
  7050  00022E  6EDF               	movwf	indf2,c
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;my_i2c.c: 181: msg_to_send = 1;
  7054  000230  0E01               	movlw	1
  7055  000232  0100               	movlb	0	; () banked
  7056  000234  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;my_i2c.c: 183: data_read = 0;
  7060  000236  0E00               	movlw	0
  7061  000238  0100               	movlb	0	; () banked
  7062  00023A  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7063                           
  7064                           ;my_i2c.c: 184: ic_ptr->outbufind = 0;
  7065  00023C  0100               	movlb	0	; () banked
  7066  00023E  EE20 F01E          	lfsr	2,30
  7067  000242  0100               	movlb	0	; () banked
  7068  000244  51C5               	movf	_ic_ptr& (0+255),w,b
  7069  000246  26D9               	addwf	fsr2l,f,c
  7070  000248  0100               	movlb	0	; () banked
  7071  00024A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7072  00024C  22DA               	addwfc	fsr2h,f,c
  7073  00024E  0E00               	movlw	0
  7074  000250  6EDF               	movwf	indf2,c
  7075                           
  7076                           ;my_i2c.c: 185: goto l;
  7077  000252  D020               	goto	i2l3796
  7078  000254                     i2l3794:
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;my_i2c.c: 188: else
  7082                           ;my_i2c.c: 189: {
  7083                           ;my_i2c.c: 190: ic_ptr->error_count++;
  7084  000254  0100               	movlb	0	; () banked
  7085  000256  EE20 F023          	lfsr	2,35
  7086  00025A  0100               	movlb	0	; () banked
  7087  00025C  51C5               	movf	_ic_ptr& (0+255),w,b
  7088  00025E  26D9               	addwf	fsr2l,f,c
  7089  000260  0100               	movlb	0	; () banked
  7090  000262  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7091  000264  22DA               	addwfc	fsr2h,f,c
  7092  000266  2ADF               	incf	indf2,f,c
  7093                           
  7094                           ;my_i2c.c: 191: ic_ptr->status = 0x5;
  7095  000268  0100               	movlb	0	; () banked
  7096  00026A  EE20 F021          	lfsr	2,33
  7097  00026E  0100               	movlb	0	; () banked
  7098  000270  51C5               	movf	_ic_ptr& (0+255),w,b
  7099  000272  26D9               	addwf	fsr2l,f,c
  7100  000274  0100               	movlb	0	; () banked
  7101  000276  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7102  000278  22DA               	addwfc	fsr2h,f,c
  7103  00027A  0E05               	movlw	5
  7104  00027C  6EDF               	movwf	indf2,c
  7105                           
  7106                           ;my_i2c.c: 192: ic_ptr->error_code = 0x6;
  7107  00027E  0100               	movlb	0	; () banked
  7108  000280  EE20 F022          	lfsr	2,34
  7109  000284  0100               	movlb	0	; () banked
  7110  000286  51C5               	movf	_ic_ptr& (0+255),w,b
  7111  000288  26D9               	addwf	fsr2l,f,c
  7112  00028A  0100               	movlb	0	; () banked
  7113  00028C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7114  00028E  22DA               	addwfc	fsr2h,f,c
  7115  000290  0E06               	movlw	6
  7116  000292  D03C               	goto	L7
  7117  000294                     i2l3796:
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;my_i2c.c: 199: {
  7121                           ;my_i2c.c: 200: if (ic_ptr->outbufind < 14)
  7122  000294  0100               	movlb	0	; () banked
  7123  000296  EE20 F01E          	lfsr	2,30
  7124  00029A  0100               	movlb	0	; () banked
  7125  00029C  51C5               	movf	_ic_ptr& (0+255),w,b
  7126  00029E  26D9               	addwf	fsr2l,f,c
  7127  0002A0  0100               	movlb	0	; () banked
  7128  0002A2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7129  0002A4  22DA               	addwfc	fsr2h,f,c
  7130  0002A6  50DF               	movf	indf2,w,c
  7131  0002A8  0100               	movlb	0	; () banked
  7132  0002AA  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7133  0002AC  0E0E               	movlw	14
  7134  0002AE  0100               	movlb	0	; () banked
  7135  0002B0  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7136  0002B2  B0D8               	btfsc	status,0,c
  7137  0002B4  D0F4               	goto	L10
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 201: {
  7141                           ;my_i2c.c: 202: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7142  0002B6  0100               	movlb	0	; () banked
  7143  0002B8  EE20 F01E          	lfsr	2,30
  7144  0002BC  0100               	movlb	0	; () banked
  7145  0002BE  51C5               	movf	_ic_ptr& (0+255),w,b
  7146  0002C0  26D9               	addwf	fsr2l,f,c
  7147  0002C2  0100               	movlb	0	; () banked
  7148  0002C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7149  0002C6  22DA               	addwfc	fsr2h,f,c
  7150  0002C8  50DF               	movf	indf2,w,c
  7151  0002CA  0100               	movlb	0	; () banked
  7152  0002CC  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7153  0002CE  0100               	movlb	0	; () banked
  7154  0002D0  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7155  0002D2  0D01               	mullw	1
  7156  0002D4  0E10               	movlw	16
  7157  0002D6  26F3               	addwf	prodl,f,c
  7158  0002D8  0E00               	movlw	0
  7159  0002DA  22F4               	addwfc	prodh,f,c
  7160  0002DC  50F3               	movf	prodl,w,c
  7161  0002DE  0100               	movlb	0	; () banked
  7162  0002E0  25C5               	addwf	_ic_ptr& (0+255),w,b
  7163  0002E2  6ED9               	movwf	fsr2l,c
  7164  0002E4  50F4               	movf	prodh,w,c
  7165  0002E6  0100               	movlb	0	; () banked
  7166  0002E8  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7167  0002EA  6EDA               	movwf	fsr2h,c
  7168  0002EC  50DF               	movf	indf2,w,c
  7169  0002EE  6EC9               	movwf	4041,c	;volatile
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 203: ic_ptr->outbufind++;
  7173  0002F0  0100               	movlb	0	; () banked
  7174  0002F2  EE20 F01E          	lfsr	2,30
  7175  0002F6  0100               	movlb	0	; () banked
  7176  0002F8  51C5               	movf	_ic_ptr& (0+255),w,b
  7177  0002FA  26D9               	addwf	fsr2l,f,c
  7178  0002FC  0100               	movlb	0	; () banked
  7179  0002FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7180  000300  22DA               	addwfc	fsr2h,f,c
  7181  000302  2ADF               	incf	indf2,f,c
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;my_i2c.c: 204: data_written = 1;
  7185  000304  0E01               	movlw	1
  7186  000306  0100               	movlb	0	; () banked
  7187  000308  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  7188                           
  7189                           ;my_i2c.c: 205: }
  7190  00030A  D0EA               	goto	i2l3862
  7191  00030C                     L7:
  7192  00030C  6EDF               	movwf	indf2,c
  7193  00030E  D0E8               	goto	i2l3862
  7194  000310                     i2l3806:
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;my_i2c.c: 214: {
  7198                           ;my_i2c.c: 215: blip2();
  7199  000310  ECE9  F00E         	call	i2_blip2	;wreg free
  7200                           
  7201                           ;my_i2c.c: 217: if (SSPSTATbits.P == 1)
  7202  000314  A8C7               	btfss	4039,4,c	;volatile
  7203  000316  D05C               	goto	i2l3830
  7204                           
  7205                           ;my_i2c.c: 218: {
  7206                           ;my_i2c.c: 219: blip2();
  7207  000318  ECE9  F00E         	call	i2_blip2	;wreg free
  7208                           
  7209                           ;my_i2c.c: 222: ic_ptr->event_count++;
  7210  00031C  0100               	movlb	0	; () banked
  7211  00031E  EE20 F020          	lfsr	2,32
  7212  000322  0100               	movlb	0	; () banked
  7213  000324  51C5               	movf	_ic_ptr& (0+255),w,b
  7214  000326  26D9               	addwf	fsr2l,f,c
  7215  000328  0100               	movlb	0	; () banked
  7216  00032A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7217  00032C  22DA               	addwfc	fsr2h,f,c
  7218  00032E  2ADF               	incf	indf2,f,c
  7219                           
  7220                           ; BSR set to: 0
  7221                           ;my_i2c.c: 223: if (data_read)
  7222  000330  0100               	movlb	0	; () banked
  7223  000332  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7224  000334  B4D8               	btfsc	status,2,c
  7225  000336  D048               	goto	i2l3826
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;my_i2c.c: 224: {
  7229                           ;my_i2c.c: 225: if (SSPSTATbits.D_A == 1)
  7230  000338  AAC7               	btfss	4039,5,c	;volatile
  7231  00033A  D025               	goto	i2l3824
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;my_i2c.c: 226: {
  7235                           ;my_i2c.c: 228: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7236  00033C  0100               	movlb	0	; () banked
  7237  00033E  EE20 F00E          	lfsr	2,14
  7238  000342  0100               	movlb	0	; () banked
  7239  000344  51C5               	movf	_ic_ptr& (0+255),w,b
  7240  000346  26D9               	addwf	fsr2l,f,c
  7241  000348  0100               	movlb	0	; () banked
  7242  00034A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7243  00034C  22DA               	addwfc	fsr2h,f,c
  7244  00034E  50DF               	movf	indf2,w,c
  7245  000350  0100               	movlb	0	; () banked
  7246  000352  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7247  000354  0100               	movlb	0	; () banked
  7248  000356  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7249  000358  0D01               	mullw	1
  7250  00035A  50F3               	movf	prodl,w,c
  7251  00035C  0100               	movlb	0	; () banked
  7252  00035E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7253  000360  6ED9               	movwf	fsr2l,c
  7254  000362  50F4               	movf	prodh,w,c
  7255  000364  0100               	movlb	0	; () banked
  7256  000366  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7257  000368  6EDA               	movwf	fsr2h,c
  7258  00036A  0100               	movlb	0	; () banked
  7259  00036C  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;my_i2c.c: 229: ic_ptr->buflen++;
  7263  000370  0100               	movlb	0	; () banked
  7264  000372  EE20 F00E          	lfsr	2,14
  7265  000376  0100               	movlb	0	; () banked
  7266  000378  51C5               	movf	_ic_ptr& (0+255),w,b
  7267  00037A  26D9               	addwf	fsr2l,f,c
  7268  00037C  0100               	movlb	0	; () banked
  7269  00037E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7270  000380  22DA               	addwfc	fsr2h,f,c
  7271  000382  2ADF               	incf	indf2,f,c
  7272  000384  D021               	goto	i2l3826
  7273  000386                     i2l3824:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;my_i2c.c: 232: else
  7277                           ;my_i2c.c: 233: {
  7278                           ;my_i2c.c: 235: ic_ptr->error_count++;
  7279  000386  0100               	movlb	0	; () banked
  7280  000388  EE20 F023          	lfsr	2,35
  7281  00038C  0100               	movlb	0	; () banked
  7282  00038E  51C5               	movf	_ic_ptr& (0+255),w,b
  7283  000390  26D9               	addwf	fsr2l,f,c
  7284  000392  0100               	movlb	0	; () banked
  7285  000394  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7286  000396  22DA               	addwfc	fsr2h,f,c
  7287  000398  2ADF               	incf	indf2,f,c
  7288                           
  7289                           ;my_i2c.c: 236: ic_ptr->error_code = 0x6;
  7290  00039A  0100               	movlb	0	; () banked
  7291  00039C  EE20 F022          	lfsr	2,34
  7292  0003A0  0100               	movlb	0	; () banked
  7293  0003A2  51C5               	movf	_ic_ptr& (0+255),w,b
  7294  0003A4  26D9               	addwf	fsr2l,f,c
  7295  0003A6  0100               	movlb	0	; () banked
  7296  0003A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7297  0003AA  22DA               	addwfc	fsr2h,f,c
  7298  0003AC  0E06               	movlw	6
  7299  0003AE  6EDF               	movwf	indf2,c
  7300                           
  7301                           ;my_i2c.c: 237: ic_ptr->status = 0x5;
  7302  0003B0  0100               	movlb	0	; () banked
  7303  0003B2  EE20 F021          	lfsr	2,33
  7304  0003B6  0100               	movlb	0	; () banked
  7305  0003B8  51C5               	movf	_ic_ptr& (0+255),w,b
  7306  0003BA  26D9               	addwf	fsr2l,f,c
  7307  0003BC  0100               	movlb	0	; () banked
  7308  0003BE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7309  0003C0  22DA               	addwfc	fsr2h,f,c
  7310  0003C2  0E05               	movlw	5
  7311  0003C4  6EDF               	movwf	indf2,c
  7312  0003C6  D06B               	goto	L10
  7313  0003C8                     i2l3826:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;my_i2c.c: 240: else
  7317                           ;my_i2c.c: 241: {
  7318                           ;my_i2c.c: 243: msg_ready = 1;
  7319  0003C8  0E01               	movlw	1
  7320  0003CA  0100               	movlb	0	; () banked
  7321  0003CC  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7322                           
  7323                           ; BSR set to: 0
  7324  0003CE  D067               	goto	L10
  7325  0003D0                     i2l3830:
  7326                           
  7327                           ;my_i2c.c: 247: else if (data_read)
  7328  0003D0  0100               	movlb	0	; () banked
  7329  0003D2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7330  0003D4  B4D8               	btfsc	status,2,c
  7331  0003D6  D084               	goto	i2l3862
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;my_i2c.c: 248: {
  7335                           ;my_i2c.c: 249: blip2();
  7336  0003D8  ECE9  F00E         	call	i2_blip2	;wreg free
  7337                           
  7338                           ;my_i2c.c: 250: ic_ptr->event_count++;
  7339  0003DC  0100               	movlb	0	; () banked
  7340  0003DE  EE20 F020          	lfsr	2,32
  7341  0003E2  0100               	movlb	0	; () banked
  7342  0003E4  51C5               	movf	_ic_ptr& (0+255),w,b
  7343  0003E6  26D9               	addwf	fsr2l,f,c
  7344  0003E8  0100               	movlb	0	; () banked
  7345  0003EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7346  0003EC  22DA               	addwfc	fsr2h,f,c
  7347  0003EE  2ADF               	incf	indf2,f,c
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;my_i2c.c: 251: if (SSP1STATbits.D_A == 1)
  7351  0003F0  AAC7               	btfss	4039,5,c	;volatile
  7352  0003F2  D01E               	goto	i2l322
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;my_i2c.c: 252: {
  7356                           ;my_i2c.c: 254: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7357  0003F4  0100               	movlb	0	; () banked
  7358  0003F6  EE20 F00E          	lfsr	2,14
  7359  0003FA  0100               	movlb	0	; () banked
  7360  0003FC  51C5               	movf	_ic_ptr& (0+255),w,b
  7361  0003FE  26D9               	addwf	fsr2l,f,c
  7362  000400  0100               	movlb	0	; () banked
  7363  000402  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7364  000404  22DA               	addwfc	fsr2h,f,c
  7365  000406  50DF               	movf	indf2,w,c
  7366  000408  0100               	movlb	0	; () banked
  7367  00040A  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7368  00040C  0100               	movlb	0	; () banked
  7369  00040E  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7370  000410  0D01               	mullw	1
  7371  000412  50F3               	movf	prodl,w,c
  7372  000414  0100               	movlb	0	; () banked
  7373  000416  25C5               	addwf	_ic_ptr& (0+255),w,b
  7374  000418  6ED9               	movwf	fsr2l,c
  7375  00041A  50F4               	movf	prodh,w,c
  7376  00041C  0100               	movlb	0	; () banked
  7377  00041E  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7378  000420  6EDA               	movwf	fsr2h,c
  7379  000422  0100               	movlb	0	; () banked
  7380  000424  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;my_i2c.c: 255: ic_ptr->buflen++;
  7384  000428  0100               	movlb	0	; () banked
  7385  00042A  EE20 F00E          	lfsr	2,14
  7386  00042E  D02F               	goto	L8
  7387  000430                     i2l322:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;my_i2c.c: 257: else
  7391                           ;my_i2c.c: 258: {
  7392                           ;my_i2c.c: 259: if (SSPSTATbits.R_W == 1)
  7393  000430  A4C7               	btfss	4039,2,c	;volatile
  7394  000432  D6C0               	goto	i2l3776
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;my_i2c.c: 260: {
  7398                           ;my_i2c.c: 262: ic_ptr->status = 0x8;
  7399  000434  0100               	movlb	0	; () banked
  7400  000436  EE20 F021          	lfsr	2,33
  7401  00043A  0100               	movlb	0	; () banked
  7402  00043C  51C5               	movf	_ic_ptr& (0+255),w,b
  7403  00043E  26D9               	addwf	fsr2l,f,c
  7404  000440  0100               	movlb	0	; () banked
  7405  000442  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7406  000444  22DA               	addwfc	fsr2h,f,c
  7407  000446  0E08               	movlw	8
  7408  000448  6EDF               	movwf	indf2,c
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;my_i2c.c: 263: msg_ready = 1;
  7412  00044A  0E01               	movlw	1
  7413  00044C  0100               	movlb	0	; () banked
  7414  00044E  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;my_i2c.c: 264: msg_to_send = 1;
  7418  000450  0E01               	movlw	1
  7419  000452  0100               	movlb	0	; () banked
  7420  000454  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;my_i2c.c: 266: data_read = 0;
  7424  000456  0E00               	movlw	0
  7425  000458  0100               	movlb	0	; () banked
  7426  00045A  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;my_i2c.c: 267: ic_ptr->outbufind = 0;
  7430  00045C  0100               	movlb	0	; () banked
  7431  00045E  EE20 F01E          	lfsr	2,30
  7432  000462  0100               	movlb	0	; () banked
  7433  000464  51C5               	movf	_ic_ptr& (0+255),w,b
  7434  000466  26D9               	addwf	fsr2l,f,c
  7435  000468  0100               	movlb	0	; () banked
  7436  00046A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7437  00046C  22DA               	addwfc	fsr2h,f,c
  7438  00046E  0E00               	movlw	0
  7439  000470  6EDF               	movwf	indf2,c
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 268: SSPBUF = ic_ptr->outbuffer[0];
  7443  000472  0100               	movlb	0	; () banked
  7444  000474  EE20 F010          	lfsr	2,16
  7445  000478  0100               	movlb	0	; () banked
  7446  00047A  51C5               	movf	_ic_ptr& (0+255),w,b
  7447  00047C  26D9               	addwf	fsr2l,f,c
  7448  00047E  0100               	movlb	0	; () banked
  7449  000480  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7450  000482  22DA               	addwfc	fsr2h,f,c
  7451  000484  50DF               	movf	indf2,w,c
  7452  000486  6EC9               	movwf	4041,c	;volatile
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;my_i2c.c: 269: ic_ptr->outbufind++;
  7456  000488  0100               	movlb	0	; () banked
  7457  00048A  EE20 F01E          	lfsr	2,30
  7458  00048E                     L8:
  7459  00048E  0100               	movlb	0	; () banked
  7460  000490  51C5               	movf	_ic_ptr& (0+255),w,b
  7461  000492  26D9               	addwf	fsr2l,f,c
  7462  000494  0100               	movlb	0	; () banked
  7463  000496  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7464  000498  22DA               	addwfc	fsr2h,f,c
  7465  00049A  2ADF               	incf	indf2,f,c
  7466                           
  7467                           ;my_i2c.c: 271: }
  7468  00049C  D021               	goto	i2l3862
  7469  00049E                     L10:
  7470                           
  7471                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  7472  00049E  0100               	movlb	0	; () banked
  7473  0004A0  EE20 F021          	lfsr	2,33
  7474  0004A4  0100               	movlb	0	; () banked
  7475  0004A6  51C5               	movf	_ic_ptr& (0+255),w,b
  7476  0004A8  26D9               	addwf	fsr2l,f,c
  7477  0004AA  0100               	movlb	0	; () banked
  7478  0004AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7479  0004AE  22DA               	addwfc	fsr2h,f,c
  7480  0004B0  0E05               	movlw	5
  7481  0004B2  D72C               	goto	L7
  7482  0004B4                     i2l3860:
  7483                           
  7484                           ; BSR set to: 0
  7485  0004B4  0100               	movlb	0	; () banked
  7486  0004B6  EE20 F021          	lfsr	2,33
  7487  0004BA  0100               	movlb	0	; () banked
  7488  0004BC  51C5               	movf	_ic_ptr& (0+255),w,b
  7489  0004BE  26D9               	addwf	fsr2l,f,c
  7490  0004C0  0100               	movlb	0	; () banked
  7491  0004C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7492  0004C4  22DA               	addwfc	fsr2h,f,c
  7493  0004C6  50DF               	movf	indf2,w,c
  7494                           
  7495                           ; Switch size 1, requested type "space"
  7496                           ; Number of cases is 4, Range of values is 5 to 8
  7497                           ; switch strategies available:
  7498                           ; Name         Instructions Cycles
  7499                           ; simple_byte           13     7 (average)
  7500                           ;	Chosen strategy is simple_byte
  7501  0004C8  0A05               	xorlw	5	; case 5
  7502  0004CA  B4D8               	btfsc	status,2,c
  7503  0004CC  D644               	goto	i2l295
  7504  0004CE  0A03               	xorlw	3	; case 6
  7505  0004D0  B4D8               	btfsc	status,2,c
  7506  0004D2  D65A               	goto	i2l299
  7507  0004D4  0A01               	xorlw	1	; case 7
  7508  0004D6  B4D8               	btfsc	status,2,c
  7509  0004D8  D71B               	goto	i2l3806
  7510  0004DA  0A0F               	xorlw	15	; case 8
  7511  0004DC  B4D8               	btfsc	status,2,c
  7512  0004DE  D6DA               	goto	i2l3796
  7513  0004E0                     i2l3862:
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;my_i2c.c: 283: }
  7517                           ;my_i2c.c: 285: blip1();
  7518  0004E0  ECED  F00E         	call	i2_blip1	;wreg free
  7519                           
  7520                           ;my_i2c.c: 288: if (data_read || data_written) {
  7521  0004E4  0100               	movlb	0	; () banked
  7522  0004E6  67A9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7523  0004E8  D004               	goto	i2l328
  7524                           
  7525                           ; BSR set to: 0
  7526  0004EA  0100               	movlb	0	; () banked
  7527  0004EC  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7528  0004EE  B4D8               	btfsc	status,2,c
  7529  0004F0  D002               	goto	i2l3870
  7530  0004F2                     i2l328:
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;my_i2c.c: 290: if (SSPCON1bits.CKP == 0) {
  7534  0004F2  A8C6               	btfss	4038,4,c	;volatile
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;my_i2c.c: 291: SSPCON1bits.CKP = 1;
  7538  0004F4  88C6               	bsf	4038,4,c	;volatile
  7539  0004F6                     i2l3870:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;my_i2c.c: 292: }
  7543                           ;my_i2c.c: 293: }
  7544                           ;my_i2c.c: 298: if ((ic_ptr->buflen > 14) && (!msg_ready))
  7545  0004F6  0100               	movlb	0	; () banked
  7546  0004F8  EE20 F00E          	lfsr	2,14
  7547  0004FC  0100               	movlb	0	; () banked
  7548  0004FE  51C5               	movf	_ic_ptr& (0+255),w,b
  7549  000500  26D9               	addwf	fsr2l,f,c
  7550  000502  0100               	movlb	0	; () banked
  7551  000504  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7552  000506  22DA               	addwfc	fsr2h,f,c
  7553  000508  0E0E               	movlw	14
  7554  00050A  64DF               	cpfsgt	indf2,c
  7555  00050C  D023               	goto	i2l3876
  7556                           
  7557                           ; BSR set to: 0
  7558  00050E  0100               	movlb	0	; () banked
  7559  000510  67A8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7560  000512  D020               	goto	i2l3876
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;my_i2c.c: 299: {
  7564                           ;my_i2c.c: 301: ic_ptr->status = 0x5;
  7565  000514  0100               	movlb	0	; () banked
  7566  000516  EE20 F021          	lfsr	2,33
  7567  00051A  0100               	movlb	0	; () banked
  7568  00051C  51C5               	movf	_ic_ptr& (0+255),w,b
  7569  00051E  26D9               	addwf	fsr2l,f,c
  7570  000520  0100               	movlb	0	; () banked
  7571  000522  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7572  000524  22DA               	addwfc	fsr2h,f,c
  7573  000526  0E05               	movlw	5
  7574  000528  6EDF               	movwf	indf2,c
  7575                           
  7576                           ;my_i2c.c: 302: ic_ptr->error_count++;
  7577  00052A  0100               	movlb	0	; () banked
  7578  00052C  EE20 F023          	lfsr	2,35
  7579  000530  0100               	movlb	0	; () banked
  7580  000532  51C5               	movf	_ic_ptr& (0+255),w,b
  7581  000534  26D9               	addwf	fsr2l,f,c
  7582  000536  0100               	movlb	0	; () banked
  7583  000538  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7584  00053A  22DA               	addwfc	fsr2h,f,c
  7585  00053C  2ADF               	incf	indf2,f,c
  7586                           
  7587                           ;my_i2c.c: 303: ic_ptr->error_code = 0x7;
  7588  00053E  0100               	movlb	0	; () banked
  7589  000540  EE20 F022          	lfsr	2,34
  7590  000544  0100               	movlb	0	; () banked
  7591  000546  51C5               	movf	_ic_ptr& (0+255),w,b
  7592  000548  26D9               	addwf	fsr2l,f,c
  7593  00054A  0100               	movlb	0	; () banked
  7594  00054C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7595  00054E  22DA               	addwfc	fsr2h,f,c
  7596  000550  0E07               	movlw	7
  7597  000552  6EDF               	movwf	indf2,c
  7598  000554                     i2l3876:
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;my_i2c.c: 304: }
  7602                           ;my_i2c.c: 306: if (msg_ready)
  7603  000554  0100               	movlb	0	; () banked
  7604  000556  51A8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7605  000558  B4D8               	btfsc	status,2,c
  7606  00055A  D032               	goto	i2l3884
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;my_i2c.c: 307: {
  7610                           ;my_i2c.c: 308: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7611  00055C  0100               	movlb	0	; () banked
  7612  00055E  EE20 F020          	lfsr	2,32
  7613  000562  0100               	movlb	0	; () banked
  7614  000564  51C5               	movf	_ic_ptr& (0+255),w,b
  7615  000566  26D9               	addwf	fsr2l,f,c
  7616  000568  0100               	movlb	0	; () banked
  7617  00056A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7618  00056C  22DA               	addwfc	fsr2h,f,c
  7619  00056E  0100               	movlb	0	; () banked
  7620  000570  EE10 F00E          	lfsr	1,14
  7621  000574  0100               	movlb	0	; () banked
  7622  000576  51C5               	movf	_ic_ptr& (0+255),w,b
  7623  000578  26E1               	addwf	fsr1l,f,c
  7624  00057A  0100               	movlb	0	; () banked
  7625  00057C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7626  00057E  22E2               	addwfc	fsr1h,f,c
  7627  000580  50E7               	movf	indf1,w,c
  7628  000582  0100               	movlb	0	; () banked
  7629  000584  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7630  000586  0100               	movlb	0	; () banked
  7631  000588  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7632  00058A  0D01               	mullw	1
  7633  00058C  50F3               	movf	prodl,w,c
  7634  00058E  0100               	movlb	0	; () banked
  7635  000590  25C5               	addwf	_ic_ptr& (0+255),w,b
  7636  000592  6EE1               	movwf	fsr1l,c
  7637  000594  50F4               	movf	prodh,w,c
  7638  000596  0100               	movlb	0	; () banked
  7639  000598  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7640  00059A  6EE2               	movwf	fsr1h,c
  7641  00059C  CFDF FFE7          	movff	indf2,indf1
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;my_i2c.c: 309: ToMainHigh_sendmsg(14, 40, (void *) ic_ptr->buffer);
  7645  0005A0  0E28               	movlw	40
  7646  0005A2  0100               	movlb	0	; () banked
  7647  0005A4  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7648  0005A6  0100               	movlb	0	; () banked
  7649  0005A8  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7650  0005AC  0100               	movlb	0	; () banked
  7651  0005AE  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7652  0005B2  0E0E               	movlw	14
  7653  0005B4  ECFF  F00D         	call	_ToMainHigh_sendmsg
  7654                           
  7655                           ;my_i2c.c: 310: ic_ptr->buflen = 0;
  7656  0005B8  0100               	movlb	0	; () banked
  7657  0005BA  EE20 F00E          	lfsr	2,14
  7658  0005BE  D041               	goto	L9
  7659  0005C0                     i2l3884:
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;my_i2c.c: 312: else if (ic_ptr->error_count >= 1)
  7663  0005C0  0100               	movlb	0	; () banked
  7664  0005C2  EE20 F023          	lfsr	2,35
  7665  0005C6  0100               	movlb	0	; () banked
  7666  0005C8  51C5               	movf	_ic_ptr& (0+255),w,b
  7667  0005CA  26D9               	addwf	fsr2l,f,c
  7668  0005CC  0100               	movlb	0	; () banked
  7669  0005CE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7670  0005D0  22DA               	addwfc	fsr2h,f,c
  7671  0005D2  50DF               	movf	indf2,w,c
  7672  0005D4  B4D8               	btfsc	status,2,c
  7673  0005D6  D03D               	goto	i2l3892
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;my_i2c.c: 313: {
  7677                           ;my_i2c.c: 314: error_buf[0] = ic_ptr->error_count;
  7678  0005D8  0100               	movlb	0	; () banked
  7679  0005DA  EE20 F023          	lfsr	2,35
  7680  0005DE  0100               	movlb	0	; () banked
  7681  0005E0  51C5               	movf	_ic_ptr& (0+255),w,b
  7682  0005E2  26D9               	addwf	fsr2l,f,c
  7683  0005E4  0100               	movlb	0	; () banked
  7684  0005E6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7685  0005E8  22DA               	addwfc	fsr2h,f,c
  7686  0005EA  50DF               	movf	indf2,w,c
  7687  0005EC  0100               	movlb	0	; () banked
  7688  0005EE  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  7689                           
  7690                           ;my_i2c.c: 315: error_buf[1] = ic_ptr->error_code;
  7691  0005F0  0100               	movlb	0	; () banked
  7692  0005F2  EE20 F022          	lfsr	2,34
  7693  0005F6  0100               	movlb	0	; () banked
  7694  0005F8  51C5               	movf	_ic_ptr& (0+255),w,b
  7695  0005FA  26D9               	addwf	fsr2l,f,c
  7696  0005FC  0100               	movlb	0	; () banked
  7697  0005FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7698  000600  22DA               	addwfc	fsr2h,f,c
  7699  000602  50DF               	movf	indf2,w,c
  7700  000604  0100               	movlb	0	; () banked
  7701  000606  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7702                           
  7703                           ;my_i2c.c: 316: error_buf[2] = ic_ptr->event_count;
  7704  000608  0100               	movlb	0	; () banked
  7705  00060A  EE20 F020          	lfsr	2,32
  7706  00060E  0100               	movlb	0	; () banked
  7707  000610  51C5               	movf	_ic_ptr& (0+255),w,b
  7708  000612  26D9               	addwf	fsr2l,f,c
  7709  000614  0100               	movlb	0	; () banked
  7710  000616  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7711  000618  22DA               	addwfc	fsr2h,f,c
  7712  00061A  50DF               	movf	indf2,w,c
  7713  00061C  0100               	movlb	0	; () banked
  7714  00061E  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;my_i2c.c: 317: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7718  000620  0E29               	movlw	41
  7719  000622  0100               	movlb	0	; () banked
  7720  000624  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7721  000626  0100               	movlb	0	; () banked
  7722  000628  0E00               	movlw	high i2c_int_handler@error_buf
  7723  00062A  0100               	movlb	0	; () banked
  7724  00062C  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7725  00062E  0100               	movlb	0	; () banked
  7726  000630  0E9F               	movlw	low i2c_int_handler@error_buf
  7727  000632  0100               	movlb	0	; () banked
  7728  000634  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7729  000636  0E03               	movlw	3
  7730  000638  ECFF  F00D         	call	_ToMainHigh_sendmsg
  7731                           
  7732                           ;my_i2c.c: 318: ic_ptr->error_count = 0;
  7733  00063C  0100               	movlb	0	; () banked
  7734  00063E  EE20 F023          	lfsr	2,35
  7735  000642                     L9:
  7736  000642  0100               	movlb	0	; () banked
  7737  000644  51C5               	movf	_ic_ptr& (0+255),w,b
  7738  000646  26D9               	addwf	fsr2l,f,c
  7739  000648  0100               	movlb	0	; () banked
  7740  00064A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7741  00064C  22DA               	addwfc	fsr2h,f,c
  7742  00064E  0E00               	movlw	0
  7743  000650  6EDF               	movwf	indf2,c
  7744  000652                     i2l3892:
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;my_i2c.c: 319: }
  7748                           ;my_i2c.c: 320: if (msg_to_send) {
  7749  000652  0100               	movlb	0	; () banked
  7750  000654  51A6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7751  000656  B4D8               	btfsc	status,2,c
  7752  000658  D01F               	goto	i2l3900
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;my_i2c.c: 322: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  7756  00065A  0E10               	movlw	16
  7757  00065C  0100               	movlb	0	; () banked
  7758  00065E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7759  000660  0100               	movlb	0	; () banked
  7760  000662  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7761  000664  0E00               	movlw	0
  7762  000666  0100               	movlb	0	; () banked
  7763  000668  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7764  00066A  0100               	movlb	0	; () banked
  7765  00066C  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7766  00066E  0E0E               	movlw	14
  7767  000670  EC92  F007         	call	_start_i2c_slave_reply
  7768                           
  7769                           ;my_i2c.c: 324: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7770  000674  0E2A               	movlw	42
  7771  000676  0100               	movlb	0	; () banked
  7772  000678  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7773  00067A  0100               	movlb	0	; () banked
  7774  00067C  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7775  000680  0100               	movlb	0	; () banked
  7776  000682  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7777  000686  0E00               	movlw	0
  7778  000688  ECFF  F00D         	call	_ToMainHigh_sendmsg
  7779                           
  7780                           ;my_i2c.c: 325: need_data = 1;
  7781  00068C  0E01               	movlw	1
  7782  00068E  0100               	movlb	0	; () banked
  7783  000690  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;my_i2c.c: 326: msg_to_send = 0;
  7787  000692  0E00               	movlw	0
  7788  000694  0100               	movlb	0	; () banked
  7789  000696  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7790  000698                     i2l3900:
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;my_i2c.c: 327: }
  7794                           ;my_i2c.c: 329: blip1();
  7795  000698  ECED  F00E         	call	i2_blip1	;wreg free
  7796                           
  7797                           ;my_i2c.c: 331: if(need_data)
  7798  00069C  0100               	movlb	0	; () banked
  7799  00069E  51A4               	movf	i2c_int_handler@need_data& (0+255),w,b
  7800  0006A0  B4D8               	btfsc	status,2,c
  7801  0006A2  D01A               	goto	i2l3912
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;my_i2c.c: 332: {
  7805                           ;my_i2c.c: 333: unsigned char msg_type;
  7806                           ;my_i2c.c: 334: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  7807  0006A4  0100               	movlb	0	; () banked
  7808  0006A6  0E00               	movlw	high i2c_int_handler@msg_type
  7809  0006A8  0100               	movlb	0	; () banked
  7810  0006AA  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7811  0006AC  0100               	movlb	0	; () banked
  7812  0006AE  0EA7               	movlw	low i2c_int_handler@msg_type
  7813  0006B0  0100               	movlb	0	; () banked
  7814  0006B2  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7815  0006B4  0E10               	movlw	16
  7816  0006B6  0100               	movlb	0	; () banked
  7817  0006B8  25C5               	addwf	_ic_ptr& (0+255),w,b
  7818  0006BA  0100               	movlb	0	; () banked
  7819  0006BC  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7820  0006BE  0E00               	movlw	0
  7821  0006C0  0100               	movlb	0	; () banked
  7822  0006C2  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7823  0006C4  0100               	movlb	0	; () banked
  7824  0006C6  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7825  0006C8  0E0E               	movlw	14
  7826  0006CA  EC84  F00D         	call	_FromMainHigh_recvmsg
  7827  0006CE  0100               	movlb	0	; () banked
  7828  0006D0  6F9E               	movwf	i2c_int_handler@length& (0+255),b
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;my_i2c.c: 343: else
  7832                           ;my_i2c.c: 344: {
  7833                           ;my_i2c.c: 345: need_data = 0;
  7834                           
  7835                           ; BSR set to: 0
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;my_i2c.c: 340: {
  7839                           ;my_i2c.c: 342: }
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;my_i2c.c: 339: else if( length < 0 )
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;my_i2c.c: 336: {
  7846                           ;my_i2c.c: 338: }
  7847                           
  7848                           ;my_i2c.c: 335: if( length == -4 )
  7849  0006D2  0E00               	movlw	0
  7850  0006D4  0100               	movlb	0	; () banked
  7851  0006D6  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7852  0006D8                     i2l3912:
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;my_i2c.c: 346: }
  7856                           ;my_i2c.c: 347: }
  7857                           ;my_i2c.c: 349: blip1();
  7858  0006D8  ECED  F00E         	call	i2_blip1	;wreg free
  7859                           
  7860                           ;my_i2c.c: 350: LATDbits.LD2 = 1;
  7861  0006DC  848C               	bsf	3980,2,c	;volatile
  7862                           
  7863                           ;my_i2c.c: 351: LATDbits.LD2 = 0;
  7864  0006DE  948C               	bcf	3980,2,c	;volatile
  7865  0006E0  0012               	return	
  7866  0006E2                     __end_of_i2c_int_handler:
  7867                           	opt stack 0
  7868                           pclatu	equ	0xFFB
  7869                           pclath	equ	0xFFA
  7870                           tblptru	equ	0xFF8
  7871                           tblptrh	equ	0xFF7
  7872                           tblptrl	equ	0xFF6
  7873                           tablat	equ	0xFF5
  7874                           prodh	equ	0xFF4
  7875                           prodl	equ	0xFF3
  7876                           intcon	equ	0xFF2
  7877                           postinc0	equ	0xFEE
  7878                           fsr0h	equ	0xFEA
  7879                           fsr0l	equ	0xFE9
  7880                           wreg	equ	0xFE8
  7881                           indf1	equ	0xFE7
  7882                           fsr1h	equ	0xFE2
  7883                           fsr1l	equ	0xFE1
  7884                           bsr	equ	0xFE0
  7885                           indf2	equ	0xFDF
  7886                           postinc2	equ	0xFDE
  7887                           postdec2	equ	0xFDD
  7888                           fsr2h	equ	0xFDA
  7889                           fsr2l	equ	0xFD9
  7890                           status	equ	0xFD8
  7891                           
  7892 ;; *************** function i2_blip2 *****************
  7893 ;; Defined at:
  7894 ;;		line 25 in file "../src/debug.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;		None
  7899 ;; Return value:  Size  Location     Type
  7900 ;;		None               void
  7901 ;; Registers used:
  7902 ;;		None
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7908 ;;      Params:         0       0       0       0       0
  7909 ;;      Locals:         0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0
  7911 ;;      Totals:         0       0       0       0       0
  7912 ;;Total ram usage:        0 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_i2c_int_handler
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text46
  7922  001DD2                     __ptext46:
  7923                           	opt stack 0
  7924  001DD2                     i2_blip2:
  7925                           	opt stack 18
  7926                           
  7927                           ;debug.c: 27: LATDbits.LD5 = 0;
  7928                           
  7929                           ;incstack = 0
  7930  001DD2  9A8C               	bcf	3980,5,c	;volatile
  7931                           
  7932                           ;debug.c: 28: LATDbits.LD5 = 1;
  7933  001DD4  8A8C               	bsf	3980,5,c	;volatile
  7934                           
  7935                           ;debug.c: 29: LATDbits.LD5 = 0;
  7936  001DD6  9A8C               	bcf	3980,5,c	;volatile
  7937  001DD8  0012               	return	
  7938  001DDA                     __end_ofi2_blip2:
  7939                           	opt stack 0
  7940                           pclatu	equ	0xFFB
  7941                           pclath	equ	0xFFA
  7942                           tblptru	equ	0xFF8
  7943                           tblptrh	equ	0xFF7
  7944                           tblptrl	equ	0xFF6
  7945                           tablat	equ	0xFF5
  7946                           prodh	equ	0xFF4
  7947                           prodl	equ	0xFF3
  7948                           intcon	equ	0xFF2
  7949                           postinc0	equ	0xFEE
  7950                           fsr0h	equ	0xFEA
  7951                           fsr0l	equ	0xFE9
  7952                           wreg	equ	0xFE8
  7953                           indf1	equ	0xFE7
  7954                           fsr1h	equ	0xFE2
  7955                           fsr1l	equ	0xFE1
  7956                           bsr	equ	0xFE0
  7957                           indf2	equ	0xFDF
  7958                           postinc2	equ	0xFDE
  7959                           postdec2	equ	0xFDD
  7960                           fsr2h	equ	0xFDA
  7961                           fsr2l	equ	0xFD9
  7962                           status	equ	0xFD8
  7963                           
  7964 ;; *************** function i2_blip1 *****************
  7965 ;; Defined at:
  7966 ;;		line 18 in file "../src/debug.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;		None
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;		None               void
  7973 ;; Registers used:
  7974 ;;		None
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7980 ;;      Params:         0       0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0
  7982 ;;      Temps:          0       0       0       0       0
  7983 ;;      Totals:         0       0       0       0       0
  7984 ;;Total ram usage:        0 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_i2c_int_handler
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text47
  7994  001DDA                     __ptext47:
  7995                           	opt stack 0
  7996  001DDA                     i2_blip1:
  7997                           	opt stack 18
  7998                           
  7999                           ;debug.c: 20: LATDbits.LD4 = 0;
  8000                           
  8001                           ;incstack = 0
  8002  001DDA  988C               	bcf	3980,4,c	;volatile
  8003                           
  8004                           ;debug.c: 21: LATDbits.LD4 = 1;
  8005  001DDC  888C               	bsf	3980,4,c	;volatile
  8006                           
  8007                           ;debug.c: 22: LATDbits.LD4 = 0;
  8008  001DDE  988C               	bcf	3980,4,c	;volatile
  8009  001DE0  0012               	return	
  8010  001DE2                     __end_ofi2_blip1:
  8011                           	opt stack 0
  8012                           pclatu	equ	0xFFB
  8013                           pclath	equ	0xFFA
  8014                           tblptru	equ	0xFF8
  8015                           tblptrh	equ	0xFF7
  8016                           tblptrl	equ	0xFF6
  8017                           tablat	equ	0xFF5
  8018                           prodh	equ	0xFF4
  8019                           prodl	equ	0xFF3
  8020                           intcon	equ	0xFF2
  8021                           postinc0	equ	0xFEE
  8022                           fsr0h	equ	0xFEA
  8023                           fsr0l	equ	0xFE9
  8024                           wreg	equ	0xFE8
  8025                           indf1	equ	0xFE7
  8026                           fsr1h	equ	0xFE2
  8027                           fsr1l	equ	0xFE1
  8028                           bsr	equ	0xFE0
  8029                           indf2	equ	0xFDF
  8030                           postinc2	equ	0xFDE
  8031                           postdec2	equ	0xFDD
  8032                           fsr2h	equ	0xFDA
  8033                           fsr2l	equ	0xFD9
  8034                           status	equ	0xFD8
  8035                           
  8036 ;; *************** function _start_i2c_slave_reply *****************
  8037 ;; Defined at:
  8038 ;;		line 54 in file "../src/my_i2c.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  length          1    wreg     unsigned char 
  8041 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8042 ;;		 -> NULL(0), main@ic(38), 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  length          1    4[BANK0 ] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;		None               void
  8047 ;; Registers used:
  8048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8054 ;;      Params:         0       2       0       0       0
  8055 ;;      Locals:         0       1       0       0       0
  8056 ;;      Temps:          0       2       0       0       0
  8057 ;;      Totals:         0       5       0       0       0
  8058 ;;Total ram usage:        5 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		_i2c_int_handler
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           	psect	text48
  8068  000F24                     __ptext48:
  8069                           	opt stack 0
  8070  000F24                     _start_i2c_slave_reply:
  8071                           	opt stack 18
  8072                           
  8073                           ;incstack = 0
  8074                           ;start_i2c_slave_reply@length stored from wreg
  8075  000F24  0100               	movlb	0	; () banked
  8076  000F26  6F84               	movwf	start_i2c_slave_reply@length& (0+255),b
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8080  000F28  0100               	movlb	0	; () banked
  8081  000F2A  EE20 F01F          	lfsr	2,31
  8082  000F2E  0100               	movlb	0	; () banked
  8083  000F30  51C5               	movf	_ic_ptr& (0+255),w,b
  8084  000F32  26D9               	addwf	fsr2l,f,c
  8085  000F34  0100               	movlb	0	; () banked
  8086  000F36  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8087  000F38  22DA               	addwfc	fsr2h,f,c
  8088  000F3A  0E00               	movlw	0
  8089  000F3C  6EDF               	movwf	indf2,c
  8090  000F3E  D03E               	goto	i2l2730
  8091  000F40                     i2l2726:
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8095  000F40  0100               	movlb	0	; () banked
  8096  000F42  EE20 F01F          	lfsr	2,31
  8097  000F46  0100               	movlb	0	; () banked
  8098  000F48  51C5               	movf	_ic_ptr& (0+255),w,b
  8099  000F4A  26D9               	addwf	fsr2l,f,c
  8100  000F4C  0100               	movlb	0	; () banked
  8101  000F4E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8102  000F50  22DA               	addwfc	fsr2h,f,c
  8103  000F52  50DF               	movf	indf2,w,c
  8104  000F54  0100               	movlb	0	; () banked
  8105  000F56  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8106  000F58  0100               	movlb	0	; () banked
  8107  000F5A  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8108  000F5C  0D01               	mullw	1
  8109  000F5E  50F3               	movf	prodl,w,c
  8110  000F60  0100               	movlb	0	; () banked
  8111  000F62  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  8112  000F64  6ED9               	movwf	fsr2l,c
  8113  000F66  50F4               	movf	prodh,w,c
  8114  000F68  0100               	movlb	0	; () banked
  8115  000F6A  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  8116  000F6C  6EDA               	movwf	fsr2h,c
  8117  000F6E  0100               	movlb	0	; () banked
  8118  000F70  EE10 F01F          	lfsr	1,31
  8119  000F74  0100               	movlb	0	; () banked
  8120  000F76  51C5               	movf	_ic_ptr& (0+255),w,b
  8121  000F78  26E1               	addwf	fsr1l,f,c
  8122  000F7A  0100               	movlb	0	; () banked
  8123  000F7C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8124  000F7E  22E2               	addwfc	fsr1h,f,c
  8125  000F80  50E7               	movf	indf1,w,c
  8126  000F82  0100               	movlb	0	; () banked
  8127  000F84  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8128  000F86  0100               	movlb	0	; () banked
  8129  000F88  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8130  000F8A  0D01               	mullw	1
  8131  000F8C  0E10               	movlw	16
  8132  000F8E  26F3               	addwf	prodl,f,c
  8133  000F90  0E00               	movlw	0
  8134  000F92  22F4               	addwfc	prodh,f,c
  8135  000F94  50F3               	movf	prodl,w,c
  8136  000F96  0100               	movlb	0	; () banked
  8137  000F98  25C5               	addwf	_ic_ptr& (0+255),w,b
  8138  000F9A  6EE1               	movwf	fsr1l,c
  8139  000F9C  50F4               	movf	prodh,w,c
  8140  000F9E  0100               	movlb	0	; () banked
  8141  000FA0  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8142  000FA2  6EE2               	movwf	fsr1h,c
  8143  000FA4  CFDF FFE7          	movff	indf2,indf1
  8144                           
  8145                           ; BSR set to: 0
  8146  000FA8  0100               	movlb	0	; () banked
  8147  000FAA  EE20 F01F          	lfsr	2,31
  8148  000FAE  0100               	movlb	0	; () banked
  8149  000FB0  51C5               	movf	_ic_ptr& (0+255),w,b
  8150  000FB2  26D9               	addwf	fsr2l,f,c
  8151  000FB4  0100               	movlb	0	; () banked
  8152  000FB6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8153  000FB8  22DA               	addwfc	fsr2h,f,c
  8154  000FBA  2ADF               	incf	indf2,f,c
  8155  000FBC                     i2l2730:
  8156                           
  8157                           ; BSR set to: 0
  8158  000FBC  0100               	movlb	0	; () banked
  8159  000FBE  EE20 F01F          	lfsr	2,31
  8160  000FC2  0100               	movlb	0	; () banked
  8161  000FC4  51C5               	movf	_ic_ptr& (0+255),w,b
  8162  000FC6  26D9               	addwf	fsr2l,f,c
  8163  000FC8  0100               	movlb	0	; () banked
  8164  000FCA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8165  000FCC  22DA               	addwfc	fsr2h,f,c
  8166  000FCE  50DF               	movf	indf2,w,c
  8167  000FD0  0100               	movlb	0	; () banked
  8168  000FD2  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8169  000FD4  0100               	movlb	0	; () banked
  8170  000FD6  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8171  000FD8  0100               	movlb	0	; () banked
  8172  000FDA  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8173  000FDC  A0D8               	btfss	status,0,c
  8174  000FDE  D7B0               	goto	i2l2726
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;my_i2c.c: 58: }
  8178                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  8179                           
  8180                           ; BSR set to: 0
  8181  000FE0  0100               	movlb	0	; () banked
  8182  000FE2  EE20 F01F          	lfsr	2,31
  8183  000FE6  0100               	movlb	0	; () banked
  8184  000FE8  51C5               	movf	_ic_ptr& (0+255),w,b
  8185  000FEA  26D9               	addwf	fsr2l,f,c
  8186  000FEC  0100               	movlb	0	; () banked
  8187  000FEE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8188  000FF0  22DA               	addwfc	fsr2h,f,c
  8189  000FF2  0100               	movlb	0	; () banked
  8190  000FF4  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8191                           
  8192                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  8193  000FF8  0100               	movlb	0	; () banked
  8194  000FFA  EE20 F01E          	lfsr	2,30
  8195  000FFE  0100               	movlb	0	; () banked
  8196  001000  51C5               	movf	_ic_ptr& (0+255),w,b
  8197  001002  26D9               	addwf	fsr2l,f,c
  8198  001004  0100               	movlb	0	; () banked
  8199  001006  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8200  001008  22DA               	addwfc	fsr2h,f,c
  8201  00100A  0E01               	movlw	1
  8202  00100C  6EDF               	movwf	indf2,c
  8203                           
  8204                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  8205  00100E  0100               	movlb	0	; () banked
  8206  001010  EE20 F010          	lfsr	2,16
  8207  001014  0100               	movlb	0	; () banked
  8208  001016  51C5               	movf	_ic_ptr& (0+255),w,b
  8209  001018  26D9               	addwf	fsr2l,f,c
  8210  00101A  0100               	movlb	0	; () banked
  8211  00101C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8212  00101E  22DA               	addwfc	fsr2h,f,c
  8213  001020  50DF               	movf	indf2,w,c
  8214  001022  6EC9               	movwf	4041,c	;volatile
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  8218  001024  88C6               	bsf	4038,4,c	;volatile
  8219                           
  8220                           ; BSR set to: 0
  8221  001026  0012               	return	
  8222  001028                     __end_of_start_i2c_slave_reply:
  8223                           	opt stack 0
  8224                           pclatu	equ	0xFFB
  8225                           pclath	equ	0xFFA
  8226                           tblptru	equ	0xFF8
  8227                           tblptrh	equ	0xFF7
  8228                           tblptrl	equ	0xFF6
  8229                           tablat	equ	0xFF5
  8230                           prodh	equ	0xFF4
  8231                           prodl	equ	0xFF3
  8232                           intcon	equ	0xFF2
  8233                           postinc0	equ	0xFEE
  8234                           fsr0h	equ	0xFEA
  8235                           fsr0l	equ	0xFE9
  8236                           wreg	equ	0xFE8
  8237                           indf1	equ	0xFE7
  8238                           fsr1h	equ	0xFE2
  8239                           fsr1l	equ	0xFE1
  8240                           bsr	equ	0xFE0
  8241                           indf2	equ	0xFDF
  8242                           postinc2	equ	0xFDE
  8243                           postdec2	equ	0xFDD
  8244                           fsr2h	equ	0xFDA
  8245                           fsr2l	equ	0xFD9
  8246                           status	equ	0xFD8
  8247                           
  8248 ;; *************** function _handle_start *****************
  8249 ;; Defined at:
  8250 ;;		line 72 in file "../src/my_i2c.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  data_read       1    wreg     unsigned char 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  data_read       1    0[BANK0 ] unsigned char 
  8255 ;; Return value:  Size  Location     Type
  8256 ;;		None               void
  8257 ;; Registers used:
  8258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8264 ;;      Params:         0       0       0       0       0
  8265 ;;      Locals:         0       1       0       0       0
  8266 ;;      Temps:          0       0       0       0       0
  8267 ;;      Totals:         0       1       0       0       0
  8268 ;;Total ram usage:        1 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; This function calls:
  8271 ;;		Nothing
  8272 ;; This function is called by:
  8273 ;;		_i2c_int_handler
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text49
  8278  001110                     __ptext49:
  8279                           	opt stack 0
  8280  001110                     _handle_start:
  8281                           	opt stack 18
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;incstack = 0
  8285                           ;handle_start@data_read stored from wreg
  8286  001110  0100               	movlb	0	; () banked
  8287  001112  6F80               	movwf	handle_start@data_read& (0+255),b
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8291  001114  0100               	movlb	0	; () banked
  8292  001116  EE20 F020          	lfsr	2,32
  8293  00111A  0100               	movlb	0	; () banked
  8294  00111C  51C5               	movf	_ic_ptr& (0+255),w,b
  8295  00111E  26D9               	addwf	fsr2l,f,c
  8296  001120  0100               	movlb	0	; () banked
  8297  001122  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8298  001124  22DA               	addwfc	fsr2h,f,c
  8299  001126  0E01               	movlw	1
  8300  001128  6EDF               	movwf	indf2,c
  8301                           
  8302                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8303  00112A  0100               	movlb	0	; () banked
  8304  00112C  EE20 F00E          	lfsr	2,14
  8305  001130  0100               	movlb	0	; () banked
  8306  001132  51C5               	movf	_ic_ptr& (0+255),w,b
  8307  001134  26D9               	addwf	fsr2l,f,c
  8308  001136  0100               	movlb	0	; () banked
  8309  001138  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8310  00113A  22DA               	addwfc	fsr2h,f,c
  8311  00113C  0E00               	movlw	0
  8312  00113E  6EDF               	movwf	indf2,c
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;my_i2c.c: 76: if (data_read) {
  8316  001140  0100               	movlb	0	; () banked
  8317  001142  5180               	movf	handle_start@data_read& (0+255),w,b
  8318  001144  B4D8               	btfsc	status,2,c
  8319  001146  D03D               	goto	i2l2748
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8323  001148  AAC7               	btfss	4039,5,c	;volatile
  8324  00114A  D021               	goto	i2l283
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8328  00114C  0100               	movlb	0	; () banked
  8329  00114E  EE20 F021          	lfsr	2,33
  8330  001152  0100               	movlb	0	; () banked
  8331  001154  51C5               	movf	_ic_ptr& (0+255),w,b
  8332  001156  26D9               	addwf	fsr2l,f,c
  8333  001158  0100               	movlb	0	; () banked
  8334  00115A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8335  00115C  22DA               	addwfc	fsr2h,f,c
  8336  00115E  0E05               	movlw	5
  8337  001160  6EDF               	movwf	indf2,c
  8338                           
  8339                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8340  001162  0100               	movlb	0	; () banked
  8341  001164  EE20 F023          	lfsr	2,35
  8342  001168  0100               	movlb	0	; () banked
  8343  00116A  51C5               	movf	_ic_ptr& (0+255),w,b
  8344  00116C  26D9               	addwf	fsr2l,f,c
  8345  00116E  0100               	movlb	0	; () banked
  8346  001170  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8347  001172  22DA               	addwfc	fsr2h,f,c
  8348  001174  2ADF               	incf	indf2,f,c
  8349                           
  8350                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8351  001176  0100               	movlb	0	; () banked
  8352  001178  EE20 F022          	lfsr	2,34
  8353  00117C  0100               	movlb	0	; () banked
  8354  00117E  51C5               	movf	_ic_ptr& (0+255),w,b
  8355  001180  26D9               	addwf	fsr2l,f,c
  8356  001182  0100               	movlb	0	; () banked
  8357  001184  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8358  001186  22DA               	addwfc	fsr2h,f,c
  8359  001188  0E05               	movlw	5
  8360  00118A  6EDF               	movwf	indf2,c
  8361                           
  8362                           ;my_i2c.c: 83: } else {
  8363  00118C  0012               	return	
  8364  00118E                     i2l283:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8368  00118E  A4C7               	btfss	4039,2,c	;volatile
  8369  001190  D00C               	goto	i2l2746
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8373  001192  0100               	movlb	0	; () banked
  8374  001194  EE20 F021          	lfsr	2,33
  8375  001198  0100               	movlb	0	; () banked
  8376  00119A  51C5               	movf	_ic_ptr& (0+255),w,b
  8377  00119C  26D9               	addwf	fsr2l,f,c
  8378  00119E  0100               	movlb	0	; () banked
  8379  0011A0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8380  0011A2  22DA               	addwfc	fsr2h,f,c
  8381  0011A4  0E08               	movlw	8
  8382  0011A6  6EDF               	movwf	indf2,c
  8383                           
  8384                           ;my_i2c.c: 87: } else {
  8385  0011A8  0012               	return	
  8386  0011AA                     i2l2746:
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  8390  0011AA  0100               	movlb	0	; () banked
  8391  0011AC  EE20 F021          	lfsr	2,33
  8392  0011B0  0100               	movlb	0	; () banked
  8393  0011B2  51C5               	movf	_ic_ptr& (0+255),w,b
  8394  0011B4  26D9               	addwf	fsr2l,f,c
  8395  0011B6  0100               	movlb	0	; () banked
  8396  0011B8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8397  0011BA  22DA               	addwfc	fsr2h,f,c
  8398  0011BC  0E07               	movlw	7
  8399  0011BE  6EDF               	movwf	indf2,c
  8400  0011C0  0012               	return	
  8401  0011C2                     i2l2748:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  8405  0011C2  0100               	movlb	0	; () banked
  8406  0011C4  EE20 F021          	lfsr	2,33
  8407  0011C8  0100               	movlb	0	; () banked
  8408  0011CA  51C5               	movf	_ic_ptr& (0+255),w,b
  8409  0011CC  26D9               	addwf	fsr2l,f,c
  8410  0011CE  0100               	movlb	0	; () banked
  8411  0011D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8412  0011D2  22DA               	addwfc	fsr2h,f,c
  8413  0011D4  0E06               	movlw	6
  8414  0011D6  6EDF               	movwf	indf2,c
  8415  0011D8  0012               	return	
  8416  0011DA                     __end_of_handle_start:
  8417                           	opt stack 0
  8418                           pclatu	equ	0xFFB
  8419                           pclath	equ	0xFFA
  8420                           tblptru	equ	0xFF8
  8421                           tblptrh	equ	0xFF7
  8422                           tblptrl	equ	0xFF6
  8423                           tablat	equ	0xFF5
  8424                           prodh	equ	0xFF4
  8425                           prodl	equ	0xFF3
  8426                           intcon	equ	0xFF2
  8427                           postinc0	equ	0xFEE
  8428                           fsr0h	equ	0xFEA
  8429                           fsr0l	equ	0xFE9
  8430                           wreg	equ	0xFE8
  8431                           indf1	equ	0xFE7
  8432                           fsr1h	equ	0xFE2
  8433                           fsr1l	equ	0xFE1
  8434                           bsr	equ	0xFE0
  8435                           indf2	equ	0xFDF
  8436                           postinc2	equ	0xFDE
  8437                           postdec2	equ	0xFDD
  8438                           fsr2h	equ	0xFDA
  8439                           fsr2l	equ	0xFD9
  8440                           status	equ	0xFD8
  8441                           
  8442 ;; *************** function _ToMainHigh_sendmsg *****************
  8443 ;; Defined at:
  8444 ;;		line 126 in file "../src/messages.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  length          1    wreg     unsigned char 
  8447 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8448 ;;  data            2   23[BANK0 ] PTR void 
  8449 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  length          1   25[BANK0 ] unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      char 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8461 ;;      Params:         0       3       0       0       0
  8462 ;;      Locals:         0       1       0       0       0
  8463 ;;      Temps:          0       0       0       0       0
  8464 ;;      Totals:         0       4       0       0       0
  8465 ;;Total ram usage:        4 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:    2
  8468 ;; This function calls:
  8469 ;;		i2_send_msg
  8470 ;; This function is called by:
  8471 ;;		_i2c_int_handler
  8472 ;;		_timer0_int_handler
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text50
  8477  001BFE                     __ptext50:
  8478                           	opt stack 0
  8479  001BFE                     _ToMainHigh_sendmsg:
  8480                           	opt stack 16
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;incstack = 0
  8484                           ;ToMainHigh_sendmsg@length stored from wreg
  8485  001BFE  0100               	movlb	0	; () banked
  8486  001C00  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8490                           ;	Return value of _ToMainHigh_sendmsg is never used
  8491  001C02  0102               	movlb	2	; () banked
  8492  001C04  0E02               	movlw	high _ToMainHigh_MQ
  8493  001C06  0100               	movlb	0	; () banked
  8494  001C08  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8495  001C0A  0102               	movlb	2	; () banked
  8496  001C0C  0E57               	movlw	low _ToMainHigh_MQ
  8497  001C0E  0100               	movlb	0	; () banked
  8498  001C10  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8499  001C12  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8500  001C16  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8501  001C1A  0100               	movlb	0	; () banked
  8502  001C1C  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8503  001C20  0100               	movlb	0	; () banked
  8504  001C22  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8505  001C26  EC0C  F007         	call	i2_send_msg	;wreg free
  8506  001C2A  0012               	return	
  8507  001C2C                     __end_of_ToMainHigh_sendmsg:
  8508                           	opt stack 0
  8509                           pclatu	equ	0xFFB
  8510                           pclath	equ	0xFFA
  8511                           tblptru	equ	0xFF8
  8512                           tblptrh	equ	0xFF7
  8513                           tblptrl	equ	0xFF6
  8514                           tablat	equ	0xFF5
  8515                           prodh	equ	0xFF4
  8516                           prodl	equ	0xFF3
  8517                           intcon	equ	0xFF2
  8518                           postinc0	equ	0xFEE
  8519                           fsr0h	equ	0xFEA
  8520                           fsr0l	equ	0xFE9
  8521                           wreg	equ	0xFE8
  8522                           indf1	equ	0xFE7
  8523                           fsr1h	equ	0xFE2
  8524                           fsr1l	equ	0xFE1
  8525                           bsr	equ	0xFE0
  8526                           indf2	equ	0xFDF
  8527                           postinc2	equ	0xFDE
  8528                           postdec2	equ	0xFDD
  8529                           fsr2h	equ	0xFDA
  8530                           fsr2l	equ	0xFD9
  8531                           status	equ	0xFD8
  8532                           
  8533 ;; *************** function i2_send_msg *****************
  8534 ;; Defined at:
  8535 ;;		line 24 in file "../src/messages.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8538 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8539 ;;  length          1   12[BANK0 ] unsigned char 
  8540 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8541 ;;  data            2   14[BANK0 ] PTR void 
  8542 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  8543 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  8544 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread
      +_data(2), 
  8545 ;;		 -> main@ic(38), 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8548 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8549 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8550 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8551 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      char 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8561 ;;      Params:         0       6       0       0       0
  8562 ;;      Locals:         0       5       0       0       0
  8563 ;;      Temps:          0       1       0       0       0
  8564 ;;      Totals:         0      12       0       0       0
  8565 ;;Total ram usage:       12 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    1
  8568 ;; This function calls:
  8569 ;;		i2___awmod
  8570 ;;		i2_memcpy
  8571 ;; This function is called by:
  8572 ;;		_ToMainHigh_sendmsg
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text51
  8577  000E18                     __ptext51:
  8578                           	opt stack 0
  8579  000E18                     i2_send_msg:
  8580                           	opt stack 16
  8581                           
  8582                           ;messages.c: 25: unsigned char slot;
  8583                           ;messages.c: 27: msg *qmsg;
  8584                           ;messages.c: 28: size_t tlength = length;
  8585                           
  8586                           ;incstack = 0
  8587  000E18  0100               	movlb	0	; () banked
  8588  000E1A  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8589  000E1E  0100               	movlb	0	; () banked
  8590  000E20  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8594  000E22  0100               	movlb	0	; () banked
  8595  000E24  EE20 F055          	lfsr	2,85
  8596  000E28  0100               	movlb	0	; () banked
  8597  000E2A  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8598  000E2C  26D9               	addwf	fsr2l,f,c
  8599  000E2E  0100               	movlb	0	; () banked
  8600  000E30  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8601  000E32  22DA               	addwfc	fsr2h,f,c
  8602  000E34  50DF               	movf	indf2,w,c
  8603  000E36  0100               	movlb	0	; () banked
  8604  000E38  6F93               	movwf	i2send_msg@slot& (0+255),b
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8608  000E3A  0100               	movlb	0	; () banked
  8609  000E3C  5193               	movf	i2send_msg@slot& (0+255),w,b
  8610  000E3E  0D11               	mullw	17
  8611  000E40  50F3               	movf	prodl,w,c
  8612  000E42  0100               	movlb	0	; () banked
  8613  000E44  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8614  000E46  0100               	movlb	0	; () banked
  8615  000E48  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8616  000E4A  50F4               	movf	prodh,w,c
  8617  000E4C  0100               	movlb	0	; () banked
  8618  000E4E  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8619  000E50  0100               	movlb	0	; () banked
  8620  000E52  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;messages.c: 41: if (qmsg->full != 0) {
  8624  000E54  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8625  000E58  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8626  000E5C  50DF               	movf	indf2,w,c
  8627  000E5E  B4D8               	btfsc	status,2,c
  8628  000E60  D002               	goto	i2l3582
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;messages.c: 42: return (-1);
  8632  000E62  0EFF               	movlw	255
  8633  000E64  0012               	return	
  8634  000E66                     i2l3582:
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;messages.c: 43: }
  8638                           ;messages.c: 46: qmsg->length = length;
  8639  000E66  0100               	movlb	0	; () banked
  8640  000E68  EE20 F001          	lfsr	2,1
  8641  000E6C  0100               	movlb	0	; () banked
  8642  000E6E  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8643  000E70  26D9               	addwf	fsr2l,f,c
  8644  000E72  0100               	movlb	0	; () banked
  8645  000E74  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8646  000E76  22DA               	addwfc	fsr2h,f,c
  8647  000E78  0100               	movlb	0	; () banked
  8648  000E7A  C08C  FFDF         	movff	i2send_msg@length,indf2
  8649                           
  8650                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8651  000E7E  0100               	movlb	0	; () banked
  8652  000E80  EE20 F002          	lfsr	2,2
  8653  000E84  0100               	movlb	0	; () banked
  8654  000E86  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8655  000E88  26D9               	addwf	fsr2l,f,c
  8656  000E8A  0100               	movlb	0	; () banked
  8657  000E8C  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8658  000E8E  22DA               	addwfc	fsr2h,f,c
  8659  000E90  0100               	movlb	0	; () banked
  8660  000E92  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8664  000E96  0E03               	movlw	3
  8665  000E98  0100               	movlb	0	; () banked
  8666  000E9A  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8667  000E9C  0100               	movlb	0	; () banked
  8668  000E9E  6F80               	movwf	i2memcpy@d1& (0+255),b
  8669  000EA0  0E00               	movlw	0
  8670  000EA2  0100               	movlb	0	; () banked
  8671  000EA4  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8672  000EA6  0100               	movlb	0	; () banked
  8673  000EA8  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8674  000EAA  0100               	movlb	0	; () banked
  8675  000EAC  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8676  000EB0  0100               	movlb	0	; () banked
  8677  000EB2  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8678  000EB6  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8679  000EBA  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8680  000EBE  ECE7  F00C         	call	i2_memcpy	;wreg free
  8681                           
  8682                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8683  000EC2  0100               	movlb	0	; () banked
  8684  000EC4  EE20 F055          	lfsr	2,85
  8685  000EC8  0100               	movlb	0	; () banked
  8686  000ECA  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8687  000ECC  26D9               	addwf	fsr2l,f,c
  8688  000ECE  0100               	movlb	0	; () banked
  8689  000ED0  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8690  000ED2  22DA               	addwfc	fsr2h,f,c
  8691  000ED4  0100               	movlb	0	; () banked
  8692  000ED6  EE10 F055          	lfsr	1,85
  8693  000EDA  0100               	movlb	0	; () banked
  8694  000EDC  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8695  000EDE  26E1               	addwf	fsr1l,f,c
  8696  000EE0  0100               	movlb	0	; () banked
  8697  000EE2  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8698  000EE4  22E2               	addwfc	fsr1h,f,c
  8699  000EE6  50E7               	movf	indf1,w,c
  8700  000EE8  0100               	movlb	0	; () banked
  8701  000EEA  6F90               	movwf	??i2_send_msg& (0+255),b
  8702  000EEC  0E01               	movlw	1
  8703  000EEE  0100               	movlb	0	; () banked
  8704  000EF0  2590               	addwf	??i2_send_msg& (0+255),w,b
  8705  000EF2  0100               	movlb	0	; () banked
  8706  000EF4  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8707  000EF6  0100               	movlb	0	; () banked
  8708  000EF8  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8709  000EFA  0E00               	movlw	0
  8710  000EFC  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8711  000EFE  0E00               	movlw	0
  8712  000F00  0100               	movlb	0	; () banked
  8713  000F02  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8714  000F04  0E05               	movlw	5
  8715  000F06  0100               	movlb	0	; () banked
  8716  000F08  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8717  000F0A  EC4F  F009         	call	i2___awmod	;wreg free
  8718  000F0E  0100               	movlb	0	; () banked
  8719  000F10  5180               	movf	?i2___awmod& (0+255),w,b
  8720  000F12  6EDF               	movwf	indf2,c
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;messages.c: 59: qmsg->full = 1;
  8724  000F14  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8725  000F18  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8726  000F1C  0E01               	movlw	1
  8727  000F1E  6EDF               	movwf	indf2,c
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;messages.c: 60: return (1);
  8731  000F20  0E01               	movlw	1
  8732  000F22  0012               	return	
  8733  000F24                     __end_ofi2_send_msg:
  8734                           	opt stack 0
  8735                           pclatu	equ	0xFFB
  8736                           pclath	equ	0xFFA
  8737                           tblptru	equ	0xFF8
  8738                           tblptrh	equ	0xFF7
  8739                           tblptrl	equ	0xFF6
  8740                           tablat	equ	0xFF5
  8741                           prodh	equ	0xFF4
  8742                           prodl	equ	0xFF3
  8743                           intcon	equ	0xFF2
  8744                           postinc0	equ	0xFEE
  8745                           fsr0h	equ	0xFEA
  8746                           fsr0l	equ	0xFE9
  8747                           wreg	equ	0xFE8
  8748                           indf1	equ	0xFE7
  8749                           fsr1h	equ	0xFE2
  8750                           fsr1l	equ	0xFE1
  8751                           bsr	equ	0xFE0
  8752                           indf2	equ	0xFDF
  8753                           postinc2	equ	0xFDE
  8754                           postdec2	equ	0xFDD
  8755                           fsr2h	equ	0xFDA
  8756                           fsr2l	equ	0xFD9
  8757                           status	equ	0xFD8
  8758                           
  8759 ;; *************** function _FromMainHigh_recvmsg *****************
  8760 ;; Defined at:
  8761 ;;		line 183 in file "../src/messages.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  maxlength       1    wreg     unsigned char 
  8764 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8765 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  8766 ;;  data            2   26[BANK0 ] PTR void 
  8767 ;;		 -> NULL(0), timer0_int_handler@val(2), main@ic(38), 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      char 
  8772 ;; Registers used:
  8773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8779 ;;      Params:         0       4       0       0       0
  8780 ;;      Locals:         0       1       0       0       0
  8781 ;;      Temps:          0       0       0       0       0
  8782 ;;      Totals:         0       5       0       0       0
  8783 ;;Total ram usage:        5 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; Hardware stack levels required when called:    2
  8786 ;; This function calls:
  8787 ;;		i2_recv_msg
  8788 ;; This function is called by:
  8789 ;;		_i2c_int_handler
  8790 ;;		_timer0_int_handler
  8791 ;;		_retrieve_sensor_values
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text52
  8796  001B08                     __ptext52:
  8797                           	opt stack 0
  8798  001B08                     _FromMainHigh_recvmsg:
  8799                           	opt stack 16
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;incstack = 0
  8803                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8804  001B08  0100               	movlb	0	; () banked
  8805  001B0A  6F9C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8809  001B0C  0103               	movlb	3	; () banked
  8810  001B0E  0E03               	movlw	high _FromMainHigh_MQ
  8811  001B10  0100               	movlb	0	; () banked
  8812  001B12  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8813  001B14  0103               	movlb	3	; () banked
  8814  001B16  0E00               	movlw	low _FromMainHigh_MQ
  8815  001B18  0100               	movlb	0	; () banked
  8816  001B1A  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8817  001B1C  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8818  001B20  0100               	movlb	0	; () banked
  8819  001B22  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8820  001B26  0100               	movlb	0	; () banked
  8821  001B28  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8822  001B2C  0100               	movlb	0	; () banked
  8823  001B2E  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8824  001B32  0100               	movlb	0	; () banked
  8825  001B34  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8826  001B38  ECE5  F005         	call	i2_recv_msg	;wreg free
  8827  001B3C  0012               	return	
  8828  001B3E                     __end_of_FromMainHigh_recvmsg:
  8829                           	opt stack 0
  8830                           pclatu	equ	0xFFB
  8831                           pclath	equ	0xFFA
  8832                           tblptru	equ	0xFF8
  8833                           tblptrh	equ	0xFF7
  8834                           tblptrl	equ	0xFF6
  8835                           tablat	equ	0xFF5
  8836                           prodh	equ	0xFF4
  8837                           prodl	equ	0xFF3
  8838                           intcon	equ	0xFF2
  8839                           postinc0	equ	0xFEE
  8840                           fsr0h	equ	0xFEA
  8841                           fsr0l	equ	0xFE9
  8842                           wreg	equ	0xFE8
  8843                           indf1	equ	0xFE7
  8844                           fsr1h	equ	0xFE2
  8845                           fsr1l	equ	0xFE1
  8846                           bsr	equ	0xFE0
  8847                           indf2	equ	0xFDF
  8848                           postinc2	equ	0xFDE
  8849                           postdec2	equ	0xFDD
  8850                           fsr2h	equ	0xFDA
  8851                           fsr2l	equ	0xFD9
  8852                           status	equ	0xFD8
  8853                           
  8854 ;; *************** function i2_recv_msg *****************
  8855 ;; Defined at:
  8856 ;;		line 63 in file "../src/messages.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8859 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8860 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8861 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8862 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  8863 ;;		 -> main@msgtype(1), 
  8864 ;;  data            2   15[BANK0 ] PTR void 
  8865 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), 
  8866 ;;		 -> main@ic(38), 
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8869 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8870 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8871 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8872 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  1    wreg      char 
  8875 ;; Registers used:
  8876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8882 ;;      Params:         0       7       0       0       0
  8883 ;;      Locals:         0       5       0       0       0
  8884 ;;      Temps:          0       2       0       0       0
  8885 ;;      Totals:         0      14       0       0       0
  8886 ;;Total ram usage:       14 bytes
  8887 ;; Hardware stack levels used:    1
  8888 ;; Hardware stack levels required when called:    1
  8889 ;; This function calls:
  8890 ;;		i2___awmod
  8891 ;;		i2_memcpy
  8892 ;; This function is called by:
  8893 ;;		_FromMainHigh_recvmsg
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           	psect	text53
  8898  000BCA                     __ptext53:
  8899                           	opt stack 0
  8900  000BCA                     i2_recv_msg:
  8901                           	opt stack 16
  8902                           
  8903                           ;messages.c: 64: unsigned char slot;
  8904                           ;messages.c: 68: msg *qmsg;
  8905                           ;messages.c: 69: size_t tlength;
  8906                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8907                           
  8908                           ;incstack = 0
  8909  000BCA  0100               	movlb	0	; () banked
  8910  000BCC  EE20 F056          	lfsr	2,86
  8911  000BD0  0100               	movlb	0	; () banked
  8912  000BD2  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8913  000BD4  26D9               	addwf	fsr2l,f,c
  8914  000BD6  0100               	movlb	0	; () banked
  8915  000BD8  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8916  000BDA  22DA               	addwfc	fsr2h,f,c
  8917  000BDC  50DF               	movf	indf2,w,c
  8918  000BDE  0100               	movlb	0	; () banked
  8919  000BE0  6F93               	movwf	i2recv_msg@slot& (0+255),b
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8923  000BE2  0100               	movlb	0	; () banked
  8924  000BE4  5193               	movf	i2recv_msg@slot& (0+255),w,b
  8925  000BE6  0D11               	mullw	17
  8926  000BE8  50F3               	movf	prodl,w,c
  8927  000BEA  0100               	movlb	0	; () banked
  8928  000BEC  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8929  000BEE  0100               	movlb	0	; () banked
  8930  000BF0  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  8931  000BF2  50F4               	movf	prodh,w,c
  8932  000BF4  0100               	movlb	0	; () banked
  8933  000BF6  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8934  000BF8  0100               	movlb	0	; () banked
  8935  000BFA  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;messages.c: 74: if (qmsg->full == 1) {
  8939  000BFC  0E01               	movlw	1
  8940  000BFE  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8941  000C02  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8942  000C06  62DF               	cpfseq	indf2,c
  8943  000C08  D07D               	goto	i2l3654
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8947  000C0A  0100               	movlb	0	; () banked
  8948  000C0C  EE20 F001          	lfsr	2,1
  8949  000C10  0100               	movlb	0	; () banked
  8950  000C12  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8951  000C14  26D9               	addwf	fsr2l,f,c
  8952  000C16  0100               	movlb	0	; () banked
  8953  000C18  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8954  000C1A  22DA               	addwfc	fsr2h,f,c
  8955  000C1C  50DF               	movf	indf2,w,c
  8956  000C1E  0100               	movlb	0	; () banked
  8957  000C20  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8958  000C22  B0D8               	btfsc	status,0,c
  8959  000C24  D002               	goto	i2l3638
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;messages.c: 77: return (-3);
  8963  000C26  0EFD               	movlw	253
  8964  000C28  0012               	return	
  8965  000C2A                     i2l3638:
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;messages.c: 78: }
  8969                           ;messages.c: 80: tlength = qmsg->length;
  8970  000C2A  0100               	movlb	0	; () banked
  8971  000C2C  EE20 F001          	lfsr	2,1
  8972  000C30  0100               	movlb	0	; () banked
  8973  000C32  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8974  000C34  26D9               	addwf	fsr2l,f,c
  8975  000C36  0100               	movlb	0	; () banked
  8976  000C38  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8977  000C3A  22DA               	addwfc	fsr2h,f,c
  8978  000C3C  50DF               	movf	indf2,w,c
  8979  000C3E  0100               	movlb	0	; () banked
  8980  000C40  6F91               	movwf	??i2_recv_msg& (0+255),b
  8981  000C42  0100               	movlb	0	; () banked
  8982  000C44  5191               	movf	??i2_recv_msg& (0+255),w,b
  8983  000C46  0100               	movlb	0	; () banked
  8984  000C48  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  8985  000C4A  0100               	movlb	0	; () banked
  8986  000C4C  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8990  000C4E  0100               	movlb	0	; () banked
  8991  000C50  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8992  000C54  0100               	movlb	0	; () banked
  8993  000C56  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  8994  000C5A  0E03               	movlw	3
  8995  000C5C  0100               	movlb	0	; () banked
  8996  000C5E  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8997  000C60  0100               	movlb	0	; () banked
  8998  000C62  6F91               	movwf	??i2_recv_msg& (0+255),b
  8999  000C64  0E00               	movlw	0
  9000  000C66  0100               	movlb	0	; () banked
  9001  000C68  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  9002  000C6A  0100               	movlb	0	; () banked
  9003  000C6C  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  9004  000C6E  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  9005  000C72  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  9006  000C76  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  9007  000C7A  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  9008  000C7E  ECE7  F00C         	call	i2_memcpy	;wreg free
  9009                           
  9010                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  9011  000C82  0100               	movlb	0	; () banked
  9012  000C84  EE20 F056          	lfsr	2,86
  9013  000C88  0100               	movlb	0	; () banked
  9014  000C8A  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9015  000C8C  26D9               	addwf	fsr2l,f,c
  9016  000C8E  0100               	movlb	0	; () banked
  9017  000C90  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9018  000C92  22DA               	addwfc	fsr2h,f,c
  9019  000C94  0100               	movlb	0	; () banked
  9020  000C96  EE10 F056          	lfsr	1,86
  9021  000C9A  0100               	movlb	0	; () banked
  9022  000C9C  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9023  000C9E  26E1               	addwf	fsr1l,f,c
  9024  000CA0  0100               	movlb	0	; () banked
  9025  000CA2  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9026  000CA4  22E2               	addwfc	fsr1h,f,c
  9027  000CA6  50E7               	movf	indf1,w,c
  9028  000CA8  0100               	movlb	0	; () banked
  9029  000CAA  6F91               	movwf	??i2_recv_msg& (0+255),b
  9030  000CAC  0E01               	movlw	1
  9031  000CAE  0100               	movlb	0	; () banked
  9032  000CB0  2591               	addwf	??i2_recv_msg& (0+255),w,b
  9033  000CB2  0100               	movlb	0	; () banked
  9034  000CB4  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9035  000CB6  0100               	movlb	0	; () banked
  9036  000CB8  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9037  000CBA  0E00               	movlw	0
  9038  000CBC  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9039  000CBE  0E00               	movlw	0
  9040  000CC0  0100               	movlb	0	; () banked
  9041  000CC2  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9042  000CC4  0E05               	movlw	5
  9043  000CC6  0100               	movlb	0	; () banked
  9044  000CC8  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9045  000CCA  EC4F  F009         	call	i2___awmod	;wreg free
  9046  000CCE  0100               	movlb	0	; () banked
  9047  000CD0  5180               	movf	?i2___awmod& (0+255),w,b
  9048  000CD2  6EDF               	movwf	indf2,c
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9052  000CD4  0100               	movlb	0	; () banked
  9053  000CD6  EE20 F002          	lfsr	2,2
  9054  000CDA  0100               	movlb	0	; () banked
  9055  000CDC  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9056  000CDE  26D9               	addwf	fsr2l,f,c
  9057  000CE0  0100               	movlb	0	; () banked
  9058  000CE2  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9059  000CE4  22DA               	addwfc	fsr2h,f,c
  9060  000CE6  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9061  000CEA  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9062  000CEE  CFDF FFE7          	movff	indf2,indf1
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;messages.c: 91: qmsg->full = 0;
  9066  000CF2  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9067  000CF6  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9068  000CFA  0E00               	movlw	0
  9069  000CFC  6EDF               	movwf	indf2,c
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;messages.c: 92: return (tlength);
  9073  000CFE  0100               	movlb	0	; () banked
  9074  000D00  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  9075  000D02  0012               	return	
  9076  000D04                     i2l3654:
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;messages.c: 94: return (-4);
  9080  000D04  0EFC               	movlw	252
  9081  000D06  0012               	return	
  9082  000D08                     __end_ofi2_recv_msg:
  9083                           	opt stack 0
  9084                           pclatu	equ	0xFFB
  9085                           pclath	equ	0xFFA
  9086                           tblptru	equ	0xFF8
  9087                           tblptrh	equ	0xFF7
  9088                           tblptrl	equ	0xFF6
  9089                           tablat	equ	0xFF5
  9090                           prodh	equ	0xFF4
  9091                           prodl	equ	0xFF3
  9092                           intcon	equ	0xFF2
  9093                           postinc0	equ	0xFEE
  9094                           fsr0h	equ	0xFEA
  9095                           fsr0l	equ	0xFE9
  9096                           wreg	equ	0xFE8
  9097                           indf1	equ	0xFE7
  9098                           fsr1h	equ	0xFE2
  9099                           fsr1l	equ	0xFE1
  9100                           bsr	equ	0xFE0
  9101                           indf2	equ	0xFDF
  9102                           postinc2	equ	0xFDE
  9103                           postdec2	equ	0xFDD
  9104                           fsr2h	equ	0xFDA
  9105                           fsr2l	equ	0xFD9
  9106                           status	equ	0xFD8
  9107                           
  9108 ;; *************** function i2_memcpy *****************
  9109 ;; Defined at:
  9110 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  d1              2    0[BANK0 ] PTR void 
  9113 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9114 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), 
  9115 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9116 ;;		 -> main@ic(38), 
  9117 ;;  s1              2    2[BANK0 ] PTR const void 
  9118 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9119 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9120 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  9121 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9122 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  9123 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(2), 
  9124 ;;		 -> main@ic(38), 
  9125 ;;  n               2    4[BANK0 ] unsigned int 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9128 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9129 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9130 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  9131 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9132 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  9133 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(2), 
  9134 ;;		 -> main@ic(38), 
  9135 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9136 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9137 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), 
  9138 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9139 ;;		 -> main@ic(38), 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  2    0[BANK0 ] PTR void 
  9142 ;; Registers used:
  9143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9149 ;;      Params:         0       6       0       0       0
  9150 ;;      Locals:         0       4       0       0       0
  9151 ;;      Temps:          0       0       0       0       0
  9152 ;;      Totals:         0      10       0       0       0
  9153 ;;Total ram usage:       10 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		i2_send_msg
  9159 ;;		i2_recv_msg
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text54
  9164  0019CE                     __ptext54:
  9165                           	opt stack 0
  9166  0019CE                     i2_memcpy:
  9167                           	opt stack 16
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;incstack = 0
  9171  0019CE  0100               	movlb	0	; () banked
  9172  0019D0  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9173  0019D4  0100               	movlb	0	; () banked
  9174  0019D6  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9175  0019DA  0100               	movlb	0	; () banked
  9176  0019DC  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9177  0019E0  0100               	movlb	0	; () banked
  9178  0019E2  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9179  0019E6  D010               	goto	i2l2438
  9180  0019E8                     i2l2432:
  9181                           
  9182                           ; BSR set to: 0
  9183  0019E8  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9184  0019EC  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9185  0019F0  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9186  0019F4  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9187  0019F8  CFDF FFE7          	movff	indf2,indf1
  9188                           
  9189                           ; BSR set to: 0
  9190  0019FC  0100               	movlb	0	; () banked
  9191  0019FE  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9192  001A00  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9193                           
  9194                           ; BSR set to: 0
  9195  001A02  0100               	movlb	0	; () banked
  9196  001A04  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9197  001A06  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9198  001A08                     i2l2438:
  9199                           
  9200                           ; BSR set to: 0
  9201  001A08  0100               	movlb	0	; () banked
  9202  001A0A  0784               	decf	i2memcpy@n& (0+255),f,b
  9203  001A0C  A0D8               	btfss	status,0,c
  9204  001A0E  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9205  001A10  0100               	movlb	0	; () banked
  9206  001A12  2984               	incf	i2memcpy@n& (0+255),w,b
  9207  001A14  B4D8               	btfsc	status,2,c
  9208  001A16  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9209  001A18  B4D8               	btfsc	status,2,c
  9210                           
  9211                           ; BSR set to: 0
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;	Return value of i2_memcpy is never used
  9215  001A1A  0012               	return	
  9216  001A1C  D7E5               	goto	i2l2432
  9217  001A1E                     __end_ofi2_memcpy:
  9218                           	opt stack 0
  9219                           pclatu	equ	0xFFB
  9220                           pclath	equ	0xFFA
  9221                           tblptru	equ	0xFF8
  9222                           tblptrh	equ	0xFF7
  9223                           tblptrl	equ	0xFF6
  9224                           tablat	equ	0xFF5
  9225                           prodh	equ	0xFF4
  9226                           prodl	equ	0xFF3
  9227                           intcon	equ	0xFF2
  9228                           postinc0	equ	0xFEE
  9229                           fsr0h	equ	0xFEA
  9230                           fsr0l	equ	0xFE9
  9231                           wreg	equ	0xFE8
  9232                           indf1	equ	0xFE7
  9233                           fsr1h	equ	0xFE2
  9234                           fsr1l	equ	0xFE1
  9235                           bsr	equ	0xFE0
  9236                           indf2	equ	0xFDF
  9237                           postinc2	equ	0xFDE
  9238                           postdec2	equ	0xFDD
  9239                           fsr2h	equ	0xFDA
  9240                           fsr2l	equ	0xFD9
  9241                           status	equ	0xFD8
  9242                           
  9243 ;; *************** function i2___awmod *****************
  9244 ;; Defined at:
  9245 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  dividend        2    0[BANK0 ] int 
  9248 ;;  divisor         2    2[BANK0 ] int 
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9251 ;;  __awmod         1    4[BANK0 ] unsigned char 
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  2    0[BANK0 ] int 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2, status,0, prodl
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9261 ;;      Params:         0       4       0       0       0
  9262 ;;      Locals:         0       2       0       0       0
  9263 ;;      Temps:          0       0       0       0       0
  9264 ;;      Totals:         0       6       0       0       0
  9265 ;;Total ram usage:        6 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; This function calls:
  9268 ;;		Nothing
  9269 ;; This function is called by:
  9270 ;;		i2_send_msg
  9271 ;;		i2_recv_msg
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text55
  9276  00129E                     __ptext55:
  9277                           	opt stack 0
  9278  00129E                     i2___awmod:
  9279                           	opt stack 16
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;incstack = 0
  9283  00129E  0E00               	movlw	0
  9284  0012A0  0100               	movlb	0	; () banked
  9285  0012A2  6F85               	movwf	i2___awmod@sign& (0+255),b
  9286                           
  9287                           ; BSR set to: 0
  9288  0012A4  0100               	movlb	0	; () banked
  9289  0012A6  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9290  0012A8  0A80               	xorlw	128
  9291  0012AA  6EF3               	movwf	prodl,c
  9292  0012AC  0E80               	movlw	128
  9293  0012AE  5CF3               	subwf	prodl,w,c
  9294  0012B0  0E00               	movlw	0
  9295  0012B2  B4D8               	btfsc	status,2,c
  9296  0012B4  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9297  0012B6  B0D8               	btfsc	status,0,c
  9298  0012B8  D009               	goto	i2l2484
  9299                           
  9300                           ; BSR set to: 0
  9301  0012BA  0100               	movlb	0	; () banked
  9302  0012BC  6D80               	negf	i2___awmod@dividend& (0+255),b
  9303  0012BE  0100               	movlb	0	; () banked
  9304  0012C0  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9305  0012C2  B0D8               	btfsc	status,0,c
  9306  0012C4  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9307                           
  9308                           ; BSR set to: 0
  9309  0012C6  0E01               	movlw	1
  9310  0012C8  0100               	movlb	0	; () banked
  9311  0012CA  6F85               	movwf	i2___awmod@sign& (0+255),b
  9312  0012CC                     i2l2484:
  9313                           
  9314                           ; BSR set to: 0
  9315  0012CC  0100               	movlb	0	; () banked
  9316  0012CE  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9317  0012D0  0A80               	xorlw	128
  9318  0012D2  6EF3               	movwf	prodl,c
  9319  0012D4  0E80               	movlw	128
  9320  0012D6  5CF3               	subwf	prodl,w,c
  9321  0012D8  0E00               	movlw	0
  9322  0012DA  B4D8               	btfsc	status,2,c
  9323  0012DC  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9324  0012DE  B0D8               	btfsc	status,0,c
  9325  0012E0  D006               	goto	i2l2488
  9326                           
  9327                           ; BSR set to: 0
  9328  0012E2  0100               	movlb	0	; () banked
  9329  0012E4  6D82               	negf	i2___awmod@divisor& (0+255),b
  9330  0012E6  0100               	movlb	0	; () banked
  9331  0012E8  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9332  0012EA  B0D8               	btfsc	status,0,c
  9333  0012EC  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9334  0012EE                     i2l2488:
  9335                           
  9336                           ; BSR set to: 0
  9337  0012EE  0100               	movlb	0	; () banked
  9338  0012F0  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9339  0012F2  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9340  0012F4  B4D8               	btfsc	status,2,c
  9341  0012F6  D026               	goto	i2l2504
  9342                           
  9343                           ; BSR set to: 0
  9344  0012F8  0E01               	movlw	1
  9345  0012FA  0100               	movlb	0	; () banked
  9346  0012FC  6F84               	movwf	i2___awmod@counter& (0+255),b
  9347  0012FE  D006               	goto	i2l2494
  9348  001300                     i2l2492:
  9349                           
  9350                           ; BSR set to: 0
  9351  001300  0100               	movlb	0	; () banked
  9352  001302  90D8               	bcf	status,0,c
  9353  001304  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9354  001306  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9355  001308  0100               	movlb	0	; () banked
  9356  00130A  2B84               	incf	i2___awmod@counter& (0+255),f,b
  9357  00130C                     i2l2494:
  9358                           
  9359                           ; BSR set to: 0
  9360  00130C  0100               	movlb	0	; () banked
  9361  00130E  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9362  001310  D7F7               	goto	i2l2492
  9363  001312                     i2l2496:
  9364                           
  9365                           ; BSR set to: 0
  9366  001312  0100               	movlb	0	; () banked
  9367  001314  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9368  001316  0100               	movlb	0	; () banked
  9369  001318  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9370  00131A  0100               	movlb	0	; () banked
  9371  00131C  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9372  00131E  0100               	movlb	0	; () banked
  9373  001320  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9374  001322  A0D8               	btfss	status,0,c
  9375  001324  D008               	goto	i2l2500
  9376                           
  9377                           ; BSR set to: 0
  9378  001326  0100               	movlb	0	; () banked
  9379  001328  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9380  00132A  0100               	movlb	0	; () banked
  9381  00132C  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9382  00132E  0100               	movlb	0	; () banked
  9383  001330  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9384  001332  0100               	movlb	0	; () banked
  9385  001334  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9386  001336                     i2l2500:
  9387                           
  9388                           ; BSR set to: 0
  9389  001336  0100               	movlb	0	; () banked
  9390  001338  90D8               	bcf	status,0,c
  9391  00133A  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9392  00133C  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9393                           
  9394                           ; BSR set to: 0
  9395  00133E  0100               	movlb	0	; () banked
  9396  001340  2F84               	decfsz	i2___awmod@counter& (0+255),f,b
  9397  001342  D7E7               	goto	i2l2496
  9398  001344                     i2l2504:
  9399                           
  9400                           ; BSR set to: 0
  9401  001344  0100               	movlb	0	; () banked
  9402  001346  5185               	movf	i2___awmod@sign& (0+255),w,b
  9403  001348  B4D8               	btfsc	status,2,c
  9404  00134A  D006               	goto	i2l2508
  9405                           
  9406                           ; BSR set to: 0
  9407  00134C  0100               	movlb	0	; () banked
  9408  00134E  6D80               	negf	i2___awmod@dividend& (0+255),b
  9409  001350  0100               	movlb	0	; () banked
  9410  001352  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9411  001354  B0D8               	btfsc	status,0,c
  9412  001356  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9413  001358                     i2l2508:
  9414                           
  9415                           ; BSR set to: 0
  9416  001358  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9417  00135C  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9418  001360  0012               	return	
  9419  001362                     __end_ofi2___awmod:
  9420                           	opt stack 0
  9421                           pclatu	equ	0xFFB
  9422                           pclath	equ	0xFFA
  9423                           tblptru	equ	0xFF8
  9424                           tblptrh	equ	0xFF7
  9425                           tblptrl	equ	0xFF6
  9426                           tablat	equ	0xFF5
  9427                           prodh	equ	0xFF4
  9428                           prodl	equ	0xFF3
  9429                           intcon	equ	0xFF2
  9430                           postinc0	equ	0xFEE
  9431                           fsr0h	equ	0xFEA
  9432                           fsr0l	equ	0xFE9
  9433                           wreg	equ	0xFE8
  9434                           indf1	equ	0xFE7
  9435                           fsr1h	equ	0xFE2
  9436                           fsr1l	equ	0xFE1
  9437                           bsr	equ	0xFE0
  9438                           indf2	equ	0xFDF
  9439                           postinc2	equ	0xFDE
  9440                           postdec2	equ	0xFDD
  9441                           fsr2h	equ	0xFDA
  9442                           fsr2l	equ	0xFD9
  9443                           status	equ	0xFD8
  9444                           
  9445 ;; *************** function _SleepIfOkay *****************
  9446 ;; Defined at:
  9447 ;;		line 226 in file "../src/messages.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;		None
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;		None               void
  9454 ;; Registers used:
  9455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9461 ;;      Params:         0       0       0       0       0
  9462 ;;      Locals:         0       0       0       0       0
  9463 ;;      Temps:          0       0       0       0       0
  9464 ;;      Totals:         0       0       0       0       0
  9465 ;;Total ram usage:        0 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:    2
  9468 ;; This function calls:
  9469 ;;		_check_msg
  9470 ;;		_enter_sleep_mode
  9471 ;;		_in_high_int
  9472 ;;		_in_low_int
  9473 ;; This function is called by:
  9474 ;;		_InterruptHandlerHigh
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text56
  9479  001876                     __ptext56:
  9480                           	opt stack 0
  9481  001876                     _SleepIfOkay:
  9482                           	opt stack 17
  9483                           
  9484                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;incstack = 0
  9488  001876  0100               	movlb	0	; () banked
  9489  001878  67C7               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9490  00187A  D001               	goto	i2l2992
  9491  00187C  0012               	return	
  9492  00187E                     i2l2992:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;messages.c: 230: }
  9496                           ;messages.c: 233: if (in_low_int()) {
  9497  00187E  EC2F  F00D         	call	_in_low_int	;wreg free
  9498  001882  0100               	movlb	0	; () banked
  9499  001884  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  9500  001886  0100               	movlb	0	; () banked
  9501  001888  1182               	iorwf	?_in_low_int& (0+255),w,b
  9502  00188A  A4D8               	btfss	status,2,c
  9503  00188C  0012               	return	
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;messages.c: 235: }
  9507                           ;messages.c: 238: if (!in_high_int()) {
  9508                           
  9509                           ; BSR set to: 0
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;messages.c: 234: return;
  9513  00188E  ECBD  F00E         	call	_in_high_int	;wreg free
  9514  001892  0100               	movlb	0	; () banked
  9515  001894  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9516  001896  0100               	movlb	0	; () banked
  9517  001898  1180               	iorwf	?_in_high_int& (0+255),w,b
  9518  00189A  B4D8               	btfsc	status,2,c
  9519  00189C  0012               	return	
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;messages.c: 240: }
  9523                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9524                           
  9525                           ; BSR set to: 0
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;messages.c: 239: return;
  9529  00189E  0102               	movlb	2	; () banked
  9530  0018A0  0E02               	movlw	high _ToMainHigh_MQ
  9531  0018A2  0100               	movlb	0	; () banked
  9532  0018A4  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9533  0018A6  0102               	movlb	2	; () banked
  9534  0018A8  0E57               	movlw	low _ToMainHigh_MQ
  9535  0018AA  0100               	movlb	0	; () banked
  9536  0018AC  6F80               	movwf	check_msg@qptr& (0+255),b
  9537  0018AE  ECB8  F00D         	call	_check_msg	;wreg free
  9538  0018B2  0900               	iorlw	0
  9539  0018B4  A4D8               	btfss	status,2,c
  9540  0018B6  0012               	return	
  9541                           
  9542                           ;messages.c: 247: }
  9543                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9544                           
  9545                           ;messages.c: 246: return;
  9546  0018B8  0101               	movlb	1	; () banked
  9547  0018BA  0E01               	movlw	high _ToMainLow_MQ
  9548  0018BC  0100               	movlb	0	; () banked
  9549  0018BE  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9550  0018C0  0101               	movlb	1	; () banked
  9551  0018C2  0E62               	movlw	low _ToMainLow_MQ
  9552  0018C4  0100               	movlb	0	; () banked
  9553  0018C6  6F80               	movwf	check_msg@qptr& (0+255),b
  9554  0018C8  ECB8  F00D         	call	_check_msg	;wreg free
  9555  0018CC  0900               	iorlw	0
  9556  0018CE  B4D8               	btfsc	status,2,c
  9557                           
  9558                           ;messages.c: 250: }
  9559                           ;messages.c: 251: enter_sleep_mode();
  9560                           
  9561                           ;messages.c: 249: return;
  9562  0018D0  ECF1  F00E         	call	_enter_sleep_mode	;wreg free
  9563  0018D4  0012               	return	
  9564  0018D6                     __end_of_SleepIfOkay:
  9565                           	opt stack 0
  9566                           pclatu	equ	0xFFB
  9567                           pclath	equ	0xFFA
  9568                           tblptru	equ	0xFF8
  9569                           tblptrh	equ	0xFF7
  9570                           tblptrl	equ	0xFF6
  9571                           tablat	equ	0xFF5
  9572                           prodh	equ	0xFF4
  9573                           prodl	equ	0xFF3
  9574                           intcon	equ	0xFF2
  9575                           postinc0	equ	0xFEE
  9576                           fsr0h	equ	0xFEA
  9577                           fsr0l	equ	0xFE9
  9578                           wreg	equ	0xFE8
  9579                           indf1	equ	0xFE7
  9580                           fsr1h	equ	0xFE2
  9581                           fsr1l	equ	0xFE1
  9582                           bsr	equ	0xFE0
  9583                           indf2	equ	0xFDF
  9584                           postinc2	equ	0xFDE
  9585                           postdec2	equ	0xFDD
  9586                           fsr2h	equ	0xFDA
  9587                           fsr2l	equ	0xFD9
  9588                           status	equ	0xFD8
  9589                           
  9590 ;; *************** function _in_low_int *****************
  9591 ;; Defined at:
  9592 ;;		line 33 in file "../src/interrupts.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;		None
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;		None
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  2    2[BANK0 ] int 
  9599 ;; Registers used:
  9600 ;;		wreg, status,2, status,0, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9606 ;;      Params:         0       2       0       0       0
  9607 ;;      Locals:         0       0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0
  9609 ;;      Totals:         0       2       0       0       0
  9610 ;;Total ram usage:        2 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    1
  9613 ;; This function calls:
  9614 ;;		_in_high_int
  9615 ;; This function is called by:
  9616 ;;		_SleepIfOkay
  9617 ;;		_in_main
  9618 ;; This function uses a non-reentrant model
  9619 ;;
  9620                           
  9621                           	psect	text57
  9622  001A5E                     __ptext57:
  9623                           	opt stack 0
  9624  001A5E                     _in_low_int:
  9625                           	opt stack 17
  9626                           
  9627                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9628                           
  9629                           ;incstack = 0
  9630  001A5E  ACF2               	btfss	intcon,6,c	;volatile
  9631  001A60  D007               	goto	i2l2640
  9632                           
  9633                           ;interrupts.c: 35: return (0);
  9634  001A62  0E00               	movlw	0
  9635  001A64  0100               	movlb	0	; () banked
  9636  001A66  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9637  001A68  0E00               	movlw	0
  9638  001A6A  0100               	movlb	0	; () banked
  9639  001A6C  6F82               	movwf	?_in_low_int& (0+255),b
  9640  001A6E  0012               	return	
  9641  001A70                     i2l2640:
  9642  001A70  ECBD  F00E         	call	_in_high_int	;wreg free
  9643  001A74  0100               	movlb	0	; () banked
  9644  001A76  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9645  001A78  0100               	movlb	0	; () banked
  9646  001A7A  1180               	iorwf	?_in_high_int& (0+255),w,b
  9647  001A7C  B4D8               	btfsc	status,2,c
  9648  001A7E  D007               	goto	i2l2648
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;interrupts.c: 37: return (0);
  9652  001A80  0E00               	movlw	0
  9653  001A82  0100               	movlb	0	; () banked
  9654  001A84  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9655  001A86  0E00               	movlw	0
  9656  001A88  0100               	movlb	0	; () banked
  9657  001A8A  6F82               	movwf	?_in_low_int& (0+255),b
  9658  001A8C  0012               	return	
  9659  001A8E                     i2l2648:
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;interrupts.c: 39: return (1);
  9663  001A8E  0E00               	movlw	0
  9664  001A90  0100               	movlb	0	; () banked
  9665  001A92  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9666  001A94  0E01               	movlw	1
  9667  001A96  0100               	movlb	0	; () banked
  9668  001A98  6F82               	movwf	?_in_low_int& (0+255),b
  9669  001A9A  0012               	return	
  9670  001A9C                     __end_of_in_low_int:
  9671                           	opt stack 0
  9672                           pclatu	equ	0xFFB
  9673                           pclath	equ	0xFFA
  9674                           tblptru	equ	0xFF8
  9675                           tblptrh	equ	0xFF7
  9676                           tblptrl	equ	0xFF6
  9677                           tablat	equ	0xFF5
  9678                           prodh	equ	0xFF4
  9679                           prodl	equ	0xFF3
  9680                           intcon	equ	0xFF2
  9681                           postinc0	equ	0xFEE
  9682                           fsr0h	equ	0xFEA
  9683                           fsr0l	equ	0xFE9
  9684                           wreg	equ	0xFE8
  9685                           indf1	equ	0xFE7
  9686                           fsr1h	equ	0xFE2
  9687                           fsr1l	equ	0xFE1
  9688                           bsr	equ	0xFE0
  9689                           indf2	equ	0xFDF
  9690                           postinc2	equ	0xFDE
  9691                           postdec2	equ	0xFDD
  9692                           fsr2h	equ	0xFDA
  9693                           fsr2l	equ	0xFD9
  9694                           status	equ	0xFD8
  9695                           
  9696 ;; *************** function _in_high_int *****************
  9697 ;; Defined at:
  9698 ;;		line 25 in file "../src/interrupts.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;		None
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;		None
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  2    0[BANK0 ] int 
  9705 ;; Registers used:
  9706 ;;		wreg, status,2
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9712 ;;      Params:         0       2       0       0       0
  9713 ;;      Locals:         0       0       0       0       0
  9714 ;;      Temps:          0       0       0       0       0
  9715 ;;      Totals:         0       2       0       0       0
  9716 ;;Total ram usage:        2 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_in_low_int
  9722 ;;		_SleepIfOkay
  9723 ;;		_in_main
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727                           	psect	text58
  9728  001D7A                     __ptext58:
  9729                           	opt stack 0
  9730  001D7A                     _in_high_int:
  9731                           	opt stack 17
  9732                           
  9733                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;incstack = 0
  9737  001D7A  0E00               	movlw	0
  9738  001D7C  AEF2               	btfss	intcon,7,c	;volatile
  9739  001D7E  0E01               	movlw	1
  9740  001D80  0100               	movlb	0	; () banked
  9741  001D82  6F80               	movwf	?_in_high_int& (0+255),b
  9742  001D84  0100               	movlb	0	; () banked
  9743  001D86  6B81               	clrf	(?_in_high_int+1)& (0+255),b
  9744  001D88  0012               	return	
  9745  001D8A                     __end_of_in_high_int:
  9746                           	opt stack 0
  9747                           pclatu	equ	0xFFB
  9748                           pclath	equ	0xFFA
  9749                           tblptru	equ	0xFF8
  9750                           tblptrh	equ	0xFF7
  9751                           tblptrl	equ	0xFF6
  9752                           tablat	equ	0xFF5
  9753                           prodh	equ	0xFF4
  9754                           prodl	equ	0xFF3
  9755                           intcon	equ	0xFF2
  9756                           postinc0	equ	0xFEE
  9757                           fsr0h	equ	0xFEA
  9758                           fsr0l	equ	0xFE9
  9759                           wreg	equ	0xFE8
  9760                           indf1	equ	0xFE7
  9761                           fsr1h	equ	0xFE2
  9762                           fsr1l	equ	0xFE1
  9763                           bsr	equ	0xFE0
  9764                           indf2	equ	0xFDF
  9765                           postinc2	equ	0xFDE
  9766                           postdec2	equ	0xFDD
  9767                           fsr2h	equ	0xFDA
  9768                           fsr2l	equ	0xFD9
  9769                           status	equ	0xFD8
  9770                           
  9771 ;; *************** function _enter_sleep_mode *****************
  9772 ;; Defined at:
  9773 ;;		line 202 in file "../src/messages.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;		None
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;		None               void
  9780 ;; Registers used:
  9781 ;;		None
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9787 ;;      Params:         0       0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0
  9789 ;;      Temps:          0       0       0       0       0
  9790 ;;      Totals:         0       0       0       0       0
  9791 ;;Total ram usage:        0 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; This function calls:
  9794 ;;		Nothing
  9795 ;; This function is called by:
  9796 ;;		_SleepIfOkay
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text59
  9801  001DE2                     __ptext59:
  9802                           	opt stack 0
  9803  001DE2                     _enter_sleep_mode:
  9804                           	opt stack 18
  9805                           
  9806                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;incstack = 0
  9810  001DE2  8ED3               	bsf	4051,7,c	;volatile
  9811  001DE4  0003               	sleep		;# 
  9812  001DE6  0012               	return	
  9813  001DE8                     __end_of_enter_sleep_mode:
  9814                           	opt stack 0
  9815                           pclatu	equ	0xFFB
  9816                           pclath	equ	0xFFA
  9817                           tblptru	equ	0xFF8
  9818                           tblptrh	equ	0xFF7
  9819                           tblptrl	equ	0xFF6
  9820                           tablat	equ	0xFF5
  9821                           prodh	equ	0xFF4
  9822                           prodl	equ	0xFF3
  9823                           intcon	equ	0xFF2
  9824                           postinc0	equ	0xFEE
  9825                           fsr0h	equ	0xFEA
  9826                           fsr0l	equ	0xFE9
  9827                           wreg	equ	0xFE8
  9828                           indf1	equ	0xFE7
  9829                           fsr1h	equ	0xFE2
  9830                           fsr1l	equ	0xFE1
  9831                           bsr	equ	0xFE0
  9832                           indf2	equ	0xFDF
  9833                           postinc2	equ	0xFDE
  9834                           postdec2	equ	0xFDD
  9835                           fsr2h	equ	0xFDA
  9836                           fsr2l	equ	0xFD9
  9837                           status	equ	0xFD8
  9838                           
  9839 ;; *************** function _check_msg *****************
  9840 ;; Defined at:
  9841 ;;		line 220 in file "../src/messages.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9844 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;		None
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  1    wreg      unsigned char 
  9849 ;; Registers used:
  9850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9856 ;;      Params:         0       2       0       0       0
  9857 ;;      Locals:         0       0       0       0       0
  9858 ;;      Temps:          0       1       0       0       0
  9859 ;;      Totals:         0       3       0       0       0
  9860 ;;Total ram usage:        3 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_SleepIfOkay
  9866 ;;		_block_on_To_msgqueues
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text60
  9871  001B70                     __ptext60:
  9872                           	opt stack 0
  9873  001B70                     _check_msg:
  9874                           	opt stack 18
  9875                           
  9876                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9877                           
  9878                           ;incstack = 0
  9879  001B70  0100               	movlb	0	; () banked
  9880  001B72  EE20 F056          	lfsr	2,86
  9881  001B76  0100               	movlb	0	; () banked
  9882  001B78  5180               	movf	check_msg@qptr& (0+255),w,b
  9883  001B7A  26D9               	addwf	fsr2l,f,c
  9884  001B7C  0100               	movlb	0	; () banked
  9885  001B7E  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
  9886  001B80  22DA               	addwfc	fsr2h,f,c
  9887  001B82  50DF               	movf	indf2,w,c
  9888  001B84  0100               	movlb	0	; () banked
  9889  001B86  6F82               	movwf	??_check_msg& (0+255),b
  9890  001B88  0100               	movlb	0	; () banked
  9891  001B8A  5182               	movf	??_check_msg& (0+255),w,b
  9892  001B8C  0D11               	mullw	17
  9893  001B8E  50F3               	movf	prodl,w,c
  9894  001B90  0100               	movlb	0	; () banked
  9895  001B92  2580               	addwf	check_msg@qptr& (0+255),w,b
  9896  001B94  6ED9               	movwf	fsr2l,c
  9897  001B96  50F4               	movf	prodh,w,c
  9898  001B98  0100               	movlb	0	; () banked
  9899  001B9A  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9900  001B9C  6EDA               	movwf	fsr2h,c
  9901  001B9E  50DF               	movf	indf2,w,c
  9902  001BA0  0012               	return	
  9903  001BA2                     __end_of_check_msg:
  9904                           	opt stack 0
  9905  0000                     pclatu	equ	0xFFB
  9906                           pclath	equ	0xFFA
  9907                           tblptru	equ	0xFF8
  9908                           tblptrh	equ	0xFF7
  9909                           tblptrl	equ	0xFF6
  9910                           tablat	equ	0xFF5
  9911                           prodh	equ	0xFF4
  9912                           prodl	equ	0xFF3
  9913                           intcon	equ	0xFF2
  9914                           postinc0	equ	0xFEE
  9915                           fsr0h	equ	0xFEA
  9916                           fsr0l	equ	0xFE9
  9917                           wreg	equ	0xFE8
  9918                           indf1	equ	0xFE7
  9919                           fsr1h	equ	0xFE2
  9920                           fsr1l	equ	0xFE1
  9921                           bsr	equ	0xFE0
  9922                           indf2	equ	0xFDF
  9923                           postinc2	equ	0xFDE
  9924                           postdec2	equ	0xFDD
  9925                           fsr2h	equ	0xFDA
  9926                           fsr2l	equ	0xFD9
  9927                           status	equ	0xFD8
  9928                           pclatu	equ	0xFFB
  9929                           pclath	equ	0xFFA
  9930                           tblptru	equ	0xFF8
  9931                           tblptrh	equ	0xFF7
  9932                           tblptrl	equ	0xFF6
  9933                           tablat	equ	0xFF5
  9934                           prodh	equ	0xFF4
  9935                           prodl	equ	0xFF3
  9936                           intcon	equ	0xFF2
  9937                           postinc0	equ	0xFEE
  9938                           fsr0h	equ	0xFEA
  9939                           fsr0l	equ	0xFE9
  9940                           wreg	equ	0xFE8
  9941                           indf1	equ	0xFE7
  9942                           fsr1h	equ	0xFE2
  9943                           fsr1l	equ	0xFE1
  9944                           bsr	equ	0xFE0
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           postdec2	equ	0xFDD
  9948                           fsr2h	equ	0xFDA
  9949                           fsr2l	equ	0xFD9
  9950                           status	equ	0xFD8
  9951                           
  9952                           	psect	param0
  9953  0000                     pclatu	equ	0xFFB
  9954                           pclath	equ	0xFFA
  9955                           tblptru	equ	0xFF8
  9956                           tblptrh	equ	0xFF7
  9957                           tblptrl	equ	0xFF6
  9958                           tablat	equ	0xFF5
  9959                           prodh	equ	0xFF4
  9960                           prodl	equ	0xFF3
  9961                           intcon	equ	0xFF2
  9962                           postinc0	equ	0xFEE
  9963                           fsr0h	equ	0xFEA
  9964                           fsr0l	equ	0xFE9
  9965                           wreg	equ	0xFE8
  9966                           indf1	equ	0xFE7
  9967                           fsr1h	equ	0xFE2
  9968                           fsr1l	equ	0xFE1
  9969                           bsr	equ	0xFE0
  9970                           indf2	equ	0xFDF
  9971                           postinc2	equ	0xFDE
  9972                           postdec2	equ	0xFDD
  9973                           fsr2h	equ	0xFDA
  9974                           fsr2l	equ	0xFD9
  9975                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         376
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      99
    BANK0           128     69      72
    BANK1           256     98     185
    BANK2           256      0     174
    BANK3           256      0      87

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 4
		 -> uart_transmit_interrupt_handler@data(COMRAM[4]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 4
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[4]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_i_like_to_moveit_moveit
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0   17828
                                             22 BANK1     76    76      0
               _FromMainHigh_sendmsg
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
            _i_like_to_moveit_moveit
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3477
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2788
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i_like_to_moveit_moveit                              6     5      1    3913
                                             16 BANK1      6     5      1
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (2) _send_uart_message                                    3     1      2    2822
                                             68 BANK0      1     1      0
                                             14 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _FromMainLow_sendmsg                                  4     1      3    2658
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    7016
                                             54 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                      6     6      0    1765
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
                             i1_blip
 ---------------------------------------------------------------------------------
 (8) i1_blip                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      28    28      0    2943
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    2308
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2187
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    8352
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    3788
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    13    13      0    4308
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                            i2_blip1
                            i2_blip2
 ---------------------------------------------------------------------------------
 (13) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     119
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1797
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1698
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainHigh_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _i_like_to_moveit_moveit
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           ___awmod
           _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
     i1_blip

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply
     i2_blip1
     i2_blip2
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      57      10       34.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      AE       8       68.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     62      B9       6       72.3%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      48       4       56.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     269      11        0.0%
DATA                 0      0     269      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Oct 17 15:11:56 2014

                              ??_debug_configure 00B8                         _MQ_Main_Willing_to_block 00C7  
                                    _SSPSTATbits 000FC7               uart_receive_interrupt_handler@done 005D  
                      __end_of_ToMainLow_recvmsg 1AD2                                               bsr 000FE0  
                      __end_of_ToMainLow_sendmsg 1CF2                                     __CFG_CP0$OFF 000000  
                              i2recv_msg@msgtype 008D                                i2recv_msg@tlength 0094  
                           ?_FromMainLow_recvmsg 0019                                              l121 0818  
                                            l533 14B6                                              l550 1CCA  
                                            l529 145E                                              l549 1CC8  
                                            l573 1B54                                              l575 1B6A  
                                            l576 1B6C                             ?_FromMainLow_sendmsg 010B  
                           __size_of_WriteTimer0 0012                             __size_of_WriteTimer1 0012  
                               ??_uart_configure 00B8                                     ___awmod@sign 00BD  
                                 _FromMainLow_MQ 0200                                              prod 000FF3  
                                            wreg 000FE8                                       _TXSTA1bits 000FAC  
                                   __CFG_IESO$ON 000000                                     ?_in_high_int 0080  
                                ReadTimer1@timer 0003                              i2recv_msg@maxlength 008C  
                                           l1123 186C                                             l4100 1496  
                                           l4106 14AC                                             l4202 0758  
                                           l3500 1248                                             l4220 07B8  
                                           l3502 124E                                             l3510 1280  
                                           l4230 081E                                             l4222 07FC  
                                           l4208 0760                                             l3514 1294  
                                           l3506 1272                                             l3530 0D56  
                                           l4090 1454                                             l4242 088A  
                                           l4234 083C                                             l3196 1B56  
                                           l4084 143E                                             l4228 080E  
                                           l4236 0858                                             l3480 19B8  
                                           l2664 178C                                             l3720 1828  
                                           l4248 08CC                                             l3490 1208  
                                           l3474 1998                                             l3722 1834  
                                           l3724 183A                                             l3494 122A  
                                           l3728 185E                                             l3498 123C  
                                           l3674 0AE8                                             l3690 0BC6  
                                           _LATB 000F8A                                             i1l54 007A  
                                _FromMainHigh_MQ 0300                                    __CFG_FCMEN$ON 000000  
                                           _blip 1DC2                                       i1_recv_msg 1028  
                                           _main 06E2                         ?_i_like_to_moveit_moveit 0110  
                                           fsr0h 000FEA                                             fsr1h 000FE2  
                                           fsr0l 000FE9                                             fsr2h 000FDA  
                                           indf1 000FE7                                             fsr1l 000FE1  
                                           indf2 000FDF                                             fsr2l 000FD9  
                                    main@msgtype 013B                                       i1_send_msg 1362  
                                           pclat 000FFA                                             prodh 000FF4  
                                __end_ofi2_blip1 1DE2                                             prodl 000FF3  
                                __end_ofi2_blip2 1DDA                            handle_start@data_read 0080  
                                           start 00C0                                       i2_recv_msg 0BCA  
                                  __CFG_FOSC2$ON 000000                                       i2_send_msg 0E18  
                      ToMainHigh_recvmsg@msgtype 010C                                   send_msg@length 0102  
                    __size_of_timer0_int_handler 006E           uart_receive_interrupt_handler@checksum 002F  
                          ??_FromMainLow_recvmsg 001D                                            ?_blip 0001  
                          ??_FromMainLow_sendmsg 00C3                                            ?_main 0001  
                                __end_of___awmod 129E                                            _T0CON 000FD5  
                                          _T1CON 000FCD                                            i1l413 0A6C  
                                __end_of___lwmod 1876                                       i1memcpy@d1 0001  
                                          i2l322 0430                                            i2l328 04F2  
                                          i2l283 118E                                            i2l295 0156  
                                          i2l299 0188                                       i1memcpy@s1 0003  
                    FromMainHigh_recvmsg@msgtype 0098                                            _TMR0H 000FD7  
                                          _TMR1H 000FCF                                            _TMR0L 000FD6  
                                          _TMR1L 000FCE                                            _SPBRG 000FAF  
                                          _TRISB 000F93                                            _TRISD 000F95  
                                     i2memcpy@d1 0080                                       i2memcpy@s1 0082  
                                   ?_init_queues 0001                        __size_of_enter_sleep_mode 0006  
                                 i1___awmod@sign 0006                                            _blip1 1DBA  
                                          _blip2 1DB2                                            _blip3 1DAA  
    uart_receive_interrupt_handler@message_count 0033                       ToMainLow_recvmsg@maxlength 00C4  
                        timer0_lthread@msgbuffer 00BE                          i2c_configure_slave@addr 00B8  
                           main@need_sensor_data 0134                                            tablat 000FF5  
        i_like_to_moveit_moveit@right_side_speed 0110                                            status 000FD8  
                               __end_ofi1_memcpy 1A5E                               __size_ofi1___awmod 0090  
                               __end_ofi2_memcpy 1A1E                               __size_ofi2___awmod 00C4  
                                __initialization 192E                                     __end_of_blip 1DCA  
                                   __end_of_main 08FE                                       _ReadTimer1 1D56  
                    __size_of_timer1_int_handler 002C                       __size_of_ToMainLow_recvmsg 0036  
                     __size_of_ToMainLow_sendmsg 0024                    __size_of_FromMainHigh_recvmsg 0036  
                  __size_of_FromMainHigh_sendmsg 002E                                           ??_blip 00B8  
                                         ??_main 00C5                                  send_msg@msgtype 0103  
                                  __activetblptr 000002                                  send_msg@tlength 0106  
                     FromMainLow_sendmsg@msgtype 010B                             __end_of_handle_start 11DA  
                                         ?_blip1 0001                                           ?_blip2 0001  
                                         ?_blip3 0001                                        ??i2_blip1 0080  
                                      ??i2_blip2 0080                                           i1l4004 0A24  
                                         i1l2422 1A30                                           i1l4024 0A80  
                                         i1l4040 15A0                                           i1l2460 1538  
                                         i1l2452 151E                                           i1l2428 1A4C  
                                         i1l2472 1564                                           i1l2464 154C  
                                         i1l2456 152C                                           i1l2448 1502  
                                         i1l4064 15D4                                           i1l2458 1534  
                                         i1l4154 0070                                           i1l2468 1556  
                                         i1l4148 0066                                           i1l3606 106E  
                                         i1l3622 110C                                           i1l3558 139A  
                                         i2l2500 1336                                           i2l2504 1344  
                                         i2l2432 19E8                                       _OpenTimer0 1CA8  
                                         i2l4130 1630                                           i1l3954 0944  
                                         i1l3970 0978                                       _OpenTimer1 1B3E  
                                         i2l2508 1358                                           i1l3980 09A8  
                                         i1l3948 093E                                           i1l3956 094A  
                                         i2l2438 1A08                                   __CFG_WDTEN$OFF 000000  
                                         i2l2640 1A70                                           i2l4136 163A  
                                         i1l3968 0976                                           i2l2730 0FBC  
                                         i2l2492 1300                                           i2l2484 12CC  
                                         i1l3996 0A02                                           i2l2494 130C  
                                         i2l2726 0F40                                           i2l2648 1A8E  
                                         i2l2496 1312                                           i2l2488 12EE  
                                         i2l2746 11AA                                           i2l2748 11C2  
                                         i2l3900 0698                                           i2l3638 0C2A  
                                         i2l3654 0D04                                           i2l3582 0E66  
                                         i2l3830 03D0                                           i2l3806 0310  
                                         i2l3750 013C                                           i2l3912 06D8  
                                         i2l3824 0386                                           i2l3826 03C8  
                                         i2l3860 04B4                                           i2l3756 014A  
                                         i2l3870 04F6                                           i2l3862 04E0  
                                         i2l2992 187E                                           i2l3776 01B4  
                                         i2l3794 0254                                           i2l3778 01E0  
                                         i2l3892 0652                                           i2l3884 05C0  
                                         i2l3876 0554                                           i2l3796 0294  
                                         i2l3788 021A                                           _RCREG1 000FAE  
                    __end_of_i2c_configure_slave 1C80                                    ??_SleepIfOkay 0084  
                                         _OSCCON 000FD3                                           _SPBRGH 000FB0  
                                    ?i1_recv_msg 000B                                           _SSPADD 000FC8  
                                         _SSPBUF 000FC9                   __size_of_start_i2c_slave_reply 0104  
                                         _TXREG1 000FAD                                      ?i1_send_msg 000B  
                                         i1_blip 1DCA                    __end_of_start_i2c_slave_reply 1028  
                             timer0_lthread@tptr 00B8                          FromMainLow_recvmsg@data 001B  
                                    ?i2_recv_msg 008A                                      ?i2_send_msg 008A  
                                 __CFG_XINST$OFF 000000                 ??_uart_receive_interrupt_handler 001B  
                ?_uart_receive_interrupt_handler 0001                                  _i2c_int_handler 00C4  
                                      ??___awmod 00BC                                           _blink0 1DE8  
                               OpenTimer0@config 00B8                                           _ic_ptr 00C5  
                                      ??___lwmod 00BC                                    main@msgbuffer 0124  
                               __end_of_init_i2c 1750                                 OpenTimer1@config 00B8  
                                         _memcpy 197E                                           clear_0 1934  
                                         clear_1 1940                                           clear_2 194C  
                                         clear_3 195C                                  ___awmod@divisor 00BA  
                                ___awmod@counter 00BC                                           main@ic 013C  
                               __end_of_recv_msg 0BCA                      start_i2c_slave_reply@length 0084  
  uart_transmit_interrupt_handler@message_status 0023                                __end_ofi1___awmod 156E  
                               __end_of_send_msg 0E18                                     __pdataCOMRAM 0063  
                              __end_ofi2___awmod 1362                            timer0_int_handler@val 00A1  
                        i2c_int_handler@i2c_data 00A5                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
           uart_receive_interrupt_handler@msg_id 0034                                      init_queue@i 00BA  
                                 i2___awmod@sign 0085             uart_receive_interrupt_handler@status 002B  
                       ToMainLow_recvmsg@msgtype 010C                             __size_of_in_high_int 0010  
                        FromMainLow_sendmsg@data 010C                                  _debug_configure 1D98  
                                __CFG_FOSC$HSPLL 000000             uart_transmit_interrupt_handler@index 0062  
                                     __accesstop 0080                          __end_of__initialization 1974  
                     __end_of_ToMainHigh_recvmsg 1B08                       __end_of_ToMainHigh_sendmsg 1C2C  
                               _need_sensor_data 005A                      __end_of_init_timer1_lthread 1D44  
                            __end_of_SleepIfOkay 18D6                                   __pcstackCOMRAM 0001  
                                    ?_ReadTimer1 0001                                    __end_of_blip1 1DC2  
                                  __end_of_blip2 1DBA                                    __end_of_blip3 1DB2  
                send_uart_message@message_q_code 00C4                               __size_of_check_msg 0032  
                      timer0_int_handler@msgtype 009F                              __size_ofi1_recv_msg 00E8  
                            __size_ofi1_send_msg 00C0                                        ?i1_memcpy 0001  
                  __size_of_InterruptHandlerHigh 1674                      __end_of_InterruptHandlerLow 00C0  
                                      ?i2_memcpy 0080                                    _ToMainHigh_MQ 0257  
                            __size_ofi2_recv_msg 013E                                 _enter_sleep_mode 1DE2  
                            __size_ofi2_send_msg 010C                             timer1_lthread@length 0112  
                                        ??_blip1 00B8                                          ??_blip2 00B8  
                                        ??_blip3 00B8                                    check_msg@qptr 0080  
                           timer1_lthread@retval 00C4                             __size_of_init_queues 0058  
                                     __pbssBANK0 00C7                                       __pbssBANK1 0162  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                                    ?_OpenTimer0 0001                                      ?_OpenTimer1 0001  
                        i2c_int_handler@msg_type 00A7                                          ?i1_blip 0001  
                        __end_of_i2c_int_handler 06E2                               timer1_lthread@tptr 010E  
                                        ?_blink0 0001                                recv_msg@maxlength 0102  
                                recv_msg@msgtype 0103                                  recv_msg@tlength 0108  
                          __size_of_handle_start 00CA                                 WriteTimer0@timer 0082  
                                        ?_memcpy 00B8                                 WriteTimer1@timer 0003  
                                  ??_WriteTimer0 0082                                    ??_WriteTimer1 0003  
               __size_of_i_like_to_moveit_moveit 00BC                          __size_of_timer0_lthread 000E  
                        __size_of_timer1_lthread 0062                                       ??i1_memcpy 0007  
                                     ??i2_memcpy 0086                          __end_of_debug_configure 1DA2  
                               i1send_msg@length 000D                                          _SSPCON1 000FC6  
                                        _SSPCON2 000FC5                                          _SSPSTAT 000FC7  
                            __size_of_ReadTimer1 0012                                __end_of_check_msg 1BA2  
                                        i2_blip1 1DDA                                          i2_blip2 1DD2  
                                      ?_init_i2c 00B8                                      _SleepIfOkay 1876  
                              _send_uart_message 1D12                                  __size_ofi1_blip 0008  
                                      ?_recv_msg 0100                                       _in_low_int 1A5E  
                                   _handle_start 1110                                          __Hparam 0000  
                                      ?_send_msg 0100                                          __Lparam 0000  
                             ?_send_uart_message 010E        uart_receive_interrupt_handler@status_1930 002C  
                     __end_of_timer0_int_handler 16EA                      __end_of_FromMainLow_recvmsg 1CA8  
                    __end_of_FromMainLow_sendmsg 1BFE                                          ___awmod 11DA  
                                        ___lwmod 1816                                  __size_of_blink0 0004  
                                __CFG_STVREN$OFF 000000                              ??_send_uart_message 00C4  
                                        __pcinit 192E                                  __size_of_memcpy 0050  
                                     _init_queue 1750                                          __ramtop 0400  
                            __size_of_OpenTimer0 0026                              __size_of_OpenTimer1 0032  
                                        __ptext0 06E2                                          __ptext1 1CF2  
                                        __ptext2 17B4                                          __ptext3 1DE8  
                                        __ptext4 1816                                          __ptext5 1BA2  
                                        __ptext6 1D8A                                          __ptext7 1D32  
                                        __ptext8 18D6                                          __ptext9 1750  
                                      _T0CONbits 000FD5                                        _T1CONbits 000FCD  
                               ___awmod@dividend 00B8                              __end_of_WriteTimer0 1D7A  
                            __end_of_WriteTimer1 1D56                                   main@motor_data 0116  
                                 __pintcode_body 15F6                     __end_of_FromMainHigh_recvmsg 1B3E  
                           end_of_initialization 1974                          timer1_lthread@msgbuffer 0114  
                   __end_of_FromMainHigh_sendmsg 1BD0                       FromMainHigh_sendmsg@length 00C3  
                      __end_of_send_uart_message 1D32                                          memcpy@d 00BE  
                                        memcpy@n 00BC                                          memcpy@s 00C0  
                                     ??_init_i2c 00BA                                     ??i1_recv_msg 0012  
                        __size_of_uart_configure 0020                      i2c_int_handler@data_written 00A2  
                                  __Lmediumconst 0000                                          int_func 15F6  
                                   ??i1_send_msg 0011         uart_receive_interrupt_handler@bad_end_id 0031  
     uart_receive_interrupt_handler@bad_start_id 0030                                 ?_i2c_int_handler 0001  
                                   ??i2_recv_msg 0091                                       ??_recv_msg 00C2  
                                   ??i2_send_msg 0090                                       ??_send_msg 00C2  
uart_receive_interrupt_handler@gooey_uart_center 001D                       __end_of_timer1_int_handler 1C58  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc2 000FDE                        ToMainHigh_sendmsg@msgtype 0096  
         i_like_to_moveit_moveit@left_side_speed 0111                               __end_ofi1_recv_msg 1110  
                             __end_ofi1_send_msg 1422                      FromMainHigh_sendmsg@msgtype 010B  
         __end_of_uart_receive_interrupt_handler 0A88          __size_of_uart_receive_interrupt_handler 018A  
                 _uart_receive_interrupt_handler 08FE                                 ?_debug_configure 0001  
                                      _TRISBbits 000F93                                        _TRISCbits 000F94  
                             __end_ofi2_recv_msg 0D08                                        i1___awmod 14DE  
                             __end_ofi2_send_msg 0F24                                        i2___awmod 129E  
                  FromMainHigh_recvmsg@maxlength 009C                         timer1_int_handler@result 001B  
                                     main@length 013A                                      ?_in_low_int 0082  
                                 __end_ofi1_blip 1DD2                            timer0_lthread@msgtype 00BA  
                          _start_i2c_slave_reply 0F24                     __size_of_i2c_configure_slave 0028  
                       __end_of_enter_sleep_mode 1DE8                                     ??_ReadTimer1 0003  
                        _i_like_to_moveit_moveit 1422                               _ToMainHigh_recvmsg 1AD2  
                                      i1memcpy@d 0007                               _ToMainHigh_sendmsg 1BFE  
                                      i1memcpy@n 0005                                        i1memcpy@s 0009  
                                    _BAUDCONbits 000FB8                                   __end_of_blink0 1DEC  
                                  __pidataCOMRAM 1DEC                                   _timer0_lthread 1D8A  
                                    ?_init_queue 00B8                                        i2memcpy@d 0086  
                                    _WriteTimer0 1D68                                      _WriteTimer1 1D44  
                                      i2memcpy@n 0084                                        i2memcpy@s 0088  
                                 _timer1_lthread 17B4                                   __end_of_memcpy 19CE  
                              _enable_interrupts 1DA2                              ?_ToMainHigh_recvmsg 010C  
                       i2c_int_handler@data_read 00A9                              ?_ToMainHigh_sendmsg 0096  
                             ?_enable_interrupts 0001                              start_initialization 192E  
                                  ??_in_high_int 0082     uart_receive_interrupt_handler@start_byte_bad 0061  
                                     ?i1___awmod 0001                                __size_ofi1_memcpy 0040  
                              __size_ofi2_memcpy 0050                                       ?i2___awmod 0080  
                      FromMainLow_sendmsg@length 00C3                            i2c_int_handler@length 009E  
                            ??_enable_interrupts 00B8                                     ??_OpenTimer0 00B8  
                                   ??_OpenTimer1 00B8                               __end_of_ReadTimer1 1D68  
                uart_receive_interrupt_handler@i 0035                       __size_of_send_uart_message 0020  
                                       ??i1_blip 0001                     __end_of_InterruptHandlerHigh 167C  
                                     init_i2c@ic 00B8                             ??_ToMainHigh_recvmsg 00C4  
                           ??_ToMainHigh_sendmsg 0099           uart_transmit_interrupt_handler@msgtype 0022  
                       i2c_int_handler@need_data 00A4                           __end_of_timer0_lthread 1D98  
                                       ??_blink0 00B8                         i2c_int_handler@error_buf 009F  
                         __end_of_timer1_lthread 1816                               i1___awmod@dividend 0001  
                      __end_of_enable_interrupts 1DAA                                         ??_memcpy 00BE  
                          timer1_lthread@msgtype 0110                             _FromMainHigh_recvmsg 1B08  
            uart_receive_interrupt_handler@frame 0048              uart_receive_interrupt_handler@index 005F  
                           _FromMainHigh_sendmsg 1BA2              uart_receive_interrupt_handler@error 005E  
                   __size_of_init_timer1_lthread 0012                               __end_of_OpenTimer0 1CCE  
                             __end_of_OpenTimer1 1B70                         i2c_int_handler@msg_ready 00A8  
                                    __pbssCOMRAM 0048                                    ??_init_queues 00BB  
                                  __pcstackBANK0 0080                                    __pcstackBANK1 0100  
                            __size_of_in_low_int 003E                         start_i2c_slave_reply@msg 0080  
                            __CFG_CCP2MX$DEFAULT 000000                                         ?i2_blip1 0001  
                                       ?i2_blip2 0001                         ToMainLow_sendmsg@msgtype 0017  
                   __size_of_InterruptHandlerLow 00A8                              __end_of_in_high_int 1D8A  
                                 _uart_configure 1CF2                                     ?_SleepIfOkay 0001  
                          ToMainLow_recvmsg@data 010E                                     _ToMainLow_MQ 0162  
                            __size_of_init_queue 0064                                        _check_msg 1B70  
                                      __pnvBANK0 00C5                           ?_start_i2c_slave_reply 0080  
                              __size_of_init_i2c 0066                                     recv_msg@data 0105  
                      ??_i_like_to_moveit_moveit 00C5                                     recv_msg@qmsg 010A  
                                   recv_msg@slot 0107                                     recv_msg@qptr 0100  
                              __size_of_recv_msg 0142                                        __pintcode 0008  
                              __size_of_send_msg 0110                                         ?___awmod 00B8  
                                ?_timer0_lthread 00B8                                         ?___lwmod 00B8  
                          ?_FromMainHigh_recvmsg 0098                                  ?_timer1_lthread 010E  
                          ?_FromMainHigh_sendmsg 010B                                      __pintcodelo 0018  
                         ToMainHigh_recvmsg@data 010E                       i2c_int_handler@msg_to_send 00A6  
                              WriteTimer0@timer0 0080                               _timer0_int_handler 167C  
                              WriteTimer1@timer1 0001                                      ??i1___awmod 0005  
                          ToMainLow_sendmsg@data 0018                                   __size_of_blip1 0008  
                                 __size_of_blip2 0008                                   __size_of_blip3 0008  
                                    ??i2___awmod 0084                           __end_of_uart_configure 1D12  
                            i1recv_msg@maxlength 000D                              ?_timer0_int_handler 0001  
   uart_receive_interrupt_handler@bad_counter_id 002D                              __end_of_init_queues 192E  
                                       _LATBbits 000F8A                                         _LATDbits 000F8C  
                                     ?_check_msg 0080                                         _IPR1bits 000F9F  
                                       _PIE1bits 000F9D                                         _PIR1bits 000F9E  
                         ToMainHigh_sendmsg@data 0097                                         _RCONbits 000FD0  
                               __CFG_WDTPS$32768 000000                                   i1recv_msg@data 0010  
                           ??_timer0_int_handler 009D                                   i1recv_msg@qmsg 0017  
                                 i1recv_msg@slot 0014                                   i1recv_msg@qptr 000B  
 uart_receive_interrupt_handler@received_counter 0060                     FromMainLow_recvmsg@maxlength 001D  
                     __size_of_enable_interrupts 0008                                i1send_msg@msgtype 000E  
                              i1send_msg@tlength 0012                       FromMainLow_recvmsg@msgtype 0019  
                   __size_of_FromMainLow_recvmsg 0028                     __size_of_FromMainLow_sendmsg 002E  
                           timer0_lthread@length 00BC                               _timer1_int_handler 1C2C  
                                       i1_memcpy 1A1E                             _InterruptHandlerHigh 0008  
                                       i2_memcpy 19CE                  __end_of_i_like_to_moveit_moveit 14DE  
                           timer0_lthread@msgval 00C0                         FromMainHigh_recvmsg@data 009A  
                                    _in_high_int 1D7A                                     send_msg@data 0104  
                            _i2c_configure_slave 1C58                                     send_msg@qmsg 0109  
                                   send_msg@slot 0108                                     send_msg@qptr 0100  
                                ?_uart_configure 0001                              ?_timer1_int_handler 0001  
                             i2___awmod@dividend 0080                                 __size_ofi2_blip1 0008  
                               __size_ofi2_blip2 0008                                         __Hparam0 0000  
                                   ??_in_low_int 0084                                         __Lparam0 0000  
                           ?_i2c_configure_slave 0001                                ?_enter_sleep_mode 0001  
                         ??_FromMainHigh_recvmsg 009C                           ??_FromMainHigh_sendmsg 00C3  
                              i1___awmod@divisor 0003                             ??_timer1_int_handler 001B  
        __end_of_uart_transmit_interrupt_handler 15F6         __size_of_uart_transmit_interrupt_handler 0088  
              ??_uart_transmit_interrupt_handler 001E                 ?_uart_transmit_interrupt_handler 0001  
                _uart_transmit_interrupt_handler 156E                                i1___awmod@counter 0005  
                       __size_of_i2c_int_handler 061E                                 __size_of___awmod 00C4  
                             ??_enter_sleep_mode 0080                                 __size_of___lwmod 0060  
                                   ??_init_queue 00BA                                     ?_WriteTimer0 0080  
                                   ?_WriteTimer1 0001                         FromMainHigh_sendmsg@data 010C  
                        ToMainLow_sendmsg@length 001A                                main@t0thread_data 0135  
                 uart_frame_message@sent_counter 005C                            ?_InterruptHandlerHigh 0001  
            uart_transmit_interrupt_handler@data 001E              uart_transmit_interrupt_handler@done 0063  
                   i_like_to_moveit_moveit@moves 0112                                i2send_msg@msgtype 008D  
                    ToMainHigh_recvmsg@maxlength 00C4                                i2send_msg@tlength 0091  
                        init_timer1_lthread@tptr 00B8                                      _init_queues 18D6  
                             __end_of_in_low_int 1A9C                                         __ptext10 16EA  
                                       __ptext11 1422                                         __ptext20 1DBA  
                                       __ptext12 1D12                                         __ptext21 1DC2  
                                       __ptext13 1BD0                                         __ptext30 156E  
                                       __ptext22 1A9C                                         __ptext14 0D08  
                                       __ptext31 1DCA                                         __ptext23 1AD2  
                                       __ptext15 1C58                                         __ptext40 14DE  
                                       __ptext32 1C80                                         __ptext24 0A88  
                                       __ptext16 1DA2                                         __ptext41 1D56  
                                       __ptext33 1028                                         __ptext25 197E  
                                       __ptext17 1D98                                         __ptext50 1BFE  
                                       __ptext34 08FE                                         __ptext26 11DA  
                                       __ptext18 1DAA                                         __ptext51 0E18  
                                       __ptext43 167C                                         __ptext35 1C2C  
                                       __ptext27 1B3E                                         __ptext19 1DB2  
                                       __ptext60 1B70                                         __ptext52 1B08  
                                       __ptext44 1D68                                         __ptext36 1D44  
                                       __ptext28 1CA8                                         __ptext53 0BCA  
                                       __ptext45 00C4                                         __ptext37 1CCE  
                                       __ptext54 19CE                                         __ptext46 1DD2  
                                       __ptext38 1362                                         __ptext55 129E  
                                       __ptext47 1DDA                                         __ptext39 1A1E  
                                       __ptext56 1876                                         __ptext48 0F24  
                                       __ptext57 1A5E                                         __ptext49 1110  
                                       __ptext58 1D7A                                         __ptext59 1DE2  
                                 i1send_msg@data 000F                                   i1send_msg@qmsg 0015  
                                 i1send_msg@slot 0014                                   i1send_msg@qptr 000B  
                       timer0_int_handler@length 009D                                         _init_i2c 16EA  
                       __size_of_debug_configure 000A                              _init_timer1_lthread 1D32  
                                  __size_of_blip 0008                                    __size_of_main 021C  
                              main@t1thread_data 0138                                      ??_check_msg 0082  
                             __end_of_init_queue 17B4                             __size_of_SleepIfOkay 0060  
                                       _recv_msg 0A88                            ??_i2c_configure_slave 00B8  
                                       _send_msg 0D08    uart_receive_interrupt_handler@bad_checksum_id 0032  
                                 init_queue@qptr 00B8                                   i2recv_msg@data 008F  
                                 i2recv_msg@qmsg 0096                                   i2recv_msg@slot 0093  
                                 i2recv_msg@qptr 008A                                     _SSP1STATbits 000FC7  
                            _InterruptHandlerLow 0018                                         main@poop 0137  
                           ?_init_timer1_lthread 00B8                                i2___awmod@divisor 0082  
                              i2___awmod@counter 0084                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                                         memcpy@d1 00B8  
                                       memcpy@s1 00BA                     i2c_int_handler@overrun_error 00A3  
                               i2send_msg@length 008C                                         intlevel1 0000  
                                       intlevel2 0000                             ?_InterruptHandlerLow 0001  
                        ??_start_i2c_slave_reply 0082                     send_uart_message@message_ptr 010E  
                               ___lwmod@dividend 00B8                                       _RCSTA1bits 000FAB  
                                  ?_handle_start 0001                                 ??_timer0_lthread 00C0  
                    __size_of_ToMainHigh_recvmsg 0036                      __size_of_ToMainHigh_sendmsg 002E  
                                     _OSCCONbits 000FD3                                 ??_timer1_lthread 00C4  
                              i1recv_msg@msgtype 000E                                i1recv_msg@tlength 0015  
                       ToMainHigh_sendmsg@length 0099                            ??_init_timer1_lthread 00BA  
                         ??_InterruptHandlerHigh 00AA                                _ToMainLow_recvmsg 1A9C  
                              _ToMainLow_sendmsg 1CCE                               main@last_reg_recvd 0133  
                                ___lwmod@divisor 00BA                               ?_ToMainLow_recvmsg 010C  
                              ??_i2c_int_handler 009D                                  ___lwmod@counter 00BC  
                             ?_ToMainLow_sendmsg 0017                                      _SSPCON1bits 000FC6  
                                    _SSPCON2bits 000FC5                                   i2send_msg@data 008E  
                          ??_InterruptHandlerLow 0037                              ??_ToMainLow_recvmsg 00C4  
                                 i2send_msg@qmsg 0094                                   i2send_msg@slot 0093  
                                 i2send_msg@qptr 008A                              ??_ToMainLow_sendmsg 001A  
                            _FromMainLow_recvmsg 1C80                                   ??_handle_start 0080  
                            _FromMainLow_sendmsg 1BD0  
