

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 08 23:16:40 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	param0,global,class=BANK0,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  002014                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for uart_transmit_interrupt_handler@done
    88  002014  01                 	db	1
    89  0000                     _BAUDCONbits	set	4024
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATB	set	3978
    93  0000                     _LATBbits	set	3978
    94  0000                     _LATDbits	set	3980
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _OSCTUNEbits	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIR1bits	set	3998
   100  0000                     _RCONbits	set	4048
   101  0000                     _RCREG1	set	4014
   102  0000                     _RCSTA1bits	set	4011
   103  0000                     _SPBRG	set	4015
   104  0000                     _SPBRGH	set	4016
   105  0000                     _SSP1STATbits	set	4039
   106  0000                     _SSPADD	set	4040
   107  0000                     _SSPBUF	set	4041
   108  0000                     _SSPCON1	set	4038
   109  0000                     _SSPCON1bits	set	4038
   110  0000                     _SSPCON2	set	4037
   111  0000                     _SSPCON2bits	set	4037
   112  0000                     _SSPSTAT	set	4039
   113  0000                     _SSPSTATbits	set	4039
   114  0000                     _T0CON	set	4053
   115  0000                     _T0CONbits	set	4053
   116  0000                     _T1CON	set	4045
   117  0000                     _T1CONbits	set	4045
   118  0000                     _TMR0H	set	4055
   119  0000                     _TMR0L	set	4054
   120  0000                     _TMR1H	set	4047
   121  0000                     _TMR1L	set	4046
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISBbits	set	3987
   124  0000                     _TRISCbits	set	3988
   125  0000                     _TRISD	set	3989
   126  0000                     _TXREG1	set	4013
   127  0000                     _TXSTA1bits	set	4012
   128                           
   129                           	psect	nvBANK0
   130  0000C5                     __pnvBANK0:
   131                           	opt stack 0
   132  0000C5                     _ic_ptr:
   133                           	opt stack 0
   134  0000C5                     	ds	2
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  001B4E                     __pcinit:
   140                           	opt stack 0
   141  001B4E                     start_initialization:
   142                           	opt stack 0
   143  001B4E                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to BANK3 (87 bytes)
   147  001B4E  EE03  F000         	lfsr	0,__pbssBANK3
   148  001B52  0E57               	movlw	87
   149  001B54                     clear_0:
   150  001B54  6AEE               	clrf	postinc0,c
   151  001B56  06E8               	decf	wreg,f,c
   152  001B58  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to BANK2 (174 bytes)
   155  001B5A  EE02  F000         	lfsr	0,__pbssBANK2
   156  001B5E  0EAE               	movlw	174
   157  001B60                     clear_1:
   158  001B60  6AEE               	clrf	postinc0,c
   159  001B62  06E8               	decf	wreg,f,c
   160  001B64  E1FD               	bnz	clear_1
   161                           
   162                           ; Clear objects allocated to BANK1 (87 bytes)
   163  001B66  EE01  F074         	lfsr	0,__pbssBANK1
   164  001B6A  0E57               	movlw	87
   165  001B6C                     clear_2:
   166  001B6C  6AEE               	clrf	postinc0,c
   167  001B6E  06E8               	decf	wreg,f,c
   168  001B70  E1FD               	bnz	clear_2
   169                           
   170                           ; Clear objects allocated to BANK0 (1 bytes)
   171  001B72  0100               	movlb	0
   172  001B74  6BC7               	clrf	__pbssBANK0& (0+255),b
   173                           
   174                           ; Clear objects allocated to COMRAM (45 bytes)
   175  001B76  EE00  F048         	lfsr	0,__pbssCOMRAM
   176  001B7A  0E2D               	movlw	45
   177  001B7C                     clear_3:
   178  001B7C  6AEE               	clrf	postinc0,c
   179  001B7E  06E8               	decf	wreg,f,c
   180  001B80  E1FD               	bnz	clear_3
   181                           
   182                           ; Initialize objects allocated to COMRAM (1 bytes)
   183                           ; load TBLPTR registers with __pidataCOMRAM
   184  001B82  0E14               	movlw	low __pidataCOMRAM
   185  001B84  6EF6               	movwf	tblptrl,c
   186  001B86  0E20               	movlw	high __pidataCOMRAM
   187  001B88  6EF7               	movwf	tblptrh,c
   188  001B8A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   189  001B8C  6EF8               	movwf	tblptru,c
   190  001B8E  0009               	tblrd		*+	;fetch initializer
   191  001B90  CFF5 F075          	movff	tablat,__pdataCOMRAM
   192  001B94                     end_of_initialization:
   193                           	opt stack 0
   194  001B94                     __end_of__initialization:
   195                           	opt stack 0
   196  001B94  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197  001B96  6EF8               	movwf	tblptru,c
   198  001B98  0100               	movlb	0
   199  001B9A  EF00  F004         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	bssCOMRAM
   208  000048                     __pbssCOMRAM:
   209                           	opt stack 0
   210  000048                     uart_receive_interrupt_handler@frame:
   211                           	opt stack 0
   212  000048                     	ds	18
   213  00005A                     _need_sensor_data:
   214                           	opt stack 0
   215  00005A                     	ds	2
   216  00005C                     uart_frame_message@sent_counter:
   217                           	opt stack 0
   218  00005C                     	ds	1
   219  00005D                     uart_receive_interrupt_handler@done:
   220                           	opt stack 0
   221  00005D                     	ds	1
   222  00005E                     uart_receive_interrupt_handler@error:
   223                           	opt stack 0
   224  00005E                     	ds	1
   225  00005F                     uart_receive_interrupt_handler@index:
   226                           	opt stack 0
   227  00005F                     	ds	1
   228  000060                     uart_receive_interrupt_handler@received_counter:
   229                           	opt stack 0
   230  000060                     	ds	1
   231  000061                     uart_receive_interrupt_handler@start_byte_bad:
   232                           	opt stack 0
   233  000061                     	ds	1
   234  000062                     uart_transmit_interrupt_handler@index:
   235                           	opt stack 0
   236  000062                     	ds	1
   237  000063                     uart_transmit_interrupt_handler@message:
   238                           	opt stack 0
   239  000063                     	ds	18
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           
   247                           	psect	dataCOMRAM
   248  000075                     __pdataCOMRAM:
   249                           	opt stack 0
   250  000075                     uart_transmit_interrupt_handler@done:
   251                           	opt stack 0
   252  000075                     	ds	1
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           
   260                           	psect	bssBANK0
   261  0000C7                     __pbssBANK0:
   262                           	opt stack 0
   263  0000C7                     _MQ_Main_Willing_to_block:
   264                           	opt stack 0
   265  0000C7                     	ds	1
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           
   273                           	psect	bssBANK1
   274  000174                     __pbssBANK1:
   275                           	opt stack 0
   276  000174                     _ToMainLow_MQ:
   277                           	opt stack 0
   278  000174                     	ds	87
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	bssBANK2
   287  000200                     __pbssBANK2:
   288                           	opt stack 0
   289  000200                     _FromMainLow_MQ:
   290                           	opt stack 0
   291  000200                     	ds	87
   292  000257                     _ToMainHigh_MQ:
   293                           	opt stack 0
   294  000257                     	ds	87
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           
   302                           	psect	bssBANK3
   303  000300                     __pbssBANK3:
   304                           	opt stack 0
   305  000300                     _FromMainHigh_MQ:
   306                           	opt stack 0
   307  000300                     	ds	87
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           
   315                           	psect	cstackBANK1
   316  000100                     __pcstackBANK1:
   317                           	opt stack 0
   318  000100                     send_msg@qptr:
   319                           	opt stack 0
   320  000100                     recv_msg@qptr:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x0
   324  000100                     	ds	2
   325  000102                     send_msg@length:
   326                           	opt stack 0
   327  000102                     recv_msg@maxlength:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x2
   331  000102                     	ds	1
   332  000103                     send_msg@msgtype:
   333                           	opt stack 0
   334  000103                     recv_msg@msgtype:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x3
   338  000103                     	ds	1
   339  000104                     send_msg@data:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x4
   343  000104                     	ds	1
   344  000105                     recv_msg@data:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x5
   348  000105                     	ds	1
   349  000106                     send_msg@tlength:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x6
   353  000106                     	ds	1
   354  000107                     recv_msg@slot:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x7
   358  000107                     	ds	1
   359  000108                     send_msg@slot:
   360                           	opt stack 0
   361  000108                     recv_msg@tlength:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x8
   365  000108                     	ds	1
   366  000109                     send_msg@qmsg:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x9
   370  000109                     	ds	1
   371  00010A                     recv_msg@qmsg:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0xA
   375  00010A                     	ds	1
   376  00010B                     FromMainLow_sendmsg@msgtype:
   377                           	opt stack 0
   378  00010B                     FromMainHigh_sendmsg@msgtype:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0xB
   382  00010B                     	ds	1
   383  00010C                     ToMainLow_recvmsg@msgtype:
   384                           	opt stack 0
   385  00010C                     ToMainHigh_recvmsg@msgtype:
   386                           	opt stack 0
   387  00010C                     FromMainLow_sendmsg@data:
   388                           	opt stack 0
   389  00010C                     FromMainHigh_sendmsg@data:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0xC
   393  00010C                     	ds	2
   394  00010E                     ToMainLow_recvmsg@data:
   395                           	opt stack 0
   396  00010E                     ToMainHigh_recvmsg@data:
   397                           	opt stack 0
   398  00010E                     send_uart_message@message_ptr:
   399                           	opt stack 0
   400  00010E                     timer1_lthread@tptr:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0xE
   404  00010E                     	ds	2
   405  000110                     timer1_lthread@msgtype:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x10
   409  000110                     	ds	2
   410  000112                     timer1_lthread@length:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x12
   414  000112                     	ds	2
   415  000114                     timer1_lthread@msgbuffer:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x14
   419  000114                     	ds	2
   420  000116                     main@motor_data:
   421                           	opt stack 0
   422                           
   423                           ; 14 bytes @ 0x16
   424  000116                     	ds	14
   425  000124                     main@last_reg_recvd:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x24
   429  000124                     	ds	1
   430  000125                     main@need_sensor_data:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x25
   434  000125                     	ds	1
   435  000126                     main@myByte1:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x26
   439  000126                     	ds	1
   440  000127                     main@myByte2:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x27
   444  000127                     	ds	1
   445  000128                     main@msgbuffer:
   446                           	opt stack 0
   447                           
   448                           ; 15 bytes @ 0x28
   449  000128                     	ds	15
   450  000137                     main@t0thread_data:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x37
   454  000137                     	ds	2
   455  000139                     main@uart_response:
   456                           	opt stack 0
   457                           
   458                           ; 14 bytes @ 0x39
   459  000139                     	ds	14
   460  000147                     main@jjj:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x47
   464  000147                     	ds	2
   465  000149                     main@poop:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x49
   469  000149                     	ds	1
   470  00014A                     main@t1thread_data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x4A
   474  00014A                     	ds	2
   475  00014C                     main@length:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x4C
   479  00014C                     	ds	1
   480  00014D                     main@msgtype:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x4D
   484  00014D                     	ds	1
   485  00014E                     main@ic:
   486                           	opt stack 0
   487                           
   488                           ; 38 bytes @ 0x4E
   489  00014E                     	ds	38
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497                           	psect	cstackBANK0
   498  000080                     __pcstackBANK0:
   499                           	opt stack 0
   500  000080                     ?_in_high_int:
   501                           	opt stack 0
   502  000080                     ?i2___awmod:
   503                           	opt stack 0
   504  000080                     handle_start@data_read:
   505                           	opt stack 0
   506  000080                     check_msg@qptr:
   507                           	opt stack 0
   508  000080                     start_i2c_slave_reply@msg:
   509                           	opt stack 0
   510  000080                     WriteTimer0@timer0:
   511                           	opt stack 0
   512  000080                     i2memcpy@d1:
   513                           	opt stack 0
   514  000080                     i2___awmod@dividend:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x0
   518  000080                     	ds	2
   519  000082                     ??_check_msg:
   520  000082                     ??_start_i2c_slave_reply:
   521  000082                     ?_in_low_int:
   522                           	opt stack 0
   523  000082                     WriteTimer0@timer:
   524                           	opt stack 0
   525  000082                     i2memcpy@s1:
   526                           	opt stack 0
   527  000082                     i2___awmod@divisor:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x2
   531  000082                     	ds	2
   532  000084                     start_i2c_slave_reply@length:
   533                           	opt stack 0
   534  000084                     i2___awmod@counter:
   535                           	opt stack 0
   536  000084                     i2memcpy@n:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x4
   540  000084                     	ds	1
   541  000085                     i2___awmod@sign:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x5
   545  000085                     	ds	1
   546  000086                     i2memcpy@d:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x6
   550  000086                     	ds	2
   551  000088                     i2memcpy@s:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x8
   555  000088                     	ds	2
   556  00008A                     i2send_msg@qptr:
   557                           	opt stack 0
   558  00008A                     i2recv_msg@qptr:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0xA
   562  00008A                     	ds	2
   563  00008C                     i2send_msg@length:
   564                           	opt stack 0
   565  00008C                     i2recv_msg@maxlength:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0xC
   569  00008C                     	ds	1
   570  00008D                     i2send_msg@msgtype:
   571                           	opt stack 0
   572  00008D                     i2recv_msg@msgtype:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0xD
   576  00008D                     	ds	1
   577  00008E                     i2send_msg@data:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xE
   581  00008E                     	ds	1
   582  00008F                     i2recv_msg@data:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0xF
   586  00008F                     	ds	1
   587  000090                     ??i2_send_msg:
   588                           
   589                           ; 0 bytes @ 0x10
   590  000090                     	ds	1
   591  000091                     ??i2_recv_msg:
   592  000091                     i2send_msg@tlength:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x11
   596  000091                     	ds	2
   597  000093                     i2send_msg@slot:
   598                           	opt stack 0
   599  000093                     i2recv_msg@slot:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x13
   603  000093                     	ds	1
   604  000094                     i2send_msg@qmsg:
   605                           	opt stack 0
   606  000094                     i2recv_msg@tlength:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x14
   610  000094                     	ds	2
   611  000096                     ToMainHigh_sendmsg@msgtype:
   612                           	opt stack 0
   613  000096                     i2recv_msg@qmsg:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x16
   617  000096                     	ds	1
   618  000097                     ToMainHigh_sendmsg@data:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x17
   622  000097                     	ds	1
   623  000098                     FromMainHigh_recvmsg@msgtype:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x18
   627  000098                     	ds	1
   628  000099                     ToMainHigh_sendmsg@length:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x19
   632  000099                     	ds	1
   633  00009A                     FromMainHigh_recvmsg@data:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x1A
   637  00009A                     	ds	2
   638  00009C                     FromMainHigh_recvmsg@maxlength:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x1C
   642  00009C                     	ds	1
   643  00009D                     ??_i2c_int_handler:
   644  00009D                     timer0_int_handler@length:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x1D
   648  00009D                     	ds	1
   649  00009E                     i2c_int_handler@length:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x1E
   653  00009E                     	ds	1
   654  00009F                     timer0_int_handler@msgtype:
   655                           	opt stack 0
   656  00009F                     i2c_int_handler@error_buf:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x1F
   660  00009F                     	ds	2
   661  0000A1                     timer0_int_handler@val:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x21
   665  0000A1                     	ds	1
   666  0000A2                     i2c_int_handler@data_written:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x22
   670  0000A2                     	ds	1
   671  0000A3                     i2c_int_handler@overrun_error:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x23
   675  0000A3                     	ds	1
   676  0000A4                     i2c_int_handler@need_data:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x24
   680  0000A4                     	ds	1
   681  0000A5                     i2c_int_handler@i2c_data:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x25
   685  0000A5                     	ds	1
   686  0000A6                     i2c_int_handler@msg_to_send:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x26
   690  0000A6                     	ds	1
   691  0000A7                     i2c_int_handler@msg_type:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x27
   695  0000A7                     	ds	1
   696  0000A8                     i2c_int_handler@msg_ready:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x28
   700  0000A8                     	ds	1
   701  0000A9                     i2c_int_handler@data_read:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x29
   705  0000A9                     	ds	1
   706  0000AA                     ??_InterruptHandlerHigh:
   707                           
   708                           ; 0 bytes @ 0x2A
   709  0000AA                     	ds	14
   710  0000B8                     ?___awmod:
   711                           	opt stack 0
   712  0000B8                     ?___lwmod:
   713                           	opt stack 0
   714  0000B8                     i2c_configure_slave@addr:
   715                           	opt stack 0
   716  0000B8                     OpenTimer0@config:
   717                           	opt stack 0
   718  0000B8                     OpenTimer1@config:
   719                           	opt stack 0
   720  0000B8                     init_queue@qptr:
   721                           	opt stack 0
   722  0000B8                     init_i2c@ic:
   723                           	opt stack 0
   724  0000B8                     timer0_lthread@tptr:
   725                           	opt stack 0
   726  0000B8                     init_timer1_lthread@tptr:
   727                           	opt stack 0
   728  0000B8                     ___awmod@dividend:
   729                           	opt stack 0
   730  0000B8                     ___lwmod@dividend:
   731                           	opt stack 0
   732  0000B8                     memcpy@d1:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x38
   736  0000B8                     	ds	2
   737  0000BA                     init_queue@i:
   738                           	opt stack 0
   739  0000BA                     timer0_lthread@msgtype:
   740                           	opt stack 0
   741  0000BA                     ___awmod@divisor:
   742                           	opt stack 0
   743  0000BA                     ___lwmod@divisor:
   744                           	opt stack 0
   745  0000BA                     memcpy@s1:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x3A
   749  0000BA                     	ds	1
   750  0000BB                     
   751                           ; 0 bytes @ 0x3B
   752  0000BB                     	ds	1
   753  0000BC                     ___awmod@counter:
   754                           	opt stack 0
   755  0000BC                     ___lwmod@counter:
   756                           	opt stack 0
   757  0000BC                     timer0_lthread@length:
   758                           	opt stack 0
   759  0000BC                     memcpy@n:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x3C
   763  0000BC                     	ds	1
   764  0000BD                     ___awmod@sign:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x3D
   768  0000BD                     	ds	1
   769  0000BE                     timer0_lthread@msgbuffer:
   770                           	opt stack 0
   771  0000BE                     memcpy@d:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x3E
   775  0000BE                     	ds	2
   776  0000C0                     timer0_lthread@msgval:
   777                           	opt stack 0
   778  0000C0                     memcpy@s:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x40
   782  0000C0                     	ds	2
   783  0000C2                     ??_send_msg:
   784  0000C2                     ??_recv_msg:
   785                           
   786                           ; 0 bytes @ 0x42
   787  0000C2                     	ds	1
   788  0000C3                     FromMainLow_sendmsg@length:
   789                           	opt stack 0
   790  0000C3                     FromMainHigh_sendmsg@length:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x43
   794  0000C3                     	ds	1
   795  0000C4                     ToMainLow_recvmsg@maxlength:
   796                           	opt stack 0
   797  0000C4                     ToMainHigh_recvmsg@maxlength:
   798                           	opt stack 0
   799  0000C4                     send_uart_message@message_q_code:
   800                           	opt stack 0
   801  0000C4                     timer1_lthread@retval:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x44
   805  0000C4                     	ds	1
   806  0000C5                     tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           
   813                           ; 0 bytes @ 0x45
   814                           
   815                           	psect	cstackCOMRAM
   816  000001                     __pcstackCOMRAM:
   817                           	opt stack 0
   818  000001                     ?_ReadTimer1:
   819                           	opt stack 0
   820  000001                     ?i1___awmod:
   821                           	opt stack 0
   822  000001                     uart_frame_message@inner:
   823                           	opt stack 0
   824  000001                     WriteTimer1@timer1:
   825                           	opt stack 0
   826  000001                     i1memcpy@d1:
   827                           	opt stack 0
   828  000001                     i1___awmod@dividend:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x0
   832  000001                     	ds	2
   833  000003                     uart_frame_message@outer:
   834                           	opt stack 0
   835  000003                     ReadTimer1@timer:
   836                           	opt stack 0
   837  000003                     WriteTimer1@timer:
   838                           	opt stack 0
   839  000003                     i1memcpy@s1:
   840                           	opt stack 0
   841  000003                     i1___awmod@divisor:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x2
   845  000003                     	ds	2
   846  000005                     ??_uart_frame_message:
   847  000005                     i1___awmod@counter:
   848                           	opt stack 0
   849  000005                     i1memcpy@n:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x4
   853  000005                     	ds	1
   854  000006                     i1___awmod@sign:
   855                           	opt stack 0
   856                           
   857                           ; 1 bytes @ 0x5
   858  000006                     	ds	1
   859  000007                     uart_frame_message@checksum:
   860                           	opt stack 0
   861  000007                     i1memcpy@d:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x6
   865  000007                     	ds	1
   866  000008                     uart_frame_message@i:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x7
   870  000008                     	ds	1
   871  000009                     i1memcpy@s:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x8
   875  000009                     	ds	2
   876  00000B                     i1send_msg@qptr:
   877                           	opt stack 0
   878  00000B                     i1recv_msg@qptr:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0xA
   882  00000B                     	ds	2
   883  00000D                     i1send_msg@length:
   884                           	opt stack 0
   885  00000D                     i1recv_msg@maxlength:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0xC
   889  00000D                     	ds	1
   890  00000E                     i1send_msg@msgtype:
   891                           	opt stack 0
   892  00000E                     i1recv_msg@msgtype:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0xD
   896  00000E                     	ds	1
   897  00000F                     i1send_msg@data:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0xE
   901  00000F                     	ds	1
   902  000010                     i1recv_msg@data:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0xF
   906  000010                     	ds	1
   907  000011                     ??i1_send_msg:
   908                           
   909                           ; 0 bytes @ 0x10
   910  000011                     	ds	1
   911  000012                     ??i1_recv_msg:
   912  000012                     i1send_msg@tlength:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x11
   916  000012                     	ds	2
   917  000014                     i1send_msg@slot:
   918                           	opt stack 0
   919  000014                     i1recv_msg@slot:
   920                           	opt stack 0
   921                           
   922                           ; 1 bytes @ 0x13
   923  000014                     	ds	1
   924  000015                     i1send_msg@qmsg:
   925                           	opt stack 0
   926  000015                     i1recv_msg@tlength:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x14
   930  000015                     	ds	2
   931  000017                     ToMainLow_sendmsg@msgtype:
   932                           	opt stack 0
   933  000017                     i1recv_msg@qmsg:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x16
   937  000017                     	ds	1
   938  000018                     ToMainLow_sendmsg@data:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x17
   942  000018                     	ds	1
   943  000019                     FromMainLow_recvmsg@msgtype:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x18
   947  000019                     	ds	1
   948  00001A                     ToMainLow_sendmsg@length:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x19
   952  00001A                     	ds	1
   953  00001B                     ??_uart_receive_interrupt_handler:
   954  00001B                     FromMainLow_recvmsg@data:
   955                           	opt stack 0
   956  00001B                     timer1_int_handler@result:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x1A
   960  00001B                     	ds	2
   961  00001D                     FromMainLow_recvmsg@maxlength:
   962                           	opt stack 0
   963  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   964                           	opt stack 0
   965                           
   966                           ; 14 bytes @ 0x1C
   967  00001D                     	ds	1
   968  00001E                     uart_transmit_interrupt_handler@data:
   969                           	opt stack 0
   970                           
   971                           ; 14 bytes @ 0x1D
   972  00001E                     	ds	13
   973  00002B                     uart_receive_interrupt_handler@status:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x2A
   977  00002B                     	ds	1
   978  00002C                     uart_receive_interrupt_handler@status_1822:
   979                           	opt stack 0
   980  00002C                     uart_transmit_interrupt_handler@msgtype:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x2B
   984  00002C                     	ds	1
   985  00002D                     uart_transmit_interrupt_handler@message_status:
   986                           	opt stack 0
   987  00002D                     uart_receive_interrupt_handler@bad_counter_id:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x2C
   991  00002D                     	ds	2
   992  00002F                     uart_receive_interrupt_handler@checksum:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x2E
   996  00002F                     	ds	1
   997  000030                     uart_receive_interrupt_handler@bad_start_id:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x2F
  1001  000030                     	ds	1
  1002  000031                     uart_receive_interrupt_handler@bad_end_id:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x30
  1006  000031                     	ds	1
  1007  000032                     uart_receive_interrupt_handler@bad_checksum_id:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x31
  1011  000032                     	ds	1
  1012  000033                     uart_receive_interrupt_handler@message_count:
  1013                           	opt stack 0
  1014                           
  1015                           ; 1 bytes @ 0x32
  1016  000033                     	ds	1
  1017  000034                     uart_receive_interrupt_handler@msg_id:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x33
  1021  000034                     	ds	1
  1022  000035                     uart_receive_interrupt_handler@i:
  1023                           	opt stack 0
  1024                           
  1025                           ; 2 bytes @ 0x34
  1026  000035                     	ds	2
  1027  000037                     ??_InterruptHandlerLow:
  1028                           
  1029                           ; 0 bytes @ 0x36
  1030  000037                     	ds	17
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           
  1038 ;;
  1039 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1040 ;;
  1041 ;; *************** function _main *****************
  1042 ;; Defined at:
  1043 ;;		line 188 in file "../src/main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  uart_respons   14   57[BANK1 ] unsigned char [14]
  1048 ;;  jjj             2   71[BANK1 ] int 
  1049 ;;  motor_data     14   22[BANK1 ] unsigned char [14]
  1050 ;;  poop            1   73[BANK1 ] unsigned char 
  1051 ;;  ic             38   78[BANK1 ] struct __i2c_comm
  1052 ;;  msgbuffer      15   40[BANK1 ] unsigned char [15]
  1053 ;;  t1thread_dat    2   74[BANK1 ] struct __timer1_thread_s
  1054 ;;  t0thread_dat    2   55[BANK1 ] struct __timer0_thread_s
  1055 ;;  uthread_data    2    0        struct __uart_thread_str
  1056 ;;  msgtype         1   77[BANK1 ] unsigned char 
  1057 ;;  length          1   76[BANK1 ] char 
  1058 ;;  myByte2         1   39[BANK1 ] unsigned char 
  1059 ;;  myByte1         1   38[BANK1 ] unsigned char 
  1060 ;;  need_sensor_    1   37[BANK1 ] unsigned char 
  1061 ;;  last_reg_rec    1   36[BANK1 ] unsigned char 
  1062 ;;  i               1    0        unsigned char 
  1063 ;;  c               1    0        unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;		None               void
  1066 ;; Registers used:
  1067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1073 ;;      Params:         0       0       0       0       0
  1074 ;;      Locals:         0       0      94       0       0
  1075 ;;      Temps:          0       0       0       0       0
  1076 ;;      Totals:         0       0      94       0       0
  1077 ;;Total ram usage:       94 bytes
  1078 ;; Hardware stack levels required when called:   14
  1079 ;; This function calls:
  1080 ;;		_FromMainHigh_sendmsg
  1081 ;;		_OpenTimer0
  1082 ;;		_OpenTimer1
  1083 ;;		_ToMainHigh_recvmsg
  1084 ;;		_ToMainLow_recvmsg
  1085 ;;		_blip
  1086 ;;		_blip1
  1087 ;;		_blip2
  1088 ;;		_blip3
  1089 ;;		_debug_configure
  1090 ;;		_enable_interrupts
  1091 ;;		_i2c_configure_slave
  1092 ;;		_init_i2c
  1093 ;;		_init_queues
  1094 ;;		_init_timer1_lthread
  1095 ;;		_send_uart_message
  1096 ;;		_timer0_lthread
  1097 ;;		_timer1_lthread
  1098 ;;		_uart_configure
  1099 ;; This function is called by:
  1100 ;;		Startup code after reset
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text0
  1105  000800                     __ptext0:
  1106                           	opt stack 0
  1107  000800                     _main:
  1108                           	opt stack 17
  1109                           
  1110                           ;main.c: 189: char c;
  1111                           ;main.c: 190: signed char length;
  1112                           ;main.c: 191: unsigned char msgtype;
  1113                           ;main.c: 192: unsigned char last_reg_recvd;
  1114                           ;main.c: 193: i2c_comm ic;
  1115                           ;main.c: 194: unsigned char msgbuffer[14 + 1];
  1116                           ;main.c: 195: unsigned char i;
  1117                           ;main.c: 196: uart_thread_struct uthread_data;
  1118                           ;main.c: 197: timer1_thread_struct t1thread_data;
  1119                           ;main.c: 198: timer0_thread_struct t0thread_data;
  1120                           ;main.c: 199: unsigned char need_sensor_data = 1;
  1121                           
  1122                           ;incstack = 0
  1123  000800  0E01               	movlw	1
  1124  000802  0101               	movlb	1	; () banked
  1125  000804  6F25               	movwf	main@need_sensor_data& (0+255),b
  1126                           
  1127                           ;main.c: 207: OSCCON = 0x82;
  1128  000806  0E82               	movlw	130
  1129  000808  6ED3               	movwf	4051,c	;volatile
  1130                           
  1131                           ; BSR set to: 1
  1132                           ;main.c: 208: OSCTUNEbits.PLLEN = 0;
  1133  00080A  9C9B               	bcf	3995,6,c	;volatile
  1134                           
  1135                           ; BSR set to: 1
  1136                           ;main.c: 238: init_i2c(&ic);
  1137  00080C  0101               	movlb	1	; () banked
  1138  00080E  0E01               	movlw	high main@ic
  1139  000810  0100               	movlb	0	; () banked
  1140  000812  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
  1141  000814  0101               	movlb	1	; () banked
  1142  000816  0E4E               	movlw	low main@ic
  1143  000818  0100               	movlb	0	; () banked
  1144  00081A  6FB8               	movwf	init_i2c@ic& (0+255),b
  1145  00081C  EC85  F00C         	call	_init_i2c	;wreg free
  1146                           
  1147                           ;main.c: 241: init_timer1_lthread(&t1thread_data);
  1148  000820  0101               	movlb	1	; () banked
  1149  000822  0E01               	movlw	high main@t1thread_data
  1150  000824  0100               	movlb	0	; () banked
  1151  000826  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1152  000828  0101               	movlb	1	; () banked
  1153  00082A  0E4A               	movlw	low main@t1thread_data
  1154  00082C  0100               	movlb	0	; () banked
  1155  00082E  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1156  000830  ECA9  F00F         	call	_init_timer1_lthread	;wreg free
  1157                           
  1158                           ;main.c: 244: init_queues();
  1159  000834  EC7B  F00D         	call	_init_queues	;wreg free
  1160                           
  1161                           ;main.c: 248: TRISB = 0x0;
  1162  000838  0E00               	movlw	0
  1163  00083A  6E93               	movwf	3987,c	;volatile
  1164                           
  1165                           ;main.c: 249: LATB = 0x0;
  1166  00083C  0E00               	movlw	0
  1167  00083E  6E8A               	movwf	3978,c	;volatile
  1168                           
  1169                           ;main.c: 262: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1170  000840  0E96               	movlw	150
  1171  000842  EC64  F00F         	call	_OpenTimer0
  1172                           
  1173                           ;main.c: 271: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1174  000846  0EF5               	movlw	245
  1175  000848  ECAF  F00E         	call	_OpenTimer1
  1176                           
  1177                           ;main.c: 278: IPR1bits.TMR1IP = 0;
  1178  00084C  909F               	bcf	3999,0,c	;volatile
  1179                           
  1180                           ;main.c: 280: IPR1bits.RCIP = 0;
  1181  00084E  9A9F               	bcf	3999,5,c	;volatile
  1182                           
  1183                           ;main.c: 283: IPR1bits.SSPIP = 1;
  1184  000850  869F               	bsf	3999,3,c	;volatile
  1185                           
  1186                           ;main.c: 292: i2c_configure_slave(0x9E);
  1187  000852  0E9E               	movlw	158
  1188  000854  EC3C  F00F         	call	_i2c_configure_slave
  1189                           
  1190                           ;main.c: 307: PIE1bits.SSPIE = 1;
  1191  000858  869D               	bsf	3997,3,c	;volatile
  1192                           
  1193                           ;main.c: 332: debug_configure();
  1194  00085A  ECDC  F00F         	call	_debug_configure	;wreg free
  1195                           
  1196                           ;main.c: 333: blip();
  1197  00085E  ECF1  F00F         	call	_blip	;wreg free
  1198                           
  1199                           ;main.c: 334: blip1();
  1200  000862  ECED  F00F         	call	_blip1	;wreg free
  1201                           
  1202                           ;main.c: 335: blip2();
  1203  000866  ECE9  F00F         	call	_blip2	;wreg free
  1204                           
  1205                           ;main.c: 336: blip3();
  1206  00086A  ECE5  F00F         	call	_blip3	;wreg free
  1207                           
  1208                           ;main.c: 345: enable_interrupts();
  1209  00086E  ECE1  F00F         	call	_enable_interrupts	;wreg free
  1210                           
  1211                           ;main.c: 358: uart_configure();
  1212  000872  EC89  F00F         	call	_uart_configure	;wreg free
  1213                           
  1214                           ;main.c: 360: unsigned char myByte1 = 0x44;
  1215  000876  0E44               	movlw	68
  1216  000878  0101               	movlb	1	; () banked
  1217  00087A  6F26               	movwf	main@myByte1& (0+255),b
  1218                           
  1219                           ; BSR set to: 1
  1220                           ;main.c: 361: unsigned char myByte2 = 0x44;
  1221  00087C  0E44               	movlw	68
  1222  00087E  0101               	movlb	1	; () banked
  1223  000880  6F27               	movwf	main@myByte2& (0+255),b
  1224  000882                     l4194:
  1225                           
  1226                           ;main.c: 381: unsigned char motor_data[14];
  1227                           ;main.c: 384: unsigned char poop;
  1228                           ;main.c: 385: for(poop=0;poop<14;poop++)
  1229  000882  0E00               	movlw	0
  1230  000884  0101               	movlb	1	; () banked
  1231  000886  6F49               	movwf	main@poop& (0+255),b
  1232  000888  D00F               	goto	L2
  1233  00088A                     l4200:
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 386: {
  1237                           ;main.c: 387: motor_data[poop]=0x55;
  1238  00088A  0101               	movlb	1	; () banked
  1239  00088C  5149               	movf	main@poop& (0+255),w,b
  1240  00088E  0D01               	mullw	1
  1241  000890  0101               	movlb	1	; () banked
  1242  000892  0E16               	movlw	low main@motor_data
  1243  000894  24F3               	addwf	prodl,w,c
  1244  000896  6ED9               	movwf	fsr2l,c
  1245  000898  0101               	movlb	1	; () banked
  1246  00089A  0E01               	movlw	high main@motor_data
  1247  00089C  20F4               	addwfc	prodh,w,c
  1248  00089E  6EDA               	movwf	fsr2h,c
  1249  0008A0  0E55               	movlw	85
  1250  0008A2  6EDF               	movwf	indf2,c
  1251                           
  1252                           ; BSR set to: 1
  1253  0008A4  0101               	movlb	1	; () banked
  1254  0008A6  2B49               	incf	main@poop& (0+255),f,b
  1255  0008A8                     L2:
  1256                           
  1257                           ; BSR set to: 1
  1258  0008A8  0E0D               	movlw	13
  1259  0008AA  0101               	movlb	1	; () banked
  1260  0008AC  6549               	cpfsgt	main@poop& (0+255),b
  1261  0008AE  D7ED               	goto	l4200
  1262                           
  1263                           ; BSR set to: 1
  1264                           ;main.c: 388: }
  1265                           ;main.c: 395: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1266                           
  1267                           ; BSR set to: 1
  1268  0008B0  0101               	movlb	1	; () banked
  1269  0008B2  0E01               	movlw	high main@msgtype
  1270  0008B4  0101               	movlb	1	; () banked
  1271  0008B6  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1272  0008B8  0101               	movlb	1	; () banked
  1273  0008BA  0E4D               	movlw	low main@msgtype
  1274  0008BC  0101               	movlb	1	; () banked
  1275  0008BE  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1276  0008C0  0101               	movlb	1	; () banked
  1277  0008C2  0E01               	movlw	high main@msgbuffer
  1278  0008C4  0101               	movlb	1	; () banked
  1279  0008C6  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1280  0008C8  0101               	movlb	1	; () banked
  1281  0008CA  0E28               	movlw	low main@msgbuffer
  1282  0008CC  0101               	movlb	1	; () banked
  1283  0008CE  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1284  0008D0  0E0E               	movlw	14
  1285  0008D2  EC79  F00E         	call	_ToMainHigh_recvmsg
  1286  0008D6  0101               	movlb	1	; () banked
  1287  0008D8  6F4C               	movwf	main@length& (0+255),b
  1288                           
  1289                           ; BSR set to: 1
  1290                           ;main.c: 396: if (length < 0) {
  1291  0008DA  0101               	movlb	1	; () banked
  1292  0008DC  BF4C               	btfsc	main@length& (0+255),7,b
  1293  0008DE  D043               	goto	l4220
  1294  0008E0  D034               	goto	l4218
  1295  0008E2                     l4212:
  1296                           
  1297                           ; BSR set to: 1
  1298                           ;main.c: 406: {
  1299                           ;main.c: 407: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1300  0008E2  0101               	movlb	1	; () banked
  1301  0008E4  0E01               	movlw	high main@t0thread_data
  1302  0008E6  0100               	movlb	0	; () banked
  1303  0008E8  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1304  0008EA  0101               	movlb	1	; () banked
  1305  0008EC  0E37               	movlw	low main@t0thread_data
  1306  0008EE  0100               	movlb	0	; () banked
  1307  0008F0  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1308  0008F2  0101               	movlb	1	; () banked
  1309  0008F4  0100               	movlb	0	; () banked
  1310  0008F6  C14D  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1311  0008FA  0100               	movlb	0	; () banked
  1312  0008FC  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1313  0008FE  0101               	movlb	1	; () banked
  1314  000900  514C               	movf	main@length& (0+255),w,b
  1315  000902  0100               	movlb	0	; () banked
  1316  000904  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1317  000906  0100               	movlb	0	; () banked
  1318  000908  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1319  00090A  0100               	movlb	0	; () banked
  1320  00090C  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1321  00090E  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1322  000910  0101               	movlb	1	; () banked
  1323  000912  0E01               	movlw	high main@msgbuffer
  1324  000914  0100               	movlb	0	; () banked
  1325  000916  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1326  000918  0101               	movlb	1	; () banked
  1327  00091A  0E28               	movlw	low main@msgbuffer
  1328  00091C  0100               	movlb	0	; () banked
  1329  00091E  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1330  000920  ECD5  F00F         	call	_timer0_lthread	;wreg free
  1331                           
  1332                           ;main.c: 408: break;
  1333  000924  D020               	goto	l4220
  1334  000926                     l115:
  1335                           
  1336                           ;main.c: 411: case 41:
  1337                           ;main.c: 412: {
  1338                           ;main.c: 415: last_reg_recvd = msgbuffer[0];
  1339  000926  C128  F124         	movff	main@msgbuffer,main@last_reg_recvd
  1340                           
  1341                           ;main.c: 416: break;
  1342  00092A  D01D               	goto	l4220
  1343  00092C                     l4214:
  1344                           
  1345                           ;main.c: 419: {
  1346                           ;main.c: 420: FromMainHigh_sendmsg(14,40,(void *) motor_data);
  1347  00092C  0E28               	movlw	40
  1348  00092E  0101               	movlb	1	; () banked
  1349  000930  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1350  000932  0101               	movlb	1	; () banked
  1351  000934  0E01               	movlw	high main@motor_data
  1352  000936  0101               	movlb	1	; () banked
  1353  000938  6F0D               	movwf	(FromMainHigh_sendmsg@data+1)& (0+255),b
  1354  00093A  0101               	movlb	1	; () banked
  1355  00093C  0E16               	movlw	low main@motor_data
  1356  00093E  0101               	movlb	1	; () banked
  1357  000940  6F0C               	movwf	FromMainHigh_sendmsg@data& (0+255),b
  1358  000942  0E0E               	movlw	14
  1359  000944  ECE1  F00E         	call	_FromMainHigh_sendmsg
  1360                           
  1361                           ;main.c: 422: break;
  1362  000948  D00E               	goto	l4220
  1363  00094A                     l4218:
  1364  00094A  0101               	movlb	1	; () banked
  1365  00094C  514D               	movf	main@msgtype& (0+255),w,b
  1366                           
  1367                           ; Switch size 1, requested type "space"
  1368                           ; Number of cases is 4, Range of values is 10 to 42
  1369                           ; switch strategies available:
  1370                           ; Name         Instructions Cycles
  1371                           ; simple_byte           13     7 (average)
  1372                           ;	Chosen strategy is simple_byte
  1373  00094E  0A0A               	xorlw	10	; case 10
  1374  000950  B4D8               	btfsc	status,2,c
  1375  000952  D7C7               	goto	l4212
  1376  000954  0A22               	xorlw	34	; case 40
  1377  000956  B4D8               	btfsc	status,2,c
  1378  000958  D7E6               	goto	l115
  1379  00095A  0A01               	xorlw	1	; case 41
  1380  00095C  B4D8               	btfsc	status,2,c
  1381  00095E  D7E3               	goto	l115
  1382  000960  0A03               	xorlw	3	; case 42
  1383  000962  B4D8               	btfsc	status,2,c
  1384  000964  D7E3               	goto	l4214
  1385  000966                     l4220:
  1386                           
  1387                           ;main.c: 430: }
  1388                           ;main.c: 433: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1389  000966  0101               	movlb	1	; () banked
  1390  000968  0E01               	movlw	high main@msgtype
  1391  00096A  0101               	movlb	1	; () banked
  1392  00096C  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1393  00096E  0101               	movlb	1	; () banked
  1394  000970  0E4D               	movlw	low main@msgtype
  1395  000972  0101               	movlb	1	; () banked
  1396  000974  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1397  000976  0101               	movlb	1	; () banked
  1398  000978  0E01               	movlw	high main@msgbuffer
  1399  00097A  0101               	movlb	1	; () banked
  1400  00097C  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1401  00097E  0101               	movlb	1	; () banked
  1402  000980  0E28               	movlw	low main@msgbuffer
  1403  000982  0101               	movlb	1	; () banked
  1404  000984  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1405  000986  0E0E               	movlw	14
  1406  000988  EC5E  F00E         	call	_ToMainLow_recvmsg
  1407  00098C  0101               	movlb	1	; () banked
  1408  00098E  6F4C               	movwf	main@length& (0+255),b
  1409                           
  1410                           ; BSR set to: 1
  1411                           ;main.c: 434: if (length < 0) {
  1412  000990  0101               	movlb	1	; () banked
  1413  000992  BF4C               	btfsc	main@length& (0+255),7,b
  1414  000994  D776               	goto	l4194
  1415                           
  1416                           ; BSR set to: 1
  1417                           ;main.c: 440: else
  1418                           ;main.c: 441: {
  1419                           ;main.c: 442: unsigned char uart_response[14];
  1420                           ;main.c: 443: int jjj;
  1421                           ;main.c: 444: for(jjj=0;jjj<14;jjj++)
  1422                           
  1423                           ; BSR set to: 1
  1424                           
  1425                           ; BSR set to: 1
  1426                           ;main.c: 438: }
  1427                           ;main.c: 439: }
  1428                           
  1429                           ; BSR set to: 1
  1430  000996  0E00               	movlw	0
  1431  000998  0101               	movlb	1	; () banked
  1432  00099A  6F48               	movwf	(main@jjj+1)& (0+255),b
  1433  00099C  0E00               	movlw	0
  1434  00099E  0101               	movlb	1	; () banked
  1435  0009A0  6F47               	movwf	main@jjj& (0+255),b
  1436  0009A2                     
  1437                           ; BSR set to: 1
  1438  0009A2  0101               	movlb	1	; () banked
  1439  0009A4  5148               	movf	(main@jjj+1)& (0+255),w,b
  1440  0009A6  0A80               	xorlw	128
  1441  0009A8  0F80               	addlw	-128
  1442  0009AA  0E0E               	movlw	14
  1443  0009AC  B4D8               	btfsc	status,2,c
  1444  0009AE  5D47               	subwf	main@jjj& (0+255),w,b
  1445  0009B0  B0D8               	btfsc	status,0,c
  1446  0009B2  D083               	goto	l4276
  1447                           
  1448                           ; BSR set to: 1
  1449                           ;main.c: 445: {
  1450                           ;main.c: 446: uart_response[jjj] = 0;
  1451                           
  1452                           ; BSR set to: 1
  1453                           
  1454                           ; BSR set to: 1
  1455  0009B4  0101               	movlb	1	; () banked
  1456  0009B6  0E39               	movlw	low main@uart_response
  1457  0009B8  0101               	movlb	1	; () banked
  1458  0009BA  2547               	addwf	main@jjj& (0+255),w,b
  1459  0009BC  6ED9               	movwf	fsr2l,c
  1460  0009BE  0101               	movlb	1	; () banked
  1461  0009C0  0E01               	movlw	high main@uart_response
  1462  0009C2  0101               	movlb	1	; () banked
  1463  0009C4  2148               	addwfc	(main@jjj+1)& (0+255),w,b
  1464  0009C6  6EDA               	movwf	fsr2h,c
  1465  0009C8  0E00               	movlw	0
  1466  0009CA  6EDF               	movwf	indf2,c
  1467                           
  1468                           ; BSR set to: 1
  1469  0009CC  0101               	movlb	1	; () banked
  1470  0009CE  4B47               	infsnz	main@jjj& (0+255),f,b
  1471  0009D0  2B48               	incf	(main@jjj+1)& (0+255),f,b
  1472  0009D2  D7E7               	goto	L1
  1473  0009D4                     l4238:
  1474                           
  1475                           ; BSR set to: 1
  1476                           ;main.c: 451: {
  1477                           ;main.c: 452: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1478  0009D4  0101               	movlb	1	; () banked
  1479  0009D6  0E01               	movlw	high main@t1thread_data
  1480  0009D8  0101               	movlb	1	; () banked
  1481  0009DA  6F0F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1482  0009DC  0101               	movlb	1	; () banked
  1483  0009DE  0E4A               	movlw	low main@t1thread_data
  1484  0009E0  0101               	movlb	1	; () banked
  1485  0009E2  6F0E               	movwf	timer1_lthread@tptr& (0+255),b
  1486  0009E4  0101               	movlb	1	; () banked
  1487  0009E6  C14D  F110         	movff	main@msgtype,timer1_lthread@msgtype
  1488  0009EA  0101               	movlb	1	; () banked
  1489  0009EC  6B11               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1490  0009EE  0101               	movlb	1	; () banked
  1491  0009F0  514C               	movf	main@length& (0+255),w,b
  1492  0009F2  0101               	movlb	1	; () banked
  1493  0009F4  6F12               	movwf	timer1_lthread@length& (0+255),b
  1494  0009F6  0101               	movlb	1	; () banked
  1495  0009F8  6B13               	clrf	(timer1_lthread@length+1)& (0+255),b
  1496  0009FA  0101               	movlb	1	; () banked
  1497  0009FC  BF12               	btfsc	timer1_lthread@length& (0+255),7,b
  1498  0009FE  0713               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1499  000A00  0101               	movlb	1	; () banked
  1500  000A02  0E01               	movlw	high main@msgbuffer
  1501  000A04  0101               	movlb	1	; () banked
  1502  000A06  6F15               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1503  000A08  0101               	movlb	1	; () banked
  1504  000A0A  0E28               	movlw	low main@msgbuffer
  1505  000A0C  0101               	movlb	1	; () banked
  1506  000A0E  6F14               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1507  000A10  ECEA  F00C         	call	_timer1_lthread	;wreg free
  1508                           
  1509                           ;main.c: 453: break;
  1510  000A14  D736               	goto	l4194
  1511  000A16                     l4240:
  1512                           
  1513                           ;main.c: 458: {
  1514                           ;main.c: 459: uart_response[0] = 0xf1;
  1515  000A16  0EF1               	movlw	241
  1516  000A18  0101               	movlb	1	; () banked
  1517  000A1A  6F39               	movwf	main@uart_response& (0+255),b
  1518                           
  1519                           ; BSR set to: 1
  1520                           ;main.c: 460: uart_response[1] = msgbuffer[0];
  1521  000A1C  C128  F13A         	movff	main@msgbuffer,main@uart_response+1
  1522                           
  1523                           ; BSR set to: 1
  1524                           ;main.c: 461: send_uart_message( uart_response );
  1525  000A20  0101               	movlb	1	; () banked
  1526  000A22  0E01               	movlw	high main@uart_response
  1527  000A24  0101               	movlb	1	; () banked
  1528  000A26  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1529  000A28  0101               	movlb	1	; () banked
  1530  000A2A  0E39               	movlw	low main@uart_response
  1531  000A2C  0101               	movlb	1	; () banked
  1532  000A2E  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1533  000A30  EC99  F00F         	call	_send_uart_message	;wreg free
  1534                           
  1535                           ;main.c: 462: break;
  1536  000A34  D726               	goto	l4194
  1537  000A36                     l4246:
  1538                           
  1539                           ;main.c: 465: {
  1540                           ;main.c: 466: uart_response[0] = 0xf2;
  1541  000A36  0EF2               	movlw	242
  1542  000A38  0101               	movlb	1	; () banked
  1543  000A3A  6F39               	movwf	main@uart_response& (0+255),b
  1544                           
  1545                           ; BSR set to: 1
  1546                           ;main.c: 467: uart_response[1] = msgbuffer[0];
  1547  000A3C  C128  F13A         	movff	main@msgbuffer,main@uart_response+1
  1548                           
  1549                           ; BSR set to: 1
  1550                           ;main.c: 468: uart_response[2] = msgbuffer[1];
  1551  000A40  C129  F13B         	movff	main@msgbuffer+1,main@uart_response+2
  1552                           
  1553                           ; BSR set to: 1
  1554                           ;main.c: 469: send_uart_message( uart_response );
  1555  000A44  0101               	movlb	1	; () banked
  1556  000A46  0E01               	movlw	high main@uart_response
  1557  000A48  0101               	movlb	1	; () banked
  1558  000A4A  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1559  000A4C  0101               	movlb	1	; () banked
  1560  000A4E  0E39               	movlw	low main@uart_response
  1561  000A50  0101               	movlb	1	; () banked
  1562  000A52  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1563  000A54  EC99  F00F         	call	_send_uart_message	;wreg free
  1564                           
  1565                           ;main.c: 470: break;
  1566  000A58  D714               	goto	l4194
  1567  000A5A                     l4254:
  1568                           
  1569                           ;main.c: 473: {
  1570                           ;main.c: 474: uart_response[0] = 0xf3;
  1571  000A5A  0EF3               	movlw	243
  1572  000A5C  0101               	movlb	1	; () banked
  1573  000A5E  6F39               	movwf	main@uart_response& (0+255),b
  1574                           
  1575                           ; BSR set to: 1
  1576                           ;main.c: 475: uart_response[1] = msgbuffer[0];
  1577  000A60  C128  F13A         	movff	main@msgbuffer,main@uart_response+1
  1578                           
  1579                           ; BSR set to: 1
  1580                           ;main.c: 476: send_uart_message( uart_response );
  1581  000A64  0101               	movlb	1	; () banked
  1582  000A66  0E01               	movlw	high main@uart_response
  1583  000A68  0101               	movlb	1	; () banked
  1584  000A6A  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1585  000A6C  0101               	movlb	1	; () banked
  1586  000A6E  0E39               	movlw	low main@uart_response
  1587  000A70  0101               	movlb	1	; () banked
  1588  000A72  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1589  000A74  EC99  F00F         	call	_send_uart_message	;wreg free
  1590                           
  1591                           ;main.c: 477: break;
  1592  000A78  D704               	goto	l4194
  1593  000A7A                     l4260:
  1594                           
  1595                           ;main.c: 480: {
  1596                           ;main.c: 481: uart_response[0] = 0xf4;
  1597  000A7A  0EF4               	movlw	244
  1598  000A7C  0101               	movlb	1	; () banked
  1599  000A7E  6F39               	movwf	main@uart_response& (0+255),b
  1600                           
  1601                           ; BSR set to: 1
  1602                           ;main.c: 482: uart_response[1] = msgbuffer[0];
  1603  000A80  C128  F13A         	movff	main@msgbuffer,main@uart_response+1
  1604                           
  1605                           ; BSR set to: 1
  1606                           ;main.c: 483: send_uart_message( uart_response );
  1607  000A84  0101               	movlb	1	; () banked
  1608  000A86  0E01               	movlw	high main@uart_response
  1609  000A88  0101               	movlb	1	; () banked
  1610  000A8A  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1611  000A8C  0101               	movlb	1	; () banked
  1612  000A8E  0E39               	movlw	low main@uart_response
  1613  000A90  0101               	movlb	1	; () banked
  1614  000A92  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1615  000A94  EC99  F00F         	call	_send_uart_message	;wreg free
  1616                           
  1617                           ;main.c: 484: break;
  1618  000A98  D6F4               	goto	l4194
  1619  000A9A                     l4266:
  1620                           
  1621                           ;main.c: 488: {
  1622                           ;main.c: 489: uart_response[0] = 0x11;
  1623  000A9A  0E11               	movlw	17
  1624  000A9C  0101               	movlb	1	; () banked
  1625  000A9E  6F39               	movwf	main@uart_response& (0+255),b
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1629  000AA0  C128  F13A         	movff	main@msgbuffer,main@uart_response+1
  1630                           
  1631                           ; BSR set to: 1
  1632                           ;main.c: 491: send_uart_message( uart_response );
  1633  000AA4  0101               	movlb	1	; () banked
  1634  000AA6  0E01               	movlw	high main@uart_response
  1635  000AA8  0101               	movlb	1	; () banked
  1636  000AAA  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1637  000AAC  0101               	movlb	1	; () banked
  1638  000AAE  0E39               	movlw	low main@uart_response
  1639  000AB0  0101               	movlb	1	; () banked
  1640  000AB2  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1641  000AB4  EC99  F00F         	call	_send_uart_message	;wreg free
  1642                           
  1643                           ;main.c: 492: break;
  1644  000AB8  D6E4               	goto	l4194
  1645  000ABA                     l4276:
  1646  000ABA  0101               	movlb	1	; () banked
  1647  000ABC  514D               	movf	main@msgtype& (0+255),w,b
  1648                           
  1649                           ; Switch size 1, requested type "space"
  1650                           ; Number of cases is 8, Range of values is 11 to 36
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte           25    13 (average)
  1654                           ;	Chosen strategy is simple_byte
  1655  000ABE  0A0B               	xorlw	11	; case 11
  1656  000AC0  B4D8               	btfsc	status,2,c
  1657  000AC2  D788               	goto	l4238
  1658  000AC4  0A15               	xorlw	21	; case 30
  1659  000AC6  B4D8               	btfsc	status,2,c
  1660  000AC8  D7A6               	goto	l4240
  1661  000ACA  0A01               	xorlw	1	; case 31
  1662  000ACC  B4D8               	btfsc	status,2,c
  1663  000ACE  D6D9               	goto	l4194
  1664  000AD0  0A3F               	xorlw	63	; case 32
  1665  000AD2  B4D8               	btfsc	status,2,c
  1666  000AD4  D7A0               	goto	l4240
  1667  000AD6  0A01               	xorlw	1	; case 33
  1668  000AD8  B4D8               	btfsc	status,2,c
  1669  000ADA  D7AD               	goto	l4246
  1670  000ADC  0A03               	xorlw	3	; case 34
  1671  000ADE  B4D8               	btfsc	status,2,c
  1672  000AE0  D7BC               	goto	l4254
  1673  000AE2  0A01               	xorlw	1	; case 35
  1674  000AE4  B4D8               	btfsc	status,2,c
  1675  000AE6  D7C9               	goto	l4260
  1676  000AE8  0A07               	xorlw	7	; case 36
  1677  000AEA  B4D8               	btfsc	status,2,c
  1678  000AEC  D7D6               	goto	l4266
  1679  000AEE  D6C9               	goto	l4194
  1680  000AF0                     __end_of_main:
  1681                           	opt stack 0
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           prodh	equ	0xFF4
  1687                           prodl	equ	0xFF3
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           indf2	equ	0xFDF
  1691                           fsr2h	equ	0xFDA
  1692                           fsr2l	equ	0xFD9
  1693                           status	equ	0xFD8
  1694                           
  1695 ;; *************** function _uart_configure *****************
  1696 ;; Defined at:
  1697 ;;		line 22 in file "../src/my_uart.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;		None               void
  1704 ;; Registers used:
  1705 ;;		wreg, status,2
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:   10
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text1
  1726  001F12                     __ptext1:
  1727                           	opt stack 0
  1728  001F12                     _uart_configure:
  1729                           	opt stack 20
  1730                           
  1731                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1732                           
  1733                           ; BSR set to: 1
  1734                           ;incstack = 0
  1735  001F12  8E94               	bsf	3988,7,c	;volatile
  1736                           
  1737                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1738  001F14  9C94               	bcf	3988,6,c	;volatile
  1739                           
  1740                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1741  001F16  86B8               	bsf	4024,3,c	;volatile
  1742                           
  1743                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1744  001F18  84AC               	bsf	4012,2,c	;volatile
  1745                           
  1746                           ;my_uart.c: 36: SPBRGH = 0x00;
  1747  001F1A  0E00               	movlw	0
  1748  001F1C  6EB0               	movwf	4016,c	;volatile
  1749                           
  1750                           ;my_uart.c: 37: SPBRG= 0xCF;
  1751  001F1E  0ECF               	movlw	207
  1752  001F20  6EAF               	movwf	4015,c	;volatile
  1753                           
  1754                           ;my_uart.c: 41: TXSTA1bits.SYNC = 0;
  1755  001F22  98AC               	bcf	4012,4,c	;volatile
  1756                           
  1757                           ;my_uart.c: 42: RCSTA1bits.SPEN = 1;
  1758  001F24  8EAB               	bsf	4011,7,c	;volatile
  1759                           
  1760                           ;my_uart.c: 45: IPR1bits.TX1IP = 0;
  1761  001F26  989F               	bcf	3999,4,c	;volatile
  1762                           
  1763                           ;my_uart.c: 47: PIE1bits.TX1IE = 0;
  1764  001F28  989D               	bcf	3997,4,c	;volatile
  1765                           
  1766                           ;my_uart.c: 48: PIE1bits.RC1IE = 1;
  1767  001F2A  8A9D               	bsf	3997,5,c	;volatile
  1768                           
  1769                           ;my_uart.c: 50: TXSTA1bits.TXEN = 1;
  1770  001F2C  8AAC               	bsf	4012,5,c	;volatile
  1771                           
  1772                           ;my_uart.c: 51: RCSTA1bits.CREN = 1;
  1773  001F2E  88AB               	bsf	4011,4,c	;volatile
  1774  001F30  0012               	return	
  1775  001F32                     __end_of_uart_configure:
  1776                           	opt stack 0
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           prodh	equ	0xFF4
  1782                           prodl	equ	0xFF3
  1783                           postinc0	equ	0xFEE
  1784                           wreg	equ	0xFE8
  1785                           indf2	equ	0xFDF
  1786                           fsr2h	equ	0xFDA
  1787                           fsr2l	equ	0xFD9
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _timer1_lthread *****************
  1791 ;; Defined at:
  1792 ;;		line 15 in file "../src/timer1_thread.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1795 ;;		 -> main@t1thread_data(2), 
  1796 ;;  msgtype         2   16[BANK1 ] int 
  1797 ;;  length          2   18[BANK1 ] int 
  1798 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1799 ;;		 -> main@msgbuffer(15), 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  retval          1   68[BANK0 ] char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  2   14[BANK1 ] int 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1811 ;;      Params:         0       0       8       0       0
  1812 ;;      Locals:         0       1       0       0       0
  1813 ;;      Temps:          0       0       0       0       0
  1814 ;;      Totals:         0       1       8       0       0
  1815 ;;Total ram usage:        9 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:   13
  1818 ;; This function calls:
  1819 ;;		_FromMainHigh_sendmsg
  1820 ;;		___lwmod
  1821 ;;		_blink0
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text2
  1828  0019D4                     __ptext2:
  1829                           	opt stack 0
  1830  0019D4                     _timer1_lthread:
  1831                           	opt stack 17
  1832                           
  1833                           ;timer1_thread.c: 16: signed char retval;
  1834                           ;timer1_thread.c: 18: blink0();
  1835                           
  1836                           ;incstack = 0
  1837  0019D4  EC08  F010         	call	_blink0	;wreg free
  1838                           
  1839                           ;timer1_thread.c: 20: tptr->msgcount++;
  1840  0019D8  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1841  0019DC  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1842  0019E0  2ADE               	incf	postinc2,f,c
  1843  0019E2  0E00               	movlw	0
  1844  0019E4  22DD               	addwfc	postdec2,f,c
  1845                           
  1846                           ;timer1_thread.c: 23: if ((tptr->msgcount % 10) == 9) {
  1847  0019E6  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1848  0019EA  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1849  0019EE  0100               	movlb	0	; () banked
  1850  0019F0  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1851  0019F4  0100               	movlb	0	; () banked
  1852  0019F6  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1853  0019FA  0E00               	movlw	0
  1854  0019FC  0100               	movlb	0	; () banked
  1855  0019FE  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1856  001A00  0E0A               	movlw	10
  1857  001A02  0100               	movlb	0	; () banked
  1858  001A04  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1859  001A06  EC1B  F00D         	call	___lwmod	;wreg free
  1860  001A0A  0100               	movlb	0	; () banked
  1861  001A0C  51B8               	movf	?___lwmod& (0+255),w,b
  1862  001A0E  0A09               	xorlw	9
  1863  001A10  0100               	movlb	0	; () banked
  1864  001A12  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1865  001A14  A4D8               	btfss	status,2,c
  1866  001A16  0012               	return	
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;timer1_thread.c: 24: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1870  001A18  0E14               	movlw	20
  1871  001A1A  0101               	movlb	1	; () banked
  1872  001A1C  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1873  001A1E  0101               	movlb	1	; () banked
  1874  001A20  C10F  F10D         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1875  001A24  0101               	movlb	1	; () banked
  1876  001A26  C10E  F10C         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1877  001A2A  0E02               	movlw	2
  1878  001A2C  ECE1  F00E         	call	_FromMainHigh_sendmsg
  1879  001A30  0100               	movlb	0	; () banked
  1880  001A32  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1881  001A34  0012               	return	
  1882  001A36                     __end_of_timer1_lthread:
  1883                           	opt stack 0
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           prodh	equ	0xFF4
  1889                           prodl	equ	0xFF3
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           indf2	equ	0xFDF
  1893                           postinc2	equ	0xFDE
  1894                           postdec2	equ	0xFDD
  1895                           fsr2h	equ	0xFDA
  1896                           fsr2l	equ	0xFD9
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _blink0 *****************
  1900 ;; Defined at:
  1901 ;;		line 46 in file "../src/debug.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;		None               void
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1915 ;;      Params:         0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0
  1918 ;;      Totals:         0       0       0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:   10
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_timer1_lthread
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text3
  1930  002010                     __ptext3:
  1931                           	opt stack 0
  1932  002010                     _blink0:
  1933                           	opt stack 19
  1934                           
  1935                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;incstack = 0
  1939  002010  708A               	btg	3978,0,c	;volatile
  1940  002012  0012               	return	
  1941  002014                     __end_of_blink0:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodh	equ	0xFF4
  1948                           prodl	equ	0xFF3
  1949                           postinc0	equ	0xFEE
  1950                           wreg	equ	0xFE8
  1951                           indf2	equ	0xFDF
  1952                           postinc2	equ	0xFDE
  1953                           postdec2	equ	0xFDD
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function ___lwmod *****************
  1959 ;; Defined at:
  1960 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  dividend        2   56[BANK0 ] unsigned int 
  1963 ;;  divisor         2   58[BANK0 ] unsigned int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  counter         1   60[BANK0 ] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  2   56[BANK0 ] unsigned int 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1975 ;;      Params:         0       4       0       0       0
  1976 ;;      Locals:         0       1       0       0       0
  1977 ;;      Temps:          0       0       0       0       0
  1978 ;;      Totals:         0       5       0       0       0
  1979 ;;Total ram usage:        5 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:   10
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_timer1_lthread
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text4
  1990  001A36                     __ptext4:
  1991                           	opt stack 0
  1992  001A36                     ___lwmod:
  1993                           	opt stack 19
  1994                           
  1995                           ;incstack = 0
  1996  001A36  0100               	movlb	0	; () banked
  1997  001A38  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1998  001A3A  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  1999  001A3C  B4D8               	btfsc	status,2,c
  2000  001A3E  D026               	goto	l1113
  2001                           
  2002                           ; BSR set to: 0
  2003  001A40  0E01               	movlw	1
  2004  001A42  0100               	movlb	0	; () banked
  2005  001A44  6FBC               	movwf	___lwmod@counter& (0+255),b
  2006  001A46  D006               	goto	l3738
  2007  001A48                     l3736:
  2008                           
  2009                           ; BSR set to: 0
  2010  001A48  0100               	movlb	0	; () banked
  2011  001A4A  90D8               	bcf	status,0,c
  2012  001A4C  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  2013  001A4E  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2014  001A50  0100               	movlb	0	; () banked
  2015  001A52  2BBC               	incf	___lwmod@counter& (0+255),f,b
  2016  001A54                     l3738:
  2017                           
  2018                           ; BSR set to: 0
  2019  001A54  0100               	movlb	0	; () banked
  2020  001A56  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2021  001A58  D7F7               	goto	l3736
  2022  001A5A                     l3740:
  2023                           
  2024                           ; BSR set to: 0
  2025  001A5A  0100               	movlb	0	; () banked
  2026  001A5C  51BA               	movf	___lwmod@divisor& (0+255),w,b
  2027  001A5E  0100               	movlb	0	; () banked
  2028  001A60  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  2029  001A62  0100               	movlb	0	; () banked
  2030  001A64  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2031  001A66  0100               	movlb	0	; () banked
  2032  001A68  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2033  001A6A  A0D8               	btfss	status,0,c
  2034  001A6C  D008               	goto	l3744
  2035                           
  2036                           ; BSR set to: 0
  2037  001A6E  0100               	movlb	0	; () banked
  2038  001A70  51BA               	movf	___lwmod@divisor& (0+255),w,b
  2039  001A72  0100               	movlb	0	; () banked
  2040  001A74  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  2041  001A76  0100               	movlb	0	; () banked
  2042  001A78  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2043  001A7A  0100               	movlb	0	; () banked
  2044  001A7C  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2045  001A7E                     l3744:
  2046                           
  2047                           ; BSR set to: 0
  2048  001A7E  0100               	movlb	0	; () banked
  2049  001A80  90D8               	bcf	status,0,c
  2050  001A82  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2051  001A84  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  2052                           
  2053                           ; BSR set to: 0
  2054  001A86  0100               	movlb	0	; () banked
  2055  001A88  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  2056  001A8A  D7E7               	goto	l3740
  2057  001A8C                     l1113:
  2058                           
  2059                           ; BSR set to: 0
  2060  001A8C  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  2061  001A90  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  2062                           
  2063                           ; BSR set to: 0
  2064  001A94  0012               	return	
  2065  001A96                     __end_of___lwmod:
  2066                           	opt stack 0
  2067                           tblptru	equ	0xFF8
  2068                           tblptrh	equ	0xFF7
  2069                           tblptrl	equ	0xFF6
  2070                           tablat	equ	0xFF5
  2071                           prodh	equ	0xFF4
  2072                           prodl	equ	0xFF3
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           indf2	equ	0xFDF
  2076                           postinc2	equ	0xFDE
  2077                           postdec2	equ	0xFDD
  2078                           fsr2h	equ	0xFDA
  2079                           fsr2l	equ	0xFD9
  2080                           status	equ	0xFD8
  2081                           
  2082 ;; *************** function _FromMainHigh_sendmsg *****************
  2083 ;; Defined at:
  2084 ;;		line 174 in file "../src/messages.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  length          1    wreg     unsigned char 
  2087 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2088 ;;  data            2   12[BANK1 ] PTR void 
  2089 ;;		 -> main@motor_data(14), main@t1thread_data(2), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  length          1   67[BANK0 ] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      char 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2101 ;;      Params:         0       0       3       0       0
  2102 ;;      Locals:         0       1       0       0       0
  2103 ;;      Temps:          0       0       0       0       0
  2104 ;;      Totals:         0       1       3       0       0
  2105 ;;Total ram usage:        4 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:   12
  2108 ;; This function calls:
  2109 ;;		_send_msg
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;;		_timer1_lthread
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text5
  2117  001DC2                     __ptext5:
  2118                           	opt stack 0
  2119  001DC2                     _FromMainHigh_sendmsg:
  2120                           	opt stack 17
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;incstack = 0
  2124                           ;FromMainHigh_sendmsg@length stored from wreg
  2125  001DC2  0100               	movlb	0	; () banked
  2126  001DC4  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2130  001DC6  0103               	movlb	3	; () banked
  2131  001DC8  0E03               	movlw	high _FromMainHigh_MQ
  2132  001DCA  0101               	movlb	1	; () banked
  2133  001DCC  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2134  001DCE  0103               	movlb	3	; () banked
  2135  001DD0  0E00               	movlw	low _FromMainHigh_MQ
  2136  001DD2  0101               	movlb	1	; () banked
  2137  001DD4  6F00               	movwf	send_msg@qptr& (0+255),b
  2138  001DD6  C0C3  F102         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2139  001DDA  C10B  F103         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2140  001DDE  0101               	movlb	1	; () banked
  2141  001DE0  C10D  F105         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2142  001DE4  0101               	movlb	1	; () banked
  2143  001DE6  C10C  F104         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2144  001DEA  EC7D  F007         	call	_send_msg	;wreg free
  2145  001DEE  0012               	return	
  2146  001DF0                     __end_of_FromMainHigh_sendmsg:
  2147                           	opt stack 0
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           prodh	equ	0xFF4
  2153                           prodl	equ	0xFF3
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           indf2	equ	0xFDF
  2157                           postinc2	equ	0xFDE
  2158                           postdec2	equ	0xFDD
  2159                           fsr2h	equ	0xFDA
  2160                           fsr2l	equ	0xFD9
  2161                           status	equ	0xFD8
  2162                           
  2163 ;; *************** function _timer0_lthread *****************
  2164 ;; Defined at:
  2165 ;;		line 9 in file "../src/timer0_thread.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2168 ;;		 -> main@t0thread_data(2), 
  2169 ;;  msgtype         2   58[BANK0 ] int 
  2170 ;;  length          2   60[BANK0 ] int 
  2171 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2172 ;;		 -> main@msgbuffer(15), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  2175 ;;		 -> main@msgbuffer(15), 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  2   56[BANK0 ] int 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2185 ;;      Params:         0       8       0       0       0
  2186 ;;      Locals:         0       2       0       0       0
  2187 ;;      Temps:          0       0       0       0       0
  2188 ;;      Totals:         0      10       0       0       0
  2189 ;;Total ram usage:       10 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:   10
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text6
  2200  001FAA                     __ptext6:
  2201                           	opt stack 0
  2202  001FAA                     _timer0_lthread:
  2203                           	opt stack 20
  2204                           
  2205                           ;timer0_thread.c: 10: unsigned int *msgval;
  2206                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2207                           
  2208                           ;incstack = 0
  2209  001FAA  0100               	movlb	0	; () banked
  2210  001FAC  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2211  001FB0  0100               	movlb	0	; () banked
  2212  001FB2  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2213                           
  2214                           ; BSR set to: 0
  2215  001FB6  0012               	return	
  2216  001FB8                     __end_of_timer0_lthread:
  2217                           	opt stack 0
  2218                           tblptru	equ	0xFF8
  2219                           tblptrh	equ	0xFF7
  2220                           tblptrl	equ	0xFF6
  2221                           tablat	equ	0xFF5
  2222                           prodh	equ	0xFF4
  2223                           prodl	equ	0xFF3
  2224                           postinc0	equ	0xFEE
  2225                           wreg	equ	0xFE8
  2226                           indf2	equ	0xFDF
  2227                           postinc2	equ	0xFDE
  2228                           postdec2	equ	0xFDD
  2229                           fsr2h	equ	0xFDA
  2230                           fsr2l	equ	0xFD9
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function _send_uart_message *****************
  2234 ;; Defined at:
  2235 ;;		line 186 in file "../src/my_uart.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  message_ptr     2   14[BANK1 ] PTR unsigned char 
  2238 ;;		 -> main@uart_response(14), 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  message_q_co    1   68[BANK0 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      unsigned char 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2250 ;;      Params:         0       0       2       0       0
  2251 ;;      Locals:         0       1       0       0       0
  2252 ;;      Temps:          0       0       0       0       0
  2253 ;;      Totals:         0       1       2       0       0
  2254 ;;Total ram usage:        3 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:   13
  2257 ;; This function calls:
  2258 ;;		_FromMainLow_sendmsg
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text7
  2265  001F32                     __ptext7:
  2266                           	opt stack 0
  2267  001F32                     _send_uart_message:
  2268                           	opt stack 17
  2269                           
  2270                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(14,31,(void *) messa
      +                          ge_ptr );
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;incstack = 0
  2274  001F32  0E1F               	movlw	31
  2275  001F34  0101               	movlb	1	; () banked
  2276  001F36  6F0B               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2277  001F38  0101               	movlb	1	; () banked
  2278  001F3A  C10F  F10D         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2279  001F3E  0101               	movlb	1	; () banked
  2280  001F40  C10E  F10C         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2281  001F44  0E0E               	movlw	14
  2282  001F46  ECF8  F00E         	call	_FromMainLow_sendmsg
  2283  001F4A  0100               	movlb	0	; () banked
  2284  001F4C  6FC4               	movwf	send_uart_message@message_q_code& (0+255),b
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;my_uart.c: 193: }
  2288                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;my_uart.c: 191: {
  2292                           ;my_uart.c: 192: return 0x02;
  2293                           ;	Return value of _send_uart_message is never used
  2294                           
  2295                           ;my_uart.c: 190: if( message_q_code == -1)
  2296  001F4E  889D               	bsf	3997,4,c	;volatile
  2297                           
  2298                           ; BSR set to: 0
  2299                           
  2300                           ;my_uart.c: 196: return 0x00;
  2301                           ;	Return value of _send_uart_message is never used
  2302  001F50  0012               	return	
  2303  001F52                     __end_of_send_uart_message:
  2304                           	opt stack 0
  2305                           tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           prodh	equ	0xFF4
  2310                           prodl	equ	0xFF3
  2311                           postinc0	equ	0xFEE
  2312                           wreg	equ	0xFE8
  2313                           indf2	equ	0xFDF
  2314                           postinc2	equ	0xFDE
  2315                           postdec2	equ	0xFDD
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _FromMainLow_sendmsg *****************
  2321 ;; Defined at:
  2322 ;;		line 150 in file "../src/messages.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  length          1    wreg     unsigned char 
  2325 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2326 ;;  data            2   12[BANK1 ] PTR void 
  2327 ;;		 -> main@uart_response(14), 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  length          1   67[BANK0 ] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      char 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2339 ;;      Params:         0       0       3       0       0
  2340 ;;      Locals:         0       1       0       0       0
  2341 ;;      Temps:          0       0       0       0       0
  2342 ;;      Totals:         0       1       3       0       0
  2343 ;;Total ram usage:        4 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:   12
  2346 ;; This function calls:
  2347 ;;		_send_msg
  2348 ;; This function is called by:
  2349 ;;		_send_uart_message
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text8
  2354  001DF0                     __ptext8:
  2355                           	opt stack 0
  2356  001DF0                     _FromMainLow_sendmsg:
  2357                           	opt stack 17
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;incstack = 0
  2361                           ;FromMainLow_sendmsg@length stored from wreg
  2362  001DF0  0100               	movlb	0	; () banked
  2363  001DF2  6FC3               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2367  001DF4  0102               	movlb	2	; () banked
  2368  001DF6  0E02               	movlw	high _FromMainLow_MQ
  2369  001DF8  0101               	movlb	1	; () banked
  2370  001DFA  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2371  001DFC  0102               	movlb	2	; () banked
  2372  001DFE  0E00               	movlw	low _FromMainLow_MQ
  2373  001E00  0101               	movlb	1	; () banked
  2374  001E02  6F00               	movwf	send_msg@qptr& (0+255),b
  2375  001E04  C0C3  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  2376  001E08  C10B  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2377  001E0C  0101               	movlb	1	; () banked
  2378  001E0E  C10D  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2379  001E12  0101               	movlb	1	; () banked
  2380  001E14  C10C  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  2381  001E18  EC7D  F007         	call	_send_msg	;wreg free
  2382  001E1C  0012               	return	
  2383  001E1E                     __end_of_FromMainLow_sendmsg:
  2384                           	opt stack 0
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           prodh	equ	0xFF4
  2390                           prodl	equ	0xFF3
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           indf2	equ	0xFDF
  2394                           postinc2	equ	0xFDE
  2395                           postdec2	equ	0xFDD
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function _send_msg *****************
  2401 ;; Defined at:
  2402 ;;		line 24 in file "../src/messages.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2405 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2406 ;;  length          1    2[BANK1 ] unsigned char 
  2407 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2408 ;;  data            2    4[BANK1 ] PTR void 
  2409 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  2410 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  2411 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  2412 ;;		 -> main@ic(38), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2415 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  2416 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2417 ;;  tlength         2    6[BANK1 ] unsigned int 
  2418 ;;  slot            1    8[BANK1 ] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      char 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2428 ;;      Params:         0       0       6       0       0
  2429 ;;      Locals:         0       0       5       0       0
  2430 ;;      Temps:          0       1       0       0       0
  2431 ;;      Totals:         0       1      11       0       0
  2432 ;;Total ram usage:       12 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:   11
  2435 ;; This function calls:
  2436 ;;		___awmod
  2437 ;;		_memcpy
  2438 ;; This function is called by:
  2439 ;;		_FromMainLow_sendmsg
  2440 ;;		_FromMainHigh_sendmsg
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text9
  2445  000EFA                     __ptext9:
  2446                           	opt stack 0
  2447  000EFA                     _send_msg:
  2448                           	opt stack 17
  2449                           
  2450                           ;messages.c: 25: unsigned char slot;
  2451                           ;messages.c: 27: msg *qmsg;
  2452                           ;messages.c: 28: size_t tlength = length;
  2453                           
  2454                           ;incstack = 0
  2455  000EFA  0101               	movlb	1	; () banked
  2456  000EFC  C102  F106         	movff	send_msg@length,send_msg@tlength
  2457  000F00  0101               	movlb	1	; () banked
  2458  000F02  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  2459                           
  2460                           ; BSR set to: 1
  2461                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2462  000F04  0101               	movlb	1	; () banked
  2463  000F06  EE20 F055          	lfsr	2,85
  2464  000F0A  0101               	movlb	1	; () banked
  2465  000F0C  5100               	movf	send_msg@qptr& (0+255),w,b
  2466  000F0E  26D9               	addwf	fsr2l,f,c
  2467  000F10  0101               	movlb	1	; () banked
  2468  000F12  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2469  000F14  22DA               	addwfc	fsr2h,f,c
  2470  000F16  50DF               	movf	indf2,w,c
  2471  000F18  0101               	movlb	1	; () banked
  2472  000F1A  6F08               	movwf	send_msg@slot& (0+255),b
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2476  000F1C  0101               	movlb	1	; () banked
  2477  000F1E  5108               	movf	send_msg@slot& (0+255),w,b
  2478  000F20  0D11               	mullw	17
  2479  000F22  50F3               	movf	prodl,w,c
  2480  000F24  0101               	movlb	1	; () banked
  2481  000F26  2500               	addwf	send_msg@qptr& (0+255),w,b
  2482  000F28  0101               	movlb	1	; () banked
  2483  000F2A  6F09               	movwf	send_msg@qmsg& (0+255),b
  2484  000F2C  50F4               	movf	prodh,w,c
  2485  000F2E  0101               	movlb	1	; () banked
  2486  000F30  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2487  000F32  0101               	movlb	1	; () banked
  2488  000F34  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;messages.c: 41: if (qmsg->full != 0) {
  2492  000F36  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2493  000F3A  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2494  000F3E  50DF               	movf	indf2,w,c
  2495  000F40  B4D8               	btfsc	status,2,c
  2496  000F42  D002               	goto	l3550
  2497                           
  2498                           ; BSR set to: 1
  2499                           ;messages.c: 42: return (-1);
  2500  000F44  0EFF               	movlw	255
  2501  000F46  0012               	return	
  2502  000F48                     l3550:
  2503                           
  2504                           ; BSR set to: 1
  2505                           ;messages.c: 43: }
  2506                           ;messages.c: 46: qmsg->length = length;
  2507  000F48  0101               	movlb	1	; () banked
  2508  000F4A  EE20 F001          	lfsr	2,1
  2509  000F4E  0101               	movlb	1	; () banked
  2510  000F50  5109               	movf	send_msg@qmsg& (0+255),w,b
  2511  000F52  26D9               	addwf	fsr2l,f,c
  2512  000F54  0101               	movlb	1	; () banked
  2513  000F56  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2514  000F58  22DA               	addwfc	fsr2h,f,c
  2515  000F5A  0101               	movlb	1	; () banked
  2516  000F5C  C102  FFDF         	movff	send_msg@length,indf2
  2517                           
  2518                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2519  000F60  0101               	movlb	1	; () banked
  2520  000F62  EE20 F002          	lfsr	2,2
  2521  000F66  0101               	movlb	1	; () banked
  2522  000F68  5109               	movf	send_msg@qmsg& (0+255),w,b
  2523  000F6A  26D9               	addwf	fsr2l,f,c
  2524  000F6C  0101               	movlb	1	; () banked
  2525  000F6E  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2526  000F70  22DA               	addwfc	fsr2h,f,c
  2527  000F72  0101               	movlb	1	; () banked
  2528  000F74  C103  FFDF         	movff	send_msg@msgtype,indf2
  2529                           
  2530                           ; BSR set to: 1
  2531                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2532  000F78  0E03               	movlw	3
  2533  000F7A  0101               	movlb	1	; () banked
  2534  000F7C  2509               	addwf	send_msg@qmsg& (0+255),w,b
  2535  000F7E  0100               	movlb	0	; () banked
  2536  000F80  6FB8               	movwf	memcpy@d1& (0+255),b
  2537  000F82  0E00               	movlw	0
  2538  000F84  0101               	movlb	1	; () banked
  2539  000F86  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2540  000F88  0100               	movlb	0	; () banked
  2541  000F8A  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  2542  000F8C  0101               	movlb	1	; () banked
  2543  000F8E  0100               	movlb	0	; () banked
  2544  000F90  C105  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  2545  000F94  0101               	movlb	1	; () banked
  2546  000F96  0100               	movlb	0	; () banked
  2547  000F98  C104  F0BA         	movff	send_msg@data,memcpy@s1
  2548  000F9C  C106  F0BC         	movff	send_msg@tlength,memcpy@n
  2549  000FA0  C107  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  2550  000FA4  ECCF  F00D         	call	_memcpy	;wreg free
  2551                           
  2552                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2553  000FA8  0101               	movlb	1	; () banked
  2554  000FAA  EE20 F055          	lfsr	2,85
  2555  000FAE  0101               	movlb	1	; () banked
  2556  000FB0  5100               	movf	send_msg@qptr& (0+255),w,b
  2557  000FB2  26D9               	addwf	fsr2l,f,c
  2558  000FB4  0101               	movlb	1	; () banked
  2559  000FB6  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2560  000FB8  22DA               	addwfc	fsr2h,f,c
  2561  000FBA  0101               	movlb	1	; () banked
  2562  000FBC  EE10 F055          	lfsr	1,85
  2563  000FC0  0101               	movlb	1	; () banked
  2564  000FC2  5100               	movf	send_msg@qptr& (0+255),w,b
  2565  000FC4  26E1               	addwf	fsr1l,f,c
  2566  000FC6  0101               	movlb	1	; () banked
  2567  000FC8  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2568  000FCA  22E2               	addwfc	fsr1h,f,c
  2569  000FCC  50E7               	movf	indf1,w,c
  2570  000FCE  0100               	movlb	0	; () banked
  2571  000FD0  6FC2               	movwf	??_send_msg& (0+255),b
  2572  000FD2  0E01               	movlw	1
  2573  000FD4  0100               	movlb	0	; () banked
  2574  000FD6  25C2               	addwf	??_send_msg& (0+255),w,b
  2575  000FD8  0100               	movlb	0	; () banked
  2576  000FDA  6FB8               	movwf	___awmod@dividend& (0+255),b
  2577  000FDC  0100               	movlb	0	; () banked
  2578  000FDE  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  2579  000FE0  0E00               	movlw	0
  2580  000FE2  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2581  000FE4  0E00               	movlw	0
  2582  000FE6  0100               	movlb	0	; () banked
  2583  000FE8  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  2584  000FEA  0E05               	movlw	5
  2585  000FEC  0100               	movlb	0	; () banked
  2586  000FEE  6FBA               	movwf	___awmod@divisor& (0+255),b
  2587  000FF0  EC57  F00A         	call	___awmod	;wreg free
  2588  000FF4  0100               	movlb	0	; () banked
  2589  000FF6  51B8               	movf	?___awmod& (0+255),w,b
  2590  000FF8  6EDF               	movwf	indf2,c
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;messages.c: 59: qmsg->full = 1;
  2594  000FFA  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2595  000FFE  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2596  001002  0E01               	movlw	1
  2597  001004  6EDF               	movwf	indf2,c
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;messages.c: 60: return (1);
  2601  001006  0E01               	movlw	1
  2602  001008  0012               	return	
  2603  00100A                     __end_of_send_msg:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           indf1	equ	0xFE7
  2614                           fsr1h	equ	0xFE2
  2615                           fsr1l	equ	0xFE1
  2616                           indf2	equ	0xFDF
  2617                           postinc2	equ	0xFDE
  2618                           postdec2	equ	0xFDD
  2619                           fsr2h	equ	0xFDA
  2620                           fsr2l	equ	0xFD9
  2621                           status	equ	0xFD8
  2622                           
  2623 ;; *************** function _init_timer1_lthread *****************
  2624 ;; Defined at:
  2625 ;;		line 7 in file "../src/timer1_thread.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2628 ;;		 -> main@t1thread_data(2), 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;		None               void
  2633 ;; Registers used:
  2634 ;;		wreg, fsr2l, fsr2h
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2640 ;;      Params:         0       2       0       0       0
  2641 ;;      Locals:         0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0
  2643 ;;      Totals:         0       2       0       0       0
  2644 ;;Total ram usage:        2 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:   10
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text10
  2655  001F52                     __ptext10:
  2656                           	opt stack 0
  2657  001F52                     _init_timer1_lthread:
  2658                           	opt stack 20
  2659                           
  2660                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2661                           
  2662                           ;incstack = 0
  2663  001F52  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2664  001F56  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2665  001F5A  0E00               	movlw	0
  2666  001F5C  6EDE               	movwf	postinc2,c
  2667  001F5E  0E00               	movlw	0
  2668  001F60  6EDD               	movwf	postdec2,c
  2669  001F62  0012               	return	
  2670  001F64                     __end_of_init_timer1_lthread:
  2671                           	opt stack 0
  2672                           tblptru	equ	0xFF8
  2673                           tblptrh	equ	0xFF7
  2674                           tblptrl	equ	0xFF6
  2675                           tablat	equ	0xFF5
  2676                           prodh	equ	0xFF4
  2677                           prodl	equ	0xFF3
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           indf1	equ	0xFE7
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           indf2	equ	0xFDF
  2684                           postinc2	equ	0xFDE
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _init_queues *****************
  2691 ;; Defined at:
  2692 ;;		line 194 in file "../src/messages.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;		None               void
  2699 ;; Registers used:
  2700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2706 ;;      Params:         0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:   11
  2713 ;; This function calls:
  2714 ;;		_init_queue
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text11
  2721  001AF6                     __ptext11:
  2722                           	opt stack 0
  2723  001AF6                     _init_queues:
  2724                           	opt stack 19
  2725                           
  2726                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2727                           
  2728                           ;incstack = 0
  2729  001AF6  0E00               	movlw	0
  2730  001AF8  0100               	movlb	0	; () banked
  2731  001AFA  6FC7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2735  001AFC  0101               	movlb	1	; () banked
  2736  001AFE  0E01               	movlw	high _ToMainLow_MQ
  2737  001B00  0100               	movlb	0	; () banked
  2738  001B02  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2739  001B04  0101               	movlb	1	; () banked
  2740  001B06  0E74               	movlw	low _ToMainLow_MQ
  2741  001B08  0100               	movlb	0	; () banked
  2742  001B0A  6FB8               	movwf	init_queue@qptr& (0+255),b
  2743  001B0C  ECB8  F00C         	call	_init_queue	;wreg free
  2744                           
  2745                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2746  001B10  0102               	movlb	2	; () banked
  2747  001B12  0E02               	movlw	high _ToMainHigh_MQ
  2748  001B14  0100               	movlb	0	; () banked
  2749  001B16  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2750  001B18  0102               	movlb	2	; () banked
  2751  001B1A  0E57               	movlw	low _ToMainHigh_MQ
  2752  001B1C  0100               	movlb	0	; () banked
  2753  001B1E  6FB8               	movwf	init_queue@qptr& (0+255),b
  2754  001B20  ECB8  F00C         	call	_init_queue	;wreg free
  2755                           
  2756                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2757  001B24  0102               	movlb	2	; () banked
  2758  001B26  0E02               	movlw	high _FromMainLow_MQ
  2759  001B28  0100               	movlb	0	; () banked
  2760  001B2A  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2761  001B2C  0102               	movlb	2	; () banked
  2762  001B2E  0E00               	movlw	low _FromMainLow_MQ
  2763  001B30  0100               	movlb	0	; () banked
  2764  001B32  6FB8               	movwf	init_queue@qptr& (0+255),b
  2765  001B34  ECB8  F00C         	call	_init_queue	;wreg free
  2766                           
  2767                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2768  001B38  0103               	movlb	3	; () banked
  2769  001B3A  0E03               	movlw	high _FromMainHigh_MQ
  2770  001B3C  0100               	movlb	0	; () banked
  2771  001B3E  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2772  001B40  0103               	movlb	3	; () banked
  2773  001B42  0E00               	movlw	low _FromMainHigh_MQ
  2774  001B44  0100               	movlb	0	; () banked
  2775  001B46  6FB8               	movwf	init_queue@qptr& (0+255),b
  2776  001B48  ECB8  F00C         	call	_init_queue	;wreg free
  2777  001B4C  0012               	return	
  2778  001B4E                     __end_of_init_queues:
  2779                           	opt stack 0
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           prodh	equ	0xFF4
  2785                           prodl	equ	0xFF3
  2786                           postinc0	equ	0xFEE
  2787                           wreg	equ	0xFE8
  2788                           indf1	equ	0xFE7
  2789                           fsr1h	equ	0xFE2
  2790                           fsr1l	equ	0xFE1
  2791                           indf2	equ	0xFDF
  2792                           postinc2	equ	0xFDE
  2793                           postdec2	equ	0xFDD
  2794                           fsr2h	equ	0xFDA
  2795                           fsr2l	equ	0xFD9
  2796                           status	equ	0xFD8
  2797                           
  2798 ;; *************** function _init_queue *****************
  2799 ;; Defined at:
  2800 ;;		line 14 in file "../src/messages.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2803 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  i               1   58[BANK0 ] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;		None               void
  2808 ;; Registers used:
  2809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2815 ;;      Params:         0       2       0       0       0
  2816 ;;      Locals:         0       1       0       0       0
  2817 ;;      Temps:          0       0       0       0       0
  2818 ;;      Totals:         0       3       0       0       0
  2819 ;;Total ram usage:        3 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:   10
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_init_queues
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text12
  2830  001970                     __ptext12:
  2831                           	opt stack 0
  2832  001970                     _init_queue:
  2833                           	opt stack 19
  2834                           
  2835                           ;messages.c: 15: unsigned char i;
  2836                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2837                           
  2838                           ;incstack = 0
  2839  001970  0100               	movlb	0	; () banked
  2840  001972  EE20 F055          	lfsr	2,85
  2841  001976  0100               	movlb	0	; () banked
  2842  001978  51B8               	movf	init_queue@qptr& (0+255),w,b
  2843  00197A  26D9               	addwf	fsr2l,f,c
  2844  00197C  0100               	movlb	0	; () banked
  2845  00197E  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2846  001980  22DA               	addwfc	fsr2h,f,c
  2847  001982  0E00               	movlw	0
  2848  001984  6EDF               	movwf	indf2,c
  2849                           
  2850                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2851  001986  0100               	movlb	0	; () banked
  2852  001988  EE20 F056          	lfsr	2,86
  2853  00198C  0100               	movlb	0	; () banked
  2854  00198E  51B8               	movf	init_queue@qptr& (0+255),w,b
  2855  001990  26D9               	addwf	fsr2l,f,c
  2856  001992  0100               	movlb	0	; () banked
  2857  001994  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2858  001996  22DA               	addwfc	fsr2h,f,c
  2859  001998  0E00               	movlw	0
  2860  00199A  6EDF               	movwf	indf2,c
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2864  00199C  0E00               	movlw	0
  2865  00199E  0100               	movlb	0	; () banked
  2866  0019A0  6FBA               	movwf	init_queue@i& (0+255),b
  2867                           
  2868                           ; BSR set to: 0
  2869  0019A2  0E04               	movlw	4
  2870  0019A4  0100               	movlb	0	; () banked
  2871  0019A6  65BA               	cpfsgt	init_queue@i& (0+255),b
  2872  0019A8  D001               	goto	l2668
  2873  0019AA  0012               	return	
  2874  0019AC                     l2668:
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;messages.c: 20: qptr->queue[i].full = 0;
  2878  0019AC  0100               	movlb	0	; () banked
  2879  0019AE  51BA               	movf	init_queue@i& (0+255),w,b
  2880  0019B0  0D11               	mullw	17
  2881  0019B2  50F3               	movf	prodl,w,c
  2882  0019B4  0100               	movlb	0	; () banked
  2883  0019B6  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2884  0019B8  6ED9               	movwf	fsr2l,c
  2885  0019BA  50F4               	movf	prodh,w,c
  2886  0019BC  0100               	movlb	0	; () banked
  2887  0019BE  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2888  0019C0  6EDA               	movwf	fsr2h,c
  2889  0019C2  0E00               	movlw	0
  2890  0019C4  6EDF               	movwf	indf2,c
  2891                           
  2892                           ; BSR set to: 0
  2893  0019C6  0100               	movlb	0	; () banked
  2894  0019C8  2BBA               	incf	init_queue@i& (0+255),f,b
  2895                           
  2896                           ; BSR set to: 0
  2897  0019CA  0E04               	movlw	4
  2898  0019CC  0100               	movlb	0	; () banked
  2899  0019CE  65BA               	cpfsgt	init_queue@i& (0+255),b
  2900  0019D0  D7ED               	goto	l2668
  2901  0019D2  0012               	return	
  2902  0019D4                     __end_of_init_queue:
  2903                           	opt stack 0
  2904                           tblptru	equ	0xFF8
  2905                           tblptrh	equ	0xFF7
  2906                           tblptrl	equ	0xFF6
  2907                           tablat	equ	0xFF5
  2908                           prodh	equ	0xFF4
  2909                           prodl	equ	0xFF3
  2910                           postinc0	equ	0xFEE
  2911                           wreg	equ	0xFE8
  2912                           indf1	equ	0xFE7
  2913                           fsr1h	equ	0xFE2
  2914                           fsr1l	equ	0xFE1
  2915                           indf2	equ	0xFDF
  2916                           postinc2	equ	0xFDE
  2917                           postdec2	equ	0xFDD
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function _init_i2c *****************
  2923 ;; Defined at:
  2924 ;;		line 345 in file "../src/my_i2c.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2927 ;;		 -> main@ic(38), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;		None               void
  2932 ;; Registers used:
  2933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2939 ;;      Params:         0       2       0       0       0
  2940 ;;      Locals:         0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0
  2942 ;;      Totals:         0       2       0       0       0
  2943 ;;Total ram usage:        2 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:   10
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text13
  2954  00190A                     __ptext13:
  2955                           	opt stack 0
  2956  00190A                     _init_i2c:
  2957                           	opt stack 20
  2958                           
  2959                           ;my_i2c.c: 346: ic_ptr = ic;
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;incstack = 0
  2963  00190A  0100               	movlb	0	; () banked
  2964  00190C  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2965  001910  0100               	movlb	0	; () banked
  2966  001912  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;my_i2c.c: 347: ic_ptr->buflen = 0;
  2970  001916  0100               	movlb	0	; () banked
  2971  001918  EE20 F00E          	lfsr	2,14
  2972  00191C  0100               	movlb	0	; () banked
  2973  00191E  51C5               	movf	_ic_ptr& (0+255),w,b
  2974  001920  26D9               	addwf	fsr2l,f,c
  2975  001922  0100               	movlb	0	; () banked
  2976  001924  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2977  001926  22DA               	addwfc	fsr2h,f,c
  2978  001928  0E00               	movlw	0
  2979  00192A  6EDF               	movwf	indf2,c
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;my_i2c.c: 348: ic_ptr->event_count = 0;
  2983  00192C  0100               	movlb	0	; () banked
  2984  00192E  EE20 F020          	lfsr	2,32
  2985  001932  0100               	movlb	0	; () banked
  2986  001934  51C5               	movf	_ic_ptr& (0+255),w,b
  2987  001936  26D9               	addwf	fsr2l,f,c
  2988  001938  0100               	movlb	0	; () banked
  2989  00193A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2990  00193C  22DA               	addwfc	fsr2h,f,c
  2991  00193E  0E00               	movlw	0
  2992  001940  6EDF               	movwf	indf2,c
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;my_i2c.c: 349: ic_ptr->status = 0x5;
  2996  001942  0100               	movlb	0	; () banked
  2997  001944  EE20 F021          	lfsr	2,33
  2998  001948  0100               	movlb	0	; () banked
  2999  00194A  51C5               	movf	_ic_ptr& (0+255),w,b
  3000  00194C  26D9               	addwf	fsr2l,f,c
  3001  00194E  0100               	movlb	0	; () banked
  3002  001950  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3003  001952  22DA               	addwfc	fsr2h,f,c
  3004  001954  0E05               	movlw	5
  3005  001956  6EDF               	movwf	indf2,c
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;my_i2c.c: 350: ic_ptr->error_count = 0;
  3009  001958  0100               	movlb	0	; () banked
  3010  00195A  EE20 F023          	lfsr	2,35
  3011  00195E  0100               	movlb	0	; () banked
  3012  001960  51C5               	movf	_ic_ptr& (0+255),w,b
  3013  001962  26D9               	addwf	fsr2l,f,c
  3014  001964  0100               	movlb	0	; () banked
  3015  001966  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3016  001968  22DA               	addwfc	fsr2h,f,c
  3017  00196A  0E00               	movlw	0
  3018  00196C  6EDF               	movwf	indf2,c
  3019                           
  3020                           ; BSR set to: 0
  3021  00196E  0012               	return	
  3022  001970                     __end_of_init_i2c:
  3023                           	opt stack 0
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           prodh	equ	0xFF4
  3029                           prodl	equ	0xFF3
  3030                           postinc0	equ	0xFEE
  3031                           wreg	equ	0xFE8
  3032                           indf1	equ	0xFE7
  3033                           fsr1h	equ	0xFE2
  3034                           fsr1l	equ	0xFE1
  3035                           indf2	equ	0xFDF
  3036                           postinc2	equ	0xFDE
  3037                           postdec2	equ	0xFDD
  3038                           fsr2h	equ	0xFDA
  3039                           fsr2l	equ	0xFD9
  3040                           status	equ	0xFD8
  3041                           
  3042 ;; *************** function _i2c_configure_slave *****************
  3043 ;; Defined at:
  3044 ;;		line 356 in file "../src/my_i2c.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  addr            1    wreg     unsigned char 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  addr            1   56[BANK0 ] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;		None               void
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3058 ;;      Params:         0       0       0       0       0
  3059 ;;      Locals:         0       1       0       0       0
  3060 ;;      Temps:          0       0       0       0       0
  3061 ;;      Totals:         0       1       0       0       0
  3062 ;;Total ram usage:        1 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:   10
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_main
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text14
  3073  001E78                     __ptext14:
  3074                           	opt stack 0
  3075  001E78                     _i2c_configure_slave:
  3076                           	opt stack 20
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;incstack = 0
  3080                           ;i2c_configure_slave@addr stored from wreg
  3081  001E78  0100               	movlb	0	; () banked
  3082  001E7A  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;my_i2c.c: 368: TRISCbits.TRISC3 = 1;
  3086  001E7C  8694               	bsf	3988,3,c	;volatile
  3087                           
  3088                           ;my_i2c.c: 369: TRISCbits.TRISC4 = 1;
  3089  001E7E  8894               	bsf	3988,4,c	;volatile
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;my_i2c.c: 374: SSPADD = addr;
  3093  001E80  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;my_i2c.c: 376: SSPSTAT = 0x0;
  3097  001E84  0E00               	movlw	0
  3098  001E86  6EC7               	movwf	4039,c	;volatile
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;my_i2c.c: 377: SSPCON1 = 0x0;
  3102  001E88  0E00               	movlw	0
  3103  001E8A  6EC6               	movwf	4038,c	;volatile
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;my_i2c.c: 378: SSPCON2 = 0x0;
  3107  001E8C  0E00               	movlw	0
  3108  001E8E  6EC5               	movwf	4037,c	;volatile
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;my_i2c.c: 379: SSPCON1 |= 0x0E;
  3112  001E90  0E0E               	movlw	14
  3113  001E92  12C6               	iorwf	4038,f,c	;volatile
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;my_i2c.c: 380: SSPSTAT |= 0b10000000;
  3117  001E94  8EC7               	bsf	4039,7,c	;volatile
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;my_i2c.c: 383: TRISCbits.TRISC3 = 1;
  3121  001E96  8694               	bsf	3988,3,c	;volatile
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;my_i2c.c: 384: TRISCbits.TRISC4 = 1;
  3125  001E98  8894               	bsf	3988,4,c	;volatile
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;my_i2c.c: 405: SSPCON2bits.SEN = 1;
  3129  001E9A  80C5               	bsf	4037,0,c	;volatile
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;my_i2c.c: 406: SSPCON1 |= 0b00100000;
  3133  001E9C  8AC6               	bsf	4038,5,c	;volatile
  3134                           
  3135                           ; BSR set to: 0
  3136  001E9E  0012               	return	
  3137  001EA0                     __end_of_i2c_configure_slave:
  3138                           	opt stack 0
  3139                           tblptru	equ	0xFF8
  3140                           tblptrh	equ	0xFF7
  3141                           tblptrl	equ	0xFF6
  3142                           tablat	equ	0xFF5
  3143                           prodh	equ	0xFF4
  3144                           prodl	equ	0xFF3
  3145                           postinc0	equ	0xFEE
  3146                           wreg	equ	0xFE8
  3147                           indf1	equ	0xFE7
  3148                           fsr1h	equ	0xFE2
  3149                           fsr1l	equ	0xFE1
  3150                           indf2	equ	0xFDF
  3151                           postinc2	equ	0xFDE
  3152                           postdec2	equ	0xFDD
  3153                           fsr2h	equ	0xFDA
  3154                           fsr2l	equ	0xFD9
  3155                           status	equ	0xFD8
  3156                           
  3157 ;; *************** function _enable_interrupts *****************
  3158 ;; Defined at:
  3159 ;;		line 14 in file "../src/interrupts.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;		None               void
  3166 ;; Registers used:
  3167 ;;		None
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3173 ;;      Params:         0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:   10
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text15
  3188  001FC2                     __ptext15:
  3189                           	opt stack 0
  3190  001FC2                     _enable_interrupts:
  3191                           	opt stack 20
  3192                           
  3193                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;incstack = 0
  3197  001FC2  8ED0               	bsf	4048,7,c	;volatile
  3198                           
  3199                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3200  001FC4  8EF2               	bsf	intcon,7,c	;volatile
  3201                           
  3202                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3203  001FC6  8CF2               	bsf	intcon,6,c	;volatile
  3204  001FC8  0012               	return	
  3205  001FCA                     __end_of_enable_interrupts:
  3206                           	opt stack 0
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           prodh	equ	0xFF4
  3212                           prodl	equ	0xFF3
  3213                           intcon	equ	0xFF2
  3214                           postinc0	equ	0xFEE
  3215                           wreg	equ	0xFE8
  3216                           indf1	equ	0xFE7
  3217                           fsr1h	equ	0xFE2
  3218                           fsr1l	equ	0xFE1
  3219                           indf2	equ	0xFDF
  3220                           postinc2	equ	0xFDE
  3221                           postdec2	equ	0xFDD
  3222                           fsr2h	equ	0xFDA
  3223                           fsr2l	equ	0xFD9
  3224                           status	equ	0xFD8
  3225                           
  3226 ;; *************** function _debug_configure *****************
  3227 ;; Defined at:
  3228 ;;		line 3 in file "../src/debug.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;		None               void
  3235 ;; Registers used:
  3236 ;;		wreg, status,2
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:   10
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text16
  3257  001FB8                     __ptext16:
  3258                           	opt stack 0
  3259  001FB8                     _debug_configure:
  3260                           	opt stack 20
  3261                           
  3262                           ;debug.c: 5: TRISD = 0x00;
  3263                           
  3264                           ;incstack = 0
  3265  001FB8  0E00               	movlw	0
  3266  001FBA  6E95               	movwf	3989,c	;volatile
  3267                           
  3268                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3269  001FBC  9093               	bcf	3987,0,c	;volatile
  3270                           
  3271                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3272  001FBE  9293               	bcf	3987,1,c	;volatile
  3273  001FC0  0012               	return	
  3274  001FC2                     __end_of_debug_configure:
  3275                           	opt stack 0
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           prodh	equ	0xFF4
  3281                           prodl	equ	0xFF3
  3282                           intcon	equ	0xFF2
  3283                           postinc0	equ	0xFEE
  3284                           wreg	equ	0xFE8
  3285                           indf1	equ	0xFE7
  3286                           fsr1h	equ	0xFE2
  3287                           fsr1l	equ	0xFE1
  3288                           indf2	equ	0xFDF
  3289                           postinc2	equ	0xFDE
  3290                           postdec2	equ	0xFDD
  3291                           fsr2h	equ	0xFDA
  3292                           fsr2l	equ	0xFD9
  3293                           status	equ	0xFD8
  3294                           
  3295 ;; *************** function _blip3 *****************
  3296 ;; Defined at:
  3297 ;;		line 32 in file "../src/debug.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;		None               void
  3304 ;; Registers used:
  3305 ;;		None
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:   10
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text17
  3326  001FCA                     __ptext17:
  3327                           	opt stack 0
  3328  001FCA                     _blip3:
  3329                           	opt stack 20
  3330                           
  3331                           ;debug.c: 34: LATDbits.LD6 = 0;
  3332                           
  3333                           ;incstack = 0
  3334  001FCA  9C8C               	bcf	3980,6,c	;volatile
  3335                           
  3336                           ;debug.c: 35: LATDbits.LD6 = 1;
  3337  001FCC  8C8C               	bsf	3980,6,c	;volatile
  3338                           
  3339                           ;debug.c: 36: LATDbits.LD6 = 0;
  3340  001FCE  9C8C               	bcf	3980,6,c	;volatile
  3341  001FD0  0012               	return	
  3342  001FD2                     __end_of_blip3:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           prodh	equ	0xFF4
  3349                           prodl	equ	0xFF3
  3350                           intcon	equ	0xFF2
  3351                           postinc0	equ	0xFEE
  3352                           wreg	equ	0xFE8
  3353                           indf1	equ	0xFE7
  3354                           fsr1h	equ	0xFE2
  3355                           fsr1l	equ	0xFE1
  3356                           indf2	equ	0xFDF
  3357                           postinc2	equ	0xFDE
  3358                           postdec2	equ	0xFDD
  3359                           fsr2h	equ	0xFDA
  3360                           fsr2l	equ	0xFD9
  3361                           status	equ	0xFD8
  3362                           
  3363 ;; *************** function _blip2 *****************
  3364 ;; Defined at:
  3365 ;;		line 25 in file "../src/debug.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;		None               void
  3372 ;; Registers used:
  3373 ;;		None
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3379 ;;      Params:         0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0
  3382 ;;      Totals:         0       0       0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:   10
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text18
  3394  001FD2                     __ptext18:
  3395                           	opt stack 0
  3396  001FD2                     _blip2:
  3397                           	opt stack 20
  3398                           
  3399                           ;debug.c: 27: LATDbits.LD5 = 0;
  3400                           
  3401                           ;incstack = 0
  3402  001FD2  9A8C               	bcf	3980,5,c	;volatile
  3403                           
  3404                           ;debug.c: 28: LATDbits.LD5 = 1;
  3405  001FD4  8A8C               	bsf	3980,5,c	;volatile
  3406                           
  3407                           ;debug.c: 29: LATDbits.LD5 = 0;
  3408  001FD6  9A8C               	bcf	3980,5,c	;volatile
  3409  001FD8  0012               	return	
  3410  001FDA                     __end_of_blip2:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           tblptrh	equ	0xFF7
  3414                           tblptrl	equ	0xFF6
  3415                           tablat	equ	0xFF5
  3416                           prodh	equ	0xFF4
  3417                           prodl	equ	0xFF3
  3418                           intcon	equ	0xFF2
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           indf1	equ	0xFE7
  3422                           fsr1h	equ	0xFE2
  3423                           fsr1l	equ	0xFE1
  3424                           indf2	equ	0xFDF
  3425                           postinc2	equ	0xFDE
  3426                           postdec2	equ	0xFDD
  3427                           fsr2h	equ	0xFDA
  3428                           fsr2l	equ	0xFD9
  3429                           status	equ	0xFD8
  3430                           
  3431 ;; *************** function _blip1 *****************
  3432 ;; Defined at:
  3433 ;;		line 18 in file "../src/debug.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;		None               void
  3440 ;; Registers used:
  3441 ;;		None
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3447 ;;      Params:         0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:   10
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_main
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text19
  3462  001FDA                     __ptext19:
  3463                           	opt stack 0
  3464  001FDA                     _blip1:
  3465                           	opt stack 20
  3466                           
  3467                           ;debug.c: 20: LATDbits.LD4 = 0;
  3468                           
  3469                           ;incstack = 0
  3470  001FDA  988C               	bcf	3980,4,c	;volatile
  3471                           
  3472                           ;debug.c: 21: LATDbits.LD4 = 1;
  3473  001FDC  888C               	bsf	3980,4,c	;volatile
  3474                           
  3475                           ;debug.c: 22: LATDbits.LD4 = 0;
  3476  001FDE  988C               	bcf	3980,4,c	;volatile
  3477  001FE0  0012               	return	
  3478  001FE2                     __end_of_blip1:
  3479                           	opt stack 0
  3480                           tblptru	equ	0xFF8
  3481                           tblptrh	equ	0xFF7
  3482                           tblptrl	equ	0xFF6
  3483                           tablat	equ	0xFF5
  3484                           prodh	equ	0xFF4
  3485                           prodl	equ	0xFF3
  3486                           intcon	equ	0xFF2
  3487                           postinc0	equ	0xFEE
  3488                           wreg	equ	0xFE8
  3489                           indf1	equ	0xFE7
  3490                           fsr1h	equ	0xFE2
  3491                           fsr1l	equ	0xFE1
  3492                           indf2	equ	0xFDF
  3493                           postinc2	equ	0xFDE
  3494                           postdec2	equ	0xFDD
  3495                           fsr2h	equ	0xFDA
  3496                           fsr2l	equ	0xFD9
  3497                           status	equ	0xFD8
  3498                           
  3499 ;; *************** function _blip *****************
  3500 ;; Defined at:
  3501 ;;		line 11 in file "../src/debug.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;		None               void
  3508 ;; Registers used:
  3509 ;;		None
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3515 ;;      Params:         0       0       0       0       0
  3516 ;;      Locals:         0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0
  3518 ;;      Totals:         0       0       0       0       0
  3519 ;;Total ram usage:        0 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:   10
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text20
  3530  001FE2                     __ptext20:
  3531                           	opt stack 0
  3532  001FE2                     _blip:
  3533                           	opt stack 20
  3534                           
  3535                           ;debug.c: 13: LATDbits.LD2 = 0;
  3536                           
  3537                           ;incstack = 0
  3538  001FE2  948C               	bcf	3980,2,c	;volatile
  3539                           
  3540                           ;debug.c: 14: LATDbits.LD2 = 1;
  3541  001FE4  848C               	bsf	3980,2,c	;volatile
  3542                           
  3543                           ;debug.c: 15: LATDbits.LD2 = 0;
  3544  001FE6  948C               	bcf	3980,2,c	;volatile
  3545  001FE8  0012               	return	
  3546  001FEA                     __end_of_blip:
  3547                           	opt stack 0
  3548                           tblptru	equ	0xFF8
  3549                           tblptrh	equ	0xFF7
  3550                           tblptrl	equ	0xFF6
  3551                           tablat	equ	0xFF5
  3552                           prodh	equ	0xFF4
  3553                           prodl	equ	0xFF3
  3554                           intcon	equ	0xFF2
  3555                           postinc0	equ	0xFEE
  3556                           wreg	equ	0xFE8
  3557                           indf1	equ	0xFE7
  3558                           fsr1h	equ	0xFE2
  3559                           fsr1l	equ	0xFE1
  3560                           indf2	equ	0xFDF
  3561                           postinc2	equ	0xFDE
  3562                           postdec2	equ	0xFDD
  3563                           fsr2h	equ	0xFDA
  3564                           fsr2l	equ	0xFD9
  3565                           status	equ	0xFD8
  3566                           
  3567 ;; *************** function _ToMainLow_recvmsg *****************
  3568 ;; Defined at:
  3569 ;;		line 112 in file "../src/messages.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  maxlength       1    wreg     unsigned char 
  3572 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3573 ;;		 -> main@msgtype(1), 
  3574 ;;  data            2   14[BANK1 ] PTR void 
  3575 ;;		 -> main@msgbuffer(15), 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      char 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3587 ;;      Params:         0       0       4       0       0
  3588 ;;      Locals:         0       1       0       0       0
  3589 ;;      Temps:          0       0       0       0       0
  3590 ;;      Totals:         0       1       4       0       0
  3591 ;;Total ram usage:        5 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:   12
  3594 ;; This function calls:
  3595 ;;		_recv_msg
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text21
  3602  001CBC                     __ptext21:
  3603                           	opt stack 0
  3604  001CBC                     _ToMainLow_recvmsg:
  3605                           	opt stack 18
  3606                           
  3607                           ;incstack = 0
  3608                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3609  001CBC  0100               	movlb	0	; () banked
  3610  001CBE  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3614  001CC0  0101               	movlb	1	; () banked
  3615  001CC2  0E01               	movlw	high _ToMainLow_MQ
  3616  001CC4  0101               	movlb	1	; () banked
  3617  001CC6  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3618  001CC8  0101               	movlb	1	; () banked
  3619  001CCA  0E74               	movlw	low _ToMainLow_MQ
  3620  001CCC  0101               	movlb	1	; () banked
  3621  001CCE  6F00               	movwf	recv_msg@qptr& (0+255),b
  3622  001CD0  C0C4  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3623  001CD4  0101               	movlb	1	; () banked
  3624  001CD6  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3625  001CDA  0101               	movlb	1	; () banked
  3626  001CDC  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3627  001CE0  0101               	movlb	1	; () banked
  3628  001CE2  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3629  001CE6  0101               	movlb	1	; () banked
  3630  001CE8  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3631  001CEC  EC3D  F006         	call	_recv_msg	;wreg free
  3632  001CF0  0012               	return	
  3633  001CF2                     __end_of_ToMainLow_recvmsg:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           prodh	equ	0xFF4
  3640                           prodl	equ	0xFF3
  3641                           intcon	equ	0xFF2
  3642                           postinc0	equ	0xFEE
  3643                           wreg	equ	0xFE8
  3644                           indf1	equ	0xFE7
  3645                           fsr1h	equ	0xFE2
  3646                           fsr1l	equ	0xFE1
  3647                           indf2	equ	0xFDF
  3648                           postinc2	equ	0xFDE
  3649                           postdec2	equ	0xFDD
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8
  3653                           
  3654 ;; *************** function _ToMainHigh_recvmsg *****************
  3655 ;; Defined at:
  3656 ;;		line 135 in file "../src/messages.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  maxlength       1    wreg     unsigned char 
  3659 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3660 ;;		 -> main@msgtype(1), 
  3661 ;;  data            2   14[BANK1 ] PTR void 
  3662 ;;		 -> main@msgbuffer(15), 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      char 
  3667 ;; Registers used:
  3668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3674 ;;      Params:         0       0       4       0       0
  3675 ;;      Locals:         0       1       0       0       0
  3676 ;;      Temps:          0       0       0       0       0
  3677 ;;      Totals:         0       1       4       0       0
  3678 ;;Total ram usage:        5 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:   12
  3681 ;; This function calls:
  3682 ;;		_recv_msg
  3683 ;; This function is called by:
  3684 ;;		_main
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text22
  3689  001CF2                     __ptext22:
  3690                           	opt stack 0
  3691  001CF2                     _ToMainHigh_recvmsg:
  3692                           	opt stack 18
  3693                           
  3694                           ;incstack = 0
  3695                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3696  001CF2  0100               	movlb	0	; () banked
  3697  001CF4  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3701  001CF6  0102               	movlb	2	; () banked
  3702  001CF8  0E02               	movlw	high _ToMainHigh_MQ
  3703  001CFA  0101               	movlb	1	; () banked
  3704  001CFC  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3705  001CFE  0102               	movlb	2	; () banked
  3706  001D00  0E57               	movlw	low _ToMainHigh_MQ
  3707  001D02  0101               	movlb	1	; () banked
  3708  001D04  6F00               	movwf	recv_msg@qptr& (0+255),b
  3709  001D06  C0C4  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3710  001D0A  0101               	movlb	1	; () banked
  3711  001D0C  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3712  001D10  0101               	movlb	1	; () banked
  3713  001D12  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3714  001D16  0101               	movlb	1	; () banked
  3715  001D18  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3716  001D1C  0101               	movlb	1	; () banked
  3717  001D1E  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3718  001D22  EC3D  F006         	call	_recv_msg	;wreg free
  3719  001D26  0012               	return	
  3720  001D28                     __end_of_ToMainHigh_recvmsg:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           intcon	equ	0xFF2
  3729                           postinc0	equ	0xFEE
  3730                           wreg	equ	0xFE8
  3731                           indf1	equ	0xFE7
  3732                           fsr1h	equ	0xFE2
  3733                           fsr1l	equ	0xFE1
  3734                           indf2	equ	0xFDF
  3735                           postinc2	equ	0xFDE
  3736                           postdec2	equ	0xFDD
  3737                           fsr2h	equ	0xFDA
  3738                           fsr2l	equ	0xFD9
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function _recv_msg *****************
  3742 ;; Defined at:
  3743 ;;		line 63 in file "../src/messages.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3746 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3747 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3748 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3749 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  3750 ;;		 -> main@msgtype(1), 
  3751 ;;  data            2    5[BANK1 ] PTR void 
  3752 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), main@msgbuffer(15), 
  3753 ;;		 -> main@ic(38), 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3756 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3757 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3758 ;;  tlength         2    8[BANK1 ] unsigned int 
  3759 ;;  slot            1    7[BANK1 ] unsigned char 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      char 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3769 ;;      Params:         0       0       7       0       0
  3770 ;;      Locals:         0       0       5       0       0
  3771 ;;      Temps:          0       2       0       0       0
  3772 ;;      Totals:         0       2      12       0       0
  3773 ;;Total ram usage:       14 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:   11
  3776 ;; This function calls:
  3777 ;;		___awmod
  3778 ;;		_memcpy
  3779 ;; This function is called by:
  3780 ;;		_ToMainLow_recvmsg
  3781 ;;		_ToMainHigh_recvmsg
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text23
  3786  000C7A                     __ptext23:
  3787                           	opt stack 0
  3788  000C7A                     _recv_msg:
  3789                           	opt stack 18
  3790                           
  3791                           ;messages.c: 64: unsigned char slot;
  3792                           ;messages.c: 68: msg *qmsg;
  3793                           ;messages.c: 69: size_t tlength;
  3794                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3795                           
  3796                           ;incstack = 0
  3797  000C7A  0101               	movlb	1	; () banked
  3798  000C7C  EE20 F056          	lfsr	2,86
  3799  000C80  0101               	movlb	1	; () banked
  3800  000C82  5100               	movf	recv_msg@qptr& (0+255),w,b
  3801  000C84  26D9               	addwf	fsr2l,f,c
  3802  000C86  0101               	movlb	1	; () banked
  3803  000C88  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3804  000C8A  22DA               	addwfc	fsr2h,f,c
  3805  000C8C  50DF               	movf	indf2,w,c
  3806  000C8E  0101               	movlb	1	; () banked
  3807  000C90  6F07               	movwf	recv_msg@slot& (0+255),b
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3811  000C92  0101               	movlb	1	; () banked
  3812  000C94  5107               	movf	recv_msg@slot& (0+255),w,b
  3813  000C96  0D11               	mullw	17
  3814  000C98  50F3               	movf	prodl,w,c
  3815  000C9A  0101               	movlb	1	; () banked
  3816  000C9C  2500               	addwf	recv_msg@qptr& (0+255),w,b
  3817  000C9E  0101               	movlb	1	; () banked
  3818  000CA0  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  3819  000CA2  50F4               	movf	prodh,w,c
  3820  000CA4  0101               	movlb	1	; () banked
  3821  000CA6  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3822  000CA8  0101               	movlb	1	; () banked
  3823  000CAA  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3824                           
  3825                           ; BSR set to: 1
  3826                           ;messages.c: 74: if (qmsg->full == 1) {
  3827  000CAC  0E01               	movlw	1
  3828  000CAE  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  3829  000CB2  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3830  000CB6  62DF               	cpfseq	indf2,c
  3831  000CB8  D07F               	goto	l3706
  3832                           
  3833                           ; BSR set to: 1
  3834                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3835  000CBA  0101               	movlb	1	; () banked
  3836  000CBC  EE20 F001          	lfsr	2,1
  3837  000CC0  0101               	movlb	1	; () banked
  3838  000CC2  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3839  000CC4  26D9               	addwf	fsr2l,f,c
  3840  000CC6  0101               	movlb	1	; () banked
  3841  000CC8  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3842  000CCA  22DA               	addwfc	fsr2h,f,c
  3843  000CCC  50DF               	movf	indf2,w,c
  3844  000CCE  0101               	movlb	1	; () banked
  3845  000CD0  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  3846  000CD2  B0D8               	btfsc	status,0,c
  3847  000CD4  D002               	goto	l3690
  3848                           
  3849                           ; BSR set to: 1
  3850                           ;messages.c: 77: return (-3);
  3851  000CD6  0EFD               	movlw	253
  3852  000CD8  0012               	return	
  3853  000CDA                     l3690:
  3854                           
  3855                           ; BSR set to: 1
  3856                           ;messages.c: 78: }
  3857                           ;messages.c: 80: tlength = qmsg->length;
  3858  000CDA  0101               	movlb	1	; () banked
  3859  000CDC  EE20 F001          	lfsr	2,1
  3860  000CE0  0101               	movlb	1	; () banked
  3861  000CE2  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3862  000CE4  26D9               	addwf	fsr2l,f,c
  3863  000CE6  0101               	movlb	1	; () banked
  3864  000CE8  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3865  000CEA  22DA               	addwfc	fsr2h,f,c
  3866  000CEC  50DF               	movf	indf2,w,c
  3867  000CEE  0100               	movlb	0	; () banked
  3868  000CF0  6FC2               	movwf	??_recv_msg& (0+255),b
  3869  000CF2  0100               	movlb	0	; () banked
  3870  000CF4  51C2               	movf	??_recv_msg& (0+255),w,b
  3871  000CF6  0101               	movlb	1	; () banked
  3872  000CF8  6F08               	movwf	recv_msg@tlength& (0+255),b
  3873  000CFA  0101               	movlb	1	; () banked
  3874  000CFC  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3878  000CFE  0101               	movlb	1	; () banked
  3879  000D00  0100               	movlb	0	; () banked
  3880  000D02  C106  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  3881  000D06  0101               	movlb	1	; () banked
  3882  000D08  0100               	movlb	0	; () banked
  3883  000D0A  C105  F0B8         	movff	recv_msg@data,memcpy@d1
  3884  000D0E  0E03               	movlw	3
  3885  000D10  0101               	movlb	1	; () banked
  3886  000D12  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  3887  000D14  0100               	movlb	0	; () banked
  3888  000D16  6FC2               	movwf	??_recv_msg& (0+255),b
  3889  000D18  0E00               	movlw	0
  3890  000D1A  0101               	movlb	1	; () banked
  3891  000D1C  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3892  000D1E  0100               	movlb	0	; () banked
  3893  000D20  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  3894  000D22  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  3895  000D26  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  3896  000D2A  C108  F0BC         	movff	recv_msg@tlength,memcpy@n
  3897  000D2E  C109  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  3898  000D32  ECCF  F00D         	call	_memcpy	;wreg free
  3899                           
  3900                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  3901  000D36  0101               	movlb	1	; () banked
  3902  000D38  EE20 F056          	lfsr	2,86
  3903  000D3C  0101               	movlb	1	; () banked
  3904  000D3E  5100               	movf	recv_msg@qptr& (0+255),w,b
  3905  000D40  26D9               	addwf	fsr2l,f,c
  3906  000D42  0101               	movlb	1	; () banked
  3907  000D44  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3908  000D46  22DA               	addwfc	fsr2h,f,c
  3909  000D48  0101               	movlb	1	; () banked
  3910  000D4A  EE10 F056          	lfsr	1,86
  3911  000D4E  0101               	movlb	1	; () banked
  3912  000D50  5100               	movf	recv_msg@qptr& (0+255),w,b
  3913  000D52  26E1               	addwf	fsr1l,f,c
  3914  000D54  0101               	movlb	1	; () banked
  3915  000D56  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3916  000D58  22E2               	addwfc	fsr1h,f,c
  3917  000D5A  50E7               	movf	indf1,w,c
  3918  000D5C  0100               	movlb	0	; () banked
  3919  000D5E  6FC2               	movwf	??_recv_msg& (0+255),b
  3920  000D60  0E01               	movlw	1
  3921  000D62  0100               	movlb	0	; () banked
  3922  000D64  25C2               	addwf	??_recv_msg& (0+255),w,b
  3923  000D66  0100               	movlb	0	; () banked
  3924  000D68  6FB8               	movwf	___awmod@dividend& (0+255),b
  3925  000D6A  0100               	movlb	0	; () banked
  3926  000D6C  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3927  000D6E  0E00               	movlw	0
  3928  000D70  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3929  000D72  0E00               	movlw	0
  3930  000D74  0100               	movlb	0	; () banked
  3931  000D76  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3932  000D78  0E05               	movlw	5
  3933  000D7A  0100               	movlb	0	; () banked
  3934  000D7C  6FBA               	movwf	___awmod@divisor& (0+255),b
  3935  000D7E  EC57  F00A         	call	___awmod	;wreg free
  3936  000D82  0100               	movlb	0	; () banked
  3937  000D84  51B8               	movf	?___awmod& (0+255),w,b
  3938  000D86  6EDF               	movwf	indf2,c
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3942  000D88  0101               	movlb	1	; () banked
  3943  000D8A  EE20 F002          	lfsr	2,2
  3944  000D8E  0101               	movlb	1	; () banked
  3945  000D90  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3946  000D92  26D9               	addwf	fsr2l,f,c
  3947  000D94  0101               	movlb	1	; () banked
  3948  000D96  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3949  000D98  22DA               	addwfc	fsr2h,f,c
  3950  000D9A  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  3951  000D9E  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3952  000DA2  CFDF FFE7          	movff	indf2,indf1
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;messages.c: 91: qmsg->full = 0;
  3956  000DA6  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  3957  000DAA  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3958  000DAE  0E00               	movlw	0
  3959  000DB0  6EDF               	movwf	indf2,c
  3960                           
  3961                           ; BSR set to: 1
  3962                           ;messages.c: 92: return (tlength);
  3963  000DB2  0101               	movlb	1	; () banked
  3964  000DB4  5108               	movf	recv_msg@tlength& (0+255),w,b
  3965  000DB6  0012               	return	
  3966  000DB8                     l3706:
  3967                           
  3968                           ; BSR set to: 1
  3969                           ;messages.c: 94: return (-4);
  3970  000DB8  0EFC               	movlw	252
  3971  000DBA  0012               	return	
  3972  000DBC                     __end_of_recv_msg:
  3973                           	opt stack 0
  3974                           tblptru	equ	0xFF8
  3975                           tblptrh	equ	0xFF7
  3976                           tblptrl	equ	0xFF6
  3977                           tablat	equ	0xFF5
  3978                           prodh	equ	0xFF4
  3979                           prodl	equ	0xFF3
  3980                           intcon	equ	0xFF2
  3981                           postinc0	equ	0xFEE
  3982                           wreg	equ	0xFE8
  3983                           indf1	equ	0xFE7
  3984                           fsr1h	equ	0xFE2
  3985                           fsr1l	equ	0xFE1
  3986                           indf2	equ	0xFDF
  3987                           postinc2	equ	0xFDE
  3988                           postdec2	equ	0xFDD
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           status	equ	0xFD8
  3992                           
  3993 ;; *************** function _memcpy *****************
  3994 ;; Defined at:
  3995 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  d1              2   56[BANK0 ] PTR void 
  3998 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3999 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  4000 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4001 ;;		 -> main@ic(38), 
  4002 ;;  s1              2   58[BANK0 ] PTR const void 
  4003 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4004 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4005 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  4006 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4007 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4008 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  4009 ;;		 -> main@ic(38), 
  4010 ;;  n               2   60[BANK0 ] unsigned int 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  4013 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4014 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4015 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  4016 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4017 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4018 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  4019 ;;		 -> main@ic(38), 
  4020 ;;  d               2   62[BANK0 ] PTR unsigned char 
  4021 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4022 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  4023 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4024 ;;		 -> main@ic(38), 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  2   56[BANK0 ] PTR void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4034 ;;      Params:         0       6       0       0       0
  4035 ;;      Locals:         0       4       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         0      10       0       0       0
  4038 ;;Total ram usage:       10 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:   10
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_send_msg
  4045 ;;		_recv_msg
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text24
  4050  001B9E                     __ptext24:
  4051                           	opt stack 0
  4052  001B9E                     _memcpy:
  4053                           	opt stack 17
  4054                           
  4055                           ; BSR set to: 1
  4056                           ;incstack = 0
  4057  001B9E  0100               	movlb	0	; () banked
  4058  001BA0  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4059  001BA4  0100               	movlb	0	; () banked
  4060  001BA6  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4061  001BAA  0100               	movlb	0	; () banked
  4062  001BAC  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4063  001BB0  0100               	movlb	0	; () banked
  4064  001BB2  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4065  001BB6  D010               	goto	l3500
  4066  001BB8                     l3494:
  4067                           
  4068                           ; BSR set to: 0
  4069  001BB8  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4070  001BBC  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4071  001BC0  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4072  001BC4  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4073  001BC8  CFDF FFE7          	movff	indf2,indf1
  4074                           
  4075                           ; BSR set to: 0
  4076  001BCC  0100               	movlb	0	; () banked
  4077  001BCE  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4078  001BD0  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4079                           
  4080                           ; BSR set to: 0
  4081  001BD2  0100               	movlb	0	; () banked
  4082  001BD4  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4083  001BD6  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4084  001BD8                     l3500:
  4085                           
  4086                           ; BSR set to: 0
  4087  001BD8  0100               	movlb	0	; () banked
  4088  001BDA  07BC               	decf	memcpy@n& (0+255),f,b
  4089  001BDC  A0D8               	btfss	status,0,c
  4090  001BDE  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4091  001BE0  0100               	movlb	0	; () banked
  4092  001BE2  29BC               	incf	memcpy@n& (0+255),w,b
  4093  001BE4  B4D8               	btfsc	status,2,c
  4094  001BE6  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4095  001BE8  B4D8               	btfsc	status,2,c
  4096                           
  4097                           ; BSR set to: 0
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;	Return value of _memcpy is never used
  4101  001BEA  0012               	return	
  4102  001BEC  D7E5               	goto	l3494
  4103  001BEE                     __end_of_memcpy:
  4104                           	opt stack 0
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           intcon	equ	0xFF2
  4112                           postinc0	equ	0xFEE
  4113                           wreg	equ	0xFE8
  4114                           indf1	equ	0xFE7
  4115                           fsr1h	equ	0xFE2
  4116                           fsr1l	equ	0xFE1
  4117                           indf2	equ	0xFDF
  4118                           postinc2	equ	0xFDE
  4119                           postdec2	equ	0xFDD
  4120                           fsr2h	equ	0xFDA
  4121                           fsr2l	equ	0xFD9
  4122                           status	equ	0xFD8
  4123                           
  4124 ;; *************** function ___awmod *****************
  4125 ;; Defined at:
  4126 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  dividend        2   56[BANK0 ] int 
  4129 ;;  divisor         2   58[BANK0 ] int 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  sign            1   61[BANK0 ] unsigned char 
  4132 ;;  counter         1   60[BANK0 ] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2   56[BANK0 ] int 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, prodl
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4142 ;;      Params:         0       4       0       0       0
  4143 ;;      Locals:         0       2       0       0       0
  4144 ;;      Temps:          0       0       0       0       0
  4145 ;;      Totals:         0       6       0       0       0
  4146 ;;Total ram usage:        6 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:   10
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_send_msg
  4153 ;;		_recv_msg
  4154 ;;		i1_send_msg
  4155 ;;		i2_send_msg
  4156 ;;		i1_recv_msg
  4157 ;;		i2_recv_msg
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text25
  4162  0014AE                     __ptext25:
  4163                           	opt stack 0
  4164  0014AE                     ___awmod:
  4165                           	opt stack 17
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;incstack = 0
  4169  0014AE  0E00               	movlw	0
  4170  0014B0  0100               	movlb	0	; () banked
  4171  0014B2  6FBD               	movwf	___awmod@sign& (0+255),b
  4172                           
  4173                           ; BSR set to: 0
  4174  0014B4  0100               	movlb	0	; () banked
  4175  0014B6  51B9               	movf	(___awmod@dividend+1)& (0+255),w,b
  4176  0014B8  0A80               	xorlw	128
  4177  0014BA  6EF3               	movwf	prodl,c
  4178  0014BC  0E80               	movlw	128
  4179  0014BE  5CF3               	subwf	prodl,w,c
  4180  0014C0  0E00               	movlw	0
  4181  0014C2  B4D8               	btfsc	status,2,c
  4182  0014C4  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4183  0014C6  B0D8               	btfsc	status,0,c
  4184  0014C8  D009               	goto	l3510
  4185                           
  4186                           ; BSR set to: 0
  4187  0014CA  0100               	movlb	0	; () banked
  4188  0014CC  6DB8               	negf	___awmod@dividend& (0+255),b
  4189  0014CE  0100               	movlb	0	; () banked
  4190  0014D0  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4191  0014D2  B0D8               	btfsc	status,0,c
  4192  0014D4  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4193                           
  4194                           ; BSR set to: 0
  4195  0014D6  0E01               	movlw	1
  4196  0014D8  0100               	movlb	0	; () banked
  4197  0014DA  6FBD               	movwf	___awmod@sign& (0+255),b
  4198  0014DC                     l3510:
  4199                           
  4200                           ; BSR set to: 0
  4201  0014DC  0100               	movlb	0	; () banked
  4202  0014DE  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4203  0014E0  0A80               	xorlw	128
  4204  0014E2  6EF3               	movwf	prodl,c
  4205  0014E4  0E80               	movlw	128
  4206  0014E6  5CF3               	subwf	prodl,w,c
  4207  0014E8  0E00               	movlw	0
  4208  0014EA  B4D8               	btfsc	status,2,c
  4209  0014EC  5DBA               	subwf	___awmod@divisor& (0+255),w,b
  4210  0014EE  B0D8               	btfsc	status,0,c
  4211  0014F0  D006               	goto	l3514
  4212                           
  4213                           ; BSR set to: 0
  4214  0014F2  0100               	movlb	0	; () banked
  4215  0014F4  6DBA               	negf	___awmod@divisor& (0+255),b
  4216  0014F6  0100               	movlb	0	; () banked
  4217  0014F8  1FBB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4218  0014FA  B0D8               	btfsc	status,0,c
  4219  0014FC  2BBB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4220  0014FE                     l3514:
  4221                           
  4222                           ; BSR set to: 0
  4223  0014FE  0100               	movlb	0	; () banked
  4224  001500  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4225  001502  11BA               	iorwf	___awmod@divisor& (0+255),w,b
  4226  001504  B4D8               	btfsc	status,2,c
  4227  001506  D026               	goto	l3530
  4228                           
  4229                           ; BSR set to: 0
  4230  001508  0E01               	movlw	1
  4231  00150A  0100               	movlb	0	; () banked
  4232  00150C  6FBC               	movwf	___awmod@counter& (0+255),b
  4233  00150E  D006               	goto	l3520
  4234  001510                     l3518:
  4235                           
  4236                           ; BSR set to: 0
  4237  001510  0100               	movlb	0	; () banked
  4238  001512  90D8               	bcf	status,0,c
  4239  001514  37BA               	rlcf	___awmod@divisor& (0+255),f,b
  4240  001516  37BB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4241  001518  0100               	movlb	0	; () banked
  4242  00151A  2BBC               	incf	___awmod@counter& (0+255),f,b
  4243  00151C                     l3520:
  4244                           
  4245                           ; BSR set to: 0
  4246  00151C  0100               	movlb	0	; () banked
  4247  00151E  AFBB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4248  001520  D7F7               	goto	l3518
  4249  001522                     l3522:
  4250                           
  4251                           ; BSR set to: 0
  4252  001522  0100               	movlb	0	; () banked
  4253  001524  51BA               	movf	___awmod@divisor& (0+255),w,b
  4254  001526  0100               	movlb	0	; () banked
  4255  001528  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4256  00152A  0100               	movlb	0	; () banked
  4257  00152C  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4258  00152E  0100               	movlb	0	; () banked
  4259  001530  59B9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4260  001532  A0D8               	btfss	status,0,c
  4261  001534  D008               	goto	l3526
  4262                           
  4263                           ; BSR set to: 0
  4264  001536  0100               	movlb	0	; () banked
  4265  001538  51BA               	movf	___awmod@divisor& (0+255),w,b
  4266  00153A  0100               	movlb	0	; () banked
  4267  00153C  5FB8               	subwf	___awmod@dividend& (0+255),f,b
  4268  00153E  0100               	movlb	0	; () banked
  4269  001540  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4270  001542  0100               	movlb	0	; () banked
  4271  001544  5BB9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4272  001546                     l3526:
  4273                           
  4274                           ; BSR set to: 0
  4275  001546  0100               	movlb	0	; () banked
  4276  001548  90D8               	bcf	status,0,c
  4277  00154A  33BB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4278  00154C  33BA               	rrcf	___awmod@divisor& (0+255),f,b
  4279                           
  4280                           ; BSR set to: 0
  4281  00154E  0100               	movlb	0	; () banked
  4282  001550  2FBC               	decfsz	___awmod@counter& (0+255),f,b
  4283  001552  D7E7               	goto	l3522
  4284  001554                     l3530:
  4285                           
  4286                           ; BSR set to: 0
  4287  001554  0100               	movlb	0	; () banked
  4288  001556  51BD               	movf	___awmod@sign& (0+255),w,b
  4289  001558  B4D8               	btfsc	status,2,c
  4290  00155A  D006               	goto	l3534
  4291                           
  4292                           ; BSR set to: 0
  4293  00155C  0100               	movlb	0	; () banked
  4294  00155E  6DB8               	negf	___awmod@dividend& (0+255),b
  4295  001560  0100               	movlb	0	; () banked
  4296  001562  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4297  001564  B0D8               	btfsc	status,0,c
  4298  001566  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4299  001568                     l3534:
  4300                           
  4301                           ; BSR set to: 0
  4302  001568  C0B8  F0B8         	movff	___awmod@dividend,?___awmod
  4303  00156C  C0B9  F0B9         	movff	___awmod@dividend+1,?___awmod+1
  4304  001570  0012               	return	
  4305  001572                     __end_of___awmod:
  4306                           	opt stack 0
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           prodh	equ	0xFF4
  4312                           prodl	equ	0xFF3
  4313                           intcon	equ	0xFF2
  4314                           postinc0	equ	0xFEE
  4315                           wreg	equ	0xFE8
  4316                           indf1	equ	0xFE7
  4317                           fsr1h	equ	0xFE2
  4318                           fsr1l	equ	0xFE1
  4319                           indf2	equ	0xFDF
  4320                           postinc2	equ	0xFDE
  4321                           postdec2	equ	0xFDD
  4322                           fsr2h	equ	0xFDA
  4323                           fsr2l	equ	0xFD9
  4324                           status	equ	0xFD8
  4325                           
  4326 ;; *************** function _OpenTimer1 *****************
  4327 ;; Defined at:
  4328 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  config          1    wreg     unsigned char 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  config          1   56[BANK0 ] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;		None               void
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         0       1       0       0       0
  4344 ;;      Temps:          0       0       0       0       0
  4345 ;;      Totals:         0       1       0       0       0
  4346 ;;Total ram usage:        1 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:   10
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text26
  4357  001D5E                     __ptext26:
  4358                           	opt stack 0
  4359  001D5E                     _OpenTimer1:
  4360                           	opt stack 20
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;incstack = 0
  4364                           ;OpenTimer1@config stored from wreg
  4365  001D5E  0100               	movlb	0	; () banked
  4366  001D60  6FB8               	movwf	OpenTimer1@config& (0+255),b
  4367                           
  4368                           ; BSR set to: 0
  4369  001D62  0100               	movlb	0	; () banked
  4370  001D64  51B8               	movf	OpenTimer1@config& (0+255),w,b
  4371  001D66  0B7E               	andlw	126
  4372  001D68  6ECD               	movwf	4045,c	;volatile
  4373                           
  4374                           ; BSR set to: 0
  4375  001D6A  0100               	movlb	0	; () banked
  4376  001D6C  ADB8               	btfss	OpenTimer1@config& (0+255),6,b
  4377  001D6E  D002               	goto	l563
  4378                           
  4379                           ; BSR set to: 0
  4380  001D70  8ECD               	bsf	4045,7,c	;volatile
  4381  001D72  D001               	goto	l3210
  4382  001D74                     l563:
  4383                           
  4384                           ; BSR set to: 0
  4385  001D74  9ECD               	bcf	4045,7,c	;volatile
  4386  001D76                     l3210:
  4387                           
  4388                           ; BSR set to: 0
  4389  001D76  0E00               	movlw	0
  4390  001D78  6ECF               	movwf	4047,c	;volatile
  4391  001D7A  0E00               	movlw	0
  4392  001D7C  6ECE               	movwf	4046,c	;volatile
  4393                           
  4394                           ; BSR set to: 0
  4395  001D7E  909E               	bcf	3998,0,c	;volatile
  4396                           
  4397                           ; BSR set to: 0
  4398  001D80  0100               	movlb	0	; () banked
  4399  001D82  AFB8               	btfss	OpenTimer1@config& (0+255),7,b
  4400  001D84  D002               	goto	l565
  4401                           
  4402                           ; BSR set to: 0
  4403  001D86  809D               	bsf	3997,0,c	;volatile
  4404  001D88  D001               	goto	l566
  4405  001D8A                     l565:
  4406                           
  4407                           ; BSR set to: 0
  4408  001D8A  909D               	bcf	3997,0,c	;volatile
  4409  001D8C                     l566:
  4410                           
  4411                           ; BSR set to: 0
  4412  001D8C  80CD               	bsf	4045,0,c	;volatile
  4413                           
  4414                           ; BSR set to: 0
  4415  001D8E  0012               	return	
  4416  001D90                     __end_of_OpenTimer1:
  4417                           	opt stack 0
  4418                           tblptru	equ	0xFF8
  4419                           tblptrh	equ	0xFF7
  4420                           tblptrl	equ	0xFF6
  4421                           tablat	equ	0xFF5
  4422                           prodh	equ	0xFF4
  4423                           prodl	equ	0xFF3
  4424                           intcon	equ	0xFF2
  4425                           postinc0	equ	0xFEE
  4426                           wreg	equ	0xFE8
  4427                           indf1	equ	0xFE7
  4428                           fsr1h	equ	0xFE2
  4429                           fsr1l	equ	0xFE1
  4430                           indf2	equ	0xFDF
  4431                           postinc2	equ	0xFDE
  4432                           postdec2	equ	0xFDD
  4433                           fsr2h	equ	0xFDA
  4434                           fsr2l	equ	0xFD9
  4435                           status	equ	0xFD8
  4436                           
  4437 ;; *************** function _OpenTimer0 *****************
  4438 ;; Defined at:
  4439 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  config          1    wreg     unsigned char 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  config          1   56[BANK0 ] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;		None               void
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4453 ;;      Params:         0       0       0       0       0
  4454 ;;      Locals:         0       1       0       0       0
  4455 ;;      Temps:          0       0       0       0       0
  4456 ;;      Totals:         0       1       0       0       0
  4457 ;;Total ram usage:        1 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:   10
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_main
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text27
  4468  001EC8                     __ptext27:
  4469                           	opt stack 0
  4470  001EC8                     _OpenTimer0:
  4471                           	opt stack 20
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;incstack = 0
  4475                           ;OpenTimer0@config stored from wreg
  4476  001EC8  0100               	movlb	0	; () banked
  4477  001ECA  6FB8               	movwf	OpenTimer0@config& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480  001ECC  0100               	movlb	0	; () banked
  4481  001ECE  51B8               	movf	OpenTimer0@config& (0+255),w,b
  4482  001ED0  0B7F               	andlw	127
  4483  001ED2  6ED5               	movwf	4053,c	;volatile
  4484                           
  4485                           ; BSR set to: 0
  4486  001ED4  0E00               	movlw	0
  4487  001ED6  6ED7               	movwf	4055,c	;volatile
  4488                           
  4489                           ; BSR set to: 0
  4490  001ED8  0E00               	movlw	0
  4491  001EDA  6ED6               	movwf	4054,c	;volatile
  4492                           
  4493                           ; BSR set to: 0
  4494  001EDC  94F2               	bcf	intcon,2,c	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497  001EDE  0100               	movlb	0	; () banked
  4498  001EE0  AFB8               	btfss	OpenTimer0@config& (0+255),7,b
  4499  001EE2  D002               	goto	l539
  4500                           
  4501                           ; BSR set to: 0
  4502  001EE4  8AF2               	bsf	intcon,5,c	;volatile
  4503  001EE6  D001               	goto	l540
  4504  001EE8                     l539:
  4505                           
  4506                           ; BSR set to: 0
  4507  001EE8  9AF2               	bcf	intcon,5,c	;volatile
  4508  001EEA                     l540:
  4509                           
  4510                           ; BSR set to: 0
  4511  001EEA  8ED5               	bsf	4053,7,c	;volatile
  4512                           
  4513                           ; BSR set to: 0
  4514  001EEC  0012               	return	
  4515  001EEE                     __end_of_OpenTimer0:
  4516                           	opt stack 0
  4517                           tblptru	equ	0xFF8
  4518                           tblptrh	equ	0xFF7
  4519                           tblptrl	equ	0xFF6
  4520                           tablat	equ	0xFF5
  4521                           prodh	equ	0xFF4
  4522                           prodl	equ	0xFF3
  4523                           intcon	equ	0xFF2
  4524                           postinc0	equ	0xFEE
  4525                           wreg	equ	0xFE8
  4526                           indf1	equ	0xFE7
  4527                           fsr1h	equ	0xFE2
  4528                           fsr1l	equ	0xFE1
  4529                           indf2	equ	0xFDF
  4530                           postinc2	equ	0xFDE
  4531                           postdec2	equ	0xFDD
  4532                           fsr2h	equ	0xFDA
  4533                           fsr2l	equ	0xFD9
  4534                           status	equ	0xFD8
  4535                           
  4536 ;; *************** function _InterruptHandlerLow *****************
  4537 ;; Defined at:
  4538 ;;		line 131 in file "../src/interrupts.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;		None               void
  4545 ;; Registers used:
  4546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4552 ;;      Params:         0       0       0       0       0
  4553 ;;      Locals:         0       0       0       0       0
  4554 ;;      Temps:         17       0       0       0       0
  4555 ;;      Totals:        17       0       0       0       0
  4556 ;;Total ram usage:       17 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    9
  4559 ;; This function calls:
  4560 ;;		_timer1_int_handler
  4561 ;;		_uart_receive_interrupt_handler
  4562 ;;		_uart_transmit_interrupt_handler
  4563 ;; This function is called by:
  4564 ;;		Interrupt level 1
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	intcodelo
  4569  000018                     __pintcodelo:
  4570                           	opt stack 0
  4571  000018                     _InterruptHandlerLow:
  4572                           	opt stack 17
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;incstack = 0
  4576  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4577  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4578  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4579  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4580  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4581  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4582  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4583  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4584  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4585  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4586  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4587  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4588  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4589  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4590  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4591  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4592  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4593                           
  4594                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  4595  00005C  A09E               	btfss	3998,0,c	;volatile
  4596  00005E  D003               	goto	i1l4136
  4597                           
  4598                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  4599  000060  909E               	bcf	3998,0,c	;volatile
  4600                           
  4601                           ;interrupts.c: 139: timer1_int_handler();
  4602  000062  EC26  F00F         	call	_timer1_int_handler	;wreg free
  4603  000066                     i1l4136:
  4604                           
  4605                           ;interrupts.c: 140: }
  4606                           ;interrupts.c: 143: if (PIR1bits.RCIF) {
  4607  000066  AA9E               	btfss	3998,5,c	;volatile
  4608  000068  D003               	goto	i1l4142
  4609                           
  4610                           ;interrupts.c: 144: PIR1bits.RCIF = 0;
  4611  00006A  9A9E               	bcf	3998,5,c	;volatile
  4612                           
  4613                           ;interrupts.c: 148: uart_receive_interrupt_handler();
  4614  00006C  EC78  F005         	call	_uart_receive_interrupt_handler	;wreg free
  4615  000070                     i1l4142:
  4616                           
  4617                           ;interrupts.c: 149: }
  4618                           ;interrupts.c: 153: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4619  000070  B89E               	btfsc	3998,4,c	;volatile
  4620  000072  A89D               	btfss	3997,4,c	;volatile
  4621  000074  D002               	goto	i1l52
  4622                           
  4623                           ;interrupts.c: 154: {
  4624                           ;interrupts.c: 158: uart_transmit_interrupt_handler();
  4625  000076  EC7B  F00B         	call	_uart_transmit_interrupt_handler	;wreg free
  4626  00007A                     i1l52:
  4627  00007A  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4628  00007E  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4629  000082  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4630  000086  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4631  00008A  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4632  00008E  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4633  000092  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4634  000096  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4635  00009A  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4636  00009E  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4637  0000A2  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4638  0000A6  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4639  0000AA  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4640  0000AE  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4641  0000B2  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4642  0000B6  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4643  0000BA  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4644  0000BE  0010               	retfie	
  4645  0000C0                     __end_of_InterruptHandlerLow:
  4646                           	opt stack 0
  4647                           pclatu	equ	0xFFB
  4648                           pclath	equ	0xFFA
  4649                           tblptru	equ	0xFF8
  4650                           tblptrh	equ	0xFF7
  4651                           tblptrl	equ	0xFF6
  4652                           tablat	equ	0xFF5
  4653                           prodh	equ	0xFF4
  4654                           prodl	equ	0xFF3
  4655                           intcon	equ	0xFF2
  4656                           postinc0	equ	0xFEE
  4657                           fsr0h	equ	0xFEA
  4658                           fsr0l	equ	0xFE9
  4659                           wreg	equ	0xFE8
  4660                           indf1	equ	0xFE7
  4661                           fsr1h	equ	0xFE2
  4662                           fsr1l	equ	0xFE1
  4663                           bsr	equ	0xFE0
  4664                           indf2	equ	0xFDF
  4665                           postinc2	equ	0xFDE
  4666                           postdec2	equ	0xFDD
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671 ;; *************** function _uart_transmit_interrupt_handler *****************
  4672 ;; Defined at:
  4673 ;;		line 200 in file "../src/my_uart.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  message_stat    1   44[COMRAM] char 
  4678 ;;  data           14   29[COMRAM] unsigned char [14]
  4679 ;;  msgtype         1   43[COMRAM] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4689 ;;      Params:         0       0       0       0       0
  4690 ;;      Locals:        16       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0
  4692 ;;      Totals:        16       0       0       0       0
  4693 ;;Total ram usage:       16 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    8
  4696 ;; This function calls:
  4697 ;;		_FromMainLow_recvmsg
  4698 ;;		_uart_frame_message
  4699 ;; This function is called by:
  4700 ;;		_InterruptHandlerLow
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text29
  4705  0016F6                     __ptext29:
  4706                           	opt stack 0
  4707  0016F6                     _uart_transmit_interrupt_handler:
  4708                           	opt stack 17
  4709                           
  4710                           ;my_uart.c: 203: static unsigned char done = 1;
  4711                           ;my_uart.c: 204: static unsigned char index = 0;
  4712                           ;my_uart.c: 206: unsigned char data[14];
  4713                           ;my_uart.c: 207: static unsigned char message[(14 + 2 + 2)];
  4714                           ;my_uart.c: 209: unsigned char msgtype = 31;
  4715                           
  4716                           ;incstack = 0
  4717  0016F6  0E1F               	movlw	31
  4718  0016F8  6E2C               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4719                           
  4720                           ;my_uart.c: 211: if( done )
  4721  0016FA  5075               	movf	uart_transmit_interrupt_handler@done,w,c
  4722  0016FC  B4D8               	btfsc	status,2,c
  4723  0016FE  D036               	goto	i1l4086
  4724                           
  4725                           ;my_uart.c: 212: {
  4726                           ;my_uart.c: 213: signed char message_status = FromMainLow_recvmsg(14,&msgtype, (void*)da
      +                          ta );
  4727  001700  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4728  001702  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4729  001704  0E2C               	movlw	low uart_transmit_interrupt_handler@msgtype
  4730  001706  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4731  001708  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4732  00170A  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4733  00170C  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4734  00170E  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4735  001710  0E0E               	movlw	14
  4736  001712  EC50  F00F         	call	_FromMainLow_recvmsg
  4737  001716  6E2D               	movwf	uart_transmit_interrupt_handler@message_status,c
  4738                           
  4739                           ;my_uart.c: 215: if( message_status == -4)
  4740  001718  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4741  00171A  0AFC               	xorlw	252
  4742  00171C  A4D8               	btfss	status,2,c
  4743  00171E  D002               	goto	i1l4058
  4744                           
  4745                           ;my_uart.c: 216: {
  4746                           ;my_uart.c: 218: PIE1bits.TX1IE = 0;
  4747  001720  989D               	bcf	3997,4,c	;volatile
  4748                           
  4749                           ;my_uart.c: 219: }
  4750  001722  0012               	return	
  4751  001724                     i1l4058:
  4752                           
  4753                           ;my_uart.c: 220: else if( message_status > 0 )
  4754  001724  502D               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4755  001726  0A80               	xorlw	128
  4756  001728  0F7F               	addlw	-129
  4757  00172A  A0D8               	btfss	status,0,c
  4758  00172C  0012               	return	
  4759                           
  4760                           ;my_uart.c: 221: {
  4761                           ;my_uart.c: 222: uart_frame_message( data , message );
  4762  00172E  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4763  001730  6E02               	movwf	uart_frame_message@inner+1,c
  4764  001732  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4765  001734  6E01               	movwf	uart_frame_message@inner,c
  4766  001736  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4767  001738  6E04               	movwf	uart_frame_message@outer+1,c
  4768  00173A  0E63               	movlw	low uart_transmit_interrupt_handler@message
  4769  00173C  6E03               	movwf	uart_frame_message@outer,c
  4770  00173E  EC81  F009         	call	_uart_frame_message	;wreg free
  4771                           
  4772                           ;my_uart.c: 223: index = 0;
  4773  001742  0E00               	movlw	0
  4774  001744  6E62               	movwf	uart_transmit_interrupt_handler@index,c
  4775                           
  4776                           ;my_uart.c: 224: done = 0;
  4777  001746  0E00               	movlw	0
  4778  001748  6E75               	movwf	uart_transmit_interrupt_handler@done,c
  4779                           
  4780                           ;my_uart.c: 226: TXREG1 = message[index];
  4781  00174A  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4782  00174C  0D01               	mullw	1
  4783  00174E  0E63               	movlw	low uart_transmit_interrupt_handler@message
  4784  001750  24F3               	addwf	prodl,w,c
  4785  001752  6ED9               	movwf	fsr2l,c
  4786  001754  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4787  001756  20F4               	addwfc	prodh,w,c
  4788  001758  6EDA               	movwf	fsr2h,c
  4789  00175A  50DF               	movf	indf2,w,c
  4790  00175C  6EAD               	movwf	4013,c	;volatile
  4791                           
  4792                           ;my_uart.c: 227: index++;
  4793  00175E  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4794                           
  4795                           ;my_uart.c: 228: if( index >= (14 + 2 + 2) )
  4796  001760  0E11               	movlw	17
  4797  001762  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4798  001764  0012               	return	
  4799                           
  4800                           ;my_uart.c: 229: {
  4801                           ;my_uart.c: 230: done = 1;
  4802  001766  0E01               	movlw	1
  4803  001768  6E75               	movwf	uart_transmit_interrupt_handler@done,c
  4804  00176A  0012               	return	
  4805  00176C                     i1l4086:
  4806                           
  4807                           ;my_uart.c: 247: else
  4808                           ;my_uart.c: 248: {
  4809                           ;my_uart.c: 250: TXREG1 = message[index];
  4810  00176C  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4811  00176E  0D01               	mullw	1
  4812  001770  0E63               	movlw	low uart_transmit_interrupt_handler@message
  4813  001772  24F3               	addwf	prodl,w,c
  4814  001774  6ED9               	movwf	fsr2l,c
  4815  001776  0E00               	movlw	high uart_transmit_interrupt_handler@message
  4816  001778  20F4               	addwfc	prodh,w,c
  4817  00177A  6EDA               	movwf	fsr2h,c
  4818  00177C  50DF               	movf	indf2,w,c
  4819  00177E  6EAD               	movwf	4013,c	;volatile
  4820                           
  4821                           ;my_uart.c: 251: index++;
  4822  001780  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4823                           
  4824                           ;my_uart.c: 252: if( index >= (14 + 2 + 2) )
  4825  001782  0E11               	movlw	17
  4826  001784  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4827  001786  0012               	return	
  4828                           
  4829                           ;my_uart.c: 253: {
  4830                           ;my_uart.c: 254: done = 1;
  4831  001788  0E01               	movlw	1
  4832  00178A  6E75               	movwf	uart_transmit_interrupt_handler@done,c
  4833  00178C  0012               	return	
  4834  00178E                     __end_of_uart_transmit_interrupt_handler:
  4835                           	opt stack 0
  4836                           pclatu	equ	0xFFB
  4837                           pclath	equ	0xFFA
  4838                           tblptru	equ	0xFF8
  4839                           tblptrh	equ	0xFF7
  4840                           tblptrl	equ	0xFF6
  4841                           tablat	equ	0xFF5
  4842                           prodh	equ	0xFF4
  4843                           prodl	equ	0xFF3
  4844                           intcon	equ	0xFF2
  4845                           postinc0	equ	0xFEE
  4846                           fsr0h	equ	0xFEA
  4847                           fsr0l	equ	0xFE9
  4848                           wreg	equ	0xFE8
  4849                           indf1	equ	0xFE7
  4850                           fsr1h	equ	0xFE2
  4851                           fsr1l	equ	0xFE1
  4852                           bsr	equ	0xFE0
  4853                           indf2	equ	0xFDF
  4854                           postinc2	equ	0xFDE
  4855                           postdec2	equ	0xFDD
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _uart_frame_message *****************
  4861 ;; Defined at:
  4862 ;;		line 368 in file "../src/my_uart.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  inner           2    0[COMRAM] PTR unsigned char 
  4865 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  4866 ;;  outer           2    2[COMRAM] PTR unsigned char 
  4867 ;;		 -> uart_transmit_interrupt_handler@message(18), 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  i               1    7[COMRAM] unsigned char 
  4870 ;;  checksum        1    6[COMRAM] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;		None               void
  4873 ;; Registers used:
  4874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4880 ;;      Params:         4       0       0       0       0
  4881 ;;      Locals:         2       0       0       0       0
  4882 ;;      Temps:          2       0       0       0       0
  4883 ;;      Totals:         8       0       0       0       0
  4884 ;;Total ram usage:        8 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    5
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_uart_transmit_interrupt_handler
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text30
  4895  001302                     __ptext30:
  4896                           	opt stack 0
  4897  001302                     _uart_frame_message:
  4898                           	opt stack 19
  4899                           
  4900                           ;my_uart.c: 370: static unsigned char sent_counter = 0;
  4901                           ;my_uart.c: 372: outer[0] = 0xff;
  4902                           
  4903                           ;incstack = 0
  4904  001302  C003  FFD9         	movff	uart_frame_message@outer,fsr2l
  4905  001306  C004  FFDA         	movff	uart_frame_message@outer+1,fsr2h
  4906  00130A  0EFF               	movlw	255
  4907  00130C  6EDF               	movwf	indf2,c
  4908                           
  4909                           ;my_uart.c: 373: outer[1] = sent_counter++;
  4910  00130E  EE20 F001          	lfsr	2,1
  4911  001312  5003               	movf	uart_frame_message@outer,w,c
  4912  001314  26D9               	addwf	fsr2l,f,c
  4913  001316  5004               	movf	uart_frame_message@outer+1,w,c
  4914  001318  22DA               	addwfc	fsr2h,f,c
  4915  00131A  C05C  FFDF         	movff	uart_frame_message@sent_counter,indf2
  4916  00131E  2A5C               	incf	uart_frame_message@sent_counter,f,c
  4917                           
  4918                           ;my_uart.c: 374: outer[(14 + 2 + 2)-1] = 0xfe;
  4919  001320  EE20 F011          	lfsr	2,17
  4920  001324  5003               	movf	uart_frame_message@outer,w,c
  4921  001326  26D9               	addwf	fsr2l,f,c
  4922  001328  5004               	movf	uart_frame_message@outer+1,w,c
  4923  00132A  22DA               	addwfc	fsr2h,f,c
  4924  00132C  0EFE               	movlw	254
  4925  00132E  6EDF               	movwf	indf2,c
  4926                           
  4927                           ;my_uart.c: 376: unsigned char checksum = 0;
  4928  001330  0E00               	movlw	0
  4929  001332  6E07               	movwf	uart_frame_message@checksum,c
  4930                           
  4931                           ;my_uart.c: 377: unsigned char i;
  4932                           ;my_uart.c: 378: for(i=0;i<14;i++)
  4933  001334  0E00               	movlw	0
  4934  001336  6E08               	movwf	uart_frame_message@i,c
  4935  001338  D049               	goto	L3
  4936  00133A                     i1l1594:
  4937                           
  4938                           ;my_uart.c: 379: {
  4939                           ;my_uart.c: 380: if( inner[i] == 0xff || inner[i] == 0xfe )
  4940  00133A  5008               	movf	uart_frame_message@i,w,c
  4941  00133C  0D01               	mullw	1
  4942  00133E  50F3               	movf	prodl,w,c
  4943  001340  2401               	addwf	uart_frame_message@inner,w,c
  4944  001342  6ED9               	movwf	fsr2l,c
  4945  001344  50F4               	movf	prodh,w,c
  4946  001346  2002               	addwfc	uart_frame_message@inner+1,w,c
  4947  001348  6EDA               	movwf	fsr2h,c
  4948  00134A  50DF               	movf	indf2,w,c
  4949  00134C  0AFF               	xorlw	255
  4950  00134E  B4D8               	btfsc	status,2,c
  4951  001350  D00B               	goto	i1l1598
  4952  001352  5008               	movf	uart_frame_message@i,w,c
  4953  001354  0D01               	mullw	1
  4954  001356  50F3               	movf	prodl,w,c
  4955  001358  2401               	addwf	uart_frame_message@inner,w,c
  4956  00135A  6ED9               	movwf	fsr2l,c
  4957  00135C  50F4               	movf	prodh,w,c
  4958  00135E  2002               	addwfc	uart_frame_message@inner+1,w,c
  4959  001360  6EDA               	movwf	fsr2h,c
  4960  001362  0EFE               	movlw	254
  4961  001364  62DF               	cpfseq	indf2,c
  4962  001366  D010               	goto	i1l1600
  4963  001368                     i1l1598:
  4964                           
  4965                           ;my_uart.c: 381: {
  4966                           ;my_uart.c: 382: outer[i+2] = 0xfd;
  4967  001368  5008               	movf	uart_frame_message@i,w,c
  4968  00136A  6E05               	movwf	??_uart_frame_message& (0+255),c
  4969  00136C  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  4970  00136E  0E02               	movlw	2
  4971  001370  2605               	addwf	??_uart_frame_message,f,c
  4972  001372  0E00               	movlw	0
  4973  001374  2206               	addwfc	??_uart_frame_message+1,f,c
  4974  001376  5005               	movf	??_uart_frame_message,w,c
  4975  001378  2403               	addwf	uart_frame_message@outer,w,c
  4976  00137A  6ED9               	movwf	fsr2l,c
  4977  00137C  5006               	movf	??_uart_frame_message+1,w,c
  4978  00137E  2004               	addwfc	uart_frame_message@outer+1,w,c
  4979  001380  6EDA               	movwf	fsr2h,c
  4980  001382  0EFD               	movlw	253
  4981  001384  6EDF               	movwf	indf2,c
  4982                           
  4983                           ;my_uart.c: 383: }
  4984  001386  D017               	goto	i1l1602
  4985  001388                     i1l1600:
  4986                           
  4987                           ;my_uart.c: 384: else
  4988                           ;my_uart.c: 385: {
  4989                           ;my_uart.c: 386: outer[i+2] = inner[i];
  4990  001388  5008               	movf	uart_frame_message@i,w,c
  4991  00138A  0D01               	mullw	1
  4992  00138C  50F3               	movf	prodl,w,c
  4993  00138E  2401               	addwf	uart_frame_message@inner,w,c
  4994  001390  6ED9               	movwf	fsr2l,c
  4995  001392  50F4               	movf	prodh,w,c
  4996  001394  2002               	addwfc	uart_frame_message@inner+1,w,c
  4997  001396  6EDA               	movwf	fsr2h,c
  4998  001398  5008               	movf	uart_frame_message@i,w,c
  4999  00139A  6E05               	movwf	??_uart_frame_message& (0+255),c
  5000  00139C  6A06               	clrf	(??_uart_frame_message+1)& (0+255),c
  5001  00139E  0E02               	movlw	2
  5002  0013A0  2605               	addwf	??_uart_frame_message,f,c
  5003  0013A2  0E00               	movlw	0
  5004  0013A4  2206               	addwfc	??_uart_frame_message+1,f,c
  5005  0013A6  5005               	movf	??_uart_frame_message,w,c
  5006  0013A8  2403               	addwf	uart_frame_message@outer,w,c
  5007  0013AA  6EE1               	movwf	fsr1l,c
  5008  0013AC  5006               	movf	??_uart_frame_message+1,w,c
  5009  0013AE  2004               	addwfc	uart_frame_message@outer+1,w,c
  5010  0013B0  6EE2               	movwf	fsr1h,c
  5011  0013B2  CFDF FFE7          	movff	indf2,indf1
  5012  0013B6                     i1l1602:
  5013                           
  5014                           ;my_uart.c: 387: }
  5015                           ;my_uart.c: 388: checksum ^= inner[i];
  5016  0013B6  5008               	movf	uart_frame_message@i,w,c
  5017  0013B8  0D01               	mullw	1
  5018  0013BA  50F3               	movf	prodl,w,c
  5019  0013BC  2401               	addwf	uart_frame_message@inner,w,c
  5020  0013BE  6ED9               	movwf	fsr2l,c
  5021  0013C0  50F4               	movf	prodh,w,c
  5022  0013C2  2002               	addwfc	uart_frame_message@inner+1,w,c
  5023  0013C4  6EDA               	movwf	fsr2h,c
  5024  0013C6  50DF               	movf	indf2,w,c
  5025  0013C8  1A07               	xorwf	uart_frame_message@checksum,f,c
  5026  0013CA  2A08               	incf	uart_frame_message@i,f,c
  5027  0013CC                     L3:
  5028  0013CC  0E0D               	movlw	13
  5029  0013CE  6408               	cpfsgt	uart_frame_message@i,c
  5030  0013D0  D7B4               	goto	i1l1594
  5031                           
  5032                           ;my_uart.c: 389: }
  5033                           ;my_uart.c: 390: outer[(14 + 2 + 2)-2] = checksum;
  5034  0013D2  EE20 F010          	lfsr	2,16
  5035  0013D6  5003               	movf	uart_frame_message@outer,w,c
  5036  0013D8  26D9               	addwf	fsr2l,f,c
  5037  0013DA  5004               	movf	uart_frame_message@outer+1,w,c
  5038  0013DC  22DA               	addwfc	fsr2h,f,c
  5039  0013DE  C007  FFDF         	movff	uart_frame_message@checksum,indf2
  5040  0013E2  0012               	return	
  5041  0013E4                     __end_of_uart_frame_message:
  5042                           	opt stack 0
  5043                           pclatu	equ	0xFFB
  5044                           pclath	equ	0xFFA
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           intcon	equ	0xFF2
  5052                           postinc0	equ	0xFEE
  5053                           fsr0h	equ	0xFEA
  5054                           fsr0l	equ	0xFE9
  5055                           wreg	equ	0xFE8
  5056                           indf1	equ	0xFE7
  5057                           fsr1h	equ	0xFE2
  5058                           fsr1l	equ	0xFE1
  5059                           bsr	equ	0xFE0
  5060                           indf2	equ	0xFDF
  5061                           postinc2	equ	0xFDE
  5062                           postdec2	equ	0xFDD
  5063                           fsr2h	equ	0xFDA
  5064                           fsr2l	equ	0xFD9
  5065                           status	equ	0xFD8
  5066                           
  5067 ;; *************** function _FromMainLow_recvmsg *****************
  5068 ;; Defined at:
  5069 ;;		line 159 in file "../src/messages.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  maxlength       1    wreg     unsigned char 
  5072 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5073 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5074 ;;  data            2   26[COMRAM] PTR void 
  5075 ;;		 -> uart_transmit_interrupt_handler@data(14), 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  maxlength       1   28[COMRAM] unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      char 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5087 ;;      Params:         4       0       0       0       0
  5088 ;;      Locals:         1       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0
  5090 ;;      Totals:         5       0       0       0       0
  5091 ;;Total ram usage:        5 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    7
  5094 ;; This function calls:
  5095 ;;		i1_recv_msg
  5096 ;; This function is called by:
  5097 ;;		_uart_transmit_interrupt_handler
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text31
  5102  001EA0                     __ptext31:
  5103                           	opt stack 0
  5104  001EA0                     _FromMainLow_recvmsg:
  5105                           	opt stack 17
  5106                           
  5107                           ;incstack = 0
  5108                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5109  001EA0  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5110                           
  5111                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5112  001EA2  0102               	movlb	2	; () banked
  5113  001EA4  0E02               	movlw	high _FromMainLow_MQ
  5114  001EA6  6E0C               	movwf	i1recv_msg@qptr+1,c
  5115  001EA8  0102               	movlb	2	; () banked
  5116  001EAA  0E00               	movlw	low _FromMainLow_MQ
  5117  001EAC  6E0B               	movwf	i1recv_msg@qptr,c
  5118  001EAE  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5119  001EB2  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5120  001EB6  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5121  001EBA  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5122  001EBE  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5123  001EC2  EC0D  F009         	call	i1_recv_msg	;wreg free
  5124  001EC6  0012               	return	
  5125  001EC8                     __end_of_FromMainLow_recvmsg:
  5126                           	opt stack 0
  5127                           pclatu	equ	0xFFB
  5128                           pclath	equ	0xFFA
  5129                           tblptru	equ	0xFF8
  5130                           tblptrh	equ	0xFF7
  5131                           tblptrl	equ	0xFF6
  5132                           tablat	equ	0xFF5
  5133                           prodh	equ	0xFF4
  5134                           prodl	equ	0xFF3
  5135                           intcon	equ	0xFF2
  5136                           postinc0	equ	0xFEE
  5137                           fsr0h	equ	0xFEA
  5138                           fsr0l	equ	0xFE9
  5139                           wreg	equ	0xFE8
  5140                           indf1	equ	0xFE7
  5141                           fsr1h	equ	0xFE2
  5142                           fsr1l	equ	0xFE1
  5143                           bsr	equ	0xFE0
  5144                           indf2	equ	0xFDF
  5145                           postinc2	equ	0xFDE
  5146                           postdec2	equ	0xFDD
  5147                           fsr2h	equ	0xFDA
  5148                           fsr2l	equ	0xFD9
  5149                           status	equ	0xFD8
  5150                           
  5151 ;; *************** function i1_recv_msg *****************
  5152 ;; Defined at:
  5153 ;;		line 63 in file "../src/messages.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5156 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5157 ;;  maxlength       1   12[COMRAM] unsigned char 
  5158 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5159 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  5160 ;;		 -> main@msgtype(1), 
  5161 ;;  data            2   15[COMRAM] PTR void 
  5162 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), main@msgbuffer(15), 
  5163 ;;		 -> main@ic(38), 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5166 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5167 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5168 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5169 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      char 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5179 ;;      Params:         7       0       0       0       0
  5180 ;;      Locals:         5       0       0       0       0
  5181 ;;      Temps:          2       0       0       0       0
  5182 ;;      Totals:        14       0       0       0       0
  5183 ;;Total ram usage:       14 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    6
  5186 ;; This function calls:
  5187 ;;		i1___awmod
  5188 ;;		i1_memcpy
  5189 ;; This function is called by:
  5190 ;;		_FromMainLow_recvmsg
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text32
  5195  00121A                     __ptext32:
  5196                           	opt stack 0
  5197  00121A                     i1_recv_msg:
  5198                           	opt stack 17
  5199                           
  5200                           ;messages.c: 64: unsigned char slot;
  5201                           ;messages.c: 68: msg *qmsg;
  5202                           ;messages.c: 69: size_t tlength;
  5203                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5204                           
  5205                           ;incstack = 0
  5206  00121A  EE20 F056          	lfsr	2,86
  5207  00121E  500B               	movf	i1recv_msg@qptr,w,c
  5208  001220  26D9               	addwf	fsr2l,f,c
  5209  001222  500C               	movf	i1recv_msg@qptr+1,w,c
  5210  001224  22DA               	addwfc	fsr2h,f,c
  5211  001226  50DF               	movf	indf2,w,c
  5212  001228  6E14               	movwf	i1recv_msg@slot,c
  5213                           
  5214                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5215  00122A  5014               	movf	i1recv_msg@slot,w,c
  5216  00122C  0D11               	mullw	17
  5217  00122E  50F3               	movf	prodl,w,c
  5218  001230  240B               	addwf	i1recv_msg@qptr,w,c
  5219  001232  6E17               	movwf	i1recv_msg@qmsg,c
  5220  001234  50F4               	movf	prodh,w,c
  5221  001236  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5222  001238  6E18               	movwf	i1recv_msg@qmsg+1,c
  5223                           
  5224                           ;messages.c: 74: if (qmsg->full == 1) {
  5225  00123A  0E01               	movlw	1
  5226  00123C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5227  001240  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5228  001244  62DF               	cpfseq	indf2,c
  5229  001246  D05B               	goto	i1l3638
  5230                           
  5231                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5232  001248  EE20 F001          	lfsr	2,1
  5233  00124C  5017               	movf	i1recv_msg@qmsg,w,c
  5234  00124E  26D9               	addwf	fsr2l,f,c
  5235  001250  5018               	movf	i1recv_msg@qmsg+1,w,c
  5236  001252  22DA               	addwfc	fsr2h,f,c
  5237  001254  50DF               	movf	indf2,w,c
  5238  001256  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5239  001258  B0D8               	btfsc	status,0,c
  5240  00125A  D002               	goto	i1l3622
  5241                           
  5242                           ;messages.c: 77: return (-3);
  5243  00125C  0EFD               	movlw	253
  5244  00125E  0012               	return	
  5245  001260                     i1l3622:
  5246                           
  5247                           ;messages.c: 78: }
  5248                           ;messages.c: 80: tlength = qmsg->length;
  5249  001260  EE20 F001          	lfsr	2,1
  5250  001264  5017               	movf	i1recv_msg@qmsg,w,c
  5251  001266  26D9               	addwf	fsr2l,f,c
  5252  001268  5018               	movf	i1recv_msg@qmsg+1,w,c
  5253  00126A  22DA               	addwfc	fsr2h,f,c
  5254  00126C  50DF               	movf	indf2,w,c
  5255  00126E  6E12               	movwf	??i1_recv_msg& (0+255),c
  5256  001270  5012               	movf	??i1_recv_msg,w,c
  5257  001272  6E15               	movwf	i1recv_msg@tlength,c
  5258  001274  6A16               	clrf	i1recv_msg@tlength+1,c
  5259                           
  5260                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5261  001276  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5262  00127A  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5263  00127E  0E03               	movlw	3
  5264  001280  2417               	addwf	i1recv_msg@qmsg,w,c
  5265  001282  6E12               	movwf	??i1_recv_msg& (0+255),c
  5266  001284  0E00               	movlw	0
  5267  001286  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5268  001288  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5269  00128A  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5270  00128E  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5271  001292  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5272  001296  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5273  00129A  EC1F  F00E         	call	i1_memcpy	;wreg free
  5274                           
  5275                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5276  00129E  EE20 F056          	lfsr	2,86
  5277  0012A2  500B               	movf	i1recv_msg@qptr,w,c
  5278  0012A4  26D9               	addwf	fsr2l,f,c
  5279  0012A6  500C               	movf	i1recv_msg@qptr+1,w,c
  5280  0012A8  22DA               	addwfc	fsr2h,f,c
  5281  0012AA  EE10 F056          	lfsr	1,86
  5282  0012AE  500B               	movf	i1recv_msg@qptr,w,c
  5283  0012B0  26E1               	addwf	fsr1l,f,c
  5284  0012B2  500C               	movf	i1recv_msg@qptr+1,w,c
  5285  0012B4  22E2               	addwfc	fsr1h,f,c
  5286  0012B6  50E7               	movf	indf1,w,c
  5287  0012B8  6E12               	movwf	??i1_recv_msg& (0+255),c
  5288  0012BA  0E01               	movlw	1
  5289  0012BC  2412               	addwf	??i1_recv_msg,w,c
  5290  0012BE  6E01               	movwf	i1___awmod@dividend,c
  5291  0012C0  6A02               	clrf	i1___awmod@dividend+1,c
  5292  0012C2  0E00               	movlw	0
  5293  0012C4  2202               	addwfc	i1___awmod@dividend+1,f,c
  5294  0012C6  0E00               	movlw	0
  5295  0012C8  6E04               	movwf	i1___awmod@divisor+1,c
  5296  0012CA  0E05               	movlw	5
  5297  0012CC  6E03               	movwf	i1___awmod@divisor,c
  5298  0012CE  ECC7  F00B         	call	i1___awmod	;wreg free
  5299  0012D2  5001               	movf	?i1___awmod,w,c
  5300  0012D4  6EDF               	movwf	indf2,c
  5301                           
  5302                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5303  0012D6  EE20 F002          	lfsr	2,2
  5304  0012DA  5017               	movf	i1recv_msg@qmsg,w,c
  5305  0012DC  26D9               	addwf	fsr2l,f,c
  5306  0012DE  5018               	movf	i1recv_msg@qmsg+1,w,c
  5307  0012E0  22DA               	addwfc	fsr2h,f,c
  5308  0012E2  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5309  0012E6  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5310  0012EA  CFDF FFE7          	movff	indf2,indf1
  5311                           
  5312                           ;messages.c: 91: qmsg->full = 0;
  5313  0012EE  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5314  0012F2  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5315  0012F6  0E00               	movlw	0
  5316  0012F8  6EDF               	movwf	indf2,c
  5317                           
  5318                           ;messages.c: 92: return (tlength);
  5319  0012FA  5015               	movf	i1recv_msg@tlength,w,c
  5320  0012FC  0012               	return	
  5321  0012FE                     i1l3638:
  5322                           
  5323                           ;messages.c: 94: return (-4);
  5324  0012FE  0EFC               	movlw	252
  5325  001300  0012               	return	
  5326  001302                     __end_ofi1_recv_msg:
  5327                           	opt stack 0
  5328                           pclatu	equ	0xFFB
  5329                           pclath	equ	0xFFA
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           postinc0	equ	0xFEE
  5338                           fsr0h	equ	0xFEA
  5339                           fsr0l	equ	0xFE9
  5340                           wreg	equ	0xFE8
  5341                           indf1	equ	0xFE7
  5342                           fsr1h	equ	0xFE2
  5343                           fsr1l	equ	0xFE1
  5344                           bsr	equ	0xFE0
  5345                           indf2	equ	0xFDF
  5346                           postinc2	equ	0xFDE
  5347                           postdec2	equ	0xFDD
  5348                           fsr2h	equ	0xFDA
  5349                           fsr2l	equ	0xFD9
  5350                           status	equ	0xFD8
  5351                           
  5352 ;; *************** function _uart_receive_interrupt_handler *****************
  5353 ;; Defined at:
  5354 ;;		line 61 in file "../src/my_uart.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5359 ;;  message_coun    1   50[COMRAM] unsigned char 
  5360 ;;  status          1   42[COMRAM] unsigned char 
  5361 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5362 ;;  msg_id          1   51[COMRAM] unsigned char 
  5363 ;;  status          1   43[COMRAM] unsigned char 
  5364 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5365 ;;  bad_counter_    2   44[COMRAM] unsigned char [2]
  5366 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5367 ;;  i               2   52[COMRAM] int 
  5368 ;;  checksum        1   46[COMRAM] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;		None               void
  5371 ;; Registers used:
  5372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5378 ;;      Params:         0       0       0       0       0
  5379 ;;      Locals:        26       0       0       0       0
  5380 ;;      Temps:          2       0       0       0       0
  5381 ;;      Totals:        28       0       0       0       0
  5382 ;;Total ram usage:       28 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    8
  5385 ;; This function calls:
  5386 ;;		_ToMainLow_sendmsg
  5387 ;; This function is called by:
  5388 ;;		_InterruptHandlerLow
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text33
  5393  000AF0                     __ptext33:
  5394                           	opt stack 0
  5395  000AF0                     _uart_receive_interrupt_handler:
  5396                           	opt stack 17
  5397                           
  5398                           ;my_uart.c: 64: static unsigned char frame[(14 + 2 + 2)];
  5399                           ;my_uart.c: 65: static unsigned char index = 0;
  5400                           ;my_uart.c: 66: static unsigned char done = 0;
  5401                           ;my_uart.c: 67: static unsigned char received_counter = 0;
  5402                           ;my_uart.c: 69: static unsigned char start_byte_bad = 0;
  5403                           ;my_uart.c: 70: static unsigned char error = 0;
  5404                           ;my_uart.c: 72: if(!done)
  5405                           
  5406                           ;incstack = 0
  5407  000AF0  665D               	tstfsz	uart_receive_interrupt_handler@done,c
  5408  000AF2  D03B               	goto	i1l3992
  5409                           
  5410                           ;my_uart.c: 73: {
  5411                           ;my_uart.c: 74: frame[index] = RCREG1;
  5412  000AF4  505F               	movf	uart_receive_interrupt_handler@index,w,c
  5413  000AF6  0D01               	mullw	1
  5414  000AF8  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5415  000AFA  24F3               	addwf	prodl,w,c
  5416  000AFC  6ED9               	movwf	fsr2l,c
  5417  000AFE  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5418  000B00  20F4               	addwfc	prodh,w,c
  5419  000B02  6EDA               	movwf	fsr2h,c
  5420  000B04  CFAE FFDF          	movff	4014,indf2	;volatile
  5421                           
  5422                           ;my_uart.c: 78: }
  5423                           ;my_uart.c: 79: if( index == 0 )
  5424                           
  5425                           ;my_uart.c: 76: {
  5426  000B08  665F               	tstfsz	uart_receive_interrupt_handler@index,c
  5427  000B0A  D018               	goto	i1l3978
  5428                           
  5429                           ;my_uart.c: 80: {
  5430                           ;my_uart.c: 81: if( frame[0] != 0xff )
  5431  000B0C  2848               	incf	uart_receive_interrupt_handler@frame,w,c
  5432  000B0E  B4D8               	btfsc	status,2,c
  5433  000B10  D012               	goto	i1l3976
  5434                           
  5435                           ;my_uart.c: 82: {
  5436                           ;my_uart.c: 83: if( !start_byte_bad )
  5437  000B12  6661               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5438  000B14  D00D               	goto	i1l3970
  5439                           
  5440                           ;my_uart.c: 84: {
  5441                           ;my_uart.c: 85: start_byte_bad = 1;
  5442  000B16  0E01               	movlw	1
  5443  000B18  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5444                           
  5445                           ;my_uart.c: 86: unsigned char bad_start_id = received_counter;
  5446  000B1A  C060  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5447                           
  5448                           ;my_uart.c: 87: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5449  000B1E  0E22               	movlw	34
  5450  000B20  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5451  000B22  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5452  000B24  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5453  000B26  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5454  000B28  6E18               	movwf	ToMainLow_sendmsg@data,c
  5455  000B2A  0E01               	movlw	1
  5456  000B2C  EC77  F00F         	call	_ToMainLow_sendmsg
  5457  000B30                     i1l3970:
  5458                           
  5459                           ;my_uart.c: 89: }
  5460                           ;my_uart.c: 90: index = 0;
  5461  000B30  0E00               	movlw	0
  5462  000B32  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5463  000B34  0012               	return	
  5464  000B36                     i1l3976:
  5465                           
  5466                           ;my_uart.c: 93: else
  5467                           ;my_uart.c: 94: {
  5468                           ;my_uart.c: 95: start_byte_bad = 0;
  5469  000B36  0E00               	movlw	0
  5470  000B38  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5471  000B3A  D016               	goto	i1l3990
  5472  000B3C                     i1l3978:
  5473                           
  5474                           ;my_uart.c: 98: else if( index >= (14 + 2 + 2) - 1 )
  5475  000B3C  0E10               	movlw	16
  5476  000B3E  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5477  000B40  D013               	goto	i1l3990
  5478                           
  5479                           ;my_uart.c: 99: {
  5480                           ;my_uart.c: 100: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5481  000B42  5059               	movf	uart_receive_interrupt_handler@frame+17,w,c
  5482  000B44  0AFE               	xorlw	254
  5483  000B46  B4D8               	btfsc	status,2,c
  5484  000B48  D00F               	goto	i1l3990
  5485                           
  5486                           ;my_uart.c: 101: {
  5487                           ;my_uart.c: 103: index = 0;
  5488  000B4A  0E00               	movlw	0
  5489  000B4C  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5490                           
  5491                           ;my_uart.c: 106: unsigned char bad_end_id = received_counter;
  5492  000B4E  C060  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5493                           
  5494                           ;my_uart.c: 107: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5495  000B52  0E23               	movlw	35
  5496  000B54  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5497  000B56  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5498  000B58  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5499  000B5A  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5500  000B5C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5501  000B5E  0E01               	movlw	1
  5502  000B60  EC77  F00F         	call	_ToMainLow_sendmsg
  5503                           
  5504                           ;my_uart.c: 108: error = 1;
  5505  000B64  0E01               	movlw	1
  5506  000B66  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5507  000B68                     i1l3990:
  5508                           
  5509                           ;my_uart.c: 109: }
  5510                           ;my_uart.c: 110: }
  5511                           ;my_uart.c: 111: index++;
  5512  000B68  2A5F               	incf	uart_receive_interrupt_handler@index,f,c
  5513  000B6A                     i1l3992:
  5514                           
  5515                           ;my_uart.c: 112: }
  5516                           ;my_uart.c: 114: if( index >= (14 + 2 + 2) )
  5517  000B6A  0E11               	movlw	17
  5518  000B6C  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5519  000B6E  0012               	return	
  5520                           
  5521                           ;my_uart.c: 115: {
  5522                           ;my_uart.c: 116: index = 0;
  5523  000B70  0E00               	movlw	0
  5524  000B72  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5525                           
  5526                           ;my_uart.c: 118: if( received_counter != frame[1] )
  5527  000B74  5049               	movf	uart_receive_interrupt_handler@frame+1,w,c
  5528  000B76  1860               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5529  000B78  B4D8               	btfsc	status,2,c
  5530  000B7A  D00F               	goto	i1l4002
  5531                           
  5532                           ;my_uart.c: 119: {
  5533                           ;my_uart.c: 121: unsigned char bad_counter_id[2];
  5534                           ;my_uart.c: 122: bad_counter_id[0] = received_counter;
  5535  000B7C  C060  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5536                           
  5537                           ;my_uart.c: 123: bad_counter_id[1] = frame[1];
  5538  000B80  C049  F02E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5539                           
  5540                           ;my_uart.c: 124: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5541  000B84  0E21               	movlw	33
  5542  000B86  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5543  000B88  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5544  000B8A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5545  000B8C  0E2D               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5546  000B8E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5547  000B90  0E02               	movlw	2
  5548  000B92  EC77  F00F         	call	_ToMainLow_sendmsg
  5549                           
  5550                           ;my_uart.c: 125: error = 1;
  5551  000B96  0E01               	movlw	1
  5552  000B98  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5553  000B9A                     i1l4002:
  5554                           
  5555                           ;my_uart.c: 126: }
  5556                           ;my_uart.c: 129: unsigned char gooey_uart_center[14];
  5557                           ;my_uart.c: 130: unsigned char checksum = 0;
  5558  000B9A  0E00               	movlw	0
  5559  000B9C  6E2F               	movwf	uart_receive_interrupt_handler@checksum,c
  5560                           
  5561                           ;my_uart.c: 131: int i;
  5562                           ;my_uart.c: 132: for(i = 0; i < 14; i++)
  5563  000B9E  0E00               	movlw	0
  5564  000BA0  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5565  000BA2  0E00               	movlw	0
  5566  000BA4  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5567  000BA6  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5568  000BA8  0A80               	xorlw	128
  5569  000BAA  0F80               	addlw	-128
  5570  000BAC  0E0E               	movlw	14
  5571  000BAE  B4D8               	btfsc	status,2,c
  5572  000BB0  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5573  000BB2  B0D8               	btfsc	status,0,c
  5574  000BB4  D01F               	goto	i1l4018
  5575                           
  5576                           ;my_uart.c: 133: {
  5577                           ;my_uart.c: 134: gooey_uart_center[i] = frame[i+2];
  5578  000BB6  0E02               	movlw	2
  5579  000BB8  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5580  000BBA  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5581  000BBC  0E00               	movlw	0
  5582  000BBE  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5583  000BC0  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5584  000BC2  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5585  000BC4  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5586  000BC6  6ED9               	movwf	fsr2l,c
  5587  000BC8  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5588  000BCA  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5589  000BCC  6EDA               	movwf	fsr2h,c
  5590  000BCE  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5591  000BD0  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5592  000BD2  6EE1               	movwf	fsr1l,c
  5593  000BD4  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5594  000BD6  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5595  000BD8  6EE2               	movwf	fsr1h,c
  5596  000BDA  CFDF FFE7          	movff	indf2,indf1
  5597                           
  5598                           ;my_uart.c: 135: checksum ^= gooey_uart_center[i];
  5599  000BDE  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5600  000BE0  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5601  000BE2  6ED9               	movwf	fsr2l,c
  5602  000BE4  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5603  000BE6  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5604  000BE8  6EDA               	movwf	fsr2h,c
  5605  000BEA  50DF               	movf	indf2,w,c
  5606  000BEC  1A2F               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5607  000BEE  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5608  000BF0  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5609  000BF2  D7D9               	goto	L4
  5610  000BF4                     i1l4018:
  5611                           
  5612                           ;my_uart.c: 136: }
  5613                           ;my_uart.c: 138: if( checksum != frame[(14 + 2 + 2) - 2] )
  5614  000BF4  5058               	movf	uart_receive_interrupt_handler@frame+16,w,c
  5615  000BF6  182F               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5616  000BF8  B4D8               	btfsc	status,2,c
  5617  000BFA  D00D               	goto	i1l4026
  5618                           
  5619                           ;my_uart.c: 139: {
  5620                           ;my_uart.c: 141: unsigned char bad_checksum_id = received_counter;
  5621  000BFC  C060  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5622                           
  5623                           ;my_uart.c: 142: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5624  000C00  0E20               	movlw	32
  5625  000C02  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5626  000C04  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5627  000C06  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5628  000C08  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5629  000C0A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5630  000C0C  0E01               	movlw	1
  5631  000C0E  EC77  F00F         	call	_ToMainLow_sendmsg
  5632                           
  5633                           ;my_uart.c: 143: error = 1;
  5634  000C12  0E01               	movlw	1
  5635  000C14  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5636  000C16                     i1l4026:
  5637                           
  5638                           ;my_uart.c: 144: }
  5639                           ;my_uart.c: 149: if( !error )
  5640  000C16  665E               	tstfsz	uart_receive_interrupt_handler@error,c
  5641  000C18  D02C               	goto	i1l4046
  5642                           
  5643                           ;my_uart.c: 150: {
  5644                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5645  000C1A  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5646                           
  5647                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5648  000C1E  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5649  000C20  0A11               	xorlw	17
  5650  000C22  B4D8               	btfsc	status,2,c
  5651  000C24  D01C               	goto	i1l414
  5652  000C26  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5653  000C28  0AF1               	xorlw	241
  5654  000C2A  B4D8               	btfsc	status,2,c
  5655  000C2C  D018               	goto	i1l414
  5656  000C2E  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5657  000C30  0AF2               	xorlw	242
  5658  000C32  B4D8               	btfsc	status,2,c
  5659  000C34  D014               	goto	i1l414
  5660  000C36  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5661  000C38  0AF3               	xorlw	243
  5662  000C3A  B4D8               	btfsc	status,2,c
  5663  000C3C  D010               	goto	i1l414
  5664  000C3E  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5665  000C40  0AF4               	xorlw	244
  5666  000C42  B4D8               	btfsc	status,2,c
  5667  000C44  D00C               	goto	i1l414
  5668                           
  5669                           ;my_uart.c: 155: {
  5670                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5671  000C46  C060  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5672                           
  5673                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5674  000C4A  0E24               	movlw	36
  5675  000C4C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5676  000C4E  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5677  000C50  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5678  000C52  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5679  000C54  6E18               	movwf	ToMainLow_sendmsg@data,c
  5680  000C56  0E01               	movlw	1
  5681  000C58  EC77  F00F         	call	_ToMainLow_sendmsg
  5682  000C5C  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5683  000C5E                     i1l414:
  5684                           
  5685                           ;my_uart.c: 158: }
  5686                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5687  000C5E  0E1F               	movlw	31
  5688  000C60  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5689  000C62  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5690  000C64  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5691  000C66  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5692  000C68  6E18               	movwf	ToMainLow_sendmsg@data,c
  5693  000C6A  0E0E               	movlw	14
  5694  000C6C  EC77  F00F         	call	_ToMainLow_sendmsg
  5695  000C70  6E2C               	movwf	uart_receive_interrupt_handler@status_1822,c
  5696  000C72                     i1l4046:
  5697                           
  5698                           ;my_uart.c: 171: }
  5699                           ;my_uart.c: 172: }
  5700                           ;my_uart.c: 174: received_counter++;
  5701  000C72  2A60               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5702                           
  5703                           ;my_uart.c: 175: error = 0;
  5704  000C74  0E00               	movlw	0
  5705  000C76  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5706  000C78  0012               	return	
  5707  000C7A                     __end_of_uart_receive_interrupt_handler:
  5708                           	opt stack 0
  5709                           pclatu	equ	0xFFB
  5710                           pclath	equ	0xFFA
  5711                           tblptru	equ	0xFF8
  5712                           tblptrh	equ	0xFF7
  5713                           tblptrl	equ	0xFF6
  5714                           tablat	equ	0xFF5
  5715                           prodh	equ	0xFF4
  5716                           prodl	equ	0xFF3
  5717                           intcon	equ	0xFF2
  5718                           postinc0	equ	0xFEE
  5719                           fsr0h	equ	0xFEA
  5720                           fsr0l	equ	0xFE9
  5721                           wreg	equ	0xFE8
  5722                           indf1	equ	0xFE7
  5723                           fsr1h	equ	0xFE2
  5724                           fsr1l	equ	0xFE1
  5725                           bsr	equ	0xFE0
  5726                           indf2	equ	0xFDF
  5727                           postinc2	equ	0xFDE
  5728                           postdec2	equ	0xFDD
  5729                           fsr2h	equ	0xFDA
  5730                           fsr2l	equ	0xFD9
  5731                           status	equ	0xFD8
  5732                           
  5733 ;; *************** function _timer1_int_handler *****************
  5734 ;; Defined at:
  5735 ;;		line 38 in file "../src/user_interrupts.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  result          2   26[COMRAM] unsigned int 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;		None               void
  5742 ;; Registers used:
  5743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5749 ;;      Params:         0       0       0       0       0
  5750 ;;      Locals:         2       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0
  5752 ;;      Totals:         2       0       0       0       0
  5753 ;;Total ram usage:        2 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    8
  5756 ;; This function calls:
  5757 ;;		_ReadTimer1
  5758 ;;		_ToMainLow_sendmsg
  5759 ;;		_WriteTimer1
  5760 ;; This function is called by:
  5761 ;;		_InterruptHandlerLow
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           	psect	text34
  5766  001E4C                     __ptext34:
  5767                           	opt stack 0
  5768  001E4C                     _timer1_int_handler:
  5769                           	opt stack 17
  5770                           
  5771                           ;user_interrupts.c: 42: unsigned int result;
  5772                           ;user_interrupts.c: 49: result = ReadTimer1();
  5773                           
  5774                           ;incstack = 0
  5775  001E4C  ECBB  F00F         	call	_ReadTimer1	;wreg free
  5776  001E50  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5777  001E54  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5778                           
  5779                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5780  001E58  0E0B               	movlw	11
  5781  001E5A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5782  001E5C  0E00               	movlw	0
  5783  001E5E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5784  001E60  0E00               	movlw	0
  5785  001E62  6E18               	movwf	ToMainLow_sendmsg@data,c
  5786  001E64  0E00               	movlw	0
  5787  001E66  EC77  F00F         	call	_ToMainLow_sendmsg
  5788                           
  5789                           ;user_interrupts.c: 53: WriteTimer1(0);
  5790  001E6A  0E00               	movlw	0
  5791  001E6C  6E02               	movwf	WriteTimer1@timer1+1,c
  5792  001E6E  0E00               	movlw	0
  5793  001E70  6E01               	movwf	WriteTimer1@timer1,c
  5794  001E72  ECB2  F00F         	call	_WriteTimer1	;wreg free
  5795  001E76  0012               	return	
  5796  001E78                     __end_of_timer1_int_handler:
  5797                           	opt stack 0
  5798                           pclatu	equ	0xFFB
  5799                           pclath	equ	0xFFA
  5800                           tblptru	equ	0xFF8
  5801                           tblptrh	equ	0xFF7
  5802                           tblptrl	equ	0xFF6
  5803                           tablat	equ	0xFF5
  5804                           prodh	equ	0xFF4
  5805                           prodl	equ	0xFF3
  5806                           intcon	equ	0xFF2
  5807                           postinc0	equ	0xFEE
  5808                           fsr0h	equ	0xFEA
  5809                           fsr0l	equ	0xFE9
  5810                           wreg	equ	0xFE8
  5811                           indf1	equ	0xFE7
  5812                           fsr1h	equ	0xFE2
  5813                           fsr1l	equ	0xFE1
  5814                           bsr	equ	0xFE0
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _WriteTimer1 *****************
  5823 ;; Defined at:
  5824 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  timer1          2    0[COMRAM] unsigned int 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  timer           2    2[COMRAM] struct Timers
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		None
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5838 ;;      Params:         2       0       0       0       0
  5839 ;;      Locals:         2       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0
  5841 ;;      Totals:         4       0       0       0       0
  5842 ;;Total ram usage:        4 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    5
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_timer1_int_handler
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text35
  5853  001F64                     __ptext35:
  5854                           	opt stack 0
  5855  001F64                     _WriteTimer1:
  5856                           	opt stack 19
  5857                           
  5858                           ;incstack = 0
  5859  001F64  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5860  001F68  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5861  001F6C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5862  001F70  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5863  001F74  0012               	return	
  5864  001F76                     __end_of_WriteTimer1:
  5865                           	opt stack 0
  5866                           pclatu	equ	0xFFB
  5867                           pclath	equ	0xFFA
  5868                           tblptru	equ	0xFF8
  5869                           tblptrh	equ	0xFF7
  5870                           tblptrl	equ	0xFF6
  5871                           tablat	equ	0xFF5
  5872                           prodh	equ	0xFF4
  5873                           prodl	equ	0xFF3
  5874                           intcon	equ	0xFF2
  5875                           postinc0	equ	0xFEE
  5876                           fsr0h	equ	0xFEA
  5877                           fsr0l	equ	0xFE9
  5878                           wreg	equ	0xFE8
  5879                           indf1	equ	0xFE7
  5880                           fsr1h	equ	0xFE2
  5881                           fsr1l	equ	0xFE1
  5882                           bsr	equ	0xFE0
  5883                           indf2	equ	0xFDF
  5884                           postinc2	equ	0xFDE
  5885                           postdec2	equ	0xFDD
  5886                           fsr2h	equ	0xFDA
  5887                           fsr2l	equ	0xFD9
  5888                           status	equ	0xFD8
  5889                           
  5890 ;; *************** function _ToMainLow_sendmsg *****************
  5891 ;; Defined at:
  5892 ;;		line 103 in file "../src/messages.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  length          1    wreg     unsigned char 
  5895 ;;  msgtype         1   22[COMRAM] unsigned char 
  5896 ;;  data            2   23[COMRAM] PTR void 
  5897 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5898 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  length          1   25[COMRAM] unsigned char 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      char 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5910 ;;      Params:         3       0       0       0       0
  5911 ;;      Locals:         1       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0
  5913 ;;      Totals:         4       0       0       0       0
  5914 ;;Total ram usage:        4 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    7
  5917 ;; This function calls:
  5918 ;;		i1_send_msg
  5919 ;; This function is called by:
  5920 ;;		_uart_receive_interrupt_handler
  5921 ;;		_timer1_int_handler
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text36
  5926  001EEE                     __ptext36:
  5927                           	opt stack 0
  5928  001EEE                     _ToMainLow_sendmsg:
  5929                           	opt stack 17
  5930                           
  5931                           ;incstack = 0
  5932                           ;ToMainLow_sendmsg@length stored from wreg
  5933  001EEE  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5934                           
  5935                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5936  001EF0  0101               	movlb	1	; () banked
  5937  001EF2  0E01               	movlw	high _ToMainLow_MQ
  5938  001EF4  6E0C               	movwf	i1send_msg@qptr+1,c
  5939  001EF6  0101               	movlb	1	; () banked
  5940  001EF8  0E74               	movlw	low _ToMainLow_MQ
  5941  001EFA  6E0B               	movwf	i1send_msg@qptr,c
  5942  001EFC  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5943  001F00  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5944  001F04  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5945  001F08  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5946  001F0C  EC1B  F00B         	call	i1_send_msg	;wreg free
  5947  001F10  0012               	return	
  5948  001F12                     __end_of_ToMainLow_sendmsg:
  5949                           	opt stack 0
  5950                           pclatu	equ	0xFFB
  5951                           pclath	equ	0xFFA
  5952                           tblptru	equ	0xFF8
  5953                           tblptrh	equ	0xFF7
  5954                           tblptrl	equ	0xFF6
  5955                           tablat	equ	0xFF5
  5956                           prodh	equ	0xFF4
  5957                           prodl	equ	0xFF3
  5958                           intcon	equ	0xFF2
  5959                           postinc0	equ	0xFEE
  5960                           fsr0h	equ	0xFEA
  5961                           fsr0l	equ	0xFE9
  5962                           wreg	equ	0xFE8
  5963                           indf1	equ	0xFE7
  5964                           fsr1h	equ	0xFE2
  5965                           fsr1l	equ	0xFE1
  5966                           bsr	equ	0xFE0
  5967                           indf2	equ	0xFDF
  5968                           postinc2	equ	0xFDE
  5969                           postdec2	equ	0xFDD
  5970                           fsr2h	equ	0xFDA
  5971                           fsr2l	equ	0xFD9
  5972                           status	equ	0xFD8
  5973                           
  5974 ;; *************** function i1_send_msg *****************
  5975 ;; Defined at:
  5976 ;;		line 24 in file "../src/messages.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5979 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5980 ;;  length          1   12[COMRAM] unsigned char 
  5981 ;;  msgtype         1   13[COMRAM] unsigned char 
  5982 ;;  data            2   14[COMRAM] PTR void 
  5983 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  5984 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  5985 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  5986 ;;		 -> main@ic(38), 
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5989 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5990 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5991 ;;  send_msg        2   17[COMRAM] unsigned int 
  5992 ;;  send_msg        1   19[COMRAM] unsigned char 
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      char 
  5995 ;; Registers used:
  5996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6002 ;;      Params:         6       0       0       0       0
  6003 ;;      Locals:         5       0       0       0       0
  6004 ;;      Temps:          1       0       0       0       0
  6005 ;;      Totals:        12       0       0       0       0
  6006 ;;Total ram usage:       12 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    6
  6009 ;; This function calls:
  6010 ;;		i1___awmod
  6011 ;;		i1_memcpy
  6012 ;; This function is called by:
  6013 ;;		_ToMainLow_sendmsg
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text37
  6018  001636                     __ptext37:
  6019                           	opt stack 0
  6020  001636                     i1_send_msg:
  6021                           	opt stack 17
  6022                           
  6023                           ;messages.c: 25: unsigned char slot;
  6024                           ;messages.c: 27: msg *qmsg;
  6025                           ;messages.c: 28: size_t tlength = length;
  6026                           
  6027                           ;incstack = 0
  6028  001636  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6029  00163A  6A13               	clrf	i1send_msg@tlength+1,c
  6030                           
  6031                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6032  00163C  EE20 F055          	lfsr	2,85
  6033  001640  500B               	movf	i1send_msg@qptr,w,c
  6034  001642  26D9               	addwf	fsr2l,f,c
  6035  001644  500C               	movf	i1send_msg@qptr+1,w,c
  6036  001646  22DA               	addwfc	fsr2h,f,c
  6037  001648  50DF               	movf	indf2,w,c
  6038  00164A  6E14               	movwf	i1send_msg@slot,c
  6039                           
  6040                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6041  00164C  5014               	movf	i1send_msg@slot,w,c
  6042  00164E  0D11               	mullw	17
  6043  001650  50F3               	movf	prodl,w,c
  6044  001652  240B               	addwf	i1send_msg@qptr,w,c
  6045  001654  6E15               	movwf	i1send_msg@qmsg,c
  6046  001656  50F4               	movf	prodh,w,c
  6047  001658  200C               	addwfc	i1send_msg@qptr+1,w,c
  6048  00165A  6E16               	movwf	i1send_msg@qmsg+1,c
  6049                           
  6050                           ;messages.c: 41: if (qmsg->full != 0) {
  6051  00165C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6052  001660  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6053  001664  50DF               	movf	indf2,w,c
  6054  001666  B4D8               	btfsc	status,2,c
  6055  001668  D002               	goto	i1l3574
  6056                           
  6057                           ;messages.c: 42: return (-1);
  6058  00166A  0EFF               	movlw	255
  6059  00166C  0012               	return	
  6060  00166E                     i1l3574:
  6061                           
  6062                           ;messages.c: 43: }
  6063                           ;messages.c: 46: qmsg->length = length;
  6064  00166E  EE20 F001          	lfsr	2,1
  6065  001672  5015               	movf	i1send_msg@qmsg,w,c
  6066  001674  26D9               	addwf	fsr2l,f,c
  6067  001676  5016               	movf	i1send_msg@qmsg+1,w,c
  6068  001678  22DA               	addwfc	fsr2h,f,c
  6069  00167A  C00D  FFDF         	movff	i1send_msg@length,indf2
  6070                           
  6071                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6072  00167E  EE20 F002          	lfsr	2,2
  6073  001682  5015               	movf	i1send_msg@qmsg,w,c
  6074  001684  26D9               	addwf	fsr2l,f,c
  6075  001686  5016               	movf	i1send_msg@qmsg+1,w,c
  6076  001688  22DA               	addwfc	fsr2h,f,c
  6077  00168A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6078                           
  6079                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6080  00168E  0E03               	movlw	3
  6081  001690  2415               	addwf	i1send_msg@qmsg,w,c
  6082  001692  6E01               	movwf	i1memcpy@d1,c
  6083  001694  0E00               	movlw	0
  6084  001696  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6085  001698  6E02               	movwf	i1memcpy@d1+1,c
  6086  00169A  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6087  00169E  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6088  0016A2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6089  0016A6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6090  0016AA  EC1F  F00E         	call	i1_memcpy	;wreg free
  6091                           
  6092                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6093  0016AE  EE20 F055          	lfsr	2,85
  6094  0016B2  500B               	movf	i1send_msg@qptr,w,c
  6095  0016B4  26D9               	addwf	fsr2l,f,c
  6096  0016B6  500C               	movf	i1send_msg@qptr+1,w,c
  6097  0016B8  22DA               	addwfc	fsr2h,f,c
  6098  0016BA  EE10 F055          	lfsr	1,85
  6099  0016BE  500B               	movf	i1send_msg@qptr,w,c
  6100  0016C0  26E1               	addwf	fsr1l,f,c
  6101  0016C2  500C               	movf	i1send_msg@qptr+1,w,c
  6102  0016C4  22E2               	addwfc	fsr1h,f,c
  6103  0016C6  50E7               	movf	indf1,w,c
  6104  0016C8  6E11               	movwf	??i1_send_msg& (0+255),c
  6105  0016CA  0E01               	movlw	1
  6106  0016CC  2411               	addwf	??i1_send_msg,w,c
  6107  0016CE  6E01               	movwf	i1___awmod@dividend,c
  6108  0016D0  6A02               	clrf	i1___awmod@dividend+1,c
  6109  0016D2  0E00               	movlw	0
  6110  0016D4  2202               	addwfc	i1___awmod@dividend+1,f,c
  6111  0016D6  0E00               	movlw	0
  6112  0016D8  6E04               	movwf	i1___awmod@divisor+1,c
  6113  0016DA  0E05               	movlw	5
  6114  0016DC  6E03               	movwf	i1___awmod@divisor,c
  6115  0016DE  ECC7  F00B         	call	i1___awmod	;wreg free
  6116  0016E2  5001               	movf	?i1___awmod,w,c
  6117  0016E4  6EDF               	movwf	indf2,c
  6118                           
  6119                           ;messages.c: 59: qmsg->full = 1;
  6120  0016E6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6121  0016EA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6122  0016EE  0E01               	movlw	1
  6123  0016F0  6EDF               	movwf	indf2,c
  6124                           
  6125                           ;messages.c: 60: return (1);
  6126  0016F2  0E01               	movlw	1
  6127  0016F4  0012               	return	
  6128  0016F6                     __end_ofi1_send_msg:
  6129                           	opt stack 0
  6130                           pclatu	equ	0xFFB
  6131                           pclath	equ	0xFFA
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodh	equ	0xFF4
  6137                           prodl	equ	0xFF3
  6138                           intcon	equ	0xFF2
  6139                           postinc0	equ	0xFEE
  6140                           fsr0h	equ	0xFEA
  6141                           fsr0l	equ	0xFE9
  6142                           wreg	equ	0xFE8
  6143                           indf1	equ	0xFE7
  6144                           fsr1h	equ	0xFE2
  6145                           fsr1l	equ	0xFE1
  6146                           bsr	equ	0xFE0
  6147                           indf2	equ	0xFDF
  6148                           postinc2	equ	0xFDE
  6149                           postdec2	equ	0xFDD
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8
  6153                           
  6154 ;; *************** function i1_memcpy *****************
  6155 ;; Defined at:
  6156 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  d1              2    0[COMRAM] PTR void 
  6159 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6160 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  6161 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6162 ;;		 -> main@ic(38), 
  6163 ;;  s1              2    2[COMRAM] PTR const void 
  6164 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6165 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6166 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  6167 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6168 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  6169 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  6170 ;;		 -> main@ic(38), 
  6171 ;;  n               2    4[COMRAM] unsigned int 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6174 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6175 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6176 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  6177 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6178 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  6179 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  6180 ;;		 -> main@ic(38), 
  6181 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6182 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6183 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  6184 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6185 ;;		 -> main@ic(38), 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  2    0[COMRAM] PTR void 
  6188 ;; Registers used:
  6189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6195 ;;      Params:         6       0       0       0       0
  6196 ;;      Locals:         4       0       0       0       0
  6197 ;;      Temps:          0       0       0       0       0
  6198 ;;      Totals:        10       0       0       0       0
  6199 ;;Total ram usage:       10 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    5
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		i1_send_msg
  6206 ;;		i1_recv_msg
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text38
  6211  001C3E                     __ptext38:
  6212                           	opt stack 0
  6213  001C3E                     i1_memcpy:
  6214                           	opt stack 17
  6215                           
  6216                           ;incstack = 0
  6217  001C3E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6218  001C42  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6219  001C46  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6220  001C4A  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6221  001C4E  D00E               	goto	i1l2412
  6222  001C50                     i1l2406:
  6223  001C50  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6224  001C54  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6225  001C58  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6226  001C5C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6227  001C60  CFDF FFE7          	movff	indf2,indf1
  6228  001C64  4A09               	infsnz	i1memcpy@s,f,c
  6229  001C66  2A0A               	incf	i1memcpy@s+1,f,c
  6230  001C68  4A07               	infsnz	i1memcpy@d,f,c
  6231  001C6A  2A08               	incf	i1memcpy@d+1,f,c
  6232  001C6C                     i1l2412:
  6233  001C6C  0605               	decf	i1memcpy@n,f,c
  6234  001C6E  A0D8               	btfss	status,0,c
  6235  001C70  0606               	decf	i1memcpy@n+1,f,c
  6236  001C72  2805               	incf	i1memcpy@n& (0+255),w,c
  6237  001C74  B4D8               	btfsc	status,2,c
  6238  001C76  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6239  001C78  B4D8               	btfsc	status,2,c
  6240                           
  6241                           ;	Return value of i1_memcpy is never used
  6242  001C7A  0012               	return	
  6243  001C7C  D7E9               	goto	i1l2406
  6244  001C7E                     __end_ofi1_memcpy:
  6245                           	opt stack 0
  6246                           pclatu	equ	0xFFB
  6247                           pclath	equ	0xFFA
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           prodh	equ	0xFF4
  6253                           prodl	equ	0xFF3
  6254                           intcon	equ	0xFF2
  6255                           postinc0	equ	0xFEE
  6256                           fsr0h	equ	0xFEA
  6257                           fsr0l	equ	0xFE9
  6258                           wreg	equ	0xFE8
  6259                           indf1	equ	0xFE7
  6260                           fsr1h	equ	0xFE2
  6261                           fsr1l	equ	0xFE1
  6262                           bsr	equ	0xFE0
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           postdec2	equ	0xFDD
  6266                           fsr2h	equ	0xFDA
  6267                           fsr2l	equ	0xFD9
  6268                           status	equ	0xFD8
  6269                           
  6270 ;; *************** function i1___awmod *****************
  6271 ;; Defined at:
  6272 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  dividend        2    0[COMRAM] int 
  6275 ;;  divisor         2    2[COMRAM] int 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  __awmod         1    5[COMRAM] unsigned char 
  6278 ;;  __awmod         1    4[COMRAM] unsigned char 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  2    0[COMRAM] int 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, prodl
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6288 ;;      Params:         4       0       0       0       0
  6289 ;;      Locals:         2       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0
  6291 ;;      Totals:         6       0       0       0       0
  6292 ;;Total ram usage:        6 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    5
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		i1_send_msg
  6299 ;;		i1_recv_msg
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text39
  6304  00178E                     __ptext39:
  6305                           	opt stack 0
  6306  00178E                     i1___awmod:
  6307                           	opt stack 17
  6308                           
  6309                           ;incstack = 0
  6310  00178E  0E00               	movlw	0
  6311  001790  6E06               	movwf	i1___awmod@sign,c
  6312  001792  5002               	movf	i1___awmod@dividend+1,w,c
  6313  001794  0A80               	xorlw	128
  6314  001796  6EF3               	movwf	prodl,c
  6315  001798  0E80               	movlw	128
  6316  00179A  5CF3               	subwf	prodl,w,c
  6317  00179C  0E00               	movlw	0
  6318  00179E  B4D8               	btfsc	status,2,c
  6319  0017A0  5C01               	subwf	i1___awmod@dividend,w,c
  6320  0017A2  B0D8               	btfsc	status,0,c
  6321  0017A4  D006               	goto	i1l2432
  6322  0017A6  6C01               	negf	i1___awmod@dividend,c
  6323  0017A8  1E02               	comf	i1___awmod@dividend+1,f,c
  6324  0017AA  B0D8               	btfsc	status,0,c
  6325  0017AC  2A02               	incf	i1___awmod@dividend+1,f,c
  6326  0017AE  0E01               	movlw	1
  6327  0017B0  6E06               	movwf	i1___awmod@sign,c
  6328  0017B2                     i1l2432:
  6329  0017B2  5004               	movf	i1___awmod@divisor+1,w,c
  6330  0017B4  0A80               	xorlw	128
  6331  0017B6  6EF3               	movwf	prodl,c
  6332  0017B8  0E80               	movlw	128
  6333  0017BA  5CF3               	subwf	prodl,w,c
  6334  0017BC  0E00               	movlw	0
  6335  0017BE  B4D8               	btfsc	status,2,c
  6336  0017C0  5C03               	subwf	i1___awmod@divisor,w,c
  6337  0017C2  B0D8               	btfsc	status,0,c
  6338  0017C4  D004               	goto	i1l2436
  6339  0017C6  6C03               	negf	i1___awmod@divisor,c
  6340  0017C8  1E04               	comf	i1___awmod@divisor+1,f,c
  6341  0017CA  B0D8               	btfsc	status,0,c
  6342  0017CC  2A04               	incf	i1___awmod@divisor+1,f,c
  6343  0017CE                     i1l2436:
  6344  0017CE  5004               	movf	i1___awmod@divisor+1,w,c
  6345  0017D0  1003               	iorwf	i1___awmod@divisor,w,c
  6346  0017D2  B4D8               	btfsc	status,2,c
  6347  0017D4  D018               	goto	i1l2452
  6348  0017D6  0E01               	movlw	1
  6349  0017D8  6E05               	movwf	i1___awmod@counter,c
  6350  0017DA  D004               	goto	i1l2442
  6351  0017DC                     i1l2440:
  6352  0017DC  90D8               	bcf	status,0,c
  6353  0017DE  3603               	rlcf	i1___awmod@divisor,f,c
  6354  0017E0  3604               	rlcf	i1___awmod@divisor+1,f,c
  6355  0017E2  2A05               	incf	i1___awmod@counter,f,c
  6356  0017E4                     i1l2442:
  6357  0017E4  AE04               	btfss	i1___awmod@divisor+1,7,c
  6358  0017E6  D7FA               	goto	i1l2440
  6359  0017E8                     i1l2444:
  6360  0017E8  5003               	movf	i1___awmod@divisor,w,c
  6361  0017EA  5C01               	subwf	i1___awmod@dividend,w,c
  6362  0017EC  5004               	movf	i1___awmod@divisor+1,w,c
  6363  0017EE  5802               	subwfb	i1___awmod@dividend+1,w,c
  6364  0017F0  A0D8               	btfss	status,0,c
  6365  0017F2  D004               	goto	i1l2448
  6366  0017F4  5003               	movf	i1___awmod@divisor,w,c
  6367  0017F6  5E01               	subwf	i1___awmod@dividend,f,c
  6368  0017F8  5004               	movf	i1___awmod@divisor+1,w,c
  6369  0017FA  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6370  0017FC                     i1l2448:
  6371  0017FC  90D8               	bcf	status,0,c
  6372  0017FE  3204               	rrcf	i1___awmod@divisor+1,f,c
  6373  001800  3203               	rrcf	i1___awmod@divisor,f,c
  6374  001802  2E05               	decfsz	i1___awmod@counter,f,c
  6375  001804  D7F1               	goto	i1l2444
  6376  001806                     i1l2452:
  6377  001806  5006               	movf	i1___awmod@sign,w,c
  6378  001808  B4D8               	btfsc	status,2,c
  6379  00180A  D004               	goto	i1l2456
  6380  00180C  6C01               	negf	i1___awmod@dividend,c
  6381  00180E  1E02               	comf	i1___awmod@dividend+1,f,c
  6382  001810  B0D8               	btfsc	status,0,c
  6383  001812  2A02               	incf	i1___awmod@dividend+1,f,c
  6384  001814                     i1l2456:
  6385  001814  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6386  001818  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6387  00181C  0012               	return	
  6388  00181E                     __end_ofi1___awmod:
  6389                           	opt stack 0
  6390                           pclatu	equ	0xFFB
  6391                           pclath	equ	0xFFA
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           intcon	equ	0xFF2
  6399                           postinc0	equ	0xFEE
  6400                           fsr0h	equ	0xFEA
  6401                           fsr0l	equ	0xFE9
  6402                           wreg	equ	0xFE8
  6403                           indf1	equ	0xFE7
  6404                           fsr1h	equ	0xFE2
  6405                           fsr1l	equ	0xFE1
  6406                           bsr	equ	0xFE0
  6407                           indf2	equ	0xFDF
  6408                           postinc2	equ	0xFDE
  6409                           postdec2	equ	0xFDD
  6410                           fsr2h	equ	0xFDA
  6411                           fsr2l	equ	0xFD9
  6412                           status	equ	0xFD8
  6413                           
  6414 ;; *************** function _ReadTimer1 *****************
  6415 ;; Defined at:
  6416 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  timer           2    2[COMRAM] struct Timers
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  2    0[COMRAM] unsigned int 
  6423 ;; Registers used:
  6424 ;;		None
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6430 ;;      Params:         2       0       0       0       0
  6431 ;;      Locals:         2       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0
  6433 ;;      Totals:         4       0       0       0       0
  6434 ;;Total ram usage:        4 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    5
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_timer1_int_handler
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text40
  6445  001F76                     __ptext40:
  6446                           	opt stack 0
  6447  001F76                     _ReadTimer1:
  6448                           	opt stack 19
  6449                           
  6450                           ;incstack = 0
  6451  001F76  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6452  001F7A  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6453  001F7E  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6454  001F82  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6455  001F86  0012               	return	
  6456  001F88                     __end_of_ReadTimer1:
  6457                           	opt stack 0
  6458                           pclatu	equ	0xFFB
  6459                           pclath	equ	0xFFA
  6460                           tblptru	equ	0xFF8
  6461                           tblptrh	equ	0xFF7
  6462                           tblptrl	equ	0xFF6
  6463                           tablat	equ	0xFF5
  6464                           prodh	equ	0xFF4
  6465                           prodl	equ	0xFF3
  6466                           intcon	equ	0xFF2
  6467                           postinc0	equ	0xFEE
  6468                           fsr0h	equ	0xFEA
  6469                           fsr0l	equ	0xFE9
  6470                           wreg	equ	0xFE8
  6471                           indf1	equ	0xFE7
  6472                           fsr1h	equ	0xFE2
  6473                           fsr1l	equ	0xFE1
  6474                           bsr	equ	0xFE0
  6475                           indf2	equ	0xFDF
  6476                           postinc2	equ	0xFDE
  6477                           postdec2	equ	0xFDD
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8
  6481                           
  6482 ;; *************** function _InterruptHandlerHigh *****************
  6483 ;; Defined at:
  6484 ;;		line 86 in file "../src/interrupts.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6498 ;;      Params:         0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0
  6500 ;;      Temps:          0      14       0       0       0
  6501 ;;      Totals:         0      14       0       0       0
  6502 ;;Total ram usage:       14 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    4
  6505 ;; This function calls:
  6506 ;;		_SleepIfOkay
  6507 ;;		_i2c_int_handler
  6508 ;;		_timer0_int_handler
  6509 ;; This function is called by:
  6510 ;;		Interrupt level 2
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	intcode
  6515  000008                     __pintcode:
  6516                           	opt stack 0
  6517  000008                     _InterruptHandlerHigh:
  6518                           	opt stack 17
  6519                           
  6520                           ;incstack = 0
  6521  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh
  6522  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+1
  6523  000010  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6524  000014  EF0F  F00C         	goto	int_func
  6525                           pclatu	equ	0xFFB
  6526                           pclath	equ	0xFFA
  6527                           tblptru	equ	0xFF8
  6528                           tblptrh	equ	0xFF7
  6529                           tblptrl	equ	0xFF6
  6530                           tablat	equ	0xFF5
  6531                           prodh	equ	0xFF4
  6532                           prodl	equ	0xFF3
  6533                           intcon	equ	0xFF2
  6534                           postinc0	equ	0xFEE
  6535                           fsr0h	equ	0xFEA
  6536                           fsr0l	equ	0xFE9
  6537                           wreg	equ	0xFE8
  6538                           indf1	equ	0xFE7
  6539                           fsr1h	equ	0xFE2
  6540                           fsr1l	equ	0xFE1
  6541                           bsr	equ	0xFE0
  6542                           indf2	equ	0xFDF
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549                           	psect	intcode_body
  6550  00181E                     __pintcode_body:
  6551                           	opt stack 17
  6552  00181E                     int_func:
  6553                           	opt stack 17
  6554  00181E  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6555  001822  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6556  001826  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6557  00182A  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6558  00182E  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6559  001832  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+8
  6560  001836  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+9
  6561  00183A  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6562  00183E  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6563  001842  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+12
  6564  001846  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+13
  6565                           
  6566                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6567  00184A  A69E               	btfss	3998,3,c	;volatile
  6568  00184C  D003               	goto	i2l4122
  6569                           
  6570                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6571  00184E  969E               	bcf	3998,3,c	;volatile
  6572                           
  6573                           ;interrupts.c: 98: i2c_int_handler();
  6574  001850  EC62  F000         	call	_i2c_int_handler	;wreg free
  6575  001854                     i2l4122:
  6576                           
  6577                           ;interrupts.c: 99: }
  6578                           ;interrupts.c: 102: if (INTCONbits.TMR0IF) {
  6579  001854  A4F2               	btfss	intcon,2,c	;volatile
  6580  001856  D003               	goto	i2l4128
  6581                           
  6582                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6583  001858  94F2               	bcf	intcon,2,c	;volatile
  6584                           
  6585                           ;interrupts.c: 108: timer0_int_handler();
  6586  00185A  EC4E  F00C         	call	_timer0_int_handler	;wreg free
  6587  00185E                     i2l4128:
  6588                           
  6589                           ;interrupts.c: 109: }
  6590                           ;interrupts.c: 118: SleepIfOkay();
  6591  00185E  EC4B  F00D         	call	_SleepIfOkay	;wreg free
  6592  001862  C0B7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6593  001866  C0B6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6594  00186A  C0B5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6595  00186E  C0B4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6596  001872  C0B3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6597  001876  C0B2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6598  00187A  C0B1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6599  00187E  C0B0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6600  001882  C0AF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6601  001886  C0AE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6602  00188A  C0AD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6603  00188E  C0AC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6604  001892  C0AB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6605  001896  C0AA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6606  00189A  0011               	retfie		f
  6607  00189C                     __end_of_InterruptHandlerHigh:
  6608                           	opt stack 0
  6609                           pclatu	equ	0xFFB
  6610                           pclath	equ	0xFFA
  6611                           tblptru	equ	0xFF8
  6612                           tblptrh	equ	0xFF7
  6613                           tblptrl	equ	0xFF6
  6614                           tablat	equ	0xFF5
  6615                           prodh	equ	0xFF4
  6616                           prodl	equ	0xFF3
  6617                           intcon	equ	0xFF2
  6618                           postinc0	equ	0xFEE
  6619                           fsr0h	equ	0xFEA
  6620                           fsr0l	equ	0xFE9
  6621                           wreg	equ	0xFE8
  6622                           indf1	equ	0xFE7
  6623                           fsr1h	equ	0xFE2
  6624                           fsr1l	equ	0xFE1
  6625                           bsr	equ	0xFE0
  6626                           indf2	equ	0xFDF
  6627                           postinc2	equ	0xFDE
  6628                           postdec2	equ	0xFDD
  6629                           fsr2h	equ	0xFDA
  6630                           fsr2l	equ	0xFD9
  6631                           status	equ	0xFD8
  6632                           
  6633 ;; *************** function _timer0_int_handler *****************
  6634 ;; Defined at:
  6635 ;;		line 16 in file "../src/user_interrupts.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  val             2   33[BANK0 ] unsigned int 
  6640 ;;  msgtype         2   31[BANK0 ] int 
  6641 ;;  length          2   29[BANK0 ] int 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;		None               void
  6644 ;; Registers used:
  6645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6651 ;;      Params:         0       0       0       0       0
  6652 ;;      Locals:         0       6       0       0       0
  6653 ;;      Temps:          0       0       0       0       0
  6654 ;;      Totals:         0       6       0       0       0
  6655 ;;Total ram usage:        6 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    3
  6658 ;; This function calls:
  6659 ;;		_FromMainHigh_recvmsg
  6660 ;;		_ToMainHigh_sendmsg
  6661 ;;		_WriteTimer0
  6662 ;; This function is called by:
  6663 ;;		_InterruptHandlerHigh
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text42
  6668  00189C                     __ptext42:
  6669                           	opt stack 0
  6670  00189C                     _timer0_int_handler:
  6671                           	opt stack 17
  6672                           
  6673                           ;user_interrupts.c: 20: unsigned int val;
  6674                           ;user_interrupts.c: 21: int length, msgtype;
  6675                           ;user_interrupts.c: 25: WriteTimer0(0);
  6676                           
  6677                           ;incstack = 0
  6678  00189C  0E00               	movlw	0
  6679  00189E  0100               	movlb	0	; () banked
  6680  0018A0  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6681  0018A2  0E00               	movlw	0
  6682  0018A4  0100               	movlb	0	; () banked
  6683  0018A6  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6684  0018A8  ECC4  F00F         	call	_WriteTimer0	;wreg free
  6685                           
  6686                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6687  0018AC  0100               	movlb	0	; () banked
  6688  0018AE  0E00               	movlw	high timer0_int_handler@msgtype
  6689  0018B0  0100               	movlb	0	; () banked
  6690  0018B2  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6691  0018B4  0100               	movlb	0	; () banked
  6692  0018B6  0E9F               	movlw	low timer0_int_handler@msgtype
  6693  0018B8  0100               	movlb	0	; () banked
  6694  0018BA  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6695  0018BC  0100               	movlb	0	; () banked
  6696  0018BE  0E00               	movlw	high timer0_int_handler@val
  6697  0018C0  0100               	movlb	0	; () banked
  6698  0018C2  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6699  0018C4  0100               	movlb	0	; () banked
  6700  0018C6  0EA1               	movlw	low timer0_int_handler@val
  6701  0018C8  0100               	movlb	0	; () banked
  6702  0018CA  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6703  0018CC  0E02               	movlw	2
  6704  0018CE  EC94  F00E         	call	_FromMainHigh_recvmsg
  6705  0018D2  0100               	movlb	0	; () banked
  6706  0018D4  6F9D               	movwf	timer0_int_handler@length& (0+255),b
  6707  0018D6  0100               	movlb	0	; () banked
  6708  0018D8  6B9E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6709  0018DA  0100               	movlb	0	; () banked
  6710  0018DC  BF9D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6711  0018DE  079E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6715  0018E0  0100               	movlb	0	; () banked
  6716  0018E2  519D               	movf	timer0_int_handler@length& (0+255),w,b
  6717  0018E4  0A02               	xorlw	2
  6718  0018E6  119E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6719  0018E8  A4D8               	btfss	status,2,c
  6720  0018EA  0012               	return	
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6724  0018EC  0E0A               	movlw	10
  6725  0018EE  0100               	movlb	0	; () banked
  6726  0018F0  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6727  0018F2  0100               	movlb	0	; () banked
  6728  0018F4  0E00               	movlw	high timer0_int_handler@val
  6729  0018F6  0100               	movlb	0	; () banked
  6730  0018F8  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6731  0018FA  0100               	movlb	0	; () banked
  6732  0018FC  0EA1               	movlw	low timer0_int_handler@val
  6733  0018FE  0100               	movlb	0	; () banked
  6734  001900  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6735  001902  0E02               	movlw	2
  6736  001904  EC0F  F00F         	call	_ToMainHigh_sendmsg
  6737  001908  0012               	return	
  6738  00190A                     __end_of_timer0_int_handler:
  6739                           	opt stack 0
  6740                           pclatu	equ	0xFFB
  6741                           pclath	equ	0xFFA
  6742                           tblptru	equ	0xFF8
  6743                           tblptrh	equ	0xFF7
  6744                           tblptrl	equ	0xFF6
  6745                           tablat	equ	0xFF5
  6746                           prodh	equ	0xFF4
  6747                           prodl	equ	0xFF3
  6748                           intcon	equ	0xFF2
  6749                           postinc0	equ	0xFEE
  6750                           fsr0h	equ	0xFEA
  6751                           fsr0l	equ	0xFE9
  6752                           wreg	equ	0xFE8
  6753                           indf1	equ	0xFE7
  6754                           fsr1h	equ	0xFE2
  6755                           fsr1l	equ	0xFE1
  6756                           bsr	equ	0xFE0
  6757                           indf2	equ	0xFDF
  6758                           postinc2	equ	0xFDE
  6759                           postdec2	equ	0xFDD
  6760                           fsr2h	equ	0xFDA
  6761                           fsr2l	equ	0xFD9
  6762                           status	equ	0xFD8
  6763                           
  6764 ;; *************** function _WriteTimer0 *****************
  6765 ;; Defined at:
  6766 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  timer0          2    0[BANK0 ] unsigned int 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  timer           2    2[BANK0 ] struct Timers
  6771 ;; Return value:  Size  Location     Type
  6772 ;;		None               void
  6773 ;; Registers used:
  6774 ;;		None
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6780 ;;      Params:         0       2       0       0       0
  6781 ;;      Locals:         0       2       0       0       0
  6782 ;;      Temps:          0       0       0       0       0
  6783 ;;      Totals:         0       4       0       0       0
  6784 ;;Total ram usage:        4 bytes
  6785 ;; Hardware stack levels used:    1
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_timer0_int_handler
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           	psect	text43
  6794  001F88                     __ptext43:
  6795                           	opt stack 0
  6796  001F88                     _WriteTimer0:
  6797                           	opt stack 19
  6798                           
  6799                           ;incstack = 0
  6800  001F88  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6801  001F8C  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6802  001F90  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6803  001F94  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6804  001F98  0012               	return	
  6805  001F9A                     __end_of_WriteTimer0:
  6806                           	opt stack 0
  6807                           pclatu	equ	0xFFB
  6808                           pclath	equ	0xFFA
  6809                           tblptru	equ	0xFF8
  6810                           tblptrh	equ	0xFF7
  6811                           tblptrl	equ	0xFF6
  6812                           tablat	equ	0xFF5
  6813                           prodh	equ	0xFF4
  6814                           prodl	equ	0xFF3
  6815                           intcon	equ	0xFF2
  6816                           postinc0	equ	0xFEE
  6817                           fsr0h	equ	0xFEA
  6818                           fsr0l	equ	0xFE9
  6819                           wreg	equ	0xFE8
  6820                           indf1	equ	0xFE7
  6821                           fsr1h	equ	0xFE2
  6822                           fsr1l	equ	0xFE1
  6823                           bsr	equ	0xFE0
  6824                           indf2	equ	0xFDF
  6825                           postinc2	equ	0xFDE
  6826                           postdec2	equ	0xFDD
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8
  6830                           
  6831 ;; *************** function _i2c_int_handler *****************
  6832 ;; Defined at:
  6833 ;;		line 103 in file "../src/my_i2c.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  l               2    0        int 
  6838 ;;  msg_type        1   39[BANK0 ] unsigned char 
  6839 ;;  length          1   30[BANK0 ] unsigned char 
  6840 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  6841 ;;  data_read       1   41[BANK0 ] unsigned char 
  6842 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  6843 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  6844 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  6845 ;;  need_data       1   36[BANK0 ] unsigned char 
  6846 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6847 ;;  data_written    1   34[BANK0 ] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;		None               void
  6850 ;; Registers used:
  6851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6857 ;;      Params:         0       0       0       0       0
  6858 ;;      Locals:         0      12       0       0       0
  6859 ;;      Temps:          0       1       0       0       0
  6860 ;;      Totals:         0      13       0       0       0
  6861 ;;Total ram usage:       13 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    3
  6864 ;; This function calls:
  6865 ;;		_FromMainHigh_recvmsg
  6866 ;;		_ToMainHigh_sendmsg
  6867 ;;		_blip4
  6868 ;;		_handle_start
  6869 ;;		_start_i2c_slave_reply
  6870 ;;		i2_blip1
  6871 ;;		i2_blip2
  6872 ;;		i2_blip3
  6873 ;; This function is called by:
  6874 ;;		_InterruptHandlerHigh
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text44
  6879  0000C4                     __ptext44:
  6880                           	opt stack 0
  6881  0000C4                     _i2c_int_handler:
  6882                           	opt stack 17
  6883                           
  6884                           ;my_i2c.c: 104: blip1();
  6885                           
  6886                           ;incstack = 0
  6887  0000C4  ECFD  F00F         	call	i2_blip1	;wreg free
  6888                           
  6889                           ;my_i2c.c: 108: unsigned char i2c_data;
  6890                           ;my_i2c.c: 109: unsigned char data_read = 0;
  6891  0000C8  0E00               	movlw	0
  6892  0000CA  0100               	movlb	0	; () banked
  6893  0000CC  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;my_i2c.c: 110: unsigned char data_written = 0;
  6897  0000CE  0E00               	movlw	0
  6898  0000D0  0100               	movlb	0	; () banked
  6899  0000D2  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;my_i2c.c: 111: unsigned char msg_ready = 0;
  6903  0000D4  0E00               	movlw	0
  6904  0000D6  0100               	movlb	0	; () banked
  6905  0000D8  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;my_i2c.c: 112: unsigned char msg_to_send = 0;
  6909  0000DA  0E00               	movlw	0
  6910  0000DC  0100               	movlb	0	; () banked
  6911  0000DE  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;my_i2c.c: 113: unsigned char overrun_error = 0;
  6915  0000E0  0E00               	movlw	0
  6916  0000E2  0100               	movlb	0	; () banked
  6917  0000E4  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;my_i2c.c: 114: unsigned char error_buf[3];
  6921                           ;my_i2c.c: 115: unsigned char need_data = 1;
  6922  0000E6  0E01               	movlw	1
  6923  0000E8  0100               	movlb	0	; () banked
  6924  0000EA  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;my_i2c.c: 118: if (SSPCON1bits.SSPOV == 1) {
  6928  0000EC  ACC6               	btfss	4038,6,c	;volatile
  6929  0000EE  D024               	goto	i2l3774
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;my_i2c.c: 119: SSPCON1bits.SSPOV = 0;
  6933  0000F0  9CC6               	bcf	4038,6,c	;volatile
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;my_i2c.c: 123: ic_ptr->status = 0x5;
  6937  0000F2  0100               	movlb	0	; () banked
  6938  0000F4  EE20 F021          	lfsr	2,33
  6939  0000F8  0100               	movlb	0	; () banked
  6940  0000FA  51C5               	movf	_ic_ptr& (0+255),w,b
  6941  0000FC  26D9               	addwf	fsr2l,f,c
  6942  0000FE  0100               	movlb	0	; () banked
  6943  000100  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6944  000102  22DA               	addwfc	fsr2h,f,c
  6945  000104  0E05               	movlw	5
  6946  000106  6EDF               	movwf	indf2,c
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;my_i2c.c: 124: overrun_error = 1;
  6950  000108  0E01               	movlw	1
  6951  00010A  0100               	movlb	0	; () banked
  6952  00010C  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;my_i2c.c: 125: ic_ptr->error_count++;
  6956  00010E  0100               	movlb	0	; () banked
  6957  000110  EE20 F023          	lfsr	2,35
  6958  000114  0100               	movlb	0	; () banked
  6959  000116  51C5               	movf	_ic_ptr& (0+255),w,b
  6960  000118  26D9               	addwf	fsr2l,f,c
  6961  00011A  0100               	movlb	0	; () banked
  6962  00011C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6963  00011E  22DA               	addwfc	fsr2h,f,c
  6964  000120  2ADF               	incf	indf2,f,c
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;my_i2c.c: 126: ic_ptr->error_code = 0x4;
  6968  000122  0100               	movlb	0	; () banked
  6969  000124  EE20 F022          	lfsr	2,34
  6970  000128  0100               	movlb	0	; () banked
  6971  00012A  51C5               	movf	_ic_ptr& (0+255),w,b
  6972  00012C  26D9               	addwf	fsr2l,f,c
  6973  00012E  0100               	movlb	0	; () banked
  6974  000130  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6975  000132  22DA               	addwfc	fsr2h,f,c
  6976  000134  0E04               	movlw	4
  6977  000136  6EDF               	movwf	indf2,c
  6978  000138                     i2l3774:
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;my_i2c.c: 127: }
  6982                           ;my_i2c.c: 129: if (SSPSTATbits.BF == 1) {
  6983  000138  A0C7               	btfss	4039,0,c	;volatile
  6984  00013A  D005               	goto	i2l3780
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;my_i2c.c: 130: i2c_data = SSPBUF;
  6988  00013C  CFC9 F0A5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;my_i2c.c: 131: data_read = 1;
  6992  000140  0E01               	movlw	1
  6993  000142  0100               	movlb	0	; () banked
  6994  000144  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6995  000146                     i2l3780:
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;my_i2c.c: 132: }
  6999                           ;my_i2c.c: 134: if (!overrun_error) {
  7000  000146  0100               	movlb	0	; () banked
  7001  000148  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7002  00014A  D254               	goto	i2l291
  7003  00014C  D23D               	goto	i2l3894
  7004  00014E                     i2l293:
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;my_i2c.c: 137: {
  7008                           ;my_i2c.c: 139: if (SSPSTATbits.S == 1) {
  7009  00014E  A6C7               	btfss	4039,3,c	;volatile
  7010  000150  D251               	goto	i2l291
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;my_i2c.c: 140: handle_start(data_read);
  7014  000152  0100               	movlb	0	; () banked
  7015  000154  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7016  000156  ECF2  F009         	call	_handle_start
  7017                           
  7018                           ;my_i2c.c: 142: if (ic_ptr->status == 0x8) {
  7019  00015A  0100               	movlb	0	; () banked
  7020  00015C  EE20 F021          	lfsr	2,33
  7021  000160  0100               	movlb	0	; () banked
  7022  000162  51C5               	movf	_ic_ptr& (0+255),w,b
  7023  000164  26D9               	addwf	fsr2l,f,c
  7024  000166  0100               	movlb	0	; () banked
  7025  000168  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7026  00016A  22DA               	addwfc	fsr2h,f,c
  7027  00016C  0E08               	movlw	8
  7028  00016E  62DF               	cpfseq	indf2,c
  7029  000170  D241               	goto	i2l291
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;my_i2c.c: 143: data_read = 0;
  7033  000172  0E00               	movlw	0
  7034  000174  0100               	movlb	0	; () banked
  7035  000176  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7036                           
  7037                           ;my_i2c.c: 144: msg_to_send = 1;
  7038  000178  0E01               	movlw	1
  7039  00017A  0100               	movlb	0	; () banked
  7040  00017C  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7041  00017E  D23A               	goto	i2l291
  7042  000180                     i2l297:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;my_i2c.c: 150: {
  7046                           ;my_i2c.c: 153: if (SSPSTATbits.P == 1) {
  7047  000180  A8C7               	btfss	4039,4,c	;volatile
  7048  000182  D02A               	goto	i2l3800
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;my_i2c.c: 156: ic_ptr->event_count++;
  7052  000184  0100               	movlb	0	; () banked
  7053  000186  EE20 F020          	lfsr	2,32
  7054  00018A  0100               	movlb	0	; () banked
  7055  00018C  51C5               	movf	_ic_ptr& (0+255),w,b
  7056  00018E  26D9               	addwf	fsr2l,f,c
  7057  000190  0100               	movlb	0	; () banked
  7058  000192  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7059  000194  22DA               	addwfc	fsr2h,f,c
  7060  000196  2ADF               	incf	indf2,f,c
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;my_i2c.c: 157: if (data_read) {
  7064  000198  0100               	movlb	0	; () banked
  7065  00019A  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7066  00019C  B4D8               	btfsc	status,2,c
  7067  00019E  D209               	goto	L10
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;my_i2c.c: 158: if (SSPSTATbits.D_A == 0) {
  7071  0001A0  BAC7               	btfsc	4039,5,c	;volatile
  7072  0001A2  D004               	goto	i2l3798
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;my_i2c.c: 159: msg_ready = 1;
  7076  0001A4  0E01               	movlw	1
  7077  0001A6  0100               	movlb	0	; () banked
  7078  0001A8  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7079                           
  7080                           ;my_i2c.c: 160: } else {
  7081  0001AA  D203               	goto	L10
  7082  0001AC                     i2l3798:
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;my_i2c.c: 161: ic_ptr->error_count++;
  7086  0001AC  0100               	movlb	0	; () banked
  7087  0001AE  EE20 F023          	lfsr	2,35
  7088  0001B2  0100               	movlb	0	; () banked
  7089  0001B4  51C5               	movf	_ic_ptr& (0+255),w,b
  7090  0001B6  26D9               	addwf	fsr2l,f,c
  7091  0001B8  0100               	movlb	0	; () banked
  7092  0001BA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7093  0001BC  22DA               	addwfc	fsr2h,f,c
  7094  0001BE  2ADF               	incf	indf2,f,c
  7095                           
  7096                           ;my_i2c.c: 162: ic_ptr->error_code = 0x6;
  7097  0001C0  0100               	movlb	0	; () banked
  7098  0001C2  EE20 F022          	lfsr	2,34
  7099  0001C6  0100               	movlb	0	; () banked
  7100  0001C8  51C5               	movf	_ic_ptr& (0+255),w,b
  7101  0001CA  26D9               	addwf	fsr2l,f,c
  7102  0001CC  0100               	movlb	0	; () banked
  7103  0001CE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7104  0001D0  22DA               	addwfc	fsr2h,f,c
  7105  0001D2  0E06               	movlw	6
  7106  0001D4  6EDF               	movwf	indf2,c
  7107                           
  7108                           ; BSR set to: 0
  7109  0001D6  D1ED               	goto	L10
  7110  0001D8                     i2l3800:
  7111                           
  7112                           ; BSR set to: 0
  7113  0001D8  0100               	movlb	0	; () banked
  7114  0001DA  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7115  0001DC  B4D8               	btfsc	status,2,c
  7116  0001DE  D20A               	goto	i2l291
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;my_i2c.c: 167: ic_ptr->event_count++;
  7120  0001E0  0100               	movlb	0	; () banked
  7121  0001E2  EE20 F020          	lfsr	2,32
  7122  0001E6  0100               	movlb	0	; () banked
  7123  0001E8  51C5               	movf	_ic_ptr& (0+255),w,b
  7124  0001EA  26D9               	addwf	fsr2l,f,c
  7125  0001EC  0100               	movlb	0	; () banked
  7126  0001EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7127  0001F0  22DA               	addwfc	fsr2h,f,c
  7128  0001F2  2ADF               	incf	indf2,f,c
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;my_i2c.c: 168: if (SSPSTATbits.D_A == 0) {
  7132  0001F4  BAC7               	btfsc	4039,5,c	;volatile
  7133  0001F6  D02C               	goto	i2l3820
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 169: if (SSPSTATbits.R_W == 0) {
  7137  0001F8  B4C7               	btfsc	4039,2,c	;volatile
  7138  0001FA  D00B               	goto	i2l3810
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;my_i2c.c: 170: ic_ptr->status = 0x7;
  7142  0001FC  0100               	movlb	0	; () banked
  7143  0001FE  EE20 F021          	lfsr	2,33
  7144  000202  0100               	movlb	0	; () banked
  7145  000204  51C5               	movf	_ic_ptr& (0+255),w,b
  7146  000206  26D9               	addwf	fsr2l,f,c
  7147  000208  0100               	movlb	0	; () banked
  7148  00020A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7149  00020C  22DA               	addwfc	fsr2h,f,c
  7150  00020E  0E07               	movlw	7
  7151  000210  D082               	goto	L7
  7152  000212                     i2l3810:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;my_i2c.c: 172: blip3();
  7156  000212  ECF5  F00F         	call	i2_blip3	;wreg free
  7157                           
  7158                           ;my_i2c.c: 173: ic_ptr->status = 0x8;
  7159  000216  0100               	movlb	0	; () banked
  7160  000218  EE20 F021          	lfsr	2,33
  7161  00021C  0100               	movlb	0	; () banked
  7162  00021E  51C5               	movf	_ic_ptr& (0+255),w,b
  7163  000220  26D9               	addwf	fsr2l,f,c
  7164  000222  0100               	movlb	0	; () banked
  7165  000224  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7166  000226  22DA               	addwfc	fsr2h,f,c
  7167  000228  0E08               	movlw	8
  7168  00022A  6EDF               	movwf	indf2,c
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;my_i2c.c: 174: msg_to_send = 1;
  7172  00022C  0E01               	movlw	1
  7173  00022E  0100               	movlb	0	; () banked
  7174  000230  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;my_i2c.c: 176: data_read = 0;
  7178  000232  0E00               	movlw	0
  7179  000234  0100               	movlb	0	; () banked
  7180  000236  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;my_i2c.c: 177: ic_ptr->outbufind = 0;
  7184  000238  0100               	movlb	0	; () banked
  7185  00023A  EE20 F01E          	lfsr	2,30
  7186  00023E  0100               	movlb	0	; () banked
  7187  000240  51C5               	movf	_ic_ptr& (0+255),w,b
  7188  000242  26D9               	addwf	fsr2l,f,c
  7189  000244  0100               	movlb	0	; () banked
  7190  000246  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7191  000248  22DA               	addwfc	fsr2h,f,c
  7192  00024A  0E00               	movlw	0
  7193  00024C  6EDF               	movwf	indf2,c
  7194                           
  7195                           ;my_i2c.c: 178: goto l;
  7196  00024E  D020               	goto	i2l3822
  7197  000250                     i2l3820:
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;my_i2c.c: 181: ic_ptr->error_count++;
  7201  000250  0100               	movlb	0	; () banked
  7202  000252  EE20 F023          	lfsr	2,35
  7203  000256  0100               	movlb	0	; () banked
  7204  000258  51C5               	movf	_ic_ptr& (0+255),w,b
  7205  00025A  26D9               	addwf	fsr2l,f,c
  7206  00025C  0100               	movlb	0	; () banked
  7207  00025E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7208  000260  22DA               	addwfc	fsr2h,f,c
  7209  000262  2ADF               	incf	indf2,f,c
  7210                           
  7211                           ;my_i2c.c: 182: ic_ptr->status = 0x5;
  7212  000264  0100               	movlb	0	; () banked
  7213  000266  EE20 F021          	lfsr	2,33
  7214  00026A  0100               	movlb	0	; () banked
  7215  00026C  51C5               	movf	_ic_ptr& (0+255),w,b
  7216  00026E  26D9               	addwf	fsr2l,f,c
  7217  000270  0100               	movlb	0	; () banked
  7218  000272  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7219  000274  22DA               	addwfc	fsr2h,f,c
  7220  000276  0E05               	movlw	5
  7221  000278  6EDF               	movwf	indf2,c
  7222                           
  7223                           ;my_i2c.c: 183: ic_ptr->error_code = 0x6;
  7224  00027A  0100               	movlb	0	; () banked
  7225  00027C  EE20 F022          	lfsr	2,34
  7226  000280  0100               	movlb	0	; () banked
  7227  000282  51C5               	movf	_ic_ptr& (0+255),w,b
  7228  000284  26D9               	addwf	fsr2l,f,c
  7229  000286  0100               	movlb	0	; () banked
  7230  000288  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7231  00028A  22DA               	addwfc	fsr2h,f,c
  7232  00028C  0E06               	movlw	6
  7233  00028E  D043               	goto	L7
  7234  000290                     i2l3822:
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;my_i2c.c: 190: {
  7238                           ;my_i2c.c: 191: blip4();
  7239  000290  EC01  F010         	call	_blip4	;wreg free
  7240                           
  7241                           ;my_i2c.c: 193: if (ic_ptr->outbufind < 14) {
  7242  000294  0100               	movlb	0	; () banked
  7243  000296  EE20 F01E          	lfsr	2,30
  7244  00029A  0100               	movlb	0	; () banked
  7245  00029C  51C5               	movf	_ic_ptr& (0+255),w,b
  7246  00029E  26D9               	addwf	fsr2l,f,c
  7247  0002A0  0100               	movlb	0	; () banked
  7248  0002A2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7249  0002A4  22DA               	addwfc	fsr2h,f,c
  7250  0002A6  50DF               	movf	indf2,w,c
  7251  0002A8  0100               	movlb	0	; () banked
  7252  0002AA  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7253  0002AC  0E0E               	movlw	14
  7254  0002AE  0100               	movlb	0	; () banked
  7255  0002B0  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7256  0002B2  B0D8               	btfsc	status,0,c
  7257  0002B4  D02D               	goto	i2l3834
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;my_i2c.c: 194: blip4();
  7261  0002B6  EC01  F010         	call	_blip4	;wreg free
  7262                           
  7263                           ;my_i2c.c: 195: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7264  0002BA  0100               	movlb	0	; () banked
  7265  0002BC  EE20 F01E          	lfsr	2,30
  7266  0002C0  0100               	movlb	0	; () banked
  7267  0002C2  51C5               	movf	_ic_ptr& (0+255),w,b
  7268  0002C4  26D9               	addwf	fsr2l,f,c
  7269  0002C6  0100               	movlb	0	; () banked
  7270  0002C8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7271  0002CA  22DA               	addwfc	fsr2h,f,c
  7272  0002CC  50DF               	movf	indf2,w,c
  7273  0002CE  0100               	movlb	0	; () banked
  7274  0002D0  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7275  0002D2  0100               	movlb	0	; () banked
  7276  0002D4  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7277  0002D6  0D01               	mullw	1
  7278  0002D8  0E10               	movlw	16
  7279  0002DA  26F3               	addwf	prodl,f,c
  7280  0002DC  0E00               	movlw	0
  7281  0002DE  22F4               	addwfc	prodh,f,c
  7282  0002E0  50F3               	movf	prodl,w,c
  7283  0002E2  0100               	movlb	0	; () banked
  7284  0002E4  25C5               	addwf	_ic_ptr& (0+255),w,b
  7285  0002E6  6ED9               	movwf	fsr2l,c
  7286  0002E8  50F4               	movf	prodh,w,c
  7287  0002EA  0100               	movlb	0	; () banked
  7288  0002EC  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7289  0002EE  6EDA               	movwf	fsr2h,c
  7290  0002F0  50DF               	movf	indf2,w,c
  7291  0002F2  6EC9               	movwf	4041,c	;volatile
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;my_i2c.c: 196: ic_ptr->outbufind++;
  7295  0002F4  0100               	movlb	0	; () banked
  7296  0002F6  EE20 F01E          	lfsr	2,30
  7297  0002FA  0100               	movlb	0	; () banked
  7298  0002FC  51C5               	movf	_ic_ptr& (0+255),w,b
  7299  0002FE  26D9               	addwf	fsr2l,f,c
  7300  000300  0100               	movlb	0	; () banked
  7301  000302  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7302  000304  22DA               	addwfc	fsr2h,f,c
  7303  000306  2ADF               	incf	indf2,f,c
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;my_i2c.c: 197: data_written = 1;
  7307  000308  0E01               	movlw	1
  7308  00030A  0100               	movlb	0	; () banked
  7309  00030C  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  7310                           
  7311                           ;my_i2c.c: 198: } else {
  7312  00030E  D172               	goto	i2l291
  7313  000310                     i2l3834:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;my_i2c.c: 199: blip3();
  7317  000310  ECF5  F00F         	call	i2_blip3	;wreg free
  7318  000314  D14E               	goto	L10
  7319  000316                     L7:
  7320  000316  6EDF               	movwf	indf2,c
  7321  000318  D16D               	goto	i2l291
  7322  00031A                     i2l3838:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;my_i2c.c: 206: {
  7326                           ;my_i2c.c: 207: blip2();
  7327  00031A  ECF9  F00F         	call	i2_blip2	;wreg free
  7328                           
  7329                           ;my_i2c.c: 209: if (SSPSTATbits.P == 1) {
  7330  00031E  A8C7               	btfss	4039,4,c	;volatile
  7331  000320  D05A               	goto	i2l3860
  7332                           
  7333                           ;my_i2c.c: 212: ic_ptr->event_count++;
  7334  000322  0100               	movlb	0	; () banked
  7335  000324  EE20 F020          	lfsr	2,32
  7336  000328  0100               	movlb	0	; () banked
  7337  00032A  51C5               	movf	_ic_ptr& (0+255),w,b
  7338  00032C  26D9               	addwf	fsr2l,f,c
  7339  00032E  0100               	movlb	0	; () banked
  7340  000330  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7341  000332  22DA               	addwfc	fsr2h,f,c
  7342  000334  2ADF               	incf	indf2,f,c
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;my_i2c.c: 213: if (data_read) {
  7346  000336  0100               	movlb	0	; () banked
  7347  000338  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7348  00033A  B4D8               	btfsc	status,2,c
  7349  00033C  D048               	goto	i2l3856
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;my_i2c.c: 214: if (SSPSTATbits.D_A == 1) {
  7353  00033E  AAC7               	btfss	4039,5,c	;volatile
  7354  000340  D025               	goto	i2l3854
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;my_i2c.c: 215: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7358  000342  0100               	movlb	0	; () banked
  7359  000344  EE20 F00E          	lfsr	2,14
  7360  000348  0100               	movlb	0	; () banked
  7361  00034A  51C5               	movf	_ic_ptr& (0+255),w,b
  7362  00034C  26D9               	addwf	fsr2l,f,c
  7363  00034E  0100               	movlb	0	; () banked
  7364  000350  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7365  000352  22DA               	addwfc	fsr2h,f,c
  7366  000354  50DF               	movf	indf2,w,c
  7367  000356  0100               	movlb	0	; () banked
  7368  000358  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7369  00035A  0100               	movlb	0	; () banked
  7370  00035C  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7371  00035E  0D01               	mullw	1
  7372  000360  50F3               	movf	prodl,w,c
  7373  000362  0100               	movlb	0	; () banked
  7374  000364  25C5               	addwf	_ic_ptr& (0+255),w,b
  7375  000366  6ED9               	movwf	fsr2l,c
  7376  000368  50F4               	movf	prodh,w,c
  7377  00036A  0100               	movlb	0	; () banked
  7378  00036C  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7379  00036E  6EDA               	movwf	fsr2h,c
  7380  000370  0100               	movlb	0	; () banked
  7381  000372  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;my_i2c.c: 216: ic_ptr->buflen++;
  7385  000376  0100               	movlb	0	; () banked
  7386  000378  EE20 F00E          	lfsr	2,14
  7387  00037C  0100               	movlb	0	; () banked
  7388  00037E  51C5               	movf	_ic_ptr& (0+255),w,b
  7389  000380  26D9               	addwf	fsr2l,f,c
  7390  000382  0100               	movlb	0	; () banked
  7391  000384  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7392  000386  22DA               	addwfc	fsr2h,f,c
  7393  000388  2ADF               	incf	indf2,f,c
  7394  00038A  D021               	goto	i2l3856
  7395  00038C                     i2l3854:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;my_i2c.c: 219: ic_ptr->error_count++;
  7399  00038C  0100               	movlb	0	; () banked
  7400  00038E  EE20 F023          	lfsr	2,35
  7401  000392  0100               	movlb	0	; () banked
  7402  000394  51C5               	movf	_ic_ptr& (0+255),w,b
  7403  000396  26D9               	addwf	fsr2l,f,c
  7404  000398  0100               	movlb	0	; () banked
  7405  00039A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7406  00039C  22DA               	addwfc	fsr2h,f,c
  7407  00039E  2ADF               	incf	indf2,f,c
  7408                           
  7409                           ;my_i2c.c: 220: ic_ptr->error_code = 0x6;
  7410  0003A0  0100               	movlb	0	; () banked
  7411  0003A2  EE20 F022          	lfsr	2,34
  7412  0003A6  0100               	movlb	0	; () banked
  7413  0003A8  51C5               	movf	_ic_ptr& (0+255),w,b
  7414  0003AA  26D9               	addwf	fsr2l,f,c
  7415  0003AC  0100               	movlb	0	; () banked
  7416  0003AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7417  0003B0  22DA               	addwfc	fsr2h,f,c
  7418  0003B2  0E06               	movlw	6
  7419  0003B4  6EDF               	movwf	indf2,c
  7420                           
  7421                           ;my_i2c.c: 221: ic_ptr->status = 0x5;
  7422  0003B6  0100               	movlb	0	; () banked
  7423  0003B8  EE20 F021          	lfsr	2,33
  7424  0003BC  0100               	movlb	0	; () banked
  7425  0003BE  51C5               	movf	_ic_ptr& (0+255),w,b
  7426  0003C0  26D9               	addwf	fsr2l,f,c
  7427  0003C2  0100               	movlb	0	; () banked
  7428  0003C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7429  0003C6  22DA               	addwfc	fsr2h,f,c
  7430  0003C8  0E05               	movlw	5
  7431  0003CA  6EDF               	movwf	indf2,c
  7432  0003CC  D0F2               	goto	L10
  7433  0003CE                     i2l3856:
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;my_i2c.c: 224: msg_ready = 1;
  7437  0003CE  0E01               	movlw	1
  7438  0003D0  0100               	movlb	0	; () banked
  7439  0003D2  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7440                           
  7441                           ; BSR set to: 0
  7442  0003D4  D0EE               	goto	L10
  7443  0003D6                     i2l3860:
  7444                           
  7445                           ;my_i2c.c: 228: else if (data_read)
  7446  0003D6  0100               	movlb	0	; () banked
  7447  0003D8  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7448  0003DA  B4D8               	btfsc	status,2,c
  7449  0003DC  D10B               	goto	i2l291
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;my_i2c.c: 229: {
  7453                           ;my_i2c.c: 231: ic_ptr->event_count++;
  7454  0003DE  0100               	movlb	0	; () banked
  7455  0003E0  EE20 F020          	lfsr	2,32
  7456  0003E4  0100               	movlb	0	; () banked
  7457  0003E6  51C5               	movf	_ic_ptr& (0+255),w,b
  7458  0003E8  26D9               	addwf	fsr2l,f,c
  7459  0003EA  0100               	movlb	0	; () banked
  7460  0003EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7461  0003EE  22DA               	addwfc	fsr2h,f,c
  7462  0003F0  2ADF               	incf	indf2,f,c
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;my_i2c.c: 232: if (SSP1STATbits.D_A == 1) {
  7466  0003F2  AAC7               	btfss	4039,5,c	;volatile
  7467  0003F4  D01E               	goto	i2l320
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;my_i2c.c: 233: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7471  0003F6  0100               	movlb	0	; () banked
  7472  0003F8  EE20 F00E          	lfsr	2,14
  7473  0003FC  0100               	movlb	0	; () banked
  7474  0003FE  51C5               	movf	_ic_ptr& (0+255),w,b
  7475  000400  26D9               	addwf	fsr2l,f,c
  7476  000402  0100               	movlb	0	; () banked
  7477  000404  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7478  000406  22DA               	addwfc	fsr2h,f,c
  7479  000408  50DF               	movf	indf2,w,c
  7480  00040A  0100               	movlb	0	; () banked
  7481  00040C  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7482  00040E  0100               	movlb	0	; () banked
  7483  000410  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7484  000412  0D01               	mullw	1
  7485  000414  50F3               	movf	prodl,w,c
  7486  000416  0100               	movlb	0	; () banked
  7487  000418  25C5               	addwf	_ic_ptr& (0+255),w,b
  7488  00041A  6ED9               	movwf	fsr2l,c
  7489  00041C  50F4               	movf	prodh,w,c
  7490  00041E  0100               	movlb	0	; () banked
  7491  000420  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7492  000422  6EDA               	movwf	fsr2h,c
  7493  000424  0100               	movlb	0	; () banked
  7494  000426  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;my_i2c.c: 234: ic_ptr->buflen++;
  7498  00042A  0100               	movlb	0	; () banked
  7499  00042C  EE20 F00E          	lfsr	2,14
  7500  000430  D0B8               	goto	L8
  7501  000432                     i2l320:
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;my_i2c.c: 236: else
  7505                           ;my_i2c.c: 237: {
  7506                           ;my_i2c.c: 238: if (SSPSTATbits.R_W == 1)
  7507  000432  A4C7               	btfss	4039,2,c	;volatile
  7508  000434  D6BB               	goto	i2l3798
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;my_i2c.c: 239: {
  7512                           ;my_i2c.c: 241: ic_ptr->status = 0x8;
  7513  000436  0100               	movlb	0	; () banked
  7514  000438  EE20 F021          	lfsr	2,33
  7515  00043C  0100               	movlb	0	; () banked
  7516  00043E  51C5               	movf	_ic_ptr& (0+255),w,b
  7517  000440  26D9               	addwf	fsr2l,f,c
  7518  000442  0100               	movlb	0	; () banked
  7519  000444  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7520  000446  22DA               	addwfc	fsr2h,f,c
  7521  000448  0E08               	movlw	8
  7522  00044A  6EDF               	movwf	indf2,c
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;my_i2c.c: 248: {
  7526                           ;my_i2c.c: 250: ic_ptr->outbuffer[0] = ic_ptr->buffer[0];
  7527                           
  7528                           ; BSR set to: 0
  7529                           
  7530                           ;my_i2c.c: 244: {
  7531                           ;my_i2c.c: 245: int l;
  7532                           ;my_i2c.c: 247: default:
  7533                           
  7534                           ;my_i2c.c: 243: switch( ic_ptr->buffer[0] )
  7535  00044C  C0C5  FFD9         	movff	_ic_ptr,fsr2l
  7536  000450  C0C6  FFDA         	movff	_ic_ptr+1,fsr2h
  7537  000454  0100               	movlb	0	; () banked
  7538  000456  EE10 F010          	lfsr	1,16
  7539  00045A  0100               	movlb	0	; () banked
  7540  00045C  51C5               	movf	_ic_ptr& (0+255),w,b
  7541  00045E  26E1               	addwf	fsr1l,f,c
  7542  000460  0100               	movlb	0	; () banked
  7543  000462  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7544  000464  22E2               	addwfc	fsr1h,f,c
  7545  000466  CFDF FFE7          	movff	indf2,indf1
  7546                           
  7547                           ;my_i2c.c: 251: ic_ptr->outbuffer[1] = ic_ptr->buffer[1];
  7548  00046A  0100               	movlb	0	; () banked
  7549  00046C  EE20 F001          	lfsr	2,1
  7550  000470  0100               	movlb	0	; () banked
  7551  000472  51C5               	movf	_ic_ptr& (0+255),w,b
  7552  000474  26D9               	addwf	fsr2l,f,c
  7553  000476  0100               	movlb	0	; () banked
  7554  000478  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7555  00047A  22DA               	addwfc	fsr2h,f,c
  7556  00047C  0100               	movlb	0	; () banked
  7557  00047E  EE10 F011          	lfsr	1,17
  7558  000482  0100               	movlb	0	; () banked
  7559  000484  51C5               	movf	_ic_ptr& (0+255),w,b
  7560  000486  26E1               	addwf	fsr1l,f,c
  7561  000488  0100               	movlb	0	; () banked
  7562  00048A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7563  00048C  22E2               	addwfc	fsr1h,f,c
  7564  00048E  CFDF FFE7          	movff	indf2,indf1
  7565                           
  7566                           ;my_i2c.c: 252: ic_ptr->outbuffer[2] = ic_ptr->buffer[2];
  7567  000492  0100               	movlb	0	; () banked
  7568  000494  EE20 F002          	lfsr	2,2
  7569  000498  0100               	movlb	0	; () banked
  7570  00049A  51C5               	movf	_ic_ptr& (0+255),w,b
  7571  00049C  26D9               	addwf	fsr2l,f,c
  7572  00049E  0100               	movlb	0	; () banked
  7573  0004A0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7574  0004A2  22DA               	addwfc	fsr2h,f,c
  7575  0004A4  0100               	movlb	0	; () banked
  7576  0004A6  EE10 F012          	lfsr	1,18
  7577  0004AA  0100               	movlb	0	; () banked
  7578  0004AC  51C5               	movf	_ic_ptr& (0+255),w,b
  7579  0004AE  26E1               	addwf	fsr1l,f,c
  7580  0004B0  0100               	movlb	0	; () banked
  7581  0004B2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7582  0004B4  22E2               	addwfc	fsr1h,f,c
  7583  0004B6  CFDF FFE7          	movff	indf2,indf1
  7584                           
  7585                           ;my_i2c.c: 253: ic_ptr->outbuffer[3] = ic_ptr->buffer[3];
  7586  0004BA  0100               	movlb	0	; () banked
  7587  0004BC  EE20 F003          	lfsr	2,3
  7588  0004C0  0100               	movlb	0	; () banked
  7589  0004C2  51C5               	movf	_ic_ptr& (0+255),w,b
  7590  0004C4  26D9               	addwf	fsr2l,f,c
  7591  0004C6  0100               	movlb	0	; () banked
  7592  0004C8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7593  0004CA  22DA               	addwfc	fsr2h,f,c
  7594  0004CC  0100               	movlb	0	; () banked
  7595  0004CE  EE10 F013          	lfsr	1,19
  7596  0004D2  0100               	movlb	0	; () banked
  7597  0004D4  51C5               	movf	_ic_ptr& (0+255),w,b
  7598  0004D6  26E1               	addwf	fsr1l,f,c
  7599  0004D8  0100               	movlb	0	; () banked
  7600  0004DA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7601  0004DC  22E2               	addwfc	fsr1h,f,c
  7602  0004DE  CFDF FFE7          	movff	indf2,indf1
  7603                           
  7604                           ;my_i2c.c: 254: ic_ptr->outbuffer[4] = ic_ptr->buffer[4];
  7605  0004E2  0100               	movlb	0	; () banked
  7606  0004E4  EE20 F004          	lfsr	2,4
  7607  0004E8  0100               	movlb	0	; () banked
  7608  0004EA  51C5               	movf	_ic_ptr& (0+255),w,b
  7609  0004EC  26D9               	addwf	fsr2l,f,c
  7610  0004EE  0100               	movlb	0	; () banked
  7611  0004F0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7612  0004F2  22DA               	addwfc	fsr2h,f,c
  7613  0004F4  0100               	movlb	0	; () banked
  7614  0004F6  EE10 F014          	lfsr	1,20
  7615  0004FA  0100               	movlb	0	; () banked
  7616  0004FC  51C5               	movf	_ic_ptr& (0+255),w,b
  7617  0004FE  26E1               	addwf	fsr1l,f,c
  7618  000500  0100               	movlb	0	; () banked
  7619  000502  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7620  000504  22E2               	addwfc	fsr1h,f,c
  7621  000506  CFDF FFE7          	movff	indf2,indf1
  7622                           
  7623                           ;my_i2c.c: 255: ic_ptr->outbuffer[5] = ic_ptr->buffer[5];
  7624  00050A  0100               	movlb	0	; () banked
  7625  00050C  EE20 F005          	lfsr	2,5
  7626  000510  0100               	movlb	0	; () banked
  7627  000512  51C5               	movf	_ic_ptr& (0+255),w,b
  7628  000514  26D9               	addwf	fsr2l,f,c
  7629  000516  0100               	movlb	0	; () banked
  7630  000518  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7631  00051A  22DA               	addwfc	fsr2h,f,c
  7632  00051C  0100               	movlb	0	; () banked
  7633  00051E  EE10 F015          	lfsr	1,21
  7634  000522  0100               	movlb	0	; () banked
  7635  000524  51C5               	movf	_ic_ptr& (0+255),w,b
  7636  000526  26E1               	addwf	fsr1l,f,c
  7637  000528  0100               	movlb	0	; () banked
  7638  00052A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7639  00052C  22E2               	addwfc	fsr1h,f,c
  7640  00052E  CFDF FFE7          	movff	indf2,indf1
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;my_i2c.c: 260: ic_ptr->outbuflen = 6;
  7644                           
  7645                           ; BSR set to: 0
  7646                           
  7647                           ; BSR set to: 0
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;my_i2c.c: 257: }
  7651                           ;my_i2c.c: 258: }
  7652                           
  7653                           ;my_i2c.c: 256: break;
  7654  000532  0100               	movlb	0	; () banked
  7655  000534  EE20 F01F          	lfsr	2,31
  7656  000538  0100               	movlb	0	; () banked
  7657  00053A  51C5               	movf	_ic_ptr& (0+255),w,b
  7658  00053C  26D9               	addwf	fsr2l,f,c
  7659  00053E  0100               	movlb	0	; () banked
  7660  000540  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7661  000542  22DA               	addwfc	fsr2h,f,c
  7662  000544  0E06               	movlw	6
  7663  000546  6EDF               	movwf	indf2,c
  7664                           
  7665                           ;my_i2c.c: 261: ic_ptr->outbufind = 0;
  7666  000548  0100               	movlb	0	; () banked
  7667  00054A  EE20 F01E          	lfsr	2,30
  7668  00054E  0100               	movlb	0	; () banked
  7669  000550  51C5               	movf	_ic_ptr& (0+255),w,b
  7670  000552  26D9               	addwf	fsr2l,f,c
  7671  000554  0100               	movlb	0	; () banked
  7672  000556  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7673  000558  22DA               	addwfc	fsr2h,f,c
  7674  00055A  0E00               	movlw	0
  7675  00055C  6EDF               	movwf	indf2,c
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;my_i2c.c: 262: msg_ready = 1;
  7679  00055E  0E01               	movlw	1
  7680  000560  0100               	movlb	0	; () banked
  7681  000562  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;my_i2c.c: 263: msg_to_send = 1;
  7685  000564  0E01               	movlw	1
  7686  000566  0100               	movlb	0	; () banked
  7687  000568  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;my_i2c.c: 265: data_read = 0;
  7691  00056A  0E00               	movlw	0
  7692  00056C  0100               	movlb	0	; () banked
  7693  00056E  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;my_i2c.c: 266: ic_ptr->outbufind = 0;
  7697  000570  0100               	movlb	0	; () banked
  7698  000572  EE20 F01E          	lfsr	2,30
  7699  000576  0100               	movlb	0	; () banked
  7700  000578  51C5               	movf	_ic_ptr& (0+255),w,b
  7701  00057A  26D9               	addwf	fsr2l,f,c
  7702  00057C  0100               	movlb	0	; () banked
  7703  00057E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7704  000580  22DA               	addwfc	fsr2h,f,c
  7705  000582  0E00               	movlw	0
  7706  000584  6EDF               	movwf	indf2,c
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;my_i2c.c: 267: SSPBUF = ic_ptr->outbuffer[0];
  7710  000586  0100               	movlb	0	; () banked
  7711  000588  EE20 F010          	lfsr	2,16
  7712  00058C  0100               	movlb	0	; () banked
  7713  00058E  51C5               	movf	_ic_ptr& (0+255),w,b
  7714  000590  26D9               	addwf	fsr2l,f,c
  7715  000592  0100               	movlb	0	; () banked
  7716  000594  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7717  000596  22DA               	addwfc	fsr2h,f,c
  7718  000598  50DF               	movf	indf2,w,c
  7719  00059A  6EC9               	movwf	4041,c	;volatile
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;my_i2c.c: 268: ic_ptr->outbufind++;
  7723  00059C  0100               	movlb	0	; () banked
  7724  00059E  EE20 F01E          	lfsr	2,30
  7725  0005A2                     L8:
  7726  0005A2  0100               	movlb	0	; () banked
  7727  0005A4  51C5               	movf	_ic_ptr& (0+255),w,b
  7728  0005A6  26D9               	addwf	fsr2l,f,c
  7729  0005A8  0100               	movlb	0	; () banked
  7730  0005AA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7731  0005AC  22DA               	addwfc	fsr2h,f,c
  7732  0005AE  2ADF               	incf	indf2,f,c
  7733                           
  7734                           ;my_i2c.c: 270: }
  7735  0005B0  D021               	goto	i2l291
  7736  0005B2                     L10:
  7737                           
  7738                           ;my_i2c.c: 275: ic_ptr->status = 0x5;
  7739  0005B2  0100               	movlb	0	; () banked
  7740  0005B4  EE20 F021          	lfsr	2,33
  7741  0005B8  0100               	movlb	0	; () banked
  7742  0005BA  51C5               	movf	_ic_ptr& (0+255),w,b
  7743  0005BC  26D9               	addwf	fsr2l,f,c
  7744  0005BE  0100               	movlb	0	; () banked
  7745  0005C0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7746  0005C2  22DA               	addwfc	fsr2h,f,c
  7747  0005C4  0E05               	movlw	5
  7748  0005C6  D6A7               	goto	L7
  7749  0005C8                     i2l3894:
  7750                           
  7751                           ; BSR set to: 0
  7752  0005C8  0100               	movlb	0	; () banked
  7753  0005CA  EE20 F021          	lfsr	2,33
  7754  0005CE  0100               	movlb	0	; () banked
  7755  0005D0  51C5               	movf	_ic_ptr& (0+255),w,b
  7756  0005D2  26D9               	addwf	fsr2l,f,c
  7757  0005D4  0100               	movlb	0	; () banked
  7758  0005D6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7759  0005D8  22DA               	addwfc	fsr2h,f,c
  7760  0005DA  50DF               	movf	indf2,w,c
  7761                           
  7762                           ; Switch size 1, requested type "space"
  7763                           ; Number of cases is 4, Range of values is 5 to 8
  7764                           ; switch strategies available:
  7765                           ; Name         Instructions Cycles
  7766                           ; simple_byte           13     7 (average)
  7767                           ;	Chosen strategy is simple_byte
  7768  0005DC  0A05               	xorlw	5	; case 5
  7769  0005DE  B4D8               	btfsc	status,2,c
  7770  0005E0  D5B6               	goto	i2l293
  7771  0005E2  0A03               	xorlw	3	; case 6
  7772  0005E4  B4D8               	btfsc	status,2,c
  7773  0005E6  D5CC               	goto	i2l297
  7774  0005E8  0A01               	xorlw	1	; case 7
  7775  0005EA  B4D8               	btfsc	status,2,c
  7776  0005EC  D696               	goto	i2l3838
  7777  0005EE  0A0F               	xorlw	15	; case 8
  7778  0005F0  B4D8               	btfsc	status,2,c
  7779  0005F2  D64E               	goto	i2l3822
  7780  0005F4                     i2l291:
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;my_i2c.c: 282: }
  7784                           ;my_i2c.c: 285: if (data_read || data_written) {
  7785  0005F4  0100               	movlb	0	; () banked
  7786  0005F6  67A9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7787  0005F8  D004               	goto	i2l329
  7788                           
  7789                           ; BSR set to: 0
  7790  0005FA  0100               	movlb	0	; () banked
  7791  0005FC  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7792  0005FE  B4D8               	btfsc	status,2,c
  7793  000600  D002               	goto	i2l3900
  7794  000602                     i2l329:
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;my_i2c.c: 287: if (SSPCON1bits.CKP == 0) {
  7798  000602  A8C6               	btfss	4038,4,c	;volatile
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;my_i2c.c: 288: SSPCON1bits.CKP = 1;
  7802  000604  88C6               	bsf	4038,4,c	;volatile
  7803  000606                     i2l3900:
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;my_i2c.c: 289: }
  7807                           ;my_i2c.c: 290: }
  7808                           ;my_i2c.c: 295: if ((ic_ptr->buflen > 14 - 2) && (!msg_ready)) {
  7809  000606  0100               	movlb	0	; () banked
  7810  000608  EE20 F00E          	lfsr	2,14
  7811  00060C  0100               	movlb	0	; () banked
  7812  00060E  51C5               	movf	_ic_ptr& (0+255),w,b
  7813  000610  26D9               	addwf	fsr2l,f,c
  7814  000612  0100               	movlb	0	; () banked
  7815  000614  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7816  000616  22DA               	addwfc	fsr2h,f,c
  7817  000618  0E0C               	movlw	12
  7818  00061A  64DF               	cpfsgt	indf2,c
  7819  00061C  D023               	goto	i2l3906
  7820                           
  7821                           ; BSR set to: 0
  7822  00061E  0100               	movlb	0	; () banked
  7823  000620  67A8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7824  000622  D020               	goto	i2l3906
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;my_i2c.c: 296: ic_ptr->status = 0x5;
  7828  000624  0100               	movlb	0	; () banked
  7829  000626  EE20 F021          	lfsr	2,33
  7830  00062A  0100               	movlb	0	; () banked
  7831  00062C  51C5               	movf	_ic_ptr& (0+255),w,b
  7832  00062E  26D9               	addwf	fsr2l,f,c
  7833  000630  0100               	movlb	0	; () banked
  7834  000632  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7835  000634  22DA               	addwfc	fsr2h,f,c
  7836  000636  0E05               	movlw	5
  7837  000638  6EDF               	movwf	indf2,c
  7838                           
  7839                           ;my_i2c.c: 297: ic_ptr->error_count++;
  7840  00063A  0100               	movlb	0	; () banked
  7841  00063C  EE20 F023          	lfsr	2,35
  7842  000640  0100               	movlb	0	; () banked
  7843  000642  51C5               	movf	_ic_ptr& (0+255),w,b
  7844  000644  26D9               	addwf	fsr2l,f,c
  7845  000646  0100               	movlb	0	; () banked
  7846  000648  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7847  00064A  22DA               	addwfc	fsr2h,f,c
  7848  00064C  2ADF               	incf	indf2,f,c
  7849                           
  7850                           ;my_i2c.c: 298: ic_ptr->error_code = 0x7;
  7851  00064E  0100               	movlb	0	; () banked
  7852  000650  EE20 F022          	lfsr	2,34
  7853  000654  0100               	movlb	0	; () banked
  7854  000656  51C5               	movf	_ic_ptr& (0+255),w,b
  7855  000658  26D9               	addwf	fsr2l,f,c
  7856  00065A  0100               	movlb	0	; () banked
  7857  00065C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7858  00065E  22DA               	addwfc	fsr2h,f,c
  7859  000660  0E07               	movlw	7
  7860  000662  6EDF               	movwf	indf2,c
  7861  000664                     i2l3906:
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;my_i2c.c: 299: }
  7865                           ;my_i2c.c: 301: if (msg_ready) {
  7866  000664  0100               	movlb	0	; () banked
  7867  000666  51A8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7868  000668  B4D8               	btfsc	status,2,c
  7869  00066A  D03F               	goto	i2l3914
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;my_i2c.c: 302: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7873  00066C  0100               	movlb	0	; () banked
  7874  00066E  EE20 F020          	lfsr	2,32
  7875  000672  0100               	movlb	0	; () banked
  7876  000674  51C5               	movf	_ic_ptr& (0+255),w,b
  7877  000676  26D9               	addwf	fsr2l,f,c
  7878  000678  0100               	movlb	0	; () banked
  7879  00067A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7880  00067C  22DA               	addwfc	fsr2h,f,c
  7881  00067E  0100               	movlb	0	; () banked
  7882  000680  EE10 F00E          	lfsr	1,14
  7883  000684  0100               	movlb	0	; () banked
  7884  000686  51C5               	movf	_ic_ptr& (0+255),w,b
  7885  000688  26E1               	addwf	fsr1l,f,c
  7886  00068A  0100               	movlb	0	; () banked
  7887  00068C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7888  00068E  22E2               	addwfc	fsr1h,f,c
  7889  000690  50E7               	movf	indf1,w,c
  7890  000692  0100               	movlb	0	; () banked
  7891  000694  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7892  000696  0100               	movlb	0	; () banked
  7893  000698  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7894  00069A  0D01               	mullw	1
  7895  00069C  50F3               	movf	prodl,w,c
  7896  00069E  0100               	movlb	0	; () banked
  7897  0006A0  25C5               	addwf	_ic_ptr& (0+255),w,b
  7898  0006A2  6EE1               	movwf	fsr1l,c
  7899  0006A4  50F4               	movf	prodh,w,c
  7900  0006A6  0100               	movlb	0	; () banked
  7901  0006A8  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7902  0006AA  6EE2               	movwf	fsr1h,c
  7903  0006AC  CFDF FFE7          	movff	indf2,indf1
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;my_i2c.c: 303: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7907  0006B0  0E28               	movlw	40
  7908  0006B2  0100               	movlb	0	; () banked
  7909  0006B4  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7910  0006B6  0100               	movlb	0	; () banked
  7911  0006B8  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7912  0006BC  0100               	movlb	0	; () banked
  7913  0006BE  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7914  0006C2  0100               	movlb	0	; () banked
  7915  0006C4  EE20 F00E          	lfsr	2,14
  7916  0006C8  0100               	movlb	0	; () banked
  7917  0006CA  51C5               	movf	_ic_ptr& (0+255),w,b
  7918  0006CC  26D9               	addwf	fsr2l,f,c
  7919  0006CE  0100               	movlb	0	; () banked
  7920  0006D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7921  0006D2  22DA               	addwfc	fsr2h,f,c
  7922  0006D4  50DF               	movf	indf2,w,c
  7923  0006D6  0100               	movlb	0	; () banked
  7924  0006D8  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7925  0006DA  0100               	movlb	0	; () banked
  7926  0006DC  299D               	incf	??_i2c_int_handler& (0+255),w,b
  7927  0006DE  EC0F  F00F         	call	_ToMainHigh_sendmsg
  7928                           
  7929                           ;my_i2c.c: 304: ic_ptr->buflen = 0;
  7930  0006E2  0100               	movlb	0	; () banked
  7931  0006E4  EE20 F00E          	lfsr	2,14
  7932  0006E8  D041               	goto	L9
  7933  0006EA                     i2l3914:
  7934                           
  7935                           ; BSR set to: 0
  7936  0006EA  0100               	movlb	0	; () banked
  7937  0006EC  EE20 F023          	lfsr	2,35
  7938  0006F0  0100               	movlb	0	; () banked
  7939  0006F2  51C5               	movf	_ic_ptr& (0+255),w,b
  7940  0006F4  26D9               	addwf	fsr2l,f,c
  7941  0006F6  0100               	movlb	0	; () banked
  7942  0006F8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7943  0006FA  22DA               	addwfc	fsr2h,f,c
  7944  0006FC  50DF               	movf	indf2,w,c
  7945  0006FE  B4D8               	btfsc	status,2,c
  7946  000700  D03D               	goto	i2l3922
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;my_i2c.c: 306: error_buf[0] = ic_ptr->error_count;
  7950  000702  0100               	movlb	0	; () banked
  7951  000704  EE20 F023          	lfsr	2,35
  7952  000708  0100               	movlb	0	; () banked
  7953  00070A  51C5               	movf	_ic_ptr& (0+255),w,b
  7954  00070C  26D9               	addwf	fsr2l,f,c
  7955  00070E  0100               	movlb	0	; () banked
  7956  000710  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7957  000712  22DA               	addwfc	fsr2h,f,c
  7958  000714  50DF               	movf	indf2,w,c
  7959  000716  0100               	movlb	0	; () banked
  7960  000718  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  7961                           
  7962                           ;my_i2c.c: 307: error_buf[1] = ic_ptr->error_code;
  7963  00071A  0100               	movlb	0	; () banked
  7964  00071C  EE20 F022          	lfsr	2,34
  7965  000720  0100               	movlb	0	; () banked
  7966  000722  51C5               	movf	_ic_ptr& (0+255),w,b
  7967  000724  26D9               	addwf	fsr2l,f,c
  7968  000726  0100               	movlb	0	; () banked
  7969  000728  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7970  00072A  22DA               	addwfc	fsr2h,f,c
  7971  00072C  50DF               	movf	indf2,w,c
  7972  00072E  0100               	movlb	0	; () banked
  7973  000730  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7974                           
  7975                           ;my_i2c.c: 308: error_buf[2] = ic_ptr->event_count;
  7976  000732  0100               	movlb	0	; () banked
  7977  000734  EE20 F020          	lfsr	2,32
  7978  000738  0100               	movlb	0	; () banked
  7979  00073A  51C5               	movf	_ic_ptr& (0+255),w,b
  7980  00073C  26D9               	addwf	fsr2l,f,c
  7981  00073E  0100               	movlb	0	; () banked
  7982  000740  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7983  000742  22DA               	addwfc	fsr2h,f,c
  7984  000744  50DF               	movf	indf2,w,c
  7985  000746  0100               	movlb	0	; () banked
  7986  000748  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;my_i2c.c: 309: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7990  00074A  0E29               	movlw	41
  7991  00074C  0100               	movlb	0	; () banked
  7992  00074E  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7993  000750  0100               	movlb	0	; () banked
  7994  000752  0E00               	movlw	high i2c_int_handler@error_buf
  7995  000754  0100               	movlb	0	; () banked
  7996  000756  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7997  000758  0100               	movlb	0	; () banked
  7998  00075A  0E9F               	movlw	low i2c_int_handler@error_buf
  7999  00075C  0100               	movlb	0	; () banked
  8000  00075E  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8001  000760  0E03               	movlw	3
  8002  000762  EC0F  F00F         	call	_ToMainHigh_sendmsg
  8003                           
  8004                           ;my_i2c.c: 310: ic_ptr->error_count = 0;
  8005  000766  0100               	movlb	0	; () banked
  8006  000768  EE20 F023          	lfsr	2,35
  8007  00076C                     L9:
  8008  00076C  0100               	movlb	0	; () banked
  8009  00076E  51C5               	movf	_ic_ptr& (0+255),w,b
  8010  000770  26D9               	addwf	fsr2l,f,c
  8011  000772  0100               	movlb	0	; () banked
  8012  000774  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8013  000776  22DA               	addwfc	fsr2h,f,c
  8014  000778  0E00               	movlw	0
  8015  00077A  6EDF               	movwf	indf2,c
  8016  00077C                     i2l3922:
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;my_i2c.c: 311: }
  8020                           ;my_i2c.c: 312: if (msg_to_send) {
  8021  00077C  0100               	movlb	0	; () banked
  8022  00077E  51A6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8023  000780  B4D8               	btfsc	status,2,c
  8024  000782  D01F               	goto	i2l3930
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;my_i2c.c: 314: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  8028  000784  0E10               	movlw	16
  8029  000786  0100               	movlb	0	; () banked
  8030  000788  25C5               	addwf	_ic_ptr& (0+255),w,b
  8031  00078A  0100               	movlb	0	; () banked
  8032  00078C  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  8033  00078E  0E00               	movlw	0
  8034  000790  0100               	movlb	0	; () banked
  8035  000792  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8036  000794  0100               	movlb	0	; () banked
  8037  000796  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  8038  000798  0E0E               	movlw	14
  8039  00079A  EC8B  F008         	call	_start_i2c_slave_reply
  8040                           
  8041                           ;my_i2c.c: 316: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8042  00079E  0E2A               	movlw	42
  8043  0007A0  0100               	movlb	0	; () banked
  8044  0007A2  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8045  0007A4  0100               	movlb	0	; () banked
  8046  0007A6  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8047  0007AA  0100               	movlb	0	; () banked
  8048  0007AC  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8049  0007B0  0E00               	movlw	0
  8050  0007B2  EC0F  F00F         	call	_ToMainHigh_sendmsg
  8051                           
  8052                           ;my_i2c.c: 317: need_data = 1;
  8053  0007B6  0E01               	movlw	1
  8054  0007B8  0100               	movlb	0	; () banked
  8055  0007BA  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;my_i2c.c: 318: msg_to_send = 0;
  8059  0007BC  0E00               	movlw	0
  8060  0007BE  0100               	movlb	0	; () banked
  8061  0007C0  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8062  0007C2                     i2l3930:
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;my_i2c.c: 319: }
  8066                           ;my_i2c.c: 321: if(need_data)
  8067  0007C2  0100               	movlb	0	; () banked
  8068  0007C4  51A4               	movf	i2c_int_handler@need_data& (0+255),w,b
  8069  0007C6  B4D8               	btfsc	status,2,c
  8070  0007C8  0012               	return	
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;my_i2c.c: 322: {
  8074                           ;my_i2c.c: 323: unsigned char msg_type;
  8075                           ;my_i2c.c: 324: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  8076  0007CA  0100               	movlb	0	; () banked
  8077  0007CC  0E00               	movlw	high i2c_int_handler@msg_type
  8078  0007CE  0100               	movlb	0	; () banked
  8079  0007D0  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  8080  0007D2  0100               	movlb	0	; () banked
  8081  0007D4  0EA7               	movlw	low i2c_int_handler@msg_type
  8082  0007D6  0100               	movlb	0	; () banked
  8083  0007D8  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  8084  0007DA  0E10               	movlw	16
  8085  0007DC  0100               	movlb	0	; () banked
  8086  0007DE  25C5               	addwf	_ic_ptr& (0+255),w,b
  8087  0007E0  0100               	movlb	0	; () banked
  8088  0007E2  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  8089  0007E4  0E00               	movlw	0
  8090  0007E6  0100               	movlb	0	; () banked
  8091  0007E8  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8092  0007EA  0100               	movlb	0	; () banked
  8093  0007EC  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  8094  0007EE  0E0E               	movlw	14
  8095  0007F0  EC94  F00E         	call	_FromMainHigh_recvmsg
  8096  0007F4  0100               	movlb	0	; () banked
  8097  0007F6  6F9E               	movwf	i2c_int_handler@length& (0+255),b
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;my_i2c.c: 333: else
  8101                           ;my_i2c.c: 334: {
  8102                           ;my_i2c.c: 335: need_data = 0;
  8103                           
  8104                           ; BSR set to: 0
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;my_i2c.c: 330: {
  8108                           ;my_i2c.c: 332: }
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;my_i2c.c: 329: else if( length < 0 )
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;my_i2c.c: 326: {
  8115                           ;my_i2c.c: 328: }
  8116                           
  8117                           ;my_i2c.c: 325: if( length == -4 )
  8118  0007F8  0E00               	movlw	0
  8119  0007FA  0100               	movlb	0	; () banked
  8120  0007FC  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  8121  0007FE  0012               	return	
  8122  000800                     __end_of_i2c_int_handler:
  8123                           	opt stack 0
  8124                           pclatu	equ	0xFFB
  8125                           pclath	equ	0xFFA
  8126                           tblptru	equ	0xFF8
  8127                           tblptrh	equ	0xFF7
  8128                           tblptrl	equ	0xFF6
  8129                           tablat	equ	0xFF5
  8130                           prodh	equ	0xFF4
  8131                           prodl	equ	0xFF3
  8132                           intcon	equ	0xFF2
  8133                           postinc0	equ	0xFEE
  8134                           fsr0h	equ	0xFEA
  8135                           fsr0l	equ	0xFE9
  8136                           wreg	equ	0xFE8
  8137                           indf1	equ	0xFE7
  8138                           fsr1h	equ	0xFE2
  8139                           fsr1l	equ	0xFE1
  8140                           bsr	equ	0xFE0
  8141                           indf2	equ	0xFDF
  8142                           postinc2	equ	0xFDE
  8143                           postdec2	equ	0xFDD
  8144                           fsr2h	equ	0xFDA
  8145                           fsr2l	equ	0xFD9
  8146                           status	equ	0xFD8
  8147                           
  8148 ;; *************** function i2_blip3 *****************
  8149 ;; Defined at:
  8150 ;;		line 32 in file "../src/debug.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;		None
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;		None
  8155 ;; Return value:  Size  Location     Type
  8156 ;;		None               void
  8157 ;; Registers used:
  8158 ;;		None
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8164 ;;      Params:         0       0       0       0       0
  8165 ;;      Locals:         0       0       0       0       0
  8166 ;;      Temps:          0       0       0       0       0
  8167 ;;      Totals:         0       0       0       0       0
  8168 ;;Total ram usage:        0 bytes
  8169 ;; Hardware stack levels used:    1
  8170 ;; This function calls:
  8171 ;;		Nothing
  8172 ;; This function is called by:
  8173 ;;		_i2c_int_handler
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           	psect	text45
  8178  001FEA                     __ptext45:
  8179                           	opt stack 0
  8180  001FEA                     i2_blip3:
  8181                           	opt stack 19
  8182                           
  8183                           ;debug.c: 34: LATDbits.LD6 = 0;
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;incstack = 0
  8187  001FEA  9C8C               	bcf	3980,6,c	;volatile
  8188                           
  8189                           ;debug.c: 35: LATDbits.LD6 = 1;
  8190  001FEC  8C8C               	bsf	3980,6,c	;volatile
  8191                           
  8192                           ;debug.c: 36: LATDbits.LD6 = 0;
  8193  001FEE  9C8C               	bcf	3980,6,c	;volatile
  8194  001FF0  0012               	return	
  8195  001FF2                     __end_ofi2_blip3:
  8196                           	opt stack 0
  8197                           pclatu	equ	0xFFB
  8198                           pclath	equ	0xFFA
  8199                           tblptru	equ	0xFF8
  8200                           tblptrh	equ	0xFF7
  8201                           tblptrl	equ	0xFF6
  8202                           tablat	equ	0xFF5
  8203                           prodh	equ	0xFF4
  8204                           prodl	equ	0xFF3
  8205                           intcon	equ	0xFF2
  8206                           postinc0	equ	0xFEE
  8207                           fsr0h	equ	0xFEA
  8208                           fsr0l	equ	0xFE9
  8209                           wreg	equ	0xFE8
  8210                           indf1	equ	0xFE7
  8211                           fsr1h	equ	0xFE2
  8212                           fsr1l	equ	0xFE1
  8213                           bsr	equ	0xFE0
  8214                           indf2	equ	0xFDF
  8215                           postinc2	equ	0xFDE
  8216                           postdec2	equ	0xFDD
  8217                           fsr2h	equ	0xFDA
  8218                           fsr2l	equ	0xFD9
  8219                           status	equ	0xFD8
  8220                           
  8221 ;; *************** function i2_blip2 *****************
  8222 ;; Defined at:
  8223 ;;		line 25 in file "../src/debug.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;		None
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;		None               void
  8230 ;; Registers used:
  8231 ;;		None
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8237 ;;      Params:         0       0       0       0       0
  8238 ;;      Locals:         0       0       0       0       0
  8239 ;;      Temps:          0       0       0       0       0
  8240 ;;      Totals:         0       0       0       0       0
  8241 ;;Total ram usage:        0 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_i2c_int_handler
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text46
  8251  001FF2                     __ptext46:
  8252                           	opt stack 0
  8253  001FF2                     i2_blip2:
  8254                           	opt stack 19
  8255                           
  8256                           ;debug.c: 27: LATDbits.LD5 = 0;
  8257                           
  8258                           ;incstack = 0
  8259  001FF2  9A8C               	bcf	3980,5,c	;volatile
  8260                           
  8261                           ;debug.c: 28: LATDbits.LD5 = 1;
  8262  001FF4  8A8C               	bsf	3980,5,c	;volatile
  8263                           
  8264                           ;debug.c: 29: LATDbits.LD5 = 0;
  8265  001FF6  9A8C               	bcf	3980,5,c	;volatile
  8266  001FF8  0012               	return	
  8267  001FFA                     __end_ofi2_blip2:
  8268                           	opt stack 0
  8269                           pclatu	equ	0xFFB
  8270                           pclath	equ	0xFFA
  8271                           tblptru	equ	0xFF8
  8272                           tblptrh	equ	0xFF7
  8273                           tblptrl	equ	0xFF6
  8274                           tablat	equ	0xFF5
  8275                           prodh	equ	0xFF4
  8276                           prodl	equ	0xFF3
  8277                           intcon	equ	0xFF2
  8278                           postinc0	equ	0xFEE
  8279                           fsr0h	equ	0xFEA
  8280                           fsr0l	equ	0xFE9
  8281                           wreg	equ	0xFE8
  8282                           indf1	equ	0xFE7
  8283                           fsr1h	equ	0xFE2
  8284                           fsr1l	equ	0xFE1
  8285                           bsr	equ	0xFE0
  8286                           indf2	equ	0xFDF
  8287                           postinc2	equ	0xFDE
  8288                           postdec2	equ	0xFDD
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function i2_blip1 *****************
  8294 ;; Defined at:
  8295 ;;		line 18 in file "../src/debug.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;		None               void
  8302 ;; Registers used:
  8303 ;;		None
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8309 ;;      Params:         0       0       0       0       0
  8310 ;;      Locals:         0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0
  8312 ;;      Totals:         0       0       0       0       0
  8313 ;;Total ram usage:        0 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_i2c_int_handler
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           	psect	text47
  8323  001FFA                     __ptext47:
  8324                           	opt stack 0
  8325  001FFA                     i2_blip1:
  8326                           	opt stack 19
  8327                           
  8328                           ;debug.c: 20: LATDbits.LD4 = 0;
  8329                           
  8330                           ;incstack = 0
  8331  001FFA  988C               	bcf	3980,4,c	;volatile
  8332                           
  8333                           ;debug.c: 21: LATDbits.LD4 = 1;
  8334  001FFC  888C               	bsf	3980,4,c	;volatile
  8335                           
  8336                           ;debug.c: 22: LATDbits.LD4 = 0;
  8337  001FFE  988C               	bcf	3980,4,c	;volatile
  8338  002000  0012               	return	
  8339  002002                     __end_ofi2_blip1:
  8340                           	opt stack 0
  8341                           pclatu	equ	0xFFB
  8342                           pclath	equ	0xFFA
  8343                           tblptru	equ	0xFF8
  8344                           tblptrh	equ	0xFF7
  8345                           tblptrl	equ	0xFF6
  8346                           tablat	equ	0xFF5
  8347                           prodh	equ	0xFF4
  8348                           prodl	equ	0xFF3
  8349                           intcon	equ	0xFF2
  8350                           postinc0	equ	0xFEE
  8351                           fsr0h	equ	0xFEA
  8352                           fsr0l	equ	0xFE9
  8353                           wreg	equ	0xFE8
  8354                           indf1	equ	0xFE7
  8355                           fsr1h	equ	0xFE2
  8356                           fsr1l	equ	0xFE1
  8357                           bsr	equ	0xFE0
  8358                           indf2	equ	0xFDF
  8359                           postinc2	equ	0xFDE
  8360                           postdec2	equ	0xFDD
  8361                           fsr2h	equ	0xFDA
  8362                           fsr2l	equ	0xFD9
  8363                           status	equ	0xFD8
  8364                           
  8365 ;; *************** function _start_i2c_slave_reply *****************
  8366 ;; Defined at:
  8367 ;;		line 54 in file "../src/my_i2c.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  length          1    wreg     unsigned char 
  8370 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8371 ;;		 -> NULL(0), main@ic(38), 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  length          1    4[BANK0 ] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;		None               void
  8376 ;; Registers used:
  8377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8383 ;;      Params:         0       2       0       0       0
  8384 ;;      Locals:         0       1       0       0       0
  8385 ;;      Temps:          0       2       0       0       0
  8386 ;;      Totals:         0       5       0       0       0
  8387 ;;Total ram usage:        5 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_i2c_int_handler
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text48
  8397  001116                     __ptext48:
  8398                           	opt stack 0
  8399  001116                     _start_i2c_slave_reply:
  8400                           	opt stack 19
  8401                           
  8402                           ;incstack = 0
  8403                           ;start_i2c_slave_reply@length stored from wreg
  8404  001116  0100               	movlb	0	; () banked
  8405  001118  6F84               	movwf	start_i2c_slave_reply@length& (0+255),b
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8409  00111A  0100               	movlb	0	; () banked
  8410  00111C  EE20 F01F          	lfsr	2,31
  8411  001120  0100               	movlb	0	; () banked
  8412  001122  51C5               	movf	_ic_ptr& (0+255),w,b
  8413  001124  26D9               	addwf	fsr2l,f,c
  8414  001126  0100               	movlb	0	; () banked
  8415  001128  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8416  00112A  22DA               	addwfc	fsr2h,f,c
  8417  00112C  0E00               	movlw	0
  8418  00112E  6EDF               	movwf	indf2,c
  8419  001130  D03E               	goto	i2l2738
  8420  001132                     i2l2734:
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8424  001132  0100               	movlb	0	; () banked
  8425  001134  EE20 F01F          	lfsr	2,31
  8426  001138  0100               	movlb	0	; () banked
  8427  00113A  51C5               	movf	_ic_ptr& (0+255),w,b
  8428  00113C  26D9               	addwf	fsr2l,f,c
  8429  00113E  0100               	movlb	0	; () banked
  8430  001140  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8431  001142  22DA               	addwfc	fsr2h,f,c
  8432  001144  50DF               	movf	indf2,w,c
  8433  001146  0100               	movlb	0	; () banked
  8434  001148  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8435  00114A  0100               	movlb	0	; () banked
  8436  00114C  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8437  00114E  0D01               	mullw	1
  8438  001150  50F3               	movf	prodl,w,c
  8439  001152  0100               	movlb	0	; () banked
  8440  001154  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  8441  001156  6ED9               	movwf	fsr2l,c
  8442  001158  50F4               	movf	prodh,w,c
  8443  00115A  0100               	movlb	0	; () banked
  8444  00115C  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  8445  00115E  6EDA               	movwf	fsr2h,c
  8446  001160  0100               	movlb	0	; () banked
  8447  001162  EE10 F01F          	lfsr	1,31
  8448  001166  0100               	movlb	0	; () banked
  8449  001168  51C5               	movf	_ic_ptr& (0+255),w,b
  8450  00116A  26E1               	addwf	fsr1l,f,c
  8451  00116C  0100               	movlb	0	; () banked
  8452  00116E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8453  001170  22E2               	addwfc	fsr1h,f,c
  8454  001172  50E7               	movf	indf1,w,c
  8455  001174  0100               	movlb	0	; () banked
  8456  001176  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8457  001178  0100               	movlb	0	; () banked
  8458  00117A  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8459  00117C  0D01               	mullw	1
  8460  00117E  0E10               	movlw	16
  8461  001180  26F3               	addwf	prodl,f,c
  8462  001182  0E00               	movlw	0
  8463  001184  22F4               	addwfc	prodh,f,c
  8464  001186  50F3               	movf	prodl,w,c
  8465  001188  0100               	movlb	0	; () banked
  8466  00118A  25C5               	addwf	_ic_ptr& (0+255),w,b
  8467  00118C  6EE1               	movwf	fsr1l,c
  8468  00118E  50F4               	movf	prodh,w,c
  8469  001190  0100               	movlb	0	; () banked
  8470  001192  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8471  001194  6EE2               	movwf	fsr1h,c
  8472  001196  CFDF FFE7          	movff	indf2,indf1
  8473                           
  8474                           ; BSR set to: 0
  8475  00119A  0100               	movlb	0	; () banked
  8476  00119C  EE20 F01F          	lfsr	2,31
  8477  0011A0  0100               	movlb	0	; () banked
  8478  0011A2  51C5               	movf	_ic_ptr& (0+255),w,b
  8479  0011A4  26D9               	addwf	fsr2l,f,c
  8480  0011A6  0100               	movlb	0	; () banked
  8481  0011A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8482  0011AA  22DA               	addwfc	fsr2h,f,c
  8483  0011AC  2ADF               	incf	indf2,f,c
  8484  0011AE                     i2l2738:
  8485                           
  8486                           ; BSR set to: 0
  8487  0011AE  0100               	movlb	0	; () banked
  8488  0011B0  EE20 F01F          	lfsr	2,31
  8489  0011B4  0100               	movlb	0	; () banked
  8490  0011B6  51C5               	movf	_ic_ptr& (0+255),w,b
  8491  0011B8  26D9               	addwf	fsr2l,f,c
  8492  0011BA  0100               	movlb	0	; () banked
  8493  0011BC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8494  0011BE  22DA               	addwfc	fsr2h,f,c
  8495  0011C0  50DF               	movf	indf2,w,c
  8496  0011C2  0100               	movlb	0	; () banked
  8497  0011C4  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8498  0011C6  0100               	movlb	0	; () banked
  8499  0011C8  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8500  0011CA  0100               	movlb	0	; () banked
  8501  0011CC  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8502  0011CE  A0D8               	btfss	status,0,c
  8503  0011D0  D7B0               	goto	i2l2734
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;my_i2c.c: 58: }
  8507                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  8508                           
  8509                           ; BSR set to: 0
  8510  0011D2  0100               	movlb	0	; () banked
  8511  0011D4  EE20 F01F          	lfsr	2,31
  8512  0011D8  0100               	movlb	0	; () banked
  8513  0011DA  51C5               	movf	_ic_ptr& (0+255),w,b
  8514  0011DC  26D9               	addwf	fsr2l,f,c
  8515  0011DE  0100               	movlb	0	; () banked
  8516  0011E0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8517  0011E2  22DA               	addwfc	fsr2h,f,c
  8518  0011E4  0100               	movlb	0	; () banked
  8519  0011E6  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8520                           
  8521                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  8522  0011EA  0100               	movlb	0	; () banked
  8523  0011EC  EE20 F01E          	lfsr	2,30
  8524  0011F0  0100               	movlb	0	; () banked
  8525  0011F2  51C5               	movf	_ic_ptr& (0+255),w,b
  8526  0011F4  26D9               	addwf	fsr2l,f,c
  8527  0011F6  0100               	movlb	0	; () banked
  8528  0011F8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8529  0011FA  22DA               	addwfc	fsr2h,f,c
  8530  0011FC  0E01               	movlw	1
  8531  0011FE  6EDF               	movwf	indf2,c
  8532                           
  8533                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  8534  001200  0100               	movlb	0	; () banked
  8535  001202  EE20 F010          	lfsr	2,16
  8536  001206  0100               	movlb	0	; () banked
  8537  001208  51C5               	movf	_ic_ptr& (0+255),w,b
  8538  00120A  26D9               	addwf	fsr2l,f,c
  8539  00120C  0100               	movlb	0	; () banked
  8540  00120E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8541  001210  22DA               	addwfc	fsr2h,f,c
  8542  001212  50DF               	movf	indf2,w,c
  8543  001214  6EC9               	movwf	4041,c	;volatile
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  8547  001216  88C6               	bsf	4038,4,c	;volatile
  8548                           
  8549                           ; BSR set to: 0
  8550  001218  0012               	return	
  8551  00121A                     __end_of_start_i2c_slave_reply:
  8552                           	opt stack 0
  8553                           pclatu	equ	0xFFB
  8554                           pclath	equ	0xFFA
  8555                           tblptru	equ	0xFF8
  8556                           tblptrh	equ	0xFF7
  8557                           tblptrl	equ	0xFF6
  8558                           tablat	equ	0xFF5
  8559                           prodh	equ	0xFF4
  8560                           prodl	equ	0xFF3
  8561                           intcon	equ	0xFF2
  8562                           postinc0	equ	0xFEE
  8563                           fsr0h	equ	0xFEA
  8564                           fsr0l	equ	0xFE9
  8565                           wreg	equ	0xFE8
  8566                           indf1	equ	0xFE7
  8567                           fsr1h	equ	0xFE2
  8568                           fsr1l	equ	0xFE1
  8569                           bsr	equ	0xFE0
  8570                           indf2	equ	0xFDF
  8571                           postinc2	equ	0xFDE
  8572                           postdec2	equ	0xFDD
  8573                           fsr2h	equ	0xFDA
  8574                           fsr2l	equ	0xFD9
  8575                           status	equ	0xFD8
  8576                           
  8577 ;; *************** function _handle_start *****************
  8578 ;; Defined at:
  8579 ;;		line 72 in file "../src/my_i2c.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  data_read       1    wreg     unsigned char 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;  data_read       1    0[BANK0 ] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;		None               void
  8586 ;; Registers used:
  8587 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8593 ;;      Params:         0       0       0       0       0
  8594 ;;      Locals:         0       1       0       0       0
  8595 ;;      Temps:          0       0       0       0       0
  8596 ;;      Totals:         0       1       0       0       0
  8597 ;;Total ram usage:        1 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_i2c_int_handler
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text49
  8607  0013E4                     __ptext49:
  8608                           	opt stack 0
  8609  0013E4                     _handle_start:
  8610                           	opt stack 19
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;incstack = 0
  8614                           ;handle_start@data_read stored from wreg
  8615  0013E4  0100               	movlb	0	; () banked
  8616  0013E6  6F80               	movwf	handle_start@data_read& (0+255),b
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8620  0013E8  0100               	movlb	0	; () banked
  8621  0013EA  EE20 F020          	lfsr	2,32
  8622  0013EE  0100               	movlb	0	; () banked
  8623  0013F0  51C5               	movf	_ic_ptr& (0+255),w,b
  8624  0013F2  26D9               	addwf	fsr2l,f,c
  8625  0013F4  0100               	movlb	0	; () banked
  8626  0013F6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8627  0013F8  22DA               	addwfc	fsr2h,f,c
  8628  0013FA  0E01               	movlw	1
  8629  0013FC  6EDF               	movwf	indf2,c
  8630                           
  8631                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8632  0013FE  0100               	movlb	0	; () banked
  8633  001400  EE20 F00E          	lfsr	2,14
  8634  001404  0100               	movlb	0	; () banked
  8635  001406  51C5               	movf	_ic_ptr& (0+255),w,b
  8636  001408  26D9               	addwf	fsr2l,f,c
  8637  00140A  0100               	movlb	0	; () banked
  8638  00140C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8639  00140E  22DA               	addwfc	fsr2h,f,c
  8640  001410  0E00               	movlw	0
  8641  001412  6EDF               	movwf	indf2,c
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;my_i2c.c: 76: if (data_read) {
  8645  001414  0100               	movlb	0	; () banked
  8646  001416  5180               	movf	handle_start@data_read& (0+255),w,b
  8647  001418  B4D8               	btfsc	status,2,c
  8648  00141A  D03D               	goto	i2l2756
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8652  00141C  AAC7               	btfss	4039,5,c	;volatile
  8653  00141E  D021               	goto	i2l281
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8657  001420  0100               	movlb	0	; () banked
  8658  001422  EE20 F021          	lfsr	2,33
  8659  001426  0100               	movlb	0	; () banked
  8660  001428  51C5               	movf	_ic_ptr& (0+255),w,b
  8661  00142A  26D9               	addwf	fsr2l,f,c
  8662  00142C  0100               	movlb	0	; () banked
  8663  00142E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8664  001430  22DA               	addwfc	fsr2h,f,c
  8665  001432  0E05               	movlw	5
  8666  001434  6EDF               	movwf	indf2,c
  8667                           
  8668                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8669  001436  0100               	movlb	0	; () banked
  8670  001438  EE20 F023          	lfsr	2,35
  8671  00143C  0100               	movlb	0	; () banked
  8672  00143E  51C5               	movf	_ic_ptr& (0+255),w,b
  8673  001440  26D9               	addwf	fsr2l,f,c
  8674  001442  0100               	movlb	0	; () banked
  8675  001444  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8676  001446  22DA               	addwfc	fsr2h,f,c
  8677  001448  2ADF               	incf	indf2,f,c
  8678                           
  8679                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8680  00144A  0100               	movlb	0	; () banked
  8681  00144C  EE20 F022          	lfsr	2,34
  8682  001450  0100               	movlb	0	; () banked
  8683  001452  51C5               	movf	_ic_ptr& (0+255),w,b
  8684  001454  26D9               	addwf	fsr2l,f,c
  8685  001456  0100               	movlb	0	; () banked
  8686  001458  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8687  00145A  22DA               	addwfc	fsr2h,f,c
  8688  00145C  0E05               	movlw	5
  8689  00145E  6EDF               	movwf	indf2,c
  8690                           
  8691                           ;my_i2c.c: 83: } else {
  8692  001460  0012               	return	
  8693  001462                     i2l281:
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8697  001462  A4C7               	btfss	4039,2,c	;volatile
  8698  001464  D00C               	goto	i2l2754
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8702  001466  0100               	movlb	0	; () banked
  8703  001468  EE20 F021          	lfsr	2,33
  8704  00146C  0100               	movlb	0	; () banked
  8705  00146E  51C5               	movf	_ic_ptr& (0+255),w,b
  8706  001470  26D9               	addwf	fsr2l,f,c
  8707  001472  0100               	movlb	0	; () banked
  8708  001474  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8709  001476  22DA               	addwfc	fsr2h,f,c
  8710  001478  0E08               	movlw	8
  8711  00147A  6EDF               	movwf	indf2,c
  8712                           
  8713                           ;my_i2c.c: 87: } else {
  8714  00147C  0012               	return	
  8715  00147E                     i2l2754:
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  8719  00147E  0100               	movlb	0	; () banked
  8720  001480  EE20 F021          	lfsr	2,33
  8721  001484  0100               	movlb	0	; () banked
  8722  001486  51C5               	movf	_ic_ptr& (0+255),w,b
  8723  001488  26D9               	addwf	fsr2l,f,c
  8724  00148A  0100               	movlb	0	; () banked
  8725  00148C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8726  00148E  22DA               	addwfc	fsr2h,f,c
  8727  001490  0E07               	movlw	7
  8728  001492  6EDF               	movwf	indf2,c
  8729  001494  0012               	return	
  8730  001496                     i2l2756:
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  8734  001496  0100               	movlb	0	; () banked
  8735  001498  EE20 F021          	lfsr	2,33
  8736  00149C  0100               	movlb	0	; () banked
  8737  00149E  51C5               	movf	_ic_ptr& (0+255),w,b
  8738  0014A0  26D9               	addwf	fsr2l,f,c
  8739  0014A2  0100               	movlb	0	; () banked
  8740  0014A4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8741  0014A6  22DA               	addwfc	fsr2h,f,c
  8742  0014A8  0E06               	movlw	6
  8743  0014AA  6EDF               	movwf	indf2,c
  8744  0014AC  0012               	return	
  8745  0014AE                     __end_of_handle_start:
  8746                           	opt stack 0
  8747                           pclatu	equ	0xFFB
  8748                           pclath	equ	0xFFA
  8749                           tblptru	equ	0xFF8
  8750                           tblptrh	equ	0xFF7
  8751                           tblptrl	equ	0xFF6
  8752                           tablat	equ	0xFF5
  8753                           prodh	equ	0xFF4
  8754                           prodl	equ	0xFF3
  8755                           intcon	equ	0xFF2
  8756                           postinc0	equ	0xFEE
  8757                           fsr0h	equ	0xFEA
  8758                           fsr0l	equ	0xFE9
  8759                           wreg	equ	0xFE8
  8760                           indf1	equ	0xFE7
  8761                           fsr1h	equ	0xFE2
  8762                           fsr1l	equ	0xFE1
  8763                           bsr	equ	0xFE0
  8764                           indf2	equ	0xFDF
  8765                           postinc2	equ	0xFDE
  8766                           postdec2	equ	0xFDD
  8767                           fsr2h	equ	0xFDA
  8768                           fsr2l	equ	0xFD9
  8769                           status	equ	0xFD8
  8770                           
  8771 ;; *************** function _blip4 *****************
  8772 ;; Defined at:
  8773 ;;		line 39 in file "../src/debug.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;		None
  8778 ;; Return value:  Size  Location     Type
  8779 ;;		None               void
  8780 ;; Registers used:
  8781 ;;		None
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8787 ;;      Params:         0       0       0       0       0
  8788 ;;      Locals:         0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0
  8790 ;;      Totals:         0       0       0       0       0
  8791 ;;Total ram usage:        0 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_i2c_int_handler
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           	psect	text50
  8801  002002                     __ptext50:
  8802                           	opt stack 0
  8803  002002                     _blip4:
  8804                           	opt stack 19
  8805                           
  8806                           ;debug.c: 41: LATDbits.LD7 = 0;
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;incstack = 0
  8810  002002  9E8C               	bcf	3980,7,c	;volatile
  8811                           
  8812                           ;debug.c: 42: LATDbits.LD7 = 1;
  8813  002004  8E8C               	bsf	3980,7,c	;volatile
  8814                           
  8815                           ;debug.c: 43: LATDbits.LD7 = 0;
  8816  002006  9E8C               	bcf	3980,7,c	;volatile
  8817  002008  0012               	return	
  8818  00200A                     __end_of_blip4:
  8819                           	opt stack 0
  8820                           pclatu	equ	0xFFB
  8821                           pclath	equ	0xFFA
  8822                           tblptru	equ	0xFF8
  8823                           tblptrh	equ	0xFF7
  8824                           tblptrl	equ	0xFF6
  8825                           tablat	equ	0xFF5
  8826                           prodh	equ	0xFF4
  8827                           prodl	equ	0xFF3
  8828                           intcon	equ	0xFF2
  8829                           postinc0	equ	0xFEE
  8830                           fsr0h	equ	0xFEA
  8831                           fsr0l	equ	0xFE9
  8832                           wreg	equ	0xFE8
  8833                           indf1	equ	0xFE7
  8834                           fsr1h	equ	0xFE2
  8835                           fsr1l	equ	0xFE1
  8836                           bsr	equ	0xFE0
  8837                           indf2	equ	0xFDF
  8838                           postinc2	equ	0xFDE
  8839                           postdec2	equ	0xFDD
  8840                           fsr2h	equ	0xFDA
  8841                           fsr2l	equ	0xFD9
  8842                           status	equ	0xFD8
  8843                           
  8844 ;; *************** function _ToMainHigh_sendmsg *****************
  8845 ;; Defined at:
  8846 ;;		line 126 in file "../src/messages.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  length          1    wreg     unsigned char 
  8849 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8850 ;;  data            2   23[BANK0 ] PTR void 
  8851 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;  length          1   25[BANK0 ] unsigned char 
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      char 
  8856 ;; Registers used:
  8857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8863 ;;      Params:         0       3       0       0       0
  8864 ;;      Locals:         0       1       0       0       0
  8865 ;;      Temps:          0       0       0       0       0
  8866 ;;      Totals:         0       4       0       0       0
  8867 ;;Total ram usage:        4 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; Hardware stack levels required when called:    2
  8870 ;; This function calls:
  8871 ;;		i2_send_msg
  8872 ;; This function is called by:
  8873 ;;		_i2c_int_handler
  8874 ;;		_timer0_int_handler
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text51
  8879  001E1E                     __ptext51:
  8880                           	opt stack 0
  8881  001E1E                     _ToMainHigh_sendmsg:
  8882                           	opt stack 17
  8883                           
  8884                           ;incstack = 0
  8885                           ;ToMainHigh_sendmsg@length stored from wreg
  8886  001E1E  0100               	movlb	0	; () banked
  8887  001E20  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8891                           ;	Return value of _ToMainHigh_sendmsg is never used
  8892  001E22  0102               	movlb	2	; () banked
  8893  001E24  0E02               	movlw	high _ToMainHigh_MQ
  8894  001E26  0100               	movlb	0	; () banked
  8895  001E28  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8896  001E2A  0102               	movlb	2	; () banked
  8897  001E2C  0E57               	movlw	low _ToMainHigh_MQ
  8898  001E2E  0100               	movlb	0	; () banked
  8899  001E30  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8900  001E32  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8901  001E36  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8902  001E3A  0100               	movlb	0	; () banked
  8903  001E3C  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8904  001E40  0100               	movlb	0	; () banked
  8905  001E42  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8906  001E46  EC05  F008         	call	i2_send_msg	;wreg free
  8907  001E4A  0012               	return	
  8908  001E4C                     __end_of_ToMainHigh_sendmsg:
  8909                           	opt stack 0
  8910                           pclatu	equ	0xFFB
  8911                           pclath	equ	0xFFA
  8912                           tblptru	equ	0xFF8
  8913                           tblptrh	equ	0xFF7
  8914                           tblptrl	equ	0xFF6
  8915                           tablat	equ	0xFF5
  8916                           prodh	equ	0xFF4
  8917                           prodl	equ	0xFF3
  8918                           intcon	equ	0xFF2
  8919                           postinc0	equ	0xFEE
  8920                           fsr0h	equ	0xFEA
  8921                           fsr0l	equ	0xFE9
  8922                           wreg	equ	0xFE8
  8923                           indf1	equ	0xFE7
  8924                           fsr1h	equ	0xFE2
  8925                           fsr1l	equ	0xFE1
  8926                           bsr	equ	0xFE0
  8927                           indf2	equ	0xFDF
  8928                           postinc2	equ	0xFDE
  8929                           postdec2	equ	0xFDD
  8930                           fsr2h	equ	0xFDA
  8931                           fsr2l	equ	0xFD9
  8932                           status	equ	0xFD8
  8933                           
  8934 ;; *************** function i2_send_msg *****************
  8935 ;; Defined at:
  8936 ;;		line 24 in file "../src/messages.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8939 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8940 ;;  length          1   12[BANK0 ] unsigned char 
  8941 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8942 ;;  data            2   14[BANK0 ] PTR void 
  8943 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  8944 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8945 ;;		 -> i2c_int_handler@error_buf(3), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  8946 ;;		 -> main@ic(38), 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8949 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8950 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8951 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8952 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      char 
  8955 ;; Registers used:
  8956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8962 ;;      Params:         0       6       0       0       0
  8963 ;;      Locals:         0       5       0       0       0
  8964 ;;      Temps:          0       1       0       0       0
  8965 ;;      Totals:         0      12       0       0       0
  8966 ;;Total ram usage:       12 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    1
  8969 ;; This function calls:
  8970 ;;		i2___awmod
  8971 ;;		i2_memcpy
  8972 ;; This function is called by:
  8973 ;;		_ToMainHigh_sendmsg
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text52
  8978  00100A                     __ptext52:
  8979                           	opt stack 0
  8980  00100A                     i2_send_msg:
  8981                           	opt stack 17
  8982                           
  8983                           ;messages.c: 25: unsigned char slot;
  8984                           ;messages.c: 27: msg *qmsg;
  8985                           ;messages.c: 28: size_t tlength = length;
  8986                           
  8987                           ;incstack = 0
  8988  00100A  0100               	movlb	0	; () banked
  8989  00100C  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8990  001010  0100               	movlb	0	; () banked
  8991  001012  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8995  001014  0100               	movlb	0	; () banked
  8996  001016  EE20 F055          	lfsr	2,85
  8997  00101A  0100               	movlb	0	; () banked
  8998  00101C  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8999  00101E  26D9               	addwf	fsr2l,f,c
  9000  001020  0100               	movlb	0	; () banked
  9001  001022  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9002  001024  22DA               	addwfc	fsr2h,f,c
  9003  001026  50DF               	movf	indf2,w,c
  9004  001028  0100               	movlb	0	; () banked
  9005  00102A  6F93               	movwf	i2send_msg@slot& (0+255),b
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9009  00102C  0100               	movlb	0	; () banked
  9010  00102E  5193               	movf	i2send_msg@slot& (0+255),w,b
  9011  001030  0D11               	mullw	17
  9012  001032  50F3               	movf	prodl,w,c
  9013  001034  0100               	movlb	0	; () banked
  9014  001036  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  9015  001038  0100               	movlb	0	; () banked
  9016  00103A  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  9017  00103C  50F4               	movf	prodh,w,c
  9018  00103E  0100               	movlb	0	; () banked
  9019  001040  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9020  001042  0100               	movlb	0	; () banked
  9021  001044  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;messages.c: 41: if (qmsg->full != 0) {
  9025  001046  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9026  00104A  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9027  00104E  50DF               	movf	indf2,w,c
  9028  001050  B4D8               	btfsc	status,2,c
  9029  001052  D002               	goto	i2l3598
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;messages.c: 42: return (-1);
  9033  001054  0EFF               	movlw	255
  9034  001056  0012               	return	
  9035  001058                     i2l3598:
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;messages.c: 43: }
  9039                           ;messages.c: 46: qmsg->length = length;
  9040  001058  0100               	movlb	0	; () banked
  9041  00105A  EE20 F001          	lfsr	2,1
  9042  00105E  0100               	movlb	0	; () banked
  9043  001060  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9044  001062  26D9               	addwf	fsr2l,f,c
  9045  001064  0100               	movlb	0	; () banked
  9046  001066  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9047  001068  22DA               	addwfc	fsr2h,f,c
  9048  00106A  0100               	movlb	0	; () banked
  9049  00106C  C08C  FFDF         	movff	i2send_msg@length,indf2
  9050                           
  9051                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9052  001070  0100               	movlb	0	; () banked
  9053  001072  EE20 F002          	lfsr	2,2
  9054  001076  0100               	movlb	0	; () banked
  9055  001078  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9056  00107A  26D9               	addwf	fsr2l,f,c
  9057  00107C  0100               	movlb	0	; () banked
  9058  00107E  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9059  001080  22DA               	addwfc	fsr2h,f,c
  9060  001082  0100               	movlb	0	; () banked
  9061  001084  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9065  001088  0E03               	movlw	3
  9066  00108A  0100               	movlb	0	; () banked
  9067  00108C  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  9068  00108E  0100               	movlb	0	; () banked
  9069  001090  6F80               	movwf	i2memcpy@d1& (0+255),b
  9070  001092  0E00               	movlw	0
  9071  001094  0100               	movlb	0	; () banked
  9072  001096  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9073  001098  0100               	movlb	0	; () banked
  9074  00109A  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  9075  00109C  0100               	movlb	0	; () banked
  9076  00109E  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9077  0010A2  0100               	movlb	0	; () banked
  9078  0010A4  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  9079  0010A8  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  9080  0010AC  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9081  0010B0  ECF7  F00D         	call	i2_memcpy	;wreg free
  9082                           
  9083                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  9084  0010B4  0100               	movlb	0	; () banked
  9085  0010B6  EE20 F055          	lfsr	2,85
  9086  0010BA  0100               	movlb	0	; () banked
  9087  0010BC  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9088  0010BE  26D9               	addwf	fsr2l,f,c
  9089  0010C0  0100               	movlb	0	; () banked
  9090  0010C2  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9091  0010C4  22DA               	addwfc	fsr2h,f,c
  9092  0010C6  0100               	movlb	0	; () banked
  9093  0010C8  EE10 F055          	lfsr	1,85
  9094  0010CC  0100               	movlb	0	; () banked
  9095  0010CE  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9096  0010D0  26E1               	addwf	fsr1l,f,c
  9097  0010D2  0100               	movlb	0	; () banked
  9098  0010D4  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9099  0010D6  22E2               	addwfc	fsr1h,f,c
  9100  0010D8  50E7               	movf	indf1,w,c
  9101  0010DA  0100               	movlb	0	; () banked
  9102  0010DC  6F90               	movwf	??i2_send_msg& (0+255),b
  9103  0010DE  0E01               	movlw	1
  9104  0010E0  0100               	movlb	0	; () banked
  9105  0010E2  2590               	addwf	??i2_send_msg& (0+255),w,b
  9106  0010E4  0100               	movlb	0	; () banked
  9107  0010E6  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9108  0010E8  0100               	movlb	0	; () banked
  9109  0010EA  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9110  0010EC  0E00               	movlw	0
  9111  0010EE  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9112  0010F0  0E00               	movlw	0
  9113  0010F2  0100               	movlb	0	; () banked
  9114  0010F4  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9115  0010F6  0E05               	movlw	5
  9116  0010F8  0100               	movlb	0	; () banked
  9117  0010FA  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9118  0010FC  ECB9  F00A         	call	i2___awmod	;wreg free
  9119  001100  0100               	movlb	0	; () banked
  9120  001102  5180               	movf	?i2___awmod& (0+255),w,b
  9121  001104  6EDF               	movwf	indf2,c
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;messages.c: 59: qmsg->full = 1;
  9125  001106  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9126  00110A  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9127  00110E  0E01               	movlw	1
  9128  001110  6EDF               	movwf	indf2,c
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;messages.c: 60: return (1);
  9132  001112  0E01               	movlw	1
  9133  001114  0012               	return	
  9134  001116                     __end_ofi2_send_msg:
  9135                           	opt stack 0
  9136                           pclatu	equ	0xFFB
  9137                           pclath	equ	0xFFA
  9138                           tblptru	equ	0xFF8
  9139                           tblptrh	equ	0xFF7
  9140                           tblptrl	equ	0xFF6
  9141                           tablat	equ	0xFF5
  9142                           prodh	equ	0xFF4
  9143                           prodl	equ	0xFF3
  9144                           intcon	equ	0xFF2
  9145                           postinc0	equ	0xFEE
  9146                           fsr0h	equ	0xFEA
  9147                           fsr0l	equ	0xFE9
  9148                           wreg	equ	0xFE8
  9149                           indf1	equ	0xFE7
  9150                           fsr1h	equ	0xFE2
  9151                           fsr1l	equ	0xFE1
  9152                           bsr	equ	0xFE0
  9153                           indf2	equ	0xFDF
  9154                           postinc2	equ	0xFDE
  9155                           postdec2	equ	0xFDD
  9156                           fsr2h	equ	0xFDA
  9157                           fsr2l	equ	0xFD9
  9158                           status	equ	0xFD8
  9159                           
  9160 ;; *************** function _FromMainHigh_recvmsg *****************
  9161 ;; Defined at:
  9162 ;;		line 183 in file "../src/messages.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  maxlength       1    wreg     unsigned char 
  9165 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  9166 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  9167 ;;  data            2   26[BANK0 ] PTR void 
  9168 ;;		 -> NULL(0), timer0_int_handler@val(2), main@ic(38), 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  maxlength       1   28[BANK0 ] unsigned char 
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      char 
  9173 ;; Registers used:
  9174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9180 ;;      Params:         0       4       0       0       0
  9181 ;;      Locals:         0       1       0       0       0
  9182 ;;      Temps:          0       0       0       0       0
  9183 ;;      Totals:         0       5       0       0       0
  9184 ;;Total ram usage:        5 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    2
  9187 ;; This function calls:
  9188 ;;		i2_recv_msg
  9189 ;; This function is called by:
  9190 ;;		_i2c_int_handler
  9191 ;;		_timer0_int_handler
  9192 ;;		_retrieve_sensor_values
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           	psect	text53
  9197  001D28                     __ptext53:
  9198                           	opt stack 0
  9199  001D28                     _FromMainHigh_recvmsg:
  9200                           	opt stack 17
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;incstack = 0
  9204                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  9205  001D28  0100               	movlb	0	; () banked
  9206  001D2A  6F9C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  9210  001D2C  0103               	movlb	3	; () banked
  9211  001D2E  0E03               	movlw	high _FromMainHigh_MQ
  9212  001D30  0100               	movlb	0	; () banked
  9213  001D32  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  9214  001D34  0103               	movlb	3	; () banked
  9215  001D36  0E00               	movlw	low _FromMainHigh_MQ
  9216  001D38  0100               	movlb	0	; () banked
  9217  001D3A  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  9218  001D3C  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  9219  001D40  0100               	movlb	0	; () banked
  9220  001D42  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  9221  001D46  0100               	movlb	0	; () banked
  9222  001D48  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  9223  001D4C  0100               	movlb	0	; () banked
  9224  001D4E  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  9225  001D52  0100               	movlb	0	; () banked
  9226  001D54  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  9227  001D58  ECDE  F006         	call	i2_recv_msg	;wreg free
  9228  001D5C  0012               	return	
  9229  001D5E                     __end_of_FromMainHigh_recvmsg:
  9230                           	opt stack 0
  9231                           pclatu	equ	0xFFB
  9232                           pclath	equ	0xFFA
  9233                           tblptru	equ	0xFF8
  9234                           tblptrh	equ	0xFF7
  9235                           tblptrl	equ	0xFF6
  9236                           tablat	equ	0xFF5
  9237                           prodh	equ	0xFF4
  9238                           prodl	equ	0xFF3
  9239                           intcon	equ	0xFF2
  9240                           postinc0	equ	0xFEE
  9241                           fsr0h	equ	0xFEA
  9242                           fsr0l	equ	0xFE9
  9243                           wreg	equ	0xFE8
  9244                           indf1	equ	0xFE7
  9245                           fsr1h	equ	0xFE2
  9246                           fsr1l	equ	0xFE1
  9247                           bsr	equ	0xFE0
  9248                           indf2	equ	0xFDF
  9249                           postinc2	equ	0xFDE
  9250                           postdec2	equ	0xFDD
  9251                           fsr2h	equ	0xFDA
  9252                           fsr2l	equ	0xFD9
  9253                           status	equ	0xFD8
  9254                           
  9255 ;; *************** function i2_recv_msg *****************
  9256 ;; Defined at:
  9257 ;;		line 63 in file "../src/messages.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9260 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9261 ;;  maxlength       1   12[BANK0 ] unsigned char 
  9262 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  9263 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  9264 ;;		 -> main@msgtype(1), 
  9265 ;;  data            2   15[BANK0 ] PTR void 
  9266 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), main@msgbuffer(15), 
  9267 ;;		 -> main@ic(38), 
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  9270 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9271 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9272 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  9273 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      char 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9283 ;;      Params:         0       7       0       0       0
  9284 ;;      Locals:         0       5       0       0       0
  9285 ;;      Temps:          0       2       0       0       0
  9286 ;;      Totals:         0      14       0       0       0
  9287 ;;Total ram usage:       14 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:    1
  9290 ;; This function calls:
  9291 ;;		i2___awmod
  9292 ;;		i2_memcpy
  9293 ;; This function is called by:
  9294 ;;		_FromMainHigh_recvmsg
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text54
  9299  000DBC                     __ptext54:
  9300                           	opt stack 0
  9301  000DBC                     i2_recv_msg:
  9302                           	opt stack 17
  9303                           
  9304                           ;messages.c: 64: unsigned char slot;
  9305                           ;messages.c: 68: msg *qmsg;
  9306                           ;messages.c: 69: size_t tlength;
  9307                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9308                           
  9309                           ;incstack = 0
  9310  000DBC  0100               	movlb	0	; () banked
  9311  000DBE  EE20 F056          	lfsr	2,86
  9312  000DC2  0100               	movlb	0	; () banked
  9313  000DC4  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9314  000DC6  26D9               	addwf	fsr2l,f,c
  9315  000DC8  0100               	movlb	0	; () banked
  9316  000DCA  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9317  000DCC  22DA               	addwfc	fsr2h,f,c
  9318  000DCE  50DF               	movf	indf2,w,c
  9319  000DD0  0100               	movlb	0	; () banked
  9320  000DD2  6F93               	movwf	i2recv_msg@slot& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9324  000DD4  0100               	movlb	0	; () banked
  9325  000DD6  5193               	movf	i2recv_msg@slot& (0+255),w,b
  9326  000DD8  0D11               	mullw	17
  9327  000DDA  50F3               	movf	prodl,w,c
  9328  000DDC  0100               	movlb	0	; () banked
  9329  000DDE  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  9330  000DE0  0100               	movlb	0	; () banked
  9331  000DE2  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  9332  000DE4  50F4               	movf	prodh,w,c
  9333  000DE6  0100               	movlb	0	; () banked
  9334  000DE8  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  9335  000DEA  0100               	movlb	0	; () banked
  9336  000DEC  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;messages.c: 74: if (qmsg->full == 1) {
  9340  000DEE  0E01               	movlw	1
  9341  000DF0  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9342  000DF4  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9343  000DF8  62DF               	cpfseq	indf2,c
  9344  000DFA  D07D               	goto	i2l3670
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9348  000DFC  0100               	movlb	0	; () banked
  9349  000DFE  EE20 F001          	lfsr	2,1
  9350  000E02  0100               	movlb	0	; () banked
  9351  000E04  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9352  000E06  26D9               	addwf	fsr2l,f,c
  9353  000E08  0100               	movlb	0	; () banked
  9354  000E0A  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9355  000E0C  22DA               	addwfc	fsr2h,f,c
  9356  000E0E  50DF               	movf	indf2,w,c
  9357  000E10  0100               	movlb	0	; () banked
  9358  000E12  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  9359  000E14  B0D8               	btfsc	status,0,c
  9360  000E16  D002               	goto	i2l3654
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;messages.c: 77: return (-3);
  9364  000E18  0EFD               	movlw	253
  9365  000E1A  0012               	return	
  9366  000E1C                     i2l3654:
  9367                           
  9368                           ; BSR set to: 0
  9369                           ;messages.c: 78: }
  9370                           ;messages.c: 80: tlength = qmsg->length;
  9371  000E1C  0100               	movlb	0	; () banked
  9372  000E1E  EE20 F001          	lfsr	2,1
  9373  000E22  0100               	movlb	0	; () banked
  9374  000E24  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9375  000E26  26D9               	addwf	fsr2l,f,c
  9376  000E28  0100               	movlb	0	; () banked
  9377  000E2A  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9378  000E2C  22DA               	addwfc	fsr2h,f,c
  9379  000E2E  50DF               	movf	indf2,w,c
  9380  000E30  0100               	movlb	0	; () banked
  9381  000E32  6F91               	movwf	??i2_recv_msg& (0+255),b
  9382  000E34  0100               	movlb	0	; () banked
  9383  000E36  5191               	movf	??i2_recv_msg& (0+255),w,b
  9384  000E38  0100               	movlb	0	; () banked
  9385  000E3A  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  9386  000E3C  0100               	movlb	0	; () banked
  9387  000E3E  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9391  000E40  0100               	movlb	0	; () banked
  9392  000E42  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  9393  000E46  0100               	movlb	0	; () banked
  9394  000E48  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  9395  000E4C  0E03               	movlw	3
  9396  000E4E  0100               	movlb	0	; () banked
  9397  000E50  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  9398  000E52  0100               	movlb	0	; () banked
  9399  000E54  6F91               	movwf	??i2_recv_msg& (0+255),b
  9400  000E56  0E00               	movlw	0
  9401  000E58  0100               	movlb	0	; () banked
  9402  000E5A  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  9403  000E5C  0100               	movlb	0	; () banked
  9404  000E5E  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  9405  000E60  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  9406  000E64  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  9407  000E68  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  9408  000E6C  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  9409  000E70  ECF7  F00D         	call	i2_memcpy	;wreg free
  9410                           
  9411                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  9412  000E74  0100               	movlb	0	; () banked
  9413  000E76  EE20 F056          	lfsr	2,86
  9414  000E7A  0100               	movlb	0	; () banked
  9415  000E7C  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9416  000E7E  26D9               	addwf	fsr2l,f,c
  9417  000E80  0100               	movlb	0	; () banked
  9418  000E82  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9419  000E84  22DA               	addwfc	fsr2h,f,c
  9420  000E86  0100               	movlb	0	; () banked
  9421  000E88  EE10 F056          	lfsr	1,86
  9422  000E8C  0100               	movlb	0	; () banked
  9423  000E8E  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9424  000E90  26E1               	addwf	fsr1l,f,c
  9425  000E92  0100               	movlb	0	; () banked
  9426  000E94  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9427  000E96  22E2               	addwfc	fsr1h,f,c
  9428  000E98  50E7               	movf	indf1,w,c
  9429  000E9A  0100               	movlb	0	; () banked
  9430  000E9C  6F91               	movwf	??i2_recv_msg& (0+255),b
  9431  000E9E  0E01               	movlw	1
  9432  000EA0  0100               	movlb	0	; () banked
  9433  000EA2  2591               	addwf	??i2_recv_msg& (0+255),w,b
  9434  000EA4  0100               	movlb	0	; () banked
  9435  000EA6  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9436  000EA8  0100               	movlb	0	; () banked
  9437  000EAA  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9438  000EAC  0E00               	movlw	0
  9439  000EAE  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9440  000EB0  0E00               	movlw	0
  9441  000EB2  0100               	movlb	0	; () banked
  9442  000EB4  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9443  000EB6  0E05               	movlw	5
  9444  000EB8  0100               	movlb	0	; () banked
  9445  000EBA  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9446  000EBC  ECB9  F00A         	call	i2___awmod	;wreg free
  9447  000EC0  0100               	movlb	0	; () banked
  9448  000EC2  5180               	movf	?i2___awmod& (0+255),w,b
  9449  000EC4  6EDF               	movwf	indf2,c
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9453  000EC6  0100               	movlb	0	; () banked
  9454  000EC8  EE20 F002          	lfsr	2,2
  9455  000ECC  0100               	movlb	0	; () banked
  9456  000ECE  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9457  000ED0  26D9               	addwf	fsr2l,f,c
  9458  000ED2  0100               	movlb	0	; () banked
  9459  000ED4  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9460  000ED6  22DA               	addwfc	fsr2h,f,c
  9461  000ED8  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9462  000EDC  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9463  000EE0  CFDF FFE7          	movff	indf2,indf1
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;messages.c: 91: qmsg->full = 0;
  9467  000EE4  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9468  000EE8  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9469  000EEC  0E00               	movlw	0
  9470  000EEE  6EDF               	movwf	indf2,c
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;messages.c: 92: return (tlength);
  9474  000EF0  0100               	movlb	0	; () banked
  9475  000EF2  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  9476  000EF4  0012               	return	
  9477  000EF6                     i2l3670:
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;messages.c: 94: return (-4);
  9481  000EF6  0EFC               	movlw	252
  9482  000EF8  0012               	return	
  9483  000EFA                     __end_ofi2_recv_msg:
  9484                           	opt stack 0
  9485                           pclatu	equ	0xFFB
  9486                           pclath	equ	0xFFA
  9487                           tblptru	equ	0xFF8
  9488                           tblptrh	equ	0xFF7
  9489                           tblptrl	equ	0xFF6
  9490                           tablat	equ	0xFF5
  9491                           prodh	equ	0xFF4
  9492                           prodl	equ	0xFF3
  9493                           intcon	equ	0xFF2
  9494                           postinc0	equ	0xFEE
  9495                           fsr0h	equ	0xFEA
  9496                           fsr0l	equ	0xFE9
  9497                           wreg	equ	0xFE8
  9498                           indf1	equ	0xFE7
  9499                           fsr1h	equ	0xFE2
  9500                           fsr1l	equ	0xFE1
  9501                           bsr	equ	0xFE0
  9502                           indf2	equ	0xFDF
  9503                           postinc2	equ	0xFDE
  9504                           postdec2	equ	0xFDD
  9505                           fsr2h	equ	0xFDA
  9506                           fsr2l	equ	0xFD9
  9507                           status	equ	0xFD8
  9508                           
  9509 ;; *************** function i2_memcpy *****************
  9510 ;; Defined at:
  9511 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  d1              2    0[BANK0 ] PTR void 
  9514 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9515 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  9516 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9517 ;;		 -> main@ic(38), 
  9518 ;;  s1              2    2[BANK0 ] PTR const void 
  9519 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9520 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9521 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  9522 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  9523 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  9524 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  9525 ;;		 -> main@ic(38), 
  9526 ;;  n               2    4[BANK0 ] unsigned int 
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9529 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9530 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9531 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_hand
      +ler@bad_checksum_id(1), 
  9532 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  9533 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  9534 ;;		 -> ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), main@t1thread_data(2), 
  9535 ;;		 -> main@ic(38), 
  9536 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9537 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9538 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(14), FromMainHigh_MQ(87), 
  9539 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9540 ;;		 -> main@ic(38), 
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  2    0[BANK0 ] PTR void 
  9543 ;; Registers used:
  9544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9550 ;;      Params:         0       6       0       0       0
  9551 ;;      Locals:         0       4       0       0       0
  9552 ;;      Temps:          0       0       0       0       0
  9553 ;;      Totals:         0      10       0       0       0
  9554 ;;Total ram usage:       10 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; This function calls:
  9557 ;;		Nothing
  9558 ;; This function is called by:
  9559 ;;		i2_send_msg
  9560 ;;		i2_recv_msg
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text55
  9565  001BEE                     __ptext55:
  9566                           	opt stack 0
  9567  001BEE                     i2_memcpy:
  9568                           	opt stack 17
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;incstack = 0
  9572  001BEE  0100               	movlb	0	; () banked
  9573  001BF0  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9574  001BF4  0100               	movlb	0	; () banked
  9575  001BF6  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9576  001BFA  0100               	movlb	0	; () banked
  9577  001BFC  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9578  001C00  0100               	movlb	0	; () banked
  9579  001C02  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9580  001C06  D010               	goto	i2l2422
  9581  001C08                     i2l2416:
  9582                           
  9583                           ; BSR set to: 0
  9584  001C08  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9585  001C0C  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9586  001C10  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9587  001C14  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9588  001C18  CFDF FFE7          	movff	indf2,indf1
  9589                           
  9590                           ; BSR set to: 0
  9591  001C1C  0100               	movlb	0	; () banked
  9592  001C1E  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9593  001C20  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9594                           
  9595                           ; BSR set to: 0
  9596  001C22  0100               	movlb	0	; () banked
  9597  001C24  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9598  001C26  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9599  001C28                     i2l2422:
  9600                           
  9601                           ; BSR set to: 0
  9602  001C28  0100               	movlb	0	; () banked
  9603  001C2A  0784               	decf	i2memcpy@n& (0+255),f,b
  9604  001C2C  A0D8               	btfss	status,0,c
  9605  001C2E  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9606  001C30  0100               	movlb	0	; () banked
  9607  001C32  2984               	incf	i2memcpy@n& (0+255),w,b
  9608  001C34  B4D8               	btfsc	status,2,c
  9609  001C36  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9610  001C38  B4D8               	btfsc	status,2,c
  9611                           
  9612                           ; BSR set to: 0
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;	Return value of i2_memcpy is never used
  9616  001C3A  0012               	return	
  9617  001C3C  D7E5               	goto	i2l2416
  9618  001C3E                     __end_ofi2_memcpy:
  9619                           	opt stack 0
  9620                           pclatu	equ	0xFFB
  9621                           pclath	equ	0xFFA
  9622                           tblptru	equ	0xFF8
  9623                           tblptrh	equ	0xFF7
  9624                           tblptrl	equ	0xFF6
  9625                           tablat	equ	0xFF5
  9626                           prodh	equ	0xFF4
  9627                           prodl	equ	0xFF3
  9628                           intcon	equ	0xFF2
  9629                           postinc0	equ	0xFEE
  9630                           fsr0h	equ	0xFEA
  9631                           fsr0l	equ	0xFE9
  9632                           wreg	equ	0xFE8
  9633                           indf1	equ	0xFE7
  9634                           fsr1h	equ	0xFE2
  9635                           fsr1l	equ	0xFE1
  9636                           bsr	equ	0xFE0
  9637                           indf2	equ	0xFDF
  9638                           postinc2	equ	0xFDE
  9639                           postdec2	equ	0xFDD
  9640                           fsr2h	equ	0xFDA
  9641                           fsr2l	equ	0xFD9
  9642                           status	equ	0xFD8
  9643                           
  9644 ;; *************** function i2___awmod *****************
  9645 ;; Defined at:
  9646 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  dividend        2    0[BANK0 ] int 
  9649 ;;  divisor         2    2[BANK0 ] int 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9652 ;;  __awmod         1    4[BANK0 ] unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  2    0[BANK0 ] int 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0, prodl
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9662 ;;      Params:         0       4       0       0       0
  9663 ;;      Locals:         0       2       0       0       0
  9664 ;;      Temps:          0       0       0       0       0
  9665 ;;      Totals:         0       6       0       0       0
  9666 ;;Total ram usage:        6 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		i2_send_msg
  9672 ;;		i2_recv_msg
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           	psect	text56
  9677  001572                     __ptext56:
  9678                           	opt stack 0
  9679  001572                     i2___awmod:
  9680                           	opt stack 17
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;incstack = 0
  9684  001572  0E00               	movlw	0
  9685  001574  0100               	movlb	0	; () banked
  9686  001576  6F85               	movwf	i2___awmod@sign& (0+255),b
  9687                           
  9688                           ; BSR set to: 0
  9689  001578  0100               	movlb	0	; () banked
  9690  00157A  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9691  00157C  0A80               	xorlw	128
  9692  00157E  6EF3               	movwf	prodl,c
  9693  001580  0E80               	movlw	128
  9694  001582  5CF3               	subwf	prodl,w,c
  9695  001584  0E00               	movlw	0
  9696  001586  B4D8               	btfsc	status,2,c
  9697  001588  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9698  00158A  B0D8               	btfsc	status,0,c
  9699  00158C  D009               	goto	i2l2468
  9700                           
  9701                           ; BSR set to: 0
  9702  00158E  0100               	movlb	0	; () banked
  9703  001590  6D80               	negf	i2___awmod@dividend& (0+255),b
  9704  001592  0100               	movlb	0	; () banked
  9705  001594  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9706  001596  B0D8               	btfsc	status,0,c
  9707  001598  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9708                           
  9709                           ; BSR set to: 0
  9710  00159A  0E01               	movlw	1
  9711  00159C  0100               	movlb	0	; () banked
  9712  00159E  6F85               	movwf	i2___awmod@sign& (0+255),b
  9713  0015A0                     i2l2468:
  9714                           
  9715                           ; BSR set to: 0
  9716  0015A0  0100               	movlb	0	; () banked
  9717  0015A2  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9718  0015A4  0A80               	xorlw	128
  9719  0015A6  6EF3               	movwf	prodl,c
  9720  0015A8  0E80               	movlw	128
  9721  0015AA  5CF3               	subwf	prodl,w,c
  9722  0015AC  0E00               	movlw	0
  9723  0015AE  B4D8               	btfsc	status,2,c
  9724  0015B0  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9725  0015B2  B0D8               	btfsc	status,0,c
  9726  0015B4  D006               	goto	i2l2472
  9727                           
  9728                           ; BSR set to: 0
  9729  0015B6  0100               	movlb	0	; () banked
  9730  0015B8  6D82               	negf	i2___awmod@divisor& (0+255),b
  9731  0015BA  0100               	movlb	0	; () banked
  9732  0015BC  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9733  0015BE  B0D8               	btfsc	status,0,c
  9734  0015C0  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9735  0015C2                     i2l2472:
  9736                           
  9737                           ; BSR set to: 0
  9738  0015C2  0100               	movlb	0	; () banked
  9739  0015C4  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9740  0015C6  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9741  0015C8  B4D8               	btfsc	status,2,c
  9742  0015CA  D026               	goto	i2l2488
  9743                           
  9744                           ; BSR set to: 0
  9745  0015CC  0E01               	movlw	1
  9746  0015CE  0100               	movlb	0	; () banked
  9747  0015D0  6F84               	movwf	i2___awmod@counter& (0+255),b
  9748  0015D2  D006               	goto	i2l2478
  9749  0015D4                     i2l2476:
  9750                           
  9751                           ; BSR set to: 0
  9752  0015D4  0100               	movlb	0	; () banked
  9753  0015D6  90D8               	bcf	status,0,c
  9754  0015D8  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9755  0015DA  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9756  0015DC  0100               	movlb	0	; () banked
  9757  0015DE  2B84               	incf	i2___awmod@counter& (0+255),f,b
  9758  0015E0                     i2l2478:
  9759                           
  9760                           ; BSR set to: 0
  9761  0015E0  0100               	movlb	0	; () banked
  9762  0015E2  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9763  0015E4  D7F7               	goto	i2l2476
  9764  0015E6                     i2l2480:
  9765                           
  9766                           ; BSR set to: 0
  9767  0015E6  0100               	movlb	0	; () banked
  9768  0015E8  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9769  0015EA  0100               	movlb	0	; () banked
  9770  0015EC  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9771  0015EE  0100               	movlb	0	; () banked
  9772  0015F0  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9773  0015F2  0100               	movlb	0	; () banked
  9774  0015F4  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9775  0015F6  A0D8               	btfss	status,0,c
  9776  0015F8  D008               	goto	i2l2484
  9777                           
  9778                           ; BSR set to: 0
  9779  0015FA  0100               	movlb	0	; () banked
  9780  0015FC  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9781  0015FE  0100               	movlb	0	; () banked
  9782  001600  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9783  001602  0100               	movlb	0	; () banked
  9784  001604  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9785  001606  0100               	movlb	0	; () banked
  9786  001608  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9787  00160A                     i2l2484:
  9788                           
  9789                           ; BSR set to: 0
  9790  00160A  0100               	movlb	0	; () banked
  9791  00160C  90D8               	bcf	status,0,c
  9792  00160E  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9793  001610  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796  001612  0100               	movlb	0	; () banked
  9797  001614  2F84               	decfsz	i2___awmod@counter& (0+255),f,b
  9798  001616  D7E7               	goto	i2l2480
  9799  001618                     i2l2488:
  9800                           
  9801                           ; BSR set to: 0
  9802  001618  0100               	movlb	0	; () banked
  9803  00161A  5185               	movf	i2___awmod@sign& (0+255),w,b
  9804  00161C  B4D8               	btfsc	status,2,c
  9805  00161E  D006               	goto	i2l2492
  9806                           
  9807                           ; BSR set to: 0
  9808  001620  0100               	movlb	0	; () banked
  9809  001622  6D80               	negf	i2___awmod@dividend& (0+255),b
  9810  001624  0100               	movlb	0	; () banked
  9811  001626  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9812  001628  B0D8               	btfsc	status,0,c
  9813  00162A  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9814  00162C                     i2l2492:
  9815                           
  9816                           ; BSR set to: 0
  9817  00162C  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9818  001630  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9819  001634  0012               	return	
  9820  001636                     __end_ofi2___awmod:
  9821                           	opt stack 0
  9822                           pclatu	equ	0xFFB
  9823                           pclath	equ	0xFFA
  9824                           tblptru	equ	0xFF8
  9825                           tblptrh	equ	0xFF7
  9826                           tblptrl	equ	0xFF6
  9827                           tablat	equ	0xFF5
  9828                           prodh	equ	0xFF4
  9829                           prodl	equ	0xFF3
  9830                           intcon	equ	0xFF2
  9831                           postinc0	equ	0xFEE
  9832                           fsr0h	equ	0xFEA
  9833                           fsr0l	equ	0xFE9
  9834                           wreg	equ	0xFE8
  9835                           indf1	equ	0xFE7
  9836                           fsr1h	equ	0xFE2
  9837                           fsr1l	equ	0xFE1
  9838                           bsr	equ	0xFE0
  9839                           indf2	equ	0xFDF
  9840                           postinc2	equ	0xFDE
  9841                           postdec2	equ	0xFDD
  9842                           fsr2h	equ	0xFDA
  9843                           fsr2l	equ	0xFD9
  9844                           status	equ	0xFD8
  9845                           
  9846 ;; *************** function _SleepIfOkay *****************
  9847 ;; Defined at:
  9848 ;;		line 226 in file "../src/messages.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;		None
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;		None
  9853 ;; Return value:  Size  Location     Type
  9854 ;;		None               void
  9855 ;; Registers used:
  9856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9862 ;;      Params:         0       0       0       0       0
  9863 ;;      Locals:         0       0       0       0       0
  9864 ;;      Temps:          0       0       0       0       0
  9865 ;;      Totals:         0       0       0       0       0
  9866 ;;Total ram usage:        0 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:    2
  9869 ;; This function calls:
  9870 ;;		_check_msg
  9871 ;;		_enter_sleep_mode
  9872 ;;		_in_high_int
  9873 ;;		_in_low_int
  9874 ;; This function is called by:
  9875 ;;		_InterruptHandlerHigh
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           	psect	text57
  9880  001A96                     __ptext57:
  9881                           	opt stack 0
  9882  001A96                     _SleepIfOkay:
  9883                           	opt stack 18
  9884                           
  9885                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;incstack = 0
  9889  001A96  0100               	movlb	0	; () banked
  9890  001A98  67C7               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9891  001A9A  D001               	goto	i2l3006
  9892  001A9C  0012               	return	
  9893  001A9E                     i2l3006:
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;messages.c: 230: }
  9897                           ;messages.c: 233: if (in_low_int()) {
  9898  001A9E  EC3F  F00E         	call	_in_low_int	;wreg free
  9899  001AA2  0100               	movlb	0	; () banked
  9900  001AA4  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  9901  001AA6  0100               	movlb	0	; () banked
  9902  001AA8  1182               	iorwf	?_in_low_int& (0+255),w,b
  9903  001AAA  A4D8               	btfss	status,2,c
  9904  001AAC  0012               	return	
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;messages.c: 235: }
  9908                           ;messages.c: 238: if (!in_high_int()) {
  9909                           
  9910                           ; BSR set to: 0
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;messages.c: 234: return;
  9914  001AAE  ECCD  F00F         	call	_in_high_int	;wreg free
  9915  001AB2  0100               	movlb	0	; () banked
  9916  001AB4  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9917  001AB6  0100               	movlb	0	; () banked
  9918  001AB8  1180               	iorwf	?_in_high_int& (0+255),w,b
  9919  001ABA  B4D8               	btfsc	status,2,c
  9920  001ABC  0012               	return	
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;messages.c: 240: }
  9924                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9925                           
  9926                           ; BSR set to: 0
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;messages.c: 239: return;
  9930  001ABE  0102               	movlb	2	; () banked
  9931  001AC0  0E02               	movlw	high _ToMainHigh_MQ
  9932  001AC2  0100               	movlb	0	; () banked
  9933  001AC4  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9934  001AC6  0102               	movlb	2	; () banked
  9935  001AC8  0E57               	movlw	low _ToMainHigh_MQ
  9936  001ACA  0100               	movlb	0	; () banked
  9937  001ACC  6F80               	movwf	check_msg@qptr& (0+255),b
  9938  001ACE  ECC8  F00E         	call	_check_msg	;wreg free
  9939  001AD2  0900               	iorlw	0
  9940  001AD4  A4D8               	btfss	status,2,c
  9941  001AD6  0012               	return	
  9942                           
  9943                           ;messages.c: 247: }
  9944                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9945                           
  9946                           ;messages.c: 246: return;
  9947  001AD8  0101               	movlb	1	; () banked
  9948  001ADA  0E01               	movlw	high _ToMainLow_MQ
  9949  001ADC  0100               	movlb	0	; () banked
  9950  001ADE  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9951  001AE0  0101               	movlb	1	; () banked
  9952  001AE2  0E74               	movlw	low _ToMainLow_MQ
  9953  001AE4  0100               	movlb	0	; () banked
  9954  001AE6  6F80               	movwf	check_msg@qptr& (0+255),b
  9955  001AE8  ECC8  F00E         	call	_check_msg	;wreg free
  9956  001AEC  0900               	iorlw	0
  9957  001AEE  B4D8               	btfsc	status,2,c
  9958                           
  9959                           ;messages.c: 250: }
  9960                           ;messages.c: 251: enter_sleep_mode();
  9961                           
  9962                           ;messages.c: 249: return;
  9963  001AF0  EC05  F010         	call	_enter_sleep_mode	;wreg free
  9964  001AF4  0012               	return	
  9965  001AF6                     __end_of_SleepIfOkay:
  9966                           	opt stack 0
  9967                           pclatu	equ	0xFFB
  9968                           pclath	equ	0xFFA
  9969                           tblptru	equ	0xFF8
  9970                           tblptrh	equ	0xFF7
  9971                           tblptrl	equ	0xFF6
  9972                           tablat	equ	0xFF5
  9973                           prodh	equ	0xFF4
  9974                           prodl	equ	0xFF3
  9975                           intcon	equ	0xFF2
  9976                           postinc0	equ	0xFEE
  9977                           fsr0h	equ	0xFEA
  9978                           fsr0l	equ	0xFE9
  9979                           wreg	equ	0xFE8
  9980                           indf1	equ	0xFE7
  9981                           fsr1h	equ	0xFE2
  9982                           fsr1l	equ	0xFE1
  9983                           bsr	equ	0xFE0
  9984                           indf2	equ	0xFDF
  9985                           postinc2	equ	0xFDE
  9986                           postdec2	equ	0xFDD
  9987                           fsr2h	equ	0xFDA
  9988                           fsr2l	equ	0xFD9
  9989                           status	equ	0xFD8
  9990                           
  9991 ;; *************** function _in_low_int *****************
  9992 ;; Defined at:
  9993 ;;		line 33 in file "../src/interrupts.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;		None
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;		None
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  2    2[BANK0 ] int 
 10000 ;; Registers used:
 10001 ;;		wreg, status,2, status,0, cstack
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10007 ;;      Params:         0       2       0       0       0
 10008 ;;      Locals:         0       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0
 10010 ;;      Totals:         0       2       0       0       0
 10011 ;;Total ram usage:        2 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    1
 10014 ;; This function calls:
 10015 ;;		_in_high_int
 10016 ;; This function is called by:
 10017 ;;		_SleepIfOkay
 10018 ;;		_in_main
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text58
 10023  001C7E                     __ptext58:
 10024                           	opt stack 0
 10025  001C7E                     _in_low_int:
 10026                           	opt stack 18
 10027                           
 10028                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
 10029                           
 10030                           ;incstack = 0
 10031  001C7E  ACF2               	btfss	intcon,6,c	;volatile
 10032  001C80  D007               	goto	i2l2644
 10033                           
 10034                           ;interrupts.c: 35: return (0);
 10035  001C82  0E00               	movlw	0
 10036  001C84  0100               	movlb	0	; () banked
 10037  001C86  6F83               	movwf	(?_in_low_int+1)& (0+255),b
 10038  001C88  0E00               	movlw	0
 10039  001C8A  0100               	movlb	0	; () banked
 10040  001C8C  6F82               	movwf	?_in_low_int& (0+255),b
 10041  001C8E  0012               	return	
 10042  001C90                     i2l2644:
 10043  001C90  ECCD  F00F         	call	_in_high_int	;wreg free
 10044  001C94  0100               	movlb	0	; () banked
 10045  001C96  5181               	movf	(?_in_high_int+1)& (0+255),w,b
 10046  001C98  0100               	movlb	0	; () banked
 10047  001C9A  1180               	iorwf	?_in_high_int& (0+255),w,b
 10048  001C9C  B4D8               	btfsc	status,2,c
 10049  001C9E  D007               	goto	i2l2652
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;interrupts.c: 37: return (0);
 10053  001CA0  0E00               	movlw	0
 10054  001CA2  0100               	movlb	0	; () banked
 10055  001CA4  6F83               	movwf	(?_in_low_int+1)& (0+255),b
 10056  001CA6  0E00               	movlw	0
 10057  001CA8  0100               	movlb	0	; () banked
 10058  001CAA  6F82               	movwf	?_in_low_int& (0+255),b
 10059  001CAC  0012               	return	
 10060  001CAE                     i2l2652:
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;interrupts.c: 39: return (1);
 10064  001CAE  0E00               	movlw	0
 10065  001CB0  0100               	movlb	0	; () banked
 10066  001CB2  6F83               	movwf	(?_in_low_int+1)& (0+255),b
 10067  001CB4  0E01               	movlw	1
 10068  001CB6  0100               	movlb	0	; () banked
 10069  001CB8  6F82               	movwf	?_in_low_int& (0+255),b
 10070  001CBA  0012               	return	
 10071  001CBC                     __end_of_in_low_int:
 10072                           	opt stack 0
 10073                           pclatu	equ	0xFFB
 10074                           pclath	equ	0xFFA
 10075                           tblptru	equ	0xFF8
 10076                           tblptrh	equ	0xFF7
 10077                           tblptrl	equ	0xFF6
 10078                           tablat	equ	0xFF5
 10079                           prodh	equ	0xFF4
 10080                           prodl	equ	0xFF3
 10081                           intcon	equ	0xFF2
 10082                           postinc0	equ	0xFEE
 10083                           fsr0h	equ	0xFEA
 10084                           fsr0l	equ	0xFE9
 10085                           wreg	equ	0xFE8
 10086                           indf1	equ	0xFE7
 10087                           fsr1h	equ	0xFE2
 10088                           fsr1l	equ	0xFE1
 10089                           bsr	equ	0xFE0
 10090                           indf2	equ	0xFDF
 10091                           postinc2	equ	0xFDE
 10092                           postdec2	equ	0xFDD
 10093                           fsr2h	equ	0xFDA
 10094                           fsr2l	equ	0xFD9
 10095                           status	equ	0xFD8
 10096                           
 10097 ;; *************** function _in_high_int *****************
 10098 ;; Defined at:
 10099 ;;		line 25 in file "../src/interrupts.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;		None
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;		None
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  2    0[BANK0 ] int 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10113 ;;      Params:         0       2       0       0       0
 10114 ;;      Locals:         0       0       0       0       0
 10115 ;;      Temps:          0       0       0       0       0
 10116 ;;      Totals:         0       2       0       0       0
 10117 ;;Total ram usage:        2 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; This function calls:
 10120 ;;		Nothing
 10121 ;; This function is called by:
 10122 ;;		_in_low_int
 10123 ;;		_SleepIfOkay
 10124 ;;		_in_main
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           	psect	text59
 10129  001F9A                     __ptext59:
 10130                           	opt stack 0
 10131  001F9A                     _in_high_int:
 10132                           	opt stack 18
 10133                           
 10134                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;incstack = 0
 10138  001F9A  0E00               	movlw	0
 10139  001F9C  AEF2               	btfss	intcon,7,c	;volatile
 10140  001F9E  0E01               	movlw	1
 10141  001FA0  0100               	movlb	0	; () banked
 10142  001FA2  6F80               	movwf	?_in_high_int& (0+255),b
 10143  001FA4  0100               	movlb	0	; () banked
 10144  001FA6  6B81               	clrf	(?_in_high_int+1)& (0+255),b
 10145  001FA8  0012               	return	
 10146  001FAA                     __end_of_in_high_int:
 10147                           	opt stack 0
 10148                           pclatu	equ	0xFFB
 10149                           pclath	equ	0xFFA
 10150                           tblptru	equ	0xFF8
 10151                           tblptrh	equ	0xFF7
 10152                           tblptrl	equ	0xFF6
 10153                           tablat	equ	0xFF5
 10154                           prodh	equ	0xFF4
 10155                           prodl	equ	0xFF3
 10156                           intcon	equ	0xFF2
 10157                           postinc0	equ	0xFEE
 10158                           fsr0h	equ	0xFEA
 10159                           fsr0l	equ	0xFE9
 10160                           wreg	equ	0xFE8
 10161                           indf1	equ	0xFE7
 10162                           fsr1h	equ	0xFE2
 10163                           fsr1l	equ	0xFE1
 10164                           bsr	equ	0xFE0
 10165                           indf2	equ	0xFDF
 10166                           postinc2	equ	0xFDE
 10167                           postdec2	equ	0xFDD
 10168                           fsr2h	equ	0xFDA
 10169                           fsr2l	equ	0xFD9
 10170                           status	equ	0xFD8
 10171                           
 10172 ;; *************** function _enter_sleep_mode *****************
 10173 ;; Defined at:
 10174 ;;		line 202 in file "../src/messages.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;		None
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;		None               void
 10181 ;; Registers used:
 10182 ;;		None
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10188 ;;      Params:         0       0       0       0       0
 10189 ;;      Locals:         0       0       0       0       0
 10190 ;;      Temps:          0       0       0       0       0
 10191 ;;      Totals:         0       0       0       0       0
 10192 ;;Total ram usage:        0 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_SleepIfOkay
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text60
 10202  00200A                     __ptext60:
 10203                           	opt stack 0
 10204  00200A                     _enter_sleep_mode:
 10205                           	opt stack 19
 10206                           
 10207                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;incstack = 0
 10211  00200A  8ED3               	bsf	4051,7,c	;volatile
 10212  00200C  0003               	sleep		;# 
 10213  00200E  0012               	return	
 10214  002010                     __end_of_enter_sleep_mode:
 10215                           	opt stack 0
 10216                           pclatu	equ	0xFFB
 10217                           pclath	equ	0xFFA
 10218                           tblptru	equ	0xFF8
 10219                           tblptrh	equ	0xFF7
 10220                           tblptrl	equ	0xFF6
 10221                           tablat	equ	0xFF5
 10222                           prodh	equ	0xFF4
 10223                           prodl	equ	0xFF3
 10224                           intcon	equ	0xFF2
 10225                           postinc0	equ	0xFEE
 10226                           fsr0h	equ	0xFEA
 10227                           fsr0l	equ	0xFE9
 10228                           wreg	equ	0xFE8
 10229                           indf1	equ	0xFE7
 10230                           fsr1h	equ	0xFE2
 10231                           fsr1l	equ	0xFE1
 10232                           bsr	equ	0xFE0
 10233                           indf2	equ	0xFDF
 10234                           postinc2	equ	0xFDE
 10235                           postdec2	equ	0xFDD
 10236                           fsr2h	equ	0xFDA
 10237                           fsr2l	equ	0xFD9
 10238                           status	equ	0xFD8
 10239                           
 10240 ;; *************** function _check_msg *****************
 10241 ;; Defined at:
 10242 ;;		line 220 in file "../src/messages.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 10245 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      unsigned char 
 10250 ;; Registers used:
 10251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10257 ;;      Params:         0       2       0       0       0
 10258 ;;      Locals:         0       0       0       0       0
 10259 ;;      Temps:          0       1       0       0       0
 10260 ;;      Totals:         0       3       0       0       0
 10261 ;;Total ram usage:        3 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; This function calls:
 10264 ;;		Nothing
 10265 ;; This function is called by:
 10266 ;;		_SleepIfOkay
 10267 ;;		_block_on_To_msgqueues
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text61
 10272  001D90                     __ptext61:
 10273                           	opt stack 0
 10274  001D90                     _check_msg:
 10275                           	opt stack 19
 10276                           
 10277                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
 10278                           
 10279                           ;incstack = 0
 10280  001D90  0100               	movlb	0	; () banked
 10281  001D92  EE20 F056          	lfsr	2,86
 10282  001D96  0100               	movlb	0	; () banked
 10283  001D98  5180               	movf	check_msg@qptr& (0+255),w,b
 10284  001D9A  26D9               	addwf	fsr2l,f,c
 10285  001D9C  0100               	movlb	0	; () banked
 10286  001D9E  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
 10287  001DA0  22DA               	addwfc	fsr2h,f,c
 10288  001DA2  50DF               	movf	indf2,w,c
 10289  001DA4  0100               	movlb	0	; () banked
 10290  001DA6  6F82               	movwf	??_check_msg& (0+255),b
 10291  001DA8  0100               	movlb	0	; () banked
 10292  001DAA  5182               	movf	??_check_msg& (0+255),w,b
 10293  001DAC  0D11               	mullw	17
 10294  001DAE  50F3               	movf	prodl,w,c
 10295  001DB0  0100               	movlb	0	; () banked
 10296  001DB2  2580               	addwf	check_msg@qptr& (0+255),w,b
 10297  001DB4  6ED9               	movwf	fsr2l,c
 10298  001DB6  50F4               	movf	prodh,w,c
 10299  001DB8  0100               	movlb	0	; () banked
 10300  001DBA  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
 10301  001DBC  6EDA               	movwf	fsr2h,c
 10302  001DBE  50DF               	movf	indf2,w,c
 10303  001DC0  0012               	return	
 10304  001DC2                     __end_of_check_msg:
 10305                           	opt stack 0
 10306  0000                     pclatu	equ	0xFFB
 10307                           pclath	equ	0xFFA
 10308                           tblptru	equ	0xFF8
 10309                           tblptrh	equ	0xFF7
 10310                           tblptrl	equ	0xFF6
 10311                           tablat	equ	0xFF5
 10312                           prodh	equ	0xFF4
 10313                           prodl	equ	0xFF3
 10314                           intcon	equ	0xFF2
 10315                           postinc0	equ	0xFEE
 10316                           fsr0h	equ	0xFEA
 10317                           fsr0l	equ	0xFE9
 10318                           wreg	equ	0xFE8
 10319                           indf1	equ	0xFE7
 10320                           fsr1h	equ	0xFE2
 10321                           fsr1l	equ	0xFE1
 10322                           bsr	equ	0xFE0
 10323                           indf2	equ	0xFDF
 10324                           postinc2	equ	0xFDE
 10325                           postdec2	equ	0xFDD
 10326                           fsr2h	equ	0xFDA
 10327                           fsr2l	equ	0xFD9
 10328                           status	equ	0xFD8
 10329                           pclatu	equ	0xFFB
 10330                           pclath	equ	0xFFA
 10331                           tblptru	equ	0xFF8
 10332                           tblptrh	equ	0xFF7
 10333                           tblptrl	equ	0xFF6
 10334                           tablat	equ	0xFF5
 10335                           prodh	equ	0xFF4
 10336                           prodl	equ	0xFF3
 10337                           intcon	equ	0xFF2
 10338                           postinc0	equ	0xFEE
 10339                           fsr0h	equ	0xFEA
 10340                           fsr0l	equ	0xFE9
 10341                           wreg	equ	0xFE8
 10342                           indf1	equ	0xFE7
 10343                           fsr1h	equ	0xFE2
 10344                           fsr1l	equ	0xFE1
 10345                           bsr	equ	0xFE0
 10346                           indf2	equ	0xFDF
 10347                           postinc2	equ	0xFDE
 10348                           postdec2	equ	0xFDD
 10349                           fsr2h	equ	0xFDA
 10350                           fsr2l	equ	0xFD9
 10351                           status	equ	0xFD8
 10352                           
 10353                           	psect	param0
 10354  0000                     pclatu	equ	0xFFB
 10355                           pclath	equ	0xFFA
 10356                           tblptru	equ	0xFF8
 10357                           tblptrh	equ	0xFF7
 10358                           tblptrl	equ	0xFF6
 10359                           tablat	equ	0xFF5
 10360                           prodh	equ	0xFF4
 10361                           prodl	equ	0xFF3
 10362                           intcon	equ	0xFF2
 10363                           postinc0	equ	0xFEE
 10364                           fsr0h	equ	0xFEA
 10365                           fsr0l	equ	0xFE9
 10366                           wreg	equ	0xFE8
 10367                           indf1	equ	0xFE7
 10368                           fsr1h	equ	0xFE2
 10369                           fsr1l	equ	0xFE1
 10370                           bsr	equ	0xFE0
 10371                           indf2	equ	0xFDF
 10372                           postinc2	equ	0xFDE
 10373                           postdec2	equ	0xFDD
 10374                           fsr2h	equ	0xFDA
 10375                           fsr2l	equ	0xFD9
 10376                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         394
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71     117
    BANK0           128     69      72
    BANK1           256    116     203
    BANK2           256      0     174
    BANK3           256      0      87

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    uart_frame_message@inner	PTR unsigned char  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    uart_frame_message@outer	PTR unsigned char  size(2) Largest target is 18
		 -> uart_transmit_interrupt_handler@message(COMRAM[18]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> main@uart_response(BANK1[14]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 14
		 -> uart_transmit_interrupt_handler@data(COMRAM[14]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@uart_response(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[14]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_send_uart_message
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                98    98      0   17634
                                             22 BANK1     94    94      0
               _FromMainHigh_sendmsg
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3477
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2788
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _send_uart_message                                    3     1      2    3017
                                             68 BANK0      1     1      0
                                             14 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2658
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    7358
                                             54 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (6) _uart_transmit_interrupt_handler                     16    16      0    2107
                                             29 COMRAM    16    16      0
                _FromMainLow_recvmsg
                 _uart_frame_message
 ---------------------------------------------------------------------------------
 (7) _uart_frame_message                                   8     4      4     371
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_receive_interrupt_handler                      28    28      0    2943
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    2308
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2187
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    8352
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    3788
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    15    15      0    4308
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                              _blip4
                       _handle_start
              _start_i2c_slave_reply
                            i2_blip1
                            i2_blip2
                            i2_blip3
 ---------------------------------------------------------------------------------
 (12) i2_blip3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               5     3      2     119
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _blip4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1797
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1698
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (12) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (13) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainHigh_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         ___awmod
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
     _uart_frame_message

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _blip4
     _handle_start
     _start_i2c_slave_reply
     i2_blip1
     i2_blip2
     i2_blip3
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      57      10       34.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      AE       8       68.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     74      CB       6       79.3%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      48       4       56.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      75       1       92.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28D      11        0.0%
DATA                 0      0     28D      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 08 23:16:40 2014

                              ??_debug_configure 00B8                         _MQ_Main_Willing_to_block 00C7  
                                    _SSPSTATbits 000FC7               uart_receive_interrupt_handler@done 005D  
                      __end_of_ToMainLow_recvmsg 1CF2                                               bsr 000FE0  
                      __end_of_ToMainLow_sendmsg 1F12                                     __CFG_CP0$OFF 000000  
                              i2recv_msg@msgtype 008D                                i2recv_msg@tlength 0094  
                           ?_FromMainLow_recvmsg 0019                                              l115 0926  
                                            l540 1EEA                                              l539 1EE8  
                                            l563 1D74                                              l565 1D8A  
                                            l566 1D8C                             ?_FromMainLow_sendmsg 010B  
                           __size_of_WriteTimer0 0012                             __size_of_WriteTimer1 0012  
                               ??_uart_configure 00B8                                     ___awmod@sign 00BD  
                                 _FromMainLow_MQ 0200                                              prod 000FF3  
                                            wreg 000FE8                                       _TXSTA1bits 000FAC  
                                   __CFG_IESO$ON 000000                                     ?_in_high_int 0080  
                                ReadTimer1@timer 0003                              i2recv_msg@maxlength 008C  
                                           l1113 1A8C                                             l3210 1D76  
                                           l4200 088A                                             l3500 1BD8  
                                           l4212 08E2                                             l4220 0966  
                                           l3510 14DC                                             l4214 092C  
                                           l3520 151C                                             l4240 0A16  
                                           l3522 1522                                             l3530 1554  
                                           l3514 14FE                                             l4218 094A  
                                           l4260 0A7A                                             l3534 1568  
                                           l3526 1546                                             l3518 1510  
                                           l3550 0F48                                             l4254 0A5A  
                                           l4246 0A36                                             l4238 09D4  
                                           l3706 0DB8                                             l4266 0A9A  
                                           l4194 0882                                             l2668 19AC  
                                           l3740 1A5A                                             l4276 0ABA  
                                           l3494 1BB8                                             l3744 1A7E  
                                           l3736 1A48                                             l3690 0CDA  
                                           l3738 1A54                                             _LATB 000F8A  
                                           i1l52 007A                                      main@myByte1 0126  
                                    main@myByte2 0127                                  _FromMainHigh_MQ 0300  
                                  __CFG_FCMEN$ON 000000                                             _blip 1FE2  
                                     i1_recv_msg 121A                                             _main 0800  
                                           fsr0h 000FEA                                             fsr1h 000FE2  
                                           fsr0l 000FE9                                             fsr2h 000FDA  
                                           indf1 000FE7                                             fsr1l 000FE1  
                                           indf2 000FDF                                             fsr2l 000FD9  
                                    main@msgtype 014D                                       i1_send_msg 1636  
                                           pclat 000FFA                                             prodh 000FF4  
                                __end_ofi2_blip1 2002                                             prodl 000FF3  
                                __end_ofi2_blip2 1FFA                                  __end_ofi2_blip3 1FF2  
                          handle_start@data_read 0080                                             start 00C0  
                                     i2_recv_msg 0DBC                                    __CFG_FOSC2$ON 000000  
                                     i2_send_msg 100A                        ToMainHigh_recvmsg@msgtype 010C  
                                 send_msg@length 0102                      __size_of_timer0_int_handler 006E  
         uart_receive_interrupt_handler@checksum 002F                            ??_FromMainLow_recvmsg 001D  
                                          ?_blip 0001                            ??_FromMainLow_sendmsg 00C3  
                                          ?_main 0001                                  __end_of___awmod 1572  
                                          _T0CON 000FD5                                            _T1CON 000FCD  
                                          i1l414 0C5E                                  __end_of___lwmod 1A96  
                                     i1memcpy@d1 0001                                            i2l320 0432  
                                          i2l281 1462                                            i2l329 0602  
                                          i2l291 05F4                                            i2l293 014E  
                                          i2l297 0180                                       i1memcpy@s1 0003  
                    FromMainHigh_recvmsg@msgtype 0098                                            _TMR0H 000FD7  
                                          _TMR1H 000FCF                                            _TMR0L 000FD6  
                                          _TMR1L 000FCE                                            _SPBRG 000FAF  
                                          _TRISB 000F93                                            _TRISD 000F95  
                                     i2memcpy@d1 0080                                       i2memcpy@s1 0082  
                                   ?_init_queues 0001                        __size_of_enter_sleep_mode 0006  
                                 i1___awmod@sign 0006                                            _blip1 1FDA  
                                          _blip2 1FD2                                            _blip3 1FCA  
                                          _blip4 2002      uart_receive_interrupt_handler@message_count 0033  
                     ToMainLow_recvmsg@maxlength 00C4                          timer0_lthread@msgbuffer 00BE  
                        i2c_configure_slave@addr 00B8                             main@need_sensor_data 0125  
                                          tablat 000FF5                          uart_frame_message@inner 0001  
                                          status 000FD8                          uart_frame_message@outer 0003  
                               __end_ofi1_memcpy 1C7E                               __size_ofi1___awmod 0090  
                               __end_ofi2_memcpy 1C3E                               __size_ofi2___awmod 00C4  
                                __initialization 1B4E                                     __end_of_blip 1FEA  
                                   __end_of_main 0AF0                                       _ReadTimer1 1F76  
                    __size_of_timer1_int_handler 002C                       __size_of_ToMainLow_recvmsg 0036  
                     __size_of_ToMainLow_sendmsg 0024                    __size_of_FromMainHigh_recvmsg 0036  
                  __size_of_FromMainHigh_sendmsg 002E                                           ??_blip 00B8  
                                         ??_main 00C5                                  send_msg@msgtype 0103  
                                  __activetblptr 000002                                  send_msg@tlength 0106  
                     FromMainLow_sendmsg@msgtype 010B                             __end_of_handle_start 14AE  
                                         ?_blip1 0001                                           ?_blip2 0001  
                                         ?_blip3 0001                                           ?_blip4 0001  
                                      ??i2_blip1 0080                                        ??i2_blip2 0080  
                                      ??i2_blip3 0080                                           i1l1600 1388  
                                         i1l4002 0B9A                                           i1l1602 13B6  
                                         i1l2412 1C6C                                           i1l2406 1C50  
                                         i1l2440 17DC                                           i1l2432 17B2  
                                         i1l2442 17E4                                           i1l4026 0C16  
                                         i1l4018 0BF4                                           i1l2444 17E8  
                                         i1l2452 1806                                           i1l2436 17CE  
                                         i1l4046 0C72                                           i1l4142 0070  
                                         i1l2456 1814                                           i1l2448 17FC  
                                         i1l4136 0066                                           i1l1594 133A  
                                         i1l4058 1724                                           i1l3622 1260  
                                         i1l1598 1368                                           i1l4086 176C  
                                         i2l3006 1A9E                                           i1l3574 166E  
                                         i1l3638 12FE                                           i2l2422 1C28  
                                         i2l2416 1C08                                       _OpenTimer0 1EC8  
                                         i2l4122 1854                                           i1l3970 0B30  
                                     _OpenTimer1 1D5E                                           i1l3990 0B68  
                                 __CFG_WDTEN$OFF 000000                                           i2l2480 15E6  
                                         i2l2472 15C2                                           i2l4128 185E  
                                         i1l3976 0B36                                           i1l3992 0B6A  
                                         i1l3978 0B3C                                           i2l2652 1CAE  
                                         i2l2644 1C90                                           i2l2492 162C  
                                         i2l2484 160A                                           i2l2476 15D4  
                                         i2l2468 15A0                                           i2l2478 15E0  
                                         i2l2734 1132                                           i2l2488 1618  
                                         i2l3800 01D8                                           i2l2754 147E  
                                         i2l2738 11AE                                           i2l3810 0212  
                                         i2l2756 1496                                           i2l3900 0606  
                                         i2l3820 0250                                           i2l3654 0E1C  
                                         i2l3670 0EF6                                           i2l3822 0290  
                                         i2l3930 07C2                                           i2l3922 077C  
                                         i2l3914 06EA                                           i2l3906 0664  
                                         i2l3834 0310                                           i2l3860 03D6  
                                         i2l3780 0146                                           i2l3598 1058  
                                         i2l3854 038C                                           i2l3838 031A  
                                         i2l3774 0138                                           i2l3856 03CE  
                                         i2l3798 01AC                                           i2l3894 05C8  
                                         _RCREG1 000FAE                      __end_of_i2c_configure_slave 1EA0  
                                  ??_SleepIfOkay 0084                                           _OSCCON 000FD3  
                                         _SPBRGH 000FB0                                      ?i1_recv_msg 000B  
                                         _SSPADD 000FC8                                           _SSPBUF 000FC9  
                 __size_of_start_i2c_slave_reply 0104                                           _TXREG1 000FAD  
                                    ?i1_send_msg 000B                    __end_of_start_i2c_slave_reply 121A  
                             timer0_lthread@tptr 00B8                          FromMainLow_recvmsg@data 001B  
                                    ?i2_recv_msg 008A                                      ?i2_send_msg 008A  
                                 __CFG_XINST$OFF 000000                       __end_of_uart_frame_message 13E4  
               ??_uart_receive_interrupt_handler 001B                  ?_uart_receive_interrupt_handler 0001  
                                _i2c_int_handler 00C4                                        ??___awmod 00BC  
                                         _blink0 2010                                 OpenTimer0@config 00B8  
                                         _ic_ptr 00C5                                        ??___lwmod 00BC  
                                  main@msgbuffer 0128                                 __end_of_init_i2c 1970  
                               OpenTimer1@config 00B8                                           _memcpy 1B9E  
                                         clear_0 1B54                                           clear_1 1B60  
                                         clear_2 1B6C                                           clear_3 1B7C  
                                ___awmod@divisor 00BA                                  ___awmod@counter 00BC  
                                         main@ic 014E                                 __end_of_recv_msg 0DBC  
                    start_i2c_slave_reply@length 0084    uart_transmit_interrupt_handler@message_status 002D  
                              __end_ofi1___awmod 181E                                 __end_of_send_msg 100A  
                                   __pdataCOMRAM 0075                                __end_ofi2___awmod 1636  
                          timer0_int_handler@val 00A1                          i2c_int_handler@i2c_data 00A5  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8             uart_receive_interrupt_handler@msg_id 0034  
                                    init_queue@i 00BA                                   i2___awmod@sign 0085  
           uart_receive_interrupt_handler@status 002B                         ToMainLow_recvmsg@msgtype 010C  
                           __size_of_in_high_int 0010                          FromMainLow_sendmsg@data 010C  
                                _debug_configure 1FB8                                  __CFG_FOSC$HSPLL 000000  
           uart_transmit_interrupt_handler@index 0062                                       __accesstop 0080  
                        __end_of__initialization 1B94                       __end_of_ToMainHigh_recvmsg 1D28  
                     __end_of_ToMainHigh_sendmsg 1E4C                              uart_frame_message@i 0008  
                               _need_sensor_data 005A                      __end_of_init_timer1_lthread 1F64  
                            __end_of_SleepIfOkay 1AF6                                   __pcstackCOMRAM 0001  
                                    ?_ReadTimer1 0001                                    __end_of_blip1 1FE2  
                                  __end_of_blip2 1FDA                                    __end_of_blip3 1FD2  
                                  __end_of_blip4 200A                  send_uart_message@message_q_code 00C4  
                             __size_of_check_msg 0032                        timer0_int_handler@msgtype 009F  
                            __size_ofi1_recv_msg 00E8                              __size_ofi1_send_msg 00C0  
                                      ?i1_memcpy 0001                    __size_of_InterruptHandlerHigh 1894  
                    __end_of_InterruptHandlerLow 00C0                                        ?i2_memcpy 0080  
                                  _ToMainHigh_MQ 0257                              __size_ofi2_recv_msg 013E  
                               _enter_sleep_mode 200A                              __size_ofi2_send_msg 010C  
                           timer1_lthread@length 0112                                          ??_blip1 00B8  
                                        ??_blip2 00B8                                          ??_blip3 00B8  
                                        ??_blip4 0080                                    check_msg@qptr 0080  
                           timer1_lthread@retval 00C4                             __size_of_init_queues 0058  
                                     __pbssBANK0 00C7                                       __pbssBANK1 0174  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                                    ?_OpenTimer0 0001                                      ?_OpenTimer1 0001  
                        i2c_int_handler@msg_type 00A7                          __end_of_i2c_int_handler 0800  
                             timer1_lthread@tptr 010E                                          ?_blink0 0001  
                              recv_msg@maxlength 0102                                  recv_msg@msgtype 0103  
                                recv_msg@tlength 0108                            __size_of_handle_start 00CA  
                               WriteTimer0@timer 0082                                          ?_memcpy 00B8  
                               WriteTimer1@timer 0003                                    ??_WriteTimer0 0082  
                                  ??_WriteTimer1 0003                          __size_of_timer0_lthread 000E  
                        __size_of_timer1_lthread 0062                                       ??i1_memcpy 0007  
                                     ??i2_memcpy 0086                          __end_of_debug_configure 1FC2  
                               i1send_msg@length 000D                                          _SSPCON1 000FC6  
                                        _SSPCON2 000FC5                                          _SSPSTAT 000FC7  
                            __size_of_ReadTimer1 0012                                __end_of_check_msg 1DC2  
                                        i2_blip1 1FFA                                          i2_blip2 1FF2  
                                        i2_blip3 1FEA                                        ?_init_i2c 00B8  
                                    _SleepIfOkay 1A96                                _send_uart_message 1F32  
                                      ?_recv_msg 0100                                       _in_low_int 1C7E  
                                   _handle_start 13E4                                          __Hparam 0000  
                                      ?_send_msg 0100                                          __Lparam 0000  
                             ?_send_uart_message 010E        uart_receive_interrupt_handler@status_1822 002C  
                     __end_of_timer0_int_handler 190A                      __end_of_FromMainLow_recvmsg 1EC8  
                    __end_of_FromMainLow_sendmsg 1E1E                                          ___awmod 14AE  
                                        ___lwmod 1A36                                  __size_of_blink0 0004  
                                __CFG_STVREN$OFF 000000                              ??_send_uart_message 00C4  
                                        __pcinit 1B4E                                  __size_of_memcpy 0050  
                                     _init_queue 1970                                          __ramtop 0400  
                            __size_of_OpenTimer0 0026                              __size_of_OpenTimer1 0032  
                                        __ptext0 0800                                          __ptext1 1F12  
                                        __ptext2 19D4                                          __ptext3 2010  
                                        __ptext4 1A36                                          __ptext5 1DC2  
                                        __ptext6 1FAA                                          __ptext7 1F32  
                                        __ptext8 1DF0                                          __ptext9 0EFA  
                                      _T0CONbits 000FD5                                        _T1CONbits 000FCD  
                               ___awmod@dividend 00B8                              __end_of_WriteTimer0 1F9A  
                            __end_of_WriteTimer1 1F76                                          main@jjj 0147  
                                 main@motor_data 0116                                   __pintcode_body 181E  
                   __end_of_FromMainHigh_recvmsg 1D5E                             end_of_initialization 1B94  
                        timer1_lthread@msgbuffer 0114                     __end_of_FromMainHigh_sendmsg 1DF0  
                     FromMainHigh_sendmsg@length 00C3                        __end_of_send_uart_message 1F52  
                                        memcpy@d 00BE                                          memcpy@n 00BC  
                                        memcpy@s 00C0                                       ??_init_i2c 00BA  
                                   ??i1_recv_msg 0012                          __size_of_uart_configure 0020  
                    i2c_int_handler@data_written 00A2                                    __Lmediumconst 0000  
                                        int_func 181E                                     ??i1_send_msg 0011  
       uart_receive_interrupt_handler@bad_end_id 0031       uart_receive_interrupt_handler@bad_start_id 0030  
                               ?_i2c_int_handler 0001                                     ??i2_recv_msg 0091  
                                     ??_recv_msg 00C2                                     ??i2_send_msg 0090  
                                     ??_send_msg 00C2  uart_receive_interrupt_handler@gooey_uart_center 001D  
                     __end_of_timer1_int_handler 1E78                                          postdec2 000FDD  
                                        postinc0 000FEE                                          postinc2 000FDE  
                      ToMainHigh_sendmsg@msgtype 0096                               _uart_frame_message 1302  
                             __end_ofi1_recv_msg 1302                               __end_ofi1_send_msg 16F6  
                    FromMainHigh_sendmsg@msgtype 010B           __end_of_uart_receive_interrupt_handler 0C7A  
        __size_of_uart_receive_interrupt_handler 018A                   _uart_receive_interrupt_handler 0AF0  
                               ?_debug_configure 0001                                        _TRISBbits 000F93  
                                      _TRISCbits 000F94                               __end_ofi2_recv_msg 0EFA  
                                      i1___awmod 178E                               __end_ofi2_send_msg 1116  
                                      i2___awmod 1572                              ?_uart_frame_message 0001  
                  FromMainHigh_recvmsg@maxlength 009C                         timer1_int_handler@result 001B  
                                     main@length 014C                                      ?_in_low_int 0082  
                          timer0_lthread@msgtype 00BA                            _start_i2c_slave_reply 1116  
                   __size_of_i2c_configure_slave 0028                         __end_of_enter_sleep_mode 2010  
                                   ??_ReadTimer1 0003                             ??_uart_frame_message 0005  
                             _ToMainHigh_recvmsg 1CF2                                        i1memcpy@d 0007  
                             _ToMainHigh_sendmsg 1E1E                                        i1memcpy@n 0005  
                                      i1memcpy@s 0009                                      _BAUDCONbits 000FB8  
                                 __end_of_blink0 2014                                    __pidataCOMRAM 2014  
                                 _timer0_lthread 1FAA                                      ?_init_queue 00B8  
                                      i2memcpy@d 0086                                      _WriteTimer0 1F88  
                                    _WriteTimer1 1F64                                        i2memcpy@n 0084  
                                      i2memcpy@s 0088                                   _timer1_lthread 19D4  
                                 __end_of_memcpy 1BEE                                _enable_interrupts 1FC2  
                            ?_ToMainHigh_recvmsg 010C                         i2c_int_handler@data_read 00A9  
                            ?_ToMainHigh_sendmsg 0096                               ?_enable_interrupts 0001  
                            start_initialization 1B4E                                    ??_in_high_int 0082  
   uart_receive_interrupt_handler@start_byte_bad 0061                                       ?i1___awmod 0001  
                              __size_ofi1_memcpy 0040                                __size_ofi2_memcpy 0050  
                                     ?i2___awmod 0080                        FromMainLow_sendmsg@length 00C3  
                          i2c_int_handler@length 009E                              ??_enable_interrupts 00B8  
                                   ??_OpenTimer0 00B8                                     ??_OpenTimer1 00B8  
                             __end_of_ReadTimer1 1F88                  uart_receive_interrupt_handler@i 0035  
                     __size_of_send_uart_message 0020                                main@uart_response 0139  
         uart_transmit_interrupt_handler@message 0063                     __end_of_InterruptHandlerHigh 189C  
                                     init_i2c@ic 00B8                             ??_ToMainHigh_recvmsg 00C4  
                           ??_ToMainHigh_sendmsg 0099           uart_transmit_interrupt_handler@msgtype 002C  
                       i2c_int_handler@need_data 00A4                           __end_of_timer0_lthread 1FB8  
                                       ??_blink0 00B8                         i2c_int_handler@error_buf 009F  
                         __end_of_timer1_lthread 1A36                               i1___awmod@dividend 0001  
                      __end_of_enable_interrupts 1FCA                                         ??_memcpy 00BE  
                          timer1_lthread@msgtype 0110                             _FromMainHigh_recvmsg 1D28  
            uart_receive_interrupt_handler@frame 0048              uart_receive_interrupt_handler@index 005F  
                           _FromMainHigh_sendmsg 1DC2              uart_receive_interrupt_handler@error 005E  
                   __size_of_init_timer1_lthread 0012                               __end_of_OpenTimer0 1EEE  
                             __end_of_OpenTimer1 1D90                         i2c_int_handler@msg_ready 00A8  
                                    __pbssCOMRAM 0048                                    ??_init_queues 00BB  
                                  __pcstackBANK0 0080                                    __pcstackBANK1 0100  
                            __size_of_in_low_int 003E                         start_i2c_slave_reply@msg 0080  
                            __CFG_CCP2MX$DEFAULT 000000                                         ?i2_blip1 0001  
                                       ?i2_blip2 0001                                         ?i2_blip3 0001  
                       ToMainLow_sendmsg@msgtype 0017                     __size_of_InterruptHandlerLow 00A8  
                            __end_of_in_high_int 1FAA                                   _uart_configure 1F12  
                                   ?_SleepIfOkay 0001                            ToMainLow_recvmsg@data 010E  
                                   _ToMainLow_MQ 0174                              __size_of_init_queue 0064  
                                      _check_msg 1D90                                        __pnvBANK0 00C5  
                         ?_start_i2c_slave_reply 0080                                __size_of_init_i2c 0066  
                                   recv_msg@data 0105                                     recv_msg@qmsg 010A  
                                   recv_msg@slot 0107                                     recv_msg@qptr 0100  
                              __size_of_recv_msg 0142                                        __pintcode 0008  
                              __size_of_send_msg 0110                                         ?___awmod 00B8  
                                ?_timer0_lthread 00B8                                         ?___lwmod 00B8  
                          ?_FromMainHigh_recvmsg 0098                                  ?_timer1_lthread 010E  
                          ?_FromMainHigh_sendmsg 010B                                      __pintcodelo 0018  
                         ToMainHigh_recvmsg@data 010E                       i2c_int_handler@msg_to_send 00A6  
                              WriteTimer0@timer0 0080                               _timer0_int_handler 189C  
                     uart_frame_message@checksum 0007                                WriteTimer1@timer1 0001  
                                    ??i1___awmod 0005                            ToMainLow_sendmsg@data 0018  
                                 __size_of_blip1 0008                                   __size_of_blip2 0008  
                                 __size_of_blip3 0008                                   __size_of_blip4 0008  
                                    ??i2___awmod 0084                           __end_of_uart_configure 1F32  
                            i1recv_msg@maxlength 000D                              ?_timer0_int_handler 0001  
   uart_receive_interrupt_handler@bad_counter_id 002D                              __end_of_init_queues 1B4E  
                                       _LATBbits 000F8A                                         _LATDbits 000F8C  
                                     ?_check_msg 0080                                         _IPR1bits 000F9F  
                                       _PIE1bits 000F9D                                         _PIR1bits 000F9E  
                         ToMainHigh_sendmsg@data 0097                                         _RCONbits 000FD0  
                               __CFG_WDTPS$32768 000000                                   i1recv_msg@data 0010  
                           ??_timer0_int_handler 009D                                   i1recv_msg@qmsg 0017  
                                 i1recv_msg@slot 0014                                   i1recv_msg@qptr 000B  
 uart_receive_interrupt_handler@received_counter 0060                     FromMainLow_recvmsg@maxlength 001D  
                     __size_of_enable_interrupts 0008                                i1send_msg@msgtype 000E  
                              i1send_msg@tlength 0012                       FromMainLow_recvmsg@msgtype 0019  
                   __size_of_FromMainLow_recvmsg 0028                     __size_of_FromMainLow_sendmsg 002E  
                           timer0_lthread@length 00BC                               _timer1_int_handler 1E4C  
                                       i1_memcpy 1C3E                             _InterruptHandlerHigh 0008  
                                       i2_memcpy 1BEE                             timer0_lthread@msgval 00C0  
                       FromMainHigh_recvmsg@data 009A                                      _in_high_int 1F9A  
                                   send_msg@data 0104                              _i2c_configure_slave 1E78  
                                   send_msg@qmsg 0109                                     send_msg@slot 0108  
                                   send_msg@qptr 0100                                  ?_uart_configure 0001  
                            ?_timer1_int_handler 0001                               i2___awmod@dividend 0080  
                               __size_ofi2_blip1 0008                                 __size_ofi2_blip2 0008  
                               __size_ofi2_blip3 0008                                         __Hparam0 0000  
                                   ??_in_low_int 0084                                         __Lparam0 0000  
                           ?_i2c_configure_slave 0001                                ?_enter_sleep_mode 0001  
                         ??_FromMainHigh_recvmsg 009C                           ??_FromMainHigh_sendmsg 00C3  
                              i1___awmod@divisor 0003                             ??_timer1_int_handler 001B  
        __end_of_uart_transmit_interrupt_handler 178E         __size_of_uart_transmit_interrupt_handler 0098  
              ??_uart_transmit_interrupt_handler 001E                 ?_uart_transmit_interrupt_handler 0001  
                _uart_transmit_interrupt_handler 16F6                                i1___awmod@counter 0005  
                       __size_of_i2c_int_handler 073C                                 __size_of___awmod 00C4  
                             ??_enter_sleep_mode 0080                                 __size_of___lwmod 0060  
                                   ??_init_queue 00BA                                     ?_WriteTimer0 0080  
                                   ?_WriteTimer1 0001                         FromMainHigh_sendmsg@data 010C  
                        ToMainLow_sendmsg@length 001A                                main@t0thread_data 0137  
                 uart_frame_message@sent_counter 005C                            ?_InterruptHandlerHigh 0001  
            uart_transmit_interrupt_handler@data 001E              uart_transmit_interrupt_handler@done 0075  
                              i2send_msg@msgtype 008D                      ToMainHigh_recvmsg@maxlength 00C4  
                              i2send_msg@tlength 0091                          init_timer1_lthread@tptr 00B8  
                                    _init_queues 1AF6                               __end_of_in_low_int 1CBC  
                                       __ptext10 1F52                                         __ptext11 1AF6  
                                       __ptext20 1FE2                                         __ptext12 1970  
                                       __ptext21 1CBC                                         __ptext13 190A  
                                       __ptext30 1302                                         __ptext22 1CF2  
                                       __ptext14 1E78                                         __ptext31 1EA0  
                                       __ptext23 0C7A                                         __ptext15 1FC2  
                                       __ptext40 1F76                                         __ptext32 121A  
                                       __ptext24 1B9E                                         __ptext16 1FB8  
                                       __ptext33 0AF0                                         __ptext25 14AE  
                                       __ptext17 1FCA                                         __ptext50 2002  
                                       __ptext42 189C                                         __ptext34 1E4C  
                                       __ptext26 1D5E                                         __ptext18 1FD2  
                                       __ptext51 1E1E                                         __ptext43 1F88  
                                       __ptext35 1F64                                         __ptext27 1EC8  
                                       __ptext19 1FDA                                         __ptext60 200A  
                                       __ptext52 100A                                         __ptext44 00C4  
                                       __ptext36 1EEE                                         __ptext61 1D90  
                                       __ptext53 1D28                                         __ptext45 1FEA  
                                       __ptext37 1636                                         __ptext29 16F6  
                                       __ptext54 0DBC                                         __ptext46 1FF2  
                                       __ptext38 1C3E                                         __ptext55 1BEE  
                                       __ptext47 1FFA                                         __ptext39 178E  
                                       __ptext56 1572                                         __ptext48 1116  
                                       __ptext57 1A96                                         __ptext49 13E4  
                                       __ptext58 1C7E                                         __ptext59 1F9A  
                                 i1send_msg@data 000F                                   i1send_msg@qmsg 0015  
                                 i1send_msg@slot 0014                                   i1send_msg@qptr 000B  
                       timer0_int_handler@length 009D                                         _init_i2c 190A  
                       __size_of_debug_configure 000A                              _init_timer1_lthread 1F52  
                                  __size_of_blip 0008                                    __size_of_main 02F0  
                              main@t1thread_data 014A                                      ??_check_msg 0082  
                             __end_of_init_queue 19D4                             __size_of_SleepIfOkay 0060  
                                       _recv_msg 0C7A                            ??_i2c_configure_slave 00B8  
                                       _send_msg 0EFA    uart_receive_interrupt_handler@bad_checksum_id 0032  
                                 init_queue@qptr 00B8                                   i2recv_msg@data 008F  
                    __size_of_uart_frame_message 00E2                                   i2recv_msg@qmsg 0096  
                                 i2recv_msg@slot 0093                                   i2recv_msg@qptr 008A  
                                   _SSP1STATbits 000FC7                              _InterruptHandlerLow 0018  
                                       main@poop 0149                             ?_init_timer1_lthread 00B8  
                              i2___awmod@divisor 0082                                i2___awmod@counter 0084  
                                    _OSCTUNEbits 000F9B                                       _INTCONbits 000FF2  
                                       memcpy@d1 00B8                                         memcpy@s1 00BA  
                   i2c_int_handler@overrun_error 00A3                                 i2send_msg@length 008C  
                                       intlevel1 0000                                         intlevel2 0000  
                           ?_InterruptHandlerLow 0001                          ??_start_i2c_slave_reply 0082  
                   send_uart_message@message_ptr 010E                                 ___lwmod@dividend 00B8  
                                     _RCSTA1bits 000FAB                                    ?_handle_start 0001  
                               ??_timer0_lthread 00C0                      __size_of_ToMainHigh_recvmsg 0036  
                    __size_of_ToMainHigh_sendmsg 002E                                       _OSCCONbits 000FD3  
                               ??_timer1_lthread 00C4                                i1recv_msg@msgtype 000E  
                              i1recv_msg@tlength 0015                         ToMainHigh_sendmsg@length 0099  
                          ??_init_timer1_lthread 00BA                           ??_InterruptHandlerHigh 00AA  
                              _ToMainLow_recvmsg 1CBC                                _ToMainLow_sendmsg 1EEE  
                             main@last_reg_recvd 0124                                  ___lwmod@divisor 00BA  
                             ?_ToMainLow_recvmsg 010C                                ??_i2c_int_handler 009D  
                                ___lwmod@counter 00BC                               ?_ToMainLow_sendmsg 0017  
                                    _SSPCON1bits 000FC6                                      _SSPCON2bits 000FC5  
                                 i2send_msg@data 008E                            ??_InterruptHandlerLow 0037  
                            ??_ToMainLow_recvmsg 00C4                                   i2send_msg@qmsg 0094  
                                 i2send_msg@slot 0093                                   i2send_msg@qptr 008A  
                            ??_ToMainLow_sendmsg 001A                              _FromMainLow_recvmsg 1EA0  
                                 ??_handle_start 0080                              _FromMainLow_sendmsg 1DF0  
