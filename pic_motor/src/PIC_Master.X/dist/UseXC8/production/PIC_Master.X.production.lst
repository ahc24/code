

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 15 20:13:56 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	param0,global,class=BANK0,space=1,delta=1
    81  0000                     
    82                           	psect	idataCOMRAM
    83  001E52                     __pidataCOMRAM:
    84                           	opt stack 0
    85                           
    86                           ;initializer for uart_transmit_interrupt_handler@done
    87  001E52  01                 	db	1
    88  0000                     _BAUDCONbits	set	4024
    89  0000                     _INTCONbits	set	4082
    90  0000                     _IPR1bits	set	3999
    91  0000                     _LATB	set	3978
    92  0000                     _LATBbits	set	3978
    93  0000                     _LATDbits	set	3980
    94  0000                     _OSCCON	set	4051
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _OSCTUNEbits	set	3995
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PIR1bits	set	3998
    99  0000                     _RCONbits	set	4048
   100  0000                     _RCREG1	set	4014
   101  0000                     _RCSTA1bits	set	4011
   102  0000                     _SPBRG	set	4015
   103  0000                     _SPBRGH	set	4016
   104  0000                     _SSP1STATbits	set	4039
   105  0000                     _SSPADD	set	4040
   106  0000                     _SSPBUF	set	4041
   107  0000                     _SSPCON1	set	4038
   108  0000                     _SSPCON1bits	set	4038
   109  0000                     _SSPCON2	set	4037
   110  0000                     _SSPCON2bits	set	4037
   111  0000                     _SSPSTAT	set	4039
   112  0000                     _SSPSTATbits	set	4039
   113  0000                     _T0CON	set	4053
   114  0000                     _T0CONbits	set	4053
   115  0000                     _T1CON	set	4045
   116  0000                     _T1CONbits	set	4045
   117  0000                     _TMR0H	set	4055
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR1H	set	4047
   120  0000                     _TMR1L	set	4046
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISBbits	set	3987
   123  0000                     _TRISCbits	set	3988
   124  0000                     _TRISD	set	3989
   125  0000                     _TXREG1	set	4013
   126  0000                     _TXSTA1bits	set	4012
   127                           
   128                           	psect	nvBANK0
   129  0000C5                     __pnvBANK0:
   130                           	opt stack 0
   131  0000C5                     _ic_ptr:
   132                           	opt stack 0
   133  0000C5                     	ds	2
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  001956                     __pcinit:
   139                           	opt stack 0
   140  001956                     start_initialization:
   141                           	opt stack 0
   142  001956                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK3 (87 bytes)
   146  001956  EE03  F000         	lfsr	0,__pbssBANK3
   147  00195A  0E57               	movlw	87
   148  00195C                     clear_0:
   149  00195C  6AEE               	clrf	postinc0,c
   150  00195E  06E8               	decf	wreg,f,c
   151  001960  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK2 (174 bytes)
   154  001962  EE02  F000         	lfsr	0,__pbssBANK2
   155  001966  0EAE               	movlw	174
   156  001968                     clear_1:
   157  001968  6AEE               	clrf	postinc0,c
   158  00196A  06E8               	decf	wreg,f,c
   159  00196C  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK1 (87 bytes)
   162  00196E  EE01  F072         	lfsr	0,__pbssBANK1
   163  001972  0E57               	movlw	87
   164  001974                     clear_2:
   165  001974  6AEE               	clrf	postinc0,c
   166  001976  06E8               	decf	wreg,f,c
   167  001978  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to BANK0 (1 bytes)
   170  00197A  0100               	movlb	0
   171  00197C  6BC7               	clrf	__pbssBANK0& (0+255),b
   172                           
   173                           ; Clear objects allocated to COMRAM (27 bytes)
   174  00197E  EE00  F048         	lfsr	0,__pbssCOMRAM
   175  001982  0E1B               	movlw	27
   176  001984                     clear_3:
   177  001984  6AEE               	clrf	postinc0,c
   178  001986  06E8               	decf	wreg,f,c
   179  001988  E1FD               	bnz	clear_3
   180                           
   181                           ; Initialize objects allocated to COMRAM (1 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  00198A  0E52               	movlw	low __pidataCOMRAM
   184  00198C  6EF6               	movwf	tblptrl,c
   185  00198E  0E1E               	movlw	high __pidataCOMRAM
   186  001990  6EF7               	movwf	tblptrh,c
   187  001992  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  001994  6EF8               	movwf	tblptru,c
   189  001996  0009               	tblrd		*+	;fetch initializer
   190  001998  CFF5 F063          	movff	tablat,__pdataCOMRAM
   191  00199C                     end_of_initialization:
   192                           	opt stack 0
   193  00199C                     __end_of__initialization:
   194                           	opt stack 0
   195  00199C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  00199E  6EF8               	movwf	tblptru,c
   197  0019A0  0100               	movlb	0
   198  0019A2  EF71  F003         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           
   206                           	psect	bssCOMRAM
   207  000048                     __pbssCOMRAM:
   208                           	opt stack 0
   209  000048                     uart_receive_interrupt_handler@frame:
   210                           	opt stack 0
   211  000048                     	ds	18
   212  00005A                     _need_sensor_data:
   213                           	opt stack 0
   214  00005A                     	ds	2
   215  00005C                     uart_frame_message@sent_counter:
   216                           	opt stack 0
   217  00005C                     	ds	1
   218  00005D                     uart_receive_interrupt_handler@done:
   219                           	opt stack 0
   220  00005D                     	ds	1
   221  00005E                     uart_receive_interrupt_handler@error:
   222                           	opt stack 0
   223  00005E                     	ds	1
   224  00005F                     uart_receive_interrupt_handler@index:
   225                           	opt stack 0
   226  00005F                     	ds	1
   227  000060                     uart_receive_interrupt_handler@received_counter:
   228                           	opt stack 0
   229  000060                     	ds	1
   230  000061                     uart_receive_interrupt_handler@start_byte_bad:
   231                           	opt stack 0
   232  000061                     	ds	1
   233  000062                     uart_transmit_interrupt_handler@index:
   234                           	opt stack 0
   235  000062                     	ds	1
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           
   243                           	psect	dataCOMRAM
   244  000063                     __pdataCOMRAM:
   245                           	opt stack 0
   246  000063                     uart_transmit_interrupt_handler@done:
   247                           	opt stack 0
   248  000063                     	ds	1
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           
   256                           	psect	bssBANK0
   257  0000C7                     __pbssBANK0:
   258                           	opt stack 0
   259  0000C7                     _MQ_Main_Willing_to_block:
   260                           	opt stack 0
   261  0000C7                     	ds	1
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           
   269                           	psect	bssBANK1
   270  000172                     __pbssBANK1:
   271                           	opt stack 0
   272  000172                     _ToMainLow_MQ:
   273                           	opt stack 0
   274  000172                     	ds	87
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	bssBANK2
   283  000200                     __pbssBANK2:
   284                           	opt stack 0
   285  000200                     _FromMainLow_MQ:
   286                           	opt stack 0
   287  000200                     	ds	87
   288  000257                     _ToMainHigh_MQ:
   289                           	opt stack 0
   290  000257                     	ds	87
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           
   298                           	psect	bssBANK3
   299  000300                     __pbssBANK3:
   300                           	opt stack 0
   301  000300                     _FromMainHigh_MQ:
   302                           	opt stack 0
   303  000300                     	ds	87
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           
   311                           	psect	cstackBANK1
   312  000100                     __pcstackBANK1:
   313                           	opt stack 0
   314  000100                     send_msg@qptr:
   315                           	opt stack 0
   316  000100                     recv_msg@qptr:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x0
   320  000100                     	ds	2
   321  000102                     send_msg@length:
   322                           	opt stack 0
   323  000102                     recv_msg@maxlength:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x2
   327  000102                     	ds	1
   328  000103                     send_msg@msgtype:
   329                           	opt stack 0
   330  000103                     recv_msg@msgtype:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x3
   334  000103                     	ds	1
   335  000104                     send_msg@data:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x4
   339  000104                     	ds	1
   340  000105                     recv_msg@data:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x5
   344  000105                     	ds	1
   345  000106                     send_msg@tlength:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x6
   349  000106                     	ds	1
   350  000107                     recv_msg@slot:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x7
   354  000107                     	ds	1
   355  000108                     send_msg@slot:
   356                           	opt stack 0
   357  000108                     recv_msg@tlength:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x8
   361  000108                     	ds	1
   362  000109                     send_msg@qmsg:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x9
   366  000109                     	ds	1
   367  00010A                     recv_msg@qmsg:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0xA
   371  00010A                     	ds	1
   372  00010B                     FromMainLow_sendmsg@msgtype:
   373                           	opt stack 0
   374  00010B                     FromMainHigh_sendmsg@msgtype:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0xB
   378  00010B                     	ds	1
   379  00010C                     ToMainLow_recvmsg@msgtype:
   380                           	opt stack 0
   381  00010C                     ToMainHigh_recvmsg@msgtype:
   382                           	opt stack 0
   383  00010C                     FromMainLow_sendmsg@data:
   384                           	opt stack 0
   385  00010C                     FromMainHigh_sendmsg@data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0xC
   389  00010C                     	ds	2
   390  00010E                     ToMainLow_recvmsg@data:
   391                           	opt stack 0
   392  00010E                     ToMainHigh_recvmsg@data:
   393                           	opt stack 0
   394  00010E                     send_uart_message@message_ptr:
   395                           	opt stack 0
   396  00010E                     timer1_lthread@tptr:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0xE
   400  00010E                     	ds	2
   401  000110                     i_like_to_moveit_moveit@right_side_speed:
   402                           	opt stack 0
   403  000110                     timer1_lthread@msgtype:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407  000110                     	ds	1
   408  000111                     i_like_to_moveit_moveit@left_side_speed:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x11
   412  000111                     	ds	1
   413  000112                     timer1_lthread@length:
   414                           	opt stack 0
   415  000112                     i_like_to_moveit_moveit@moves:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x12
   419  000112                     	ds	2
   420  000114                     timer1_lthread@msgbuffer:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x14
   424  000114                     	ds	2
   425  000116                     main@motor_data:
   426                           	opt stack 0
   427                           
   428                           ; 14 bytes @ 0x16
   429  000116                     	ds	14
   430  000124                     main@last_reg_recvd:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x24
   434  000124                     	ds	1
   435  000125                     main@need_sensor_data:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x25
   439  000125                     	ds	1
   440  000126                     main@msgbuffer:
   441                           	opt stack 0
   442                           
   443                           ; 15 bytes @ 0x26
   444  000126                     	ds	15
   445  000135                     main@t0thread_data:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x35
   449  000135                     	ds	2
   450  000137                     main@uart_response:
   451                           	opt stack 0
   452                           
   453                           ; 14 bytes @ 0x37
   454  000137                     	ds	14
   455  000145                     main@jjj:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x45
   459  000145                     	ds	2
   460  000147                     main@poop:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x47
   464  000147                     	ds	1
   465  000148                     main@t1thread_data:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x48
   469  000148                     	ds	2
   470  00014A                     main@length:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x4A
   474  00014A                     	ds	1
   475  00014B                     main@msgtype:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x4B
   479  00014B                     	ds	1
   480  00014C                     main@ic:
   481                           	opt stack 0
   482                           
   483                           ; 38 bytes @ 0x4C
   484  00014C                     	ds	38
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           
   492                           	psect	cstackBANK0
   493  000080                     __pcstackBANK0:
   494                           	opt stack 0
   495  000080                     ?_in_high_int:
   496                           	opt stack 0
   497  000080                     ?i2___awmod:
   498                           	opt stack 0
   499  000080                     handle_start@data_read:
   500                           	opt stack 0
   501  000080                     check_msg@qptr:
   502                           	opt stack 0
   503  000080                     start_i2c_slave_reply@msg:
   504                           	opt stack 0
   505  000080                     WriteTimer0@timer0:
   506                           	opt stack 0
   507  000080                     i2memcpy@d1:
   508                           	opt stack 0
   509  000080                     i2___awmod@dividend:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x0
   513  000080                     	ds	2
   514  000082                     ??_check_msg:
   515  000082                     ??_start_i2c_slave_reply:
   516  000082                     ?_in_low_int:
   517                           	opt stack 0
   518  000082                     WriteTimer0@timer:
   519                           	opt stack 0
   520  000082                     i2memcpy@s1:
   521                           	opt stack 0
   522  000082                     i2___awmod@divisor:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x2
   526  000082                     	ds	2
   527  000084                     start_i2c_slave_reply@length:
   528                           	opt stack 0
   529  000084                     i2___awmod@counter:
   530                           	opt stack 0
   531  000084                     i2memcpy@n:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x4
   535  000084                     	ds	1
   536  000085                     i2___awmod@sign:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x5
   540  000085                     	ds	1
   541  000086                     i2memcpy@d:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x6
   545  000086                     	ds	2
   546  000088                     i2memcpy@s:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x8
   550  000088                     	ds	2
   551  00008A                     i2send_msg@qptr:
   552                           	opt stack 0
   553  00008A                     i2recv_msg@qptr:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0xA
   557  00008A                     	ds	2
   558  00008C                     i2send_msg@length:
   559                           	opt stack 0
   560  00008C                     i2recv_msg@maxlength:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0xC
   564  00008C                     	ds	1
   565  00008D                     i2send_msg@msgtype:
   566                           	opt stack 0
   567  00008D                     i2recv_msg@msgtype:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0xD
   571  00008D                     	ds	1
   572  00008E                     i2send_msg@data:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0xE
   576  00008E                     	ds	1
   577  00008F                     i2recv_msg@data:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xF
   581  00008F                     	ds	1
   582  000090                     ??i2_send_msg:
   583                           
   584                           ; 0 bytes @ 0x10
   585  000090                     	ds	1
   586  000091                     ??i2_recv_msg:
   587  000091                     i2send_msg@tlength:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x11
   591  000091                     	ds	2
   592  000093                     i2send_msg@slot:
   593                           	opt stack 0
   594  000093                     i2recv_msg@slot:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x13
   598  000093                     	ds	1
   599  000094                     i2send_msg@qmsg:
   600                           	opt stack 0
   601  000094                     i2recv_msg@tlength:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x14
   605  000094                     	ds	2
   606  000096                     ToMainHigh_sendmsg@msgtype:
   607                           	opt stack 0
   608  000096                     i2recv_msg@qmsg:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x16
   612  000096                     	ds	1
   613  000097                     ToMainHigh_sendmsg@data:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x17
   617  000097                     	ds	1
   618  000098                     FromMainHigh_recvmsg@msgtype:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x18
   622  000098                     	ds	1
   623  000099                     ToMainHigh_sendmsg@length:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x19
   627  000099                     	ds	1
   628  00009A                     FromMainHigh_recvmsg@data:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x1A
   632  00009A                     	ds	2
   633  00009C                     FromMainHigh_recvmsg@maxlength:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x1C
   637  00009C                     	ds	1
   638  00009D                     ??_i2c_int_handler:
   639  00009D                     timer0_int_handler@length:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x1D
   643  00009D                     	ds	1
   644  00009E                     i2c_int_handler@length:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x1E
   648  00009E                     	ds	1
   649  00009F                     timer0_int_handler@msgtype:
   650                           	opt stack 0
   651  00009F                     i2c_int_handler@error_buf:
   652                           	opt stack 0
   653                           
   654                           ; 3 bytes @ 0x1F
   655  00009F                     	ds	2
   656  0000A1                     timer0_int_handler@val:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x21
   660  0000A1                     	ds	1
   661  0000A2                     i2c_int_handler@data_written:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x22
   665  0000A2                     	ds	1
   666  0000A3                     i2c_int_handler@overrun_error:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x23
   670  0000A3                     	ds	1
   671  0000A4                     i2c_int_handler@need_data:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x24
   675  0000A4                     	ds	1
   676  0000A5                     i2c_int_handler@i2c_data:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x25
   680  0000A5                     	ds	1
   681  0000A6                     i2c_int_handler@msg_to_send:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x26
   685  0000A6                     	ds	1
   686  0000A7                     i2c_int_handler@msg_type:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x27
   690  0000A7                     	ds	1
   691  0000A8                     i2c_int_handler@msg_ready:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x28
   695  0000A8                     	ds	1
   696  0000A9                     i2c_int_handler@data_read:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x29
   700  0000A9                     	ds	1
   701  0000AA                     ??_InterruptHandlerHigh:
   702                           
   703                           ; 0 bytes @ 0x2A
   704  0000AA                     	ds	14
   705  0000B8                     ?___awmod:
   706                           	opt stack 0
   707  0000B8                     ?___lwmod:
   708                           	opt stack 0
   709  0000B8                     i2c_configure_slave@addr:
   710                           	opt stack 0
   711  0000B8                     OpenTimer0@config:
   712                           	opt stack 0
   713  0000B8                     OpenTimer1@config:
   714                           	opt stack 0
   715  0000B8                     init_queue@qptr:
   716                           	opt stack 0
   717  0000B8                     init_i2c@ic:
   718                           	opt stack 0
   719  0000B8                     timer0_lthread@tptr:
   720                           	opt stack 0
   721  0000B8                     init_timer1_lthread@tptr:
   722                           	opt stack 0
   723  0000B8                     ___awmod@dividend:
   724                           	opt stack 0
   725  0000B8                     ___lwmod@dividend:
   726                           	opt stack 0
   727  0000B8                     memcpy@d1:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x38
   731  0000B8                     	ds	2
   732  0000BA                     init_queue@i:
   733                           	opt stack 0
   734  0000BA                     timer0_lthread@msgtype:
   735                           	opt stack 0
   736  0000BA                     ___awmod@divisor:
   737                           	opt stack 0
   738  0000BA                     ___lwmod@divisor:
   739                           	opt stack 0
   740  0000BA                     memcpy@s1:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x3A
   744  0000BA                     	ds	1
   745  0000BB                     
   746                           ; 0 bytes @ 0x3B
   747  0000BB                     	ds	1
   748  0000BC                     ___awmod@counter:
   749                           	opt stack 0
   750  0000BC                     ___lwmod@counter:
   751                           	opt stack 0
   752  0000BC                     timer0_lthread@length:
   753                           	opt stack 0
   754  0000BC                     memcpy@n:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x3C
   758  0000BC                     	ds	1
   759  0000BD                     ___awmod@sign:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x3D
   763  0000BD                     	ds	1
   764  0000BE                     timer0_lthread@msgbuffer:
   765                           	opt stack 0
   766  0000BE                     memcpy@d:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x3E
   770  0000BE                     	ds	2
   771  0000C0                     timer0_lthread@msgval:
   772                           	opt stack 0
   773  0000C0                     memcpy@s:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x40
   777  0000C0                     	ds	2
   778  0000C2                     ??_send_msg:
   779  0000C2                     ??_recv_msg:
   780                           
   781                           ; 0 bytes @ 0x42
   782  0000C2                     	ds	1
   783  0000C3                     FromMainLow_sendmsg@length:
   784                           	opt stack 0
   785  0000C3                     FromMainHigh_sendmsg@length:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x43
   789  0000C3                     	ds	1
   790  0000C4                     ToMainLow_recvmsg@maxlength:
   791                           	opt stack 0
   792  0000C4                     ToMainHigh_recvmsg@maxlength:
   793                           	opt stack 0
   794  0000C4                     send_uart_message@message_q_code:
   795                           	opt stack 0
   796  0000C4                     timer1_lthread@retval:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x44
   800  0000C4                     	ds	1
   801  0000C5                     tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           
   808                           ; 0 bytes @ 0x45
   809                           
   810                           	psect	cstackCOMRAM
   811  000001                     __pcstackCOMRAM:
   812                           	opt stack 0
   813  000001                     ?_ReadTimer1:
   814                           	opt stack 0
   815  000001                     ?i1___awmod:
   816                           	opt stack 0
   817  000001                     WriteTimer1@timer1:
   818                           	opt stack 0
   819  000001                     i1memcpy@d1:
   820                           	opt stack 0
   821  000001                     i1___awmod@dividend:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x0
   825  000001                     	ds	2
   826  000003                     ReadTimer1@timer:
   827                           	opt stack 0
   828  000003                     WriteTimer1@timer:
   829                           	opt stack 0
   830  000003                     i1memcpy@s1:
   831                           	opt stack 0
   832  000003                     i1___awmod@divisor:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x2
   836  000003                     	ds	2
   837  000005                     i1___awmod@counter:
   838                           	opt stack 0
   839  000005                     i1memcpy@n:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x4
   843  000005                     	ds	1
   844  000006                     i1___awmod@sign:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x5
   848  000006                     	ds	1
   849  000007                     i1memcpy@d:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x6
   853  000007                     	ds	2
   854  000009                     i1memcpy@s:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x8
   858  000009                     	ds	2
   859  00000B                     i1send_msg@qptr:
   860                           	opt stack 0
   861  00000B                     i1recv_msg@qptr:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0xA
   865  00000B                     	ds	2
   866  00000D                     i1send_msg@length:
   867                           	opt stack 0
   868  00000D                     i1recv_msg@maxlength:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0xC
   872  00000D                     	ds	1
   873  00000E                     i1send_msg@msgtype:
   874                           	opt stack 0
   875  00000E                     i1recv_msg@msgtype:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0xD
   879  00000E                     	ds	1
   880  00000F                     i1send_msg@data:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0xE
   884  00000F                     	ds	1
   885  000010                     i1recv_msg@data:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0xF
   889  000010                     	ds	1
   890  000011                     ??i1_send_msg:
   891                           
   892                           ; 0 bytes @ 0x10
   893  000011                     	ds	1
   894  000012                     ??i1_recv_msg:
   895  000012                     i1send_msg@tlength:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x11
   899  000012                     	ds	2
   900  000014                     i1send_msg@slot:
   901                           	opt stack 0
   902  000014                     i1recv_msg@slot:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x13
   906  000014                     	ds	1
   907  000015                     i1send_msg@qmsg:
   908                           	opt stack 0
   909  000015                     i1recv_msg@tlength:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x14
   913  000015                     	ds	2
   914  000017                     ToMainLow_sendmsg@msgtype:
   915                           	opt stack 0
   916  000017                     i1recv_msg@qmsg:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x16
   920  000017                     	ds	1
   921  000018                     ToMainLow_sendmsg@data:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x17
   925  000018                     	ds	1
   926  000019                     FromMainLow_recvmsg@msgtype:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x18
   930  000019                     	ds	1
   931  00001A                     ToMainLow_sendmsg@length:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x19
   935  00001A                     	ds	1
   936  00001B                     ??_uart_receive_interrupt_handler:
   937  00001B                     FromMainLow_recvmsg@data:
   938                           	opt stack 0
   939  00001B                     timer1_int_handler@result:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x1A
   943  00001B                     	ds	2
   944  00001D                     FromMainLow_recvmsg@maxlength:
   945                           	opt stack 0
   946  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   947                           	opt stack 0
   948                           
   949                           ; 14 bytes @ 0x1C
   950  00001D                     	ds	1
   951  00001E                     uart_transmit_interrupt_handler@data:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x1D
   955  00001E                     	ds	2
   956  000020                     uart_transmit_interrupt_handler@msgtype:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x1F
   960  000020                     	ds	1
   961  000021                     uart_transmit_interrupt_handler@message_status:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x20
   965  000021                     	ds	10
   966  00002B                     uart_receive_interrupt_handler@status:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x2A
   970  00002B                     	ds	1
   971  00002C                     uart_receive_interrupt_handler@status_1937:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x2B
   975  00002C                     	ds	1
   976  00002D                     uart_receive_interrupt_handler@bad_counter_id:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x2C
   980  00002D                     	ds	2
   981  00002F                     uart_receive_interrupt_handler@checksum:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x2E
   985  00002F                     	ds	1
   986  000030                     uart_receive_interrupt_handler@bad_start_id:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x2F
   990  000030                     	ds	1
   991  000031                     uart_receive_interrupt_handler@bad_end_id:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x30
   995  000031                     	ds	1
   996  000032                     uart_receive_interrupt_handler@bad_checksum_id:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x31
  1000  000032                     	ds	1
  1001  000033                     uart_receive_interrupt_handler@message_count:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x32
  1005  000033                     	ds	1
  1006  000034                     uart_receive_interrupt_handler@msg_id:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x33
  1010  000034                     	ds	1
  1011  000035                     uart_receive_interrupt_handler@i:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x34
  1015  000035                     	ds	2
  1016  000037                     ??_InterruptHandlerLow:
  1017                           
  1018                           ; 0 bytes @ 0x36
  1019  000037                     	ds	17
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 189 in file "../src/main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  uart_respons   14   55[BANK1 ] unsigned char [14]
  1037 ;;  jjj             2   69[BANK1 ] int 
  1038 ;;  motor_data     14   22[BANK1 ] unsigned char [14]
  1039 ;;  poop            1   71[BANK1 ] unsigned char 
  1040 ;;  ic             38   76[BANK1 ] struct __i2c_comm
  1041 ;;  msgbuffer      15   38[BANK1 ] unsigned char [15]
  1042 ;;  t1thread_dat    2   72[BANK1 ] struct __timer1_thread_s
  1043 ;;  t0thread_dat    2   53[BANK1 ] struct __timer0_thread_s
  1044 ;;  uthread_data    2    0        struct __uart_thread_str
  1045 ;;  msgtype         1   75[BANK1 ] unsigned char 
  1046 ;;  length          1   74[BANK1 ] char 
  1047 ;;  need_sensor_    1   37[BANK1 ] unsigned char 
  1048 ;;  last_reg_rec    1   36[BANK1 ] unsigned char 
  1049 ;;  i               1    0        unsigned char 
  1050 ;;  c               1    0        unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;		None               void
  1053 ;; Registers used:
  1054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0      92       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         0       0      92       0       0
  1064 ;;Total ram usage:       92 bytes
  1065 ;; Hardware stack levels required when called:   15
  1066 ;; This function calls:
  1067 ;;		_FromMainHigh_sendmsg
  1068 ;;		_OpenTimer0
  1069 ;;		_OpenTimer1
  1070 ;;		_ToMainHigh_recvmsg
  1071 ;;		_ToMainLow_recvmsg
  1072 ;;		_blip
  1073 ;;		_blip1
  1074 ;;		_blip2
  1075 ;;		_blip3
  1076 ;;		_debug_configure
  1077 ;;		_enable_interrupts
  1078 ;;		_i2c_configure_slave
  1079 ;;		_i_like_to_moveit_moveit
  1080 ;;		_init_i2c
  1081 ;;		_init_queues
  1082 ;;		_init_timer1_lthread
  1083 ;;		_send_uart_message
  1084 ;;		_timer0_lthread
  1085 ;;		_timer1_lthread
  1086 ;;		_uart_configure
  1087 ;; This function is called by:
  1088 ;;		Startup code after reset
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text0
  1093  0006E2                     __ptext0:
  1094                           	opt stack 0
  1095  0006E2                     _main:
  1096                           	opt stack 16
  1097                           
  1098                           ;main.c: 190: char c;
  1099                           ;main.c: 191: signed char length;
  1100                           ;main.c: 192: unsigned char msgtype;
  1101                           ;main.c: 193: unsigned char last_reg_recvd;
  1102                           ;main.c: 194: i2c_comm ic;
  1103                           ;main.c: 195: unsigned char msgbuffer[14 + 1];
  1104                           ;main.c: 196: unsigned char i;
  1105                           ;main.c: 197: uart_thread_struct uthread_data;
  1106                           ;main.c: 198: timer1_thread_struct t1thread_data;
  1107                           ;main.c: 199: timer0_thread_struct t0thread_data;
  1108                           ;main.c: 200: unsigned char need_sensor_data = 1;
  1109                           
  1110                           ;incstack = 0
  1111  0006E2  0E01               	movlw	1
  1112  0006E4  0101               	movlb	1	; () banked
  1113  0006E6  6F25               	movwf	main@need_sensor_data& (0+255),b
  1114                           
  1115                           ;main.c: 208: OSCCON = 0x82;
  1116  0006E8  0E82               	movlw	130
  1117  0006EA  6ED3               	movwf	4051,c	;volatile
  1118                           
  1119                           ; BSR set to: 1
  1120                           ;main.c: 209: OSCTUNEbits.PLLEN = 0;
  1121  0006EC  9C9B               	bcf	3995,6,c	;volatile
  1122                           
  1123                           ; BSR set to: 1
  1124                           ;main.c: 239: init_i2c(&ic);
  1125  0006EE  0101               	movlb	1	; () banked
  1126  0006F0  0E01               	movlw	high main@ic
  1127  0006F2  0100               	movlb	0	; () banked
  1128  0006F4  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
  1129  0006F6  0101               	movlb	1	; () banked
  1130  0006F8  0E4C               	movlw	low main@ic
  1131  0006FA  0100               	movlb	0	; () banked
  1132  0006FC  6FB8               	movwf	init_i2c@ic& (0+255),b
  1133  0006FE  EC89  F00B         	call	_init_i2c	;wreg free
  1134                           
  1135                           ;main.c: 242: init_timer1_lthread(&t1thread_data);
  1136  000702  0101               	movlb	1	; () banked
  1137  000704  0E01               	movlw	high main@t1thread_data
  1138  000706  0100               	movlb	0	; () banked
  1139  000708  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1140  00070A  0101               	movlb	1	; () banked
  1141  00070C  0E48               	movlw	low main@t1thread_data
  1142  00070E  0100               	movlb	0	; () banked
  1143  000710  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1144  000712  ECCC  F00E         	call	_init_timer1_lthread	;wreg free
  1145                           
  1146                           ;main.c: 245: init_queues();
  1147  000716  EC7F  F00C         	call	_init_queues	;wreg free
  1148                           
  1149                           ;main.c: 249: TRISB = 0x0;
  1150  00071A  0E00               	movlw	0
  1151  00071C  6E93               	movwf	3987,c	;volatile
  1152                           
  1153                           ;main.c: 250: LATB = 0x0;
  1154  00071E  0E00               	movlw	0
  1155  000720  6E8A               	movwf	3978,c	;volatile
  1156                           
  1157                           ;main.c: 263: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1158  000722  0E96               	movlw	150
  1159  000724  EC87  F00E         	call	_OpenTimer0
  1160                           
  1161                           ;main.c: 272: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1162  000728  0EF5               	movlw	245
  1163  00072A  ECD2  F00D         	call	_OpenTimer1
  1164                           
  1165                           ;main.c: 279: IPR1bits.TMR1IP = 0;
  1166  00072E  909F               	bcf	3999,0,c	;volatile
  1167                           
  1168                           ;main.c: 281: IPR1bits.RCIP = 0;
  1169  000730  9A9F               	bcf	3999,5,c	;volatile
  1170                           
  1171                           ;main.c: 284: IPR1bits.SSPIP = 1;
  1172  000732  869F               	bsf	3999,3,c	;volatile
  1173                           
  1174                           ;main.c: 293: i2c_configure_slave(0x9E);
  1175  000734  0E9E               	movlw	158
  1176  000736  EC5F  F00E         	call	_i2c_configure_slave
  1177                           
  1178                           ;main.c: 308: PIE1bits.SSPIE = 1;
  1179  00073A  869D               	bsf	3997,3,c	;volatile
  1180                           
  1181                           ;main.c: 333: debug_configure();
  1182  00073C  ECFF  F00E         	call	_debug_configure	;wreg free
  1183                           
  1184                           ;main.c: 334: blip();
  1185  000740  EC14  F00F         	call	_blip	;wreg free
  1186                           
  1187                           ;main.c: 335: blip1();
  1188  000744  EC10  F00F         	call	_blip1	;wreg free
  1189                           
  1190                           ;main.c: 336: blip2();
  1191  000748  EC0C  F00F         	call	_blip2	;wreg free
  1192                           
  1193                           ;main.c: 337: blip3();
  1194  00074C  EC08  F00F         	call	_blip3	;wreg free
  1195                           
  1196                           ;main.c: 346: enable_interrupts();
  1197  000750  EC04  F00F         	call	_enable_interrupts	;wreg free
  1198                           
  1199                           ;main.c: 359: uart_configure();
  1200  000754  ECAC  F00E         	call	_uart_configure	;wreg free
  1201  000758                     l4209:
  1202                           
  1203                           ;main.c: 388: unsigned char motor_data[14];
  1204                           ;main.c: 391: unsigned char poop;
  1205                           ;main.c: 392: for(poop=0;poop<14;poop++)
  1206  000758  0E00               	movlw	0
  1207  00075A  0101               	movlb	1	; () banked
  1208  00075C  6F47               	movwf	main@poop& (0+255),b
  1209  00075E  D00F               	goto	L2
  1210  000760                     l4215:
  1211                           
  1212                           ; BSR set to: 1
  1213                           ;main.c: 393: {
  1214                           ;main.c: 394: motor_data[poop]=0x55;
  1215  000760  0101               	movlb	1	; () banked
  1216  000762  5147               	movf	main@poop& (0+255),w,b
  1217  000764  0D01               	mullw	1
  1218  000766  0101               	movlb	1	; () banked
  1219  000768  0E16               	movlw	low main@motor_data
  1220  00076A  24F3               	addwf	prodl,w,c
  1221  00076C  6ED9               	movwf	fsr2l,c
  1222  00076E  0101               	movlb	1	; () banked
  1223  000770  0E01               	movlw	high main@motor_data
  1224  000772  20F4               	addwfc	prodh,w,c
  1225  000774  6EDA               	movwf	fsr2h,c
  1226  000776  0E55               	movlw	85
  1227  000778  6EDF               	movwf	indf2,c
  1228                           
  1229                           ; BSR set to: 1
  1230  00077A  0101               	movlb	1	; () banked
  1231  00077C  2B47               	incf	main@poop& (0+255),f,b
  1232  00077E                     L2:
  1233                           
  1234                           ; BSR set to: 1
  1235  00077E  0E0D               	movlw	13
  1236  000780  0101               	movlb	1	; () banked
  1237  000782  6547               	cpfsgt	main@poop& (0+255),b
  1238  000784  D7ED               	goto	l4215
  1239                           
  1240                           ; BSR set to: 1
  1241                           ;main.c: 395: }
  1242                           ;main.c: 402: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1243                           
  1244                           ; BSR set to: 1
  1245  000786  0101               	movlb	1	; () banked
  1246  000788  0E01               	movlw	high main@msgtype
  1247  00078A  0101               	movlb	1	; () banked
  1248  00078C  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1249  00078E  0101               	movlb	1	; () banked
  1250  000790  0E4B               	movlw	low main@msgtype
  1251  000792  0101               	movlb	1	; () banked
  1252  000794  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1253  000796  0101               	movlb	1	; () banked
  1254  000798  0E01               	movlw	high main@msgbuffer
  1255  00079A  0101               	movlb	1	; () banked
  1256  00079C  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1257  00079E  0101               	movlb	1	; () banked
  1258  0007A0  0E26               	movlw	low main@msgbuffer
  1259  0007A2  0101               	movlb	1	; () banked
  1260  0007A4  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1261  0007A6  0E0E               	movlw	14
  1262  0007A8  EC9C  F00D         	call	_ToMainHigh_recvmsg
  1263  0007AC  0101               	movlb	1	; () banked
  1264  0007AE  6F4A               	movwf	main@length& (0+255),b
  1265                           
  1266                           ; BSR set to: 1
  1267                           ;main.c: 403: if (length < 0) {
  1268  0007B0  0101               	movlb	1	; () banked
  1269  0007B2  BF4A               	btfsc	main@length& (0+255),7,b
  1270  0007B4  D051               	goto	l4243
  1271  0007B6  D042               	goto	l4241
  1272  0007B8                     l4227:
  1273                           
  1274                           ; BSR set to: 1
  1275                           ;main.c: 413: {
  1276                           ;main.c: 414: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1277  0007B8  0101               	movlb	1	; () banked
  1278  0007BA  0E01               	movlw	high main@t0thread_data
  1279  0007BC  0100               	movlb	0	; () banked
  1280  0007BE  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1281  0007C0  0101               	movlb	1	; () banked
  1282  0007C2  0E35               	movlw	low main@t0thread_data
  1283  0007C4  0100               	movlb	0	; () banked
  1284  0007C6  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1285  0007C8  0101               	movlb	1	; () banked
  1286  0007CA  0100               	movlb	0	; () banked
  1287  0007CC  C14B  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1288  0007D0  0100               	movlb	0	; () banked
  1289  0007D2  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1290  0007D4  0101               	movlb	1	; () banked
  1291  0007D6  514A               	movf	main@length& (0+255),w,b
  1292  0007D8  0100               	movlb	0	; () banked
  1293  0007DA  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1294  0007DC  0100               	movlb	0	; () banked
  1295  0007DE  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1296  0007E0  0100               	movlb	0	; () banked
  1297  0007E2  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1298  0007E4  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1299  0007E6  0101               	movlb	1	; () banked
  1300  0007E8  0E01               	movlw	high main@msgbuffer
  1301  0007EA  0100               	movlb	0	; () banked
  1302  0007EC  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1303  0007EE  0101               	movlb	1	; () banked
  1304  0007F0  0E26               	movlw	low main@msgbuffer
  1305  0007F2  0100               	movlb	0	; () banked
  1306  0007F4  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1307  0007F6  ECF8  F00E         	call	_timer0_lthread	;wreg free
  1308                           
  1309                           ;main.c: 415: break;
  1310  0007FA  D02E               	goto	l4243
  1311  0007FC                     l4229:
  1312                           
  1313                           ;main.c: 422: {
  1314                           ;main.c: 423: i_like_to_moveit_moveit( msgbuffer[1] , msgbuffer[2] );
  1315  0007FC  C128  F110         	movff	main@msgbuffer+2,i_like_to_moveit_moveit@right_side_speed
  1316  000800  0101               	movlb	1	; () banked
  1317  000802  5127               	movf	(main@msgbuffer+1)& (0+255),w,b
  1318  000804  EC43  F00D         	call	_i_like_to_moveit_moveit
  1319                           
  1320                           ;main.c: 424: blip();
  1321  000808  EC14  F00F         	call	_blip	;wreg free
  1322                           
  1323                           ;main.c: 425: break;
  1324  00080C  D005               	goto	l123
  1325  00080E                     l4235:
  1326  00080E  0101               	movlb	1	; () banked
  1327  000810  5126               	movf	main@msgbuffer& (0+255),w,b
  1328                           
  1329                           ; Switch size 1, requested type "space"
  1330                           ; Number of cases is 1, Range of values is 1 to 1
  1331                           ; switch strategies available:
  1332                           ; Name         Instructions Cycles
  1333                           ; simple_byte            4     3 (average)
  1334                           ;	Chosen strategy is simple_byte
  1335  000812  0A01               	xorlw	1	; case 1
  1336  000814  B4D8               	btfsc	status,2,c
  1337  000816  D7F2               	goto	l4229
  1338  000818                     l123:
  1339                           
  1340                           ;main.c: 435: {
  1341                           ;main.c: 438: last_reg_recvd = msgbuffer[0];
  1342  000818  C126  F124         	movff	main@msgbuffer,main@last_reg_recvd
  1343                           
  1344                           ;main.c: 439: break;
  1345  00081C  D01D               	goto	l4243
  1346  00081E                     l4237:
  1347                           
  1348                           ;main.c: 442: {
  1349                           ;main.c: 443: FromMainHigh_sendmsg(14,40,(void *) motor_data);
  1350  00081E  0E28               	movlw	40
  1351  000820  0101               	movlb	1	; () banked
  1352  000822  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1353  000824  0101               	movlb	1	; () banked
  1354  000826  0E01               	movlw	high main@motor_data
  1355  000828  0101               	movlb	1	; () banked
  1356  00082A  6F0D               	movwf	(FromMainHigh_sendmsg@data+1)& (0+255),b
  1357  00082C  0101               	movlb	1	; () banked
  1358  00082E  0E16               	movlw	low main@motor_data
  1359  000830  0101               	movlb	1	; () banked
  1360  000832  6F0C               	movwf	FromMainHigh_sendmsg@data& (0+255),b
  1361  000834  0E0E               	movlw	14
  1362  000836  EC04  F00E         	call	_FromMainHigh_sendmsg
  1363                           
  1364                           ;main.c: 445: break;
  1365  00083A  D00E               	goto	l4243
  1366  00083C                     l4241:
  1367  00083C  0101               	movlb	1	; () banked
  1368  00083E  514B               	movf	main@msgtype& (0+255),w,b
  1369                           
  1370                           ; Switch size 1, requested type "space"
  1371                           ; Number of cases is 4, Range of values is 10 to 42
  1372                           ; switch strategies available:
  1373                           ; Name         Instructions Cycles
  1374                           ; simple_byte           13     7 (average)
  1375                           ;	Chosen strategy is simple_byte
  1376  000840  0A0A               	xorlw	10	; case 10
  1377  000842  B4D8               	btfsc	status,2,c
  1378  000844  D7B9               	goto	l4227
  1379  000846  0A22               	xorlw	34	; case 40
  1380  000848  B4D8               	btfsc	status,2,c
  1381  00084A  D7E1               	goto	l4235
  1382  00084C  0A01               	xorlw	1	; case 41
  1383  00084E  B4D8               	btfsc	status,2,c
  1384  000850  D7E3               	goto	l123
  1385  000852  0A03               	xorlw	3	; case 42
  1386  000854  B4D8               	btfsc	status,2,c
  1387  000856  D7E3               	goto	l4237
  1388  000858                     l4243:
  1389                           
  1390                           ;main.c: 453: }
  1391                           ;main.c: 456: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1392  000858  0101               	movlb	1	; () banked
  1393  00085A  0E01               	movlw	high main@msgtype
  1394  00085C  0101               	movlb	1	; () banked
  1395  00085E  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1396  000860  0101               	movlb	1	; () banked
  1397  000862  0E4B               	movlw	low main@msgtype
  1398  000864  0101               	movlb	1	; () banked
  1399  000866  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1400  000868  0101               	movlb	1	; () banked
  1401  00086A  0E01               	movlw	high main@msgbuffer
  1402  00086C  0101               	movlb	1	; () banked
  1403  00086E  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1404  000870  0101               	movlb	1	; () banked
  1405  000872  0E26               	movlw	low main@msgbuffer
  1406  000874  0101               	movlb	1	; () banked
  1407  000876  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1408  000878  0E0E               	movlw	14
  1409  00087A  EC81  F00D         	call	_ToMainLow_recvmsg
  1410  00087E  0101               	movlb	1	; () banked
  1411  000880  6F4A               	movwf	main@length& (0+255),b
  1412                           
  1413                           ; BSR set to: 1
  1414                           ;main.c: 457: if (length < 0) {
  1415  000882  0101               	movlb	1	; () banked
  1416  000884  BF4A               	btfsc	main@length& (0+255),7,b
  1417  000886  D768               	goto	l4209
  1418                           
  1419                           ; BSR set to: 1
  1420                           ;main.c: 463: else
  1421                           ;main.c: 464: {
  1422                           ;main.c: 465: unsigned char uart_response[14];
  1423                           ;main.c: 466: int jjj;
  1424                           ;main.c: 467: for(jjj=0;jjj<14;jjj++)
  1425                           
  1426                           ; BSR set to: 1
  1427                           
  1428                           ; BSR set to: 1
  1429                           ;main.c: 461: }
  1430                           ;main.c: 462: }
  1431                           
  1432                           ; BSR set to: 1
  1433  000888  0E00               	movlw	0
  1434  00088A  0101               	movlb	1	; () banked
  1435  00088C  6F46               	movwf	(main@jjj+1)& (0+255),b
  1436  00088E  0E00               	movlw	0
  1437  000890  0101               	movlb	1	; () banked
  1438  000892  6F45               	movwf	main@jjj& (0+255),b
  1439  000894                     
  1440                           ; BSR set to: 1
  1441  000894  0101               	movlb	1	; () banked
  1442  000896  5146               	movf	(main@jjj+1)& (0+255),w,b
  1443  000898  0A80               	xorlw	128
  1444  00089A  0F80               	addlw	-128
  1445  00089C  0E0E               	movlw	14
  1446  00089E  B4D8               	btfsc	status,2,c
  1447  0008A0  5D45               	subwf	main@jjj& (0+255),w,b
  1448  0008A2  B0D8               	btfsc	status,0,c
  1449  0008A4  D083               	goto	l4299
  1450                           
  1451                           ; BSR set to: 1
  1452                           ;main.c: 468: {
  1453                           ;main.c: 469: uart_response[jjj] = 0;
  1454                           
  1455                           ; BSR set to: 1
  1456                           
  1457                           ; BSR set to: 1
  1458  0008A6  0101               	movlb	1	; () banked
  1459  0008A8  0E37               	movlw	low main@uart_response
  1460  0008AA  0101               	movlb	1	; () banked
  1461  0008AC  2545               	addwf	main@jjj& (0+255),w,b
  1462  0008AE  6ED9               	movwf	fsr2l,c
  1463  0008B0  0101               	movlb	1	; () banked
  1464  0008B2  0E01               	movlw	high main@uart_response
  1465  0008B4  0101               	movlb	1	; () banked
  1466  0008B6  2146               	addwfc	(main@jjj+1)& (0+255),w,b
  1467  0008B8  6EDA               	movwf	fsr2h,c
  1468  0008BA  0E00               	movlw	0
  1469  0008BC  6EDF               	movwf	indf2,c
  1470                           
  1471                           ; BSR set to: 1
  1472  0008BE  0101               	movlb	1	; () banked
  1473  0008C0  4B45               	infsnz	main@jjj& (0+255),f,b
  1474  0008C2  2B46               	incf	(main@jjj+1)& (0+255),f,b
  1475  0008C4  D7E7               	goto	L1
  1476  0008C6                     l4261:
  1477                           
  1478                           ; BSR set to: 1
  1479                           ;main.c: 474: {
  1480                           ;main.c: 475: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1481  0008C6  0101               	movlb	1	; () banked
  1482  0008C8  0E01               	movlw	high main@t1thread_data
  1483  0008CA  0101               	movlb	1	; () banked
  1484  0008CC  6F0F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1485  0008CE  0101               	movlb	1	; () banked
  1486  0008D0  0E48               	movlw	low main@t1thread_data
  1487  0008D2  0101               	movlb	1	; () banked
  1488  0008D4  6F0E               	movwf	timer1_lthread@tptr& (0+255),b
  1489  0008D6  0101               	movlb	1	; () banked
  1490  0008D8  C14B  F110         	movff	main@msgtype,timer1_lthread@msgtype
  1491  0008DC  0101               	movlb	1	; () banked
  1492  0008DE  6B11               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1493  0008E0  0101               	movlb	1	; () banked
  1494  0008E2  514A               	movf	main@length& (0+255),w,b
  1495  0008E4  0101               	movlb	1	; () banked
  1496  0008E6  6F12               	movwf	timer1_lthread@length& (0+255),b
  1497  0008E8  0101               	movlb	1	; () banked
  1498  0008EA  6B13               	clrf	(timer1_lthread@length+1)& (0+255),b
  1499  0008EC  0101               	movlb	1	; () banked
  1500  0008EE  BF12               	btfsc	timer1_lthread@length& (0+255),7,b
  1501  0008F0  0713               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1502  0008F2  0101               	movlb	1	; () banked
  1503  0008F4  0E01               	movlw	high main@msgbuffer
  1504  0008F6  0101               	movlb	1	; () banked
  1505  0008F8  6F15               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1506  0008FA  0101               	movlb	1	; () banked
  1507  0008FC  0E26               	movlw	low main@msgbuffer
  1508  0008FE  0101               	movlb	1	; () banked
  1509  000900  6F14               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1510  000902  ECEE  F00B         	call	_timer1_lthread	;wreg free
  1511                           
  1512                           ;main.c: 476: break;
  1513  000906  D728               	goto	l4209
  1514  000908                     l4263:
  1515                           
  1516                           ;main.c: 481: {
  1517                           ;main.c: 482: uart_response[0] = 0xf1;
  1518  000908  0EF1               	movlw	241
  1519  00090A  0101               	movlb	1	; () banked
  1520  00090C  6F37               	movwf	main@uart_response& (0+255),b
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;main.c: 483: uart_response[1] = msgbuffer[0];
  1524  00090E  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1525                           
  1526                           ; BSR set to: 1
  1527                           ;main.c: 484: send_uart_message( uart_response );
  1528  000912  0101               	movlb	1	; () banked
  1529  000914  0E01               	movlw	high main@uart_response
  1530  000916  0101               	movlb	1	; () banked
  1531  000918  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1532  00091A  0101               	movlb	1	; () banked
  1533  00091C  0E37               	movlw	low main@uart_response
  1534  00091E  0101               	movlb	1	; () banked
  1535  000920  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1536  000922  ECBC  F00E         	call	_send_uart_message	;wreg free
  1537                           
  1538                           ;main.c: 485: break;
  1539  000926  D718               	goto	l4209
  1540  000928                     l4269:
  1541                           
  1542                           ;main.c: 488: {
  1543                           ;main.c: 489: uart_response[0] = 0xf2;
  1544  000928  0EF2               	movlw	242
  1545  00092A  0101               	movlb	1	; () banked
  1546  00092C  6F37               	movwf	main@uart_response& (0+255),b
  1547                           
  1548                           ; BSR set to: 1
  1549                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1550  00092E  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1551                           
  1552                           ; BSR set to: 1
  1553                           ;main.c: 491: uart_response[2] = msgbuffer[1];
  1554  000932  C127  F139         	movff	main@msgbuffer+1,main@uart_response+2
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;main.c: 492: send_uart_message( uart_response );
  1558  000936  0101               	movlb	1	; () banked
  1559  000938  0E01               	movlw	high main@uart_response
  1560  00093A  0101               	movlb	1	; () banked
  1561  00093C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1562  00093E  0101               	movlb	1	; () banked
  1563  000940  0E37               	movlw	low main@uart_response
  1564  000942  0101               	movlb	1	; () banked
  1565  000944  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1566  000946  ECBC  F00E         	call	_send_uart_message	;wreg free
  1567                           
  1568                           ;main.c: 493: break;
  1569  00094A  D706               	goto	l4209
  1570  00094C                     l4277:
  1571                           
  1572                           ;main.c: 496: {
  1573                           ;main.c: 497: uart_response[0] = 0xf3;
  1574  00094C  0EF3               	movlw	243
  1575  00094E  0101               	movlb	1	; () banked
  1576  000950  6F37               	movwf	main@uart_response& (0+255),b
  1577                           
  1578                           ; BSR set to: 1
  1579                           ;main.c: 498: uart_response[1] = msgbuffer[0];
  1580  000952  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;main.c: 499: send_uart_message( uart_response );
  1584  000956  0101               	movlb	1	; () banked
  1585  000958  0E01               	movlw	high main@uart_response
  1586  00095A  0101               	movlb	1	; () banked
  1587  00095C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1588  00095E  0101               	movlb	1	; () banked
  1589  000960  0E37               	movlw	low main@uart_response
  1590  000962  0101               	movlb	1	; () banked
  1591  000964  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1592  000966  ECBC  F00E         	call	_send_uart_message	;wreg free
  1593                           
  1594                           ;main.c: 500: break;
  1595  00096A  D6F6               	goto	l4209
  1596  00096C                     l4283:
  1597                           
  1598                           ;main.c: 503: {
  1599                           ;main.c: 504: uart_response[0] = 0xf4;
  1600  00096C  0EF4               	movlw	244
  1601  00096E  0101               	movlb	1	; () banked
  1602  000970  6F37               	movwf	main@uart_response& (0+255),b
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;main.c: 505: uart_response[1] = msgbuffer[0];
  1606  000972  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;main.c: 506: send_uart_message( uart_response );
  1610  000976  0101               	movlb	1	; () banked
  1611  000978  0E01               	movlw	high main@uart_response
  1612  00097A  0101               	movlb	1	; () banked
  1613  00097C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1614  00097E  0101               	movlb	1	; () banked
  1615  000980  0E37               	movlw	low main@uart_response
  1616  000982  0101               	movlb	1	; () banked
  1617  000984  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1618  000986  ECBC  F00E         	call	_send_uart_message	;wreg free
  1619                           
  1620                           ;main.c: 507: break;
  1621  00098A  D6E6               	goto	l4209
  1622  00098C                     l4289:
  1623                           
  1624                           ;main.c: 511: {
  1625                           ;main.c: 512: uart_response[0] = 0x11;
  1626  00098C  0E11               	movlw	17
  1627  00098E  0101               	movlb	1	; () banked
  1628  000990  6F37               	movwf	main@uart_response& (0+255),b
  1629                           
  1630                           ; BSR set to: 1
  1631                           ;main.c: 513: uart_response[1] = msgbuffer[0];
  1632  000992  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1633                           
  1634                           ; BSR set to: 1
  1635                           ;main.c: 514: send_uart_message( uart_response );
  1636  000996  0101               	movlb	1	; () banked
  1637  000998  0E01               	movlw	high main@uart_response
  1638  00099A  0101               	movlb	1	; () banked
  1639  00099C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1640  00099E  0101               	movlb	1	; () banked
  1641  0009A0  0E37               	movlw	low main@uart_response
  1642  0009A2  0101               	movlb	1	; () banked
  1643  0009A4  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1644  0009A6  ECBC  F00E         	call	_send_uart_message	;wreg free
  1645                           
  1646                           ;main.c: 515: break;
  1647  0009AA  D6D6               	goto	l4209
  1648  0009AC                     l4299:
  1649  0009AC  0101               	movlb	1	; () banked
  1650  0009AE  514B               	movf	main@msgtype& (0+255),w,b
  1651                           
  1652                           ; Switch size 1, requested type "space"
  1653                           ; Number of cases is 8, Range of values is 11 to 36
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte           25    13 (average)
  1657                           ;	Chosen strategy is simple_byte
  1658  0009B0  0A0B               	xorlw	11	; case 11
  1659  0009B2  B4D8               	btfsc	status,2,c
  1660  0009B4  D788               	goto	l4261
  1661  0009B6  0A15               	xorlw	21	; case 30
  1662  0009B8  B4D8               	btfsc	status,2,c
  1663  0009BA  D7A6               	goto	l4263
  1664  0009BC  0A01               	xorlw	1	; case 31
  1665  0009BE  B4D8               	btfsc	status,2,c
  1666  0009C0  D6CB               	goto	l4209
  1667  0009C2  0A3F               	xorlw	63	; case 32
  1668  0009C4  B4D8               	btfsc	status,2,c
  1669  0009C6  D7A0               	goto	l4263
  1670  0009C8  0A01               	xorlw	1	; case 33
  1671  0009CA  B4D8               	btfsc	status,2,c
  1672  0009CC  D7AD               	goto	l4269
  1673  0009CE  0A03               	xorlw	3	; case 34
  1674  0009D0  B4D8               	btfsc	status,2,c
  1675  0009D2  D7BC               	goto	l4277
  1676  0009D4  0A01               	xorlw	1	; case 35
  1677  0009D6  B4D8               	btfsc	status,2,c
  1678  0009D8  D7C9               	goto	l4283
  1679  0009DA  0A07               	xorlw	7	; case 36
  1680  0009DC  B4D8               	btfsc	status,2,c
  1681  0009DE  D7D6               	goto	l4289
  1682  0009E0  D6BB               	goto	l4209
  1683  0009E2                     __end_of_main:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           prodh	equ	0xFF4
  1690                           prodl	equ	0xFF3
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           indf2	equ	0xFDF
  1694                           fsr2h	equ	0xFDA
  1695                           fsr2l	equ	0xFD9
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _uart_configure *****************
  1699 ;; Defined at:
  1700 ;;		line 22 in file "../src/my_uart.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;		None               void
  1707 ;; Registers used:
  1708 ;;		wreg, status,2
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1714 ;;      Params:         0       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:   10
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text1
  1729  001D58                     __ptext1:
  1730                           	opt stack 0
  1731  001D58                     _uart_configure:
  1732                           	opt stack 20
  1733                           
  1734                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;incstack = 0
  1738  001D58  8E94               	bsf	3988,7,c	;volatile
  1739                           
  1740                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1741  001D5A  9C94               	bcf	3988,6,c	;volatile
  1742                           
  1743                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1744  001D5C  86B8               	bsf	4024,3,c	;volatile
  1745                           
  1746                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1747  001D5E  84AC               	bsf	4012,2,c	;volatile
  1748                           
  1749                           ;my_uart.c: 36: SPBRGH = 0x01;
  1750  001D60  0E01               	movlw	1
  1751  001D62  6EB0               	movwf	4016,c	;volatile
  1752                           
  1753                           ;my_uart.c: 37: SPBRG = 0x38;
  1754  001D64  0E38               	movlw	56
  1755  001D66  6EAF               	movwf	4015,c	;volatile
  1756                           
  1757                           ;my_uart.c: 41: TXSTA1bits.SYNC = 0;
  1758  001D68  98AC               	bcf	4012,4,c	;volatile
  1759                           
  1760                           ;my_uart.c: 42: RCSTA1bits.SPEN = 1;
  1761  001D6A  8EAB               	bsf	4011,7,c	;volatile
  1762                           
  1763                           ;my_uart.c: 45: IPR1bits.TX1IP = 0;
  1764  001D6C  989F               	bcf	3999,4,c	;volatile
  1765                           
  1766                           ;my_uart.c: 47: PIE1bits.TX1IE = 0;
  1767  001D6E  989D               	bcf	3997,4,c	;volatile
  1768                           
  1769                           ;my_uart.c: 48: PIE1bits.RC1IE = 1;
  1770  001D70  8A9D               	bsf	3997,5,c	;volatile
  1771                           
  1772                           ;my_uart.c: 50: TXSTA1bits.TXEN = 1;
  1773  001D72  8AAC               	bsf	4012,5,c	;volatile
  1774                           
  1775                           ;my_uart.c: 51: RCSTA1bits.CREN = 1;
  1776  001D74  88AB               	bsf	4011,4,c	;volatile
  1777  001D76  0012               	return	
  1778  001D78                     __end_of_uart_configure:
  1779                           	opt stack 0
  1780                           tblptru	equ	0xFF8
  1781                           tblptrh	equ	0xFF7
  1782                           tblptrl	equ	0xFF6
  1783                           tablat	equ	0xFF5
  1784                           prodh	equ	0xFF4
  1785                           prodl	equ	0xFF3
  1786                           postinc0	equ	0xFEE
  1787                           wreg	equ	0xFE8
  1788                           indf2	equ	0xFDF
  1789                           fsr2h	equ	0xFDA
  1790                           fsr2l	equ	0xFD9
  1791                           status	equ	0xFD8
  1792                           
  1793 ;; *************** function _timer1_lthread *****************
  1794 ;; Defined at:
  1795 ;;		line 15 in file "../src/timer1_thread.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1798 ;;		 -> main@t1thread_data(2), 
  1799 ;;  msgtype         2   16[BANK1 ] int 
  1800 ;;  length          2   18[BANK1 ] int 
  1801 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1802 ;;		 -> main@msgbuffer(15), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  retval          1   68[BANK0 ] char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2   14[BANK1 ] int 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1814 ;;      Params:         0       0       8       0       0
  1815 ;;      Locals:         0       1       0       0       0
  1816 ;;      Temps:          0       0       0       0       0
  1817 ;;      Totals:         0       1       8       0       0
  1818 ;;Total ram usage:        9 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:   13
  1821 ;; This function calls:
  1822 ;;		_FromMainHigh_sendmsg
  1823 ;;		___lwmod
  1824 ;;		_blink0
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text2
  1831  0017DC                     __ptext2:
  1832                           	opt stack 0
  1833  0017DC                     _timer1_lthread:
  1834                           	opt stack 17
  1835                           
  1836                           ;timer1_thread.c: 16: signed char retval;
  1837                           ;timer1_thread.c: 18: blink0();
  1838                           
  1839                           ;incstack = 0
  1840  0017DC  EC27  F00F         	call	_blink0	;wreg free
  1841                           
  1842                           ;timer1_thread.c: 20: tptr->msgcount++;
  1843  0017E0  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1844  0017E4  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1845  0017E8  2ADE               	incf	postinc2,f,c
  1846  0017EA  0E00               	movlw	0
  1847  0017EC  22DD               	addwfc	postdec2,f,c
  1848                           
  1849                           ;timer1_thread.c: 23: if ((tptr->msgcount % 10) == 9) {
  1850  0017EE  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1851  0017F2  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1852  0017F6  0100               	movlb	0	; () banked
  1853  0017F8  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1854  0017FC  0100               	movlb	0	; () banked
  1855  0017FE  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1856  001802  0E00               	movlw	0
  1857  001804  0100               	movlb	0	; () banked
  1858  001806  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1859  001808  0E0A               	movlw	10
  1860  00180A  0100               	movlb	0	; () banked
  1861  00180C  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1862  00180E  EC1F  F00C         	call	___lwmod	;wreg free
  1863  001812  0100               	movlb	0	; () banked
  1864  001814  51B8               	movf	?___lwmod& (0+255),w,b
  1865  001816  0A09               	xorlw	9
  1866  001818  0100               	movlb	0	; () banked
  1867  00181A  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1868  00181C  A4D8               	btfss	status,2,c
  1869  00181E  0012               	return	
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;timer1_thread.c: 24: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1873  001820  0E14               	movlw	20
  1874  001822  0101               	movlb	1	; () banked
  1875  001824  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1876  001826  0101               	movlb	1	; () banked
  1877  001828  C10F  F10D         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1878  00182C  0101               	movlb	1	; () banked
  1879  00182E  C10E  F10C         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1880  001832  0E02               	movlw	2
  1881  001834  EC04  F00E         	call	_FromMainHigh_sendmsg
  1882  001838  0100               	movlb	0	; () banked
  1883  00183A  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1884  00183C  0012               	return	
  1885  00183E                     __end_of_timer1_lthread:
  1886                           	opt stack 0
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           prodh	equ	0xFF4
  1892                           prodl	equ	0xFF3
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           indf2	equ	0xFDF
  1896                           postinc2	equ	0xFDE
  1897                           postdec2	equ	0xFDD
  1898                           fsr2h	equ	0xFDA
  1899                           fsr2l	equ	0xFD9
  1900                           status	equ	0xFD8
  1901                           
  1902 ;; *************** function _blink0 *****************
  1903 ;; Defined at:
  1904 ;;		line 46 in file "../src/debug.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;		None               void
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1918 ;;      Params:         0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0
  1921 ;;      Totals:         0       0       0       0       0
  1922 ;;Total ram usage:        0 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:   10
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_timer1_lthread
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text3
  1933  001E4E                     __ptext3:
  1934                           	opt stack 0
  1935  001E4E                     _blink0:
  1936                           	opt stack 19
  1937                           
  1938                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;incstack = 0
  1942  001E4E  708A               	btg	3978,0,c	;volatile
  1943  001E50  0012               	return	
  1944  001E52                     __end_of_blink0:
  1945                           	opt stack 0
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           prodh	equ	0xFF4
  1951                           prodl	equ	0xFF3
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           indf2	equ	0xFDF
  1955                           postinc2	equ	0xFDE
  1956                           postdec2	equ	0xFDD
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function ___lwmod *****************
  1962 ;; Defined at:
  1963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  dividend        2   56[BANK0 ] unsigned int 
  1966 ;;  divisor         2   58[BANK0 ] unsigned int 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  counter         1   60[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2   56[BANK0 ] unsigned int 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1978 ;;      Params:         0       4       0       0       0
  1979 ;;      Locals:         0       1       0       0       0
  1980 ;;      Temps:          0       0       0       0       0
  1981 ;;      Totals:         0       5       0       0       0
  1982 ;;Total ram usage:        5 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:   10
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_timer1_lthread
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text4
  1993  00183E                     __ptext4:
  1994                           	opt stack 0
  1995  00183E                     ___lwmod:
  1996                           	opt stack 19
  1997                           
  1998                           ;incstack = 0
  1999  00183E  0100               	movlb	0	; () banked
  2000  001840  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2001  001842  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  2002  001844  B4D8               	btfsc	status,2,c
  2003  001846  D026               	goto	l1120
  2004                           
  2005                           ; BSR set to: 0
  2006  001848  0E01               	movlw	1
  2007  00184A  0100               	movlb	0	; () banked
  2008  00184C  6FBC               	movwf	___lwmod@counter& (0+255),b
  2009  00184E  D006               	goto	l3755
  2010  001850                     l3753:
  2011                           
  2012                           ; BSR set to: 0
  2013  001850  0100               	movlb	0	; () banked
  2014  001852  90D8               	bcf	status,0,c
  2015  001854  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  2016  001856  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2017  001858  0100               	movlb	0	; () banked
  2018  00185A  2BBC               	incf	___lwmod@counter& (0+255),f,b
  2019  00185C                     l3755:
  2020                           
  2021                           ; BSR set to: 0
  2022  00185C  0100               	movlb	0	; () banked
  2023  00185E  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2024  001860  D7F7               	goto	l3753
  2025  001862                     l3757:
  2026                           
  2027                           ; BSR set to: 0
  2028  001862  0100               	movlb	0	; () banked
  2029  001864  51BA               	movf	___lwmod@divisor& (0+255),w,b
  2030  001866  0100               	movlb	0	; () banked
  2031  001868  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  2032  00186A  0100               	movlb	0	; () banked
  2033  00186C  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2034  00186E  0100               	movlb	0	; () banked
  2035  001870  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2036  001872  A0D8               	btfss	status,0,c
  2037  001874  D008               	goto	l3761
  2038                           
  2039                           ; BSR set to: 0
  2040  001876  0100               	movlb	0	; () banked
  2041  001878  51BA               	movf	___lwmod@divisor& (0+255),w,b
  2042  00187A  0100               	movlb	0	; () banked
  2043  00187C  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  2044  00187E  0100               	movlb	0	; () banked
  2045  001880  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2046  001882  0100               	movlb	0	; () banked
  2047  001884  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2048  001886                     l3761:
  2049                           
  2050                           ; BSR set to: 0
  2051  001886  0100               	movlb	0	; () banked
  2052  001888  90D8               	bcf	status,0,c
  2053  00188A  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2054  00188C  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  2055                           
  2056                           ; BSR set to: 0
  2057  00188E  0100               	movlb	0	; () banked
  2058  001890  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  2059  001892  D7E7               	goto	l3757
  2060  001894                     l1120:
  2061                           
  2062                           ; BSR set to: 0
  2063  001894  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  2064  001898  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  2065                           
  2066                           ; BSR set to: 0
  2067  00189C  0012               	return	
  2068  00189E                     __end_of___lwmod:
  2069                           	opt stack 0
  2070                           tblptru	equ	0xFF8
  2071                           tblptrh	equ	0xFF7
  2072                           tblptrl	equ	0xFF6
  2073                           tablat	equ	0xFF5
  2074                           prodh	equ	0xFF4
  2075                           prodl	equ	0xFF3
  2076                           postinc0	equ	0xFEE
  2077                           wreg	equ	0xFE8
  2078                           indf2	equ	0xFDF
  2079                           postinc2	equ	0xFDE
  2080                           postdec2	equ	0xFDD
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _FromMainHigh_sendmsg *****************
  2086 ;; Defined at:
  2087 ;;		line 174 in file "../src/messages.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  length          1    wreg     unsigned char 
  2090 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2091 ;;  data            2   12[BANK1 ] PTR void 
  2092 ;;		 -> main@motor_data(14), main@t1thread_data(2), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  length          1   67[BANK0 ] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      char 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2104 ;;      Params:         0       0       3       0       0
  2105 ;;      Locals:         0       1       0       0       0
  2106 ;;      Temps:          0       0       0       0       0
  2107 ;;      Totals:         0       1       3       0       0
  2108 ;;Total ram usage:        4 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:   12
  2111 ;; This function calls:
  2112 ;;		_send_msg
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;;		_timer1_lthread
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text5
  2120  001C08                     __ptext5:
  2121                           	opt stack 0
  2122  001C08                     _FromMainHigh_sendmsg:
  2123                           	opt stack 17
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;incstack = 0
  2127                           ;FromMainHigh_sendmsg@length stored from wreg
  2128  001C08  0100               	movlb	0	; () banked
  2129  001C0A  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2133  001C0C  0103               	movlb	3	; () banked
  2134  001C0E  0E03               	movlw	high _FromMainHigh_MQ
  2135  001C10  0101               	movlb	1	; () banked
  2136  001C12  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2137  001C14  0103               	movlb	3	; () banked
  2138  001C16  0E00               	movlw	low _FromMainHigh_MQ
  2139  001C18  0101               	movlb	1	; () banked
  2140  001C1A  6F00               	movwf	send_msg@qptr& (0+255),b
  2141  001C1C  C0C3  F102         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2142  001C20  C10B  F103         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2143  001C24  0101               	movlb	1	; () banked
  2144  001C26  C10D  F105         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2145  001C2A  0101               	movlb	1	; () banked
  2146  001C2C  C10C  F104         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2147  001C30  ECF6  F006         	call	_send_msg	;wreg free
  2148  001C34  0012               	return	
  2149  001C36                     __end_of_FromMainHigh_sendmsg:
  2150                           	opt stack 0
  2151                           tblptru	equ	0xFF8
  2152                           tblptrh	equ	0xFF7
  2153                           tblptrl	equ	0xFF6
  2154                           tablat	equ	0xFF5
  2155                           prodh	equ	0xFF4
  2156                           prodl	equ	0xFF3
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           indf2	equ	0xFDF
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _timer0_lthread *****************
  2167 ;; Defined at:
  2168 ;;		line 9 in file "../src/timer0_thread.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2171 ;;		 -> main@t0thread_data(2), 
  2172 ;;  msgtype         2   58[BANK0 ] int 
  2173 ;;  length          2   60[BANK0 ] int 
  2174 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2175 ;;		 -> main@msgbuffer(15), 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  2178 ;;		 -> main@msgbuffer(15), 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2   56[BANK0 ] int 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2188 ;;      Params:         0       8       0       0       0
  2189 ;;      Locals:         0       2       0       0       0
  2190 ;;      Temps:          0       0       0       0       0
  2191 ;;      Totals:         0      10       0       0       0
  2192 ;;Total ram usage:       10 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:   10
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text6
  2203  001DF0                     __ptext6:
  2204                           	opt stack 0
  2205  001DF0                     _timer0_lthread:
  2206                           	opt stack 20
  2207                           
  2208                           ;timer0_thread.c: 10: unsigned int *msgval;
  2209                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2210                           
  2211                           ;incstack = 0
  2212  001DF0  0100               	movlb	0	; () banked
  2213  001DF2  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2214  001DF6  0100               	movlb	0	; () banked
  2215  001DF8  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2216                           
  2217                           ; BSR set to: 0
  2218  001DFC  0012               	return	
  2219  001DFE                     __end_of_timer0_lthread:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           indf2	equ	0xFDF
  2230                           postinc2	equ	0xFDE
  2231                           postdec2	equ	0xFDD
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _init_timer1_lthread *****************
  2237 ;; Defined at:
  2238 ;;		line 7 in file "../src/timer1_thread.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2241 ;;		 -> main@t1thread_data(2), 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;		None               void
  2246 ;; Registers used:
  2247 ;;		wreg, fsr2l, fsr2h
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2253 ;;      Params:         0       2       0       0       0
  2254 ;;      Locals:         0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0
  2256 ;;      Totals:         0       2       0       0       0
  2257 ;;Total ram usage:        2 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:   10
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text7
  2268  001D98                     __ptext7:
  2269                           	opt stack 0
  2270  001D98                     _init_timer1_lthread:
  2271                           	opt stack 20
  2272                           
  2273                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;incstack = 0
  2277  001D98  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2278  001D9C  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2279  001DA0  0E00               	movlw	0
  2280  001DA2  6EDE               	movwf	postinc2,c
  2281  001DA4  0E00               	movlw	0
  2282  001DA6  6EDD               	movwf	postdec2,c
  2283  001DA8  0012               	return	
  2284  001DAA                     __end_of_init_timer1_lthread:
  2285                           	opt stack 0
  2286                           tblptru	equ	0xFF8
  2287                           tblptrh	equ	0xFF7
  2288                           tblptrl	equ	0xFF6
  2289                           tablat	equ	0xFF5
  2290                           prodh	equ	0xFF4
  2291                           prodl	equ	0xFF3
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           indf2	equ	0xFDF
  2295                           postinc2	equ	0xFDE
  2296                           postdec2	equ	0xFDD
  2297                           fsr2h	equ	0xFDA
  2298                           fsr2l	equ	0xFD9
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function _init_queues *****************
  2302 ;; Defined at:
  2303 ;;		line 194 in file "../src/messages.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;		None               void
  2310 ;; Registers used:
  2311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2317 ;;      Params:         0       0       0       0       0
  2318 ;;      Locals:         0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0
  2320 ;;      Totals:         0       0       0       0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:   11
  2324 ;; This function calls:
  2325 ;;		_init_queue
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text8
  2332  0018FE                     __ptext8:
  2333                           	opt stack 0
  2334  0018FE                     _init_queues:
  2335                           	opt stack 19
  2336                           
  2337                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2338                           
  2339                           ;incstack = 0
  2340  0018FE  0E00               	movlw	0
  2341  001900  0100               	movlb	0	; () banked
  2342  001902  6FC7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2346  001904  0101               	movlb	1	; () banked
  2347  001906  0E01               	movlw	high _ToMainLow_MQ
  2348  001908  0100               	movlb	0	; () banked
  2349  00190A  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2350  00190C  0101               	movlb	1	; () banked
  2351  00190E  0E72               	movlw	low _ToMainLow_MQ
  2352  001910  0100               	movlb	0	; () banked
  2353  001912  6FB8               	movwf	init_queue@qptr& (0+255),b
  2354  001914  ECBC  F00B         	call	_init_queue	;wreg free
  2355                           
  2356                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2357  001918  0102               	movlb	2	; () banked
  2358  00191A  0E02               	movlw	high _ToMainHigh_MQ
  2359  00191C  0100               	movlb	0	; () banked
  2360  00191E  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2361  001920  0102               	movlb	2	; () banked
  2362  001922  0E57               	movlw	low _ToMainHigh_MQ
  2363  001924  0100               	movlb	0	; () banked
  2364  001926  6FB8               	movwf	init_queue@qptr& (0+255),b
  2365  001928  ECBC  F00B         	call	_init_queue	;wreg free
  2366                           
  2367                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2368  00192C  0102               	movlb	2	; () banked
  2369  00192E  0E02               	movlw	high _FromMainLow_MQ
  2370  001930  0100               	movlb	0	; () banked
  2371  001932  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2372  001934  0102               	movlb	2	; () banked
  2373  001936  0E00               	movlw	low _FromMainLow_MQ
  2374  001938  0100               	movlb	0	; () banked
  2375  00193A  6FB8               	movwf	init_queue@qptr& (0+255),b
  2376  00193C  ECBC  F00B         	call	_init_queue	;wreg free
  2377                           
  2378                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2379  001940  0103               	movlb	3	; () banked
  2380  001942  0E03               	movlw	high _FromMainHigh_MQ
  2381  001944  0100               	movlb	0	; () banked
  2382  001946  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2383  001948  0103               	movlb	3	; () banked
  2384  00194A  0E00               	movlw	low _FromMainHigh_MQ
  2385  00194C  0100               	movlb	0	; () banked
  2386  00194E  6FB8               	movwf	init_queue@qptr& (0+255),b
  2387  001950  ECBC  F00B         	call	_init_queue	;wreg free
  2388  001954  0012               	return	
  2389  001956                     __end_of_init_queues:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           postinc0	equ	0xFEE
  2398                           wreg	equ	0xFE8
  2399                           indf2	equ	0xFDF
  2400                           postinc2	equ	0xFDE
  2401                           postdec2	equ	0xFDD
  2402                           fsr2h	equ	0xFDA
  2403                           fsr2l	equ	0xFD9
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function _init_queue *****************
  2407 ;; Defined at:
  2408 ;;		line 14 in file "../src/messages.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2411 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  i               1   58[BANK0 ] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2423 ;;      Params:         0       2       0       0       0
  2424 ;;      Locals:         0       1       0       0       0
  2425 ;;      Temps:          0       0       0       0       0
  2426 ;;      Totals:         0       3       0       0       0
  2427 ;;Total ram usage:        3 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:   10
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_init_queues
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text9
  2438  001778                     __ptext9:
  2439                           	opt stack 0
  2440  001778                     _init_queue:
  2441                           	opt stack 19
  2442                           
  2443                           ;messages.c: 15: unsigned char i;
  2444                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2445                           
  2446                           ;incstack = 0
  2447  001778  0100               	movlb	0	; () banked
  2448  00177A  EE20 F055          	lfsr	2,85
  2449  00177E  0100               	movlb	0	; () banked
  2450  001780  51B8               	movf	init_queue@qptr& (0+255),w,b
  2451  001782  26D9               	addwf	fsr2l,f,c
  2452  001784  0100               	movlb	0	; () banked
  2453  001786  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2454  001788  22DA               	addwfc	fsr2h,f,c
  2455  00178A  0E00               	movlw	0
  2456  00178C  6EDF               	movwf	indf2,c
  2457                           
  2458                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2459  00178E  0100               	movlb	0	; () banked
  2460  001790  EE20 F056          	lfsr	2,86
  2461  001794  0100               	movlb	0	; () banked
  2462  001796  51B8               	movf	init_queue@qptr& (0+255),w,b
  2463  001798  26D9               	addwf	fsr2l,f,c
  2464  00179A  0100               	movlb	0	; () banked
  2465  00179C  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2466  00179E  22DA               	addwfc	fsr2h,f,c
  2467  0017A0  0E00               	movlw	0
  2468  0017A2  6EDF               	movwf	indf2,c
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2472  0017A4  0E00               	movlw	0
  2473  0017A6  0100               	movlb	0	; () banked
  2474  0017A8  6FBA               	movwf	init_queue@i& (0+255),b
  2475                           
  2476                           ; BSR set to: 0
  2477  0017AA  0E04               	movlw	4
  2478  0017AC  0100               	movlb	0	; () banked
  2479  0017AE  65BA               	cpfsgt	init_queue@i& (0+255),b
  2480  0017B0  D001               	goto	l2683
  2481  0017B2  0012               	return	
  2482  0017B4                     l2683:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;messages.c: 20: qptr->queue[i].full = 0;
  2486  0017B4  0100               	movlb	0	; () banked
  2487  0017B6  51BA               	movf	init_queue@i& (0+255),w,b
  2488  0017B8  0D11               	mullw	17
  2489  0017BA  50F3               	movf	prodl,w,c
  2490  0017BC  0100               	movlb	0	; () banked
  2491  0017BE  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2492  0017C0  6ED9               	movwf	fsr2l,c
  2493  0017C2  50F4               	movf	prodh,w,c
  2494  0017C4  0100               	movlb	0	; () banked
  2495  0017C6  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2496  0017C8  6EDA               	movwf	fsr2h,c
  2497  0017CA  0E00               	movlw	0
  2498  0017CC  6EDF               	movwf	indf2,c
  2499                           
  2500                           ; BSR set to: 0
  2501  0017CE  0100               	movlb	0	; () banked
  2502  0017D0  2BBA               	incf	init_queue@i& (0+255),f,b
  2503                           
  2504                           ; BSR set to: 0
  2505  0017D2  0E04               	movlw	4
  2506  0017D4  0100               	movlb	0	; () banked
  2507  0017D6  65BA               	cpfsgt	init_queue@i& (0+255),b
  2508  0017D8  D7ED               	goto	l2683
  2509  0017DA  0012               	return	
  2510  0017DC                     __end_of_init_queue:
  2511                           	opt stack 0
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           prodh	equ	0xFF4
  2517                           prodl	equ	0xFF3
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _init_i2c *****************
  2528 ;; Defined at:
  2529 ;;		line 358 in file "../src/my_i2c.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2532 ;;		 -> main@ic(38), 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;		None               void
  2537 ;; Registers used:
  2538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2544 ;;      Params:         0       2       0       0       0
  2545 ;;      Locals:         0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0
  2547 ;;      Totals:         0       2       0       0       0
  2548 ;;Total ram usage:        2 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:   10
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text10
  2559  001712                     __ptext10:
  2560                           	opt stack 0
  2561  001712                     _init_i2c:
  2562                           	opt stack 20
  2563                           
  2564                           ;my_i2c.c: 359: ic_ptr = ic;
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;incstack = 0
  2568  001712  0100               	movlb	0	; () banked
  2569  001714  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2570  001718  0100               	movlb	0	; () banked
  2571  00171A  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;my_i2c.c: 360: ic_ptr->buflen = 0;
  2575  00171E  0100               	movlb	0	; () banked
  2576  001720  EE20 F00E          	lfsr	2,14
  2577  001724  0100               	movlb	0	; () banked
  2578  001726  51C5               	movf	_ic_ptr& (0+255),w,b
  2579  001728  26D9               	addwf	fsr2l,f,c
  2580  00172A  0100               	movlb	0	; () banked
  2581  00172C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2582  00172E  22DA               	addwfc	fsr2h,f,c
  2583  001730  0E00               	movlw	0
  2584  001732  6EDF               	movwf	indf2,c
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;my_i2c.c: 361: ic_ptr->event_count = 0;
  2588  001734  0100               	movlb	0	; () banked
  2589  001736  EE20 F020          	lfsr	2,32
  2590  00173A  0100               	movlb	0	; () banked
  2591  00173C  51C5               	movf	_ic_ptr& (0+255),w,b
  2592  00173E  26D9               	addwf	fsr2l,f,c
  2593  001740  0100               	movlb	0	; () banked
  2594  001742  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2595  001744  22DA               	addwfc	fsr2h,f,c
  2596  001746  0E00               	movlw	0
  2597  001748  6EDF               	movwf	indf2,c
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;my_i2c.c: 362: ic_ptr->status = 0x5;
  2601  00174A  0100               	movlb	0	; () banked
  2602  00174C  EE20 F021          	lfsr	2,33
  2603  001750  0100               	movlb	0	; () banked
  2604  001752  51C5               	movf	_ic_ptr& (0+255),w,b
  2605  001754  26D9               	addwf	fsr2l,f,c
  2606  001756  0100               	movlb	0	; () banked
  2607  001758  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2608  00175A  22DA               	addwfc	fsr2h,f,c
  2609  00175C  0E05               	movlw	5
  2610  00175E  6EDF               	movwf	indf2,c
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;my_i2c.c: 363: ic_ptr->error_count = 0;
  2614  001760  0100               	movlb	0	; () banked
  2615  001762  EE20 F023          	lfsr	2,35
  2616  001766  0100               	movlb	0	; () banked
  2617  001768  51C5               	movf	_ic_ptr& (0+255),w,b
  2618  00176A  26D9               	addwf	fsr2l,f,c
  2619  00176C  0100               	movlb	0	; () banked
  2620  00176E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2621  001770  22DA               	addwfc	fsr2h,f,c
  2622  001772  0E00               	movlw	0
  2623  001774  6EDF               	movwf	indf2,c
  2624                           
  2625                           ; BSR set to: 0
  2626  001776  0012               	return	
  2627  001778                     __end_of_init_i2c:
  2628                           	opt stack 0
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           postinc0	equ	0xFEE
  2636                           wreg	equ	0xFE8
  2637                           indf2	equ	0xFDF
  2638                           postinc2	equ	0xFDE
  2639                           postdec2	equ	0xFDD
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function _i_like_to_moveit_moveit *****************
  2645 ;; Defined at:
  2646 ;;		line 3 in file "C:/Users/alex/Documents/VI/School/Embedded/code/pic_motor/src/src/motor.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  left_side_sp    1    wreg     unsigned char 
  2649 ;;  right_side_s    1   16[BANK1 ] unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  left_side_sp    1   17[BANK1 ] unsigned char 
  2652 ;;  moves           2   18[BANK1 ] unsigned char [2]
  2653 ;; Return value:  Size  Location     Type
  2654 ;;		None               void
  2655 ;; Registers used:
  2656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2662 ;;      Params:         0       0       1       0       0
  2663 ;;      Locals:         0       0       3       0       0
  2664 ;;      Temps:          0       0       0       0       0
  2665 ;;      Totals:         0       0       4       0       0
  2666 ;;Total ram usage:        4 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:   14
  2669 ;; This function calls:
  2670 ;;		_send_uart_message
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text11
  2677  001A86                     __ptext11:
  2678                           	opt stack 0
  2679  001A86                     _i_like_to_moveit_moveit:
  2680                           	opt stack 16
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;incstack = 0
  2684                           ;i_like_to_moveit_moveit@left_side_speed stored from wreg
  2685  001A86  0101               	movlb	1	; () banked
  2686  001A88  6F11               	movwf	i_like_to_moveit_moveit@left_side_speed& (0+255),b
  2687                           
  2688                           ; BSR set to: 1
  2689                           ;motor.c: 14: unsigned char moves[2];
  2690                           ;motor.c: 17: moves[0] = ((signed char)left_side_speed>>1) + 192;
  2691  001A8A  0101               	movlb	1	; () banked
  2692  001A8C  3511               	rlcf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2693  001A8E  3111               	rrcf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2694  001A90  0FC0               	addlw	192
  2695  001A92  0101               	movlb	1	; () banked
  2696  001A94  6F12               	movwf	i_like_to_moveit_moveit@moves& (0+255),b
  2697                           
  2698                           ;motor.c: 18: moves[1] = ((signed char)right_side_speed>>1) + 64;
  2699  001A96  0101               	movlb	1	; () banked
  2700  001A98  3510               	rlcf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2701  001A9A  3110               	rrcf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2702  001A9C  0F40               	addlw	64
  2703  001A9E  0101               	movlb	1	; () banked
  2704  001AA0  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2705                           
  2706                           ; BSR set to: 1
  2707                           ;motor.c: 20: if(moves[1] == 0)
  2708  001AA2  0101               	movlb	1	; () banked
  2709  001AA4  6713               	tstfsz	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2710  001AA6  D003               	goto	l4115
  2711                           
  2712                           ; BSR set to: 1
  2713                           ;motor.c: 21: {
  2714                           ;motor.c: 22: moves[1] = 1;
  2715  001AA8  0E01               	movlw	1
  2716  001AAA  0101               	movlb	1	; () banked
  2717  001AAC  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2718  001AAE                     l4115:
  2719                           
  2720                           ; BSR set to: 1
  2721                           ;motor.c: 23: }
  2722                           ;motor.c: 25: send_uart_message(moves);
  2723  001AAE  0101               	movlb	1	; () banked
  2724  001AB0  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2725  001AB2  0101               	movlb	1	; () banked
  2726  001AB4  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2727  001AB6  0101               	movlb	1	; () banked
  2728  001AB8  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2729  001ABA  0101               	movlb	1	; () banked
  2730  001ABC  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2731  001ABE  ECBC  F00E         	call	_send_uart_message	;wreg free
  2732  001AC2  0012               	return	
  2733  001AC4                     __end_of_i_like_to_moveit_moveit:
  2734                           	opt stack 0
  2735                           tblptru	equ	0xFF8
  2736                           tblptrh	equ	0xFF7
  2737                           tblptrl	equ	0xFF6
  2738                           tablat	equ	0xFF5
  2739                           prodh	equ	0xFF4
  2740                           prodl	equ	0xFF3
  2741                           postinc0	equ	0xFEE
  2742                           wreg	equ	0xFE8
  2743                           indf2	equ	0xFDF
  2744                           postinc2	equ	0xFDE
  2745                           postdec2	equ	0xFDD
  2746                           fsr2h	equ	0xFDA
  2747                           fsr2l	equ	0xFD9
  2748                           status	equ	0xFD8
  2749                           
  2750 ;; *************** function _send_uart_message *****************
  2751 ;; Defined at:
  2752 ;;		line 186 in file "../src/my_uart.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  message_ptr     2   14[BANK1 ] PTR unsigned char 
  2755 ;;		 -> i_like_to_moveit_moveit@moves(2), main@uart_response(14), 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  message_q_co    1   68[BANK0 ] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      unsigned char 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2767 ;;      Params:         0       0       2       0       0
  2768 ;;      Locals:         0       1       0       0       0
  2769 ;;      Temps:          0       0       0       0       0
  2770 ;;      Totals:         0       1       2       0       0
  2771 ;;Total ram usage:        3 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:   13
  2774 ;; This function calls:
  2775 ;;		_FromMainLow_sendmsg
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;;		_i_like_to_moveit_moveit
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text12
  2783  001D78                     __ptext12:
  2784                           	opt stack 0
  2785  001D78                     _send_uart_message:
  2786                           	opt stack 17
  2787                           
  2788                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(2,31,(void *) messag
      +                          e_ptr );
  2789                           
  2790                           ;incstack = 0
  2791  001D78  0E1F               	movlw	31
  2792  001D7A  0101               	movlb	1	; () banked
  2793  001D7C  6F0B               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2794  001D7E  0101               	movlb	1	; () banked
  2795  001D80  C10F  F10D         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2796  001D84  0101               	movlb	1	; () banked
  2797  001D86  C10E  F10C         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2798  001D8A  0E02               	movlw	2
  2799  001D8C  EC1B  F00E         	call	_FromMainLow_sendmsg
  2800  001D90  0100               	movlb	0	; () banked
  2801  001D92  6FC4               	movwf	send_uart_message@message_q_code& (0+255),b
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;my_uart.c: 193: }
  2805                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;my_uart.c: 191: {
  2809                           ;my_uart.c: 192: return 0x02;
  2810                           ;	Return value of _send_uart_message is never used
  2811                           
  2812                           ;my_uart.c: 190: if( message_q_code == -1)
  2813  001D94  889D               	bsf	3997,4,c	;volatile
  2814                           
  2815                           ; BSR set to: 0
  2816                           
  2817                           ;my_uart.c: 196: return 0x00;
  2818                           ;	Return value of _send_uart_message is never used
  2819  001D96  0012               	return	
  2820  001D98                     __end_of_send_uart_message:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           indf2	equ	0xFDF
  2831                           postinc2	equ	0xFDE
  2832                           postdec2	equ	0xFDD
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837 ;; *************** function _FromMainLow_sendmsg *****************
  2838 ;; Defined at:
  2839 ;;		line 150 in file "../src/messages.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  length          1    wreg     unsigned char 
  2842 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2843 ;;  data            2   12[BANK1 ] PTR void 
  2844 ;;		 -> i_like_to_moveit_moveit@moves(2), main@uart_response(14), 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  length          1   67[BANK0 ] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      char 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2856 ;;      Params:         0       0       3       0       0
  2857 ;;      Locals:         0       1       0       0       0
  2858 ;;      Temps:          0       0       0       0       0
  2859 ;;      Totals:         0       1       3       0       0
  2860 ;;Total ram usage:        4 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:   12
  2863 ;; This function calls:
  2864 ;;		_send_msg
  2865 ;; This function is called by:
  2866 ;;		_send_uart_message
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text13
  2871  001C36                     __ptext13:
  2872                           	opt stack 0
  2873  001C36                     _FromMainLow_sendmsg:
  2874                           	opt stack 17
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;incstack = 0
  2878                           ;FromMainLow_sendmsg@length stored from wreg
  2879  001C36  0100               	movlb	0	; () banked
  2880  001C38  6FC3               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2884  001C3A  0102               	movlb	2	; () banked
  2885  001C3C  0E02               	movlw	high _FromMainLow_MQ
  2886  001C3E  0101               	movlb	1	; () banked
  2887  001C40  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2888  001C42  0102               	movlb	2	; () banked
  2889  001C44  0E00               	movlw	low _FromMainLow_MQ
  2890  001C46  0101               	movlb	1	; () banked
  2891  001C48  6F00               	movwf	send_msg@qptr& (0+255),b
  2892  001C4A  C0C3  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  2893  001C4E  C10B  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2894  001C52  0101               	movlb	1	; () banked
  2895  001C54  C10D  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2896  001C58  0101               	movlb	1	; () banked
  2897  001C5A  C10C  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  2898  001C5E  ECF6  F006         	call	_send_msg	;wreg free
  2899  001C62  0012               	return	
  2900  001C64                     __end_of_FromMainLow_sendmsg:
  2901                           	opt stack 0
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           prodh	equ	0xFF4
  2907                           prodl	equ	0xFF3
  2908                           postinc0	equ	0xFEE
  2909                           wreg	equ	0xFE8
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _send_msg *****************
  2918 ;; Defined at:
  2919 ;;		line 24 in file "../src/messages.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2922 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2923 ;;  length          1    2[BANK1 ] unsigned char 
  2924 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2925 ;;  data            2    4[BANK1 ] PTR void 
  2926 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  2927 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  2928 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  2929 ;;		 -> main@t1thread_data(2), main@ic(38), 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2932 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  2933 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2934 ;;  tlength         2    6[BANK1 ] unsigned int 
  2935 ;;  slot            1    8[BANK1 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      char 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2945 ;;      Params:         0       0       6       0       0
  2946 ;;      Locals:         0       0       5       0       0
  2947 ;;      Temps:          0       1       0       0       0
  2948 ;;      Totals:         0       1      11       0       0
  2949 ;;Total ram usage:       12 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:   11
  2952 ;; This function calls:
  2953 ;;		___awmod
  2954 ;;		_memcpy
  2955 ;; This function is called by:
  2956 ;;		_FromMainLow_sendmsg
  2957 ;;		_FromMainHigh_sendmsg
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text14
  2962  000DEC                     __ptext14:
  2963                           	opt stack 0
  2964  000DEC                     _send_msg:
  2965                           	opt stack 17
  2966                           
  2967                           ;messages.c: 25: unsigned char slot;
  2968                           ;messages.c: 27: msg *qmsg;
  2969                           ;messages.c: 28: size_t tlength = length;
  2970                           
  2971                           ;incstack = 0
  2972  000DEC  0101               	movlb	1	; () banked
  2973  000DEE  C102  F106         	movff	send_msg@length,send_msg@tlength
  2974  000DF2  0101               	movlb	1	; () banked
  2975  000DF4  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  2976                           
  2977                           ; BSR set to: 1
  2978                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2979  000DF6  0101               	movlb	1	; () banked
  2980  000DF8  EE20 F055          	lfsr	2,85
  2981  000DFC  0101               	movlb	1	; () banked
  2982  000DFE  5100               	movf	send_msg@qptr& (0+255),w,b
  2983  000E00  26D9               	addwf	fsr2l,f,c
  2984  000E02  0101               	movlb	1	; () banked
  2985  000E04  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2986  000E06  22DA               	addwfc	fsr2h,f,c
  2987  000E08  50DF               	movf	indf2,w,c
  2988  000E0A  0101               	movlb	1	; () banked
  2989  000E0C  6F08               	movwf	send_msg@slot& (0+255),b
  2990                           
  2991                           ; BSR set to: 1
  2992                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2993  000E0E  0101               	movlb	1	; () banked
  2994  000E10  5108               	movf	send_msg@slot& (0+255),w,b
  2995  000E12  0D11               	mullw	17
  2996  000E14  50F3               	movf	prodl,w,c
  2997  000E16  0101               	movlb	1	; () banked
  2998  000E18  2500               	addwf	send_msg@qptr& (0+255),w,b
  2999  000E1A  0101               	movlb	1	; () banked
  3000  000E1C  6F09               	movwf	send_msg@qmsg& (0+255),b
  3001  000E1E  50F4               	movf	prodh,w,c
  3002  000E20  0101               	movlb	1	; () banked
  3003  000E22  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3004  000E24  0101               	movlb	1	; () banked
  3005  000E26  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  3006                           
  3007                           ; BSR set to: 1
  3008                           ;messages.c: 41: if (qmsg->full != 0) {
  3009  000E28  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3010  000E2C  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3011  000E30  50DF               	movf	indf2,w,c
  3012  000E32  B4D8               	btfsc	status,2,c
  3013  000E34  D002               	goto	l3563
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;messages.c: 42: return (-1);
  3017  000E36  0EFF               	movlw	255
  3018  000E38  0012               	return	
  3019  000E3A                     l3563:
  3020                           
  3021                           ; BSR set to: 1
  3022                           ;messages.c: 43: }
  3023                           ;messages.c: 46: qmsg->length = length;
  3024  000E3A  0101               	movlb	1	; () banked
  3025  000E3C  EE20 F001          	lfsr	2,1
  3026  000E40  0101               	movlb	1	; () banked
  3027  000E42  5109               	movf	send_msg@qmsg& (0+255),w,b
  3028  000E44  26D9               	addwf	fsr2l,f,c
  3029  000E46  0101               	movlb	1	; () banked
  3030  000E48  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3031  000E4A  22DA               	addwfc	fsr2h,f,c
  3032  000E4C  0101               	movlb	1	; () banked
  3033  000E4E  C102  FFDF         	movff	send_msg@length,indf2
  3034                           
  3035                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3036  000E52  0101               	movlb	1	; () banked
  3037  000E54  EE20 F002          	lfsr	2,2
  3038  000E58  0101               	movlb	1	; () banked
  3039  000E5A  5109               	movf	send_msg@qmsg& (0+255),w,b
  3040  000E5C  26D9               	addwf	fsr2l,f,c
  3041  000E5E  0101               	movlb	1	; () banked
  3042  000E60  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3043  000E62  22DA               	addwfc	fsr2h,f,c
  3044  000E64  0101               	movlb	1	; () banked
  3045  000E66  C103  FFDF         	movff	send_msg@msgtype,indf2
  3046                           
  3047                           ; BSR set to: 1
  3048                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3049  000E6A  0E03               	movlw	3
  3050  000E6C  0101               	movlb	1	; () banked
  3051  000E6E  2509               	addwf	send_msg@qmsg& (0+255),w,b
  3052  000E70  0100               	movlb	0	; () banked
  3053  000E72  6FB8               	movwf	memcpy@d1& (0+255),b
  3054  000E74  0E00               	movlw	0
  3055  000E76  0101               	movlb	1	; () banked
  3056  000E78  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3057  000E7A  0100               	movlb	0	; () banked
  3058  000E7C  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  3059  000E7E  0101               	movlb	1	; () banked
  3060  000E80  0100               	movlb	0	; () banked
  3061  000E82  C105  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  3062  000E86  0101               	movlb	1	; () banked
  3063  000E88  0100               	movlb	0	; () banked
  3064  000E8A  C104  F0BA         	movff	send_msg@data,memcpy@s1
  3065  000E8E  C106  F0BC         	movff	send_msg@tlength,memcpy@n
  3066  000E92  C107  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  3067  000E96  ECD3  F00C         	call	_memcpy	;wreg free
  3068                           
  3069                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  3070  000E9A  0101               	movlb	1	; () banked
  3071  000E9C  EE20 F055          	lfsr	2,85
  3072  000EA0  0101               	movlb	1	; () banked
  3073  000EA2  5100               	movf	send_msg@qptr& (0+255),w,b
  3074  000EA4  26D9               	addwf	fsr2l,f,c
  3075  000EA6  0101               	movlb	1	; () banked
  3076  000EA8  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3077  000EAA  22DA               	addwfc	fsr2h,f,c
  3078  000EAC  0101               	movlb	1	; () banked
  3079  000EAE  EE10 F055          	lfsr	1,85
  3080  000EB2  0101               	movlb	1	; () banked
  3081  000EB4  5100               	movf	send_msg@qptr& (0+255),w,b
  3082  000EB6  26E1               	addwf	fsr1l,f,c
  3083  000EB8  0101               	movlb	1	; () banked
  3084  000EBA  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3085  000EBC  22E2               	addwfc	fsr1h,f,c
  3086  000EBE  50E7               	movf	indf1,w,c
  3087  000EC0  0100               	movlb	0	; () banked
  3088  000EC2  6FC2               	movwf	??_send_msg& (0+255),b
  3089  000EC4  0E01               	movlw	1
  3090  000EC6  0100               	movlb	0	; () banked
  3091  000EC8  25C2               	addwf	??_send_msg& (0+255),w,b
  3092  000ECA  0100               	movlb	0	; () banked
  3093  000ECC  6FB8               	movwf	___awmod@dividend& (0+255),b
  3094  000ECE  0100               	movlb	0	; () banked
  3095  000ED0  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3096  000ED2  0E00               	movlw	0
  3097  000ED4  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3098  000ED6  0E00               	movlw	0
  3099  000ED8  0100               	movlb	0	; () banked
  3100  000EDA  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3101  000EDC  0E05               	movlw	5
  3102  000EDE  0100               	movlb	0	; () banked
  3103  000EE0  6FBA               	movwf	___awmod@divisor& (0+255),b
  3104  000EE2  EC5F  F009         	call	___awmod	;wreg free
  3105  000EE6  0100               	movlb	0	; () banked
  3106  000EE8  51B8               	movf	?___awmod& (0+255),w,b
  3107  000EEA  6EDF               	movwf	indf2,c
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;messages.c: 59: qmsg->full = 1;
  3111  000EEC  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3112  000EF0  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3113  000EF4  0E01               	movlw	1
  3114  000EF6  6EDF               	movwf	indf2,c
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;messages.c: 60: return (1);
  3118  000EF8  0E01               	movlw	1
  3119  000EFA  0012               	return	
  3120  000EFC                     __end_of_send_msg:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           postinc0	equ	0xFEE
  3129                           wreg	equ	0xFE8
  3130                           indf1	equ	0xFE7
  3131                           fsr1h	equ	0xFE2
  3132                           fsr1l	equ	0xFE1
  3133                           indf2	equ	0xFDF
  3134                           postinc2	equ	0xFDE
  3135                           postdec2	equ	0xFDD
  3136                           fsr2h	equ	0xFDA
  3137                           fsr2l	equ	0xFD9
  3138                           status	equ	0xFD8
  3139                           
  3140 ;; *************** function _i2c_configure_slave *****************
  3141 ;; Defined at:
  3142 ;;		line 369 in file "../src/my_i2c.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  addr            1    wreg     unsigned char 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  addr            1   56[BANK0 ] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       1       0       0       0
  3158 ;;      Temps:          0       0       0       0       0
  3159 ;;      Totals:         0       1       0       0       0
  3160 ;;Total ram usage:        1 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:   10
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text15
  3171  001CBE                     __ptext15:
  3172                           	opt stack 0
  3173  001CBE                     _i2c_configure_slave:
  3174                           	opt stack 20
  3175                           
  3176                           ;incstack = 0
  3177                           ;i2c_configure_slave@addr stored from wreg
  3178  001CBE  0100               	movlb	0	; () banked
  3179  001CC0  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;my_i2c.c: 381: TRISCbits.TRISC3 = 1;
  3183  001CC2  8694               	bsf	3988,3,c	;volatile
  3184                           
  3185                           ;my_i2c.c: 382: TRISCbits.TRISC4 = 1;
  3186  001CC4  8894               	bsf	3988,4,c	;volatile
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;my_i2c.c: 387: SSPADD = addr;
  3190  001CC6  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;my_i2c.c: 389: SSPSTAT = 0x0;
  3194  001CCA  0E00               	movlw	0
  3195  001CCC  6EC7               	movwf	4039,c	;volatile
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;my_i2c.c: 390: SSPCON1 = 0x0;
  3199  001CCE  0E00               	movlw	0
  3200  001CD0  6EC6               	movwf	4038,c	;volatile
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;my_i2c.c: 391: SSPCON2 = 0x0;
  3204  001CD2  0E00               	movlw	0
  3205  001CD4  6EC5               	movwf	4037,c	;volatile
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;my_i2c.c: 392: SSPCON1 |= 0x0E;
  3209  001CD6  0E0E               	movlw	14
  3210  001CD8  12C6               	iorwf	4038,f,c	;volatile
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;my_i2c.c: 393: SSPSTAT |= 0b10000000;
  3214  001CDA  8EC7               	bsf	4039,7,c	;volatile
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;my_i2c.c: 396: TRISCbits.TRISC3 = 1;
  3218  001CDC  8694               	bsf	3988,3,c	;volatile
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;my_i2c.c: 397: TRISCbits.TRISC4 = 1;
  3222  001CDE  8894               	bsf	3988,4,c	;volatile
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;my_i2c.c: 418: SSPCON2bits.SEN = 1;
  3226  001CE0  80C5               	bsf	4037,0,c	;volatile
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;my_i2c.c: 419: SSPCON1 |= 0b00100000;
  3230  001CE2  8AC6               	bsf	4038,5,c	;volatile
  3231                           
  3232                           ; BSR set to: 0
  3233  001CE4  0012               	return	
  3234  001CE6                     __end_of_i2c_configure_slave:
  3235                           	opt stack 0
  3236                           tblptru	equ	0xFF8
  3237                           tblptrh	equ	0xFF7
  3238                           tblptrl	equ	0xFF6
  3239                           tablat	equ	0xFF5
  3240                           prodh	equ	0xFF4
  3241                           prodl	equ	0xFF3
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           indf1	equ	0xFE7
  3245                           fsr1h	equ	0xFE2
  3246                           fsr1l	equ	0xFE1
  3247                           indf2	equ	0xFDF
  3248                           postinc2	equ	0xFDE
  3249                           postdec2	equ	0xFDD
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _enable_interrupts *****************
  3255 ;; Defined at:
  3256 ;;		line 14 in file "../src/interrupts.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;		None               void
  3263 ;; Registers used:
  3264 ;;		None
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3270 ;;      Params:         0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:   10
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text16
  3285  001E08                     __ptext16:
  3286                           	opt stack 0
  3287  001E08                     _enable_interrupts:
  3288                           	opt stack 20
  3289                           
  3290                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;incstack = 0
  3294  001E08  8ED0               	bsf	4048,7,c	;volatile
  3295                           
  3296                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3297  001E0A  8EF2               	bsf	intcon,7,c	;volatile
  3298                           
  3299                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3300  001E0C  8CF2               	bsf	intcon,6,c	;volatile
  3301  001E0E  0012               	return	
  3302  001E10                     __end_of_enable_interrupts:
  3303                           	opt stack 0
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           prodh	equ	0xFF4
  3309                           prodl	equ	0xFF3
  3310                           intcon	equ	0xFF2
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           indf1	equ	0xFE7
  3314                           fsr1h	equ	0xFE2
  3315                           fsr1l	equ	0xFE1
  3316                           indf2	equ	0xFDF
  3317                           postinc2	equ	0xFDE
  3318                           postdec2	equ	0xFDD
  3319                           fsr2h	equ	0xFDA
  3320                           fsr2l	equ	0xFD9
  3321                           status	equ	0xFD8
  3322                           
  3323 ;; *************** function _debug_configure *****************
  3324 ;; Defined at:
  3325 ;;		line 3 in file "../src/debug.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;		None               void
  3332 ;; Registers used:
  3333 ;;		wreg, status,2
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3339 ;;      Params:         0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0
  3342 ;;      Totals:         0       0       0       0       0
  3343 ;;Total ram usage:        0 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:   10
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text17
  3354  001DFE                     __ptext17:
  3355                           	opt stack 0
  3356  001DFE                     _debug_configure:
  3357                           	opt stack 20
  3358                           
  3359                           ;debug.c: 5: TRISD = 0x00;
  3360                           
  3361                           ;incstack = 0
  3362  001DFE  0E00               	movlw	0
  3363  001E00  6E95               	movwf	3989,c	;volatile
  3364                           
  3365                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3366  001E02  9093               	bcf	3987,0,c	;volatile
  3367                           
  3368                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3369  001E04  9293               	bcf	3987,1,c	;volatile
  3370  001E06  0012               	return	
  3371  001E08                     __end_of_debug_configure:
  3372                           	opt stack 0
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           prodh	equ	0xFF4
  3378                           prodl	equ	0xFF3
  3379                           intcon	equ	0xFF2
  3380                           postinc0	equ	0xFEE
  3381                           wreg	equ	0xFE8
  3382                           indf1	equ	0xFE7
  3383                           fsr1h	equ	0xFE2
  3384                           fsr1l	equ	0xFE1
  3385                           indf2	equ	0xFDF
  3386                           postinc2	equ	0xFDE
  3387                           postdec2	equ	0xFDD
  3388                           fsr2h	equ	0xFDA
  3389                           fsr2l	equ	0xFD9
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function _blip3 *****************
  3393 ;; Defined at:
  3394 ;;		line 32 in file "../src/debug.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;		None               void
  3401 ;; Registers used:
  3402 ;;		None
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3408 ;;      Params:         0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0
  3411 ;;      Totals:         0       0       0       0       0
  3412 ;;Total ram usage:        0 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:   10
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text18
  3423  001E10                     __ptext18:
  3424                           	opt stack 0
  3425  001E10                     _blip3:
  3426                           	opt stack 20
  3427                           
  3428                           ;debug.c: 34: LATDbits.LD6 = 0;
  3429                           
  3430                           ;incstack = 0
  3431  001E10  9C8C               	bcf	3980,6,c	;volatile
  3432                           
  3433                           ;debug.c: 35: LATDbits.LD6 = 1;
  3434  001E12  8C8C               	bsf	3980,6,c	;volatile
  3435                           
  3436                           ;debug.c: 36: LATDbits.LD6 = 0;
  3437  001E14  9C8C               	bcf	3980,6,c	;volatile
  3438  001E16  0012               	return	
  3439  001E18                     __end_of_blip3:
  3440                           	opt stack 0
  3441                           tblptru	equ	0xFF8
  3442                           tblptrh	equ	0xFF7
  3443                           tblptrl	equ	0xFF6
  3444                           tablat	equ	0xFF5
  3445                           prodh	equ	0xFF4
  3446                           prodl	equ	0xFF3
  3447                           intcon	equ	0xFF2
  3448                           postinc0	equ	0xFEE
  3449                           wreg	equ	0xFE8
  3450                           indf1	equ	0xFE7
  3451                           fsr1h	equ	0xFE2
  3452                           fsr1l	equ	0xFE1
  3453                           indf2	equ	0xFDF
  3454                           postinc2	equ	0xFDE
  3455                           postdec2	equ	0xFDD
  3456                           fsr2h	equ	0xFDA
  3457                           fsr2l	equ	0xFD9
  3458                           status	equ	0xFD8
  3459                           
  3460 ;; *************** function _blip2 *****************
  3461 ;; Defined at:
  3462 ;;		line 25 in file "../src/debug.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;		None               void
  3469 ;; Registers used:
  3470 ;;		None
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3476 ;;      Params:         0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:   10
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text19
  3491  001E18                     __ptext19:
  3492                           	opt stack 0
  3493  001E18                     _blip2:
  3494                           	opt stack 20
  3495                           
  3496                           ;debug.c: 27: LATDbits.LD5 = 0;
  3497                           
  3498                           ;incstack = 0
  3499  001E18  9A8C               	bcf	3980,5,c	;volatile
  3500                           
  3501                           ;debug.c: 28: LATDbits.LD5 = 1;
  3502  001E1A  8A8C               	bsf	3980,5,c	;volatile
  3503                           
  3504                           ;debug.c: 29: LATDbits.LD5 = 0;
  3505  001E1C  9A8C               	bcf	3980,5,c	;volatile
  3506  001E1E  0012               	return	
  3507  001E20                     __end_of_blip2:
  3508                           	opt stack 0
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           prodh	equ	0xFF4
  3514                           prodl	equ	0xFF3
  3515                           intcon	equ	0xFF2
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           indf1	equ	0xFE7
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           indf2	equ	0xFDF
  3522                           postinc2	equ	0xFDE
  3523                           postdec2	equ	0xFDD
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _blip1 *****************
  3529 ;; Defined at:
  3530 ;;		line 18 in file "../src/debug.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;		None               void
  3537 ;; Registers used:
  3538 ;;		None
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3544 ;;      Params:         0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:   10
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text20
  3559  001E20                     __ptext20:
  3560                           	opt stack 0
  3561  001E20                     _blip1:
  3562                           	opt stack 20
  3563                           
  3564                           ;debug.c: 20: LATDbits.LD4 = 0;
  3565                           
  3566                           ;incstack = 0
  3567  001E20  988C               	bcf	3980,4,c	;volatile
  3568                           
  3569                           ;debug.c: 21: LATDbits.LD4 = 1;
  3570  001E22  888C               	bsf	3980,4,c	;volatile
  3571                           
  3572                           ;debug.c: 22: LATDbits.LD4 = 0;
  3573  001E24  988C               	bcf	3980,4,c	;volatile
  3574  001E26  0012               	return	
  3575  001E28                     __end_of_blip1:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           indf1	equ	0xFE7
  3587                           fsr1h	equ	0xFE2
  3588                           fsr1l	equ	0xFE1
  3589                           indf2	equ	0xFDF
  3590                           postinc2	equ	0xFDE
  3591                           postdec2	equ	0xFDD
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function _blip *****************
  3597 ;; Defined at:
  3598 ;;		line 11 in file "../src/debug.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;		None               void
  3605 ;; Registers used:
  3606 ;;		None
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3612 ;;      Params:         0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:   10
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text21
  3627  001E28                     __ptext21:
  3628                           	opt stack 0
  3629  001E28                     _blip:
  3630                           	opt stack 20
  3631                           
  3632                           ;debug.c: 13: LATDbits.LD2 = 0;
  3633                           
  3634                           ;incstack = 0
  3635  001E28  948C               	bcf	3980,2,c	;volatile
  3636                           
  3637                           ;debug.c: 14: LATDbits.LD2 = 1;
  3638  001E2A  848C               	bsf	3980,2,c	;volatile
  3639                           
  3640                           ;debug.c: 15: LATDbits.LD2 = 0;
  3641  001E2C  948C               	bcf	3980,2,c	;volatile
  3642  001E2E  0012               	return	
  3643  001E30                     __end_of_blip:
  3644                           	opt stack 0
  3645                           tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           prodh	equ	0xFF4
  3650                           prodl	equ	0xFF3
  3651                           intcon	equ	0xFF2
  3652                           postinc0	equ	0xFEE
  3653                           wreg	equ	0xFE8
  3654                           indf1	equ	0xFE7
  3655                           fsr1h	equ	0xFE2
  3656                           fsr1l	equ	0xFE1
  3657                           indf2	equ	0xFDF
  3658                           postinc2	equ	0xFDE
  3659                           postdec2	equ	0xFDD
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function _ToMainLow_recvmsg *****************
  3665 ;; Defined at:
  3666 ;;		line 112 in file "../src/messages.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  maxlength       1    wreg     unsigned char 
  3669 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3670 ;;		 -> main@msgtype(1), 
  3671 ;;  data            2   14[BANK1 ] PTR void 
  3672 ;;		 -> main@msgbuffer(15), 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      char 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3684 ;;      Params:         0       0       4       0       0
  3685 ;;      Locals:         0       1       0       0       0
  3686 ;;      Temps:          0       0       0       0       0
  3687 ;;      Totals:         0       1       4       0       0
  3688 ;;Total ram usage:        5 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:   12
  3691 ;; This function calls:
  3692 ;;		_recv_msg
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text22
  3699  001B02                     __ptext22:
  3700                           	opt stack 0
  3701  001B02                     _ToMainLow_recvmsg:
  3702                           	opt stack 18
  3703                           
  3704                           ;incstack = 0
  3705                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3706  001B02  0100               	movlb	0	; () banked
  3707  001B04  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3711  001B06  0101               	movlb	1	; () banked
  3712  001B08  0E01               	movlw	high _ToMainLow_MQ
  3713  001B0A  0101               	movlb	1	; () banked
  3714  001B0C  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3715  001B0E  0101               	movlb	1	; () banked
  3716  001B10  0E72               	movlw	low _ToMainLow_MQ
  3717  001B12  0101               	movlb	1	; () banked
  3718  001B14  6F00               	movwf	recv_msg@qptr& (0+255),b
  3719  001B16  C0C4  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3720  001B1A  0101               	movlb	1	; () banked
  3721  001B1C  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3722  001B20  0101               	movlb	1	; () banked
  3723  001B22  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3724  001B26  0101               	movlb	1	; () banked
  3725  001B28  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3726  001B2C  0101               	movlb	1	; () banked
  3727  001B2E  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3728  001B32  ECB6  F005         	call	_recv_msg	;wreg free
  3729  001B36  0012               	return	
  3730  001B38                     __end_of_ToMainLow_recvmsg:
  3731                           	opt stack 0
  3732                           tblptru	equ	0xFF8
  3733                           tblptrh	equ	0xFF7
  3734                           tblptrl	equ	0xFF6
  3735                           tablat	equ	0xFF5
  3736                           prodh	equ	0xFF4
  3737                           prodl	equ	0xFF3
  3738                           intcon	equ	0xFF2
  3739                           postinc0	equ	0xFEE
  3740                           wreg	equ	0xFE8
  3741                           indf1	equ	0xFE7
  3742                           fsr1h	equ	0xFE2
  3743                           fsr1l	equ	0xFE1
  3744                           indf2	equ	0xFDF
  3745                           postinc2	equ	0xFDE
  3746                           postdec2	equ	0xFDD
  3747                           fsr2h	equ	0xFDA
  3748                           fsr2l	equ	0xFD9
  3749                           status	equ	0xFD8
  3750                           
  3751 ;; *************** function _ToMainHigh_recvmsg *****************
  3752 ;; Defined at:
  3753 ;;		line 135 in file "../src/messages.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  maxlength       1    wreg     unsigned char 
  3756 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3757 ;;		 -> main@msgtype(1), 
  3758 ;;  data            2   14[BANK1 ] PTR void 
  3759 ;;		 -> main@msgbuffer(15), 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      char 
  3764 ;; Registers used:
  3765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3771 ;;      Params:         0       0       4       0       0
  3772 ;;      Locals:         0       1       0       0       0
  3773 ;;      Temps:          0       0       0       0       0
  3774 ;;      Totals:         0       1       4       0       0
  3775 ;;Total ram usage:        5 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:   12
  3778 ;; This function calls:
  3779 ;;		_recv_msg
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text23
  3786  001B38                     __ptext23:
  3787                           	opt stack 0
  3788  001B38                     _ToMainHigh_recvmsg:
  3789                           	opt stack 18
  3790                           
  3791                           ;incstack = 0
  3792                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3793  001B38  0100               	movlb	0	; () banked
  3794  001B3A  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3798  001B3C  0102               	movlb	2	; () banked
  3799  001B3E  0E02               	movlw	high _ToMainHigh_MQ
  3800  001B40  0101               	movlb	1	; () banked
  3801  001B42  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3802  001B44  0102               	movlb	2	; () banked
  3803  001B46  0E57               	movlw	low _ToMainHigh_MQ
  3804  001B48  0101               	movlb	1	; () banked
  3805  001B4A  6F00               	movwf	recv_msg@qptr& (0+255),b
  3806  001B4C  C0C4  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3807  001B50  0101               	movlb	1	; () banked
  3808  001B52  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3809  001B56  0101               	movlb	1	; () banked
  3810  001B58  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3811  001B5C  0101               	movlb	1	; () banked
  3812  001B5E  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3813  001B62  0101               	movlb	1	; () banked
  3814  001B64  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3815  001B68  ECB6  F005         	call	_recv_msg	;wreg free
  3816  001B6C  0012               	return	
  3817  001B6E                     __end_of_ToMainHigh_recvmsg:
  3818                           	opt stack 0
  3819                           tblptru	equ	0xFF8
  3820                           tblptrh	equ	0xFF7
  3821                           tblptrl	equ	0xFF6
  3822                           tablat	equ	0xFF5
  3823                           prodh	equ	0xFF4
  3824                           prodl	equ	0xFF3
  3825                           intcon	equ	0xFF2
  3826                           postinc0	equ	0xFEE
  3827                           wreg	equ	0xFE8
  3828                           indf1	equ	0xFE7
  3829                           fsr1h	equ	0xFE2
  3830                           fsr1l	equ	0xFE1
  3831                           indf2	equ	0xFDF
  3832                           postinc2	equ	0xFDE
  3833                           postdec2	equ	0xFDD
  3834                           fsr2h	equ	0xFDA
  3835                           fsr2l	equ	0xFD9
  3836                           status	equ	0xFD8
  3837                           
  3838 ;; *************** function _recv_msg *****************
  3839 ;; Defined at:
  3840 ;;		line 63 in file "../src/messages.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3843 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3844 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3845 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3846 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  3847 ;;		 -> main@msgtype(1), 
  3848 ;;  data            2    5[BANK1 ] PTR void 
  3849 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  3850 ;;		 -> main@ic(38), 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3853 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3854 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3855 ;;  tlength         2    8[BANK1 ] unsigned int 
  3856 ;;  slot            1    7[BANK1 ] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      char 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3866 ;;      Params:         0       0       7       0       0
  3867 ;;      Locals:         0       0       5       0       0
  3868 ;;      Temps:          0       2       0       0       0
  3869 ;;      Totals:         0       2      12       0       0
  3870 ;;Total ram usage:       14 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:   11
  3873 ;; This function calls:
  3874 ;;		___awmod
  3875 ;;		_memcpy
  3876 ;; This function is called by:
  3877 ;;		_ToMainLow_recvmsg
  3878 ;;		_ToMainHigh_recvmsg
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text24
  3883  000B6C                     __ptext24:
  3884                           	opt stack 0
  3885  000B6C                     _recv_msg:
  3886                           	opt stack 18
  3887                           
  3888                           ;messages.c: 64: unsigned char slot;
  3889                           ;messages.c: 68: msg *qmsg;
  3890                           ;messages.c: 69: size_t tlength;
  3891                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3892                           
  3893                           ;incstack = 0
  3894  000B6C  0101               	movlb	1	; () banked
  3895  000B6E  EE20 F056          	lfsr	2,86
  3896  000B72  0101               	movlb	1	; () banked
  3897  000B74  5100               	movf	recv_msg@qptr& (0+255),w,b
  3898  000B76  26D9               	addwf	fsr2l,f,c
  3899  000B78  0101               	movlb	1	; () banked
  3900  000B7A  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3901  000B7C  22DA               	addwfc	fsr2h,f,c
  3902  000B7E  50DF               	movf	indf2,w,c
  3903  000B80  0101               	movlb	1	; () banked
  3904  000B82  6F07               	movwf	recv_msg@slot& (0+255),b
  3905                           
  3906                           ; BSR set to: 1
  3907                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3908  000B84  0101               	movlb	1	; () banked
  3909  000B86  5107               	movf	recv_msg@slot& (0+255),w,b
  3910  000B88  0D11               	mullw	17
  3911  000B8A  50F3               	movf	prodl,w,c
  3912  000B8C  0101               	movlb	1	; () banked
  3913  000B8E  2500               	addwf	recv_msg@qptr& (0+255),w,b
  3914  000B90  0101               	movlb	1	; () banked
  3915  000B92  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  3916  000B94  50F4               	movf	prodh,w,c
  3917  000B96  0101               	movlb	1	; () banked
  3918  000B98  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3919  000B9A  0101               	movlb	1	; () banked
  3920  000B9C  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3921                           
  3922                           ; BSR set to: 1
  3923                           ;messages.c: 74: if (qmsg->full == 1) {
  3924  000B9E  0E01               	movlw	1
  3925  000BA0  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  3926  000BA4  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3927  000BA8  62DF               	cpfseq	indf2,c
  3928  000BAA  D07F               	goto	l3727
  3929                           
  3930                           ; BSR set to: 1
  3931                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3932  000BAC  0101               	movlb	1	; () banked
  3933  000BAE  EE20 F001          	lfsr	2,1
  3934  000BB2  0101               	movlb	1	; () banked
  3935  000BB4  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3936  000BB6  26D9               	addwf	fsr2l,f,c
  3937  000BB8  0101               	movlb	1	; () banked
  3938  000BBA  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3939  000BBC  22DA               	addwfc	fsr2h,f,c
  3940  000BBE  50DF               	movf	indf2,w,c
  3941  000BC0  0101               	movlb	1	; () banked
  3942  000BC2  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  3943  000BC4  B0D8               	btfsc	status,0,c
  3944  000BC6  D002               	goto	l3711
  3945                           
  3946                           ; BSR set to: 1
  3947                           ;messages.c: 77: return (-3);
  3948  000BC8  0EFD               	movlw	253
  3949  000BCA  0012               	return	
  3950  000BCC                     l3711:
  3951                           
  3952                           ; BSR set to: 1
  3953                           ;messages.c: 78: }
  3954                           ;messages.c: 80: tlength = qmsg->length;
  3955  000BCC  0101               	movlb	1	; () banked
  3956  000BCE  EE20 F001          	lfsr	2,1
  3957  000BD2  0101               	movlb	1	; () banked
  3958  000BD4  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3959  000BD6  26D9               	addwf	fsr2l,f,c
  3960  000BD8  0101               	movlb	1	; () banked
  3961  000BDA  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3962  000BDC  22DA               	addwfc	fsr2h,f,c
  3963  000BDE  50DF               	movf	indf2,w,c
  3964  000BE0  0100               	movlb	0	; () banked
  3965  000BE2  6FC2               	movwf	??_recv_msg& (0+255),b
  3966  000BE4  0100               	movlb	0	; () banked
  3967  000BE6  51C2               	movf	??_recv_msg& (0+255),w,b
  3968  000BE8  0101               	movlb	1	; () banked
  3969  000BEA  6F08               	movwf	recv_msg@tlength& (0+255),b
  3970  000BEC  0101               	movlb	1	; () banked
  3971  000BEE  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  3972                           
  3973                           ; BSR set to: 1
  3974                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3975  000BF0  0101               	movlb	1	; () banked
  3976  000BF2  0100               	movlb	0	; () banked
  3977  000BF4  C106  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  3978  000BF8  0101               	movlb	1	; () banked
  3979  000BFA  0100               	movlb	0	; () banked
  3980  000BFC  C105  F0B8         	movff	recv_msg@data,memcpy@d1
  3981  000C00  0E03               	movlw	3
  3982  000C02  0101               	movlb	1	; () banked
  3983  000C04  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  3984  000C06  0100               	movlb	0	; () banked
  3985  000C08  6FC2               	movwf	??_recv_msg& (0+255),b
  3986  000C0A  0E00               	movlw	0
  3987  000C0C  0101               	movlb	1	; () banked
  3988  000C0E  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3989  000C10  0100               	movlb	0	; () banked
  3990  000C12  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  3991  000C14  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  3992  000C18  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  3993  000C1C  C108  F0BC         	movff	recv_msg@tlength,memcpy@n
  3994  000C20  C109  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  3995  000C24  ECD3  F00C         	call	_memcpy	;wreg free
  3996                           
  3997                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  3998  000C28  0101               	movlb	1	; () banked
  3999  000C2A  EE20 F056          	lfsr	2,86
  4000  000C2E  0101               	movlb	1	; () banked
  4001  000C30  5100               	movf	recv_msg@qptr& (0+255),w,b
  4002  000C32  26D9               	addwf	fsr2l,f,c
  4003  000C34  0101               	movlb	1	; () banked
  4004  000C36  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4005  000C38  22DA               	addwfc	fsr2h,f,c
  4006  000C3A  0101               	movlb	1	; () banked
  4007  000C3C  EE10 F056          	lfsr	1,86
  4008  000C40  0101               	movlb	1	; () banked
  4009  000C42  5100               	movf	recv_msg@qptr& (0+255),w,b
  4010  000C44  26E1               	addwf	fsr1l,f,c
  4011  000C46  0101               	movlb	1	; () banked
  4012  000C48  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4013  000C4A  22E2               	addwfc	fsr1h,f,c
  4014  000C4C  50E7               	movf	indf1,w,c
  4015  000C4E  0100               	movlb	0	; () banked
  4016  000C50  6FC2               	movwf	??_recv_msg& (0+255),b
  4017  000C52  0E01               	movlw	1
  4018  000C54  0100               	movlb	0	; () banked
  4019  000C56  25C2               	addwf	??_recv_msg& (0+255),w,b
  4020  000C58  0100               	movlb	0	; () banked
  4021  000C5A  6FB8               	movwf	___awmod@dividend& (0+255),b
  4022  000C5C  0100               	movlb	0	; () banked
  4023  000C5E  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  4024  000C60  0E00               	movlw	0
  4025  000C62  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4026  000C64  0E00               	movlw	0
  4027  000C66  0100               	movlb	0	; () banked
  4028  000C68  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  4029  000C6A  0E05               	movlw	5
  4030  000C6C  0100               	movlb	0	; () banked
  4031  000C6E  6FBA               	movwf	___awmod@divisor& (0+255),b
  4032  000C70  EC5F  F009         	call	___awmod	;wreg free
  4033  000C74  0100               	movlb	0	; () banked
  4034  000C76  51B8               	movf	?___awmod& (0+255),w,b
  4035  000C78  6EDF               	movwf	indf2,c
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4039  000C7A  0101               	movlb	1	; () banked
  4040  000C7C  EE20 F002          	lfsr	2,2
  4041  000C80  0101               	movlb	1	; () banked
  4042  000C82  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4043  000C84  26D9               	addwf	fsr2l,f,c
  4044  000C86  0101               	movlb	1	; () banked
  4045  000C88  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4046  000C8A  22DA               	addwfc	fsr2h,f,c
  4047  000C8C  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  4048  000C90  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4049  000C94  CFDF FFE7          	movff	indf2,indf1
  4050                           
  4051                           ; BSR set to: 1
  4052                           ;messages.c: 91: qmsg->full = 0;
  4053  000C98  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4054  000C9C  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4055  000CA0  0E00               	movlw	0
  4056  000CA2  6EDF               	movwf	indf2,c
  4057                           
  4058                           ; BSR set to: 1
  4059                           ;messages.c: 92: return (tlength);
  4060  000CA4  0101               	movlb	1	; () banked
  4061  000CA6  5108               	movf	recv_msg@tlength& (0+255),w,b
  4062  000CA8  0012               	return	
  4063  000CAA                     l3727:
  4064                           
  4065                           ; BSR set to: 1
  4066                           ;messages.c: 94: return (-4);
  4067  000CAA  0EFC               	movlw	252
  4068  000CAC  0012               	return	
  4069  000CAE                     __end_of_recv_msg:
  4070                           	opt stack 0
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           prodh	equ	0xFF4
  4076                           prodl	equ	0xFF3
  4077                           intcon	equ	0xFF2
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           indf1	equ	0xFE7
  4081                           fsr1h	equ	0xFE2
  4082                           fsr1l	equ	0xFE1
  4083                           indf2	equ	0xFDF
  4084                           postinc2	equ	0xFDE
  4085                           postdec2	equ	0xFDD
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function _memcpy *****************
  4091 ;; Defined at:
  4092 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  d1              2   56[BANK0 ] PTR void 
  4095 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4096 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  4097 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4098 ;;		 -> main@ic(38), 
  4099 ;;  s1              2   58[BANK0 ] PTR const void 
  4100 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4101 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4102 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  4103 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4104 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  4105 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  4106 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4107 ;;  n               2   60[BANK0 ] unsigned int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  4110 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4111 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4112 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  4113 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4114 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  4115 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  4116 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4117 ;;  d               2   62[BANK0 ] PTR unsigned char 
  4118 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4119 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  4120 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4121 ;;		 -> main@ic(38), 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  2   56[BANK0 ] PTR void 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4131 ;;      Params:         0       6       0       0       0
  4132 ;;      Locals:         0       4       0       0       0
  4133 ;;      Temps:          0       0       0       0       0
  4134 ;;      Totals:         0      10       0       0       0
  4135 ;;Total ram usage:       10 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:   10
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_send_msg
  4142 ;;		_recv_msg
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text25
  4147  0019A6                     __ptext25:
  4148                           	opt stack 0
  4149  0019A6                     _memcpy:
  4150                           	opt stack 17
  4151                           
  4152                           ; BSR set to: 1
  4153                           ;incstack = 0
  4154  0019A6  0100               	movlb	0	; () banked
  4155  0019A8  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4156  0019AC  0100               	movlb	0	; () banked
  4157  0019AE  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4158  0019B2  0100               	movlb	0	; () banked
  4159  0019B4  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4160  0019B8  0100               	movlb	0	; () banked
  4161  0019BA  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4162  0019BE  D010               	goto	l3513
  4163  0019C0                     l3507:
  4164                           
  4165                           ; BSR set to: 0
  4166  0019C0  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4167  0019C4  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4168  0019C8  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4169  0019CC  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4170  0019D0  CFDF FFE7          	movff	indf2,indf1
  4171                           
  4172                           ; BSR set to: 0
  4173  0019D4  0100               	movlb	0	; () banked
  4174  0019D6  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4175  0019D8  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4176                           
  4177                           ; BSR set to: 0
  4178  0019DA  0100               	movlb	0	; () banked
  4179  0019DC  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4180  0019DE  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4181  0019E0                     l3513:
  4182                           
  4183                           ; BSR set to: 0
  4184  0019E0  0100               	movlb	0	; () banked
  4185  0019E2  07BC               	decf	memcpy@n& (0+255),f,b
  4186  0019E4  A0D8               	btfss	status,0,c
  4187  0019E6  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4188  0019E8  0100               	movlb	0	; () banked
  4189  0019EA  29BC               	incf	memcpy@n& (0+255),w,b
  4190  0019EC  B4D8               	btfsc	status,2,c
  4191  0019EE  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4192  0019F0  B4D8               	btfsc	status,2,c
  4193                           
  4194                           ; BSR set to: 0
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;	Return value of _memcpy is never used
  4198  0019F2  0012               	return	
  4199  0019F4  D7E5               	goto	l3507
  4200  0019F6                     __end_of_memcpy:
  4201                           	opt stack 0
  4202                           tblptru	equ	0xFF8
  4203                           tblptrh	equ	0xFF7
  4204                           tblptrl	equ	0xFF6
  4205                           tablat	equ	0xFF5
  4206                           prodh	equ	0xFF4
  4207                           prodl	equ	0xFF3
  4208                           intcon	equ	0xFF2
  4209                           postinc0	equ	0xFEE
  4210                           wreg	equ	0xFE8
  4211                           indf1	equ	0xFE7
  4212                           fsr1h	equ	0xFE2
  4213                           fsr1l	equ	0xFE1
  4214                           indf2	equ	0xFDF
  4215                           postinc2	equ	0xFDE
  4216                           postdec2	equ	0xFDD
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function ___awmod *****************
  4222 ;; Defined at:
  4223 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  dividend        2   56[BANK0 ] int 
  4226 ;;  divisor         2   58[BANK0 ] int 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  sign            1   61[BANK0 ] unsigned char 
  4229 ;;  counter         1   60[BANK0 ] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  2   56[BANK0 ] int 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0, prodl
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4239 ;;      Params:         0       4       0       0       0
  4240 ;;      Locals:         0       2       0       0       0
  4241 ;;      Temps:          0       0       0       0       0
  4242 ;;      Totals:         0       6       0       0       0
  4243 ;;Total ram usage:        6 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:   10
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_send_msg
  4250 ;;		_recv_msg
  4251 ;;		i1_send_msg
  4252 ;;		i2_send_msg
  4253 ;;		i1_recv_msg
  4254 ;;		i2_recv_msg
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text26
  4259  0012BE                     __ptext26:
  4260                           	opt stack 0
  4261  0012BE                     ___awmod:
  4262                           	opt stack 17
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;incstack = 0
  4266  0012BE  0E00               	movlw	0
  4267  0012C0  0100               	movlb	0	; () banked
  4268  0012C2  6FBD               	movwf	___awmod@sign& (0+255),b
  4269                           
  4270                           ; BSR set to: 0
  4271  0012C4  0100               	movlb	0	; () banked
  4272  0012C6  51B9               	movf	(___awmod@dividend+1)& (0+255),w,b
  4273  0012C8  0A80               	xorlw	128
  4274  0012CA  6EF3               	movwf	prodl,c
  4275  0012CC  0E80               	movlw	128
  4276  0012CE  5CF3               	subwf	prodl,w,c
  4277  0012D0  0E00               	movlw	0
  4278  0012D2  B4D8               	btfsc	status,2,c
  4279  0012D4  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4280  0012D6  B0D8               	btfsc	status,0,c
  4281  0012D8  D009               	goto	l3523
  4282                           
  4283                           ; BSR set to: 0
  4284  0012DA  0100               	movlb	0	; () banked
  4285  0012DC  6DB8               	negf	___awmod@dividend& (0+255),b
  4286  0012DE  0100               	movlb	0	; () banked
  4287  0012E0  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4288  0012E2  B0D8               	btfsc	status,0,c
  4289  0012E4  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4290                           
  4291                           ; BSR set to: 0
  4292  0012E6  0E01               	movlw	1
  4293  0012E8  0100               	movlb	0	; () banked
  4294  0012EA  6FBD               	movwf	___awmod@sign& (0+255),b
  4295  0012EC                     l3523:
  4296                           
  4297                           ; BSR set to: 0
  4298  0012EC  0100               	movlb	0	; () banked
  4299  0012EE  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4300  0012F0  0A80               	xorlw	128
  4301  0012F2  6EF3               	movwf	prodl,c
  4302  0012F4  0E80               	movlw	128
  4303  0012F6  5CF3               	subwf	prodl,w,c
  4304  0012F8  0E00               	movlw	0
  4305  0012FA  B4D8               	btfsc	status,2,c
  4306  0012FC  5DBA               	subwf	___awmod@divisor& (0+255),w,b
  4307  0012FE  B0D8               	btfsc	status,0,c
  4308  001300  D006               	goto	l3527
  4309                           
  4310                           ; BSR set to: 0
  4311  001302  0100               	movlb	0	; () banked
  4312  001304  6DBA               	negf	___awmod@divisor& (0+255),b
  4313  001306  0100               	movlb	0	; () banked
  4314  001308  1FBB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4315  00130A  B0D8               	btfsc	status,0,c
  4316  00130C  2BBB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4317  00130E                     l3527:
  4318                           
  4319                           ; BSR set to: 0
  4320  00130E  0100               	movlb	0	; () banked
  4321  001310  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4322  001312  11BA               	iorwf	___awmod@divisor& (0+255),w,b
  4323  001314  B4D8               	btfsc	status,2,c
  4324  001316  D026               	goto	l3543
  4325                           
  4326                           ; BSR set to: 0
  4327  001318  0E01               	movlw	1
  4328  00131A  0100               	movlb	0	; () banked
  4329  00131C  6FBC               	movwf	___awmod@counter& (0+255),b
  4330  00131E  D006               	goto	l3533
  4331  001320                     l3531:
  4332                           
  4333                           ; BSR set to: 0
  4334  001320  0100               	movlb	0	; () banked
  4335  001322  90D8               	bcf	status,0,c
  4336  001324  37BA               	rlcf	___awmod@divisor& (0+255),f,b
  4337  001326  37BB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4338  001328  0100               	movlb	0	; () banked
  4339  00132A  2BBC               	incf	___awmod@counter& (0+255),f,b
  4340  00132C                     l3533:
  4341                           
  4342                           ; BSR set to: 0
  4343  00132C  0100               	movlb	0	; () banked
  4344  00132E  AFBB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4345  001330  D7F7               	goto	l3531
  4346  001332                     l3535:
  4347                           
  4348                           ; BSR set to: 0
  4349  001332  0100               	movlb	0	; () banked
  4350  001334  51BA               	movf	___awmod@divisor& (0+255),w,b
  4351  001336  0100               	movlb	0	; () banked
  4352  001338  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4353  00133A  0100               	movlb	0	; () banked
  4354  00133C  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4355  00133E  0100               	movlb	0	; () banked
  4356  001340  59B9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4357  001342  A0D8               	btfss	status,0,c
  4358  001344  D008               	goto	l3539
  4359                           
  4360                           ; BSR set to: 0
  4361  001346  0100               	movlb	0	; () banked
  4362  001348  51BA               	movf	___awmod@divisor& (0+255),w,b
  4363  00134A  0100               	movlb	0	; () banked
  4364  00134C  5FB8               	subwf	___awmod@dividend& (0+255),f,b
  4365  00134E  0100               	movlb	0	; () banked
  4366  001350  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4367  001352  0100               	movlb	0	; () banked
  4368  001354  5BB9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4369  001356                     l3539:
  4370                           
  4371                           ; BSR set to: 0
  4372  001356  0100               	movlb	0	; () banked
  4373  001358  90D8               	bcf	status,0,c
  4374  00135A  33BB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4375  00135C  33BA               	rrcf	___awmod@divisor& (0+255),f,b
  4376                           
  4377                           ; BSR set to: 0
  4378  00135E  0100               	movlb	0	; () banked
  4379  001360  2FBC               	decfsz	___awmod@counter& (0+255),f,b
  4380  001362  D7E7               	goto	l3535
  4381  001364                     l3543:
  4382                           
  4383                           ; BSR set to: 0
  4384  001364  0100               	movlb	0	; () banked
  4385  001366  51BD               	movf	___awmod@sign& (0+255),w,b
  4386  001368  B4D8               	btfsc	status,2,c
  4387  00136A  D006               	goto	l3547
  4388                           
  4389                           ; BSR set to: 0
  4390  00136C  0100               	movlb	0	; () banked
  4391  00136E  6DB8               	negf	___awmod@dividend& (0+255),b
  4392  001370  0100               	movlb	0	; () banked
  4393  001372  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4394  001374  B0D8               	btfsc	status,0,c
  4395  001376  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4396  001378                     l3547:
  4397                           
  4398                           ; BSR set to: 0
  4399  001378  C0B8  F0B8         	movff	___awmod@dividend,?___awmod
  4400  00137C  C0B9  F0B9         	movff	___awmod@dividend+1,?___awmod+1
  4401  001380  0012               	return	
  4402  001382                     __end_of___awmod:
  4403                           	opt stack 0
  4404                           tblptru	equ	0xFF8
  4405                           tblptrh	equ	0xFF7
  4406                           tblptrl	equ	0xFF6
  4407                           tablat	equ	0xFF5
  4408                           prodh	equ	0xFF4
  4409                           prodl	equ	0xFF3
  4410                           intcon	equ	0xFF2
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           indf1	equ	0xFE7
  4414                           fsr1h	equ	0xFE2
  4415                           fsr1l	equ	0xFE1
  4416                           indf2	equ	0xFDF
  4417                           postinc2	equ	0xFDE
  4418                           postdec2	equ	0xFDD
  4419                           fsr2h	equ	0xFDA
  4420                           fsr2l	equ	0xFD9
  4421                           status	equ	0xFD8
  4422                           
  4423 ;; *************** function _OpenTimer1 *****************
  4424 ;; Defined at:
  4425 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  config          1    wreg     unsigned char 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  config          1   56[BANK0 ] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;		None               void
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4439 ;;      Params:         0       0       0       0       0
  4440 ;;      Locals:         0       1       0       0       0
  4441 ;;      Temps:          0       0       0       0       0
  4442 ;;      Totals:         0       1       0       0       0
  4443 ;;Total ram usage:        1 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:   10
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_main
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text27
  4454  001BA4                     __ptext27:
  4455                           	opt stack 0
  4456  001BA4                     _OpenTimer1:
  4457                           	opt stack 20
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;incstack = 0
  4461                           ;OpenTimer1@config stored from wreg
  4462  001BA4  0100               	movlb	0	; () banked
  4463  001BA6  6FB8               	movwf	OpenTimer1@config& (0+255),b
  4464                           
  4465                           ; BSR set to: 0
  4466  001BA8  0100               	movlb	0	; () banked
  4467  001BAA  51B8               	movf	OpenTimer1@config& (0+255),w,b
  4468  001BAC  0B7E               	andlw	126
  4469  001BAE  6ECD               	movwf	4045,c	;volatile
  4470                           
  4471                           ; BSR set to: 0
  4472  001BB0  0100               	movlb	0	; () banked
  4473  001BB2  ADB8               	btfss	OpenTimer1@config& (0+255),6,b
  4474  001BB4  D002               	goto	l570
  4475                           
  4476                           ; BSR set to: 0
  4477  001BB6  8ECD               	bsf	4045,7,c	;volatile
  4478  001BB8  D001               	goto	l3211
  4479  001BBA                     l570:
  4480                           
  4481                           ; BSR set to: 0
  4482  001BBA  9ECD               	bcf	4045,7,c	;volatile
  4483  001BBC                     l3211:
  4484                           
  4485                           ; BSR set to: 0
  4486  001BBC  0E00               	movlw	0
  4487  001BBE  6ECF               	movwf	4047,c	;volatile
  4488  001BC0  0E00               	movlw	0
  4489  001BC2  6ECE               	movwf	4046,c	;volatile
  4490                           
  4491                           ; BSR set to: 0
  4492  001BC4  909E               	bcf	3998,0,c	;volatile
  4493                           
  4494                           ; BSR set to: 0
  4495  001BC6  0100               	movlb	0	; () banked
  4496  001BC8  AFB8               	btfss	OpenTimer1@config& (0+255),7,b
  4497  001BCA  D002               	goto	l572
  4498                           
  4499                           ; BSR set to: 0
  4500  001BCC  809D               	bsf	3997,0,c	;volatile
  4501  001BCE  D001               	goto	l573
  4502  001BD0                     l572:
  4503                           
  4504                           ; BSR set to: 0
  4505  001BD0  909D               	bcf	3997,0,c	;volatile
  4506  001BD2                     l573:
  4507                           
  4508                           ; BSR set to: 0
  4509  001BD2  80CD               	bsf	4045,0,c	;volatile
  4510                           
  4511                           ; BSR set to: 0
  4512  001BD4  0012               	return	
  4513  001BD6                     __end_of_OpenTimer1:
  4514                           	opt stack 0
  4515                           tblptru	equ	0xFF8
  4516                           tblptrh	equ	0xFF7
  4517                           tblptrl	equ	0xFF6
  4518                           tablat	equ	0xFF5
  4519                           prodh	equ	0xFF4
  4520                           prodl	equ	0xFF3
  4521                           intcon	equ	0xFF2
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           indf1	equ	0xFE7
  4525                           fsr1h	equ	0xFE2
  4526                           fsr1l	equ	0xFE1
  4527                           indf2	equ	0xFDF
  4528                           postinc2	equ	0xFDE
  4529                           postdec2	equ	0xFDD
  4530                           fsr2h	equ	0xFDA
  4531                           fsr2l	equ	0xFD9
  4532                           status	equ	0xFD8
  4533                           
  4534 ;; *************** function _OpenTimer0 *****************
  4535 ;; Defined at:
  4536 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  config          1    wreg     unsigned char 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  config          1   56[BANK0 ] unsigned char 
  4541 ;; Return value:  Size  Location     Type
  4542 ;;		None               void
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4550 ;;      Params:         0       0       0       0       0
  4551 ;;      Locals:         0       1       0       0       0
  4552 ;;      Temps:          0       0       0       0       0
  4553 ;;      Totals:         0       1       0       0       0
  4554 ;;Total ram usage:        1 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:   10
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_main
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text28
  4565  001D0E                     __ptext28:
  4566                           	opt stack 0
  4567  001D0E                     _OpenTimer0:
  4568                           	opt stack 20
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;incstack = 0
  4572                           ;OpenTimer0@config stored from wreg
  4573  001D0E  0100               	movlb	0	; () banked
  4574  001D10  6FB8               	movwf	OpenTimer0@config& (0+255),b
  4575                           
  4576                           ; BSR set to: 0
  4577  001D12  0100               	movlb	0	; () banked
  4578  001D14  51B8               	movf	OpenTimer0@config& (0+255),w,b
  4579  001D16  0B7F               	andlw	127
  4580  001D18  6ED5               	movwf	4053,c	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583  001D1A  0E00               	movlw	0
  4584  001D1C  6ED7               	movwf	4055,c	;volatile
  4585                           
  4586                           ; BSR set to: 0
  4587  001D1E  0E00               	movlw	0
  4588  001D20  6ED6               	movwf	4054,c	;volatile
  4589                           
  4590                           ; BSR set to: 0
  4591  001D22  94F2               	bcf	intcon,2,c	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594  001D24  0100               	movlb	0	; () banked
  4595  001D26  AFB8               	btfss	OpenTimer0@config& (0+255),7,b
  4596  001D28  D002               	goto	l546
  4597                           
  4598                           ; BSR set to: 0
  4599  001D2A  8AF2               	bsf	intcon,5,c	;volatile
  4600  001D2C  D001               	goto	l547
  4601  001D2E                     l546:
  4602                           
  4603                           ; BSR set to: 0
  4604  001D2E  9AF2               	bcf	intcon,5,c	;volatile
  4605  001D30                     l547:
  4606                           
  4607                           ; BSR set to: 0
  4608  001D30  8ED5               	bsf	4053,7,c	;volatile
  4609                           
  4610                           ; BSR set to: 0
  4611  001D32  0012               	return	
  4612  001D34                     __end_of_OpenTimer0:
  4613                           	opt stack 0
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           prodh	equ	0xFF4
  4619                           prodl	equ	0xFF3
  4620                           intcon	equ	0xFF2
  4621                           postinc0	equ	0xFEE
  4622                           wreg	equ	0xFE8
  4623                           indf1	equ	0xFE7
  4624                           fsr1h	equ	0xFE2
  4625                           fsr1l	equ	0xFE1
  4626                           indf2	equ	0xFDF
  4627                           postinc2	equ	0xFDE
  4628                           postdec2	equ	0xFDD
  4629                           fsr2h	equ	0xFDA
  4630                           fsr2l	equ	0xFD9
  4631                           status	equ	0xFD8
  4632                           
  4633 ;; *************** function _InterruptHandlerLow *****************
  4634 ;; Defined at:
  4635 ;;		line 135 in file "../src/interrupts.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;		None               void
  4642 ;; Registers used:
  4643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4649 ;;      Params:         0       0       0       0       0
  4650 ;;      Locals:         0       0       0       0       0
  4651 ;;      Temps:         17       0       0       0       0
  4652 ;;      Totals:        17       0       0       0       0
  4653 ;;Total ram usage:       17 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    9
  4656 ;; This function calls:
  4657 ;;		_timer1_int_handler
  4658 ;;		_uart_receive_interrupt_handler
  4659 ;;		_uart_transmit_interrupt_handler
  4660 ;; This function is called by:
  4661 ;;		Interrupt level 1
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	intcodelo
  4666  000018                     __pintcodelo:
  4667                           	opt stack 0
  4668  000018                     _InterruptHandlerLow:
  4669                           	opt stack 16
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;incstack = 0
  4673  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4674  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4675  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4676  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4677  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4678  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4679  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4680  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4681  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4682  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4683  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4684  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4685  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4686  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4687  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4688  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4689  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4690                           
  4691                           ;interrupts.c: 138: if (PIR1bits.TMR1IF) {
  4692  00005C  A09E               	btfss	3998,0,c	;volatile
  4693  00005E  D003               	goto	i1l4155
  4694                           
  4695                           ;interrupts.c: 139: PIR1bits.TMR1IF = 0;
  4696  000060  909E               	bcf	3998,0,c	;volatile
  4697                           
  4698                           ;interrupts.c: 143: timer1_int_handler();
  4699  000062  EC49  F00E         	call	_timer1_int_handler	;wreg free
  4700  000066                     i1l4155:
  4701                           
  4702                           ;interrupts.c: 144: }
  4703                           ;interrupts.c: 147: if (PIR1bits.RCIF) {
  4704  000066  AA9E               	btfss	3998,5,c	;volatile
  4705  000068  D003               	goto	i1l4161
  4706                           
  4707                           ;interrupts.c: 148: PIR1bits.RCIF = 0;
  4708  00006A  9A9E               	bcf	3998,5,c	;volatile
  4709                           
  4710                           ;interrupts.c: 152: uart_receive_interrupt_handler();
  4711  00006C  ECF1  F004         	call	_uart_receive_interrupt_handler	;wreg free
  4712  000070                     i1l4161:
  4713                           
  4714                           ;interrupts.c: 153: }
  4715                           ;interrupts.c: 157: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4716  000070  B89E               	btfsc	3998,4,c	;volatile
  4717  000072  A89D               	btfss	3997,4,c	;volatile
  4718  000074  D002               	goto	i1l54
  4719                           
  4720                           ;interrupts.c: 158: {
  4721                           ;interrupts.c: 162: uart_transmit_interrupt_handler();
  4722  000076  ECCB  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4723  00007A                     i1l54:
  4724  00007A  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4725  00007E  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4726  000082  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4727  000086  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4728  00008A  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4729  00008E  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4730  000092  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4731  000096  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4732  00009A  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4733  00009E  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4734  0000A2  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4735  0000A6  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4736  0000AA  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4737  0000AE  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4738  0000B2  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4739  0000B6  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4740  0000BA  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4741  0000BE  0010               	retfie	
  4742  0000C0                     __end_of_InterruptHandlerLow:
  4743                           	opt stack 0
  4744                           pclatu	equ	0xFFB
  4745                           pclath	equ	0xFFA
  4746                           tblptru	equ	0xFF8
  4747                           tblptrh	equ	0xFF7
  4748                           tblptrl	equ	0xFF6
  4749                           tablat	equ	0xFF5
  4750                           prodh	equ	0xFF4
  4751                           prodl	equ	0xFF3
  4752                           intcon	equ	0xFF2
  4753                           postinc0	equ	0xFEE
  4754                           fsr0h	equ	0xFEA
  4755                           fsr0l	equ	0xFE9
  4756                           wreg	equ	0xFE8
  4757                           indf1	equ	0xFE7
  4758                           fsr1h	equ	0xFE2
  4759                           fsr1l	equ	0xFE1
  4760                           bsr	equ	0xFE0
  4761                           indf2	equ	0xFDF
  4762                           postinc2	equ	0xFDE
  4763                           postdec2	equ	0xFDD
  4764                           fsr2h	equ	0xFDA
  4765                           fsr2l	equ	0xFD9
  4766                           status	equ	0xFD8
  4767                           
  4768 ;; *************** function _uart_transmit_interrupt_handler *****************
  4769 ;; Defined at:
  4770 ;;		line 200 in file "../src/my_uart.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  message_stat    1   32[COMRAM] char 
  4775 ;;  data            2   29[COMRAM] unsigned char [2]
  4776 ;;  msgtype         1   31[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;		None               void
  4779 ;; Registers used:
  4780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4786 ;;      Params:         0       0       0       0       0
  4787 ;;      Locals:         4       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0
  4789 ;;      Totals:         4       0       0       0       0
  4790 ;;Total ram usage:        4 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    8
  4793 ;; This function calls:
  4794 ;;		_FromMainLow_recvmsg
  4795 ;;		i1_blip
  4796 ;; This function is called by:
  4797 ;;		_InterruptHandlerLow
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text30
  4802  001596                     __ptext30:
  4803                           	opt stack 0
  4804  001596                     _uart_transmit_interrupt_handler:
  4805                           	opt stack 16
  4806                           
  4807                           ;my_uart.c: 202: blip();
  4808                           
  4809                           ;incstack = 0
  4810  001596  EC18  F00F         	call	i1_blip	;wreg free
  4811                           
  4812                           ;my_uart.c: 204: static unsigned char done = 1;
  4813                           ;my_uart.c: 205: static unsigned char index = 0;
  4814                           ;my_uart.c: 207: unsigned char data[2];
  4815                           ;my_uart.c: 210: unsigned char msgtype = 31;
  4816  00159A  0E1F               	movlw	31
  4817  00159C  6E20               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4818                           
  4819                           ;my_uart.c: 212: if( done )
  4820  00159E  5063               	movf	uart_transmit_interrupt_handler@done,w,c
  4821  0015A0  B4D8               	btfsc	status,2,c
  4822  0015A2  D02C               	goto	i1l4097
  4823                           
  4824                           ;my_uart.c: 213: {
  4825                           ;my_uart.c: 214: signed char message_status = FromMainLow_recvmsg(2,&msgtype, (void*)dat
      +                          a );
  4826  0015A4  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4827  0015A6  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4828  0015A8  0E20               	movlw	low uart_transmit_interrupt_handler@msgtype
  4829  0015AA  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4830  0015AC  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4831  0015AE  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4832  0015B0  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4833  0015B2  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4834  0015B4  0E02               	movlw	2
  4835  0015B6  EC73  F00E         	call	_FromMainLow_recvmsg
  4836  0015BA  6E21               	movwf	uart_transmit_interrupt_handler@message_status,c
  4837                           
  4838                           ;my_uart.c: 216: if( message_status == -4)
  4839  0015BC  5021               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4840  0015BE  0AFC               	xorlw	252
  4841  0015C0  A4D8               	btfss	status,2,c
  4842  0015C2  D002               	goto	i1l4073
  4843                           
  4844                           ;my_uart.c: 217: {
  4845                           ;my_uart.c: 219: PIE1bits.TX1IE = 0;
  4846  0015C4  989D               	bcf	3997,4,c	;volatile
  4847                           
  4848                           ;my_uart.c: 220: }
  4849  0015C6  0012               	return	
  4850  0015C8                     i1l4073:
  4851                           
  4852                           ;my_uart.c: 221: else if( message_status > 0 )
  4853  0015C8  5021               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4854  0015CA  0A80               	xorlw	128
  4855  0015CC  0F7F               	addlw	-129
  4856  0015CE  A0D8               	btfss	status,0,c
  4857  0015D0  0012               	return	
  4858                           
  4859                           ;my_uart.c: 222: {
  4860                           ;my_uart.c: 224: index = 0;
  4861  0015D2  0E00               	movlw	0
  4862  0015D4  6E62               	movwf	uart_transmit_interrupt_handler@index,c
  4863                           
  4864                           ;my_uart.c: 225: done = 0;
  4865  0015D6  0E00               	movlw	0
  4866  0015D8  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4867                           
  4868                           ;my_uart.c: 227: TXREG1 = data[index];
  4869  0015DA  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4870  0015DC  0D01               	mullw	1
  4871  0015DE  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4872  0015E0  24F3               	addwf	prodl,w,c
  4873  0015E2  6ED9               	movwf	fsr2l,c
  4874  0015E4  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4875  0015E6  20F4               	addwfc	prodh,w,c
  4876  0015E8  6EDA               	movwf	fsr2h,c
  4877  0015EA  50DF               	movf	indf2,w,c
  4878  0015EC  6EAD               	movwf	4013,c	;volatile
  4879                           
  4880                           ;my_uart.c: 228: index++;
  4881  0015EE  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4882                           
  4883                           ;my_uart.c: 229: if( index >= 2 )
  4884  0015F0  0E01               	movlw	1
  4885  0015F2  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4886  0015F4  0012               	return	
  4887                           
  4888                           ;my_uart.c: 230: {
  4889                           ;my_uart.c: 231: done = 1;
  4890  0015F6  0E01               	movlw	1
  4891  0015F8  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4892  0015FA  0012               	return	
  4893  0015FC                     i1l4097:
  4894                           
  4895                           ;my_uart.c: 248: else
  4896                           ;my_uart.c: 249: {
  4897                           ;my_uart.c: 251: TXREG1 = data[index];
  4898  0015FC  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4899  0015FE  0D01               	mullw	1
  4900  001600  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4901  001602  24F3               	addwf	prodl,w,c
  4902  001604  6ED9               	movwf	fsr2l,c
  4903  001606  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4904  001608  20F4               	addwfc	prodh,w,c
  4905  00160A  6EDA               	movwf	fsr2h,c
  4906  00160C  50DF               	movf	indf2,w,c
  4907  00160E  6EAD               	movwf	4013,c	;volatile
  4908                           
  4909                           ;my_uart.c: 252: index++;
  4910  001610  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4911                           
  4912                           ;my_uart.c: 253: if( index >= 2 )
  4913  001612  0E01               	movlw	1
  4914  001614  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4915  001616  0012               	return	
  4916                           
  4917                           ;my_uart.c: 254: {
  4918                           ;my_uart.c: 255: done = 1;
  4919  001618  0E01               	movlw	1
  4920  00161A  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4921  00161C  0012               	return	
  4922  00161E                     __end_of_uart_transmit_interrupt_handler:
  4923                           	opt stack 0
  4924                           pclatu	equ	0xFFB
  4925                           pclath	equ	0xFFA
  4926                           tblptru	equ	0xFF8
  4927                           tblptrh	equ	0xFF7
  4928                           tblptrl	equ	0xFF6
  4929                           tablat	equ	0xFF5
  4930                           prodh	equ	0xFF4
  4931                           prodl	equ	0xFF3
  4932                           intcon	equ	0xFF2
  4933                           postinc0	equ	0xFEE
  4934                           fsr0h	equ	0xFEA
  4935                           fsr0l	equ	0xFE9
  4936                           wreg	equ	0xFE8
  4937                           indf1	equ	0xFE7
  4938                           fsr1h	equ	0xFE2
  4939                           fsr1l	equ	0xFE1
  4940                           bsr	equ	0xFE0
  4941                           indf2	equ	0xFDF
  4942                           postinc2	equ	0xFDE
  4943                           postdec2	equ	0xFDD
  4944                           fsr2h	equ	0xFDA
  4945                           fsr2l	equ	0xFD9
  4946                           status	equ	0xFD8
  4947                           
  4948 ;; *************** function i1_blip *****************
  4949 ;; Defined at:
  4950 ;;		line 11 in file "../src/debug.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;		None               void
  4957 ;; Registers used:
  4958 ;;		None
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4964 ;;      Params:         0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    5
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_uart_transmit_interrupt_handler
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text31
  4979  001E30                     __ptext31:
  4980                           	opt stack 0
  4981  001E30                     i1_blip:
  4982                           	opt stack 18
  4983                           
  4984                           ;debug.c: 13: LATDbits.LD2 = 0;
  4985                           
  4986                           ;incstack = 0
  4987  001E30  948C               	bcf	3980,2,c	;volatile
  4988                           
  4989                           ;debug.c: 14: LATDbits.LD2 = 1;
  4990  001E32  848C               	bsf	3980,2,c	;volatile
  4991                           
  4992                           ;debug.c: 15: LATDbits.LD2 = 0;
  4993  001E34  948C               	bcf	3980,2,c	;volatile
  4994  001E36  0012               	return	
  4995  001E38                     __end_ofi1_blip:
  4996                           	opt stack 0
  4997                           pclatu	equ	0xFFB
  4998                           pclath	equ	0xFFA
  4999                           tblptru	equ	0xFF8
  5000                           tblptrh	equ	0xFF7
  5001                           tblptrl	equ	0xFF6
  5002                           tablat	equ	0xFF5
  5003                           prodh	equ	0xFF4
  5004                           prodl	equ	0xFF3
  5005                           intcon	equ	0xFF2
  5006                           postinc0	equ	0xFEE
  5007                           fsr0h	equ	0xFEA
  5008                           fsr0l	equ	0xFE9
  5009                           wreg	equ	0xFE8
  5010                           indf1	equ	0xFE7
  5011                           fsr1h	equ	0xFE2
  5012                           fsr1l	equ	0xFE1
  5013                           bsr	equ	0xFE0
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _FromMainLow_recvmsg *****************
  5022 ;; Defined at:
  5023 ;;		line 159 in file "../src/messages.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  maxlength       1    wreg     unsigned char 
  5026 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5027 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5028 ;;  data            2   26[COMRAM] PTR void 
  5029 ;;		 -> uart_transmit_interrupt_handler@data(2), 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  maxlength       1   28[COMRAM] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      char 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5041 ;;      Params:         4       0       0       0       0
  5042 ;;      Locals:         1       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0
  5044 ;;      Totals:         5       0       0       0       0
  5045 ;;Total ram usage:        5 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    7
  5048 ;; This function calls:
  5049 ;;		i1_recv_msg
  5050 ;; This function is called by:
  5051 ;;		_uart_transmit_interrupt_handler
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text32
  5056  001CE6                     __ptext32:
  5057                           	opt stack 0
  5058  001CE6                     _FromMainLow_recvmsg:
  5059                           	opt stack 16
  5060                           
  5061                           ;incstack = 0
  5062                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5063  001CE6  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5064                           
  5065                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5066  001CE8  0102               	movlb	2	; () banked
  5067  001CEA  0E02               	movlw	high _FromMainLow_MQ
  5068  001CEC  6E0C               	movwf	i1recv_msg@qptr+1,c
  5069  001CEE  0102               	movlb	2	; () banked
  5070  001CF0  0E00               	movlw	low _FromMainLow_MQ
  5071  001CF2  6E0B               	movwf	i1recv_msg@qptr,c
  5072  001CF4  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5073  001CF8  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5074  001CFC  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5075  001D00  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5076  001D04  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5077  001D08  EC86  F008         	call	i1_recv_msg	;wreg free
  5078  001D0C  0012               	return	
  5079  001D0E                     __end_of_FromMainLow_recvmsg:
  5080                           	opt stack 0
  5081                           pclatu	equ	0xFFB
  5082                           pclath	equ	0xFFA
  5083                           tblptru	equ	0xFF8
  5084                           tblptrh	equ	0xFF7
  5085                           tblptrl	equ	0xFF6
  5086                           tablat	equ	0xFF5
  5087                           prodh	equ	0xFF4
  5088                           prodl	equ	0xFF3
  5089                           intcon	equ	0xFF2
  5090                           postinc0	equ	0xFEE
  5091                           fsr0h	equ	0xFEA
  5092                           fsr0l	equ	0xFE9
  5093                           wreg	equ	0xFE8
  5094                           indf1	equ	0xFE7
  5095                           fsr1h	equ	0xFE2
  5096                           fsr1l	equ	0xFE1
  5097                           bsr	equ	0xFE0
  5098                           indf2	equ	0xFDF
  5099                           postinc2	equ	0xFDE
  5100                           postdec2	equ	0xFDD
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8
  5104                           
  5105 ;; *************** function i1_recv_msg *****************
  5106 ;; Defined at:
  5107 ;;		line 63 in file "../src/messages.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5110 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5111 ;;  maxlength       1   12[COMRAM] unsigned char 
  5112 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5113 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  5114 ;;		 -> main@msgtype(1), 
  5115 ;;  data            2   15[COMRAM] PTR void 
  5116 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  5117 ;;		 -> main@ic(38), 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5120 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5121 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5122 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5123 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      char 
  5126 ;; Registers used:
  5127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5133 ;;      Params:         7       0       0       0       0
  5134 ;;      Locals:         5       0       0       0       0
  5135 ;;      Temps:          2       0       0       0       0
  5136 ;;      Totals:        14       0       0       0       0
  5137 ;;Total ram usage:       14 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    6
  5140 ;; This function calls:
  5141 ;;		i1___awmod
  5142 ;;		i1_memcpy
  5143 ;; This function is called by:
  5144 ;;		_FromMainLow_recvmsg
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text33
  5149  00110C                     __ptext33:
  5150                           	opt stack 0
  5151  00110C                     i1_recv_msg:
  5152                           	opt stack 16
  5153                           
  5154                           ;messages.c: 64: unsigned char slot;
  5155                           ;messages.c: 68: msg *qmsg;
  5156                           ;messages.c: 69: size_t tlength;
  5157                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5158                           
  5159                           ;incstack = 0
  5160  00110C  EE20 F056          	lfsr	2,86
  5161  001110  500B               	movf	i1recv_msg@qptr,w,c
  5162  001112  26D9               	addwf	fsr2l,f,c
  5163  001114  500C               	movf	i1recv_msg@qptr+1,w,c
  5164  001116  22DA               	addwfc	fsr2h,f,c
  5165  001118  50DF               	movf	indf2,w,c
  5166  00111A  6E14               	movwf	i1recv_msg@slot,c
  5167                           
  5168                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5169  00111C  5014               	movf	i1recv_msg@slot,w,c
  5170  00111E  0D11               	mullw	17
  5171  001120  50F3               	movf	prodl,w,c
  5172  001122  240B               	addwf	i1recv_msg@qptr,w,c
  5173  001124  6E17               	movwf	i1recv_msg@qmsg,c
  5174  001126  50F4               	movf	prodh,w,c
  5175  001128  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5176  00112A  6E18               	movwf	i1recv_msg@qmsg+1,c
  5177                           
  5178                           ;messages.c: 74: if (qmsg->full == 1) {
  5179  00112C  0E01               	movlw	1
  5180  00112E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5181  001132  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5182  001136  62DF               	cpfseq	indf2,c
  5183  001138  D05B               	goto	i1l3655
  5184                           
  5185                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5186  00113A  EE20 F001          	lfsr	2,1
  5187  00113E  5017               	movf	i1recv_msg@qmsg,w,c
  5188  001140  26D9               	addwf	fsr2l,f,c
  5189  001142  5018               	movf	i1recv_msg@qmsg+1,w,c
  5190  001144  22DA               	addwfc	fsr2h,f,c
  5191  001146  50DF               	movf	indf2,w,c
  5192  001148  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5193  00114A  B0D8               	btfsc	status,0,c
  5194  00114C  D002               	goto	i1l3639
  5195                           
  5196                           ;messages.c: 77: return (-3);
  5197  00114E  0EFD               	movlw	253
  5198  001150  0012               	return	
  5199  001152                     i1l3639:
  5200                           
  5201                           ;messages.c: 78: }
  5202                           ;messages.c: 80: tlength = qmsg->length;
  5203  001152  EE20 F001          	lfsr	2,1
  5204  001156  5017               	movf	i1recv_msg@qmsg,w,c
  5205  001158  26D9               	addwf	fsr2l,f,c
  5206  00115A  5018               	movf	i1recv_msg@qmsg+1,w,c
  5207  00115C  22DA               	addwfc	fsr2h,f,c
  5208  00115E  50DF               	movf	indf2,w,c
  5209  001160  6E12               	movwf	??i1_recv_msg& (0+255),c
  5210  001162  5012               	movf	??i1_recv_msg,w,c
  5211  001164  6E15               	movwf	i1recv_msg@tlength,c
  5212  001166  6A16               	clrf	i1recv_msg@tlength+1,c
  5213                           
  5214                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5215  001168  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5216  00116C  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5217  001170  0E03               	movlw	3
  5218  001172  2417               	addwf	i1recv_msg@qmsg,w,c
  5219  001174  6E12               	movwf	??i1_recv_msg& (0+255),c
  5220  001176  0E00               	movlw	0
  5221  001178  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5222  00117A  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5223  00117C  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5224  001180  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5225  001184  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5226  001188  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5227  00118C  EC23  F00D         	call	i1_memcpy	;wreg free
  5228                           
  5229                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5230  001190  EE20 F056          	lfsr	2,86
  5231  001194  500B               	movf	i1recv_msg@qptr,w,c
  5232  001196  26D9               	addwf	fsr2l,f,c
  5233  001198  500C               	movf	i1recv_msg@qptr+1,w,c
  5234  00119A  22DA               	addwfc	fsr2h,f,c
  5235  00119C  EE10 F056          	lfsr	1,86
  5236  0011A0  500B               	movf	i1recv_msg@qptr,w,c
  5237  0011A2  26E1               	addwf	fsr1l,f,c
  5238  0011A4  500C               	movf	i1recv_msg@qptr+1,w,c
  5239  0011A6  22E2               	addwfc	fsr1h,f,c
  5240  0011A8  50E7               	movf	indf1,w,c
  5241  0011AA  6E12               	movwf	??i1_recv_msg& (0+255),c
  5242  0011AC  0E01               	movlw	1
  5243  0011AE  2412               	addwf	??i1_recv_msg,w,c
  5244  0011B0  6E01               	movwf	i1___awmod@dividend,c
  5245  0011B2  6A02               	clrf	i1___awmod@dividend+1,c
  5246  0011B4  0E00               	movlw	0
  5247  0011B6  2202               	addwfc	i1___awmod@dividend+1,f,c
  5248  0011B8  0E00               	movlw	0
  5249  0011BA  6E04               	movwf	i1___awmod@divisor+1,c
  5250  0011BC  0E05               	movlw	5
  5251  0011BE  6E03               	movwf	i1___awmod@divisor,c
  5252  0011C0  EC83  F00A         	call	i1___awmod	;wreg free
  5253  0011C4  5001               	movf	?i1___awmod,w,c
  5254  0011C6  6EDF               	movwf	indf2,c
  5255                           
  5256                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5257  0011C8  EE20 F002          	lfsr	2,2
  5258  0011CC  5017               	movf	i1recv_msg@qmsg,w,c
  5259  0011CE  26D9               	addwf	fsr2l,f,c
  5260  0011D0  5018               	movf	i1recv_msg@qmsg+1,w,c
  5261  0011D2  22DA               	addwfc	fsr2h,f,c
  5262  0011D4  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5263  0011D8  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5264  0011DC  CFDF FFE7          	movff	indf2,indf1
  5265                           
  5266                           ;messages.c: 91: qmsg->full = 0;
  5267  0011E0  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5268  0011E4  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5269  0011E8  0E00               	movlw	0
  5270  0011EA  6EDF               	movwf	indf2,c
  5271                           
  5272                           ;messages.c: 92: return (tlength);
  5273  0011EC  5015               	movf	i1recv_msg@tlength,w,c
  5274  0011EE  0012               	return	
  5275  0011F0                     i1l3655:
  5276                           
  5277                           ;messages.c: 94: return (-4);
  5278  0011F0  0EFC               	movlw	252
  5279  0011F2  0012               	return	
  5280  0011F4                     __end_ofi1_recv_msg:
  5281                           	opt stack 0
  5282                           pclatu	equ	0xFFB
  5283                           pclath	equ	0xFFA
  5284                           tblptru	equ	0xFF8
  5285                           tblptrh	equ	0xFF7
  5286                           tblptrl	equ	0xFF6
  5287                           tablat	equ	0xFF5
  5288                           prodh	equ	0xFF4
  5289                           prodl	equ	0xFF3
  5290                           intcon	equ	0xFF2
  5291                           postinc0	equ	0xFEE
  5292                           fsr0h	equ	0xFEA
  5293                           fsr0l	equ	0xFE9
  5294                           wreg	equ	0xFE8
  5295                           indf1	equ	0xFE7
  5296                           fsr1h	equ	0xFE2
  5297                           fsr1l	equ	0xFE1
  5298                           bsr	equ	0xFE0
  5299                           indf2	equ	0xFDF
  5300                           postinc2	equ	0xFDE
  5301                           postdec2	equ	0xFDD
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8
  5305                           
  5306 ;; *************** function _uart_receive_interrupt_handler *****************
  5307 ;; Defined at:
  5308 ;;		line 61 in file "../src/my_uart.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5313 ;;  message_coun    1   50[COMRAM] unsigned char 
  5314 ;;  status          1   42[COMRAM] unsigned char 
  5315 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5316 ;;  msg_id          1   51[COMRAM] unsigned char 
  5317 ;;  status          1   43[COMRAM] unsigned char 
  5318 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5319 ;;  bad_counter_    2   44[COMRAM] unsigned char [2]
  5320 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5321 ;;  i               2   52[COMRAM] int 
  5322 ;;  checksum        1   46[COMRAM] unsigned char 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;		None               void
  5325 ;; Registers used:
  5326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5332 ;;      Params:         0       0       0       0       0
  5333 ;;      Locals:        26       0       0       0       0
  5334 ;;      Temps:          2       0       0       0       0
  5335 ;;      Totals:        28       0       0       0       0
  5336 ;;Total ram usage:       28 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    8
  5339 ;; This function calls:
  5340 ;;		_ToMainLow_sendmsg
  5341 ;; This function is called by:
  5342 ;;		_InterruptHandlerLow
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text34
  5347  0009E2                     __ptext34:
  5348                           	opt stack 0
  5349  0009E2                     _uart_receive_interrupt_handler:
  5350                           	opt stack 16
  5351                           
  5352                           ;my_uart.c: 64: static unsigned char frame[(14 + 2 + 2)];
  5353                           ;my_uart.c: 65: static unsigned char index = 0;
  5354                           ;my_uart.c: 66: static unsigned char done = 0;
  5355                           ;my_uart.c: 67: static unsigned char received_counter = 0;
  5356                           ;my_uart.c: 69: static unsigned char start_byte_bad = 0;
  5357                           ;my_uart.c: 70: static unsigned char error = 0;
  5358                           ;my_uart.c: 72: if(!done)
  5359                           
  5360                           ;incstack = 0
  5361  0009E2  665D               	tstfsz	uart_receive_interrupt_handler@done,c
  5362  0009E4  D03B               	goto	i1l4003
  5363                           
  5364                           ;my_uart.c: 73: {
  5365                           ;my_uart.c: 74: frame[index] = RCREG1;
  5366  0009E6  505F               	movf	uart_receive_interrupt_handler@index,w,c
  5367  0009E8  0D01               	mullw	1
  5368  0009EA  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5369  0009EC  24F3               	addwf	prodl,w,c
  5370  0009EE  6ED9               	movwf	fsr2l,c
  5371  0009F0  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5372  0009F2  20F4               	addwfc	prodh,w,c
  5373  0009F4  6EDA               	movwf	fsr2h,c
  5374  0009F6  CFAE FFDF          	movff	4014,indf2	;volatile
  5375                           
  5376                           ;my_uart.c: 78: }
  5377                           ;my_uart.c: 79: if( index == 0 )
  5378                           
  5379                           ;my_uart.c: 76: {
  5380  0009FA  665F               	tstfsz	uart_receive_interrupt_handler@index,c
  5381  0009FC  D018               	goto	i1l3989
  5382                           
  5383                           ;my_uart.c: 80: {
  5384                           ;my_uart.c: 81: if( frame[0] != 0xff )
  5385  0009FE  2848               	incf	uart_receive_interrupt_handler@frame,w,c
  5386  000A00  B4D8               	btfsc	status,2,c
  5387  000A02  D012               	goto	i1l3987
  5388                           
  5389                           ;my_uart.c: 82: {
  5390                           ;my_uart.c: 83: if( !start_byte_bad )
  5391  000A04  6661               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5392  000A06  D00D               	goto	i1l3981
  5393                           
  5394                           ;my_uart.c: 84: {
  5395                           ;my_uart.c: 85: start_byte_bad = 1;
  5396  000A08  0E01               	movlw	1
  5397  000A0A  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5398                           
  5399                           ;my_uart.c: 86: unsigned char bad_start_id = received_counter;
  5400  000A0C  C060  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5401                           
  5402                           ;my_uart.c: 87: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5403  000A10  0E22               	movlw	34
  5404  000A12  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5405  000A14  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5406  000A16  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5407  000A18  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5408  000A1A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5409  000A1C  0E01               	movlw	1
  5410  000A1E  EC9A  F00E         	call	_ToMainLow_sendmsg
  5411  000A22                     i1l3981:
  5412                           
  5413                           ;my_uart.c: 89: }
  5414                           ;my_uart.c: 90: index = 0;
  5415  000A22  0E00               	movlw	0
  5416  000A24  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5417  000A26  0012               	return	
  5418  000A28                     i1l3987:
  5419                           
  5420                           ;my_uart.c: 93: else
  5421                           ;my_uart.c: 94: {
  5422                           ;my_uart.c: 95: start_byte_bad = 0;
  5423  000A28  0E00               	movlw	0
  5424  000A2A  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5425  000A2C  D016               	goto	i1l4001
  5426  000A2E                     i1l3989:
  5427                           
  5428                           ;my_uart.c: 98: else if( index >= (14 + 2 + 2) - 1 )
  5429  000A2E  0E10               	movlw	16
  5430  000A30  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5431  000A32  D013               	goto	i1l4001
  5432                           
  5433                           ;my_uart.c: 99: {
  5434                           ;my_uart.c: 100: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5435  000A34  5059               	movf	uart_receive_interrupt_handler@frame+17,w,c
  5436  000A36  0AFE               	xorlw	254
  5437  000A38  B4D8               	btfsc	status,2,c
  5438  000A3A  D00F               	goto	i1l4001
  5439                           
  5440                           ;my_uart.c: 101: {
  5441                           ;my_uart.c: 103: index = 0;
  5442  000A3C  0E00               	movlw	0
  5443  000A3E  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5444                           
  5445                           ;my_uart.c: 106: unsigned char bad_end_id = received_counter;
  5446  000A40  C060  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5447                           
  5448                           ;my_uart.c: 107: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5449  000A44  0E23               	movlw	35
  5450  000A46  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5451  000A48  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5452  000A4A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5453  000A4C  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5454  000A4E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5455  000A50  0E01               	movlw	1
  5456  000A52  EC9A  F00E         	call	_ToMainLow_sendmsg
  5457                           
  5458                           ;my_uart.c: 108: error = 1;
  5459  000A56  0E01               	movlw	1
  5460  000A58  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5461  000A5A                     i1l4001:
  5462                           
  5463                           ;my_uart.c: 109: }
  5464                           ;my_uart.c: 110: }
  5465                           ;my_uart.c: 111: index++;
  5466  000A5A  2A5F               	incf	uart_receive_interrupt_handler@index,f,c
  5467  000A5C                     i1l4003:
  5468                           
  5469                           ;my_uart.c: 112: }
  5470                           ;my_uart.c: 114: if( index >= (14 + 2 + 2) )
  5471  000A5C  0E11               	movlw	17
  5472  000A5E  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5473  000A60  0012               	return	
  5474                           
  5475                           ;my_uart.c: 115: {
  5476                           ;my_uart.c: 116: index = 0;
  5477  000A62  0E00               	movlw	0
  5478  000A64  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5479                           
  5480                           ;my_uart.c: 118: if( received_counter != frame[1] )
  5481  000A66  5049               	movf	uart_receive_interrupt_handler@frame+1,w,c
  5482  000A68  1860               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5483  000A6A  B4D8               	btfsc	status,2,c
  5484  000A6C  D00F               	goto	i1l4013
  5485                           
  5486                           ;my_uart.c: 119: {
  5487                           ;my_uart.c: 121: unsigned char bad_counter_id[2];
  5488                           ;my_uart.c: 122: bad_counter_id[0] = received_counter;
  5489  000A6E  C060  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5490                           
  5491                           ;my_uart.c: 123: bad_counter_id[1] = frame[1];
  5492  000A72  C049  F02E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5493                           
  5494                           ;my_uart.c: 124: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5495  000A76  0E21               	movlw	33
  5496  000A78  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5497  000A7A  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5498  000A7C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5499  000A7E  0E2D               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5500  000A80  6E18               	movwf	ToMainLow_sendmsg@data,c
  5501  000A82  0E02               	movlw	2
  5502  000A84  EC9A  F00E         	call	_ToMainLow_sendmsg
  5503                           
  5504                           ;my_uart.c: 125: error = 1;
  5505  000A88  0E01               	movlw	1
  5506  000A8A  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5507  000A8C                     i1l4013:
  5508                           
  5509                           ;my_uart.c: 126: }
  5510                           ;my_uart.c: 129: unsigned char gooey_uart_center[14];
  5511                           ;my_uart.c: 130: unsigned char checksum = 0;
  5512  000A8C  0E00               	movlw	0
  5513  000A8E  6E2F               	movwf	uart_receive_interrupt_handler@checksum,c
  5514                           
  5515                           ;my_uart.c: 131: int i;
  5516                           ;my_uart.c: 132: for(i = 0; i < 14; i++)
  5517  000A90  0E00               	movlw	0
  5518  000A92  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5519  000A94  0E00               	movlw	0
  5520  000A96  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5521  000A98  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5522  000A9A  0A80               	xorlw	128
  5523  000A9C  0F80               	addlw	-128
  5524  000A9E  0E0E               	movlw	14
  5525  000AA0  B4D8               	btfsc	status,2,c
  5526  000AA2  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5527  000AA4  B0D8               	btfsc	status,0,c
  5528  000AA6  D01F               	goto	i1l4029
  5529                           
  5530                           ;my_uart.c: 133: {
  5531                           ;my_uart.c: 134: gooey_uart_center[i] = frame[i+2];
  5532  000AA8  0E02               	movlw	2
  5533  000AAA  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5534  000AAC  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5535  000AAE  0E00               	movlw	0
  5536  000AB0  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5537  000AB2  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5538  000AB4  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5539  000AB6  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5540  000AB8  6ED9               	movwf	fsr2l,c
  5541  000ABA  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5542  000ABC  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5543  000ABE  6EDA               	movwf	fsr2h,c
  5544  000AC0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5545  000AC2  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5546  000AC4  6EE1               	movwf	fsr1l,c
  5547  000AC6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5548  000AC8  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5549  000ACA  6EE2               	movwf	fsr1h,c
  5550  000ACC  CFDF FFE7          	movff	indf2,indf1
  5551                           
  5552                           ;my_uart.c: 135: checksum ^= gooey_uart_center[i];
  5553  000AD0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5554  000AD2  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5555  000AD4  6ED9               	movwf	fsr2l,c
  5556  000AD6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5557  000AD8  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5558  000ADA  6EDA               	movwf	fsr2h,c
  5559  000ADC  50DF               	movf	indf2,w,c
  5560  000ADE  1A2F               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5561  000AE0  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5562  000AE2  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5563  000AE4  D7D9               	goto	L3
  5564  000AE6                     i1l4029:
  5565                           
  5566                           ;my_uart.c: 136: }
  5567                           ;my_uart.c: 138: if( checksum != frame[(14 + 2 + 2) - 2] )
  5568  000AE6  5058               	movf	uart_receive_interrupt_handler@frame+16,w,c
  5569  000AE8  182F               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5570  000AEA  B4D8               	btfsc	status,2,c
  5571  000AEC  D00D               	goto	i1l4037
  5572                           
  5573                           ;my_uart.c: 139: {
  5574                           ;my_uart.c: 141: unsigned char bad_checksum_id = received_counter;
  5575  000AEE  C060  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5576                           
  5577                           ;my_uart.c: 142: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5578  000AF2  0E20               	movlw	32
  5579  000AF4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5580  000AF6  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5581  000AF8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5582  000AFA  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5583  000AFC  6E18               	movwf	ToMainLow_sendmsg@data,c
  5584  000AFE  0E01               	movlw	1
  5585  000B00  EC9A  F00E         	call	_ToMainLow_sendmsg
  5586                           
  5587                           ;my_uart.c: 143: error = 1;
  5588  000B04  0E01               	movlw	1
  5589  000B06  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5590  000B08                     i1l4037:
  5591                           
  5592                           ;my_uart.c: 144: }
  5593                           ;my_uart.c: 149: if( !error )
  5594  000B08  665E               	tstfsz	uart_receive_interrupt_handler@error,c
  5595  000B0A  D02C               	goto	i1l4057
  5596                           
  5597                           ;my_uart.c: 150: {
  5598                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5599  000B0C  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5600                           
  5601                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5602  000B10  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5603  000B12  0A11               	xorlw	17
  5604  000B14  B4D8               	btfsc	status,2,c
  5605  000B16  D01C               	goto	i1l417
  5606  000B18  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5607  000B1A  0AF1               	xorlw	241
  5608  000B1C  B4D8               	btfsc	status,2,c
  5609  000B1E  D018               	goto	i1l417
  5610  000B20  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5611  000B22  0AF2               	xorlw	242
  5612  000B24  B4D8               	btfsc	status,2,c
  5613  000B26  D014               	goto	i1l417
  5614  000B28  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5615  000B2A  0AF3               	xorlw	243
  5616  000B2C  B4D8               	btfsc	status,2,c
  5617  000B2E  D010               	goto	i1l417
  5618  000B30  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5619  000B32  0AF4               	xorlw	244
  5620  000B34  B4D8               	btfsc	status,2,c
  5621  000B36  D00C               	goto	i1l417
  5622                           
  5623                           ;my_uart.c: 155: {
  5624                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5625  000B38  C060  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5626                           
  5627                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5628  000B3C  0E24               	movlw	36
  5629  000B3E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5630  000B40  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5631  000B42  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5632  000B44  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5633  000B46  6E18               	movwf	ToMainLow_sendmsg@data,c
  5634  000B48  0E01               	movlw	1
  5635  000B4A  EC9A  F00E         	call	_ToMainLow_sendmsg
  5636  000B4E  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5637  000B50                     i1l417:
  5638                           
  5639                           ;my_uart.c: 158: }
  5640                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5641  000B50  0E1F               	movlw	31
  5642  000B52  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5643  000B54  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5644  000B56  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5645  000B58  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5646  000B5A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5647  000B5C  0E0E               	movlw	14
  5648  000B5E  EC9A  F00E         	call	_ToMainLow_sendmsg
  5649  000B62  6E2C               	movwf	uart_receive_interrupt_handler@status_1937,c
  5650  000B64                     i1l4057:
  5651                           
  5652                           ;my_uart.c: 171: }
  5653                           ;my_uart.c: 172: }
  5654                           ;my_uart.c: 174: received_counter++;
  5655  000B64  2A60               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5656                           
  5657                           ;my_uart.c: 175: error = 0;
  5658  000B66  0E00               	movlw	0
  5659  000B68  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5660  000B6A  0012               	return	
  5661  000B6C                     __end_of_uart_receive_interrupt_handler:
  5662                           	opt stack 0
  5663                           pclatu	equ	0xFFB
  5664                           pclath	equ	0xFFA
  5665                           tblptru	equ	0xFF8
  5666                           tblptrh	equ	0xFF7
  5667                           tblptrl	equ	0xFF6
  5668                           tablat	equ	0xFF5
  5669                           prodh	equ	0xFF4
  5670                           prodl	equ	0xFF3
  5671                           intcon	equ	0xFF2
  5672                           postinc0	equ	0xFEE
  5673                           fsr0h	equ	0xFEA
  5674                           fsr0l	equ	0xFE9
  5675                           wreg	equ	0xFE8
  5676                           indf1	equ	0xFE7
  5677                           fsr1h	equ	0xFE2
  5678                           fsr1l	equ	0xFE1
  5679                           bsr	equ	0xFE0
  5680                           indf2	equ	0xFDF
  5681                           postinc2	equ	0xFDE
  5682                           postdec2	equ	0xFDD
  5683                           fsr2h	equ	0xFDA
  5684                           fsr2l	equ	0xFD9
  5685                           status	equ	0xFD8
  5686                           
  5687 ;; *************** function _timer1_int_handler *****************
  5688 ;; Defined at:
  5689 ;;		line 38 in file "../src/user_interrupts.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;		None
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  result          2   26[COMRAM] unsigned int 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;		None               void
  5696 ;; Registers used:
  5697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5703 ;;      Params:         0       0       0       0       0
  5704 ;;      Locals:         2       0       0       0       0
  5705 ;;      Temps:          0       0       0       0       0
  5706 ;;      Totals:         2       0       0       0       0
  5707 ;;Total ram usage:        2 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    8
  5710 ;; This function calls:
  5711 ;;		_ReadTimer1
  5712 ;;		_ToMainLow_sendmsg
  5713 ;;		_WriteTimer1
  5714 ;; This function is called by:
  5715 ;;		_InterruptHandlerLow
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text35
  5720  001C92                     __ptext35:
  5721                           	opt stack 0
  5722  001C92                     _timer1_int_handler:
  5723                           	opt stack 16
  5724                           
  5725                           ;user_interrupts.c: 42: unsigned int result;
  5726                           ;user_interrupts.c: 49: result = ReadTimer1();
  5727                           
  5728                           ;incstack = 0
  5729  001C92  ECDE  F00E         	call	_ReadTimer1	;wreg free
  5730  001C96  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5731  001C9A  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5732                           
  5733                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5734  001C9E  0E0B               	movlw	11
  5735  001CA0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5736  001CA2  0E00               	movlw	0
  5737  001CA4  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5738  001CA6  0E00               	movlw	0
  5739  001CA8  6E18               	movwf	ToMainLow_sendmsg@data,c
  5740  001CAA  0E00               	movlw	0
  5741  001CAC  EC9A  F00E         	call	_ToMainLow_sendmsg
  5742                           
  5743                           ;user_interrupts.c: 53: WriteTimer1(0);
  5744  001CB0  0E00               	movlw	0
  5745  001CB2  6E02               	movwf	WriteTimer1@timer1+1,c
  5746  001CB4  0E00               	movlw	0
  5747  001CB6  6E01               	movwf	WriteTimer1@timer1,c
  5748  001CB8  ECD5  F00E         	call	_WriteTimer1	;wreg free
  5749  001CBC  0012               	return	
  5750  001CBE                     __end_of_timer1_int_handler:
  5751                           	opt stack 0
  5752                           pclatu	equ	0xFFB
  5753                           pclath	equ	0xFFA
  5754                           tblptru	equ	0xFF8
  5755                           tblptrh	equ	0xFF7
  5756                           tblptrl	equ	0xFF6
  5757                           tablat	equ	0xFF5
  5758                           prodh	equ	0xFF4
  5759                           prodl	equ	0xFF3
  5760                           intcon	equ	0xFF2
  5761                           postinc0	equ	0xFEE
  5762                           fsr0h	equ	0xFEA
  5763                           fsr0l	equ	0xFE9
  5764                           wreg	equ	0xFE8
  5765                           indf1	equ	0xFE7
  5766                           fsr1h	equ	0xFE2
  5767                           fsr1l	equ	0xFE1
  5768                           bsr	equ	0xFE0
  5769                           indf2	equ	0xFDF
  5770                           postinc2	equ	0xFDE
  5771                           postdec2	equ	0xFDD
  5772                           fsr2h	equ	0xFDA
  5773                           fsr2l	equ	0xFD9
  5774                           status	equ	0xFD8
  5775                           
  5776 ;; *************** function _WriteTimer1 *****************
  5777 ;; Defined at:
  5778 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  timer1          2    0[COMRAM] unsigned int 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  timer           2    2[COMRAM] struct Timers
  5783 ;; Return value:  Size  Location     Type
  5784 ;;		None               void
  5785 ;; Registers used:
  5786 ;;		None
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5792 ;;      Params:         2       0       0       0       0
  5793 ;;      Locals:         2       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0
  5795 ;;      Totals:         4       0       0       0       0
  5796 ;;Total ram usage:        4 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    5
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_timer1_int_handler
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text36
  5807  001DAA                     __ptext36:
  5808                           	opt stack 0
  5809  001DAA                     _WriteTimer1:
  5810                           	opt stack 18
  5811                           
  5812                           ;incstack = 0
  5813  001DAA  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5814  001DAE  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5815  001DB2  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5816  001DB6  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5817  001DBA  0012               	return	
  5818  001DBC                     __end_of_WriteTimer1:
  5819                           	opt stack 0
  5820                           pclatu	equ	0xFFB
  5821                           pclath	equ	0xFFA
  5822                           tblptru	equ	0xFF8
  5823                           tblptrh	equ	0xFF7
  5824                           tblptrl	equ	0xFF6
  5825                           tablat	equ	0xFF5
  5826                           prodh	equ	0xFF4
  5827                           prodl	equ	0xFF3
  5828                           intcon	equ	0xFF2
  5829                           postinc0	equ	0xFEE
  5830                           fsr0h	equ	0xFEA
  5831                           fsr0l	equ	0xFE9
  5832                           wreg	equ	0xFE8
  5833                           indf1	equ	0xFE7
  5834                           fsr1h	equ	0xFE2
  5835                           fsr1l	equ	0xFE1
  5836                           bsr	equ	0xFE0
  5837                           indf2	equ	0xFDF
  5838                           postinc2	equ	0xFDE
  5839                           postdec2	equ	0xFDD
  5840                           fsr2h	equ	0xFDA
  5841                           fsr2l	equ	0xFD9
  5842                           status	equ	0xFD8
  5843                           
  5844 ;; *************** function _ToMainLow_sendmsg *****************
  5845 ;; Defined at:
  5846 ;;		line 103 in file "../src/messages.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  length          1    wreg     unsigned char 
  5849 ;;  msgtype         1   22[COMRAM] unsigned char 
  5850 ;;  data            2   23[COMRAM] PTR void 
  5851 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5852 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  length          1   25[COMRAM] unsigned char 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      char 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5864 ;;      Params:         3       0       0       0       0
  5865 ;;      Locals:         1       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0
  5867 ;;      Totals:         4       0       0       0       0
  5868 ;;Total ram usage:        4 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    7
  5871 ;; This function calls:
  5872 ;;		i1_send_msg
  5873 ;; This function is called by:
  5874 ;;		_uart_receive_interrupt_handler
  5875 ;;		_timer1_int_handler
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text37
  5880  001D34                     __ptext37:
  5881                           	opt stack 0
  5882  001D34                     _ToMainLow_sendmsg:
  5883                           	opt stack 16
  5884                           
  5885                           ;incstack = 0
  5886                           ;ToMainLow_sendmsg@length stored from wreg
  5887  001D34  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5888                           
  5889                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5890  001D36  0101               	movlb	1	; () banked
  5891  001D38  0E01               	movlw	high _ToMainLow_MQ
  5892  001D3A  6E0C               	movwf	i1send_msg@qptr+1,c
  5893  001D3C  0101               	movlb	1	; () banked
  5894  001D3E  0E72               	movlw	low _ToMainLow_MQ
  5895  001D40  6E0B               	movwf	i1send_msg@qptr,c
  5896  001D42  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5897  001D46  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5898  001D4A  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5899  001D4E  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5900  001D52  EC23  F00A         	call	i1_send_msg	;wreg free
  5901  001D56  0012               	return	
  5902  001D58                     __end_of_ToMainLow_sendmsg:
  5903                           	opt stack 0
  5904                           pclatu	equ	0xFFB
  5905                           pclath	equ	0xFFA
  5906                           tblptru	equ	0xFF8
  5907                           tblptrh	equ	0xFF7
  5908                           tblptrl	equ	0xFF6
  5909                           tablat	equ	0xFF5
  5910                           prodh	equ	0xFF4
  5911                           prodl	equ	0xFF3
  5912                           intcon	equ	0xFF2
  5913                           postinc0	equ	0xFEE
  5914                           fsr0h	equ	0xFEA
  5915                           fsr0l	equ	0xFE9
  5916                           wreg	equ	0xFE8
  5917                           indf1	equ	0xFE7
  5918                           fsr1h	equ	0xFE2
  5919                           fsr1l	equ	0xFE1
  5920                           bsr	equ	0xFE0
  5921                           indf2	equ	0xFDF
  5922                           postinc2	equ	0xFDE
  5923                           postdec2	equ	0xFDD
  5924                           fsr2h	equ	0xFDA
  5925                           fsr2l	equ	0xFD9
  5926                           status	equ	0xFD8
  5927                           
  5928 ;; *************** function i1_send_msg *****************
  5929 ;; Defined at:
  5930 ;;		line 24 in file "../src/messages.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5933 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5934 ;;  length          1   12[COMRAM] unsigned char 
  5935 ;;  msgtype         1   13[COMRAM] unsigned char 
  5936 ;;  data            2   14[COMRAM] PTR void 
  5937 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  5938 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  5939 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  5940 ;;		 -> main@t1thread_data(2), main@ic(38), 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5943 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5944 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5945 ;;  send_msg        2   17[COMRAM] unsigned int 
  5946 ;;  send_msg        1   19[COMRAM] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      char 
  5949 ;; Registers used:
  5950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5956 ;;      Params:         6       0       0       0       0
  5957 ;;      Locals:         5       0       0       0       0
  5958 ;;      Temps:          1       0       0       0       0
  5959 ;;      Totals:        12       0       0       0       0
  5960 ;;Total ram usage:       12 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:    6
  5963 ;; This function calls:
  5964 ;;		i1___awmod
  5965 ;;		i1_memcpy
  5966 ;; This function is called by:
  5967 ;;		_ToMainLow_sendmsg
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text38
  5972  001446                     __ptext38:
  5973                           	opt stack 0
  5974  001446                     i1_send_msg:
  5975                           	opt stack 16
  5976                           
  5977                           ;messages.c: 25: unsigned char slot;
  5978                           ;messages.c: 27: msg *qmsg;
  5979                           ;messages.c: 28: size_t tlength = length;
  5980                           
  5981                           ;incstack = 0
  5982  001446  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5983  00144A  6A13               	clrf	i1send_msg@tlength+1,c
  5984                           
  5985                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5986  00144C  EE20 F055          	lfsr	2,85
  5987  001450  500B               	movf	i1send_msg@qptr,w,c
  5988  001452  26D9               	addwf	fsr2l,f,c
  5989  001454  500C               	movf	i1send_msg@qptr+1,w,c
  5990  001456  22DA               	addwfc	fsr2h,f,c
  5991  001458  50DF               	movf	indf2,w,c
  5992  00145A  6E14               	movwf	i1send_msg@slot,c
  5993                           
  5994                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5995  00145C  5014               	movf	i1send_msg@slot,w,c
  5996  00145E  0D11               	mullw	17
  5997  001460  50F3               	movf	prodl,w,c
  5998  001462  240B               	addwf	i1send_msg@qptr,w,c
  5999  001464  6E15               	movwf	i1send_msg@qmsg,c
  6000  001466  50F4               	movf	prodh,w,c
  6001  001468  200C               	addwfc	i1send_msg@qptr+1,w,c
  6002  00146A  6E16               	movwf	i1send_msg@qmsg+1,c
  6003                           
  6004                           ;messages.c: 41: if (qmsg->full != 0) {
  6005  00146C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6006  001470  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6007  001474  50DF               	movf	indf2,w,c
  6008  001476  B4D8               	btfsc	status,2,c
  6009  001478  D002               	goto	i1l3591
  6010                           
  6011                           ;messages.c: 42: return (-1);
  6012  00147A  0EFF               	movlw	255
  6013  00147C  0012               	return	
  6014  00147E                     i1l3591:
  6015                           
  6016                           ;messages.c: 43: }
  6017                           ;messages.c: 46: qmsg->length = length;
  6018  00147E  EE20 F001          	lfsr	2,1
  6019  001482  5015               	movf	i1send_msg@qmsg,w,c
  6020  001484  26D9               	addwf	fsr2l,f,c
  6021  001486  5016               	movf	i1send_msg@qmsg+1,w,c
  6022  001488  22DA               	addwfc	fsr2h,f,c
  6023  00148A  C00D  FFDF         	movff	i1send_msg@length,indf2
  6024                           
  6025                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6026  00148E  EE20 F002          	lfsr	2,2
  6027  001492  5015               	movf	i1send_msg@qmsg,w,c
  6028  001494  26D9               	addwf	fsr2l,f,c
  6029  001496  5016               	movf	i1send_msg@qmsg+1,w,c
  6030  001498  22DA               	addwfc	fsr2h,f,c
  6031  00149A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6032                           
  6033                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6034  00149E  0E03               	movlw	3
  6035  0014A0  2415               	addwf	i1send_msg@qmsg,w,c
  6036  0014A2  6E01               	movwf	i1memcpy@d1,c
  6037  0014A4  0E00               	movlw	0
  6038  0014A6  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6039  0014A8  6E02               	movwf	i1memcpy@d1+1,c
  6040  0014AA  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6041  0014AE  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6042  0014B2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6043  0014B6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6044  0014BA  EC23  F00D         	call	i1_memcpy	;wreg free
  6045                           
  6046                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6047  0014BE  EE20 F055          	lfsr	2,85
  6048  0014C2  500B               	movf	i1send_msg@qptr,w,c
  6049  0014C4  26D9               	addwf	fsr2l,f,c
  6050  0014C6  500C               	movf	i1send_msg@qptr+1,w,c
  6051  0014C8  22DA               	addwfc	fsr2h,f,c
  6052  0014CA  EE10 F055          	lfsr	1,85
  6053  0014CE  500B               	movf	i1send_msg@qptr,w,c
  6054  0014D0  26E1               	addwf	fsr1l,f,c
  6055  0014D2  500C               	movf	i1send_msg@qptr+1,w,c
  6056  0014D4  22E2               	addwfc	fsr1h,f,c
  6057  0014D6  50E7               	movf	indf1,w,c
  6058  0014D8  6E11               	movwf	??i1_send_msg& (0+255),c
  6059  0014DA  0E01               	movlw	1
  6060  0014DC  2411               	addwf	??i1_send_msg,w,c
  6061  0014DE  6E01               	movwf	i1___awmod@dividend,c
  6062  0014E0  6A02               	clrf	i1___awmod@dividend+1,c
  6063  0014E2  0E00               	movlw	0
  6064  0014E4  2202               	addwfc	i1___awmod@dividend+1,f,c
  6065  0014E6  0E00               	movlw	0
  6066  0014E8  6E04               	movwf	i1___awmod@divisor+1,c
  6067  0014EA  0E05               	movlw	5
  6068  0014EC  6E03               	movwf	i1___awmod@divisor,c
  6069  0014EE  EC83  F00A         	call	i1___awmod	;wreg free
  6070  0014F2  5001               	movf	?i1___awmod,w,c
  6071  0014F4  6EDF               	movwf	indf2,c
  6072                           
  6073                           ;messages.c: 59: qmsg->full = 1;
  6074  0014F6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6075  0014FA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6076  0014FE  0E01               	movlw	1
  6077  001500  6EDF               	movwf	indf2,c
  6078                           
  6079                           ;messages.c: 60: return (1);
  6080  001502  0E01               	movlw	1
  6081  001504  0012               	return	
  6082  001506                     __end_ofi1_send_msg:
  6083                           	opt stack 0
  6084                           pclatu	equ	0xFFB
  6085                           pclath	equ	0xFFA
  6086                           tblptru	equ	0xFF8
  6087                           tblptrh	equ	0xFF7
  6088                           tblptrl	equ	0xFF6
  6089                           tablat	equ	0xFF5
  6090                           prodh	equ	0xFF4
  6091                           prodl	equ	0xFF3
  6092                           intcon	equ	0xFF2
  6093                           postinc0	equ	0xFEE
  6094                           fsr0h	equ	0xFEA
  6095                           fsr0l	equ	0xFE9
  6096                           wreg	equ	0xFE8
  6097                           indf1	equ	0xFE7
  6098                           fsr1h	equ	0xFE2
  6099                           fsr1l	equ	0xFE1
  6100                           bsr	equ	0xFE0
  6101                           indf2	equ	0xFDF
  6102                           postinc2	equ	0xFDE
  6103                           postdec2	equ	0xFDD
  6104                           fsr2h	equ	0xFDA
  6105                           fsr2l	equ	0xFD9
  6106                           status	equ	0xFD8
  6107                           
  6108 ;; *************** function i1_memcpy *****************
  6109 ;; Defined at:
  6110 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  d1              2    0[COMRAM] PTR void 
  6113 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6114 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  6115 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6116 ;;		 -> main@ic(38), 
  6117 ;;  s1              2    2[COMRAM] PTR const void 
  6118 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6119 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6120 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  6121 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6122 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  6123 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  6124 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6125 ;;  n               2    4[COMRAM] unsigned int 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6128 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6129 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6130 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  6131 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6132 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  6133 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  6134 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6135 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6136 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6137 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  6138 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6139 ;;		 -> main@ic(38), 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  2    0[COMRAM] PTR void 
  6142 ;; Registers used:
  6143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6149 ;;      Params:         6       0       0       0       0
  6150 ;;      Locals:         4       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0
  6152 ;;      Totals:        10       0       0       0       0
  6153 ;;Total ram usage:       10 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    5
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		i1_send_msg
  6160 ;;		i1_recv_msg
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text39
  6165  001A46                     __ptext39:
  6166                           	opt stack 0
  6167  001A46                     i1_memcpy:
  6168                           	opt stack 16
  6169                           
  6170                           ;incstack = 0
  6171  001A46  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6172  001A4A  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6173  001A4E  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6174  001A52  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6175  001A56  D00E               	goto	i1l2443
  6176  001A58                     i1l2437:
  6177  001A58  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6178  001A5C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6179  001A60  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6180  001A64  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6181  001A68  CFDF FFE7          	movff	indf2,indf1
  6182  001A6C  4A09               	infsnz	i1memcpy@s,f,c
  6183  001A6E  2A0A               	incf	i1memcpy@s+1,f,c
  6184  001A70  4A07               	infsnz	i1memcpy@d,f,c
  6185  001A72  2A08               	incf	i1memcpy@d+1,f,c
  6186  001A74                     i1l2443:
  6187  001A74  0605               	decf	i1memcpy@n,f,c
  6188  001A76  A0D8               	btfss	status,0,c
  6189  001A78  0606               	decf	i1memcpy@n+1,f,c
  6190  001A7A  2805               	incf	i1memcpy@n& (0+255),w,c
  6191  001A7C  B4D8               	btfsc	status,2,c
  6192  001A7E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6193  001A80  B4D8               	btfsc	status,2,c
  6194                           
  6195                           ;	Return value of i1_memcpy is never used
  6196  001A82  0012               	return	
  6197  001A84  D7E9               	goto	i1l2437
  6198  001A86                     __end_ofi1_memcpy:
  6199                           	opt stack 0
  6200                           pclatu	equ	0xFFB
  6201                           pclath	equ	0xFFA
  6202                           tblptru	equ	0xFF8
  6203                           tblptrh	equ	0xFF7
  6204                           tblptrl	equ	0xFF6
  6205                           tablat	equ	0xFF5
  6206                           prodh	equ	0xFF4
  6207                           prodl	equ	0xFF3
  6208                           intcon	equ	0xFF2
  6209                           postinc0	equ	0xFEE
  6210                           fsr0h	equ	0xFEA
  6211                           fsr0l	equ	0xFE9
  6212                           wreg	equ	0xFE8
  6213                           indf1	equ	0xFE7
  6214                           fsr1h	equ	0xFE2
  6215                           fsr1l	equ	0xFE1
  6216                           bsr	equ	0xFE0
  6217                           indf2	equ	0xFDF
  6218                           postinc2	equ	0xFDE
  6219                           postdec2	equ	0xFDD
  6220                           fsr2h	equ	0xFDA
  6221                           fsr2l	equ	0xFD9
  6222                           status	equ	0xFD8
  6223                           
  6224 ;; *************** function i1___awmod *****************
  6225 ;; Defined at:
  6226 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  dividend        2    0[COMRAM] int 
  6229 ;;  divisor         2    2[COMRAM] int 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  __awmod         1    5[COMRAM] unsigned char 
  6232 ;;  __awmod         1    4[COMRAM] unsigned char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  2    0[COMRAM] int 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0, prodl
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6242 ;;      Params:         4       0       0       0       0
  6243 ;;      Locals:         2       0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0
  6245 ;;      Totals:         6       0       0       0       0
  6246 ;;Total ram usage:        6 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    5
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		i1_send_msg
  6253 ;;		i1_recv_msg
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text40
  6258  001506                     __ptext40:
  6259                           	opt stack 0
  6260  001506                     i1___awmod:
  6261                           	opt stack 16
  6262                           
  6263                           ;incstack = 0
  6264  001506  0E00               	movlw	0
  6265  001508  6E06               	movwf	i1___awmod@sign,c
  6266  00150A  5002               	movf	i1___awmod@dividend+1,w,c
  6267  00150C  0A80               	xorlw	128
  6268  00150E  6EF3               	movwf	prodl,c
  6269  001510  0E80               	movlw	128
  6270  001512  5CF3               	subwf	prodl,w,c
  6271  001514  0E00               	movlw	0
  6272  001516  B4D8               	btfsc	status,2,c
  6273  001518  5C01               	subwf	i1___awmod@dividend,w,c
  6274  00151A  B0D8               	btfsc	status,0,c
  6275  00151C  D006               	goto	i1l2463
  6276  00151E  6C01               	negf	i1___awmod@dividend,c
  6277  001520  1E02               	comf	i1___awmod@dividend+1,f,c
  6278  001522  B0D8               	btfsc	status,0,c
  6279  001524  2A02               	incf	i1___awmod@dividend+1,f,c
  6280  001526  0E01               	movlw	1
  6281  001528  6E06               	movwf	i1___awmod@sign,c
  6282  00152A                     i1l2463:
  6283  00152A  5004               	movf	i1___awmod@divisor+1,w,c
  6284  00152C  0A80               	xorlw	128
  6285  00152E  6EF3               	movwf	prodl,c
  6286  001530  0E80               	movlw	128
  6287  001532  5CF3               	subwf	prodl,w,c
  6288  001534  0E00               	movlw	0
  6289  001536  B4D8               	btfsc	status,2,c
  6290  001538  5C03               	subwf	i1___awmod@divisor,w,c
  6291  00153A  B0D8               	btfsc	status,0,c
  6292  00153C  D004               	goto	i1l2467
  6293  00153E  6C03               	negf	i1___awmod@divisor,c
  6294  001540  1E04               	comf	i1___awmod@divisor+1,f,c
  6295  001542  B0D8               	btfsc	status,0,c
  6296  001544  2A04               	incf	i1___awmod@divisor+1,f,c
  6297  001546                     i1l2467:
  6298  001546  5004               	movf	i1___awmod@divisor+1,w,c
  6299  001548  1003               	iorwf	i1___awmod@divisor,w,c
  6300  00154A  B4D8               	btfsc	status,2,c
  6301  00154C  D018               	goto	i1l2483
  6302  00154E  0E01               	movlw	1
  6303  001550  6E05               	movwf	i1___awmod@counter,c
  6304  001552  D004               	goto	i1l2473
  6305  001554                     i1l2471:
  6306  001554  90D8               	bcf	status,0,c
  6307  001556  3603               	rlcf	i1___awmod@divisor,f,c
  6308  001558  3604               	rlcf	i1___awmod@divisor+1,f,c
  6309  00155A  2A05               	incf	i1___awmod@counter,f,c
  6310  00155C                     i1l2473:
  6311  00155C  AE04               	btfss	i1___awmod@divisor+1,7,c
  6312  00155E  D7FA               	goto	i1l2471
  6313  001560                     i1l2475:
  6314  001560  5003               	movf	i1___awmod@divisor,w,c
  6315  001562  5C01               	subwf	i1___awmod@dividend,w,c
  6316  001564  5004               	movf	i1___awmod@divisor+1,w,c
  6317  001566  5802               	subwfb	i1___awmod@dividend+1,w,c
  6318  001568  A0D8               	btfss	status,0,c
  6319  00156A  D004               	goto	i1l2479
  6320  00156C  5003               	movf	i1___awmod@divisor,w,c
  6321  00156E  5E01               	subwf	i1___awmod@dividend,f,c
  6322  001570  5004               	movf	i1___awmod@divisor+1,w,c
  6323  001572  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6324  001574                     i1l2479:
  6325  001574  90D8               	bcf	status,0,c
  6326  001576  3204               	rrcf	i1___awmod@divisor+1,f,c
  6327  001578  3203               	rrcf	i1___awmod@divisor,f,c
  6328  00157A  2E05               	decfsz	i1___awmod@counter,f,c
  6329  00157C  D7F1               	goto	i1l2475
  6330  00157E                     i1l2483:
  6331  00157E  5006               	movf	i1___awmod@sign,w,c
  6332  001580  B4D8               	btfsc	status,2,c
  6333  001582  D004               	goto	i1l2487
  6334  001584  6C01               	negf	i1___awmod@dividend,c
  6335  001586  1E02               	comf	i1___awmod@dividend+1,f,c
  6336  001588  B0D8               	btfsc	status,0,c
  6337  00158A  2A02               	incf	i1___awmod@dividend+1,f,c
  6338  00158C                     i1l2487:
  6339  00158C  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6340  001590  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6341  001594  0012               	return	
  6342  001596                     __end_ofi1___awmod:
  6343                           	opt stack 0
  6344                           pclatu	equ	0xFFB
  6345                           pclath	equ	0xFFA
  6346                           tblptru	equ	0xFF8
  6347                           tblptrh	equ	0xFF7
  6348                           tblptrl	equ	0xFF6
  6349                           tablat	equ	0xFF5
  6350                           prodh	equ	0xFF4
  6351                           prodl	equ	0xFF3
  6352                           intcon	equ	0xFF2
  6353                           postinc0	equ	0xFEE
  6354                           fsr0h	equ	0xFEA
  6355                           fsr0l	equ	0xFE9
  6356                           wreg	equ	0xFE8
  6357                           indf1	equ	0xFE7
  6358                           fsr1h	equ	0xFE2
  6359                           fsr1l	equ	0xFE1
  6360                           bsr	equ	0xFE0
  6361                           indf2	equ	0xFDF
  6362                           postinc2	equ	0xFDE
  6363                           postdec2	equ	0xFDD
  6364                           fsr2h	equ	0xFDA
  6365                           fsr2l	equ	0xFD9
  6366                           status	equ	0xFD8
  6367                           
  6368 ;; *************** function _ReadTimer1 *****************
  6369 ;; Defined at:
  6370 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;		None
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  timer           2    2[COMRAM] struct Timers
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  2    0[COMRAM] unsigned int 
  6377 ;; Registers used:
  6378 ;;		None
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6384 ;;      Params:         2       0       0       0       0
  6385 ;;      Locals:         2       0       0       0       0
  6386 ;;      Temps:          0       0       0       0       0
  6387 ;;      Totals:         4       0       0       0       0
  6388 ;;Total ram usage:        4 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    5
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_timer1_int_handler
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text41
  6399  001DBC                     __ptext41:
  6400                           	opt stack 0
  6401  001DBC                     _ReadTimer1:
  6402                           	opt stack 18
  6403                           
  6404                           ;incstack = 0
  6405  001DBC  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6406  001DC0  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6407  001DC4  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6408  001DC8  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6409  001DCC  0012               	return	
  6410  001DCE                     __end_of_ReadTimer1:
  6411                           	opt stack 0
  6412                           pclatu	equ	0xFFB
  6413                           pclath	equ	0xFFA
  6414                           tblptru	equ	0xFF8
  6415                           tblptrh	equ	0xFF7
  6416                           tblptrl	equ	0xFF6
  6417                           tablat	equ	0xFF5
  6418                           prodh	equ	0xFF4
  6419                           prodl	equ	0xFF3
  6420                           intcon	equ	0xFF2
  6421                           postinc0	equ	0xFEE
  6422                           fsr0h	equ	0xFEA
  6423                           fsr0l	equ	0xFE9
  6424                           wreg	equ	0xFE8
  6425                           indf1	equ	0xFE7
  6426                           fsr1h	equ	0xFE2
  6427                           fsr1l	equ	0xFE1
  6428                           bsr	equ	0xFE0
  6429                           indf2	equ	0xFDF
  6430                           postinc2	equ	0xFDE
  6431                           postdec2	equ	0xFDD
  6432                           fsr2h	equ	0xFDA
  6433                           fsr2l	equ	0xFD9
  6434                           status	equ	0xFD8
  6435                           
  6436 ;; *************** function _InterruptHandlerHigh *****************
  6437 ;; Defined at:
  6438 ;;		line 86 in file "../src/interrupts.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;		None               void
  6445 ;; Registers used:
  6446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6452 ;;      Params:         0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0
  6454 ;;      Temps:          0      14       0       0       0
  6455 ;;      Totals:         0      14       0       0       0
  6456 ;;Total ram usage:       14 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    4
  6459 ;; This function calls:
  6460 ;;		_SleepIfOkay
  6461 ;;		_i2c_int_handler
  6462 ;;		_timer0_int_handler
  6463 ;; This function is called by:
  6464 ;;		Interrupt level 2
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	intcode
  6469  000008                     __pintcode:
  6470                           	opt stack 0
  6471  000008                     _InterruptHandlerHigh:
  6472                           	opt stack 16
  6473                           
  6474                           ;incstack = 0
  6475  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh
  6476  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+1
  6477  000010  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6478  000014  EF0F  F00B         	goto	int_func
  6479                           pclatu	equ	0xFFB
  6480                           pclath	equ	0xFFA
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           intcon	equ	0xFF2
  6488                           postinc0	equ	0xFEE
  6489                           fsr0h	equ	0xFEA
  6490                           fsr0l	equ	0xFE9
  6491                           wreg	equ	0xFE8
  6492                           indf1	equ	0xFE7
  6493                           fsr1h	equ	0xFE2
  6494                           fsr1l	equ	0xFE1
  6495                           bsr	equ	0xFE0
  6496                           indf2	equ	0xFDF
  6497                           postinc2	equ	0xFDE
  6498                           postdec2	equ	0xFDD
  6499                           fsr2h	equ	0xFDA
  6500                           fsr2l	equ	0xFD9
  6501                           status	equ	0xFD8
  6502                           
  6503                           	psect	intcode_body
  6504  00161E                     __pintcode_body:
  6505                           	opt stack 16
  6506  00161E                     int_func:
  6507                           	opt stack 16
  6508  00161E  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6509  001622  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6510  001626  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6511  00162A  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6512  00162E  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6513  001632  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+8
  6514  001636  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+9
  6515  00163A  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6516  00163E  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6517  001642  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+12
  6518  001646  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+13
  6519                           
  6520                           ;interrupts.c: 87: LATDbits.LD6 = 0;
  6521  00164A  9C8C               	bcf	3980,6,c	;volatile
  6522                           
  6523                           ;interrupts.c: 88: LATDbits.LD6 = 1;
  6524  00164C  8C8C               	bsf	3980,6,c	;volatile
  6525                           
  6526                           ;interrupts.c: 93: if (PIR1bits.SSPIF) {
  6527  00164E  A69E               	btfss	3998,3,c	;volatile
  6528  001650  D003               	goto	i2l4137
  6529                           
  6530                           ;interrupts.c: 95: PIR1bits.SSPIF = 0;
  6531  001652  969E               	bcf	3998,3,c	;volatile
  6532                           
  6533                           ;interrupts.c: 100: i2c_int_handler();
  6534  001654  EC62  F000         	call	_i2c_int_handler	;wreg free
  6535  001658                     i2l4137:
  6536                           
  6537                           ;interrupts.c: 101: }
  6538                           ;interrupts.c: 104: if (INTCONbits.TMR0IF) {
  6539  001658  A4F2               	btfss	intcon,2,c	;volatile
  6540  00165A  D003               	goto	i2l4143
  6541                           
  6542                           ;interrupts.c: 105: INTCONbits.TMR0IF = 0;
  6543  00165C  94F2               	bcf	intcon,2,c	;volatile
  6544                           
  6545                           ;interrupts.c: 110: timer0_int_handler();
  6546  00165E  EC52  F00B         	call	_timer0_int_handler	;wreg free
  6547  001662                     i2l4143:
  6548                           
  6549                           ;interrupts.c: 111: }
  6550                           ;interrupts.c: 120: SleepIfOkay();
  6551  001662  EC4F  F00C         	call	_SleepIfOkay	;wreg free
  6552                           
  6553                           ;interrupts.c: 121: LATDbits.LD6 = 1;
  6554  001666  8C8C               	bsf	3980,6,c	;volatile
  6555                           
  6556                           ;interrupts.c: 122: LATDbits.LD6 = 0;
  6557  001668  9C8C               	bcf	3980,6,c	;volatile
  6558  00166A  C0B7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6559  00166E  C0B6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6560  001672  C0B5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6561  001676  C0B4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6562  00167A  C0B3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6563  00167E  C0B2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6564  001682  C0B1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6565  001686  C0B0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6566  00168A  C0AF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6567  00168E  C0AE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6568  001692  C0AD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6569  001696  C0AC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6570  00169A  C0AB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6571  00169E  C0AA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6572  0016A2  0011               	retfie		f
  6573  0016A4                     __end_of_InterruptHandlerHigh:
  6574                           	opt stack 0
  6575                           pclatu	equ	0xFFB
  6576                           pclath	equ	0xFFA
  6577                           tblptru	equ	0xFF8
  6578                           tblptrh	equ	0xFF7
  6579                           tblptrl	equ	0xFF6
  6580                           tablat	equ	0xFF5
  6581                           prodh	equ	0xFF4
  6582                           prodl	equ	0xFF3
  6583                           intcon	equ	0xFF2
  6584                           postinc0	equ	0xFEE
  6585                           fsr0h	equ	0xFEA
  6586                           fsr0l	equ	0xFE9
  6587                           wreg	equ	0xFE8
  6588                           indf1	equ	0xFE7
  6589                           fsr1h	equ	0xFE2
  6590                           fsr1l	equ	0xFE1
  6591                           bsr	equ	0xFE0
  6592                           indf2	equ	0xFDF
  6593                           postinc2	equ	0xFDE
  6594                           postdec2	equ	0xFDD
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _timer0_int_handler *****************
  6600 ;; Defined at:
  6601 ;;		line 16 in file "../src/user_interrupts.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  val             2   33[BANK0 ] unsigned int 
  6606 ;;  msgtype         2   31[BANK0 ] int 
  6607 ;;  length          2   29[BANK0 ] int 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;		None               void
  6610 ;; Registers used:
  6611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6617 ;;      Params:         0       0       0       0       0
  6618 ;;      Locals:         0       6       0       0       0
  6619 ;;      Temps:          0       0       0       0       0
  6620 ;;      Totals:         0       6       0       0       0
  6621 ;;Total ram usage:        6 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    3
  6624 ;; This function calls:
  6625 ;;		_FromMainHigh_recvmsg
  6626 ;;		_ToMainHigh_sendmsg
  6627 ;;		_WriteTimer0
  6628 ;; This function is called by:
  6629 ;;		_InterruptHandlerHigh
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text43
  6634  0016A4                     __ptext43:
  6635                           	opt stack 0
  6636  0016A4                     _timer0_int_handler:
  6637                           	opt stack 16
  6638                           
  6639                           ;user_interrupts.c: 20: unsigned int val;
  6640                           ;user_interrupts.c: 21: int length, msgtype;
  6641                           ;user_interrupts.c: 25: WriteTimer0(0);
  6642                           
  6643                           ;incstack = 0
  6644  0016A4  0E00               	movlw	0
  6645  0016A6  0100               	movlb	0	; () banked
  6646  0016A8  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6647  0016AA  0E00               	movlw	0
  6648  0016AC  0100               	movlb	0	; () banked
  6649  0016AE  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6650  0016B0  ECE7  F00E         	call	_WriteTimer0	;wreg free
  6651                           
  6652                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6653  0016B4  0100               	movlb	0	; () banked
  6654  0016B6  0E00               	movlw	high timer0_int_handler@msgtype
  6655  0016B8  0100               	movlb	0	; () banked
  6656  0016BA  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6657  0016BC  0100               	movlb	0	; () banked
  6658  0016BE  0E9F               	movlw	low timer0_int_handler@msgtype
  6659  0016C0  0100               	movlb	0	; () banked
  6660  0016C2  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6661  0016C4  0100               	movlb	0	; () banked
  6662  0016C6  0E00               	movlw	high timer0_int_handler@val
  6663  0016C8  0100               	movlb	0	; () banked
  6664  0016CA  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6665  0016CC  0100               	movlb	0	; () banked
  6666  0016CE  0EA1               	movlw	low timer0_int_handler@val
  6667  0016D0  0100               	movlb	0	; () banked
  6668  0016D2  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6669  0016D4  0E02               	movlw	2
  6670  0016D6  ECB7  F00D         	call	_FromMainHigh_recvmsg
  6671  0016DA  0100               	movlb	0	; () banked
  6672  0016DC  6F9D               	movwf	timer0_int_handler@length& (0+255),b
  6673  0016DE  0100               	movlb	0	; () banked
  6674  0016E0  6B9E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6675  0016E2  0100               	movlb	0	; () banked
  6676  0016E4  BF9D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6677  0016E6  079E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6681  0016E8  0100               	movlb	0	; () banked
  6682  0016EA  519D               	movf	timer0_int_handler@length& (0+255),w,b
  6683  0016EC  0A02               	xorlw	2
  6684  0016EE  119E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6685  0016F0  A4D8               	btfss	status,2,c
  6686  0016F2  0012               	return	
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6690  0016F4  0E0A               	movlw	10
  6691  0016F6  0100               	movlb	0	; () banked
  6692  0016F8  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6693  0016FA  0100               	movlb	0	; () banked
  6694  0016FC  0E00               	movlw	high timer0_int_handler@val
  6695  0016FE  0100               	movlb	0	; () banked
  6696  001700  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6697  001702  0100               	movlb	0	; () banked
  6698  001704  0EA1               	movlw	low timer0_int_handler@val
  6699  001706  0100               	movlb	0	; () banked
  6700  001708  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6701  00170A  0E02               	movlw	2
  6702  00170C  EC32  F00E         	call	_ToMainHigh_sendmsg
  6703  001710  0012               	return	
  6704  001712                     __end_of_timer0_int_handler:
  6705                           	opt stack 0
  6706                           pclatu	equ	0xFFB
  6707                           pclath	equ	0xFFA
  6708                           tblptru	equ	0xFF8
  6709                           tblptrh	equ	0xFF7
  6710                           tblptrl	equ	0xFF6
  6711                           tablat	equ	0xFF5
  6712                           prodh	equ	0xFF4
  6713                           prodl	equ	0xFF3
  6714                           intcon	equ	0xFF2
  6715                           postinc0	equ	0xFEE
  6716                           fsr0h	equ	0xFEA
  6717                           fsr0l	equ	0xFE9
  6718                           wreg	equ	0xFE8
  6719                           indf1	equ	0xFE7
  6720                           fsr1h	equ	0xFE2
  6721                           fsr1l	equ	0xFE1
  6722                           bsr	equ	0xFE0
  6723                           indf2	equ	0xFDF
  6724                           postinc2	equ	0xFDE
  6725                           postdec2	equ	0xFDD
  6726                           fsr2h	equ	0xFDA
  6727                           fsr2l	equ	0xFD9
  6728                           status	equ	0xFD8
  6729                           
  6730 ;; *************** function _WriteTimer0 *****************
  6731 ;; Defined at:
  6732 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  timer0          2    0[BANK0 ] unsigned int 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  timer           2    2[BANK0 ] struct Timers
  6737 ;; Return value:  Size  Location     Type
  6738 ;;		None               void
  6739 ;; Registers used:
  6740 ;;		None
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6746 ;;      Params:         0       2       0       0       0
  6747 ;;      Locals:         0       2       0       0       0
  6748 ;;      Temps:          0       0       0       0       0
  6749 ;;      Totals:         0       4       0       0       0
  6750 ;;Total ram usage:        4 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_timer0_int_handler
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text44
  6760  001DCE                     __ptext44:
  6761                           	opt stack 0
  6762  001DCE                     _WriteTimer0:
  6763                           	opt stack 18
  6764                           
  6765                           ;incstack = 0
  6766  001DCE  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6767  001DD2  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6768  001DD6  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6769  001DDA  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6770  001DDE  0012               	return	
  6771  001DE0                     __end_of_WriteTimer0:
  6772                           	opt stack 0
  6773                           pclatu	equ	0xFFB
  6774                           pclath	equ	0xFFA
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           prodh	equ	0xFF4
  6780                           prodl	equ	0xFF3
  6781                           intcon	equ	0xFF2
  6782                           postinc0	equ	0xFEE
  6783                           fsr0h	equ	0xFEA
  6784                           fsr0l	equ	0xFE9
  6785                           wreg	equ	0xFE8
  6786                           indf1	equ	0xFE7
  6787                           fsr1h	equ	0xFE2
  6788                           fsr1l	equ	0xFE1
  6789                           bsr	equ	0xFE0
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           postdec2	equ	0xFDD
  6793                           fsr2h	equ	0xFDA
  6794                           fsr2l	equ	0xFD9
  6795                           status	equ	0xFD8
  6796                           
  6797 ;; *************** function _i2c_int_handler *****************
  6798 ;; Defined at:
  6799 ;;		line 103 in file "../src/my_i2c.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  msg_type        1   39[BANK0 ] unsigned char 
  6804 ;;  length          1   30[BANK0 ] unsigned char 
  6805 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  6806 ;;  data_read       1   41[BANK0 ] unsigned char 
  6807 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  6808 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  6809 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  6810 ;;  need_data       1   36[BANK0 ] unsigned char 
  6811 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6812 ;;  data_written    1   34[BANK0 ] unsigned char 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;		None               void
  6815 ;; Registers used:
  6816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6822 ;;      Params:         0       0       0       0       0
  6823 ;;      Locals:         0      12       0       0       0
  6824 ;;      Temps:          0       1       0       0       0
  6825 ;;      Totals:         0      13       0       0       0
  6826 ;;Total ram usage:       13 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:    3
  6829 ;; This function calls:
  6830 ;;		_FromMainHigh_recvmsg
  6831 ;;		_ToMainHigh_sendmsg
  6832 ;;		_handle_start
  6833 ;;		_start_i2c_slave_reply
  6834 ;;		i2_blip1
  6835 ;;		i2_blip2
  6836 ;; This function is called by:
  6837 ;;		_InterruptHandlerHigh
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text45
  6842  0000C4                     __ptext45:
  6843                           	opt stack 0
  6844  0000C4                     _i2c_int_handler:
  6845                           	opt stack 16
  6846                           
  6847                           ;my_i2c.c: 106: LATDbits.LD2 = 0;
  6848                           
  6849                           ;incstack = 0
  6850  0000C4  948C               	bcf	3980,2,c	;volatile
  6851                           
  6852                           ;my_i2c.c: 107: LATDbits.LD2 = 1;
  6853  0000C6  848C               	bsf	3980,2,c	;volatile
  6854                           
  6855                           ;my_i2c.c: 109: unsigned char i2c_data;
  6856                           ;my_i2c.c: 110: unsigned char data_read = 0;
  6857  0000C8  0E00               	movlw	0
  6858  0000CA  0100               	movlb	0	; () banked
  6859  0000CC  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6860                           
  6861                           ;my_i2c.c: 111: unsigned char data_written = 0;
  6862  0000CE  0E00               	movlw	0
  6863  0000D0  0100               	movlb	0	; () banked
  6864  0000D2  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6865                           
  6866                           ;my_i2c.c: 112: unsigned char msg_ready = 0;
  6867  0000D4  0E00               	movlw	0
  6868  0000D6  0100               	movlb	0	; () banked
  6869  0000D8  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6870                           
  6871                           ;my_i2c.c: 113: unsigned char msg_to_send = 0;
  6872  0000DA  0E00               	movlw	0
  6873  0000DC  0100               	movlb	0	; () banked
  6874  0000DE  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6875                           
  6876                           ;my_i2c.c: 114: unsigned char overrun_error = 0;
  6877  0000E0  0E00               	movlw	0
  6878  0000E2  0100               	movlb	0	; () banked
  6879  0000E4  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6880                           
  6881                           ;my_i2c.c: 115: unsigned char error_buf[3];
  6882                           ;my_i2c.c: 116: unsigned char need_data = 1;
  6883  0000E6  0E01               	movlw	1
  6884  0000E8  0100               	movlb	0	; () banked
  6885  0000EA  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;my_i2c.c: 118: blip1();
  6889  0000EC  EC20  F00F         	call	i2_blip1	;wreg free
  6890                           
  6891                           ;my_i2c.c: 120: if (SSPCON1bits.SSPOV == 1) {
  6892  0000F0  ACC6               	btfss	4038,6,c	;volatile
  6893  0000F2  D024               	goto	i2l3783
  6894                           
  6895                           ;my_i2c.c: 121: SSPCON1bits.SSPOV = 0;
  6896  0000F4  9CC6               	bcf	4038,6,c	;volatile
  6897                           
  6898                           ;my_i2c.c: 125: ic_ptr->status = 0x5;
  6899  0000F6  0100               	movlb	0	; () banked
  6900  0000F8  EE20 F021          	lfsr	2,33
  6901  0000FC  0100               	movlb	0	; () banked
  6902  0000FE  51C5               	movf	_ic_ptr& (0+255),w,b
  6903  000100  26D9               	addwf	fsr2l,f,c
  6904  000102  0100               	movlb	0	; () banked
  6905  000104  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6906  000106  22DA               	addwfc	fsr2h,f,c
  6907  000108  0E05               	movlw	5
  6908  00010A  6EDF               	movwf	indf2,c
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;my_i2c.c: 126: overrun_error = 1;
  6912  00010C  0E01               	movlw	1
  6913  00010E  0100               	movlb	0	; () banked
  6914  000110  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;my_i2c.c: 127: ic_ptr->error_count++;
  6918  000112  0100               	movlb	0	; () banked
  6919  000114  EE20 F023          	lfsr	2,35
  6920  000118  0100               	movlb	0	; () banked
  6921  00011A  51C5               	movf	_ic_ptr& (0+255),w,b
  6922  00011C  26D9               	addwf	fsr2l,f,c
  6923  00011E  0100               	movlb	0	; () banked
  6924  000120  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6925  000122  22DA               	addwfc	fsr2h,f,c
  6926  000124  2ADF               	incf	indf2,f,c
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;my_i2c.c: 128: ic_ptr->error_code = 0x4;
  6930  000126  0100               	movlb	0	; () banked
  6931  000128  EE20 F022          	lfsr	2,34
  6932  00012C  0100               	movlb	0	; () banked
  6933  00012E  51C5               	movf	_ic_ptr& (0+255),w,b
  6934  000130  26D9               	addwf	fsr2l,f,c
  6935  000132  0100               	movlb	0	; () banked
  6936  000134  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6937  000136  22DA               	addwfc	fsr2h,f,c
  6938  000138  0E04               	movlw	4
  6939  00013A  6EDF               	movwf	indf2,c
  6940  00013C                     i2l3783:
  6941                           
  6942                           ;my_i2c.c: 129: }
  6943                           ;my_i2c.c: 131: if (SSPSTATbits.BF == 1) {
  6944  00013C  A0C7               	btfss	4039,0,c	;volatile
  6945  00013E  D005               	goto	i2l3789
  6946                           
  6947                           ;my_i2c.c: 132: i2c_data = SSPBUF;
  6948  000140  CFC9 F0A5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6949                           
  6950                           ;my_i2c.c: 133: data_read = 1;
  6951  000144  0E01               	movlw	1
  6952  000146  0100               	movlb	0	; () banked
  6953  000148  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6954  00014A                     i2l3789:
  6955                           
  6956                           ;my_i2c.c: 134: }
  6957                           ;my_i2c.c: 136: blip1();
  6958  00014A  EC20  F00F         	call	i2_blip1	;wreg free
  6959                           
  6960                           ;my_i2c.c: 138: if (!overrun_error) {
  6961  00014E  0100               	movlb	0	; () banked
  6962  000150  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6963  000152  D1C6               	goto	i2l3895
  6964  000154  D1AF               	goto	i2l3893
  6965  000156                     i2l299:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;my_i2c.c: 141: {
  6969                           ;my_i2c.c: 143: if (SSPSTATbits.S == 1) {
  6970  000156  A6C7               	btfss	4039,3,c	;volatile
  6971  000158  D1C3               	goto	i2l3895
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;my_i2c.c: 144: handle_start(data_read);
  6975  00015A  0100               	movlb	0	; () banked
  6976  00015C  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6977  00015E  ECFA  F008         	call	_handle_start
  6978                           
  6979                           ;my_i2c.c: 146: if (ic_ptr->status == 0x8) {
  6980  000162  0100               	movlb	0	; () banked
  6981  000164  EE20 F021          	lfsr	2,33
  6982  000168  0100               	movlb	0	; () banked
  6983  00016A  51C5               	movf	_ic_ptr& (0+255),w,b
  6984  00016C  26D9               	addwf	fsr2l,f,c
  6985  00016E  0100               	movlb	0	; () banked
  6986  000170  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6987  000172  22DA               	addwfc	fsr2h,f,c
  6988  000174  0E08               	movlw	8
  6989  000176  62DF               	cpfseq	indf2,c
  6990  000178  D1B3               	goto	i2l3895
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;my_i2c.c: 147: data_read = 0;
  6994  00017A  0E00               	movlw	0
  6995  00017C  0100               	movlb	0	; () banked
  6996  00017E  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6997                           
  6998                           ;my_i2c.c: 148: msg_to_send = 1;
  6999  000180  0E01               	movlw	1
  7000  000182  0100               	movlb	0	; () banked
  7001  000184  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7002  000186  D1AC               	goto	i2l3895
  7003  000188                     i2l303:
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;my_i2c.c: 154: {
  7007                           ;my_i2c.c: 157: if (SSPSTATbits.P == 1) {
  7008  000188  A8C7               	btfss	4039,4,c	;volatile
  7009  00018A  D02A               	goto	i2l3811
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;my_i2c.c: 160: ic_ptr->event_count++;
  7013  00018C  0100               	movlb	0	; () banked
  7014  00018E  EE20 F020          	lfsr	2,32
  7015  000192  0100               	movlb	0	; () banked
  7016  000194  51C5               	movf	_ic_ptr& (0+255),w,b
  7017  000196  26D9               	addwf	fsr2l,f,c
  7018  000198  0100               	movlb	0	; () banked
  7019  00019A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7020  00019C  22DA               	addwfc	fsr2h,f,c
  7021  00019E  2ADF               	incf	indf2,f,c
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;my_i2c.c: 161: if (data_read) {
  7025  0001A0  0100               	movlb	0	; () banked
  7026  0001A2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7027  0001A4  B4D8               	btfsc	status,2,c
  7028  0001A6  D17B               	goto	L9
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  7032  0001A8  BAC7               	btfsc	4039,5,c	;volatile
  7033  0001AA  D004               	goto	i2l3809
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;my_i2c.c: 163: msg_ready = 1;
  7037  0001AC  0E01               	movlw	1
  7038  0001AE  0100               	movlb	0	; () banked
  7039  0001B0  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7040                           
  7041                           ;my_i2c.c: 164: } else {
  7042  0001B2  D175               	goto	L9
  7043  0001B4                     i2l3809:
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;my_i2c.c: 165: ic_ptr->error_count++;
  7047  0001B4  0100               	movlb	0	; () banked
  7048  0001B6  EE20 F023          	lfsr	2,35
  7049  0001BA  0100               	movlb	0	; () banked
  7050  0001BC  51C5               	movf	_ic_ptr& (0+255),w,b
  7051  0001BE  26D9               	addwf	fsr2l,f,c
  7052  0001C0  0100               	movlb	0	; () banked
  7053  0001C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7054  0001C4  22DA               	addwfc	fsr2h,f,c
  7055  0001C6  2ADF               	incf	indf2,f,c
  7056                           
  7057                           ;my_i2c.c: 166: ic_ptr->error_code = 0x6;
  7058  0001C8  0100               	movlb	0	; () banked
  7059  0001CA  EE20 F022          	lfsr	2,34
  7060  0001CE  0100               	movlb	0	; () banked
  7061  0001D0  51C5               	movf	_ic_ptr& (0+255),w,b
  7062  0001D2  26D9               	addwf	fsr2l,f,c
  7063  0001D4  0100               	movlb	0	; () banked
  7064  0001D6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7065  0001D8  22DA               	addwfc	fsr2h,f,c
  7066  0001DA  0E06               	movlw	6
  7067  0001DC  6EDF               	movwf	indf2,c
  7068                           
  7069                           ; BSR set to: 0
  7070  0001DE  D15F               	goto	L9
  7071  0001E0                     i2l3811:
  7072                           
  7073                           ; BSR set to: 0
  7074  0001E0  0100               	movlb	0	; () banked
  7075  0001E2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7076  0001E4  B4D8               	btfsc	status,2,c
  7077  0001E6  D17C               	goto	i2l3895
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;my_i2c.c: 171: ic_ptr->event_count++;
  7081  0001E8  0100               	movlb	0	; () banked
  7082  0001EA  EE20 F020          	lfsr	2,32
  7083  0001EE  0100               	movlb	0	; () banked
  7084  0001F0  51C5               	movf	_ic_ptr& (0+255),w,b
  7085  0001F2  26D9               	addwf	fsr2l,f,c
  7086  0001F4  0100               	movlb	0	; () banked
  7087  0001F6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7088  0001F8  22DA               	addwfc	fsr2h,f,c
  7089  0001FA  2ADF               	incf	indf2,f,c
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;my_i2c.c: 172: if (SSPSTATbits.D_A == 0)
  7093  0001FC  BAC7               	btfsc	4039,5,c	;volatile
  7094  0001FE  D02A               	goto	i2l3827
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;my_i2c.c: 173: {
  7098                           ;my_i2c.c: 174: if (SSPSTATbits.R_W == 0)
  7099  000200  B4C7               	btfsc	4039,2,c	;volatile
  7100  000202  D00B               	goto	i2l3821
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;my_i2c.c: 175: {
  7104                           ;my_i2c.c: 176: ic_ptr->status = 0x7;
  7105  000204  0100               	movlb	0	; () banked
  7106  000206  EE20 F021          	lfsr	2,33
  7107  00020A  0100               	movlb	0	; () banked
  7108  00020C  51C5               	movf	_ic_ptr& (0+255),w,b
  7109  00020E  26D9               	addwf	fsr2l,f,c
  7110  000210  0100               	movlb	0	; () banked
  7111  000212  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7112  000214  22DA               	addwfc	fsr2h,f,c
  7113  000216  0E07               	movlw	7
  7114  000218  D079               	goto	L6
  7115  00021A                     i2l3821:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;my_i2c.c: 178: else
  7119                           ;my_i2c.c: 179: {
  7120                           ;my_i2c.c: 180: ic_ptr->status = 0x8;
  7121  00021A  0100               	movlb	0	; () banked
  7122  00021C  EE20 F021          	lfsr	2,33
  7123  000220  0100               	movlb	0	; () banked
  7124  000222  51C5               	movf	_ic_ptr& (0+255),w,b
  7125  000224  26D9               	addwf	fsr2l,f,c
  7126  000226  0100               	movlb	0	; () banked
  7127  000228  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7128  00022A  22DA               	addwfc	fsr2h,f,c
  7129  00022C  0E08               	movlw	8
  7130  00022E  6EDF               	movwf	indf2,c
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;my_i2c.c: 181: msg_to_send = 1;
  7134  000230  0E01               	movlw	1
  7135  000232  0100               	movlb	0	; () banked
  7136  000234  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;my_i2c.c: 183: data_read = 0;
  7140  000236  0E00               	movlw	0
  7141  000238  0100               	movlb	0	; () banked
  7142  00023A  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7143                           
  7144                           ;my_i2c.c: 184: ic_ptr->outbufind = 0;
  7145  00023C  0100               	movlb	0	; () banked
  7146  00023E  EE20 F01E          	lfsr	2,30
  7147  000242  0100               	movlb	0	; () banked
  7148  000244  51C5               	movf	_ic_ptr& (0+255),w,b
  7149  000246  26D9               	addwf	fsr2l,f,c
  7150  000248  0100               	movlb	0	; () banked
  7151  00024A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7152  00024C  22DA               	addwfc	fsr2h,f,c
  7153  00024E  0E00               	movlw	0
  7154  000250  6EDF               	movwf	indf2,c
  7155                           
  7156                           ;my_i2c.c: 185: goto l;
  7157  000252  D020               	goto	i2l3829
  7158  000254                     i2l3827:
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;my_i2c.c: 188: else
  7162                           ;my_i2c.c: 189: {
  7163                           ;my_i2c.c: 190: ic_ptr->error_count++;
  7164  000254  0100               	movlb	0	; () banked
  7165  000256  EE20 F023          	lfsr	2,35
  7166  00025A  0100               	movlb	0	; () banked
  7167  00025C  51C5               	movf	_ic_ptr& (0+255),w,b
  7168  00025E  26D9               	addwf	fsr2l,f,c
  7169  000260  0100               	movlb	0	; () banked
  7170  000262  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7171  000264  22DA               	addwfc	fsr2h,f,c
  7172  000266  2ADF               	incf	indf2,f,c
  7173                           
  7174                           ;my_i2c.c: 191: ic_ptr->status = 0x5;
  7175  000268  0100               	movlb	0	; () banked
  7176  00026A  EE20 F021          	lfsr	2,33
  7177  00026E  0100               	movlb	0	; () banked
  7178  000270  51C5               	movf	_ic_ptr& (0+255),w,b
  7179  000272  26D9               	addwf	fsr2l,f,c
  7180  000274  0100               	movlb	0	; () banked
  7181  000276  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7182  000278  22DA               	addwfc	fsr2h,f,c
  7183  00027A  0E05               	movlw	5
  7184  00027C  6EDF               	movwf	indf2,c
  7185                           
  7186                           ;my_i2c.c: 192: ic_ptr->error_code = 0x6;
  7187  00027E  0100               	movlb	0	; () banked
  7188  000280  EE20 F022          	lfsr	2,34
  7189  000284  0100               	movlb	0	; () banked
  7190  000286  51C5               	movf	_ic_ptr& (0+255),w,b
  7191  000288  26D9               	addwf	fsr2l,f,c
  7192  00028A  0100               	movlb	0	; () banked
  7193  00028C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7194  00028E  22DA               	addwfc	fsr2h,f,c
  7195  000290  0E06               	movlw	6
  7196  000292  D03C               	goto	L6
  7197  000294                     i2l3829:
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;my_i2c.c: 199: {
  7201                           ;my_i2c.c: 200: if (ic_ptr->outbufind < 14)
  7202  000294  0100               	movlb	0	; () banked
  7203  000296  EE20 F01E          	lfsr	2,30
  7204  00029A  0100               	movlb	0	; () banked
  7205  00029C  51C5               	movf	_ic_ptr& (0+255),w,b
  7206  00029E  26D9               	addwf	fsr2l,f,c
  7207  0002A0  0100               	movlb	0	; () banked
  7208  0002A2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7209  0002A4  22DA               	addwfc	fsr2h,f,c
  7210  0002A6  50DF               	movf	indf2,w,c
  7211  0002A8  0100               	movlb	0	; () banked
  7212  0002AA  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7213  0002AC  0E0E               	movlw	14
  7214  0002AE  0100               	movlb	0	; () banked
  7215  0002B0  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7216  0002B2  B0D8               	btfsc	status,0,c
  7217  0002B4  D0F4               	goto	L9
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;my_i2c.c: 201: {
  7221                           ;my_i2c.c: 202: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7222  0002B6  0100               	movlb	0	; () banked
  7223  0002B8  EE20 F01E          	lfsr	2,30
  7224  0002BC  0100               	movlb	0	; () banked
  7225  0002BE  51C5               	movf	_ic_ptr& (0+255),w,b
  7226  0002C0  26D9               	addwf	fsr2l,f,c
  7227  0002C2  0100               	movlb	0	; () banked
  7228  0002C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7229  0002C6  22DA               	addwfc	fsr2h,f,c
  7230  0002C8  50DF               	movf	indf2,w,c
  7231  0002CA  0100               	movlb	0	; () banked
  7232  0002CC  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7233  0002CE  0100               	movlb	0	; () banked
  7234  0002D0  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7235  0002D2  0D01               	mullw	1
  7236  0002D4  0E10               	movlw	16
  7237  0002D6  26F3               	addwf	prodl,f,c
  7238  0002D8  0E00               	movlw	0
  7239  0002DA  22F4               	addwfc	prodh,f,c
  7240  0002DC  50F3               	movf	prodl,w,c
  7241  0002DE  0100               	movlb	0	; () banked
  7242  0002E0  25C5               	addwf	_ic_ptr& (0+255),w,b
  7243  0002E2  6ED9               	movwf	fsr2l,c
  7244  0002E4  50F4               	movf	prodh,w,c
  7245  0002E6  0100               	movlb	0	; () banked
  7246  0002E8  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7247  0002EA  6EDA               	movwf	fsr2h,c
  7248  0002EC  50DF               	movf	indf2,w,c
  7249  0002EE  6EC9               	movwf	4041,c	;volatile
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;my_i2c.c: 203: ic_ptr->outbufind++;
  7253  0002F0  0100               	movlb	0	; () banked
  7254  0002F2  EE20 F01E          	lfsr	2,30
  7255  0002F6  0100               	movlb	0	; () banked
  7256  0002F8  51C5               	movf	_ic_ptr& (0+255),w,b
  7257  0002FA  26D9               	addwf	fsr2l,f,c
  7258  0002FC  0100               	movlb	0	; () banked
  7259  0002FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7260  000300  22DA               	addwfc	fsr2h,f,c
  7261  000302  2ADF               	incf	indf2,f,c
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;my_i2c.c: 204: data_written = 1;
  7265  000304  0E01               	movlw	1
  7266  000306  0100               	movlb	0	; () banked
  7267  000308  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  7268                           
  7269                           ;my_i2c.c: 205: }
  7270  00030A  D0EA               	goto	i2l3895
  7271  00030C                     L6:
  7272  00030C  6EDF               	movwf	indf2,c
  7273  00030E  D0E8               	goto	i2l3895
  7274  000310                     i2l3839:
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;my_i2c.c: 214: {
  7278                           ;my_i2c.c: 215: blip2();
  7279  000310  EC1C  F00F         	call	i2_blip2	;wreg free
  7280                           
  7281                           ;my_i2c.c: 217: if (SSPSTATbits.P == 1)
  7282  000314  A8C7               	btfss	4039,4,c	;volatile
  7283  000316  D05C               	goto	i2l3863
  7284                           
  7285                           ;my_i2c.c: 218: {
  7286                           ;my_i2c.c: 219: blip2();
  7287  000318  EC1C  F00F         	call	i2_blip2	;wreg free
  7288                           
  7289                           ;my_i2c.c: 222: ic_ptr->event_count++;
  7290  00031C  0100               	movlb	0	; () banked
  7291  00031E  EE20 F020          	lfsr	2,32
  7292  000322  0100               	movlb	0	; () banked
  7293  000324  51C5               	movf	_ic_ptr& (0+255),w,b
  7294  000326  26D9               	addwf	fsr2l,f,c
  7295  000328  0100               	movlb	0	; () banked
  7296  00032A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7297  00032C  22DA               	addwfc	fsr2h,f,c
  7298  00032E  2ADF               	incf	indf2,f,c
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;my_i2c.c: 223: if (data_read)
  7302  000330  0100               	movlb	0	; () banked
  7303  000332  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7304  000334  B4D8               	btfsc	status,2,c
  7305  000336  D048               	goto	i2l3859
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;my_i2c.c: 224: {
  7309                           ;my_i2c.c: 225: if (SSPSTATbits.D_A == 1)
  7310  000338  AAC7               	btfss	4039,5,c	;volatile
  7311  00033A  D025               	goto	i2l3857
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;my_i2c.c: 226: {
  7315                           ;my_i2c.c: 228: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7316  00033C  0100               	movlb	0	; () banked
  7317  00033E  EE20 F00E          	lfsr	2,14
  7318  000342  0100               	movlb	0	; () banked
  7319  000344  51C5               	movf	_ic_ptr& (0+255),w,b
  7320  000346  26D9               	addwf	fsr2l,f,c
  7321  000348  0100               	movlb	0	; () banked
  7322  00034A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7323  00034C  22DA               	addwfc	fsr2h,f,c
  7324  00034E  50DF               	movf	indf2,w,c
  7325  000350  0100               	movlb	0	; () banked
  7326  000352  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7327  000354  0100               	movlb	0	; () banked
  7328  000356  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7329  000358  0D01               	mullw	1
  7330  00035A  50F3               	movf	prodl,w,c
  7331  00035C  0100               	movlb	0	; () banked
  7332  00035E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7333  000360  6ED9               	movwf	fsr2l,c
  7334  000362  50F4               	movf	prodh,w,c
  7335  000364  0100               	movlb	0	; () banked
  7336  000366  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7337  000368  6EDA               	movwf	fsr2h,c
  7338  00036A  0100               	movlb	0	; () banked
  7339  00036C  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;my_i2c.c: 229: ic_ptr->buflen++;
  7343  000370  0100               	movlb	0	; () banked
  7344  000372  EE20 F00E          	lfsr	2,14
  7345  000376  0100               	movlb	0	; () banked
  7346  000378  51C5               	movf	_ic_ptr& (0+255),w,b
  7347  00037A  26D9               	addwf	fsr2l,f,c
  7348  00037C  0100               	movlb	0	; () banked
  7349  00037E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7350  000380  22DA               	addwfc	fsr2h,f,c
  7351  000382  2ADF               	incf	indf2,f,c
  7352  000384  D021               	goto	i2l3859
  7353  000386                     i2l3857:
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;my_i2c.c: 232: else
  7357                           ;my_i2c.c: 233: {
  7358                           ;my_i2c.c: 235: ic_ptr->error_count++;
  7359  000386  0100               	movlb	0	; () banked
  7360  000388  EE20 F023          	lfsr	2,35
  7361  00038C  0100               	movlb	0	; () banked
  7362  00038E  51C5               	movf	_ic_ptr& (0+255),w,b
  7363  000390  26D9               	addwf	fsr2l,f,c
  7364  000392  0100               	movlb	0	; () banked
  7365  000394  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7366  000396  22DA               	addwfc	fsr2h,f,c
  7367  000398  2ADF               	incf	indf2,f,c
  7368                           
  7369                           ;my_i2c.c: 236: ic_ptr->error_code = 0x6;
  7370  00039A  0100               	movlb	0	; () banked
  7371  00039C  EE20 F022          	lfsr	2,34
  7372  0003A0  0100               	movlb	0	; () banked
  7373  0003A2  51C5               	movf	_ic_ptr& (0+255),w,b
  7374  0003A4  26D9               	addwf	fsr2l,f,c
  7375  0003A6  0100               	movlb	0	; () banked
  7376  0003A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7377  0003AA  22DA               	addwfc	fsr2h,f,c
  7378  0003AC  0E06               	movlw	6
  7379  0003AE  6EDF               	movwf	indf2,c
  7380                           
  7381                           ;my_i2c.c: 237: ic_ptr->status = 0x5;
  7382  0003B0  0100               	movlb	0	; () banked
  7383  0003B2  EE20 F021          	lfsr	2,33
  7384  0003B6  0100               	movlb	0	; () banked
  7385  0003B8  51C5               	movf	_ic_ptr& (0+255),w,b
  7386  0003BA  26D9               	addwf	fsr2l,f,c
  7387  0003BC  0100               	movlb	0	; () banked
  7388  0003BE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7389  0003C0  22DA               	addwfc	fsr2h,f,c
  7390  0003C2  0E05               	movlw	5
  7391  0003C4  6EDF               	movwf	indf2,c
  7392  0003C6  D06B               	goto	L9
  7393  0003C8                     i2l3859:
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;my_i2c.c: 240: else
  7397                           ;my_i2c.c: 241: {
  7398                           ;my_i2c.c: 243: msg_ready = 1;
  7399  0003C8  0E01               	movlw	1
  7400  0003CA  0100               	movlb	0	; () banked
  7401  0003CC  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7402                           
  7403                           ; BSR set to: 0
  7404  0003CE  D067               	goto	L9
  7405  0003D0                     i2l3863:
  7406                           
  7407                           ;my_i2c.c: 247: else if (data_read)
  7408  0003D0  0100               	movlb	0	; () banked
  7409  0003D2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7410  0003D4  B4D8               	btfsc	status,2,c
  7411  0003D6  D084               	goto	i2l3895
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;my_i2c.c: 248: {
  7415                           ;my_i2c.c: 249: blip2();
  7416  0003D8  EC1C  F00F         	call	i2_blip2	;wreg free
  7417                           
  7418                           ;my_i2c.c: 250: ic_ptr->event_count++;
  7419  0003DC  0100               	movlb	0	; () banked
  7420  0003DE  EE20 F020          	lfsr	2,32
  7421  0003E2  0100               	movlb	0	; () banked
  7422  0003E4  51C5               	movf	_ic_ptr& (0+255),w,b
  7423  0003E6  26D9               	addwf	fsr2l,f,c
  7424  0003E8  0100               	movlb	0	; () banked
  7425  0003EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7426  0003EC  22DA               	addwfc	fsr2h,f,c
  7427  0003EE  2ADF               	incf	indf2,f,c
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;my_i2c.c: 251: if (SSP1STATbits.D_A == 1)
  7431  0003F0  AAC7               	btfss	4039,5,c	;volatile
  7432  0003F2  D01E               	goto	i2l326
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;my_i2c.c: 252: {
  7436                           ;my_i2c.c: 254: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7437  0003F4  0100               	movlb	0	; () banked
  7438  0003F6  EE20 F00E          	lfsr	2,14
  7439  0003FA  0100               	movlb	0	; () banked
  7440  0003FC  51C5               	movf	_ic_ptr& (0+255),w,b
  7441  0003FE  26D9               	addwf	fsr2l,f,c
  7442  000400  0100               	movlb	0	; () banked
  7443  000402  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7444  000404  22DA               	addwfc	fsr2h,f,c
  7445  000406  50DF               	movf	indf2,w,c
  7446  000408  0100               	movlb	0	; () banked
  7447  00040A  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7448  00040C  0100               	movlb	0	; () banked
  7449  00040E  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7450  000410  0D01               	mullw	1
  7451  000412  50F3               	movf	prodl,w,c
  7452  000414  0100               	movlb	0	; () banked
  7453  000416  25C5               	addwf	_ic_ptr& (0+255),w,b
  7454  000418  6ED9               	movwf	fsr2l,c
  7455  00041A  50F4               	movf	prodh,w,c
  7456  00041C  0100               	movlb	0	; () banked
  7457  00041E  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7458  000420  6EDA               	movwf	fsr2h,c
  7459  000422  0100               	movlb	0	; () banked
  7460  000424  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;my_i2c.c: 255: ic_ptr->buflen++;
  7464  000428  0100               	movlb	0	; () banked
  7465  00042A  EE20 F00E          	lfsr	2,14
  7466  00042E  D02F               	goto	L7
  7467  000430                     i2l326:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;my_i2c.c: 257: else
  7471                           ;my_i2c.c: 258: {
  7472                           ;my_i2c.c: 259: if (SSPSTATbits.R_W == 1)
  7473  000430  A4C7               	btfss	4039,2,c	;volatile
  7474  000432  D6C0               	goto	i2l3809
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;my_i2c.c: 260: {
  7478                           ;my_i2c.c: 262: ic_ptr->status = 0x8;
  7479  000434  0100               	movlb	0	; () banked
  7480  000436  EE20 F021          	lfsr	2,33
  7481  00043A  0100               	movlb	0	; () banked
  7482  00043C  51C5               	movf	_ic_ptr& (0+255),w,b
  7483  00043E  26D9               	addwf	fsr2l,f,c
  7484  000440  0100               	movlb	0	; () banked
  7485  000442  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7486  000444  22DA               	addwfc	fsr2h,f,c
  7487  000446  0E08               	movlw	8
  7488  000448  6EDF               	movwf	indf2,c
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;my_i2c.c: 263: msg_ready = 1;
  7492  00044A  0E01               	movlw	1
  7493  00044C  0100               	movlb	0	; () banked
  7494  00044E  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;my_i2c.c: 264: msg_to_send = 1;
  7498  000450  0E01               	movlw	1
  7499  000452  0100               	movlb	0	; () banked
  7500  000454  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;my_i2c.c: 266: data_read = 0;
  7504  000456  0E00               	movlw	0
  7505  000458  0100               	movlb	0	; () banked
  7506  00045A  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;my_i2c.c: 267: ic_ptr->outbufind = 0;
  7510  00045C  0100               	movlb	0	; () banked
  7511  00045E  EE20 F01E          	lfsr	2,30
  7512  000462  0100               	movlb	0	; () banked
  7513  000464  51C5               	movf	_ic_ptr& (0+255),w,b
  7514  000466  26D9               	addwf	fsr2l,f,c
  7515  000468  0100               	movlb	0	; () banked
  7516  00046A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7517  00046C  22DA               	addwfc	fsr2h,f,c
  7518  00046E  0E00               	movlw	0
  7519  000470  6EDF               	movwf	indf2,c
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;my_i2c.c: 268: SSPBUF = ic_ptr->outbuffer[0];
  7523  000472  0100               	movlb	0	; () banked
  7524  000474  EE20 F010          	lfsr	2,16
  7525  000478  0100               	movlb	0	; () banked
  7526  00047A  51C5               	movf	_ic_ptr& (0+255),w,b
  7527  00047C  26D9               	addwf	fsr2l,f,c
  7528  00047E  0100               	movlb	0	; () banked
  7529  000480  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7530  000482  22DA               	addwfc	fsr2h,f,c
  7531  000484  50DF               	movf	indf2,w,c
  7532  000486  6EC9               	movwf	4041,c	;volatile
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;my_i2c.c: 269: ic_ptr->outbufind++;
  7536  000488  0100               	movlb	0	; () banked
  7537  00048A  EE20 F01E          	lfsr	2,30
  7538  00048E                     L7:
  7539  00048E  0100               	movlb	0	; () banked
  7540  000490  51C5               	movf	_ic_ptr& (0+255),w,b
  7541  000492  26D9               	addwf	fsr2l,f,c
  7542  000494  0100               	movlb	0	; () banked
  7543  000496  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7544  000498  22DA               	addwfc	fsr2h,f,c
  7545  00049A  2ADF               	incf	indf2,f,c
  7546                           
  7547                           ;my_i2c.c: 271: }
  7548  00049C  D021               	goto	i2l3895
  7549  00049E                     L9:
  7550                           
  7551                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  7552  00049E  0100               	movlb	0	; () banked
  7553  0004A0  EE20 F021          	lfsr	2,33
  7554  0004A4  0100               	movlb	0	; () banked
  7555  0004A6  51C5               	movf	_ic_ptr& (0+255),w,b
  7556  0004A8  26D9               	addwf	fsr2l,f,c
  7557  0004AA  0100               	movlb	0	; () banked
  7558  0004AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7559  0004AE  22DA               	addwfc	fsr2h,f,c
  7560  0004B0  0E05               	movlw	5
  7561  0004B2  D72C               	goto	L6
  7562  0004B4                     i2l3893:
  7563                           
  7564                           ; BSR set to: 0
  7565  0004B4  0100               	movlb	0	; () banked
  7566  0004B6  EE20 F021          	lfsr	2,33
  7567  0004BA  0100               	movlb	0	; () banked
  7568  0004BC  51C5               	movf	_ic_ptr& (0+255),w,b
  7569  0004BE  26D9               	addwf	fsr2l,f,c
  7570  0004C0  0100               	movlb	0	; () banked
  7571  0004C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7572  0004C4  22DA               	addwfc	fsr2h,f,c
  7573  0004C6  50DF               	movf	indf2,w,c
  7574                           
  7575                           ; Switch size 1, requested type "space"
  7576                           ; Number of cases is 4, Range of values is 5 to 8
  7577                           ; switch strategies available:
  7578                           ; Name         Instructions Cycles
  7579                           ; simple_byte           13     7 (average)
  7580                           ;	Chosen strategy is simple_byte
  7581  0004C8  0A05               	xorlw	5	; case 5
  7582  0004CA  B4D8               	btfsc	status,2,c
  7583  0004CC  D644               	goto	i2l299
  7584  0004CE  0A03               	xorlw	3	; case 6
  7585  0004D0  B4D8               	btfsc	status,2,c
  7586  0004D2  D65A               	goto	i2l303
  7587  0004D4  0A01               	xorlw	1	; case 7
  7588  0004D6  B4D8               	btfsc	status,2,c
  7589  0004D8  D71B               	goto	i2l3839
  7590  0004DA  0A0F               	xorlw	15	; case 8
  7591  0004DC  B4D8               	btfsc	status,2,c
  7592  0004DE  D6DA               	goto	i2l3829
  7593  0004E0                     i2l3895:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;my_i2c.c: 283: }
  7597                           ;my_i2c.c: 285: blip1();
  7598  0004E0  EC20  F00F         	call	i2_blip1	;wreg free
  7599                           
  7600                           ;my_i2c.c: 288: if (data_read || data_written) {
  7601  0004E4  0100               	movlb	0	; () banked
  7602  0004E6  67A9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7603  0004E8  D004               	goto	i2l332
  7604                           
  7605                           ; BSR set to: 0
  7606  0004EA  0100               	movlb	0	; () banked
  7607  0004EC  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7608  0004EE  B4D8               	btfsc	status,2,c
  7609  0004F0  D002               	goto	i2l3903
  7610  0004F2                     i2l332:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;my_i2c.c: 290: if (SSPCON1bits.CKP == 0) {
  7614  0004F2  A8C6               	btfss	4038,4,c	;volatile
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;my_i2c.c: 291: SSPCON1bits.CKP = 1;
  7618  0004F4  88C6               	bsf	4038,4,c	;volatile
  7619  0004F6                     i2l3903:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;my_i2c.c: 292: }
  7623                           ;my_i2c.c: 293: }
  7624                           ;my_i2c.c: 298: if ((ic_ptr->buflen > 14) && (!msg_ready))
  7625  0004F6  0100               	movlb	0	; () banked
  7626  0004F8  EE20 F00E          	lfsr	2,14
  7627  0004FC  0100               	movlb	0	; () banked
  7628  0004FE  51C5               	movf	_ic_ptr& (0+255),w,b
  7629  000500  26D9               	addwf	fsr2l,f,c
  7630  000502  0100               	movlb	0	; () banked
  7631  000504  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7632  000506  22DA               	addwfc	fsr2h,f,c
  7633  000508  0E0E               	movlw	14
  7634  00050A  64DF               	cpfsgt	indf2,c
  7635  00050C  D023               	goto	i2l3909
  7636                           
  7637                           ; BSR set to: 0
  7638  00050E  0100               	movlb	0	; () banked
  7639  000510  67A8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7640  000512  D020               	goto	i2l3909
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;my_i2c.c: 299: {
  7644                           ;my_i2c.c: 301: ic_ptr->status = 0x5;
  7645  000514  0100               	movlb	0	; () banked
  7646  000516  EE20 F021          	lfsr	2,33
  7647  00051A  0100               	movlb	0	; () banked
  7648  00051C  51C5               	movf	_ic_ptr& (0+255),w,b
  7649  00051E  26D9               	addwf	fsr2l,f,c
  7650  000520  0100               	movlb	0	; () banked
  7651  000522  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7652  000524  22DA               	addwfc	fsr2h,f,c
  7653  000526  0E05               	movlw	5
  7654  000528  6EDF               	movwf	indf2,c
  7655                           
  7656                           ;my_i2c.c: 302: ic_ptr->error_count++;
  7657  00052A  0100               	movlb	0	; () banked
  7658  00052C  EE20 F023          	lfsr	2,35
  7659  000530  0100               	movlb	0	; () banked
  7660  000532  51C5               	movf	_ic_ptr& (0+255),w,b
  7661  000534  26D9               	addwf	fsr2l,f,c
  7662  000536  0100               	movlb	0	; () banked
  7663  000538  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7664  00053A  22DA               	addwfc	fsr2h,f,c
  7665  00053C  2ADF               	incf	indf2,f,c
  7666                           
  7667                           ;my_i2c.c: 303: ic_ptr->error_code = 0x7;
  7668  00053E  0100               	movlb	0	; () banked
  7669  000540  EE20 F022          	lfsr	2,34
  7670  000544  0100               	movlb	0	; () banked
  7671  000546  51C5               	movf	_ic_ptr& (0+255),w,b
  7672  000548  26D9               	addwf	fsr2l,f,c
  7673  00054A  0100               	movlb	0	; () banked
  7674  00054C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7675  00054E  22DA               	addwfc	fsr2h,f,c
  7676  000550  0E07               	movlw	7
  7677  000552  6EDF               	movwf	indf2,c
  7678  000554                     i2l3909:
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;my_i2c.c: 304: }
  7682                           ;my_i2c.c: 306: if (msg_ready)
  7683  000554  0100               	movlb	0	; () banked
  7684  000556  51A8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7685  000558  B4D8               	btfsc	status,2,c
  7686  00055A  D032               	goto	i2l3917
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;my_i2c.c: 307: {
  7690                           ;my_i2c.c: 308: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7691  00055C  0100               	movlb	0	; () banked
  7692  00055E  EE20 F020          	lfsr	2,32
  7693  000562  0100               	movlb	0	; () banked
  7694  000564  51C5               	movf	_ic_ptr& (0+255),w,b
  7695  000566  26D9               	addwf	fsr2l,f,c
  7696  000568  0100               	movlb	0	; () banked
  7697  00056A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7698  00056C  22DA               	addwfc	fsr2h,f,c
  7699  00056E  0100               	movlb	0	; () banked
  7700  000570  EE10 F00E          	lfsr	1,14
  7701  000574  0100               	movlb	0	; () banked
  7702  000576  51C5               	movf	_ic_ptr& (0+255),w,b
  7703  000578  26E1               	addwf	fsr1l,f,c
  7704  00057A  0100               	movlb	0	; () banked
  7705  00057C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7706  00057E  22E2               	addwfc	fsr1h,f,c
  7707  000580  50E7               	movf	indf1,w,c
  7708  000582  0100               	movlb	0	; () banked
  7709  000584  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7710  000586  0100               	movlb	0	; () banked
  7711  000588  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7712  00058A  0D01               	mullw	1
  7713  00058C  50F3               	movf	prodl,w,c
  7714  00058E  0100               	movlb	0	; () banked
  7715  000590  25C5               	addwf	_ic_ptr& (0+255),w,b
  7716  000592  6EE1               	movwf	fsr1l,c
  7717  000594  50F4               	movf	prodh,w,c
  7718  000596  0100               	movlb	0	; () banked
  7719  000598  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7720  00059A  6EE2               	movwf	fsr1h,c
  7721  00059C  CFDF FFE7          	movff	indf2,indf1
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;my_i2c.c: 309: ToMainHigh_sendmsg(14, 40, (void *) ic_ptr->buffer);
  7725  0005A0  0E28               	movlw	40
  7726  0005A2  0100               	movlb	0	; () banked
  7727  0005A4  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7728  0005A6  0100               	movlb	0	; () banked
  7729  0005A8  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7730  0005AC  0100               	movlb	0	; () banked
  7731  0005AE  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7732  0005B2  0E0E               	movlw	14
  7733  0005B4  EC32  F00E         	call	_ToMainHigh_sendmsg
  7734                           
  7735                           ;my_i2c.c: 310: ic_ptr->buflen = 0;
  7736  0005B8  0100               	movlb	0	; () banked
  7737  0005BA  EE20 F00E          	lfsr	2,14
  7738  0005BE  D041               	goto	L8
  7739  0005C0                     i2l3917:
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;my_i2c.c: 312: else if (ic_ptr->error_count >= 1)
  7743  0005C0  0100               	movlb	0	; () banked
  7744  0005C2  EE20 F023          	lfsr	2,35
  7745  0005C6  0100               	movlb	0	; () banked
  7746  0005C8  51C5               	movf	_ic_ptr& (0+255),w,b
  7747  0005CA  26D9               	addwf	fsr2l,f,c
  7748  0005CC  0100               	movlb	0	; () banked
  7749  0005CE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7750  0005D0  22DA               	addwfc	fsr2h,f,c
  7751  0005D2  50DF               	movf	indf2,w,c
  7752  0005D4  B4D8               	btfsc	status,2,c
  7753  0005D6  D03D               	goto	i2l3925
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;my_i2c.c: 313: {
  7757                           ;my_i2c.c: 314: error_buf[0] = ic_ptr->error_count;
  7758  0005D8  0100               	movlb	0	; () banked
  7759  0005DA  EE20 F023          	lfsr	2,35
  7760  0005DE  0100               	movlb	0	; () banked
  7761  0005E0  51C5               	movf	_ic_ptr& (0+255),w,b
  7762  0005E2  26D9               	addwf	fsr2l,f,c
  7763  0005E4  0100               	movlb	0	; () banked
  7764  0005E6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7765  0005E8  22DA               	addwfc	fsr2h,f,c
  7766  0005EA  50DF               	movf	indf2,w,c
  7767  0005EC  0100               	movlb	0	; () banked
  7768  0005EE  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  7769                           
  7770                           ;my_i2c.c: 315: error_buf[1] = ic_ptr->error_code;
  7771  0005F0  0100               	movlb	0	; () banked
  7772  0005F2  EE20 F022          	lfsr	2,34
  7773  0005F6  0100               	movlb	0	; () banked
  7774  0005F8  51C5               	movf	_ic_ptr& (0+255),w,b
  7775  0005FA  26D9               	addwf	fsr2l,f,c
  7776  0005FC  0100               	movlb	0	; () banked
  7777  0005FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7778  000600  22DA               	addwfc	fsr2h,f,c
  7779  000602  50DF               	movf	indf2,w,c
  7780  000604  0100               	movlb	0	; () banked
  7781  000606  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7782                           
  7783                           ;my_i2c.c: 316: error_buf[2] = ic_ptr->event_count;
  7784  000608  0100               	movlb	0	; () banked
  7785  00060A  EE20 F020          	lfsr	2,32
  7786  00060E  0100               	movlb	0	; () banked
  7787  000610  51C5               	movf	_ic_ptr& (0+255),w,b
  7788  000612  26D9               	addwf	fsr2l,f,c
  7789  000614  0100               	movlb	0	; () banked
  7790  000616  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7791  000618  22DA               	addwfc	fsr2h,f,c
  7792  00061A  50DF               	movf	indf2,w,c
  7793  00061C  0100               	movlb	0	; () banked
  7794  00061E  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;my_i2c.c: 317: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7798  000620  0E29               	movlw	41
  7799  000622  0100               	movlb	0	; () banked
  7800  000624  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7801  000626  0100               	movlb	0	; () banked
  7802  000628  0E00               	movlw	high i2c_int_handler@error_buf
  7803  00062A  0100               	movlb	0	; () banked
  7804  00062C  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7805  00062E  0100               	movlb	0	; () banked
  7806  000630  0E9F               	movlw	low i2c_int_handler@error_buf
  7807  000632  0100               	movlb	0	; () banked
  7808  000634  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7809  000636  0E03               	movlw	3
  7810  000638  EC32  F00E         	call	_ToMainHigh_sendmsg
  7811                           
  7812                           ;my_i2c.c: 318: ic_ptr->error_count = 0;
  7813  00063C  0100               	movlb	0	; () banked
  7814  00063E  EE20 F023          	lfsr	2,35
  7815  000642                     L8:
  7816  000642  0100               	movlb	0	; () banked
  7817  000644  51C5               	movf	_ic_ptr& (0+255),w,b
  7818  000646  26D9               	addwf	fsr2l,f,c
  7819  000648  0100               	movlb	0	; () banked
  7820  00064A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7821  00064C  22DA               	addwfc	fsr2h,f,c
  7822  00064E  0E00               	movlw	0
  7823  000650  6EDF               	movwf	indf2,c
  7824  000652                     i2l3925:
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;my_i2c.c: 319: }
  7828                           ;my_i2c.c: 320: if (msg_to_send) {
  7829  000652  0100               	movlb	0	; () banked
  7830  000654  51A6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7831  000656  B4D8               	btfsc	status,2,c
  7832  000658  D01F               	goto	i2l3933
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;my_i2c.c: 322: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  7836  00065A  0E10               	movlw	16
  7837  00065C  0100               	movlb	0	; () banked
  7838  00065E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7839  000660  0100               	movlb	0	; () banked
  7840  000662  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7841  000664  0E00               	movlw	0
  7842  000666  0100               	movlb	0	; () banked
  7843  000668  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7844  00066A  0100               	movlb	0	; () banked
  7845  00066C  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7846  00066E  0E0E               	movlw	14
  7847  000670  EC04  F008         	call	_start_i2c_slave_reply
  7848                           
  7849                           ;my_i2c.c: 324: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7850  000674  0E2A               	movlw	42
  7851  000676  0100               	movlb	0	; () banked
  7852  000678  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7853  00067A  0100               	movlb	0	; () banked
  7854  00067C  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7855  000680  0100               	movlb	0	; () banked
  7856  000682  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7857  000686  0E00               	movlw	0
  7858  000688  EC32  F00E         	call	_ToMainHigh_sendmsg
  7859                           
  7860                           ;my_i2c.c: 325: need_data = 1;
  7861  00068C  0E01               	movlw	1
  7862  00068E  0100               	movlb	0	; () banked
  7863  000690  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;my_i2c.c: 326: msg_to_send = 0;
  7867  000692  0E00               	movlw	0
  7868  000694  0100               	movlb	0	; () banked
  7869  000696  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7870  000698                     i2l3933:
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;my_i2c.c: 327: }
  7874                           ;my_i2c.c: 329: blip1();
  7875  000698  EC20  F00F         	call	i2_blip1	;wreg free
  7876                           
  7877                           ;my_i2c.c: 331: if(need_data)
  7878  00069C  0100               	movlb	0	; () banked
  7879  00069E  51A4               	movf	i2c_int_handler@need_data& (0+255),w,b
  7880  0006A0  B4D8               	btfsc	status,2,c
  7881  0006A2  D01A               	goto	i2l3945
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;my_i2c.c: 332: {
  7885                           ;my_i2c.c: 333: unsigned char msg_type;
  7886                           ;my_i2c.c: 334: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  7887  0006A4  0100               	movlb	0	; () banked
  7888  0006A6  0E00               	movlw	high i2c_int_handler@msg_type
  7889  0006A8  0100               	movlb	0	; () banked
  7890  0006AA  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7891  0006AC  0100               	movlb	0	; () banked
  7892  0006AE  0EA7               	movlw	low i2c_int_handler@msg_type
  7893  0006B0  0100               	movlb	0	; () banked
  7894  0006B2  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7895  0006B4  0E10               	movlw	16
  7896  0006B6  0100               	movlb	0	; () banked
  7897  0006B8  25C5               	addwf	_ic_ptr& (0+255),w,b
  7898  0006BA  0100               	movlb	0	; () banked
  7899  0006BC  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7900  0006BE  0E00               	movlw	0
  7901  0006C0  0100               	movlb	0	; () banked
  7902  0006C2  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7903  0006C4  0100               	movlb	0	; () banked
  7904  0006C6  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7905  0006C8  0E0E               	movlw	14
  7906  0006CA  ECB7  F00D         	call	_FromMainHigh_recvmsg
  7907  0006CE  0100               	movlb	0	; () banked
  7908  0006D0  6F9E               	movwf	i2c_int_handler@length& (0+255),b
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;my_i2c.c: 343: else
  7912                           ;my_i2c.c: 344: {
  7913                           ;my_i2c.c: 345: need_data = 0;
  7914                           
  7915                           ; BSR set to: 0
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;my_i2c.c: 340: {
  7919                           ;my_i2c.c: 342: }
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;my_i2c.c: 339: else if( length < 0 )
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;my_i2c.c: 336: {
  7926                           ;my_i2c.c: 338: }
  7927                           
  7928                           ;my_i2c.c: 335: if( length == -4 )
  7929  0006D2  0E00               	movlw	0
  7930  0006D4  0100               	movlb	0	; () banked
  7931  0006D6  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7932  0006D8                     i2l3945:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;my_i2c.c: 346: }
  7936                           ;my_i2c.c: 347: }
  7937                           ;my_i2c.c: 349: blip1();
  7938  0006D8  EC20  F00F         	call	i2_blip1	;wreg free
  7939                           
  7940                           ;my_i2c.c: 350: LATDbits.LD2 = 1;
  7941  0006DC  848C               	bsf	3980,2,c	;volatile
  7942                           
  7943                           ;my_i2c.c: 351: LATDbits.LD2 = 0;
  7944  0006DE  948C               	bcf	3980,2,c	;volatile
  7945  0006E0  0012               	return	
  7946  0006E2                     __end_of_i2c_int_handler:
  7947                           	opt stack 0
  7948                           pclatu	equ	0xFFB
  7949                           pclath	equ	0xFFA
  7950                           tblptru	equ	0xFF8
  7951                           tblptrh	equ	0xFF7
  7952                           tblptrl	equ	0xFF6
  7953                           tablat	equ	0xFF5
  7954                           prodh	equ	0xFF4
  7955                           prodl	equ	0xFF3
  7956                           intcon	equ	0xFF2
  7957                           postinc0	equ	0xFEE
  7958                           fsr0h	equ	0xFEA
  7959                           fsr0l	equ	0xFE9
  7960                           wreg	equ	0xFE8
  7961                           indf1	equ	0xFE7
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           bsr	equ	0xFE0
  7965                           indf2	equ	0xFDF
  7966                           postinc2	equ	0xFDE
  7967                           postdec2	equ	0xFDD
  7968                           fsr2h	equ	0xFDA
  7969                           fsr2l	equ	0xFD9
  7970                           status	equ	0xFD8
  7971                           
  7972 ;; *************** function i2_blip2 *****************
  7973 ;; Defined at:
  7974 ;;		line 25 in file "../src/debug.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;		None
  7979 ;; Return value:  Size  Location     Type
  7980 ;;		None               void
  7981 ;; Registers used:
  7982 ;;		None
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7988 ;;      Params:         0       0       0       0       0
  7989 ;;      Locals:         0       0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0
  7991 ;;      Totals:         0       0       0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_i2c_int_handler
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text46
  8002  001E38                     __ptext46:
  8003                           	opt stack 0
  8004  001E38                     i2_blip2:
  8005                           	opt stack 18
  8006                           
  8007                           ;debug.c: 27: LATDbits.LD5 = 0;
  8008                           
  8009                           ;incstack = 0
  8010  001E38  9A8C               	bcf	3980,5,c	;volatile
  8011                           
  8012                           ;debug.c: 28: LATDbits.LD5 = 1;
  8013  001E3A  8A8C               	bsf	3980,5,c	;volatile
  8014                           
  8015                           ;debug.c: 29: LATDbits.LD5 = 0;
  8016  001E3C  9A8C               	bcf	3980,5,c	;volatile
  8017  001E3E  0012               	return	
  8018  001E40                     __end_ofi2_blip2:
  8019                           	opt stack 0
  8020                           pclatu	equ	0xFFB
  8021                           pclath	equ	0xFFA
  8022                           tblptru	equ	0xFF8
  8023                           tblptrh	equ	0xFF7
  8024                           tblptrl	equ	0xFF6
  8025                           tablat	equ	0xFF5
  8026                           prodh	equ	0xFF4
  8027                           prodl	equ	0xFF3
  8028                           intcon	equ	0xFF2
  8029                           postinc0	equ	0xFEE
  8030                           fsr0h	equ	0xFEA
  8031                           fsr0l	equ	0xFE9
  8032                           wreg	equ	0xFE8
  8033                           indf1	equ	0xFE7
  8034                           fsr1h	equ	0xFE2
  8035                           fsr1l	equ	0xFE1
  8036                           bsr	equ	0xFE0
  8037                           indf2	equ	0xFDF
  8038                           postinc2	equ	0xFDE
  8039                           postdec2	equ	0xFDD
  8040                           fsr2h	equ	0xFDA
  8041                           fsr2l	equ	0xFD9
  8042                           status	equ	0xFD8
  8043                           
  8044 ;; *************** function i2_blip1 *****************
  8045 ;; Defined at:
  8046 ;;		line 18 in file "../src/debug.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;		None
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;		None               void
  8053 ;; Registers used:
  8054 ;;		None
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8060 ;;      Params:         0       0       0       0       0
  8061 ;;      Locals:         0       0       0       0       0
  8062 ;;      Temps:          0       0       0       0       0
  8063 ;;      Totals:         0       0       0       0       0
  8064 ;;Total ram usage:        0 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_i2c_int_handler
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text47
  8074  001E40                     __ptext47:
  8075                           	opt stack 0
  8076  001E40                     i2_blip1:
  8077                           	opt stack 18
  8078                           
  8079                           ;debug.c: 20: LATDbits.LD4 = 0;
  8080                           
  8081                           ;incstack = 0
  8082  001E40  988C               	bcf	3980,4,c	;volatile
  8083                           
  8084                           ;debug.c: 21: LATDbits.LD4 = 1;
  8085  001E42  888C               	bsf	3980,4,c	;volatile
  8086                           
  8087                           ;debug.c: 22: LATDbits.LD4 = 0;
  8088  001E44  988C               	bcf	3980,4,c	;volatile
  8089  001E46  0012               	return	
  8090  001E48                     __end_ofi2_blip1:
  8091                           	opt stack 0
  8092                           pclatu	equ	0xFFB
  8093                           pclath	equ	0xFFA
  8094                           tblptru	equ	0xFF8
  8095                           tblptrh	equ	0xFF7
  8096                           tblptrl	equ	0xFF6
  8097                           tablat	equ	0xFF5
  8098                           prodh	equ	0xFF4
  8099                           prodl	equ	0xFF3
  8100                           intcon	equ	0xFF2
  8101                           postinc0	equ	0xFEE
  8102                           fsr0h	equ	0xFEA
  8103                           fsr0l	equ	0xFE9
  8104                           wreg	equ	0xFE8
  8105                           indf1	equ	0xFE7
  8106                           fsr1h	equ	0xFE2
  8107                           fsr1l	equ	0xFE1
  8108                           bsr	equ	0xFE0
  8109                           indf2	equ	0xFDF
  8110                           postinc2	equ	0xFDE
  8111                           postdec2	equ	0xFDD
  8112                           fsr2h	equ	0xFDA
  8113                           fsr2l	equ	0xFD9
  8114                           status	equ	0xFD8
  8115                           
  8116 ;; *************** function _start_i2c_slave_reply *****************
  8117 ;; Defined at:
  8118 ;;		line 54 in file "../src/my_i2c.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  length          1    wreg     unsigned char 
  8121 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8122 ;;		 -> NULL(0), main@ic(38), 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  length          1    4[BANK0 ] unsigned char 
  8125 ;; Return value:  Size  Location     Type
  8126 ;;		None               void
  8127 ;; Registers used:
  8128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8134 ;;      Params:         0       2       0       0       0
  8135 ;;      Locals:         0       1       0       0       0
  8136 ;;      Temps:          0       2       0       0       0
  8137 ;;      Totals:         0       5       0       0       0
  8138 ;;Total ram usage:        5 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; This function calls:
  8141 ;;		Nothing
  8142 ;; This function is called by:
  8143 ;;		_i2c_int_handler
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text48
  8148  001008                     __ptext48:
  8149                           	opt stack 0
  8150  001008                     _start_i2c_slave_reply:
  8151                           	opt stack 18
  8152                           
  8153                           ;incstack = 0
  8154                           ;start_i2c_slave_reply@length stored from wreg
  8155  001008  0100               	movlb	0	; () banked
  8156  00100A  6F84               	movwf	start_i2c_slave_reply@length& (0+255),b
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8160  00100C  0100               	movlb	0	; () banked
  8161  00100E  EE20 F01F          	lfsr	2,31
  8162  001012  0100               	movlb	0	; () banked
  8163  001014  51C5               	movf	_ic_ptr& (0+255),w,b
  8164  001016  26D9               	addwf	fsr2l,f,c
  8165  001018  0100               	movlb	0	; () banked
  8166  00101A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8167  00101C  22DA               	addwfc	fsr2h,f,c
  8168  00101E  0E00               	movlw	0
  8169  001020  6EDF               	movwf	indf2,c
  8170  001022  D03E               	goto	i2l2749
  8171  001024                     i2l2745:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8175  001024  0100               	movlb	0	; () banked
  8176  001026  EE20 F01F          	lfsr	2,31
  8177  00102A  0100               	movlb	0	; () banked
  8178  00102C  51C5               	movf	_ic_ptr& (0+255),w,b
  8179  00102E  26D9               	addwf	fsr2l,f,c
  8180  001030  0100               	movlb	0	; () banked
  8181  001032  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8182  001034  22DA               	addwfc	fsr2h,f,c
  8183  001036  50DF               	movf	indf2,w,c
  8184  001038  0100               	movlb	0	; () banked
  8185  00103A  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8186  00103C  0100               	movlb	0	; () banked
  8187  00103E  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8188  001040  0D01               	mullw	1
  8189  001042  50F3               	movf	prodl,w,c
  8190  001044  0100               	movlb	0	; () banked
  8191  001046  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  8192  001048  6ED9               	movwf	fsr2l,c
  8193  00104A  50F4               	movf	prodh,w,c
  8194  00104C  0100               	movlb	0	; () banked
  8195  00104E  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  8196  001050  6EDA               	movwf	fsr2h,c
  8197  001052  0100               	movlb	0	; () banked
  8198  001054  EE10 F01F          	lfsr	1,31
  8199  001058  0100               	movlb	0	; () banked
  8200  00105A  51C5               	movf	_ic_ptr& (0+255),w,b
  8201  00105C  26E1               	addwf	fsr1l,f,c
  8202  00105E  0100               	movlb	0	; () banked
  8203  001060  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8204  001062  22E2               	addwfc	fsr1h,f,c
  8205  001064  50E7               	movf	indf1,w,c
  8206  001066  0100               	movlb	0	; () banked
  8207  001068  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8208  00106A  0100               	movlb	0	; () banked
  8209  00106C  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8210  00106E  0D01               	mullw	1
  8211  001070  0E10               	movlw	16
  8212  001072  26F3               	addwf	prodl,f,c
  8213  001074  0E00               	movlw	0
  8214  001076  22F4               	addwfc	prodh,f,c
  8215  001078  50F3               	movf	prodl,w,c
  8216  00107A  0100               	movlb	0	; () banked
  8217  00107C  25C5               	addwf	_ic_ptr& (0+255),w,b
  8218  00107E  6EE1               	movwf	fsr1l,c
  8219  001080  50F4               	movf	prodh,w,c
  8220  001082  0100               	movlb	0	; () banked
  8221  001084  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8222  001086  6EE2               	movwf	fsr1h,c
  8223  001088  CFDF FFE7          	movff	indf2,indf1
  8224                           
  8225                           ; BSR set to: 0
  8226  00108C  0100               	movlb	0	; () banked
  8227  00108E  EE20 F01F          	lfsr	2,31
  8228  001092  0100               	movlb	0	; () banked
  8229  001094  51C5               	movf	_ic_ptr& (0+255),w,b
  8230  001096  26D9               	addwf	fsr2l,f,c
  8231  001098  0100               	movlb	0	; () banked
  8232  00109A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8233  00109C  22DA               	addwfc	fsr2h,f,c
  8234  00109E  2ADF               	incf	indf2,f,c
  8235  0010A0                     i2l2749:
  8236                           
  8237                           ; BSR set to: 0
  8238  0010A0  0100               	movlb	0	; () banked
  8239  0010A2  EE20 F01F          	lfsr	2,31
  8240  0010A6  0100               	movlb	0	; () banked
  8241  0010A8  51C5               	movf	_ic_ptr& (0+255),w,b
  8242  0010AA  26D9               	addwf	fsr2l,f,c
  8243  0010AC  0100               	movlb	0	; () banked
  8244  0010AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8245  0010B0  22DA               	addwfc	fsr2h,f,c
  8246  0010B2  50DF               	movf	indf2,w,c
  8247  0010B4  0100               	movlb	0	; () banked
  8248  0010B6  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8249  0010B8  0100               	movlb	0	; () banked
  8250  0010BA  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8251  0010BC  0100               	movlb	0	; () banked
  8252  0010BE  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8253  0010C0  A0D8               	btfss	status,0,c
  8254  0010C2  D7B0               	goto	i2l2745
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;my_i2c.c: 58: }
  8258                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  8259                           
  8260                           ; BSR set to: 0
  8261  0010C4  0100               	movlb	0	; () banked
  8262  0010C6  EE20 F01F          	lfsr	2,31
  8263  0010CA  0100               	movlb	0	; () banked
  8264  0010CC  51C5               	movf	_ic_ptr& (0+255),w,b
  8265  0010CE  26D9               	addwf	fsr2l,f,c
  8266  0010D0  0100               	movlb	0	; () banked
  8267  0010D2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8268  0010D4  22DA               	addwfc	fsr2h,f,c
  8269  0010D6  0100               	movlb	0	; () banked
  8270  0010D8  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8271                           
  8272                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  8273  0010DC  0100               	movlb	0	; () banked
  8274  0010DE  EE20 F01E          	lfsr	2,30
  8275  0010E2  0100               	movlb	0	; () banked
  8276  0010E4  51C5               	movf	_ic_ptr& (0+255),w,b
  8277  0010E6  26D9               	addwf	fsr2l,f,c
  8278  0010E8  0100               	movlb	0	; () banked
  8279  0010EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8280  0010EC  22DA               	addwfc	fsr2h,f,c
  8281  0010EE  0E01               	movlw	1
  8282  0010F0  6EDF               	movwf	indf2,c
  8283                           
  8284                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  8285  0010F2  0100               	movlb	0	; () banked
  8286  0010F4  EE20 F010          	lfsr	2,16
  8287  0010F8  0100               	movlb	0	; () banked
  8288  0010FA  51C5               	movf	_ic_ptr& (0+255),w,b
  8289  0010FC  26D9               	addwf	fsr2l,f,c
  8290  0010FE  0100               	movlb	0	; () banked
  8291  001100  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8292  001102  22DA               	addwfc	fsr2h,f,c
  8293  001104  50DF               	movf	indf2,w,c
  8294  001106  6EC9               	movwf	4041,c	;volatile
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  8298  001108  88C6               	bsf	4038,4,c	;volatile
  8299                           
  8300                           ; BSR set to: 0
  8301  00110A  0012               	return	
  8302  00110C                     __end_of_start_i2c_slave_reply:
  8303                           	opt stack 0
  8304                           pclatu	equ	0xFFB
  8305                           pclath	equ	0xFFA
  8306                           tblptru	equ	0xFF8
  8307                           tblptrh	equ	0xFF7
  8308                           tblptrl	equ	0xFF6
  8309                           tablat	equ	0xFF5
  8310                           prodh	equ	0xFF4
  8311                           prodl	equ	0xFF3
  8312                           intcon	equ	0xFF2
  8313                           postinc0	equ	0xFEE
  8314                           fsr0h	equ	0xFEA
  8315                           fsr0l	equ	0xFE9
  8316                           wreg	equ	0xFE8
  8317                           indf1	equ	0xFE7
  8318                           fsr1h	equ	0xFE2
  8319                           fsr1l	equ	0xFE1
  8320                           bsr	equ	0xFE0
  8321                           indf2	equ	0xFDF
  8322                           postinc2	equ	0xFDE
  8323                           postdec2	equ	0xFDD
  8324                           fsr2h	equ	0xFDA
  8325                           fsr2l	equ	0xFD9
  8326                           status	equ	0xFD8
  8327                           
  8328 ;; *************** function _handle_start *****************
  8329 ;; Defined at:
  8330 ;;		line 72 in file "../src/my_i2c.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  data_read       1    wreg     unsigned char 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  data_read       1    0[BANK0 ] unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;		None               void
  8337 ;; Registers used:
  8338 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8344 ;;      Params:         0       0       0       0       0
  8345 ;;      Locals:         0       1       0       0       0
  8346 ;;      Temps:          0       0       0       0       0
  8347 ;;      Totals:         0       1       0       0       0
  8348 ;;Total ram usage:        1 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_i2c_int_handler
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text49
  8358  0011F4                     __ptext49:
  8359                           	opt stack 0
  8360  0011F4                     _handle_start:
  8361                           	opt stack 18
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;incstack = 0
  8365                           ;handle_start@data_read stored from wreg
  8366  0011F4  0100               	movlb	0	; () banked
  8367  0011F6  6F80               	movwf	handle_start@data_read& (0+255),b
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8371  0011F8  0100               	movlb	0	; () banked
  8372  0011FA  EE20 F020          	lfsr	2,32
  8373  0011FE  0100               	movlb	0	; () banked
  8374  001200  51C5               	movf	_ic_ptr& (0+255),w,b
  8375  001202  26D9               	addwf	fsr2l,f,c
  8376  001204  0100               	movlb	0	; () banked
  8377  001206  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8378  001208  22DA               	addwfc	fsr2h,f,c
  8379  00120A  0E01               	movlw	1
  8380  00120C  6EDF               	movwf	indf2,c
  8381                           
  8382                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8383  00120E  0100               	movlb	0	; () banked
  8384  001210  EE20 F00E          	lfsr	2,14
  8385  001214  0100               	movlb	0	; () banked
  8386  001216  51C5               	movf	_ic_ptr& (0+255),w,b
  8387  001218  26D9               	addwf	fsr2l,f,c
  8388  00121A  0100               	movlb	0	; () banked
  8389  00121C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8390  00121E  22DA               	addwfc	fsr2h,f,c
  8391  001220  0E00               	movlw	0
  8392  001222  6EDF               	movwf	indf2,c
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;my_i2c.c: 76: if (data_read) {
  8396  001224  0100               	movlb	0	; () banked
  8397  001226  5180               	movf	handle_start@data_read& (0+255),w,b
  8398  001228  B4D8               	btfsc	status,2,c
  8399  00122A  D03D               	goto	i2l2767
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8403  00122C  AAC7               	btfss	4039,5,c	;volatile
  8404  00122E  D021               	goto	i2l287
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8408  001230  0100               	movlb	0	; () banked
  8409  001232  EE20 F021          	lfsr	2,33
  8410  001236  0100               	movlb	0	; () banked
  8411  001238  51C5               	movf	_ic_ptr& (0+255),w,b
  8412  00123A  26D9               	addwf	fsr2l,f,c
  8413  00123C  0100               	movlb	0	; () banked
  8414  00123E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8415  001240  22DA               	addwfc	fsr2h,f,c
  8416  001242  0E05               	movlw	5
  8417  001244  6EDF               	movwf	indf2,c
  8418                           
  8419                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8420  001246  0100               	movlb	0	; () banked
  8421  001248  EE20 F023          	lfsr	2,35
  8422  00124C  0100               	movlb	0	; () banked
  8423  00124E  51C5               	movf	_ic_ptr& (0+255),w,b
  8424  001250  26D9               	addwf	fsr2l,f,c
  8425  001252  0100               	movlb	0	; () banked
  8426  001254  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8427  001256  22DA               	addwfc	fsr2h,f,c
  8428  001258  2ADF               	incf	indf2,f,c
  8429                           
  8430                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8431  00125A  0100               	movlb	0	; () banked
  8432  00125C  EE20 F022          	lfsr	2,34
  8433  001260  0100               	movlb	0	; () banked
  8434  001262  51C5               	movf	_ic_ptr& (0+255),w,b
  8435  001264  26D9               	addwf	fsr2l,f,c
  8436  001266  0100               	movlb	0	; () banked
  8437  001268  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8438  00126A  22DA               	addwfc	fsr2h,f,c
  8439  00126C  0E05               	movlw	5
  8440  00126E  6EDF               	movwf	indf2,c
  8441                           
  8442                           ;my_i2c.c: 83: } else {
  8443  001270  0012               	return	
  8444  001272                     i2l287:
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8448  001272  A4C7               	btfss	4039,2,c	;volatile
  8449  001274  D00C               	goto	i2l2765
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8453  001276  0100               	movlb	0	; () banked
  8454  001278  EE20 F021          	lfsr	2,33
  8455  00127C  0100               	movlb	0	; () banked
  8456  00127E  51C5               	movf	_ic_ptr& (0+255),w,b
  8457  001280  26D9               	addwf	fsr2l,f,c
  8458  001282  0100               	movlb	0	; () banked
  8459  001284  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8460  001286  22DA               	addwfc	fsr2h,f,c
  8461  001288  0E08               	movlw	8
  8462  00128A  6EDF               	movwf	indf2,c
  8463                           
  8464                           ;my_i2c.c: 87: } else {
  8465  00128C  0012               	return	
  8466  00128E                     i2l2765:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  8470  00128E  0100               	movlb	0	; () banked
  8471  001290  EE20 F021          	lfsr	2,33
  8472  001294  0100               	movlb	0	; () banked
  8473  001296  51C5               	movf	_ic_ptr& (0+255),w,b
  8474  001298  26D9               	addwf	fsr2l,f,c
  8475  00129A  0100               	movlb	0	; () banked
  8476  00129C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8477  00129E  22DA               	addwfc	fsr2h,f,c
  8478  0012A0  0E07               	movlw	7
  8479  0012A2  6EDF               	movwf	indf2,c
  8480  0012A4  0012               	return	
  8481  0012A6                     i2l2767:
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  8485  0012A6  0100               	movlb	0	; () banked
  8486  0012A8  EE20 F021          	lfsr	2,33
  8487  0012AC  0100               	movlb	0	; () banked
  8488  0012AE  51C5               	movf	_ic_ptr& (0+255),w,b
  8489  0012B0  26D9               	addwf	fsr2l,f,c
  8490  0012B2  0100               	movlb	0	; () banked
  8491  0012B4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8492  0012B6  22DA               	addwfc	fsr2h,f,c
  8493  0012B8  0E06               	movlw	6
  8494  0012BA  6EDF               	movwf	indf2,c
  8495  0012BC  0012               	return	
  8496  0012BE                     __end_of_handle_start:
  8497                           	opt stack 0
  8498                           pclatu	equ	0xFFB
  8499                           pclath	equ	0xFFA
  8500                           tblptru	equ	0xFF8
  8501                           tblptrh	equ	0xFF7
  8502                           tblptrl	equ	0xFF6
  8503                           tablat	equ	0xFF5
  8504                           prodh	equ	0xFF4
  8505                           prodl	equ	0xFF3
  8506                           intcon	equ	0xFF2
  8507                           postinc0	equ	0xFEE
  8508                           fsr0h	equ	0xFEA
  8509                           fsr0l	equ	0xFE9
  8510                           wreg	equ	0xFE8
  8511                           indf1	equ	0xFE7
  8512                           fsr1h	equ	0xFE2
  8513                           fsr1l	equ	0xFE1
  8514                           bsr	equ	0xFE0
  8515                           indf2	equ	0xFDF
  8516                           postinc2	equ	0xFDE
  8517                           postdec2	equ	0xFDD
  8518                           fsr2h	equ	0xFDA
  8519                           fsr2l	equ	0xFD9
  8520                           status	equ	0xFD8
  8521                           
  8522 ;; *************** function _ToMainHigh_sendmsg *****************
  8523 ;; Defined at:
  8524 ;;		line 126 in file "../src/messages.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  length          1    wreg     unsigned char 
  8527 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8528 ;;  data            2   23[BANK0 ] PTR void 
  8529 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  length          1   25[BANK0 ] unsigned char 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      char 
  8534 ;; Registers used:
  8535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8541 ;;      Params:         0       3       0       0       0
  8542 ;;      Locals:         0       1       0       0       0
  8543 ;;      Temps:          0       0       0       0       0
  8544 ;;      Totals:         0       4       0       0       0
  8545 ;;Total ram usage:        4 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; Hardware stack levels required when called:    2
  8548 ;; This function calls:
  8549 ;;		i2_send_msg
  8550 ;; This function is called by:
  8551 ;;		_i2c_int_handler
  8552 ;;		_timer0_int_handler
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text50
  8557  001C64                     __ptext50:
  8558                           	opt stack 0
  8559  001C64                     _ToMainHigh_sendmsg:
  8560                           	opt stack 16
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;incstack = 0
  8564                           ;ToMainHigh_sendmsg@length stored from wreg
  8565  001C64  0100               	movlb	0	; () banked
  8566  001C66  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8570                           ;	Return value of _ToMainHigh_sendmsg is never used
  8571  001C68  0102               	movlb	2	; () banked
  8572  001C6A  0E02               	movlw	high _ToMainHigh_MQ
  8573  001C6C  0100               	movlb	0	; () banked
  8574  001C6E  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8575  001C70  0102               	movlb	2	; () banked
  8576  001C72  0E57               	movlw	low _ToMainHigh_MQ
  8577  001C74  0100               	movlb	0	; () banked
  8578  001C76  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8579  001C78  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8580  001C7C  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8581  001C80  0100               	movlb	0	; () banked
  8582  001C82  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8583  001C86  0100               	movlb	0	; () banked
  8584  001C88  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8585  001C8C  EC7E  F007         	call	i2_send_msg	;wreg free
  8586  001C90  0012               	return	
  8587  001C92                     __end_of_ToMainHigh_sendmsg:
  8588                           	opt stack 0
  8589                           pclatu	equ	0xFFB
  8590                           pclath	equ	0xFFA
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           intcon	equ	0xFF2
  8598                           postinc0	equ	0xFEE
  8599                           fsr0h	equ	0xFEA
  8600                           fsr0l	equ	0xFE9
  8601                           wreg	equ	0xFE8
  8602                           indf1	equ	0xFE7
  8603                           fsr1h	equ	0xFE2
  8604                           fsr1l	equ	0xFE1
  8605                           bsr	equ	0xFE0
  8606                           indf2	equ	0xFDF
  8607                           postinc2	equ	0xFDE
  8608                           postdec2	equ	0xFDD
  8609                           fsr2h	equ	0xFDA
  8610                           fsr2l	equ	0xFD9
  8611                           status	equ	0xFD8
  8612                           
  8613 ;; *************** function i2_send_msg *****************
  8614 ;; Defined at:
  8615 ;;		line 24 in file "../src/messages.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8618 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8619 ;;  length          1   12[BANK0 ] unsigned char 
  8620 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8621 ;;  data            2   14[BANK0 ] PTR void 
  8622 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  8623 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  8624 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  8625 ;;		 -> main@t1thread_data(2), main@ic(38), 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8628 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8629 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8630 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8631 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      char 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8641 ;;      Params:         0       6       0       0       0
  8642 ;;      Locals:         0       5       0       0       0
  8643 ;;      Temps:          0       1       0       0       0
  8644 ;;      Totals:         0      12       0       0       0
  8645 ;;Total ram usage:       12 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    1
  8648 ;; This function calls:
  8649 ;;		i2___awmod
  8650 ;;		i2_memcpy
  8651 ;; This function is called by:
  8652 ;;		_ToMainHigh_sendmsg
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           	psect	text51
  8657  000EFC                     __ptext51:
  8658                           	opt stack 0
  8659  000EFC                     i2_send_msg:
  8660                           	opt stack 16
  8661                           
  8662                           ;messages.c: 25: unsigned char slot;
  8663                           ;messages.c: 27: msg *qmsg;
  8664                           ;messages.c: 28: size_t tlength = length;
  8665                           
  8666                           ;incstack = 0
  8667  000EFC  0100               	movlb	0	; () banked
  8668  000EFE  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8669  000F02  0100               	movlb	0	; () banked
  8670  000F04  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8674  000F06  0100               	movlb	0	; () banked
  8675  000F08  EE20 F055          	lfsr	2,85
  8676  000F0C  0100               	movlb	0	; () banked
  8677  000F0E  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8678  000F10  26D9               	addwf	fsr2l,f,c
  8679  000F12  0100               	movlb	0	; () banked
  8680  000F14  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8681  000F16  22DA               	addwfc	fsr2h,f,c
  8682  000F18  50DF               	movf	indf2,w,c
  8683  000F1A  0100               	movlb	0	; () banked
  8684  000F1C  6F93               	movwf	i2send_msg@slot& (0+255),b
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8688  000F1E  0100               	movlb	0	; () banked
  8689  000F20  5193               	movf	i2send_msg@slot& (0+255),w,b
  8690  000F22  0D11               	mullw	17
  8691  000F24  50F3               	movf	prodl,w,c
  8692  000F26  0100               	movlb	0	; () banked
  8693  000F28  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8694  000F2A  0100               	movlb	0	; () banked
  8695  000F2C  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8696  000F2E  50F4               	movf	prodh,w,c
  8697  000F30  0100               	movlb	0	; () banked
  8698  000F32  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8699  000F34  0100               	movlb	0	; () banked
  8700  000F36  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;messages.c: 41: if (qmsg->full != 0) {
  8704  000F38  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8705  000F3C  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8706  000F40  50DF               	movf	indf2,w,c
  8707  000F42  B4D8               	btfsc	status,2,c
  8708  000F44  D002               	goto	i2l3615
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;messages.c: 42: return (-1);
  8712  000F46  0EFF               	movlw	255
  8713  000F48  0012               	return	
  8714  000F4A                     i2l3615:
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;messages.c: 43: }
  8718                           ;messages.c: 46: qmsg->length = length;
  8719  000F4A  0100               	movlb	0	; () banked
  8720  000F4C  EE20 F001          	lfsr	2,1
  8721  000F50  0100               	movlb	0	; () banked
  8722  000F52  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8723  000F54  26D9               	addwf	fsr2l,f,c
  8724  000F56  0100               	movlb	0	; () banked
  8725  000F58  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8726  000F5A  22DA               	addwfc	fsr2h,f,c
  8727  000F5C  0100               	movlb	0	; () banked
  8728  000F5E  C08C  FFDF         	movff	i2send_msg@length,indf2
  8729                           
  8730                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8731  000F62  0100               	movlb	0	; () banked
  8732  000F64  EE20 F002          	lfsr	2,2
  8733  000F68  0100               	movlb	0	; () banked
  8734  000F6A  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8735  000F6C  26D9               	addwf	fsr2l,f,c
  8736  000F6E  0100               	movlb	0	; () banked
  8737  000F70  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8738  000F72  22DA               	addwfc	fsr2h,f,c
  8739  000F74  0100               	movlb	0	; () banked
  8740  000F76  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8744  000F7A  0E03               	movlw	3
  8745  000F7C  0100               	movlb	0	; () banked
  8746  000F7E  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8747  000F80  0100               	movlb	0	; () banked
  8748  000F82  6F80               	movwf	i2memcpy@d1& (0+255),b
  8749  000F84  0E00               	movlw	0
  8750  000F86  0100               	movlb	0	; () banked
  8751  000F88  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8752  000F8A  0100               	movlb	0	; () banked
  8753  000F8C  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8754  000F8E  0100               	movlb	0	; () banked
  8755  000F90  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8756  000F94  0100               	movlb	0	; () banked
  8757  000F96  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8758  000F9A  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8759  000F9E  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8760  000FA2  ECFB  F00C         	call	i2_memcpy	;wreg free
  8761                           
  8762                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8763  000FA6  0100               	movlb	0	; () banked
  8764  000FA8  EE20 F055          	lfsr	2,85
  8765  000FAC  0100               	movlb	0	; () banked
  8766  000FAE  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8767  000FB0  26D9               	addwf	fsr2l,f,c
  8768  000FB2  0100               	movlb	0	; () banked
  8769  000FB4  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8770  000FB6  22DA               	addwfc	fsr2h,f,c
  8771  000FB8  0100               	movlb	0	; () banked
  8772  000FBA  EE10 F055          	lfsr	1,85
  8773  000FBE  0100               	movlb	0	; () banked
  8774  000FC0  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8775  000FC2  26E1               	addwf	fsr1l,f,c
  8776  000FC4  0100               	movlb	0	; () banked
  8777  000FC6  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8778  000FC8  22E2               	addwfc	fsr1h,f,c
  8779  000FCA  50E7               	movf	indf1,w,c
  8780  000FCC  0100               	movlb	0	; () banked
  8781  000FCE  6F90               	movwf	??i2_send_msg& (0+255),b
  8782  000FD0  0E01               	movlw	1
  8783  000FD2  0100               	movlb	0	; () banked
  8784  000FD4  2590               	addwf	??i2_send_msg& (0+255),w,b
  8785  000FD6  0100               	movlb	0	; () banked
  8786  000FD8  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8787  000FDA  0100               	movlb	0	; () banked
  8788  000FDC  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8789  000FDE  0E00               	movlw	0
  8790  000FE0  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8791  000FE2  0E00               	movlw	0
  8792  000FE4  0100               	movlb	0	; () banked
  8793  000FE6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8794  000FE8  0E05               	movlw	5
  8795  000FEA  0100               	movlb	0	; () banked
  8796  000FEC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8797  000FEE  ECC1  F009         	call	i2___awmod	;wreg free
  8798  000FF2  0100               	movlb	0	; () banked
  8799  000FF4  5180               	movf	?i2___awmod& (0+255),w,b
  8800  000FF6  6EDF               	movwf	indf2,c
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;messages.c: 59: qmsg->full = 1;
  8804  000FF8  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8805  000FFC  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8806  001000  0E01               	movlw	1
  8807  001002  6EDF               	movwf	indf2,c
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;messages.c: 60: return (1);
  8811  001004  0E01               	movlw	1
  8812  001006  0012               	return	
  8813  001008                     __end_ofi2_send_msg:
  8814                           	opt stack 0
  8815                           pclatu	equ	0xFFB
  8816                           pclath	equ	0xFFA
  8817                           tblptru	equ	0xFF8
  8818                           tblptrh	equ	0xFF7
  8819                           tblptrl	equ	0xFF6
  8820                           tablat	equ	0xFF5
  8821                           prodh	equ	0xFF4
  8822                           prodl	equ	0xFF3
  8823                           intcon	equ	0xFF2
  8824                           postinc0	equ	0xFEE
  8825                           fsr0h	equ	0xFEA
  8826                           fsr0l	equ	0xFE9
  8827                           wreg	equ	0xFE8
  8828                           indf1	equ	0xFE7
  8829                           fsr1h	equ	0xFE2
  8830                           fsr1l	equ	0xFE1
  8831                           bsr	equ	0xFE0
  8832                           indf2	equ	0xFDF
  8833                           postinc2	equ	0xFDE
  8834                           postdec2	equ	0xFDD
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8
  8838                           
  8839 ;; *************** function _FromMainHigh_recvmsg *****************
  8840 ;; Defined at:
  8841 ;;		line 183 in file "../src/messages.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  maxlength       1    wreg     unsigned char 
  8844 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8845 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  8846 ;;  data            2   26[BANK0 ] PTR void 
  8847 ;;		 -> NULL(0), timer0_int_handler@val(2), main@ic(38), 
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      char 
  8852 ;; Registers used:
  8853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8859 ;;      Params:         0       4       0       0       0
  8860 ;;      Locals:         0       1       0       0       0
  8861 ;;      Temps:          0       0       0       0       0
  8862 ;;      Totals:         0       5       0       0       0
  8863 ;;Total ram usage:        5 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:    2
  8866 ;; This function calls:
  8867 ;;		i2_recv_msg
  8868 ;; This function is called by:
  8869 ;;		_i2c_int_handler
  8870 ;;		_timer0_int_handler
  8871 ;;		_retrieve_sensor_values
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text52
  8876  001B6E                     __ptext52:
  8877                           	opt stack 0
  8878  001B6E                     _FromMainHigh_recvmsg:
  8879                           	opt stack 16
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;incstack = 0
  8883                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8884  001B6E  0100               	movlb	0	; () banked
  8885  001B70  6F9C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8889  001B72  0103               	movlb	3	; () banked
  8890  001B74  0E03               	movlw	high _FromMainHigh_MQ
  8891  001B76  0100               	movlb	0	; () banked
  8892  001B78  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8893  001B7A  0103               	movlb	3	; () banked
  8894  001B7C  0E00               	movlw	low _FromMainHigh_MQ
  8895  001B7E  0100               	movlb	0	; () banked
  8896  001B80  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8897  001B82  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8898  001B86  0100               	movlb	0	; () banked
  8899  001B88  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8900  001B8C  0100               	movlb	0	; () banked
  8901  001B8E  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8902  001B92  0100               	movlb	0	; () banked
  8903  001B94  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8904  001B98  0100               	movlb	0	; () banked
  8905  001B9A  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8906  001B9E  EC57  F006         	call	i2_recv_msg	;wreg free
  8907  001BA2  0012               	return	
  8908  001BA4                     __end_of_FromMainHigh_recvmsg:
  8909                           	opt stack 0
  8910                           pclatu	equ	0xFFB
  8911                           pclath	equ	0xFFA
  8912                           tblptru	equ	0xFF8
  8913                           tblptrh	equ	0xFF7
  8914                           tblptrl	equ	0xFF6
  8915                           tablat	equ	0xFF5
  8916                           prodh	equ	0xFF4
  8917                           prodl	equ	0xFF3
  8918                           intcon	equ	0xFF2
  8919                           postinc0	equ	0xFEE
  8920                           fsr0h	equ	0xFEA
  8921                           fsr0l	equ	0xFE9
  8922                           wreg	equ	0xFE8
  8923                           indf1	equ	0xFE7
  8924                           fsr1h	equ	0xFE2
  8925                           fsr1l	equ	0xFE1
  8926                           bsr	equ	0xFE0
  8927                           indf2	equ	0xFDF
  8928                           postinc2	equ	0xFDE
  8929                           postdec2	equ	0xFDD
  8930                           fsr2h	equ	0xFDA
  8931                           fsr2l	equ	0xFD9
  8932                           status	equ	0xFD8
  8933                           
  8934 ;; *************** function i2_recv_msg *****************
  8935 ;; Defined at:
  8936 ;;		line 63 in file "../src/messages.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8939 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8940 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8941 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8942 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  8943 ;;		 -> main@msgtype(1), 
  8944 ;;  data            2   15[BANK0 ] PTR void 
  8945 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  8946 ;;		 -> main@ic(38), 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8949 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8950 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8951 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8952 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      char 
  8955 ;; Registers used:
  8956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8962 ;;      Params:         0       7       0       0       0
  8963 ;;      Locals:         0       5       0       0       0
  8964 ;;      Temps:          0       2       0       0       0
  8965 ;;      Totals:         0      14       0       0       0
  8966 ;;Total ram usage:       14 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    1
  8969 ;; This function calls:
  8970 ;;		i2___awmod
  8971 ;;		i2_memcpy
  8972 ;; This function is called by:
  8973 ;;		_FromMainHigh_recvmsg
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text53
  8978  000CAE                     __ptext53:
  8979                           	opt stack 0
  8980  000CAE                     i2_recv_msg:
  8981                           	opt stack 16
  8982                           
  8983                           ;messages.c: 64: unsigned char slot;
  8984                           ;messages.c: 68: msg *qmsg;
  8985                           ;messages.c: 69: size_t tlength;
  8986                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8987                           
  8988                           ;incstack = 0
  8989  000CAE  0100               	movlb	0	; () banked
  8990  000CB0  EE20 F056          	lfsr	2,86
  8991  000CB4  0100               	movlb	0	; () banked
  8992  000CB6  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8993  000CB8  26D9               	addwf	fsr2l,f,c
  8994  000CBA  0100               	movlb	0	; () banked
  8995  000CBC  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8996  000CBE  22DA               	addwfc	fsr2h,f,c
  8997  000CC0  50DF               	movf	indf2,w,c
  8998  000CC2  0100               	movlb	0	; () banked
  8999  000CC4  6F93               	movwf	i2recv_msg@slot& (0+255),b
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9003  000CC6  0100               	movlb	0	; () banked
  9004  000CC8  5193               	movf	i2recv_msg@slot& (0+255),w,b
  9005  000CCA  0D11               	mullw	17
  9006  000CCC  50F3               	movf	prodl,w,c
  9007  000CCE  0100               	movlb	0	; () banked
  9008  000CD0  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  9009  000CD2  0100               	movlb	0	; () banked
  9010  000CD4  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  9011  000CD6  50F4               	movf	prodh,w,c
  9012  000CD8  0100               	movlb	0	; () banked
  9013  000CDA  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  9014  000CDC  0100               	movlb	0	; () banked
  9015  000CDE  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;messages.c: 74: if (qmsg->full == 1) {
  9019  000CE0  0E01               	movlw	1
  9020  000CE2  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9021  000CE6  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9022  000CEA  62DF               	cpfseq	indf2,c
  9023  000CEC  D07D               	goto	i2l3687
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9027  000CEE  0100               	movlb	0	; () banked
  9028  000CF0  EE20 F001          	lfsr	2,1
  9029  000CF4  0100               	movlb	0	; () banked
  9030  000CF6  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9031  000CF8  26D9               	addwf	fsr2l,f,c
  9032  000CFA  0100               	movlb	0	; () banked
  9033  000CFC  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9034  000CFE  22DA               	addwfc	fsr2h,f,c
  9035  000D00  50DF               	movf	indf2,w,c
  9036  000D02  0100               	movlb	0	; () banked
  9037  000D04  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  9038  000D06  B0D8               	btfsc	status,0,c
  9039  000D08  D002               	goto	i2l3671
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;messages.c: 77: return (-3);
  9043  000D0A  0EFD               	movlw	253
  9044  000D0C  0012               	return	
  9045  000D0E                     i2l3671:
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;messages.c: 78: }
  9049                           ;messages.c: 80: tlength = qmsg->length;
  9050  000D0E  0100               	movlb	0	; () banked
  9051  000D10  EE20 F001          	lfsr	2,1
  9052  000D14  0100               	movlb	0	; () banked
  9053  000D16  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9054  000D18  26D9               	addwf	fsr2l,f,c
  9055  000D1A  0100               	movlb	0	; () banked
  9056  000D1C  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9057  000D1E  22DA               	addwfc	fsr2h,f,c
  9058  000D20  50DF               	movf	indf2,w,c
  9059  000D22  0100               	movlb	0	; () banked
  9060  000D24  6F91               	movwf	??i2_recv_msg& (0+255),b
  9061  000D26  0100               	movlb	0	; () banked
  9062  000D28  5191               	movf	??i2_recv_msg& (0+255),w,b
  9063  000D2A  0100               	movlb	0	; () banked
  9064  000D2C  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  9065  000D2E  0100               	movlb	0	; () banked
  9066  000D30  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9070  000D32  0100               	movlb	0	; () banked
  9071  000D34  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  9072  000D38  0100               	movlb	0	; () banked
  9073  000D3A  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  9074  000D3E  0E03               	movlw	3
  9075  000D40  0100               	movlb	0	; () banked
  9076  000D42  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  9077  000D44  0100               	movlb	0	; () banked
  9078  000D46  6F91               	movwf	??i2_recv_msg& (0+255),b
  9079  000D48  0E00               	movlw	0
  9080  000D4A  0100               	movlb	0	; () banked
  9081  000D4C  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  9082  000D4E  0100               	movlb	0	; () banked
  9083  000D50  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  9084  000D52  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  9085  000D56  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  9086  000D5A  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  9087  000D5E  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  9088  000D62  ECFB  F00C         	call	i2_memcpy	;wreg free
  9089                           
  9090                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  9091  000D66  0100               	movlb	0	; () banked
  9092  000D68  EE20 F056          	lfsr	2,86
  9093  000D6C  0100               	movlb	0	; () banked
  9094  000D6E  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9095  000D70  26D9               	addwf	fsr2l,f,c
  9096  000D72  0100               	movlb	0	; () banked
  9097  000D74  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9098  000D76  22DA               	addwfc	fsr2h,f,c
  9099  000D78  0100               	movlb	0	; () banked
  9100  000D7A  EE10 F056          	lfsr	1,86
  9101  000D7E  0100               	movlb	0	; () banked
  9102  000D80  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9103  000D82  26E1               	addwf	fsr1l,f,c
  9104  000D84  0100               	movlb	0	; () banked
  9105  000D86  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9106  000D88  22E2               	addwfc	fsr1h,f,c
  9107  000D8A  50E7               	movf	indf1,w,c
  9108  000D8C  0100               	movlb	0	; () banked
  9109  000D8E  6F91               	movwf	??i2_recv_msg& (0+255),b
  9110  000D90  0E01               	movlw	1
  9111  000D92  0100               	movlb	0	; () banked
  9112  000D94  2591               	addwf	??i2_recv_msg& (0+255),w,b
  9113  000D96  0100               	movlb	0	; () banked
  9114  000D98  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9115  000D9A  0100               	movlb	0	; () banked
  9116  000D9C  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9117  000D9E  0E00               	movlw	0
  9118  000DA0  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9119  000DA2  0E00               	movlw	0
  9120  000DA4  0100               	movlb	0	; () banked
  9121  000DA6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9122  000DA8  0E05               	movlw	5
  9123  000DAA  0100               	movlb	0	; () banked
  9124  000DAC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9125  000DAE  ECC1  F009         	call	i2___awmod	;wreg free
  9126  000DB2  0100               	movlb	0	; () banked
  9127  000DB4  5180               	movf	?i2___awmod& (0+255),w,b
  9128  000DB6  6EDF               	movwf	indf2,c
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9132  000DB8  0100               	movlb	0	; () banked
  9133  000DBA  EE20 F002          	lfsr	2,2
  9134  000DBE  0100               	movlb	0	; () banked
  9135  000DC0  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9136  000DC2  26D9               	addwf	fsr2l,f,c
  9137  000DC4  0100               	movlb	0	; () banked
  9138  000DC6  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9139  000DC8  22DA               	addwfc	fsr2h,f,c
  9140  000DCA  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9141  000DCE  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9142  000DD2  CFDF FFE7          	movff	indf2,indf1
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;messages.c: 91: qmsg->full = 0;
  9146  000DD6  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9147  000DDA  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9148  000DDE  0E00               	movlw	0
  9149  000DE0  6EDF               	movwf	indf2,c
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;messages.c: 92: return (tlength);
  9153  000DE2  0100               	movlb	0	; () banked
  9154  000DE4  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  9155  000DE6  0012               	return	
  9156  000DE8                     i2l3687:
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;messages.c: 94: return (-4);
  9160  000DE8  0EFC               	movlw	252
  9161  000DEA  0012               	return	
  9162  000DEC                     __end_ofi2_recv_msg:
  9163                           	opt stack 0
  9164                           pclatu	equ	0xFFB
  9165                           pclath	equ	0xFFA
  9166                           tblptru	equ	0xFF8
  9167                           tblptrh	equ	0xFF7
  9168                           tblptrl	equ	0xFF6
  9169                           tablat	equ	0xFF5
  9170                           prodh	equ	0xFF4
  9171                           prodl	equ	0xFF3
  9172                           intcon	equ	0xFF2
  9173                           postinc0	equ	0xFEE
  9174                           fsr0h	equ	0xFEA
  9175                           fsr0l	equ	0xFE9
  9176                           wreg	equ	0xFE8
  9177                           indf1	equ	0xFE7
  9178                           fsr1h	equ	0xFE2
  9179                           fsr1l	equ	0xFE1
  9180                           bsr	equ	0xFE0
  9181                           indf2	equ	0xFDF
  9182                           postinc2	equ	0xFDE
  9183                           postdec2	equ	0xFDD
  9184                           fsr2h	equ	0xFDA
  9185                           fsr2l	equ	0xFD9
  9186                           status	equ	0xFD8
  9187                           
  9188 ;; *************** function i2_memcpy *****************
  9189 ;; Defined at:
  9190 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  d1              2    0[BANK0 ] PTR void 
  9193 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9194 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  9195 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9196 ;;		 -> main@ic(38), 
  9197 ;;  s1              2    2[BANK0 ] PTR const void 
  9198 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9199 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9200 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  9201 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9202 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  9203 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  9204 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9205 ;;  n               2    4[BANK0 ] unsigned int 
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9208 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9209 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9210 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  9211 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9212 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  9213 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  9214 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9215 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9216 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9217 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  9218 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9219 ;;		 -> main@ic(38), 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  2    0[BANK0 ] PTR void 
  9222 ;; Registers used:
  9223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9229 ;;      Params:         0       6       0       0       0
  9230 ;;      Locals:         0       4       0       0       0
  9231 ;;      Temps:          0       0       0       0       0
  9232 ;;      Totals:         0      10       0       0       0
  9233 ;;Total ram usage:       10 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		i2_send_msg
  9239 ;;		i2_recv_msg
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text54
  9244  0019F6                     __ptext54:
  9245                           	opt stack 0
  9246  0019F6                     i2_memcpy:
  9247                           	opt stack 16
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;incstack = 0
  9251  0019F6  0100               	movlb	0	; () banked
  9252  0019F8  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9253  0019FC  0100               	movlb	0	; () banked
  9254  0019FE  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9255  001A02  0100               	movlb	0	; () banked
  9256  001A04  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9257  001A08  0100               	movlb	0	; () banked
  9258  001A0A  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9259  001A0E  D010               	goto	i2l2453
  9260  001A10                     i2l2447:
  9261                           
  9262                           ; BSR set to: 0
  9263  001A10  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9264  001A14  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9265  001A18  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9266  001A1C  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9267  001A20  CFDF FFE7          	movff	indf2,indf1
  9268                           
  9269                           ; BSR set to: 0
  9270  001A24  0100               	movlb	0	; () banked
  9271  001A26  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9272  001A28  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9273                           
  9274                           ; BSR set to: 0
  9275  001A2A  0100               	movlb	0	; () banked
  9276  001A2C  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9277  001A2E  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9278  001A30                     i2l2453:
  9279                           
  9280                           ; BSR set to: 0
  9281  001A30  0100               	movlb	0	; () banked
  9282  001A32  0784               	decf	i2memcpy@n& (0+255),f,b
  9283  001A34  A0D8               	btfss	status,0,c
  9284  001A36  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9285  001A38  0100               	movlb	0	; () banked
  9286  001A3A  2984               	incf	i2memcpy@n& (0+255),w,b
  9287  001A3C  B4D8               	btfsc	status,2,c
  9288  001A3E  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9289  001A40  B4D8               	btfsc	status,2,c
  9290                           
  9291                           ; BSR set to: 0
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;	Return value of i2_memcpy is never used
  9295  001A42  0012               	return	
  9296  001A44  D7E5               	goto	i2l2447
  9297  001A46                     __end_ofi2_memcpy:
  9298                           	opt stack 0
  9299                           pclatu	equ	0xFFB
  9300                           pclath	equ	0xFFA
  9301                           tblptru	equ	0xFF8
  9302                           tblptrh	equ	0xFF7
  9303                           tblptrl	equ	0xFF6
  9304                           tablat	equ	0xFF5
  9305                           prodh	equ	0xFF4
  9306                           prodl	equ	0xFF3
  9307                           intcon	equ	0xFF2
  9308                           postinc0	equ	0xFEE
  9309                           fsr0h	equ	0xFEA
  9310                           fsr0l	equ	0xFE9
  9311                           wreg	equ	0xFE8
  9312                           indf1	equ	0xFE7
  9313                           fsr1h	equ	0xFE2
  9314                           fsr1l	equ	0xFE1
  9315                           bsr	equ	0xFE0
  9316                           indf2	equ	0xFDF
  9317                           postinc2	equ	0xFDE
  9318                           postdec2	equ	0xFDD
  9319                           fsr2h	equ	0xFDA
  9320                           fsr2l	equ	0xFD9
  9321                           status	equ	0xFD8
  9322                           
  9323 ;; *************** function i2___awmod *****************
  9324 ;; Defined at:
  9325 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;  dividend        2    0[BANK0 ] int 
  9328 ;;  divisor         2    2[BANK0 ] int 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9331 ;;  __awmod         1    4[BANK0 ] unsigned char 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  2    0[BANK0 ] int 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0, prodl
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9341 ;;      Params:         0       4       0       0       0
  9342 ;;      Locals:         0       2       0       0       0
  9343 ;;      Temps:          0       0       0       0       0
  9344 ;;      Totals:         0       6       0       0       0
  9345 ;;Total ram usage:        6 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; This function calls:
  9348 ;;		Nothing
  9349 ;; This function is called by:
  9350 ;;		i2_send_msg
  9351 ;;		i2_recv_msg
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text55
  9356  001382                     __ptext55:
  9357                           	opt stack 0
  9358  001382                     i2___awmod:
  9359                           	opt stack 16
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;incstack = 0
  9363  001382  0E00               	movlw	0
  9364  001384  0100               	movlb	0	; () banked
  9365  001386  6F85               	movwf	i2___awmod@sign& (0+255),b
  9366                           
  9367                           ; BSR set to: 0
  9368  001388  0100               	movlb	0	; () banked
  9369  00138A  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9370  00138C  0A80               	xorlw	128
  9371  00138E  6EF3               	movwf	prodl,c
  9372  001390  0E80               	movlw	128
  9373  001392  5CF3               	subwf	prodl,w,c
  9374  001394  0E00               	movlw	0
  9375  001396  B4D8               	btfsc	status,2,c
  9376  001398  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9377  00139A  B0D8               	btfsc	status,0,c
  9378  00139C  D009               	goto	i2l2499
  9379                           
  9380                           ; BSR set to: 0
  9381  00139E  0100               	movlb	0	; () banked
  9382  0013A0  6D80               	negf	i2___awmod@dividend& (0+255),b
  9383  0013A2  0100               	movlb	0	; () banked
  9384  0013A4  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9385  0013A6  B0D8               	btfsc	status,0,c
  9386  0013A8  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9387                           
  9388                           ; BSR set to: 0
  9389  0013AA  0E01               	movlw	1
  9390  0013AC  0100               	movlb	0	; () banked
  9391  0013AE  6F85               	movwf	i2___awmod@sign& (0+255),b
  9392  0013B0                     i2l2499:
  9393                           
  9394                           ; BSR set to: 0
  9395  0013B0  0100               	movlb	0	; () banked
  9396  0013B2  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9397  0013B4  0A80               	xorlw	128
  9398  0013B6  6EF3               	movwf	prodl,c
  9399  0013B8  0E80               	movlw	128
  9400  0013BA  5CF3               	subwf	prodl,w,c
  9401  0013BC  0E00               	movlw	0
  9402  0013BE  B4D8               	btfsc	status,2,c
  9403  0013C0  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9404  0013C2  B0D8               	btfsc	status,0,c
  9405  0013C4  D006               	goto	i2l2503
  9406                           
  9407                           ; BSR set to: 0
  9408  0013C6  0100               	movlb	0	; () banked
  9409  0013C8  6D82               	negf	i2___awmod@divisor& (0+255),b
  9410  0013CA  0100               	movlb	0	; () banked
  9411  0013CC  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9412  0013CE  B0D8               	btfsc	status,0,c
  9413  0013D0  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9414  0013D2                     i2l2503:
  9415                           
  9416                           ; BSR set to: 0
  9417  0013D2  0100               	movlb	0	; () banked
  9418  0013D4  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9419  0013D6  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9420  0013D8  B4D8               	btfsc	status,2,c
  9421  0013DA  D026               	goto	i2l2519
  9422                           
  9423                           ; BSR set to: 0
  9424  0013DC  0E01               	movlw	1
  9425  0013DE  0100               	movlb	0	; () banked
  9426  0013E0  6F84               	movwf	i2___awmod@counter& (0+255),b
  9427  0013E2  D006               	goto	i2l2509
  9428  0013E4                     i2l2507:
  9429                           
  9430                           ; BSR set to: 0
  9431  0013E4  0100               	movlb	0	; () banked
  9432  0013E6  90D8               	bcf	status,0,c
  9433  0013E8  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9434  0013EA  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9435  0013EC  0100               	movlb	0	; () banked
  9436  0013EE  2B84               	incf	i2___awmod@counter& (0+255),f,b
  9437  0013F0                     i2l2509:
  9438                           
  9439                           ; BSR set to: 0
  9440  0013F0  0100               	movlb	0	; () banked
  9441  0013F2  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9442  0013F4  D7F7               	goto	i2l2507
  9443  0013F6                     i2l2511:
  9444                           
  9445                           ; BSR set to: 0
  9446  0013F6  0100               	movlb	0	; () banked
  9447  0013F8  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9448  0013FA  0100               	movlb	0	; () banked
  9449  0013FC  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9450  0013FE  0100               	movlb	0	; () banked
  9451  001400  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9452  001402  0100               	movlb	0	; () banked
  9453  001404  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9454  001406  A0D8               	btfss	status,0,c
  9455  001408  D008               	goto	i2l2515
  9456                           
  9457                           ; BSR set to: 0
  9458  00140A  0100               	movlb	0	; () banked
  9459  00140C  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9460  00140E  0100               	movlb	0	; () banked
  9461  001410  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9462  001412  0100               	movlb	0	; () banked
  9463  001414  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9464  001416  0100               	movlb	0	; () banked
  9465  001418  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9466  00141A                     i2l2515:
  9467                           
  9468                           ; BSR set to: 0
  9469  00141A  0100               	movlb	0	; () banked
  9470  00141C  90D8               	bcf	status,0,c
  9471  00141E  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9472  001420  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9473                           
  9474                           ; BSR set to: 0
  9475  001422  0100               	movlb	0	; () banked
  9476  001424  2F84               	decfsz	i2___awmod@counter& (0+255),f,b
  9477  001426  D7E7               	goto	i2l2511
  9478  001428                     i2l2519:
  9479                           
  9480                           ; BSR set to: 0
  9481  001428  0100               	movlb	0	; () banked
  9482  00142A  5185               	movf	i2___awmod@sign& (0+255),w,b
  9483  00142C  B4D8               	btfsc	status,2,c
  9484  00142E  D006               	goto	i2l2523
  9485                           
  9486                           ; BSR set to: 0
  9487  001430  0100               	movlb	0	; () banked
  9488  001432  6D80               	negf	i2___awmod@dividend& (0+255),b
  9489  001434  0100               	movlb	0	; () banked
  9490  001436  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9491  001438  B0D8               	btfsc	status,0,c
  9492  00143A  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9493  00143C                     i2l2523:
  9494                           
  9495                           ; BSR set to: 0
  9496  00143C  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9497  001440  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9498  001444  0012               	return	
  9499  001446                     __end_ofi2___awmod:
  9500                           	opt stack 0
  9501                           pclatu	equ	0xFFB
  9502                           pclath	equ	0xFFA
  9503                           tblptru	equ	0xFF8
  9504                           tblptrh	equ	0xFF7
  9505                           tblptrl	equ	0xFF6
  9506                           tablat	equ	0xFF5
  9507                           prodh	equ	0xFF4
  9508                           prodl	equ	0xFF3
  9509                           intcon	equ	0xFF2
  9510                           postinc0	equ	0xFEE
  9511                           fsr0h	equ	0xFEA
  9512                           fsr0l	equ	0xFE9
  9513                           wreg	equ	0xFE8
  9514                           indf1	equ	0xFE7
  9515                           fsr1h	equ	0xFE2
  9516                           fsr1l	equ	0xFE1
  9517                           bsr	equ	0xFE0
  9518                           indf2	equ	0xFDF
  9519                           postinc2	equ	0xFDE
  9520                           postdec2	equ	0xFDD
  9521                           fsr2h	equ	0xFDA
  9522                           fsr2l	equ	0xFD9
  9523                           status	equ	0xFD8
  9524                           
  9525 ;; *************** function _SleepIfOkay *****************
  9526 ;; Defined at:
  9527 ;;		line 226 in file "../src/messages.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;		None
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;		None
  9532 ;; Return value:  Size  Location     Type
  9533 ;;		None               void
  9534 ;; Registers used:
  9535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9541 ;;      Params:         0       0       0       0       0
  9542 ;;      Locals:         0       0       0       0       0
  9543 ;;      Temps:          0       0       0       0       0
  9544 ;;      Totals:         0       0       0       0       0
  9545 ;;Total ram usage:        0 bytes
  9546 ;; Hardware stack levels used:    1
  9547 ;; Hardware stack levels required when called:    2
  9548 ;; This function calls:
  9549 ;;		_check_msg
  9550 ;;		_enter_sleep_mode
  9551 ;;		_in_high_int
  9552 ;;		_in_low_int
  9553 ;; This function is called by:
  9554 ;;		_InterruptHandlerHigh
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text56
  9559  00189E                     __ptext56:
  9560                           	opt stack 0
  9561  00189E                     _SleepIfOkay:
  9562                           	opt stack 17
  9563                           
  9564                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;incstack = 0
  9568  00189E  0100               	movlb	0	; () banked
  9569  0018A0  67C7               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9570  0018A2  D001               	goto	i2l3007
  9571  0018A4  0012               	return	
  9572  0018A6                     i2l3007:
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;messages.c: 230: }
  9576                           ;messages.c: 233: if (in_low_int()) {
  9577  0018A6  EC62  F00D         	call	_in_low_int	;wreg free
  9578  0018AA  0100               	movlb	0	; () banked
  9579  0018AC  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  9580  0018AE  0100               	movlb	0	; () banked
  9581  0018B0  1182               	iorwf	?_in_low_int& (0+255),w,b
  9582  0018B2  A4D8               	btfss	status,2,c
  9583  0018B4  0012               	return	
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;messages.c: 235: }
  9587                           ;messages.c: 238: if (!in_high_int()) {
  9588                           
  9589                           ; BSR set to: 0
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;messages.c: 234: return;
  9593  0018B6  ECF0  F00E         	call	_in_high_int	;wreg free
  9594  0018BA  0100               	movlb	0	; () banked
  9595  0018BC  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9596  0018BE  0100               	movlb	0	; () banked
  9597  0018C0  1180               	iorwf	?_in_high_int& (0+255),w,b
  9598  0018C2  B4D8               	btfsc	status,2,c
  9599  0018C4  0012               	return	
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;messages.c: 240: }
  9603                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9604                           
  9605                           ; BSR set to: 0
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;messages.c: 239: return;
  9609  0018C6  0102               	movlb	2	; () banked
  9610  0018C8  0E02               	movlw	high _ToMainHigh_MQ
  9611  0018CA  0100               	movlb	0	; () banked
  9612  0018CC  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9613  0018CE  0102               	movlb	2	; () banked
  9614  0018D0  0E57               	movlw	low _ToMainHigh_MQ
  9615  0018D2  0100               	movlb	0	; () banked
  9616  0018D4  6F80               	movwf	check_msg@qptr& (0+255),b
  9617  0018D6  ECEB  F00D         	call	_check_msg	;wreg free
  9618  0018DA  0900               	iorlw	0
  9619  0018DC  A4D8               	btfss	status,2,c
  9620  0018DE  0012               	return	
  9621                           
  9622                           ;messages.c: 247: }
  9623                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9624                           
  9625                           ;messages.c: 246: return;
  9626  0018E0  0101               	movlb	1	; () banked
  9627  0018E2  0E01               	movlw	high _ToMainLow_MQ
  9628  0018E4  0100               	movlb	0	; () banked
  9629  0018E6  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9630  0018E8  0101               	movlb	1	; () banked
  9631  0018EA  0E72               	movlw	low _ToMainLow_MQ
  9632  0018EC  0100               	movlb	0	; () banked
  9633  0018EE  6F80               	movwf	check_msg@qptr& (0+255),b
  9634  0018F0  ECEB  F00D         	call	_check_msg	;wreg free
  9635  0018F4  0900               	iorlw	0
  9636  0018F6  B4D8               	btfsc	status,2,c
  9637                           
  9638                           ;messages.c: 250: }
  9639                           ;messages.c: 251: enter_sleep_mode();
  9640                           
  9641                           ;messages.c: 249: return;
  9642  0018F8  EC24  F00F         	call	_enter_sleep_mode	;wreg free
  9643  0018FC  0012               	return	
  9644  0018FE                     __end_of_SleepIfOkay:
  9645                           	opt stack 0
  9646                           pclatu	equ	0xFFB
  9647                           pclath	equ	0xFFA
  9648                           tblptru	equ	0xFF8
  9649                           tblptrh	equ	0xFF7
  9650                           tblptrl	equ	0xFF6
  9651                           tablat	equ	0xFF5
  9652                           prodh	equ	0xFF4
  9653                           prodl	equ	0xFF3
  9654                           intcon	equ	0xFF2
  9655                           postinc0	equ	0xFEE
  9656                           fsr0h	equ	0xFEA
  9657                           fsr0l	equ	0xFE9
  9658                           wreg	equ	0xFE8
  9659                           indf1	equ	0xFE7
  9660                           fsr1h	equ	0xFE2
  9661                           fsr1l	equ	0xFE1
  9662                           bsr	equ	0xFE0
  9663                           indf2	equ	0xFDF
  9664                           postinc2	equ	0xFDE
  9665                           postdec2	equ	0xFDD
  9666                           fsr2h	equ	0xFDA
  9667                           fsr2l	equ	0xFD9
  9668                           status	equ	0xFD8
  9669                           
  9670 ;; *************** function _in_low_int *****************
  9671 ;; Defined at:
  9672 ;;		line 33 in file "../src/interrupts.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;		None
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  2    2[BANK0 ] int 
  9679 ;; Registers used:
  9680 ;;		wreg, status,2, status,0, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9686 ;;      Params:         0       2       0       0       0
  9687 ;;      Locals:         0       0       0       0       0
  9688 ;;      Temps:          0       0       0       0       0
  9689 ;;      Totals:         0       2       0       0       0
  9690 ;;Total ram usage:        2 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:    1
  9693 ;; This function calls:
  9694 ;;		_in_high_int
  9695 ;; This function is called by:
  9696 ;;		_SleepIfOkay
  9697 ;;		_in_main
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text57
  9702  001AC4                     __ptext57:
  9703                           	opt stack 0
  9704  001AC4                     _in_low_int:
  9705                           	opt stack 17
  9706                           
  9707                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9708                           
  9709                           ;incstack = 0
  9710  001AC4  ACF2               	btfss	intcon,6,c	;volatile
  9711  001AC6  D007               	goto	i2l2655
  9712                           
  9713                           ;interrupts.c: 35: return (0);
  9714  001AC8  0E00               	movlw	0
  9715  001ACA  0100               	movlb	0	; () banked
  9716  001ACC  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9717  001ACE  0E00               	movlw	0
  9718  001AD0  0100               	movlb	0	; () banked
  9719  001AD2  6F82               	movwf	?_in_low_int& (0+255),b
  9720  001AD4  0012               	return	
  9721  001AD6                     i2l2655:
  9722  001AD6  ECF0  F00E         	call	_in_high_int	;wreg free
  9723  001ADA  0100               	movlb	0	; () banked
  9724  001ADC  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9725  001ADE  0100               	movlb	0	; () banked
  9726  001AE0  1180               	iorwf	?_in_high_int& (0+255),w,b
  9727  001AE2  B4D8               	btfsc	status,2,c
  9728  001AE4  D007               	goto	i2l2663
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;interrupts.c: 37: return (0);
  9732  001AE6  0E00               	movlw	0
  9733  001AE8  0100               	movlb	0	; () banked
  9734  001AEA  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9735  001AEC  0E00               	movlw	0
  9736  001AEE  0100               	movlb	0	; () banked
  9737  001AF0  6F82               	movwf	?_in_low_int& (0+255),b
  9738  001AF2  0012               	return	
  9739  001AF4                     i2l2663:
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;interrupts.c: 39: return (1);
  9743  001AF4  0E00               	movlw	0
  9744  001AF6  0100               	movlb	0	; () banked
  9745  001AF8  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9746  001AFA  0E01               	movlw	1
  9747  001AFC  0100               	movlb	0	; () banked
  9748  001AFE  6F82               	movwf	?_in_low_int& (0+255),b
  9749  001B00  0012               	return	
  9750  001B02                     __end_of_in_low_int:
  9751                           	opt stack 0
  9752                           pclatu	equ	0xFFB
  9753                           pclath	equ	0xFFA
  9754                           tblptru	equ	0xFF8
  9755                           tblptrh	equ	0xFF7
  9756                           tblptrl	equ	0xFF6
  9757                           tablat	equ	0xFF5
  9758                           prodh	equ	0xFF4
  9759                           prodl	equ	0xFF3
  9760                           intcon	equ	0xFF2
  9761                           postinc0	equ	0xFEE
  9762                           fsr0h	equ	0xFEA
  9763                           fsr0l	equ	0xFE9
  9764                           wreg	equ	0xFE8
  9765                           indf1	equ	0xFE7
  9766                           fsr1h	equ	0xFE2
  9767                           fsr1l	equ	0xFE1
  9768                           bsr	equ	0xFE0
  9769                           indf2	equ	0xFDF
  9770                           postinc2	equ	0xFDE
  9771                           postdec2	equ	0xFDD
  9772                           fsr2h	equ	0xFDA
  9773                           fsr2l	equ	0xFD9
  9774                           status	equ	0xFD8
  9775                           
  9776 ;; *************** function _in_high_int *****************
  9777 ;; Defined at:
  9778 ;;		line 25 in file "../src/interrupts.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  2    0[BANK0 ] int 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9792 ;;      Params:         0       2       0       0       0
  9793 ;;      Locals:         0       0       0       0       0
  9794 ;;      Temps:          0       0       0       0       0
  9795 ;;      Totals:         0       2       0       0       0
  9796 ;;Total ram usage:        2 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_in_low_int
  9802 ;;		_SleepIfOkay
  9803 ;;		_in_main
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           	psect	text58
  9808  001DE0                     __ptext58:
  9809                           	opt stack 0
  9810  001DE0                     _in_high_int:
  9811                           	opt stack 17
  9812                           
  9813                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;incstack = 0
  9817  001DE0  0E00               	movlw	0
  9818  001DE2  AEF2               	btfss	intcon,7,c	;volatile
  9819  001DE4  0E01               	movlw	1
  9820  001DE6  0100               	movlb	0	; () banked
  9821  001DE8  6F80               	movwf	?_in_high_int& (0+255),b
  9822  001DEA  0100               	movlb	0	; () banked
  9823  001DEC  6B81               	clrf	(?_in_high_int+1)& (0+255),b
  9824  001DEE  0012               	return	
  9825  001DF0                     __end_of_in_high_int:
  9826                           	opt stack 0
  9827                           pclatu	equ	0xFFB
  9828                           pclath	equ	0xFFA
  9829                           tblptru	equ	0xFF8
  9830                           tblptrh	equ	0xFF7
  9831                           tblptrl	equ	0xFF6
  9832                           tablat	equ	0xFF5
  9833                           prodh	equ	0xFF4
  9834                           prodl	equ	0xFF3
  9835                           intcon	equ	0xFF2
  9836                           postinc0	equ	0xFEE
  9837                           fsr0h	equ	0xFEA
  9838                           fsr0l	equ	0xFE9
  9839                           wreg	equ	0xFE8
  9840                           indf1	equ	0xFE7
  9841                           fsr1h	equ	0xFE2
  9842                           fsr1l	equ	0xFE1
  9843                           bsr	equ	0xFE0
  9844                           indf2	equ	0xFDF
  9845                           postinc2	equ	0xFDE
  9846                           postdec2	equ	0xFDD
  9847                           fsr2h	equ	0xFDA
  9848                           fsr2l	equ	0xFD9
  9849                           status	equ	0xFD8
  9850                           
  9851 ;; *************** function _enter_sleep_mode *****************
  9852 ;; Defined at:
  9853 ;;		line 202 in file "../src/messages.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;		None
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;		None
  9858 ;; Return value:  Size  Location     Type
  9859 ;;		None               void
  9860 ;; Registers used:
  9861 ;;		None
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9867 ;;      Params:         0       0       0       0       0
  9868 ;;      Locals:         0       0       0       0       0
  9869 ;;      Temps:          0       0       0       0       0
  9870 ;;      Totals:         0       0       0       0       0
  9871 ;;Total ram usage:        0 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; This function calls:
  9874 ;;		Nothing
  9875 ;; This function is called by:
  9876 ;;		_SleepIfOkay
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text59
  9881  001E48                     __ptext59:
  9882                           	opt stack 0
  9883  001E48                     _enter_sleep_mode:
  9884                           	opt stack 18
  9885                           
  9886                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;incstack = 0
  9890  001E48  8ED3               	bsf	4051,7,c	;volatile
  9891  001E4A  0003               	sleep		;# 
  9892  001E4C  0012               	return	
  9893  001E4E                     __end_of_enter_sleep_mode:
  9894                           	opt stack 0
  9895                           pclatu	equ	0xFFB
  9896                           pclath	equ	0xFFA
  9897                           tblptru	equ	0xFF8
  9898                           tblptrh	equ	0xFF7
  9899                           tblptrl	equ	0xFF6
  9900                           tablat	equ	0xFF5
  9901                           prodh	equ	0xFF4
  9902                           prodl	equ	0xFF3
  9903                           intcon	equ	0xFF2
  9904                           postinc0	equ	0xFEE
  9905                           fsr0h	equ	0xFEA
  9906                           fsr0l	equ	0xFE9
  9907                           wreg	equ	0xFE8
  9908                           indf1	equ	0xFE7
  9909                           fsr1h	equ	0xFE2
  9910                           fsr1l	equ	0xFE1
  9911                           bsr	equ	0xFE0
  9912                           indf2	equ	0xFDF
  9913                           postinc2	equ	0xFDE
  9914                           postdec2	equ	0xFDD
  9915                           fsr2h	equ	0xFDA
  9916                           fsr2l	equ	0xFD9
  9917                           status	equ	0xFD8
  9918                           
  9919 ;; *************** function _check_msg *****************
  9920 ;; Defined at:
  9921 ;;		line 220 in file "../src/messages.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9924 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;		None
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      unsigned char 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9936 ;;      Params:         0       2       0       0       0
  9937 ;;      Locals:         0       0       0       0       0
  9938 ;;      Temps:          0       1       0       0       0
  9939 ;;      Totals:         0       3       0       0       0
  9940 ;;Total ram usage:        3 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; This function calls:
  9943 ;;		Nothing
  9944 ;; This function is called by:
  9945 ;;		_SleepIfOkay
  9946 ;;		_block_on_To_msgqueues
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	text60
  9951  001BD6                     __ptext60:
  9952                           	opt stack 0
  9953  001BD6                     _check_msg:
  9954                           	opt stack 18
  9955                           
  9956                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9957                           
  9958                           ;incstack = 0
  9959  001BD6  0100               	movlb	0	; () banked
  9960  001BD8  EE20 F056          	lfsr	2,86
  9961  001BDC  0100               	movlb	0	; () banked
  9962  001BDE  5180               	movf	check_msg@qptr& (0+255),w,b
  9963  001BE0  26D9               	addwf	fsr2l,f,c
  9964  001BE2  0100               	movlb	0	; () banked
  9965  001BE4  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
  9966  001BE6  22DA               	addwfc	fsr2h,f,c
  9967  001BE8  50DF               	movf	indf2,w,c
  9968  001BEA  0100               	movlb	0	; () banked
  9969  001BEC  6F82               	movwf	??_check_msg& (0+255),b
  9970  001BEE  0100               	movlb	0	; () banked
  9971  001BF0  5182               	movf	??_check_msg& (0+255),w,b
  9972  001BF2  0D11               	mullw	17
  9973  001BF4  50F3               	movf	prodl,w,c
  9974  001BF6  0100               	movlb	0	; () banked
  9975  001BF8  2580               	addwf	check_msg@qptr& (0+255),w,b
  9976  001BFA  6ED9               	movwf	fsr2l,c
  9977  001BFC  50F4               	movf	prodh,w,c
  9978  001BFE  0100               	movlb	0	; () banked
  9979  001C00  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9980  001C02  6EDA               	movwf	fsr2h,c
  9981  001C04  50DF               	movf	indf2,w,c
  9982  001C06  0012               	return	
  9983  001C08                     __end_of_check_msg:
  9984                           	opt stack 0
  9985  0000                     pclatu	equ	0xFFB
  9986                           pclath	equ	0xFFA
  9987                           tblptru	equ	0xFF8
  9988                           tblptrh	equ	0xFF7
  9989                           tblptrl	equ	0xFF6
  9990                           tablat	equ	0xFF5
  9991                           prodh	equ	0xFF4
  9992                           prodl	equ	0xFF3
  9993                           intcon	equ	0xFF2
  9994                           postinc0	equ	0xFEE
  9995                           fsr0h	equ	0xFEA
  9996                           fsr0l	equ	0xFE9
  9997                           wreg	equ	0xFE8
  9998                           indf1	equ	0xFE7
  9999                           fsr1h	equ	0xFE2
 10000                           fsr1l	equ	0xFE1
 10001                           bsr	equ	0xFE0
 10002                           indf2	equ	0xFDF
 10003                           postinc2	equ	0xFDE
 10004                           postdec2	equ	0xFDD
 10005                           fsr2h	equ	0xFDA
 10006                           fsr2l	equ	0xFD9
 10007                           status	equ	0xFD8
 10008                           pclatu	equ	0xFFB
 10009                           pclath	equ	0xFFA
 10010                           tblptru	equ	0xFF8
 10011                           tblptrh	equ	0xFF7
 10012                           tblptrl	equ	0xFF6
 10013                           tablat	equ	0xFF5
 10014                           prodh	equ	0xFF4
 10015                           prodl	equ	0xFF3
 10016                           intcon	equ	0xFF2
 10017                           postinc0	equ	0xFEE
 10018                           fsr0h	equ	0xFEA
 10019                           fsr0l	equ	0xFE9
 10020                           wreg	equ	0xFE8
 10021                           indf1	equ	0xFE7
 10022                           fsr1h	equ	0xFE2
 10023                           fsr1l	equ	0xFE1
 10024                           bsr	equ	0xFE0
 10025                           indf2	equ	0xFDF
 10026                           postinc2	equ	0xFDE
 10027                           postdec2	equ	0xFDD
 10028                           fsr2h	equ	0xFDA
 10029                           fsr2l	equ	0xFD9
 10030                           status	equ	0xFD8
 10031                           
 10032                           	psect	param0
 10033  0000                     pclatu	equ	0xFFB
 10034                           pclath	equ	0xFFA
 10035                           tblptru	equ	0xFF8
 10036                           tblptrh	equ	0xFF7
 10037                           tblptrl	equ	0xFF6
 10038                           tablat	equ	0xFF5
 10039                           prodh	equ	0xFF4
 10040                           prodl	equ	0xFF3
 10041                           intcon	equ	0xFF2
 10042                           postinc0	equ	0xFEE
 10043                           fsr0h	equ	0xFEA
 10044                           fsr0l	equ	0xFE9
 10045                           wreg	equ	0xFE8
 10046                           indf1	equ	0xFE7
 10047                           fsr1h	equ	0xFE2
 10048                           fsr1l	equ	0xFE1
 10049                           bsr	equ	0xFE0
 10050                           indf2	equ	0xFDF
 10051                           postinc2	equ	0xFDE
 10052                           postdec2	equ	0xFDD
 10053                           fsr2h	equ	0xFDA
 10054                           fsr2l	equ	0xFD9
 10055                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         376
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      99
    BANK0           128     69      72
    BANK1           256    114     201
    BANK2           256      0     174
    BANK3           256      0      87

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), main@uart_response(BANK1[14]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> uart_transmit_interrupt_handler@data(COMRAM[2]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), main@uart_response(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_send_uart_message
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                96    96      0   21083
                                             22 BANK1     92    92      0
               _FromMainHigh_sendmsg
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
            _i_like_to_moveit_moveit
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3477
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2788
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i_like_to_moveit_moveit                              4     3      1    3360
                                             16 BANK1      4     3      1
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (1) _send_uart_message                                    3     1      2    3082
                                             68 BANK0      1     1      0
                                             14 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2658
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    7016
                                             54 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                      4     4      0    1765
                                             29 COMRAM     4     4      0
                _FromMainLow_recvmsg
                             i1_blip
 ---------------------------------------------------------------------------------
 (8) i1_blip                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      28    28      0    2943
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    2308
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2187
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    8352
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    3788
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    13    13      0    4308
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                            i2_blip1
                            i2_blip2
 ---------------------------------------------------------------------------------
 (13) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     119
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1797
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1698
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainHigh_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _i_like_to_moveit_moveit
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           ___awmod
           _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         ___awmod
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
     i1_blip

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply
     i2_blip1
     i2_blip2
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      57      10       34.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      AE       8       68.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     72      C9       6       78.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      48       4       56.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     279      11        0.0%
DATA                 0      0     279      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 15 20:13:56 2014

                              ??_debug_configure 00B8                         _MQ_Main_Willing_to_block 00C7  
                                    _SSPSTATbits 000FC7               uart_receive_interrupt_handler@done 005D  
                      __end_of_ToMainLow_recvmsg 1B38                                               bsr 000FE0  
                      __end_of_ToMainLow_sendmsg 1D58                                     __CFG_CP0$OFF 000000  
                              i2recv_msg@msgtype 008D                                i2recv_msg@tlength 0094  
                           ?_FromMainLow_recvmsg 0019                                              l123 0818  
                                            l546 1D2E                                              l570 1BBA  
                                            l547 1D30                                              l572 1BD0  
                                            l573 1BD2                             ?_FromMainLow_sendmsg 010B  
                           __size_of_WriteTimer0 0012                             __size_of_WriteTimer1 0012  
                               ??_uart_configure 00B8                                     ___awmod@sign 00BD  
                                 _FromMainLow_MQ 0200                                              prod 000FF3  
                                            wreg 000FE8                                       _TXSTA1bits 000FAC  
                                   __CFG_IESO$ON 000000                                     ?_in_high_int 0080  
                                ReadTimer1@timer 0003                                             l1120 1894  
                            i2recv_msg@maxlength 008C                                             l3211 1BBC  
                                           l4115 1AAE                                             l4215 0760  
                                           l3513 19E0                                             l4241 083C  
                                           l4209 0758                                             l3531 1320  
                                           l3523 12EC                                             l3507 19C0  
                                           l4235 080E                                             l4227 07B8  
                                           l4243 0858                                             l3533 132C  
                                           l4261 08C6                                             l4237 081E  
                                           l4229 07FC                                             l3535 1332  
                                           l3543 1364                                             l3527 130E  
                                           l3711 0BCC                                             l4263 0908  
                                           l3547 1378                                             l3539 1356  
                                           l3563 0E3A                                             l2683 17B4  
                                           l4283 096C                                             l4277 094C  
                                           l4269 0928                                             l3727 0CAA  
                                           l3761 1886                                             l3753 1850  
                                           l4289 098C                                             l3755 185C  
                                           l4299 09AC                                             l3757 1862  
                                           _LATB 000F8A                                             i1l54 007A  
                                _FromMainHigh_MQ 0300                                    __CFG_FCMEN$ON 000000  
                                           _blip 1E28                                       i1_recv_msg 110C  
                                           _main 06E2                         ?_i_like_to_moveit_moveit 0110  
                                           fsr0h 000FEA                                             fsr1h 000FE2  
                                           fsr0l 000FE9                                             fsr2h 000FDA  
                                           indf1 000FE7                                             fsr1l 000FE1  
                                           indf2 000FDF                                             fsr2l 000FD9  
                                    main@msgtype 014B                                       i1_send_msg 1446  
                                           pclat 000FFA                                             prodh 000FF4  
                                __end_ofi2_blip1 1E48                                             prodl 000FF3  
                                __end_ofi2_blip2 1E40                            handle_start@data_read 0080  
                                           start 00C0                                       i2_recv_msg 0CAE  
                                  __CFG_FOSC2$ON 000000                                       i2_send_msg 0EFC  
                      ToMainHigh_recvmsg@msgtype 010C                                   send_msg@length 0102  
                    __size_of_timer0_int_handler 006E           uart_receive_interrupt_handler@checksum 002F  
                          ??_FromMainLow_recvmsg 001D                                            ?_blip 0001  
                          ??_FromMainLow_sendmsg 00C3                                            ?_main 0001  
                                __end_of___awmod 1382                                            _T0CON 000FD5  
                                          _T1CON 000FCD                                            i1l417 0B50  
                                __end_of___lwmod 189E                                       i1memcpy@d1 0001  
                                          i2l303 0188                                            i2l332 04F2  
                                          i2l326 0430                                            i2l287 1272  
                                          i2l299 0156                                       i1memcpy@s1 0003  
                    FromMainHigh_recvmsg@msgtype 0098                                            _TMR0H 000FD7  
                                          _TMR1H 000FCF                                            _TMR0L 000FD6  
                                          _TMR1L 000FCE                                            _SPBRG 000FAF  
                                          _TRISB 000F93                                            _TRISD 000F95  
                                     i2memcpy@d1 0080                                       i2memcpy@s1 0082  
                                   ?_init_queues 0001                        __size_of_enter_sleep_mode 0006  
                                 i1___awmod@sign 0006                                            _blip1 1E20  
                                          _blip2 1E18                                            _blip3 1E10  
    uart_receive_interrupt_handler@message_count 0033                       ToMainLow_recvmsg@maxlength 00C4  
                        timer0_lthread@msgbuffer 00BE                          i2c_configure_slave@addr 00B8  
                           main@need_sensor_data 0125                                            tablat 000FF5  
        i_like_to_moveit_moveit@right_side_speed 0110                                            status 000FD8  
                               __end_ofi1_memcpy 1A86                               __size_ofi1___awmod 0090  
                               __end_ofi2_memcpy 1A46                               __size_ofi2___awmod 00C4  
                                __initialization 1956                                     __end_of_blip 1E30  
                                   __end_of_main 09E2                                       _ReadTimer1 1DBC  
                    __size_of_timer1_int_handler 002C                       __size_of_ToMainLow_recvmsg 0036  
                     __size_of_ToMainLow_sendmsg 0024                    __size_of_FromMainHigh_recvmsg 0036  
                  __size_of_FromMainHigh_sendmsg 002E                                           ??_blip 00B8  
                                         ??_main 00C5                                  send_msg@msgtype 0103  
                                  __activetblptr 000002                                  send_msg@tlength 0106  
                     FromMainLow_sendmsg@msgtype 010B                             __end_of_handle_start 12BE  
                                         ?_blip1 0001                                           ?_blip2 0001  
                                         ?_blip3 0001                                        ??i2_blip1 0080  
                                      ??i2_blip2 0080                                           i1l4001 0A5A  
                                         i1l4003 0A5C                                           i1l4013 0A8C  
                                         i1l2443 1A74                                           i1l2437 1A58  
                                         i1l4037 0B08                                           i1l4029 0AE6  
                                         i1l2471 1554                                           i1l2463 152A  
                                         i1l2473 155C                                           i1l4057 0B64  
                                         i1l4073 15C8                                           i1l4161 0070  
                                         i1l2475 1560                                           i1l2483 157E  
                                         i1l2467 1546                                           i1l4155 0066  
                                         i1l2487 158C                                           i1l2479 1574  
                                         i1l4097 15FC                                           i2l3007 18A6  
                                         i1l3591 147E                                           i1l3639 1152  
                                         i1l3655 11F0                                           i2l2511 13F6  
                                         i2l2503 13D2                                       _OpenTimer0 1D0E  
                                     _OpenTimer1 1BA4                                           i2l2523 143C  
                                         i2l2515 141A                                           i2l2507 13E4  
                                         i2l2509 13F0                                           i2l2453 1A30  
                                         i1l3981 0A22                                   __CFG_WDTEN$OFF 000000  
                                         i2l2519 1428                                           i2l2447 1A10  
                                         i2l4143 1662                                           i2l4137 1658  
                                         i1l3987 0A28                                           i1l3989 0A2E  
                                         i2l2663 1AF4                                           i2l2655 1AD6  
                                         i2l3615 0F4A                                           i2l2745 1024  
                                         i2l2499 13B0                                           i2l3811 01E0  
                                         i2l2765 128E                                           i2l2749 10A0  
                                         i2l3821 021A                                           i2l3671 0D0E  
                                         i2l2767 12A6                                           i2l3903 04F6  
                                         i2l3809 01B4                                           i2l3827 0254  
                                         i2l3933 0698                                           i2l3925 0652  
                                         i2l3917 05C0                                           i2l3909 0554  
                                         i2l3829 0294                                           i2l3687 0DE8  
                                         i2l3863 03D0                                           i2l3839 0310  
                                         i2l3783 013C                                           i2l3945 06D8  
                                         i2l3857 0386                                           i2l3859 03C8  
                                         i2l3893 04B4                                           i2l3789 014A  
                                         i2l3895 04E0                                           _RCREG1 000FAE  
                    __end_of_i2c_configure_slave 1CE6                                    ??_SleepIfOkay 0084  
                                         _OSCCON 000FD3                                           _SPBRGH 000FB0  
                                    ?i1_recv_msg 000B                                           _SSPADD 000FC8  
                                         _SSPBUF 000FC9                   __size_of_start_i2c_slave_reply 0104  
                                         _TXREG1 000FAD                                      ?i1_send_msg 000B  
                                         i1_blip 1E30                    __end_of_start_i2c_slave_reply 110C  
                             timer0_lthread@tptr 00B8                          FromMainLow_recvmsg@data 001B  
                                    ?i2_recv_msg 008A                                      ?i2_send_msg 008A  
                                 __CFG_XINST$OFF 000000                 ??_uart_receive_interrupt_handler 001B  
                ?_uart_receive_interrupt_handler 0001                                  _i2c_int_handler 00C4  
                                      ??___awmod 00BC                                           _blink0 1E4E  
                               OpenTimer0@config 00B8                                           _ic_ptr 00C5  
                                      ??___lwmod 00BC                                    main@msgbuffer 0126  
                               __end_of_init_i2c 1778                                 OpenTimer1@config 00B8  
                                         _memcpy 19A6                                           clear_0 195C  
                                         clear_1 1968                                           clear_2 1974  
                                         clear_3 1984                                  ___awmod@divisor 00BA  
                                ___awmod@counter 00BC                                           main@ic 014C  
                               __end_of_recv_msg 0CAE                      start_i2c_slave_reply@length 0084  
  uart_transmit_interrupt_handler@message_status 0021                                __end_ofi1___awmod 1596  
                               __end_of_send_msg 0EFC                                     __pdataCOMRAM 0063  
                              __end_ofi2___awmod 1446                            timer0_int_handler@val 00A1  
                        i2c_int_handler@i2c_data 00A5                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
           uart_receive_interrupt_handler@msg_id 0034                                      init_queue@i 00BA  
                                 i2___awmod@sign 0085             uart_receive_interrupt_handler@status 002B  
                       ToMainLow_recvmsg@msgtype 010C                             __size_of_in_high_int 0010  
                        FromMainLow_sendmsg@data 010C                                  _debug_configure 1DFE  
                                __CFG_FOSC$HSPLL 000000             uart_transmit_interrupt_handler@index 0062  
                                     __accesstop 0080                          __end_of__initialization 199C  
                     __end_of_ToMainHigh_recvmsg 1B6E                       __end_of_ToMainHigh_sendmsg 1C92  
                               _need_sensor_data 005A                      __end_of_init_timer1_lthread 1DAA  
                            __end_of_SleepIfOkay 18FE                                   __pcstackCOMRAM 0001  
                                    ?_ReadTimer1 0001                                    __end_of_blip1 1E28  
                                  __end_of_blip2 1E20                                    __end_of_blip3 1E18  
                send_uart_message@message_q_code 00C4                               __size_of_check_msg 0032  
                      timer0_int_handler@msgtype 009F                              __size_ofi1_recv_msg 00E8  
                            __size_ofi1_send_msg 00C0                                        ?i1_memcpy 0001  
                  __size_of_InterruptHandlerHigh 169C                      __end_of_InterruptHandlerLow 00C0  
                                      ?i2_memcpy 0080                                    _ToMainHigh_MQ 0257  
                            __size_ofi2_recv_msg 013E                                 _enter_sleep_mode 1E48  
                            __size_ofi2_send_msg 010C                             timer1_lthread@length 0112  
                                        ??_blip1 00B8                                          ??_blip2 00B8  
                                        ??_blip3 00B8                                    check_msg@qptr 0080  
                           timer1_lthread@retval 00C4                             __size_of_init_queues 0058  
                                     __pbssBANK0 00C7                                       __pbssBANK1 0172  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                                    ?_OpenTimer0 0001                                      ?_OpenTimer1 0001  
                        i2c_int_handler@msg_type 00A7                                          ?i1_blip 0001  
                        __end_of_i2c_int_handler 06E2                               timer1_lthread@tptr 010E  
                                        ?_blink0 0001                                recv_msg@maxlength 0102  
                                recv_msg@msgtype 0103                                  recv_msg@tlength 0108  
                          __size_of_handle_start 00CA                                 WriteTimer0@timer 0082  
                                        ?_memcpy 00B8                                 WriteTimer1@timer 0003  
                                  ??_WriteTimer0 0082                                    ??_WriteTimer1 0003  
               __size_of_i_like_to_moveit_moveit 003E                          __size_of_timer0_lthread 000E  
                        __size_of_timer1_lthread 0062                                       ??i1_memcpy 0007  
                                     ??i2_memcpy 0086                          __end_of_debug_configure 1E08  
                               i1send_msg@length 000D                                          _SSPCON1 000FC6  
                                        _SSPCON2 000FC5                                          _SSPSTAT 000FC7  
                            __size_of_ReadTimer1 0012                                __end_of_check_msg 1C08  
                                        i2_blip1 1E40                                          i2_blip2 1E38  
                                      ?_init_i2c 00B8                                      _SleepIfOkay 189E  
                              _send_uart_message 1D78                                  __size_ofi1_blip 0008  
                                      ?_recv_msg 0100                                       _in_low_int 1AC4  
                                   _handle_start 11F4                                          __Hparam 0000  
                                      ?_send_msg 0100                                          __Lparam 0000  
                             ?_send_uart_message 010E        uart_receive_interrupt_handler@status_1937 002C  
                     __end_of_timer0_int_handler 1712                      __end_of_FromMainLow_recvmsg 1D0E  
                    __end_of_FromMainLow_sendmsg 1C64                                          ___awmod 12BE  
                                        ___lwmod 183E                                  __size_of_blink0 0004  
                                __CFG_STVREN$OFF 000000                              ??_send_uart_message 00C4  
                                        __pcinit 1956                                  __size_of_memcpy 0050  
                                     _init_queue 1778                                          __ramtop 0400  
                            __size_of_OpenTimer0 0026                              __size_of_OpenTimer1 0032  
                                        __ptext0 06E2                                          __ptext1 1D58  
                                        __ptext2 17DC                                          __ptext3 1E4E  
                                        __ptext4 183E                                          __ptext5 1C08  
                                        __ptext6 1DF0                                          __ptext7 1D98  
                                        __ptext8 18FE                                          __ptext9 1778  
                                      _T0CONbits 000FD5                                        _T1CONbits 000FCD  
                               ___awmod@dividend 00B8                              __end_of_WriteTimer0 1DE0  
                            __end_of_WriteTimer1 1DBC                                          main@jjj 0145  
                                 main@motor_data 0116                                   __pintcode_body 161E  
                   __end_of_FromMainHigh_recvmsg 1BA4                             end_of_initialization 199C  
                        timer1_lthread@msgbuffer 0114                     __end_of_FromMainHigh_sendmsg 1C36  
                     FromMainHigh_sendmsg@length 00C3                        __end_of_send_uart_message 1D98  
                                        memcpy@d 00BE                                          memcpy@n 00BC  
                                        memcpy@s 00C0                                       ??_init_i2c 00BA  
                                   ??i1_recv_msg 0012                          __size_of_uart_configure 0020  
                    i2c_int_handler@data_written 00A2                                    __Lmediumconst 0000  
                                        int_func 161E                                     ??i1_send_msg 0011  
       uart_receive_interrupt_handler@bad_end_id 0031       uart_receive_interrupt_handler@bad_start_id 0030  
                               ?_i2c_int_handler 0001                                     ??i2_recv_msg 0091  
                                     ??_recv_msg 00C2                                     ??i2_send_msg 0090  
                                     ??_send_msg 00C2  uart_receive_interrupt_handler@gooey_uart_center 001D  
                     __end_of_timer1_int_handler 1CBE                                          postdec2 000FDD  
                                        postinc0 000FEE                                          postinc2 000FDE  
                      ToMainHigh_sendmsg@msgtype 0096           i_like_to_moveit_moveit@left_side_speed 0111  
                             __end_ofi1_recv_msg 11F4                               __end_ofi1_send_msg 1506  
                    FromMainHigh_sendmsg@msgtype 010B           __end_of_uart_receive_interrupt_handler 0B6C  
        __size_of_uart_receive_interrupt_handler 018A                   _uart_receive_interrupt_handler 09E2  
                               ?_debug_configure 0001                                        _TRISBbits 000F93  
                                      _TRISCbits 000F94                               __end_ofi2_recv_msg 0DEC  
                                      i1___awmod 1506                               __end_ofi2_send_msg 1008  
                                      i2___awmod 1382                    FromMainHigh_recvmsg@maxlength 009C  
                       timer1_int_handler@result 001B                                       main@length 014A  
                                    ?_in_low_int 0082                                   __end_ofi1_blip 1E38  
                          timer0_lthread@msgtype 00BA                            _start_i2c_slave_reply 1008  
                   __size_of_i2c_configure_slave 0028                         __end_of_enter_sleep_mode 1E4E  
                                   ??_ReadTimer1 0003                          _i_like_to_moveit_moveit 1A86  
                             _ToMainHigh_recvmsg 1B38                                        i1memcpy@d 0007  
                             _ToMainHigh_sendmsg 1C64                                        i1memcpy@n 0005  
                                      i1memcpy@s 0009                                      _BAUDCONbits 000FB8  
                                 __end_of_blink0 1E52                                    __pidataCOMRAM 1E52  
                                 _timer0_lthread 1DF0                                      ?_init_queue 00B8  
                                      i2memcpy@d 0086                                      _WriteTimer0 1DCE  
                                    _WriteTimer1 1DAA                                        i2memcpy@n 0084  
                                      i2memcpy@s 0088                                   _timer1_lthread 17DC  
                                 __end_of_memcpy 19F6                                _enable_interrupts 1E08  
                            ?_ToMainHigh_recvmsg 010C                         i2c_int_handler@data_read 00A9  
                            ?_ToMainHigh_sendmsg 0096                               ?_enable_interrupts 0001  
                            start_initialization 1956                                    ??_in_high_int 0082  
   uart_receive_interrupt_handler@start_byte_bad 0061                                       ?i1___awmod 0001  
                              __size_ofi1_memcpy 0040                                __size_ofi2_memcpy 0050  
                                     ?i2___awmod 0080                        FromMainLow_sendmsg@length 00C3  
                          i2c_int_handler@length 009E                              ??_enable_interrupts 00B8  
                                   ??_OpenTimer0 00B8                                     ??_OpenTimer1 00B8  
                             __end_of_ReadTimer1 1DCE                  uart_receive_interrupt_handler@i 0035  
                     __size_of_send_uart_message 0020                                main@uart_response 0137  
                                       ??i1_blip 0001                     __end_of_InterruptHandlerHigh 16A4  
                                     init_i2c@ic 00B8                             ??_ToMainHigh_recvmsg 00C4  
                           ??_ToMainHigh_sendmsg 0099           uart_transmit_interrupt_handler@msgtype 0020  
                       i2c_int_handler@need_data 00A4                           __end_of_timer0_lthread 1DFE  
                                       ??_blink0 00B8                         i2c_int_handler@error_buf 009F  
                         __end_of_timer1_lthread 183E                               i1___awmod@dividend 0001  
                      __end_of_enable_interrupts 1E10                                         ??_memcpy 00BE  
                          timer1_lthread@msgtype 0110                             _FromMainHigh_recvmsg 1B6E  
            uart_receive_interrupt_handler@frame 0048              uart_receive_interrupt_handler@index 005F  
                           _FromMainHigh_sendmsg 1C08              uart_receive_interrupt_handler@error 005E  
                   __size_of_init_timer1_lthread 0012                               __end_of_OpenTimer0 1D34  
                             __end_of_OpenTimer1 1BD6                         i2c_int_handler@msg_ready 00A8  
                                    __pbssCOMRAM 0048                                    ??_init_queues 00BB  
                                  __pcstackBANK0 0080                                    __pcstackBANK1 0100  
                            __size_of_in_low_int 003E                         start_i2c_slave_reply@msg 0080  
                            __CFG_CCP2MX$DEFAULT 000000                                         ?i2_blip1 0001  
                                       ?i2_blip2 0001                         ToMainLow_sendmsg@msgtype 0017  
                   __size_of_InterruptHandlerLow 00A8                              __end_of_in_high_int 1DF0  
                                 _uart_configure 1D58                                     ?_SleepIfOkay 0001  
                          ToMainLow_recvmsg@data 010E                                     _ToMainLow_MQ 0172  
                            __size_of_init_queue 0064                                        _check_msg 1BD6  
                                      __pnvBANK0 00C5                           ?_start_i2c_slave_reply 0080  
                              __size_of_init_i2c 0066                                     recv_msg@data 0105  
                      ??_i_like_to_moveit_moveit 00C5                                     recv_msg@qmsg 010A  
                                   recv_msg@slot 0107                                     recv_msg@qptr 0100  
                              __size_of_recv_msg 0142                                        __pintcode 0008  
                              __size_of_send_msg 0110                                         ?___awmod 00B8  
                                ?_timer0_lthread 00B8                                         ?___lwmod 00B8  
                          ?_FromMainHigh_recvmsg 0098                                  ?_timer1_lthread 010E  
                          ?_FromMainHigh_sendmsg 010B                                      __pintcodelo 0018  
                         ToMainHigh_recvmsg@data 010E                       i2c_int_handler@msg_to_send 00A6  
                              WriteTimer0@timer0 0080                               _timer0_int_handler 16A4  
                              WriteTimer1@timer1 0001                                      ??i1___awmod 0005  
                          ToMainLow_sendmsg@data 0018                                   __size_of_blip1 0008  
                                 __size_of_blip2 0008                                   __size_of_blip3 0008  
                                    ??i2___awmod 0084                           __end_of_uart_configure 1D78  
                            i1recv_msg@maxlength 000D                              ?_timer0_int_handler 0001  
   uart_receive_interrupt_handler@bad_counter_id 002D                              __end_of_init_queues 1956  
                                       _LATBbits 000F8A                                         _LATDbits 000F8C  
                                     ?_check_msg 0080                                         _IPR1bits 000F9F  
                                       _PIE1bits 000F9D                                         _PIR1bits 000F9E  
                         ToMainHigh_sendmsg@data 0097                                         _RCONbits 000FD0  
                               __CFG_WDTPS$32768 000000                                   i1recv_msg@data 0010  
                           ??_timer0_int_handler 009D                                   i1recv_msg@qmsg 0017  
                                 i1recv_msg@slot 0014                                   i1recv_msg@qptr 000B  
 uart_receive_interrupt_handler@received_counter 0060                     FromMainLow_recvmsg@maxlength 001D  
                     __size_of_enable_interrupts 0008                                i1send_msg@msgtype 000E  
                              i1send_msg@tlength 0012                       FromMainLow_recvmsg@msgtype 0019  
                   __size_of_FromMainLow_recvmsg 0028                     __size_of_FromMainLow_sendmsg 002E  
                           timer0_lthread@length 00BC                               _timer1_int_handler 1C92  
                                       i1_memcpy 1A46                             _InterruptHandlerHigh 0008  
                                       i2_memcpy 19F6                  __end_of_i_like_to_moveit_moveit 1AC4  
                           timer0_lthread@msgval 00C0                         FromMainHigh_recvmsg@data 009A  
                                    _in_high_int 1DE0                                     send_msg@data 0104  
                            _i2c_configure_slave 1CBE                                     send_msg@qmsg 0109  
                                   send_msg@slot 0108                                     send_msg@qptr 0100  
                                ?_uart_configure 0001                              ?_timer1_int_handler 0001  
                             i2___awmod@dividend 0080                                 __size_ofi2_blip1 0008  
                               __size_ofi2_blip2 0008                                         __Hparam0 0000  
                                   ??_in_low_int 0084                                         __Lparam0 0000  
                           ?_i2c_configure_slave 0001                                ?_enter_sleep_mode 0001  
                         ??_FromMainHigh_recvmsg 009C                           ??_FromMainHigh_sendmsg 00C3  
                              i1___awmod@divisor 0003                             ??_timer1_int_handler 001B  
        __end_of_uart_transmit_interrupt_handler 161E         __size_of_uart_transmit_interrupt_handler 0088  
              ??_uart_transmit_interrupt_handler 001E                 ?_uart_transmit_interrupt_handler 0001  
                _uart_transmit_interrupt_handler 1596                                i1___awmod@counter 0005  
                       __size_of_i2c_int_handler 061E                                 __size_of___awmod 00C4  
                             ??_enter_sleep_mode 0080                                 __size_of___lwmod 0060  
                                   ??_init_queue 00BA                                     ?_WriteTimer0 0080  
                                   ?_WriteTimer1 0001                         FromMainHigh_sendmsg@data 010C  
                        ToMainLow_sendmsg@length 001A                                main@t0thread_data 0135  
                 uart_frame_message@sent_counter 005C                            ?_InterruptHandlerHigh 0001  
            uart_transmit_interrupt_handler@data 001E              uart_transmit_interrupt_handler@done 0063  
                   i_like_to_moveit_moveit@moves 0112                                i2send_msg@msgtype 008D  
                    ToMainHigh_recvmsg@maxlength 00C4                                i2send_msg@tlength 0091  
                        init_timer1_lthread@tptr 00B8                                      _init_queues 18FE  
                             __end_of_in_low_int 1B02                                         __ptext10 1712  
                                       __ptext11 1A86                                         __ptext20 1E20  
                                       __ptext12 1D78                                         __ptext21 1E28  
                                       __ptext13 1C36                                         __ptext30 1596  
                                       __ptext22 1B02                                         __ptext14 0DEC  
                                       __ptext31 1E30                                         __ptext23 1B38  
                                       __ptext15 1CBE                                         __ptext40 1506  
                                       __ptext32 1CE6                                         __ptext24 0B6C  
                                       __ptext16 1E08                                         __ptext41 1DBC  
                                       __ptext33 110C                                         __ptext25 19A6  
                                       __ptext17 1DFE                                         __ptext50 1C64  
                                       __ptext34 09E2                                         __ptext26 12BE  
                                       __ptext18 1E10                                         __ptext51 0EFC  
                                       __ptext43 16A4                                         __ptext35 1C92  
                                       __ptext27 1BA4                                         __ptext19 1E18  
                                       __ptext60 1BD6                                         __ptext52 1B6E  
                                       __ptext44 1DCE                                         __ptext36 1DAA  
                                       __ptext28 1D0E                                         __ptext53 0CAE  
                                       __ptext45 00C4                                         __ptext37 1D34  
                                       __ptext54 19F6                                         __ptext46 1E38  
                                       __ptext38 1446                                         __ptext55 1382  
                                       __ptext47 1E40                                         __ptext39 1A46  
                                       __ptext56 189E                                         __ptext48 1008  
                                       __ptext57 1AC4                                         __ptext49 11F4  
                                       __ptext58 1DE0                                         __ptext59 1E48  
                                 i1send_msg@data 000F                                   i1send_msg@qmsg 0015  
                                 i1send_msg@slot 0014                                   i1send_msg@qptr 000B  
                       timer0_int_handler@length 009D                                         _init_i2c 1712  
                       __size_of_debug_configure 000A                              _init_timer1_lthread 1D98  
                                  __size_of_blip 0008                                    __size_of_main 0300  
                              main@t1thread_data 0148                                      ??_check_msg 0082  
                             __end_of_init_queue 17DC                             __size_of_SleepIfOkay 0060  
                                       _recv_msg 0B6C                            ??_i2c_configure_slave 00B8  
                                       _send_msg 0DEC    uart_receive_interrupt_handler@bad_checksum_id 0032  
                                 init_queue@qptr 00B8                                   i2recv_msg@data 008F  
                                 i2recv_msg@qmsg 0096                                   i2recv_msg@slot 0093  
                                 i2recv_msg@qptr 008A                                     _SSP1STATbits 000FC7  
                            _InterruptHandlerLow 0018                                         main@poop 0147  
                           ?_init_timer1_lthread 00B8                                i2___awmod@divisor 0082  
                              i2___awmod@counter 0084                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                                         memcpy@d1 00B8  
                                       memcpy@s1 00BA                     i2c_int_handler@overrun_error 00A3  
                               i2send_msg@length 008C                                         intlevel1 0000  
                                       intlevel2 0000                             ?_InterruptHandlerLow 0001  
                        ??_start_i2c_slave_reply 0082                     send_uart_message@message_ptr 010E  
                               ___lwmod@dividend 00B8                                       _RCSTA1bits 000FAB  
                                  ?_handle_start 0001                                 ??_timer0_lthread 00C0  
                    __size_of_ToMainHigh_recvmsg 0036                      __size_of_ToMainHigh_sendmsg 002E  
                                     _OSCCONbits 000FD3                                 ??_timer1_lthread 00C4  
                              i1recv_msg@msgtype 000E                                i1recv_msg@tlength 0015  
                       ToMainHigh_sendmsg@length 0099                            ??_init_timer1_lthread 00BA  
                         ??_InterruptHandlerHigh 00AA                                _ToMainLow_recvmsg 1B02  
                              _ToMainLow_sendmsg 1D34                               main@last_reg_recvd 0124  
                                ___lwmod@divisor 00BA                               ?_ToMainLow_recvmsg 010C  
                              ??_i2c_int_handler 009D                                  ___lwmod@counter 00BC  
                             ?_ToMainLow_sendmsg 0017                                      _SSPCON1bits 000FC6  
                                    _SSPCON2bits 000FC5                                   i2send_msg@data 008E  
                          ??_InterruptHandlerLow 0037                              ??_ToMainLow_recvmsg 00C4  
                                 i2send_msg@qmsg 0094                                   i2send_msg@slot 0093  
                                 i2send_msg@qptr 008A                              ??_ToMainLow_sendmsg 001A  
                            _FromMainLow_recvmsg 1CE6                                   ??_handle_start 0080  
                            _FromMainLow_sendmsg 1C36  
