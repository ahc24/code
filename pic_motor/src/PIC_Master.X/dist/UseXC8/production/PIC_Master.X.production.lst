

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Nov 19 17:38:11 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	param0,global,class=BANK0,space=1,delta=1
    75  0000                     
    76                           	psect	idataCOMRAM
    77  001D2A                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for uart_transmit_interrupt_handler@done
    81  001D2A  01                 	db	1
    82  0000                     _BAUDCONbits	set	4024
    83  0000                     _INTCON2bits	set	4081
    84  0000                     _INTCONbits	set	4082
    85  0000                     _IPR1bits	set	3999
    86  0000                     _LATB	set	3978
    87  0000                     _LATBbits	set	3978
    88  0000                     _LATDbits	set	3980
    89  0000                     _OSCCON	set	4051
    90  0000                     _OSCCONbits	set	4051
    91  0000                     _OSCTUNEbits	set	3995
    92  0000                     _PIE1bits	set	3997
    93  0000                     _PIR1bits	set	3998
    94  0000                     _RCONbits	set	4048
    95  0000                     _RCREG1	set	4014
    96  0000                     _RCSTA1bits	set	4011
    97  0000                     _SPBRG	set	4015
    98  0000                     _SPBRGH	set	4016
    99  0000                     _SSP1STATbits	set	4039
   100  0000                     _SSPADD	set	4040
   101  0000                     _SSPBUF	set	4041
   102  0000                     _SSPCON1	set	4038
   103  0000                     _SSPCON1bits	set	4038
   104  0000                     _SSPCON2	set	4037
   105  0000                     _SSPCON2bits	set	4037
   106  0000                     _SSPSTAT	set	4039
   107  0000                     _SSPSTATbits	set	4039
   108  0000                     _T0CONbits	set	4053
   109  0000                     _T1CONbits	set	4045
   110  0000                     _TMR0H	set	4055
   111  0000                     _TMR0L	set	4054
   112  0000                     _TMR1H	set	4047
   113  0000                     _TMR1L	set	4046
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISBbits	set	3987
   116  0000                     _TRISCbits	set	3988
   117  0000                     _TRISD	set	3989
   118  0000                     _TXREG1	set	4013
   119  0000                     _TXSTA1bits	set	4012
   120                           
   121                           	psect	nvBANK0
   122  0000C5                     __pnvBANK0:
   123                           	opt stack 0
   124  0000C5                     _ic_ptr:
   125                           	opt stack 0
   126  0000C5                     	ds	2
   127                           
   128                           ; #config settings
   129  0000                     
   130                           	psect	cinit
   131  0018D6                     __pcinit:
   132                           	opt stack 0
   133  0018D6                     start_initialization:
   134                           	opt stack 0
   135  0018D6                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Clear objects allocated to BANK3 (87 bytes)
   139  0018D6  EE03  F000         	lfsr	0,__pbssBANK3
   140  0018DA  0E57               	movlw	87
   141  0018DC                     clear_0:
   142  0018DC  6AEE               	clrf	postinc0,c
   143  0018DE  06E8               	decf	wreg,f,c
   144  0018E0  E1FD               	bnz	clear_0
   145                           
   146                           ; Clear objects allocated to BANK2 (174 bytes)
   147  0018E2  EE02  F000         	lfsr	0,__pbssBANK2
   148  0018E6  0EAE               	movlw	174
   149  0018E8                     clear_1:
   150  0018E8  6AEE               	clrf	postinc0,c
   151  0018EA  06E8               	decf	wreg,f,c
   152  0018EC  E1FD               	bnz	clear_1
   153                           
   154                           ; Clear objects allocated to BANK1 (87 bytes)
   155  0018EE  EE01  F066         	lfsr	0,__pbssBANK1
   156  0018F2  0E57               	movlw	87
   157  0018F4                     clear_2:
   158  0018F4  6AEE               	clrf	postinc0,c
   159  0018F6  06E8               	decf	wreg,f,c
   160  0018F8  E1FD               	bnz	clear_2
   161                           
   162                           ; Clear objects allocated to BANK0 (1 bytes)
   163  0018FA  0100               	movlb	0
   164  0018FC  6BC7               	clrf	__pbssBANK0& (0+255),b
   165                           
   166                           ; Clear objects allocated to COMRAM (35 bytes)
   167  0018FE  EE00  F056         	lfsr	0,__pbssCOMRAM
   168  001902  0E23               	movlw	35
   169  001904                     clear_3:
   170  001904  6AEE               	clrf	postinc0,c
   171  001906  06E8               	decf	wreg,f,c
   172  001908  E1FD               	bnz	clear_3
   173                           
   174                           ; Initialize objects allocated to COMRAM (1 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176  00190A  0E2A               	movlw	low __pidataCOMRAM
   177  00190C  6EF6               	movwf	tblptrl,c
   178  00190E  0E1D               	movlw	high __pidataCOMRAM
   179  001910  6EF7               	movwf	tblptrh,c
   180  001912  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181  001914  6EF8               	movwf	tblptru,c
   182  001916  0009               	tblrd		*+	;fetch initializer
   183  001918  CFF5 F079          	movff	tablat,__pdataCOMRAM
   184  00191C                     end_of_initialization:
   185                           	opt stack 0
   186  00191C                     __end_of__initialization:
   187                           	opt stack 0
   188  00191C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   189  00191E  6EF8               	movwf	tblptru,c
   190  001920  0100               	movlb	0
   191  001922  EFC2  F003         	goto	_main	;jump to C main() function
   192                           tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           
   199                           	psect	bssCOMRAM
   200  000056                     __pbssCOMRAM:
   201                           	opt stack 0
   202  000056                     uart_receive_interrupt_handler@frame:
   203                           	opt stack 0
   204  000056                     	ds	18
   205  000068                     InterruptHandlerLow@encoder_left:
   206                           	opt stack 0
   207  000068                     	ds	4
   208  00006C                     InterruptHandlerLow@encoder_right:
   209                           	opt stack 0
   210  00006C                     	ds	4
   211  000070                     _need_sensor_data:
   212                           	opt stack 0
   213  000070                     	ds	2
   214  000072                     uart_frame_message@sent_counter:
   215                           	opt stack 0
   216  000072                     	ds	1
   217  000073                     uart_receive_interrupt_handler@done:
   218                           	opt stack 0
   219  000073                     	ds	1
   220  000074                     uart_receive_interrupt_handler@error:
   221                           	opt stack 0
   222  000074                     	ds	1
   223  000075                     uart_receive_interrupt_handler@index:
   224                           	opt stack 0
   225  000075                     	ds	1
   226  000076                     uart_receive_interrupt_handler@received_counter:
   227                           	opt stack 0
   228  000076                     	ds	1
   229  000077                     uart_receive_interrupt_handler@start_byte_bad:
   230                           	opt stack 0
   231  000077                     	ds	1
   232  000078                     uart_transmit_interrupt_handler@index:
   233                           	opt stack 0
   234  000078                     	ds	1
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           tblptrl	equ	0xFF6
   238                           tablat	equ	0xFF5
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	dataCOMRAM
   243  000079                     __pdataCOMRAM:
   244                           	opt stack 0
   245  000079                     uart_transmit_interrupt_handler@done:
   246                           	opt stack 0
   247  000079                     	ds	1
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           
   255                           	psect	bssBANK0
   256  0000C7                     __pbssBANK0:
   257                           	opt stack 0
   258  0000C7                     _MQ_Main_Willing_to_block:
   259                           	opt stack 0
   260  0000C7                     	ds	1
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	bssBANK1
   269  000166                     __pbssBANK1:
   270                           	opt stack 0
   271  000166                     _ToMainLow_MQ:
   272                           	opt stack 0
   273  000166                     	ds	87
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bssBANK2
   282  000200                     __pbssBANK2:
   283                           	opt stack 0
   284  000200                     _FromMainLow_MQ:
   285                           	opt stack 0
   286  000200                     	ds	87
   287  000257                     _ToMainHigh_MQ:
   288                           	opt stack 0
   289  000257                     	ds	87
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           
   297                           	psect	bssBANK3
   298  000300                     __pbssBANK3:
   299                           	opt stack 0
   300  000300                     _FromMainHigh_MQ:
   301                           	opt stack 0
   302  000300                     	ds	87
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	cstackBANK1
   311  000100                     __pcstackBANK1:
   312                           	opt stack 0
   313  000100                     send_msg@qptr:
   314                           	opt stack 0
   315  000100                     recv_msg@qptr:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x0
   319  000100                     	ds	2
   320  000102                     send_msg@length:
   321                           	opt stack 0
   322  000102                     recv_msg@maxlength:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x2
   326  000102                     	ds	1
   327  000103                     send_msg@msgtype:
   328                           	opt stack 0
   329  000103                     recv_msg@msgtype:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x3
   333  000103                     	ds	1
   334  000104                     send_msg@data:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x4
   338  000104                     	ds	1
   339  000105                     recv_msg@data:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x5
   343  000105                     	ds	1
   344  000106                     send_msg@tlength:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x6
   348  000106                     	ds	1
   349  000107                     recv_msg@slot:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x7
   353  000107                     	ds	1
   354  000108                     send_msg@slot:
   355                           	opt stack 0
   356  000108                     recv_msg@tlength:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x8
   360  000108                     	ds	1
   361  000109                     send_msg@qmsg:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x9
   365  000109                     	ds	1
   366  00010A                     recv_msg@qmsg:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0xA
   370  00010A                     	ds	1
   371  00010B                     FromMainLow_sendmsg@msgtype:
   372                           	opt stack 0
   373  00010B                     FromMainHigh_sendmsg@msgtype:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0xB
   377  00010B                     	ds	1
   378  00010C                     ToMainLow_recvmsg@msgtype:
   379                           	opt stack 0
   380  00010C                     ToMainHigh_recvmsg@msgtype:
   381                           	opt stack 0
   382  00010C                     FromMainLow_sendmsg@data:
   383                           	opt stack 0
   384  00010C                     FromMainHigh_sendmsg@data:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0xC
   388  00010C                     	ds	2
   389  00010E                     ToMainLow_recvmsg@data:
   390                           	opt stack 0
   391  00010E                     ToMainHigh_recvmsg@data:
   392                           	opt stack 0
   393  00010E                     send_uart_message@message_ptr:
   394                           	opt stack 0
   395  00010E                     timer1_lthread@tptr:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0xE
   399  00010E                     	ds	2
   400  000110                     i_like_to_moveit_moveit@right_side_speed:
   401                           	opt stack 0
   402  000110                     timer1_lthread@msgtype:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x10
   406  000110                     	ds	1
   407  000111                     i_like_to_moveit_moveit@left_side_speed:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x11
   411  000111                     	ds	1
   412  000112                     timer1_lthread@length:
   413                           	opt stack 0
   414  000112                     i_like_to_moveit_moveit@moves:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x12
   418  000112                     	ds	2
   419  000114                     timer1_lthread@msgbuffer:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x14
   423  000114                     	ds	2
   424  000116                     main@motor_data:
   425                           	opt stack 0
   426                           
   427                           ; 14 bytes @ 0x16
   428  000116                     	ds	14
   429  000124                     main@msgbuffer:
   430                           	opt stack 0
   431                           
   432                           ; 15 bytes @ 0x24
   433  000124                     	ds	15
   434  000133                     main@last_reg_recvd:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x33
   438  000133                     	ds	1
   439  000134                     main@need_sensor_data:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x34
   443  000134                     	ds	1
   444  000135                     main@t0thread_data:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x35
   448  000135                     	ds	2
   449  000137                     main@t1thread_data:
   450                           	opt stack 0
   451                           
   452                           ; 6 bytes @ 0x37
   453  000137                     	ds	6
   454  00013D                     main@length:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x3D
   458  00013D                     	ds	1
   459  00013E                     main@msgtype:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x3E
   463  00013E                     	ds	1
   464  00013F                     main@i:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x3F
   468  00013F                     	ds	1
   469  000140                     main@ic:
   470                           	opt stack 0
   471                           
   472                           ; 38 bytes @ 0x40
   473  000140                     	ds	38
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           
   481                           	psect	cstackBANK0
   482  000080                     __pcstackBANK0:
   483                           	opt stack 0
   484  000080                     ?_in_high_int:
   485                           	opt stack 0
   486  000080                     ?i2___awmod:
   487                           	opt stack 0
   488  000080                     handle_start@data_read:
   489                           	opt stack 0
   490  000080                     check_msg@qptr:
   491                           	opt stack 0
   492  000080                     start_i2c_slave_reply@msg:
   493                           	opt stack 0
   494  000080                     i2memcpy@d1:
   495                           	opt stack 0
   496  000080                     i2___awmod@dividend:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x0
   500  000080                     	ds	2
   501  000082                     ??_check_msg:
   502  000082                     ?_in_low_int:
   503                           	opt stack 0
   504  000082                     start_i2c_slave_reply@length:
   505                           	opt stack 0
   506  000082                     i2memcpy@s1:
   507                           	opt stack 0
   508  000082                     i2___awmod@divisor:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x2
   512  000082                     	ds	2
   513  000084                     i2___awmod@counter:
   514                           	opt stack 0
   515  000084                     i2memcpy@n:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x4
   519  000084                     	ds	1
   520  000085                     i2___awmod@sign:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x5
   524  000085                     	ds	1
   525  000086                     i2memcpy@d:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x6
   529  000086                     	ds	2
   530  000088                     i2memcpy@s:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x8
   534  000088                     	ds	2
   535  00008A                     i2send_msg@qptr:
   536                           	opt stack 0
   537  00008A                     i2recv_msg@qptr:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0xA
   541  00008A                     	ds	2
   542  00008C                     i2send_msg@length:
   543                           	opt stack 0
   544  00008C                     i2recv_msg@maxlength:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0xC
   548  00008C                     	ds	1
   549  00008D                     i2send_msg@msgtype:
   550                           	opt stack 0
   551  00008D                     i2recv_msg@msgtype:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0xD
   555  00008D                     	ds	1
   556  00008E                     i2send_msg@data:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0xE
   560  00008E                     	ds	1
   561  00008F                     i2recv_msg@data:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0xF
   565  00008F                     	ds	1
   566  000090                     ??i2_send_msg:
   567                           
   568                           ; 0 bytes @ 0x10
   569  000090                     	ds	1
   570  000091                     ??i2_recv_msg:
   571  000091                     i2send_msg@tlength:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x11
   575  000091                     	ds	2
   576  000093                     i2send_msg@slot:
   577                           	opt stack 0
   578  000093                     i2recv_msg@slot:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x13
   582  000093                     	ds	1
   583  000094                     i2send_msg@qmsg:
   584                           	opt stack 0
   585  000094                     i2recv_msg@tlength:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x14
   589  000094                     	ds	2
   590  000096                     ToMainHigh_sendmsg@msgtype:
   591                           	opt stack 0
   592  000096                     i2recv_msg@qmsg:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x16
   596  000096                     	ds	1
   597  000097                     ToMainHigh_sendmsg@data:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x17
   601  000097                     	ds	1
   602  000098                     FromMainHigh_recvmsg@msgtype:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x18
   606  000098                     	ds	1
   607  000099                     ToMainHigh_sendmsg@length:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x19
   611  000099                     	ds	1
   612  00009A                     FromMainHigh_recvmsg@data:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x1A
   616  00009A                     	ds	2
   617  00009C                     FromMainHigh_recvmsg@maxlength:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x1C
   621  00009C                     	ds	1
   622  00009D                     ??_i2c_int_handler:
   623                           
   624                           ; 0 bytes @ 0x1D
   625  00009D                     	ds	1
   626  00009E                     i2c_int_handler@length:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x1E
   630  00009E                     	ds	1
   631  00009F                     i2c_int_handler@error_buf:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x1F
   635  00009F                     	ds	3
   636  0000A2                     i2c_int_handler@data_written:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x22
   640  0000A2                     	ds	1
   641  0000A3                     i2c_int_handler@overrun_error:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x23
   645  0000A3                     	ds	1
   646  0000A4                     i2c_int_handler@need_data:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x24
   650  0000A4                     	ds	1
   651  0000A5                     i2c_int_handler@i2c_data:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x25
   655  0000A5                     	ds	1
   656  0000A6                     i2c_int_handler@msg_to_send:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x26
   660  0000A6                     	ds	1
   661  0000A7                     i2c_int_handler@msg_type:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x27
   665  0000A7                     	ds	1
   666  0000A8                     i2c_int_handler@msg_ready:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x28
   670  0000A8                     	ds	1
   671  0000A9                     i2c_int_handler@data_read:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x29
   675  0000A9                     	ds	1
   676  0000AA                     ??_InterruptHandlerHigh:
   677                           
   678                           ; 0 bytes @ 0x2A
   679  0000AA                     	ds	14
   680  0000B8                     ?___awmod:
   681                           	opt stack 0
   682  0000B8                     ?___lwmod:
   683                           	opt stack 0
   684  0000B8                     i2c_configure_slave@addr:
   685                           	opt stack 0
   686  0000B8                     init_queue@qptr:
   687                           	opt stack 0
   688  0000B8                     init_i2c@ic:
   689                           	opt stack 0
   690  0000B8                     timer0_lthread@tptr:
   691                           	opt stack 0
   692  0000B8                     init_timer1_lthread@tptr:
   693                           	opt stack 0
   694  0000B8                     ___awmod@dividend:
   695                           	opt stack 0
   696  0000B8                     ___lwmod@dividend:
   697                           	opt stack 0
   698  0000B8                     memcpy@d1:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x38
   702  0000B8                     	ds	2
   703  0000BA                     init_queue@i:
   704                           	opt stack 0
   705  0000BA                     timer0_lthread@msgtype:
   706                           	opt stack 0
   707  0000BA                     ___awmod@divisor:
   708                           	opt stack 0
   709  0000BA                     ___lwmod@divisor:
   710                           	opt stack 0
   711  0000BA                     memcpy@s1:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x3A
   715  0000BA                     	ds	1
   716  0000BB                     
   717                           ; 0 bytes @ 0x3B
   718  0000BB                     	ds	1
   719  0000BC                     ___awmod@counter:
   720                           	opt stack 0
   721  0000BC                     ___lwmod@counter:
   722                           	opt stack 0
   723  0000BC                     timer0_lthread@length:
   724                           	opt stack 0
   725  0000BC                     memcpy@n:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x3C
   729  0000BC                     	ds	1
   730  0000BD                     ___awmod@sign:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x3D
   734  0000BD                     	ds	1
   735  0000BE                     timer0_lthread@msgbuffer:
   736                           	opt stack 0
   737  0000BE                     memcpy@d:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x3E
   741  0000BE                     	ds	2
   742  0000C0                     timer0_lthread@msgval:
   743                           	opt stack 0
   744  0000C0                     memcpy@s:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x40
   748  0000C0                     	ds	2
   749  0000C2                     ??_send_msg:
   750  0000C2                     ??_recv_msg:
   751                           
   752                           ; 0 bytes @ 0x42
   753  0000C2                     	ds	1
   754  0000C3                     FromMainLow_sendmsg@length:
   755                           	opt stack 0
   756  0000C3                     FromMainHigh_sendmsg@length:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x43
   760  0000C3                     	ds	1
   761  0000C4                     ToMainLow_recvmsg@maxlength:
   762                           	opt stack 0
   763  0000C4                     ToMainHigh_recvmsg@maxlength:
   764                           	opt stack 0
   765  0000C4                     send_uart_message@message_q_code:
   766                           	opt stack 0
   767  0000C4                     timer1_lthread@retval:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x44
   771  0000C4                     	ds	1
   772  0000C5                     tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           
   779                           ; 0 bytes @ 0x45
   780                           
   781                           	psect	cstackCOMRAM
   782  000001                     __pcstackCOMRAM:
   783                           	opt stack 0
   784  000001                     ?i1___awmod:
   785                           	opt stack 0
   786  000001                     i1memcpy@d1:
   787                           	opt stack 0
   788  000001                     i1___awmod@dividend:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x0
   792  000001                     	ds	2
   793  000003                     i1memcpy@s1:
   794                           	opt stack 0
   795  000003                     i1___awmod@divisor:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x2
   799  000003                     	ds	2
   800  000005                     i1___awmod@counter:
   801                           	opt stack 0
   802  000005                     i1memcpy@n:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x4
   806  000005                     	ds	1
   807  000006                     i1___awmod@sign:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x5
   811  000006                     	ds	1
   812  000007                     i1memcpy@d:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x6
   816  000007                     	ds	2
   817  000009                     i1memcpy@s:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x8
   821  000009                     	ds	2
   822  00000B                     i1send_msg@qptr:
   823                           	opt stack 0
   824  00000B                     i1recv_msg@qptr:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0xA
   828  00000B                     	ds	2
   829  00000D                     i1send_msg@length:
   830                           	opt stack 0
   831  00000D                     i1recv_msg@maxlength:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0xC
   835  00000D                     	ds	1
   836  00000E                     i1send_msg@msgtype:
   837                           	opt stack 0
   838  00000E                     i1recv_msg@msgtype:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0xD
   842  00000E                     	ds	1
   843  00000F                     i1send_msg@data:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0xE
   847  00000F                     	ds	1
   848  000010                     i1recv_msg@data:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0xF
   852  000010                     	ds	1
   853  000011                     ??i1_send_msg:
   854                           
   855                           ; 0 bytes @ 0x10
   856  000011                     	ds	1
   857  000012                     ??i1_recv_msg:
   858  000012                     i1send_msg@tlength:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x11
   862  000012                     	ds	2
   863  000014                     i1send_msg@slot:
   864                           	opt stack 0
   865  000014                     i1recv_msg@slot:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x13
   869  000014                     	ds	1
   870  000015                     i1send_msg@qmsg:
   871                           	opt stack 0
   872  000015                     i1recv_msg@tlength:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x14
   876  000015                     	ds	2
   877  000017                     ToMainLow_sendmsg@msgtype:
   878                           	opt stack 0
   879  000017                     i1recv_msg@qmsg:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x16
   883  000017                     	ds	1
   884  000018                     ToMainLow_sendmsg@data:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x17
   888  000018                     	ds	1
   889  000019                     FromMainLow_recvmsg@msgtype:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x18
   893  000019                     	ds	1
   894  00001A                     ToMainLow_sendmsg@length:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0x19
   898  00001A                     	ds	1
   899  00001B                     ??_uart_receive_interrupt_handler:
   900  00001B                     FromMainLow_recvmsg@data:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x1A
   904  00001B                     	ds	2
   905  00001D                     FromMainLow_recvmsg@maxlength:
   906                           	opt stack 0
   907  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   908                           	opt stack 0
   909                           
   910                           ; 14 bytes @ 0x1C
   911  00001D                     	ds	1
   912  00001E                     uart_transmit_interrupt_handler@data:
   913                           	opt stack 0
   914                           
   915                           ; 4 bytes @ 0x1D
   916  00001E                     	ds	4
   917  000022                     uart_transmit_interrupt_handler@msgtype:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x21
   921  000022                     	ds	1
   922  000023                     uart_transmit_interrupt_handler@message_status:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x22
   926  000023                     	ds	8
   927  00002B                     uart_receive_interrupt_handler@status:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x2A
   931  00002B                     	ds	1
   932  00002C                     uart_receive_interrupt_handler@status_2104:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x2B
   936  00002C                     	ds	1
   937  00002D                     uart_receive_interrupt_handler@bad_counter_id:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x2C
   941  00002D                     	ds	2
   942  00002F                     uart_receive_interrupt_handler@checksum:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x2E
   946  00002F                     	ds	1
   947  000030                     uart_receive_interrupt_handler@bad_start_id:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x2F
   951  000030                     	ds	1
   952  000031                     uart_receive_interrupt_handler@bad_end_id:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x30
   956  000031                     	ds	1
   957  000032                     uart_receive_interrupt_handler@bad_checksum_id:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0x31
   961  000032                     	ds	1
   962  000033                     uart_receive_interrupt_handler@message_count:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x32
   966  000033                     	ds	1
   967  000034                     uart_receive_interrupt_handler@msg_id:
   968                           	opt stack 0
   969                           
   970                           ; 1 bytes @ 0x33
   971  000034                     	ds	1
   972  000035                     uart_receive_interrupt_handler@i:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x34
   976  000035                     	ds	2
   977  000037                     ??_InterruptHandlerLow:
   978                           
   979                           ; 0 bytes @ 0x36
   980  000037                     	ds	17
   981  000048                     InterruptHandlerLow@sendy_stuff:
   982                           	opt stack 0
   983                           
   984                           ; 14 bytes @ 0x47
   985  000048                     	ds	14
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           postinc0	equ	0xFEE
   991                           wreg	equ	0xFE8
   992                           
   993 ;;
   994 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   995 ;;
   996 ;; *************** function _main *****************
   997 ;; Defined at:
   998 ;;		line 189 in file "../src/main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  ic             38   64[BANK1 ] struct __i2c_comm
  1003 ;;  msgbuffer      15   36[BANK1 ] unsigned char [15]
  1004 ;;  motor_data     14   22[BANK1 ] unsigned char [14]
  1005 ;;  t1thread_dat    6   55[BANK1 ] struct __timer1_thread_s
  1006 ;;  t0thread_dat    2   53[BANK1 ] struct __timer0_thread_s
  1007 ;;  uthread_data    2    0        struct __uart_thread_str
  1008 ;;  i               1   63[BANK1 ] unsigned char 
  1009 ;;  msgtype         1   62[BANK1 ] unsigned char 
  1010 ;;  length          1   61[BANK1 ] char 
  1011 ;;  need_sensor_    1   52[BANK1 ] unsigned char 
  1012 ;;  last_reg_rec    1   51[BANK1 ] unsigned char 
  1013 ;;  c               1    0        unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;		None               void
  1016 ;; Registers used:
  1017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1023 ;;      Params:         0       0       0       0       0
  1024 ;;      Locals:         0       0      80       0       0
  1025 ;;      Temps:          0       0       0       0       0
  1026 ;;      Totals:         0       0      80       0       0
  1027 ;;Total ram usage:       80 bytes
  1028 ;; Hardware stack levels required when called:   15
  1029 ;; This function calls:
  1030 ;;		_FromMainHigh_sendmsg
  1031 ;;		_ToMainHigh_recvmsg
  1032 ;;		_ToMainLow_recvmsg
  1033 ;;		_blip
  1034 ;;		_blip1
  1035 ;;		_blip2
  1036 ;;		_blip3
  1037 ;;		_debug_configure
  1038 ;;		_enable_interrupts
  1039 ;;		_i2c_configure_slave
  1040 ;;		_i_like_to_moveit_moveit
  1041 ;;		_init_i2c
  1042 ;;		_init_queues
  1043 ;;		_init_timer1_lthread
  1044 ;;		_timer0_lthread
  1045 ;;		_timer1_lthread
  1046 ;;		_uart_configure
  1047 ;; This function is called by:
  1048 ;;		Startup code after reset
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text0
  1053  000784                     __ptext0:
  1054                           	opt stack 0
  1055  000784                     _main:
  1056                           	opt stack 16
  1057                           
  1058                           ;main.c: 190: char c;
  1059                           ;main.c: 191: signed char length;
  1060                           ;main.c: 192: unsigned char msgtype;
  1061                           ;main.c: 193: unsigned char last_reg_recvd;
  1062                           ;main.c: 194: i2c_comm ic;
  1063                           ;main.c: 195: unsigned char msgbuffer[14 + 1];
  1064                           ;main.c: 196: unsigned char i;
  1065                           ;main.c: 197: uart_thread_struct uthread_data;
  1066                           ;main.c: 198: timer1_thread_struct t1thread_data;
  1067                           ;main.c: 199: timer0_thread_struct t0thread_data;
  1068                           ;main.c: 200: unsigned char need_sensor_data = 1;
  1069                           
  1070                           ;incstack = 0
  1071  000784  0E01               	movlw	1
  1072  000786  0101               	movlb	1	; () banked
  1073  000788  6F34               	movwf	main@need_sensor_data& (0+255),b
  1074                           
  1075                           ;main.c: 208: OSCCON = 0x82;
  1076  00078A  0E82               	movlw	130
  1077  00078C  6ED3               	movwf	4051,c	;volatile
  1078                           
  1079                           ; BSR set to: 1
  1080                           ;main.c: 209: OSCTUNEbits.PLLEN = 1;
  1081  00078E  8C9B               	bsf	3995,6,c	;volatile
  1082                           
  1083                           ; BSR set to: 1
  1084                           ;main.c: 239: init_i2c(&ic);
  1085  000790  0101               	movlb	1	; () banked
  1086  000792  0E01               	movlw	high main@ic
  1087  000794  0100               	movlb	0	; () banked
  1088  000796  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
  1089  000798  0101               	movlb	1	; () banked
  1090  00079A  0E40               	movlw	low main@ic
  1091  00079C  0100               	movlb	0	; () banked
  1092  00079E  6FB8               	movwf	init_i2c@ic& (0+255),b
  1093  0007A0  EC49  F00B         	call	_init_i2c	;wreg free
  1094                           
  1095                           ;main.c: 242: init_timer1_lthread(&t1thread_data);
  1096  0007A4  0101               	movlb	1	; () banked
  1097  0007A6  0E01               	movlw	high main@t1thread_data
  1098  0007A8  0100               	movlb	0	; () banked
  1099  0007AA  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1100  0007AC  0101               	movlb	1	; () banked
  1101  0007AE  0E37               	movlw	low main@t1thread_data
  1102  0007B0  0100               	movlb	0	; () banked
  1103  0007B2  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1104  0007B4  EC51  F00E         	call	_init_timer1_lthread	;wreg free
  1105                           
  1106                           ;main.c: 245: init_queues();
  1107  0007B8  EC3F  F00C         	call	_init_queues	;wreg free
  1108                           
  1109                           ;main.c: 249: TRISB = 0x0;
  1110  0007BC  0E00               	movlw	0
  1111  0007BE  6E93               	movwf	3987,c	;volatile
  1112                           
  1113                           ;main.c: 250: LATB = 0x0;
  1114  0007C0  0E00               	movlw	0
  1115  0007C2  6E8A               	movwf	3978,c	;volatile
  1116                           
  1117                           ;main.c: 267: INTCONbits.TMR0IE = 1;
  1118  0007C4  8AF2               	bsf	intcon,5,c	;volatile
  1119                           
  1120                           ;main.c: 268: TRISBbits.TRISB5 = 1;
  1121  0007C6  8A93               	bsf	3987,5,c	;volatile
  1122                           
  1123                           ;main.c: 269: T0CONbits.T08BIT = 1;
  1124  0007C8  8CD5               	bsf	4053,6,c	;volatile
  1125                           
  1126                           ;main.c: 270: T0CONbits.T0CS = 1;
  1127  0007CA  8AD5               	bsf	4053,5,c	;volatile
  1128                           
  1129                           ;main.c: 271: T0CONbits.T0SE = 1;
  1130  0007CC  88D5               	bsf	4053,4,c	;volatile
  1131                           
  1132                           ;main.c: 272: T0CONbits.PSA = 1;
  1133  0007CE  86D5               	bsf	4053,3,c	;volatile
  1134                           
  1135                           ;main.c: 273: T0CONbits.T0PS = 0x1;
  1136  0007D0  50D5               	movf	4053,w,c	;volatile
  1137  0007D2  0BF8               	andlw	-8
  1138  0007D4  0901               	iorlw	1
  1139  0007D6  6ED5               	movwf	4053,c	;volatile
  1140                           
  1141                           ;main.c: 274: T0CONbits.TMR0ON = 1;
  1142  0007D8  8ED5               	bsf	4053,7,c	;volatile
  1143                           
  1144                           ;main.c: 275: TMR0L = 0x35;
  1145  0007DA  0E35               	movlw	53
  1146  0007DC  6ED6               	movwf	4054,c	;volatile
  1147                           
  1148                           ;main.c: 280: PIE1bits.TMR1IE = 1;
  1149  0007DE  809D               	bsf	3997,0,c	;volatile
  1150                           
  1151                           ;main.c: 281: TRISCbits.TRISC0 = 1;
  1152  0007E0  8094               	bsf	3988,0,c	;volatile
  1153                           
  1154                           ;main.c: 282: T1CONbits.RD16 = 0;
  1155  0007E2  9ECD               	bcf	4045,7,c	;volatile
  1156                           
  1157                           ;main.c: 283: T1CONbits.T1RUN = 0;
  1158  0007E4  9CCD               	bcf	4045,6,c	;volatile
  1159                           
  1160                           ;main.c: 284: T1CONbits.TMR1CS = 1;
  1161  0007E6  82CD               	bsf	4045,1,c	;volatile
  1162                           
  1163                           ;main.c: 285: T1CONbits.T1SYNC = 0;
  1164  0007E8  94CD               	bcf	4045,2,c	;volatile
  1165                           
  1166                           ;main.c: 286: T1CONbits.T1CKPS = 0x0;
  1167  0007EA  0ECF               	movlw	-49
  1168  0007EC  16CD               	andwf	4045,f,c	;volatile
  1169                           
  1170                           ;main.c: 287: T1CONbits.TMR1ON = 1;
  1171  0007EE  80CD               	bsf	4045,0,c	;volatile
  1172                           
  1173                           ;main.c: 288: TMR1H = 0xff;
  1174  0007F0  68CF               	setf	4047,c	;volatile
  1175                           
  1176                           ;main.c: 289: TMR1L = 0x35;
  1177  0007F2  0E35               	movlw	53
  1178  0007F4  6ECE               	movwf	4046,c	;volatile
  1179                           
  1180                           ;main.c: 315: IPR1bits.TMR1IP = 0;
  1181  0007F6  909F               	bcf	3999,0,c	;volatile
  1182                           
  1183                           ;main.c: 317: IPR1bits.RCIP = 0;
  1184  0007F8  9A9F               	bcf	3999,5,c	;volatile
  1185                           
  1186                           ;main.c: 320: IPR1bits.SSPIP = 1;
  1187  0007FA  869F               	bsf	3999,3,c	;volatile
  1188                           
  1189                           ;main.c: 323: INTCON2bits.TMR0IP = 0;
  1190  0007FC  94F1               	bcf	intcon2,2,c	;volatile
  1191                           
  1192                           ;main.c: 326: IPR1bits.ADIP = 0;
  1193  0007FE  9C9F               	bcf	3999,6,c	;volatile
  1194                           
  1195                           ;main.c: 335: i2c_configure_slave(0x9C);
  1196  000800  0E9C               	movlw	156
  1197  000802  ECF7  F00D         	call	_i2c_configure_slave
  1198                           
  1199                           ;main.c: 350: PIE1bits.SSPIE = 1;
  1200  000806  869D               	bsf	3997,3,c	;volatile
  1201                           
  1202                           ;main.c: 354: IPR1bits.ADIP = 0;
  1203  000808  9C9F               	bcf	3999,6,c	;volatile
  1204                           
  1205                           ;main.c: 355: PIE1bits.ADIE = 1;
  1206  00080A  8C9D               	bsf	3997,6,c	;volatile
  1207                           
  1208                           ;main.c: 379: debug_configure();
  1209  00080C  EC69  F00E         	call	_debug_configure	;wreg free
  1210                           
  1211                           ;main.c: 380: blip();
  1212  000810  EC7E  F00E         	call	_blip	;wreg free
  1213                           
  1214                           ;main.c: 381: blip1();
  1215  000814  EC7A  F00E         	call	_blip1	;wreg free
  1216                           
  1217                           ;main.c: 382: blip2();
  1218  000818  EC76  F00E         	call	_blip2	;wreg free
  1219                           
  1220                           ;main.c: 383: blip3();
  1221  00081C  EC72  F00E         	call	_blip3	;wreg free
  1222                           
  1223                           ;main.c: 392: enable_interrupts();
  1224  000820  EC6E  F00E         	call	_enable_interrupts	;wreg free
  1225                           
  1226                           ;main.c: 405: uart_configure();
  1227  000824  EC31  F00E         	call	_uart_configure	;wreg free
  1228                           
  1229                           ;main.c: 423: unsigned char motor_data[14];
  1230                           ;main.c: 424: motor_data[0] = 0x07;
  1231  000828  0E07               	movlw	7
  1232  00082A  0101               	movlb	1	; () banked
  1233  00082C  6F16               	movwf	main@motor_data& (0+255),b
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 426: for(i=1;i<14;i++)
  1237  00082E  0E01               	movlw	1
  1238  000830  0101               	movlb	1	; () banked
  1239  000832  6F3F               	movwf	main@i& (0+255),b
  1240  000834  D00F               	goto	L2
  1241  000836                     l4242:
  1242                           
  1243                           ; BSR set to: 1
  1244                           ;main.c: 427: {
  1245                           ;main.c: 428: motor_data[i]=0x44;
  1246  000836  0101               	movlb	1	; () banked
  1247  000838  513F               	movf	main@i& (0+255),w,b
  1248  00083A  0D01               	mullw	1
  1249  00083C  0101               	movlb	1	; () banked
  1250  00083E  0E16               	movlw	low main@motor_data
  1251  000840  24F3               	addwf	prodl,w,c
  1252  000842  6ED9               	movwf	fsr2l,c
  1253  000844  0101               	movlb	1	; () banked
  1254  000846  0E01               	movlw	high main@motor_data
  1255  000848  20F4               	addwfc	prodh,w,c
  1256  00084A  6EDA               	movwf	fsr2h,c
  1257  00084C  0E44               	movlw	68
  1258  00084E  6EDF               	movwf	indf2,c
  1259                           
  1260                           ; BSR set to: 1
  1261  000850  0101               	movlb	1	; () banked
  1262  000852  2B3F               	incf	main@i& (0+255),f,b
  1263  000854                     L2:
  1264                           
  1265                           ; BSR set to: 1
  1266  000854  0E0D               	movlw	13
  1267  000856  0101               	movlb	1	; () banked
  1268  000858  653F               	cpfsgt	main@i& (0+255),b
  1269  00085A  D7ED               	goto	l4242
  1270  00085C                     l4248:
  1271                           
  1272                           ;main.c: 454: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1273  00085C  0101               	movlb	1	; () banked
  1274  00085E  0E01               	movlw	high main@msgtype
  1275  000860  0101               	movlb	1	; () banked
  1276  000862  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1277  000864  0101               	movlb	1	; () banked
  1278  000866  0E3E               	movlw	low main@msgtype
  1279  000868  0101               	movlb	1	; () banked
  1280  00086A  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1281  00086C  0101               	movlb	1	; () banked
  1282  00086E  0E01               	movlw	high main@msgbuffer
  1283  000870  0101               	movlb	1	; () banked
  1284  000872  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1285  000874  0101               	movlb	1	; () banked
  1286  000876  0E24               	movlw	low main@msgbuffer
  1287  000878  0101               	movlb	1	; () banked
  1288  00087A  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1289  00087C  0E0E               	movlw	14
  1290  00087E  EC63  F00D         	call	_ToMainHigh_recvmsg
  1291  000882  0101               	movlb	1	; () banked
  1292  000884  6F3D               	movwf	main@length& (0+255),b
  1293                           
  1294                           ; BSR set to: 1
  1295                           ;main.c: 455: if (length < 0) {
  1296  000886  0101               	movlb	1	; () banked
  1297  000888  BF3D               	btfsc	main@length& (0+255),7,b
  1298  00088A  D053               	goto	l4270
  1299  00088C  D044               	goto	l4268
  1300  00088E                     l4254:
  1301                           
  1302                           ; BSR set to: 1
  1303                           ;main.c: 465: {
  1304                           ;main.c: 466: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1305  00088E  0101               	movlb	1	; () banked
  1306  000890  0E01               	movlw	high main@t0thread_data
  1307  000892  0100               	movlb	0	; () banked
  1308  000894  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1309  000896  0101               	movlb	1	; () banked
  1310  000898  0E35               	movlw	low main@t0thread_data
  1311  00089A  0100               	movlb	0	; () banked
  1312  00089C  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1313  00089E  0101               	movlb	1	; () banked
  1314  0008A0  0100               	movlb	0	; () banked
  1315  0008A2  C13E  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1316  0008A6  0100               	movlb	0	; () banked
  1317  0008A8  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1318  0008AA  0101               	movlb	1	; () banked
  1319  0008AC  513D               	movf	main@length& (0+255),w,b
  1320  0008AE  0100               	movlb	0	; () banked
  1321  0008B0  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1322  0008B2  0100               	movlb	0	; () banked
  1323  0008B4  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1324  0008B6  0100               	movlb	0	; () banked
  1325  0008B8  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1326  0008BA  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1327  0008BC  0101               	movlb	1	; () banked
  1328  0008BE  0E01               	movlw	high main@msgbuffer
  1329  0008C0  0100               	movlb	0	; () banked
  1330  0008C2  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1331  0008C4  0101               	movlb	1	; () banked
  1332  0008C6  0E24               	movlw	low main@msgbuffer
  1333  0008C8  0100               	movlb	0	; () banked
  1334  0008CA  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1335  0008CC  EC62  F00E         	call	_timer0_lthread	;wreg free
  1336                           
  1337                           ;main.c: 467: break;
  1338  0008D0  D030               	goto	l4270
  1339  0008D2                     l4256:
  1340                           
  1341                           ;main.c: 474: {
  1342                           ;main.c: 475: i_like_to_moveit_moveit( (signed char)msgbuffer[1] , (signed char)msgbuffe
      +                          r[2] );
  1343  0008D2  C126  F110         	movff	main@msgbuffer+2,i_like_to_moveit_moveit@right_side_speed
  1344  0008D6  0101               	movlb	1	; () banked
  1345  0008D8  5125               	movf	(main@msgbuffer+1)& (0+255),w,b
  1346  0008DA  EC27  F00A         	call	_i_like_to_moveit_moveit
  1347                           
  1348                           ;main.c: 477: break;
  1349  0008DE  D005               	goto	l152
  1350  0008E0                     l4260:
  1351  0008E0  0101               	movlb	1	; () banked
  1352  0008E2  5124               	movf	main@msgbuffer& (0+255),w,b
  1353                           
  1354                           ; Switch size 1, requested type "space"
  1355                           ; Number of cases is 1, Range of values is 1 to 1
  1356                           ; switch strategies available:
  1357                           ; Name         Instructions Cycles
  1358                           ; simple_byte            4     3 (average)
  1359                           ;	Chosen strategy is simple_byte
  1360  0008E4  0A01               	xorlw	1	; case 1
  1361  0008E6  B4D8               	btfsc	status,2,c
  1362  0008E8  D7F4               	goto	l4256
  1363  0008EA                     l152:
  1364                           
  1365                           ;main.c: 487: {
  1366                           ;main.c: 490: last_reg_recvd = msgbuffer[0];
  1367  0008EA  C124  F133         	movff	main@msgbuffer,main@last_reg_recvd
  1368                           
  1369                           ;main.c: 491: break;
  1370  0008EE  D021               	goto	l4270
  1371  0008F0                     l153:
  1372                           
  1373                           ; BSR set to: 1
  1374                           ;main.c: 494: {
  1375                           ;main.c: 496: PIR1bits.ADIF = 1;
  1376  0008F0  8C9E               	bsf	3998,6,c	;volatile
  1377                           
  1378                           ; BSR set to: 1
  1379                           ;main.c: 498: FromMainHigh_sendmsg(14,40,(void *) motor_data );
  1380  0008F2  0E28               	movlw	40
  1381  0008F4  0101               	movlb	1	; () banked
  1382  0008F6  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1383  0008F8  0101               	movlb	1	; () banked
  1384  0008FA  0E01               	movlw	high main@motor_data
  1385  0008FC  0101               	movlb	1	; () banked
  1386  0008FE  6F0D               	movwf	(FromMainHigh_sendmsg@data+1)& (0+255),b
  1387  000900  0101               	movlb	1	; () banked
  1388  000902  0E16               	movlw	low main@motor_data
  1389  000904  0101               	movlb	1	; () banked
  1390  000906  6F0C               	movwf	FromMainHigh_sendmsg@data& (0+255),b
  1391  000908  0E0E               	movlw	14
  1392  00090A  ECB2  F00D         	call	_FromMainHigh_sendmsg
  1393                           
  1394                           ;main.c: 500: motor_data[1] = 0;
  1395  00090E  0E00               	movlw	0
  1396  000910  0101               	movlb	1	; () banked
  1397  000912  6F17               	movwf	(main@motor_data+1)& (0+255),b
  1398                           
  1399                           ;main.c: 502: break;
  1400  000914  D00E               	goto	l4270
  1401  000916                     l4268:
  1402                           
  1403                           ; BSR set to: 1
  1404  000916  0101               	movlb	1	; () banked
  1405  000918  513E               	movf	main@msgtype& (0+255),w,b
  1406                           
  1407                           ; Switch size 1, requested type "space"
  1408                           ; Number of cases is 4, Range of values is 10 to 42
  1409                           ; switch strategies available:
  1410                           ; Name         Instructions Cycles
  1411                           ; simple_byte           13     7 (average)
  1412                           ;	Chosen strategy is simple_byte
  1413  00091A  0A0A               	xorlw	10	; case 10
  1414  00091C  B4D8               	btfsc	status,2,c
  1415  00091E  D7B7               	goto	l4254
  1416  000920  0A22               	xorlw	34	; case 40
  1417  000922  B4D8               	btfsc	status,2,c
  1418  000924  D7DD               	goto	l4260
  1419  000926  0A01               	xorlw	1	; case 41
  1420  000928  B4D8               	btfsc	status,2,c
  1421  00092A  D7DF               	goto	l152
  1422  00092C  0A03               	xorlw	3	; case 42
  1423  00092E  B4D8               	btfsc	status,2,c
  1424  000930  D7DF               	goto	l153
  1425  000932                     l4270:
  1426                           
  1427                           ;main.c: 510: }
  1428                           ;main.c: 513: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1429  000932  0101               	movlb	1	; () banked
  1430  000934  0E01               	movlw	high main@msgtype
  1431  000936  0101               	movlb	1	; () banked
  1432  000938  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1433  00093A  0101               	movlb	1	; () banked
  1434  00093C  0E3E               	movlw	low main@msgtype
  1435  00093E  0101               	movlb	1	; () banked
  1436  000940  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1437  000942  0101               	movlb	1	; () banked
  1438  000944  0E01               	movlw	high main@msgbuffer
  1439  000946  0101               	movlb	1	; () banked
  1440  000948  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1441  00094A  0101               	movlb	1	; () banked
  1442  00094C  0E24               	movlw	low main@msgbuffer
  1443  00094E  0101               	movlb	1	; () banked
  1444  000950  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1445  000952  0E0E               	movlw	14
  1446  000954  EC48  F00D         	call	_ToMainLow_recvmsg
  1447  000958  0101               	movlb	1	; () banked
  1448  00095A  6F3D               	movwf	main@length& (0+255),b
  1449                           
  1450                           ; BSR set to: 1
  1451                           ;main.c: 514: if (length < 0) {
  1452  00095C  0101               	movlb	1	; () banked
  1453  00095E  BF3D               	btfsc	main@length& (0+255),7,b
  1454  000960  D77D               	goto	l4248
  1455  000962  D047               	goto	l4296
  1456  000964                     l4276:
  1457                           
  1458                           ; BSR set to: 1
  1459                           ;main.c: 533: {
  1460                           ;main.c: 534: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1461  000964  0101               	movlb	1	; () banked
  1462  000966  0E01               	movlw	high main@t1thread_data
  1463  000968  0101               	movlb	1	; () banked
  1464  00096A  6F0F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1465  00096C  0101               	movlb	1	; () banked
  1466  00096E  0E37               	movlw	low main@t1thread_data
  1467  000970  0101               	movlb	1	; () banked
  1468  000972  6F0E               	movwf	timer1_lthread@tptr& (0+255),b
  1469  000974  0101               	movlb	1	; () banked
  1470  000976  C13E  F110         	movff	main@msgtype,timer1_lthread@msgtype
  1471  00097A  0101               	movlb	1	; () banked
  1472  00097C  6B11               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1473  00097E  0101               	movlb	1	; () banked
  1474  000980  513D               	movf	main@length& (0+255),w,b
  1475  000982  0101               	movlb	1	; () banked
  1476  000984  6F12               	movwf	timer1_lthread@length& (0+255),b
  1477  000986  0101               	movlb	1	; () banked
  1478  000988  6B13               	clrf	(timer1_lthread@length+1)& (0+255),b
  1479  00098A  0101               	movlb	1	; () banked
  1480  00098C  BF12               	btfsc	timer1_lthread@length& (0+255),7,b
  1481  00098E  0713               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1482  000990  0101               	movlb	1	; () banked
  1483  000992  0E01               	movlw	high main@msgbuffer
  1484  000994  0101               	movlb	1	; () banked
  1485  000996  6F15               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1486  000998  0101               	movlb	1	; () banked
  1487  00099A  0E24               	movlw	low main@msgbuffer
  1488  00099C  0101               	movlb	1	; () banked
  1489  00099E  6F14               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1490  0009A0  ECAE  F00B         	call	_timer1_lthread	;wreg free
  1491                           
  1492                           ;main.c: 535: break;
  1493  0009A4  D75B               	goto	l4248
  1494  0009A6                     l4280:
  1495                           
  1496                           ;main.c: 605: {
  1497                           ;main.c: 606: for(i=2;i<14;i++)
  1498  0009A6  0E02               	movlw	2
  1499  0009A8  0101               	movlb	1	; () banked
  1500  0009AA  6F3F               	movwf	main@i& (0+255),b
  1501  0009AC  D01A               	goto	L3
  1502  0009AE                     l4286:
  1503                           
  1504                           ; BSR set to: 1
  1505                           ;main.c: 607: {
  1506                           ;main.c: 608: motor_data[i] = msgbuffer[i];
  1507  0009AE  0101               	movlb	1	; () banked
  1508  0009B0  513F               	movf	main@i& (0+255),w,b
  1509  0009B2  0D01               	mullw	1
  1510  0009B4  0101               	movlb	1	; () banked
  1511  0009B6  0E24               	movlw	low main@msgbuffer
  1512  0009B8  24F3               	addwf	prodl,w,c
  1513  0009BA  6ED9               	movwf	fsr2l,c
  1514  0009BC  0101               	movlb	1	; () banked
  1515  0009BE  0E01               	movlw	high main@msgbuffer
  1516  0009C0  20F4               	addwfc	prodh,w,c
  1517  0009C2  6EDA               	movwf	fsr2h,c
  1518  0009C4  0101               	movlb	1	; () banked
  1519  0009C6  513F               	movf	main@i& (0+255),w,b
  1520  0009C8  0D01               	mullw	1
  1521  0009CA  0101               	movlb	1	; () banked
  1522  0009CC  0E16               	movlw	low main@motor_data
  1523  0009CE  24F3               	addwf	prodl,w,c
  1524  0009D0  6EE1               	movwf	fsr1l,c
  1525  0009D2  0101               	movlb	1	; () banked
  1526  0009D4  0E01               	movlw	high main@motor_data
  1527  0009D6  20F4               	addwfc	prodh,w,c
  1528  0009D8  6EE2               	movwf	fsr1h,c
  1529  0009DA  CFDF FFE7          	movff	indf2,indf1
  1530                           
  1531                           ; BSR set to: 1
  1532  0009DE  0101               	movlb	1	; () banked
  1533  0009E0  2B3F               	incf	main@i& (0+255),f,b
  1534  0009E2                     L3:
  1535                           
  1536                           ; BSR set to: 1
  1537  0009E2  0E0D               	movlw	13
  1538  0009E4  0101               	movlb	1	; () banked
  1539  0009E6  653F               	cpfsgt	main@i& (0+255),b
  1540  0009E8  D7E2               	goto	l4286
  1541                           
  1542                           ; BSR set to: 1
  1543                           ;main.c: 609: }
  1544                           ;main.c: 610: motor_data[1] = 3;
  1545                           
  1546                           ; BSR set to: 1
  1547  0009EA  0E03               	movlw	3
  1548  0009EC  0101               	movlb	1	; () banked
  1549  0009EE  6F17               	movwf	(main@motor_data+1)& (0+255),b
  1550                           
  1551                           ;main.c: 611: break;
  1552  0009F0  D735               	goto	l4248
  1553  0009F2                     l4296:
  1554                           
  1555                           ; BSR set to: 1
  1556  0009F2  0101               	movlb	1	; () banked
  1557  0009F4  513E               	movf	main@msgtype& (0+255),w,b
  1558                           
  1559                           ; Switch size 1, requested type "space"
  1560                           ; Number of cases is 9, Range of values is 11 to 47
  1561                           ; switch strategies available:
  1562                           ; Name         Instructions Cycles
  1563                           ; simple_byte           28    15 (average)
  1564                           ;	Chosen strategy is simple_byte
  1565  0009F6  0A0B               	xorlw	11	; case 11
  1566  0009F8  B4D8               	btfsc	status,2,c
  1567  0009FA  D7B4               	goto	l4276
  1568  0009FC  0A15               	xorlw	21	; case 30
  1569  0009FE  B4D8               	btfsc	status,2,c
  1570  000A00  D72D               	goto	l4248
  1571  000A02  0A01               	xorlw	1	; case 31
  1572  000A04  B4D8               	btfsc	status,2,c
  1573  000A06  D72A               	goto	l4248
  1574  000A08  0A3F               	xorlw	63	; case 32
  1575  000A0A  B4D8               	btfsc	status,2,c
  1576  000A0C  D727               	goto	l4248
  1577  000A0E  0A01               	xorlw	1	; case 33
  1578  000A10  B4D8               	btfsc	status,2,c
  1579  000A12  D724               	goto	l4248
  1580  000A14  0A03               	xorlw	3	; case 34
  1581  000A16  B4D8               	btfsc	status,2,c
  1582  000A18  D721               	goto	l4248
  1583  000A1A  0A01               	xorlw	1	; case 35
  1584  000A1C  B4D8               	btfsc	status,2,c
  1585  000A1E  D71E               	goto	l4248
  1586  000A20  0A07               	xorlw	7	; case 36
  1587  000A22  B4D8               	btfsc	status,2,c
  1588  000A24  D71B               	goto	l4248
  1589  000A26  0A0B               	xorlw	11	; case 47
  1590  000A28  B4D8               	btfsc	status,2,c
  1591  000A2A  D7BD               	goto	l4280
  1592  000A2C  D717               	goto	l4248
  1593  000A2E                     __end_of_main:
  1594                           	opt stack 0
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           prodh	equ	0xFF4
  1600                           prodl	equ	0xFF3
  1601                           intcon	equ	0xFF2
  1602                           intcon2	equ	0xFF1
  1603                           postinc0	equ	0xFEE
  1604                           wreg	equ	0xFE8
  1605                           indf1	equ	0xFE7
  1606                           fsr1h	equ	0xFE2
  1607                           fsr1l	equ	0xFE1
  1608                           indf2	equ	0xFDF
  1609                           fsr2h	equ	0xFDA
  1610                           fsr2l	equ	0xFD9
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _uart_configure *****************
  1614 ;; Defined at:
  1615 ;;		line 22 in file "../src/my_uart.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg, status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:   10
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text1
  1644  001C62                     __ptext1:
  1645                           	opt stack 0
  1646  001C62                     _uart_configure:
  1647                           	opt stack 20
  1648                           
  1649                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1650                           
  1651                           ; BSR set to: 1
  1652                           ;incstack = 0
  1653  001C62  8E94               	bsf	3988,7,c	;volatile
  1654                           
  1655                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1656  001C64  9C94               	bcf	3988,6,c	;volatile
  1657                           
  1658                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1659  001C66  86B8               	bsf	4024,3,c	;volatile
  1660                           
  1661                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1662  001C68  84AC               	bsf	4012,2,c	;volatile
  1663                           
  1664                           ;my_uart.c: 36: SPBRGH = 0x04;
  1665  001C6A  0E04               	movlw	4
  1666  001C6C  6EB0               	movwf	4016,c	;volatile
  1667                           
  1668                           ;my_uart.c: 37: SPBRG = 0xe1;
  1669  001C6E  0EE1               	movlw	225
  1670  001C70  6EAF               	movwf	4015,c	;volatile
  1671                           
  1672                           ;my_uart.c: 41: TXSTA1bits.SYNC = 0;
  1673  001C72  98AC               	bcf	4012,4,c	;volatile
  1674                           
  1675                           ;my_uart.c: 42: RCSTA1bits.SPEN = 1;
  1676  001C74  8EAB               	bsf	4011,7,c	;volatile
  1677                           
  1678                           ;my_uart.c: 45: IPR1bits.TX1IP = 0;
  1679  001C76  989F               	bcf	3999,4,c	;volatile
  1680                           
  1681                           ;my_uart.c: 47: PIE1bits.TX1IE = 0;
  1682  001C78  989D               	bcf	3997,4,c	;volatile
  1683                           
  1684                           ;my_uart.c: 48: PIE1bits.RC1IE = 1;
  1685  001C7A  8A9D               	bsf	3997,5,c	;volatile
  1686                           
  1687                           ;my_uart.c: 50: TXSTA1bits.TXEN = 1;
  1688  001C7C  8AAC               	bsf	4012,5,c	;volatile
  1689                           
  1690                           ;my_uart.c: 51: RCSTA1bits.CREN = 1;
  1691  001C7E  88AB               	bsf	4011,4,c	;volatile
  1692  001C80  0012               	return	
  1693  001C82                     __end_of_uart_configure:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           tblptrh	equ	0xFF7
  1697                           tblptrl	equ	0xFF6
  1698                           tablat	equ	0xFF5
  1699                           prodh	equ	0xFF4
  1700                           prodl	equ	0xFF3
  1701                           intcon	equ	0xFF2
  1702                           intcon2	equ	0xFF1
  1703                           postinc0	equ	0xFEE
  1704                           wreg	equ	0xFE8
  1705                           indf1	equ	0xFE7
  1706                           fsr1h	equ	0xFE2
  1707                           fsr1l	equ	0xFE1
  1708                           indf2	equ	0xFDF
  1709                           fsr2h	equ	0xFDA
  1710                           fsr2l	equ	0xFD9
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _timer1_lthread *****************
  1714 ;; Defined at:
  1715 ;;		line 15 in file "../src/timer1_thread.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1718 ;;		 -> main@t1thread_data(6), 
  1719 ;;  msgtype         2   16[BANK1 ] int 
  1720 ;;  length          2   18[BANK1 ] int 
  1721 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1722 ;;		 -> main@msgbuffer(15), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  retval          1   68[BANK0 ] char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  2   14[BANK1 ] int 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1734 ;;      Params:         0       0       8       0       0
  1735 ;;      Locals:         0       1       0       0       0
  1736 ;;      Temps:          0       0       0       0       0
  1737 ;;      Totals:         0       1       8       0       0
  1738 ;;Total ram usage:        9 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:   13
  1741 ;; This function calls:
  1742 ;;		_FromMainHigh_sendmsg
  1743 ;;		___lwmod
  1744 ;;		_blink0
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text2
  1751  00175C                     __ptext2:
  1752                           	opt stack 0
  1753  00175C                     _timer1_lthread:
  1754                           	opt stack 17
  1755                           
  1756                           ;timer1_thread.c: 16: signed char retval;
  1757                           ;timer1_thread.c: 18: blink0();
  1758                           
  1759                           ;incstack = 0
  1760  00175C  EC91  F00E         	call	_blink0	;wreg free
  1761                           
  1762                           ;timer1_thread.c: 22: tptr->msgcount++;
  1763  001760  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1764  001764  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1765  001768  2ADE               	incf	postinc2,f,c
  1766  00176A  0E00               	movlw	0
  1767  00176C  22DD               	addwfc	postdec2,f,c
  1768                           
  1769                           ;timer1_thread.c: 25: if ((tptr->msgcount % 10) == 9) {
  1770  00176E  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1771  001772  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1772  001776  0100               	movlb	0	; () banked
  1773  001778  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1774  00177C  0100               	movlb	0	; () banked
  1775  00177E  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1776  001782  0E00               	movlw	0
  1777  001784  0100               	movlb	0	; () banked
  1778  001786  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1779  001788  0E0A               	movlw	10
  1780  00178A  0100               	movlb	0	; () banked
  1781  00178C  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1782  00178E  ECDF  F00B         	call	___lwmod	;wreg free
  1783  001792  0100               	movlb	0	; () banked
  1784  001794  51B8               	movf	?___lwmod& (0+255),w,b
  1785  001796  0A09               	xorlw	9
  1786  001798  0100               	movlb	0	; () banked
  1787  00179A  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1788  00179C  A4D8               	btfss	status,2,c
  1789  00179E  0012               	return	
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;timer1_thread.c: 26: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1793  0017A0  0E14               	movlw	20
  1794  0017A2  0101               	movlb	1	; () banked
  1795  0017A4  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1796  0017A6  0101               	movlb	1	; () banked
  1797  0017A8  C10F  F10D         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1798  0017AC  0101               	movlb	1	; () banked
  1799  0017AE  C10E  F10C         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1800  0017B2  0E02               	movlw	2
  1801  0017B4  ECB2  F00D         	call	_FromMainHigh_sendmsg
  1802  0017B8  0100               	movlb	0	; () banked
  1803  0017BA  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1804  0017BC  0012               	return	
  1805  0017BE                     __end_of_timer1_lthread:
  1806                           	opt stack 0
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           prodh	equ	0xFF4
  1812                           prodl	equ	0xFF3
  1813                           intcon	equ	0xFF2
  1814                           intcon2	equ	0xFF1
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           indf1	equ	0xFE7
  1818                           fsr1h	equ	0xFE2
  1819                           fsr1l	equ	0xFE1
  1820                           indf2	equ	0xFDF
  1821                           postinc2	equ	0xFDE
  1822                           postdec2	equ	0xFDD
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _blink0 *****************
  1828 ;; Defined at:
  1829 ;;		line 46 in file "../src/debug.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;		None               void
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1843 ;;      Params:         0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:   10
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_timer1_lthread
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text3
  1858  001D22                     __ptext3:
  1859                           	opt stack 0
  1860  001D22                     _blink0:
  1861                           	opt stack 19
  1862                           
  1863                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;incstack = 0
  1867  001D22  708A               	btg	3978,0,c	;volatile
  1868  001D24  0012               	return	
  1869  001D26                     __end_of_blink0:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           tblptrh	equ	0xFF7
  1873                           tblptrl	equ	0xFF6
  1874                           tablat	equ	0xFF5
  1875                           prodh	equ	0xFF4
  1876                           prodl	equ	0xFF3
  1877                           intcon	equ	0xFF2
  1878                           intcon2	equ	0xFF1
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           indf1	equ	0xFE7
  1882                           fsr1h	equ	0xFE2
  1883                           fsr1l	equ	0xFE1
  1884                           indf2	equ	0xFDF
  1885                           postinc2	equ	0xFDE
  1886                           postdec2	equ	0xFDD
  1887                           fsr2h	equ	0xFDA
  1888                           fsr2l	equ	0xFD9
  1889                           status	equ	0xFD8
  1890                           
  1891 ;; *************** function ___lwmod *****************
  1892 ;; Defined at:
  1893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  dividend        2   56[BANK0 ] unsigned int 
  1896 ;;  divisor         2   58[BANK0 ] unsigned int 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  counter         1   60[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2   56[BANK0 ] unsigned int 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1908 ;;      Params:         0       4       0       0       0
  1909 ;;      Locals:         0       1       0       0       0
  1910 ;;      Temps:          0       0       0       0       0
  1911 ;;      Totals:         0       5       0       0       0
  1912 ;;Total ram usage:        5 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:   10
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_timer1_lthread
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text4
  1923  0017BE                     __ptext4:
  1924                           	opt stack 0
  1925  0017BE                     ___lwmod:
  1926                           	opt stack 19
  1927                           
  1928                           ;incstack = 0
  1929  0017BE  0100               	movlb	0	; () banked
  1930  0017C0  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1931  0017C2  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  1932  0017C4  B4D8               	btfsc	status,2,c
  1933  0017C6  D026               	goto	l1111
  1934                           
  1935                           ; BSR set to: 0
  1936  0017C8  0E01               	movlw	1
  1937  0017CA  0100               	movlb	0	; () banked
  1938  0017CC  6FBC               	movwf	___lwmod@counter& (0+255),b
  1939  0017CE  D006               	goto	l3728
  1940  0017D0                     l3726:
  1941                           
  1942                           ; BSR set to: 0
  1943  0017D0  0100               	movlb	0	; () banked
  1944  0017D2  90D8               	bcf	status,0,c
  1945  0017D4  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  1946  0017D6  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1947  0017D8  0100               	movlb	0	; () banked
  1948  0017DA  2BBC               	incf	___lwmod@counter& (0+255),f,b
  1949  0017DC                     l3728:
  1950                           
  1951                           ; BSR set to: 0
  1952  0017DC  0100               	movlb	0	; () banked
  1953  0017DE  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1954  0017E0  D7F7               	goto	l3726
  1955  0017E2                     l3730:
  1956                           
  1957                           ; BSR set to: 0
  1958  0017E2  0100               	movlb	0	; () banked
  1959  0017E4  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1960  0017E6  0100               	movlb	0	; () banked
  1961  0017E8  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  1962  0017EA  0100               	movlb	0	; () banked
  1963  0017EC  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1964  0017EE  0100               	movlb	0	; () banked
  1965  0017F0  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1966  0017F2  A0D8               	btfss	status,0,c
  1967  0017F4  D008               	goto	l3734
  1968                           
  1969                           ; BSR set to: 0
  1970  0017F6  0100               	movlb	0	; () banked
  1971  0017F8  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1972  0017FA  0100               	movlb	0	; () banked
  1973  0017FC  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  1974  0017FE  0100               	movlb	0	; () banked
  1975  001800  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1976  001802  0100               	movlb	0	; () banked
  1977  001804  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1978  001806                     l3734:
  1979                           
  1980                           ; BSR set to: 0
  1981  001806  0100               	movlb	0	; () banked
  1982  001808  90D8               	bcf	status,0,c
  1983  00180A  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1984  00180C  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  1985                           
  1986                           ; BSR set to: 0
  1987  00180E  0100               	movlb	0	; () banked
  1988  001810  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  1989  001812  D7E7               	goto	l3730
  1990  001814                     l1111:
  1991                           
  1992                           ; BSR set to: 0
  1993  001814  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  1994  001818  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  1995                           
  1996                           ; BSR set to: 0
  1997  00181C  0012               	return	
  1998  00181E                     __end_of___lwmod:
  1999                           	opt stack 0
  2000                           tblptru	equ	0xFF8
  2001                           tblptrh	equ	0xFF7
  2002                           tblptrl	equ	0xFF6
  2003                           tablat	equ	0xFF5
  2004                           prodh	equ	0xFF4
  2005                           prodl	equ	0xFF3
  2006                           intcon	equ	0xFF2
  2007                           intcon2	equ	0xFF1
  2008                           postinc0	equ	0xFEE
  2009                           wreg	equ	0xFE8
  2010                           indf1	equ	0xFE7
  2011                           fsr1h	equ	0xFE2
  2012                           fsr1l	equ	0xFE1
  2013                           indf2	equ	0xFDF
  2014                           postinc2	equ	0xFDE
  2015                           postdec2	equ	0xFDD
  2016                           fsr2h	equ	0xFDA
  2017                           fsr2l	equ	0xFD9
  2018                           status	equ	0xFD8
  2019                           
  2020 ;; *************** function _FromMainHigh_sendmsg *****************
  2021 ;; Defined at:
  2022 ;;		line 174 in file "../src/messages.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  length          1    wreg     unsigned char 
  2025 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2026 ;;  data            2   12[BANK1 ] PTR void 
  2027 ;;		 -> main@motor_data(14), main@t1thread_data(6), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  length          1   67[BANK0 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      char 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2039 ;;      Params:         0       0       3       0       0
  2040 ;;      Locals:         0       1       0       0       0
  2041 ;;      Temps:          0       0       0       0       0
  2042 ;;      Totals:         0       1       3       0       0
  2043 ;;Total ram usage:        4 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:   12
  2046 ;; This function calls:
  2047 ;;		_send_msg
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;;		_timer1_lthread
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text5
  2055  001B64                     __ptext5:
  2056                           	opt stack 0
  2057  001B64                     _FromMainHigh_sendmsg:
  2058                           	opt stack 17
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;incstack = 0
  2062                           ;FromMainHigh_sendmsg@length stored from wreg
  2063  001B64  0100               	movlb	0	; () banked
  2064  001B66  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2068  001B68  0103               	movlb	3	; () banked
  2069  001B6A  0E03               	movlw	high _FromMainHigh_MQ
  2070  001B6C  0101               	movlb	1	; () banked
  2071  001B6E  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2072  001B70  0103               	movlb	3	; () banked
  2073  001B72  0E00               	movlw	low _FromMainHigh_MQ
  2074  001B74  0101               	movlb	1	; () banked
  2075  001B76  6F00               	movwf	send_msg@qptr& (0+255),b
  2076  001B78  C0C3  F102         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2077  001B7C  C10B  F103         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2078  001B80  0101               	movlb	1	; () banked
  2079  001B82  C10D  F105         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2080  001B86  0101               	movlb	1	; () banked
  2081  001B88  C10C  F104         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2082  001B8C  EC1C  F007         	call	_send_msg	;wreg free
  2083  001B90  0012               	return	
  2084  001B92                     __end_of_FromMainHigh_sendmsg:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           prodh	equ	0xFF4
  2091                           prodl	equ	0xFF3
  2092                           intcon	equ	0xFF2
  2093                           intcon2	equ	0xFF1
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           indf1	equ	0xFE7
  2097                           fsr1h	equ	0xFE2
  2098                           fsr1l	equ	0xFE1
  2099                           indf2	equ	0xFDF
  2100                           postinc2	equ	0xFDE
  2101                           postdec2	equ	0xFDD
  2102                           fsr2h	equ	0xFDA
  2103                           fsr2l	equ	0xFD9
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function _timer0_lthread *****************
  2107 ;; Defined at:
  2108 ;;		line 9 in file "../src/timer0_thread.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2111 ;;		 -> main@t0thread_data(2), 
  2112 ;;  msgtype         2   58[BANK0 ] int 
  2113 ;;  length          2   60[BANK0 ] int 
  2114 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2115 ;;		 -> main@msgbuffer(15), 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  2118 ;;		 -> main@msgbuffer(15), 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  2   56[BANK0 ] int 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2128 ;;      Params:         0       8       0       0       0
  2129 ;;      Locals:         0       2       0       0       0
  2130 ;;      Temps:          0       0       0       0       0
  2131 ;;      Totals:         0      10       0       0       0
  2132 ;;Total ram usage:       10 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:   10
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text6
  2143  001CC4                     __ptext6:
  2144                           	opt stack 0
  2145  001CC4                     _timer0_lthread:
  2146                           	opt stack 20
  2147                           
  2148                           ;timer0_thread.c: 10: unsigned int *msgval;
  2149                           ;timer0_thread.c: 14: msgval = (unsigned int *) msgbuffer;
  2150                           
  2151                           ;incstack = 0
  2152  001CC4  0100               	movlb	0	; () banked
  2153  001CC6  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2154  001CCA  0100               	movlb	0	; () banked
  2155  001CCC  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2156                           
  2157                           ; BSR set to: 0
  2158  001CD0  0012               	return	
  2159  001CD2                     __end_of_timer0_lthread:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           prodh	equ	0xFF4
  2166                           prodl	equ	0xFF3
  2167                           intcon	equ	0xFF2
  2168                           intcon2	equ	0xFF1
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           indf1	equ	0xFE7
  2172                           fsr1h	equ	0xFE2
  2173                           fsr1l	equ	0xFE1
  2174                           indf2	equ	0xFDF
  2175                           postinc2	equ	0xFDE
  2176                           postdec2	equ	0xFDD
  2177                           fsr2h	equ	0xFDA
  2178                           fsr2l	equ	0xFD9
  2179                           status	equ	0xFD8
  2180                           
  2181 ;; *************** function _init_timer1_lthread *****************
  2182 ;; Defined at:
  2183 ;;		line 7 in file "../src/timer1_thread.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2186 ;;		 -> main@t1thread_data(6), 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg, fsr2l, fsr2h
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2198 ;;      Params:         0       2       0       0       0
  2199 ;;      Locals:         0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0
  2201 ;;      Totals:         0       2       0       0       0
  2202 ;;Total ram usage:        2 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:   10
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text7
  2213  001CA2                     __ptext7:
  2214                           	opt stack 0
  2215  001CA2                     _init_timer1_lthread:
  2216                           	opt stack 20
  2217                           
  2218                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;incstack = 0
  2222  001CA2  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2223  001CA6  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2224  001CAA  0E00               	movlw	0
  2225  001CAC  6EDE               	movwf	postinc2,c
  2226  001CAE  0E00               	movlw	0
  2227  001CB0  6EDD               	movwf	postdec2,c
  2228  001CB2  0012               	return	
  2229  001CB4                     __end_of_init_timer1_lthread:
  2230                           	opt stack 0
  2231                           tblptru	equ	0xFF8
  2232                           tblptrh	equ	0xFF7
  2233                           tblptrl	equ	0xFF6
  2234                           tablat	equ	0xFF5
  2235                           prodh	equ	0xFF4
  2236                           prodl	equ	0xFF3
  2237                           intcon	equ	0xFF2
  2238                           intcon2	equ	0xFF1
  2239                           postinc0	equ	0xFEE
  2240                           wreg	equ	0xFE8
  2241                           indf1	equ	0xFE7
  2242                           fsr1h	equ	0xFE2
  2243                           fsr1l	equ	0xFE1
  2244                           indf2	equ	0xFDF
  2245                           postinc2	equ	0xFDE
  2246                           postdec2	equ	0xFDD
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function _init_queues *****************
  2252 ;; Defined at:
  2253 ;;		line 194 in file "../src/messages.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;		None               void
  2260 ;; Registers used:
  2261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2267 ;;      Params:         0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:   11
  2274 ;; This function calls:
  2275 ;;		_init_queue
  2276 ;; This function is called by:
  2277 ;;		_main
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text8
  2282  00187E                     __ptext8:
  2283                           	opt stack 0
  2284  00187E                     _init_queues:
  2285                           	opt stack 19
  2286                           
  2287                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2288                           
  2289                           ;incstack = 0
  2290  00187E  0E00               	movlw	0
  2291  001880  0100               	movlb	0	; () banked
  2292  001882  6FC7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2296  001884  0101               	movlb	1	; () banked
  2297  001886  0E01               	movlw	high _ToMainLow_MQ
  2298  001888  0100               	movlb	0	; () banked
  2299  00188A  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2300  00188C  0101               	movlb	1	; () banked
  2301  00188E  0E66               	movlw	low _ToMainLow_MQ
  2302  001890  0100               	movlb	0	; () banked
  2303  001892  6FB8               	movwf	init_queue@qptr& (0+255),b
  2304  001894  EC7C  F00B         	call	_init_queue	;wreg free
  2305                           
  2306                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2307  001898  0102               	movlb	2	; () banked
  2308  00189A  0E02               	movlw	high _ToMainHigh_MQ
  2309  00189C  0100               	movlb	0	; () banked
  2310  00189E  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2311  0018A0  0102               	movlb	2	; () banked
  2312  0018A2  0E57               	movlw	low _ToMainHigh_MQ
  2313  0018A4  0100               	movlb	0	; () banked
  2314  0018A6  6FB8               	movwf	init_queue@qptr& (0+255),b
  2315  0018A8  EC7C  F00B         	call	_init_queue	;wreg free
  2316                           
  2317                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2318  0018AC  0102               	movlb	2	; () banked
  2319  0018AE  0E02               	movlw	high _FromMainLow_MQ
  2320  0018B0  0100               	movlb	0	; () banked
  2321  0018B2  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2322  0018B4  0102               	movlb	2	; () banked
  2323  0018B6  0E00               	movlw	low _FromMainLow_MQ
  2324  0018B8  0100               	movlb	0	; () banked
  2325  0018BA  6FB8               	movwf	init_queue@qptr& (0+255),b
  2326  0018BC  EC7C  F00B         	call	_init_queue	;wreg free
  2327                           
  2328                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2329  0018C0  0103               	movlb	3	; () banked
  2330  0018C2  0E03               	movlw	high _FromMainHigh_MQ
  2331  0018C4  0100               	movlb	0	; () banked
  2332  0018C6  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2333  0018C8  0103               	movlb	3	; () banked
  2334  0018CA  0E00               	movlw	low _FromMainHigh_MQ
  2335  0018CC  0100               	movlb	0	; () banked
  2336  0018CE  6FB8               	movwf	init_queue@qptr& (0+255),b
  2337  0018D0  EC7C  F00B         	call	_init_queue	;wreg free
  2338  0018D4  0012               	return	
  2339  0018D6                     __end_of_init_queues:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           prodh	equ	0xFF4
  2346                           prodl	equ	0xFF3
  2347                           intcon	equ	0xFF2
  2348                           intcon2	equ	0xFF1
  2349                           postinc0	equ	0xFEE
  2350                           wreg	equ	0xFE8
  2351                           indf1	equ	0xFE7
  2352                           fsr1h	equ	0xFE2
  2353                           fsr1l	equ	0xFE1
  2354                           indf2	equ	0xFDF
  2355                           postinc2	equ	0xFDE
  2356                           postdec2	equ	0xFDD
  2357                           fsr2h	equ	0xFDA
  2358                           fsr2l	equ	0xFD9
  2359                           status	equ	0xFD8
  2360                           
  2361 ;; *************** function _init_queue *****************
  2362 ;; Defined at:
  2363 ;;		line 14 in file "../src/messages.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2366 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  i               1   58[BANK0 ] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;		None               void
  2371 ;; Registers used:
  2372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2378 ;;      Params:         0       2       0       0       0
  2379 ;;      Locals:         0       1       0       0       0
  2380 ;;      Temps:          0       0       0       0       0
  2381 ;;      Totals:         0       3       0       0       0
  2382 ;;Total ram usage:        3 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:   10
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_init_queues
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text9
  2393  0016F8                     __ptext9:
  2394                           	opt stack 0
  2395  0016F8                     _init_queue:
  2396                           	opt stack 19
  2397                           
  2398                           ;messages.c: 15: unsigned char i;
  2399                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2400                           
  2401                           ;incstack = 0
  2402  0016F8  0100               	movlb	0	; () banked
  2403  0016FA  EE20 F055          	lfsr	2,85
  2404  0016FE  0100               	movlb	0	; () banked
  2405  001700  51B8               	movf	init_queue@qptr& (0+255),w,b
  2406  001702  26D9               	addwf	fsr2l,f,c
  2407  001704  0100               	movlb	0	; () banked
  2408  001706  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2409  001708  22DA               	addwfc	fsr2h,f,c
  2410  00170A  0E00               	movlw	0
  2411  00170C  6EDF               	movwf	indf2,c
  2412                           
  2413                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2414  00170E  0100               	movlb	0	; () banked
  2415  001710  EE20 F056          	lfsr	2,86
  2416  001714  0100               	movlb	0	; () banked
  2417  001716  51B8               	movf	init_queue@qptr& (0+255),w,b
  2418  001718  26D9               	addwf	fsr2l,f,c
  2419  00171A  0100               	movlb	0	; () banked
  2420  00171C  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2421  00171E  22DA               	addwfc	fsr2h,f,c
  2422  001720  0E00               	movlw	0
  2423  001722  6EDF               	movwf	indf2,c
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2427  001724  0E00               	movlw	0
  2428  001726  0100               	movlb	0	; () banked
  2429  001728  6FBA               	movwf	init_queue@i& (0+255),b
  2430                           
  2431                           ; BSR set to: 0
  2432  00172A  0E04               	movlw	4
  2433  00172C  0100               	movlb	0	; () banked
  2434  00172E  65BA               	cpfsgt	init_queue@i& (0+255),b
  2435  001730  D001               	goto	l2666
  2436  001732  0012               	return	
  2437  001734                     l2666:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;messages.c: 20: qptr->queue[i].full = 0;
  2441  001734  0100               	movlb	0	; () banked
  2442  001736  51BA               	movf	init_queue@i& (0+255),w,b
  2443  001738  0D11               	mullw	17
  2444  00173A  50F3               	movf	prodl,w,c
  2445  00173C  0100               	movlb	0	; () banked
  2446  00173E  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2447  001740  6ED9               	movwf	fsr2l,c
  2448  001742  50F4               	movf	prodh,w,c
  2449  001744  0100               	movlb	0	; () banked
  2450  001746  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2451  001748  6EDA               	movwf	fsr2h,c
  2452  00174A  0E00               	movlw	0
  2453  00174C  6EDF               	movwf	indf2,c
  2454                           
  2455                           ; BSR set to: 0
  2456  00174E  0100               	movlb	0	; () banked
  2457  001750  2BBA               	incf	init_queue@i& (0+255),f,b
  2458                           
  2459                           ; BSR set to: 0
  2460  001752  0E04               	movlw	4
  2461  001754  0100               	movlb	0	; () banked
  2462  001756  65BA               	cpfsgt	init_queue@i& (0+255),b
  2463  001758  D7ED               	goto	l2666
  2464  00175A  0012               	return	
  2465  00175C                     __end_of_init_queue:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           intcon2	equ	0xFF1
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           indf1	equ	0xFE7
  2478                           fsr1h	equ	0xFE2
  2479                           fsr1l	equ	0xFE1
  2480                           indf2	equ	0xFDF
  2481                           postinc2	equ	0xFDE
  2482                           postdec2	equ	0xFDD
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _init_i2c *****************
  2488 ;; Defined at:
  2489 ;;		line 367 in file "../src/my_i2c.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2492 ;;		 -> main@ic(38), 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;		None               void
  2497 ;; Registers used:
  2498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2504 ;;      Params:         0       2       0       0       0
  2505 ;;      Locals:         0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0
  2507 ;;      Totals:         0       2       0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:   10
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text10
  2519  001692                     __ptext10:
  2520                           	opt stack 0
  2521  001692                     _init_i2c:
  2522                           	opt stack 20
  2523                           
  2524                           ;my_i2c.c: 368: ic_ptr = ic;
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;incstack = 0
  2528  001692  0100               	movlb	0	; () banked
  2529  001694  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2530  001698  0100               	movlb	0	; () banked
  2531  00169A  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;my_i2c.c: 369: ic_ptr->buflen = 0;
  2535  00169E  0100               	movlb	0	; () banked
  2536  0016A0  EE20 F00E          	lfsr	2,14
  2537  0016A4  0100               	movlb	0	; () banked
  2538  0016A6  51C5               	movf	_ic_ptr& (0+255),w,b
  2539  0016A8  26D9               	addwf	fsr2l,f,c
  2540  0016AA  0100               	movlb	0	; () banked
  2541  0016AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2542  0016AE  22DA               	addwfc	fsr2h,f,c
  2543  0016B0  0E00               	movlw	0
  2544  0016B2  6EDF               	movwf	indf2,c
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;my_i2c.c: 370: ic_ptr->event_count = 0;
  2548  0016B4  0100               	movlb	0	; () banked
  2549  0016B6  EE20 F020          	lfsr	2,32
  2550  0016BA  0100               	movlb	0	; () banked
  2551  0016BC  51C5               	movf	_ic_ptr& (0+255),w,b
  2552  0016BE  26D9               	addwf	fsr2l,f,c
  2553  0016C0  0100               	movlb	0	; () banked
  2554  0016C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2555  0016C4  22DA               	addwfc	fsr2h,f,c
  2556  0016C6  0E00               	movlw	0
  2557  0016C8  6EDF               	movwf	indf2,c
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  2561  0016CA  0100               	movlb	0	; () banked
  2562  0016CC  EE20 F021          	lfsr	2,33
  2563  0016D0  0100               	movlb	0	; () banked
  2564  0016D2  51C5               	movf	_ic_ptr& (0+255),w,b
  2565  0016D4  26D9               	addwf	fsr2l,f,c
  2566  0016D6  0100               	movlb	0	; () banked
  2567  0016D8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2568  0016DA  22DA               	addwfc	fsr2h,f,c
  2569  0016DC  0E05               	movlw	5
  2570  0016DE  6EDF               	movwf	indf2,c
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;my_i2c.c: 372: ic_ptr->error_count = 0;
  2574  0016E0  0100               	movlb	0	; () banked
  2575  0016E2  EE20 F023          	lfsr	2,35
  2576  0016E6  0100               	movlb	0	; () banked
  2577  0016E8  51C5               	movf	_ic_ptr& (0+255),w,b
  2578  0016EA  26D9               	addwf	fsr2l,f,c
  2579  0016EC  0100               	movlb	0	; () banked
  2580  0016EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2581  0016F0  22DA               	addwfc	fsr2h,f,c
  2582  0016F2  0E00               	movlw	0
  2583  0016F4  6EDF               	movwf	indf2,c
  2584                           
  2585                           ; BSR set to: 0
  2586  0016F6  0012               	return	
  2587  0016F8                     __end_of_init_i2c:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodh	equ	0xFF4
  2594                           prodl	equ	0xFF3
  2595                           intcon	equ	0xFF2
  2596                           intcon2	equ	0xFF1
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           indf1	equ	0xFE7
  2600                           fsr1h	equ	0xFE2
  2601                           fsr1l	equ	0xFE1
  2602                           indf2	equ	0xFDF
  2603                           postinc2	equ	0xFDE
  2604                           postdec2	equ	0xFDD
  2605                           fsr2h	equ	0xFDA
  2606                           fsr2l	equ	0xFD9
  2607                           status	equ	0xFD8
  2608                           
  2609 ;; *************** function _i_like_to_moveit_moveit *****************
  2610 ;; Defined at:
  2611 ;;		line 3 in file "C:/Users/alex/Documents/VI/School/Embedded/code/pic_motor/src/src/motor.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  left_side_sp    1    wreg     char 
  2614 ;;  right_side_s    1   16[BANK1 ] char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  left_side_sp    1   17[BANK1 ] char 
  2617 ;;  moves           4   18[BANK1 ] unsigned char [4]
  2618 ;; Return value:  Size  Location     Type
  2619 ;;		None               void
  2620 ;; Registers used:
  2621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2627 ;;      Params:         0       0       1       0       0
  2628 ;;      Locals:         0       0       5       0       0
  2629 ;;      Temps:          0       0       0       0       0
  2630 ;;      Totals:         0       0       6       0       0
  2631 ;;Total ram usage:        6 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:   14
  2634 ;; This function calls:
  2635 ;;		_send_uart_message
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text11
  2642  00144E                     __ptext11:
  2643                           	opt stack 0
  2644  00144E                     _i_like_to_moveit_moveit:
  2645                           	opt stack 16
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;incstack = 0
  2649                           ;i_like_to_moveit_moveit@left_side_speed stored from wreg
  2650  00144E  0101               	movlb	1	; () banked
  2651  001450  6F11               	movwf	i_like_to_moveit_moveit@left_side_speed& (0+255),b
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;motor.c: 5: unsigned char moves[4];
  2655                           ;motor.c: 11: moves[0] = 128;
  2656  001452  0E80               	movlw	128
  2657  001454  0101               	movlb	1	; () banked
  2658  001456  6F12               	movwf	i_like_to_moveit_moveit@moves& (0+255),b
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;motor.c: 13: if( left_side_speed >=0 )
  2662  001458  0101               	movlb	1	; () banked
  2663  00145A  BF11               	btfsc	i_like_to_moveit_moveit@left_side_speed& (0+255),7,b
  2664  00145C  D006               	goto	l4058
  2665                           
  2666                           ; BSR set to: 1
  2667                           ;motor.c: 14: {
  2668                           ;motor.c: 15: moves[1] = 0;
  2669  00145E  0E00               	movlw	0
  2670  001460  0101               	movlb	1	; () banked
  2671  001462  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2672                           
  2673                           ; BSR set to: 1
  2674                           ;motor.c: 16: moves[2] = left_side_speed;
  2675  001464  C111  F114         	movff	i_like_to_moveit_moveit@left_side_speed,i_like_to_moveit_moveit@moves+2
  2676                           
  2677                           ;motor.c: 17: }
  2678  001468  D010               	goto	l551
  2679  00146A                     l4058:
  2680                           
  2681                           ; BSR set to: 1
  2682                           ;motor.c: 18: else
  2683                           ;motor.c: 19: {
  2684                           ;motor.c: 20: moves[1] = 1;
  2685  00146A  0E01               	movlw	1
  2686  00146C  0101               	movlb	1	; () banked
  2687  00146E  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;motor.c: 22: if(left_side_speed == -128)
  2691  001470  0101               	movlb	1	; () banked
  2692  001472  5111               	movf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2693  001474  0A80               	xorlw	128
  2694  001476  A4D8               	btfss	status,2,c
  2695  001478  D003               	goto	l4064
  2696                           
  2697                           ; BSR set to: 1
  2698                           ;motor.c: 23: {
  2699                           ;motor.c: 24: moves[2] = (unsigned char)((-left_side_speed)-1);
  2700  00147A  0101               	movlb	1	; () banked
  2701  00147C  2911               	incf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2702  00147E  D002               	goto	L4
  2703  001480                     l4064:
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;motor.c: 26: else
  2707                           ;motor.c: 27: {
  2708                           ;motor.c: 28: moves[2] = (unsigned char)(-left_side_speed);
  2709  001480  0101               	movlb	1	; () banked
  2710  001482  5111               	movf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2711  001484                     L4:
  2712  001484  0800               	sublw	0
  2713  001486  0101               	movlb	1	; () banked
  2714  001488  6F14               	movwf	(i_like_to_moveit_moveit@moves+2)& (0+255),b
  2715  00148A                     l551:
  2716                           
  2717                           ; BSR set to: 1
  2718                           ;motor.c: 29: }
  2719                           ;motor.c: 30: }
  2720                           ;motor.c: 32: moves[3] = (moves[0] + moves[1] + moves[2])&127;
  2721  00148A  0101               	movlb	1	; () banked
  2722  00148C  5113               	movf	(i_like_to_moveit_moveit@moves+1)& (0+255),w,b
  2723  00148E  0101               	movlb	1	; () banked
  2724  001490  2514               	addwf	(i_like_to_moveit_moveit@moves+2)& (0+255),w,b
  2725  001492  0101               	movlb	1	; () banked
  2726  001494  2512               	addwf	i_like_to_moveit_moveit@moves& (0+255),w,b
  2727  001496  0B7F               	andlw	127
  2728  001498  0101               	movlb	1	; () banked
  2729  00149A  6F15               	movwf	(i_like_to_moveit_moveit@moves+3)& (0+255),b
  2730                           
  2731                           ; BSR set to: 1
  2732                           ;motor.c: 34: send_uart_message(moves);
  2733  00149C  0101               	movlb	1	; () banked
  2734  00149E  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2735  0014A0  0101               	movlb	1	; () banked
  2736  0014A2  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2737  0014A4  0101               	movlb	1	; () banked
  2738  0014A6  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2739  0014A8  0101               	movlb	1	; () banked
  2740  0014AA  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2741  0014AC  EC41  F00E         	call	_send_uart_message	;wreg free
  2742                           
  2743                           ;motor.c: 36: if( right_side_speed >=0 )
  2744  0014B0  0101               	movlb	1	; () banked
  2745  0014B2  BF10               	btfsc	i_like_to_moveit_moveit@right_side_speed& (0+255),7,b
  2746  0014B4  D006               	goto	l4074
  2747                           
  2748                           ; BSR set to: 1
  2749                           ;motor.c: 37: {
  2750                           ;motor.c: 38: moves[1] = 4;
  2751  0014B6  0E04               	movlw	4
  2752  0014B8  0101               	movlb	1	; () banked
  2753  0014BA  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2754                           
  2755                           ; BSR set to: 1
  2756                           ;motor.c: 39: moves[2] = right_side_speed;
  2757  0014BC  C110  F114         	movff	i_like_to_moveit_moveit@right_side_speed,i_like_to_moveit_moveit@moves+2
  2758                           
  2759                           ;motor.c: 40: }
  2760  0014C0  D010               	goto	l555
  2761  0014C2                     l4074:
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;motor.c: 41: else
  2765                           ;motor.c: 42: {
  2766                           ;motor.c: 43: moves[1] = 5;
  2767  0014C2  0E05               	movlw	5
  2768  0014C4  0101               	movlb	1	; () banked
  2769  0014C6  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2770                           
  2771                           ; BSR set to: 1
  2772                           ;motor.c: 45: if(right_side_speed == -128)
  2773  0014C8  0101               	movlb	1	; () banked
  2774  0014CA  5110               	movf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2775  0014CC  0A80               	xorlw	128
  2776  0014CE  A4D8               	btfss	status,2,c
  2777  0014D0  D003               	goto	l4080
  2778                           
  2779                           ; BSR set to: 1
  2780                           ;motor.c: 46: {
  2781                           ;motor.c: 47: moves[2] = (unsigned char)((-right_side_speed)-1);
  2782  0014D2  0101               	movlb	1	; () banked
  2783  0014D4  2910               	incf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2784  0014D6  D002               	goto	L5
  2785  0014D8                     l4080:
  2786                           
  2787                           ; BSR set to: 1
  2788                           ;motor.c: 49: else
  2789                           ;motor.c: 50: {
  2790                           ;motor.c: 51: moves[2] = (unsigned char)(-right_side_speed);
  2791  0014D8  0101               	movlb	1	; () banked
  2792  0014DA  5110               	movf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2793  0014DC                     L5:
  2794  0014DC  0800               	sublw	0
  2795  0014DE  0101               	movlb	1	; () banked
  2796  0014E0  6F14               	movwf	(i_like_to_moveit_moveit@moves+2)& (0+255),b
  2797  0014E2                     l555:
  2798                           
  2799                           ; BSR set to: 1
  2800                           ;motor.c: 52: }
  2801                           ;motor.c: 53: }
  2802                           ;motor.c: 55: moves[3] = (moves[0] + moves[1] + moves[2])&127;
  2803  0014E2  0101               	movlb	1	; () banked
  2804  0014E4  5113               	movf	(i_like_to_moveit_moveit@moves+1)& (0+255),w,b
  2805  0014E6  0101               	movlb	1	; () banked
  2806  0014E8  2514               	addwf	(i_like_to_moveit_moveit@moves+2)& (0+255),w,b
  2807  0014EA  0101               	movlb	1	; () banked
  2808  0014EC  2512               	addwf	i_like_to_moveit_moveit@moves& (0+255),w,b
  2809  0014EE  0B7F               	andlw	127
  2810  0014F0  0101               	movlb	1	; () banked
  2811  0014F2  6F15               	movwf	(i_like_to_moveit_moveit@moves+3)& (0+255),b
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;motor.c: 57: send_uart_message(moves);
  2815  0014F4  0101               	movlb	1	; () banked
  2816  0014F6  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2817  0014F8  0101               	movlb	1	; () banked
  2818  0014FA  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2819  0014FC  0101               	movlb	1	; () banked
  2820  0014FE  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2821  001500  0101               	movlb	1	; () banked
  2822  001502  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2823  001504  EC41  F00E         	call	_send_uart_message	;wreg free
  2824  001508  0012               	return	
  2825  00150A                     __end_of_i_like_to_moveit_moveit:
  2826                           	opt stack 0
  2827                           tblptru	equ	0xFF8
  2828                           tblptrh	equ	0xFF7
  2829                           tblptrl	equ	0xFF6
  2830                           tablat	equ	0xFF5
  2831                           prodh	equ	0xFF4
  2832                           prodl	equ	0xFF3
  2833                           intcon	equ	0xFF2
  2834                           intcon2	equ	0xFF1
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           indf1	equ	0xFE7
  2838                           fsr1h	equ	0xFE2
  2839                           fsr1l	equ	0xFE1
  2840                           indf2	equ	0xFDF
  2841                           postinc2	equ	0xFDE
  2842                           postdec2	equ	0xFDD
  2843                           fsr2h	equ	0xFDA
  2844                           fsr2l	equ	0xFD9
  2845                           status	equ	0xFD8
  2846                           
  2847 ;; *************** function _send_uart_message *****************
  2848 ;; Defined at:
  2849 ;;		line 186 in file "../src/my_uart.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  message_ptr     2   14[BANK1 ] PTR unsigned char 
  2852 ;;		 -> i_like_to_moveit_moveit@moves(4), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  message_q_co    1   68[BANK0 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      unsigned char 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2864 ;;      Params:         0       0       2       0       0
  2865 ;;      Locals:         0       1       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         0       1       2       0       0
  2868 ;;Total ram usage:        3 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:   13
  2871 ;; This function calls:
  2872 ;;		_FromMainLow_sendmsg
  2873 ;; This function is called by:
  2874 ;;		_i_like_to_moveit_moveit
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text12
  2879  001C82                     __ptext12:
  2880                           	opt stack 0
  2881  001C82                     _send_uart_message:
  2882                           	opt stack 16
  2883                           
  2884                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(4,31,(void *) messag
      +                          e_ptr );
  2885                           
  2886                           ;incstack = 0
  2887  001C82  0E1F               	movlw	31
  2888  001C84  0101               	movlb	1	; () banked
  2889  001C86  6F0B               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2890  001C88  0101               	movlb	1	; () banked
  2891  001C8A  C10F  F10D         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2892  001C8E  0101               	movlb	1	; () banked
  2893  001C90  C10E  F10C         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2894  001C94  0E04               	movlw	4
  2895  001C96  ECC9  F00D         	call	_FromMainLow_sendmsg
  2896  001C9A  0100               	movlb	0	; () banked
  2897  001C9C  6FC4               	movwf	send_uart_message@message_q_code& (0+255),b
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;my_uart.c: 193: }
  2901                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;my_uart.c: 191: {
  2905                           ;my_uart.c: 192: return 0x02;
  2906                           ;	Return value of _send_uart_message is never used
  2907                           
  2908                           ;my_uart.c: 190: if( message_q_code == -1)
  2909  001C9E  889D               	bsf	3997,4,c	;volatile
  2910                           
  2911                           ; BSR set to: 0
  2912                           
  2913                           ;my_uart.c: 196: return 0x00;
  2914                           ;	Return value of _send_uart_message is never used
  2915  001CA0  0012               	return	
  2916  001CA2                     __end_of_send_uart_message:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           intcon2	equ	0xFF1
  2926                           postinc0	equ	0xFEE
  2927                           wreg	equ	0xFE8
  2928                           indf1	equ	0xFE7
  2929                           fsr1h	equ	0xFE2
  2930                           fsr1l	equ	0xFE1
  2931                           indf2	equ	0xFDF
  2932                           postinc2	equ	0xFDE
  2933                           postdec2	equ	0xFDD
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _FromMainLow_sendmsg *****************
  2939 ;; Defined at:
  2940 ;;		line 150 in file "../src/messages.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  length          1    wreg     unsigned char 
  2943 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2944 ;;  data            2   12[BANK1 ] PTR void 
  2945 ;;		 -> i_like_to_moveit_moveit@moves(4), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  length          1   67[BANK0 ] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      char 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2957 ;;      Params:         0       0       3       0       0
  2958 ;;      Locals:         0       1       0       0       0
  2959 ;;      Temps:          0       0       0       0       0
  2960 ;;      Totals:         0       1       3       0       0
  2961 ;;Total ram usage:        4 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:   12
  2964 ;; This function calls:
  2965 ;;		_send_msg
  2966 ;; This function is called by:
  2967 ;;		_send_uart_message
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text13
  2972  001B92                     __ptext13:
  2973                           	opt stack 0
  2974  001B92                     _FromMainLow_sendmsg:
  2975                           	opt stack 16
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;incstack = 0
  2979                           ;FromMainLow_sendmsg@length stored from wreg
  2980  001B92  0100               	movlb	0	; () banked
  2981  001B94  6FC3               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2985  001B96  0102               	movlb	2	; () banked
  2986  001B98  0E02               	movlw	high _FromMainLow_MQ
  2987  001B9A  0101               	movlb	1	; () banked
  2988  001B9C  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2989  001B9E  0102               	movlb	2	; () banked
  2990  001BA0  0E00               	movlw	low _FromMainLow_MQ
  2991  001BA2  0101               	movlb	1	; () banked
  2992  001BA4  6F00               	movwf	send_msg@qptr& (0+255),b
  2993  001BA6  C0C3  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  2994  001BAA  C10B  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2995  001BAE  0101               	movlb	1	; () banked
  2996  001BB0  C10D  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2997  001BB4  0101               	movlb	1	; () banked
  2998  001BB6  C10C  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  2999  001BBA  EC1C  F007         	call	_send_msg	;wreg free
  3000  001BBE  0012               	return	
  3001  001BC0                     __end_of_FromMainLow_sendmsg:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           prodh	equ	0xFF4
  3008                           prodl	equ	0xFF3
  3009                           intcon	equ	0xFF2
  3010                           intcon2	equ	0xFF1
  3011                           postinc0	equ	0xFEE
  3012                           wreg	equ	0xFE8
  3013                           indf1	equ	0xFE7
  3014                           fsr1h	equ	0xFE2
  3015                           fsr1l	equ	0xFE1
  3016                           indf2	equ	0xFDF
  3017                           postinc2	equ	0xFDE
  3018                           postdec2	equ	0xFDD
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _send_msg *****************
  3024 ;; Defined at:
  3025 ;;		line 24 in file "../src/messages.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3028 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3029 ;;  length          1    2[BANK1 ] unsigned char 
  3030 ;;  msgtype         1    3[BANK1 ] unsigned char 
  3031 ;;  data            2    4[BANK1 ] PTR void 
  3032 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  3033 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  3034 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  3035 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  3038 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3039 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3040 ;;  tlength         2    6[BANK1 ] unsigned int 
  3041 ;;  slot            1    8[BANK1 ] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      char 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3051 ;;      Params:         0       0       6       0       0
  3052 ;;      Locals:         0       0       5       0       0
  3053 ;;      Temps:          0       1       0       0       0
  3054 ;;      Totals:         0       1      11       0       0
  3055 ;;Total ram usage:       12 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:   11
  3058 ;; This function calls:
  3059 ;;		___awmod
  3060 ;;		_memcpy
  3061 ;; This function is called by:
  3062 ;;		_FromMainLow_sendmsg
  3063 ;;		_FromMainHigh_sendmsg
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text14
  3068  000E38                     __ptext14:
  3069                           	opt stack 0
  3070  000E38                     _send_msg:
  3071                           	opt stack 17
  3072                           
  3073                           ;messages.c: 25: unsigned char slot;
  3074                           ;messages.c: 27: msg *qmsg;
  3075                           ;messages.c: 28: size_t tlength = length;
  3076                           
  3077                           ;incstack = 0
  3078  000E38  0101               	movlb	1	; () banked
  3079  000E3A  C102  F106         	movff	send_msg@length,send_msg@tlength
  3080  000E3E  0101               	movlb	1	; () banked
  3081  000E40  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  3082                           
  3083                           ; BSR set to: 1
  3084                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3085  000E42  0101               	movlb	1	; () banked
  3086  000E44  EE20 F055          	lfsr	2,85
  3087  000E48  0101               	movlb	1	; () banked
  3088  000E4A  5100               	movf	send_msg@qptr& (0+255),w,b
  3089  000E4C  26D9               	addwf	fsr2l,f,c
  3090  000E4E  0101               	movlb	1	; () banked
  3091  000E50  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3092  000E52  22DA               	addwfc	fsr2h,f,c
  3093  000E54  50DF               	movf	indf2,w,c
  3094  000E56  0101               	movlb	1	; () banked
  3095  000E58  6F08               	movwf	send_msg@slot& (0+255),b
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3099  000E5A  0101               	movlb	1	; () banked
  3100  000E5C  5108               	movf	send_msg@slot& (0+255),w,b
  3101  000E5E  0D11               	mullw	17
  3102  000E60  50F3               	movf	prodl,w,c
  3103  000E62  0101               	movlb	1	; () banked
  3104  000E64  2500               	addwf	send_msg@qptr& (0+255),w,b
  3105  000E66  0101               	movlb	1	; () banked
  3106  000E68  6F09               	movwf	send_msg@qmsg& (0+255),b
  3107  000E6A  50F4               	movf	prodh,w,c
  3108  000E6C  0101               	movlb	1	; () banked
  3109  000E6E  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3110  000E70  0101               	movlb	1	; () banked
  3111  000E72  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  3112                           
  3113                           ; BSR set to: 1
  3114                           ;messages.c: 41: if (qmsg->full != 0) {
  3115  000E74  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3116  000E78  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3117  000E7C  50DF               	movf	indf2,w,c
  3118  000E7E  B4D8               	btfsc	status,2,c
  3119  000E80  D002               	goto	l3536
  3120                           
  3121                           ; BSR set to: 1
  3122                           ;messages.c: 42: return (-1);
  3123  000E82  0EFF               	movlw	255
  3124  000E84  0012               	return	
  3125  000E86                     l3536:
  3126                           
  3127                           ; BSR set to: 1
  3128                           ;messages.c: 43: }
  3129                           ;messages.c: 46: qmsg->length = length;
  3130  000E86  0101               	movlb	1	; () banked
  3131  000E88  EE20 F001          	lfsr	2,1
  3132  000E8C  0101               	movlb	1	; () banked
  3133  000E8E  5109               	movf	send_msg@qmsg& (0+255),w,b
  3134  000E90  26D9               	addwf	fsr2l,f,c
  3135  000E92  0101               	movlb	1	; () banked
  3136  000E94  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3137  000E96  22DA               	addwfc	fsr2h,f,c
  3138  000E98  0101               	movlb	1	; () banked
  3139  000E9A  C102  FFDF         	movff	send_msg@length,indf2
  3140                           
  3141                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3142  000E9E  0101               	movlb	1	; () banked
  3143  000EA0  EE20 F002          	lfsr	2,2
  3144  000EA4  0101               	movlb	1	; () banked
  3145  000EA6  5109               	movf	send_msg@qmsg& (0+255),w,b
  3146  000EA8  26D9               	addwf	fsr2l,f,c
  3147  000EAA  0101               	movlb	1	; () banked
  3148  000EAC  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3149  000EAE  22DA               	addwfc	fsr2h,f,c
  3150  000EB0  0101               	movlb	1	; () banked
  3151  000EB2  C103  FFDF         	movff	send_msg@msgtype,indf2
  3152                           
  3153                           ; BSR set to: 1
  3154                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3155  000EB6  0E03               	movlw	3
  3156  000EB8  0101               	movlb	1	; () banked
  3157  000EBA  2509               	addwf	send_msg@qmsg& (0+255),w,b
  3158  000EBC  0100               	movlb	0	; () banked
  3159  000EBE  6FB8               	movwf	memcpy@d1& (0+255),b
  3160  000EC0  0E00               	movlw	0
  3161  000EC2  0101               	movlb	1	; () banked
  3162  000EC4  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3163  000EC6  0100               	movlb	0	; () banked
  3164  000EC8  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  3165  000ECA  0101               	movlb	1	; () banked
  3166  000ECC  0100               	movlb	0	; () banked
  3167  000ECE  C105  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  3168  000ED2  0101               	movlb	1	; () banked
  3169  000ED4  0100               	movlb	0	; () banked
  3170  000ED6  C104  F0BA         	movff	send_msg@data,memcpy@s1
  3171  000EDA  C106  F0BC         	movff	send_msg@tlength,memcpy@n
  3172  000EDE  C107  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  3173  000EE2  EC93  F00C         	call	_memcpy	;wreg free
  3174                           
  3175                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  3176  000EE6  0101               	movlb	1	; () banked
  3177  000EE8  EE20 F055          	lfsr	2,85
  3178  000EEC  0101               	movlb	1	; () banked
  3179  000EEE  5100               	movf	send_msg@qptr& (0+255),w,b
  3180  000EF0  26D9               	addwf	fsr2l,f,c
  3181  000EF2  0101               	movlb	1	; () banked
  3182  000EF4  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3183  000EF6  22DA               	addwfc	fsr2h,f,c
  3184  000EF8  0101               	movlb	1	; () banked
  3185  000EFA  EE10 F055          	lfsr	1,85
  3186  000EFE  0101               	movlb	1	; () banked
  3187  000F00  5100               	movf	send_msg@qptr& (0+255),w,b
  3188  000F02  26E1               	addwf	fsr1l,f,c
  3189  000F04  0101               	movlb	1	; () banked
  3190  000F06  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3191  000F08  22E2               	addwfc	fsr1h,f,c
  3192  000F0A  50E7               	movf	indf1,w,c
  3193  000F0C  0100               	movlb	0	; () banked
  3194  000F0E  6FC2               	movwf	??_send_msg& (0+255),b
  3195  000F10  0E01               	movlw	1
  3196  000F12  0100               	movlb	0	; () banked
  3197  000F14  25C2               	addwf	??_send_msg& (0+255),w,b
  3198  000F16  0100               	movlb	0	; () banked
  3199  000F18  6FB8               	movwf	___awmod@dividend& (0+255),b
  3200  000F1A  0100               	movlb	0	; () banked
  3201  000F1C  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3202  000F1E  0E00               	movlw	0
  3203  000F20  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3204  000F22  0E00               	movlw	0
  3205  000F24  0100               	movlb	0	; () banked
  3206  000F26  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3207  000F28  0E05               	movlw	5
  3208  000F2A  0100               	movlb	0	; () banked
  3209  000F2C  6FBA               	movwf	___awmod@divisor& (0+255),b
  3210  000F2E  EC03  F009         	call	___awmod	;wreg free
  3211  000F32  0100               	movlb	0	; () banked
  3212  000F34  51B8               	movf	?___awmod& (0+255),w,b
  3213  000F36  6EDF               	movwf	indf2,c
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;messages.c: 59: qmsg->full = 1;
  3217  000F38  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3218  000F3C  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3219  000F40  0E01               	movlw	1
  3220  000F42  6EDF               	movwf	indf2,c
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;messages.c: 60: return (1);
  3224  000F44  0E01               	movlw	1
  3225  000F46  0012               	return	
  3226  000F48                     __end_of_send_msg:
  3227                           	opt stack 0
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           intcon2	equ	0xFF1
  3236                           postinc0	equ	0xFEE
  3237                           wreg	equ	0xFE8
  3238                           indf1	equ	0xFE7
  3239                           fsr1h	equ	0xFE2
  3240                           fsr1l	equ	0xFE1
  3241                           indf2	equ	0xFDF
  3242                           postinc2	equ	0xFDE
  3243                           postdec2	equ	0xFDD
  3244                           fsr2h	equ	0xFDA
  3245                           fsr2l	equ	0xFD9
  3246                           status	equ	0xFD8
  3247                           
  3248 ;; *************** function _i2c_configure_slave *****************
  3249 ;; Defined at:
  3250 ;;		line 378 in file "../src/my_i2c.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  addr            1    wreg     unsigned char 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  addr            1   56[BANK0 ] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;		None               void
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3264 ;;      Params:         0       0       0       0       0
  3265 ;;      Locals:         0       1       0       0       0
  3266 ;;      Temps:          0       0       0       0       0
  3267 ;;      Totals:         0       1       0       0       0
  3268 ;;Total ram usage:        1 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:   10
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text15
  3279  001BEE                     __ptext15:
  3280                           	opt stack 0
  3281  001BEE                     _i2c_configure_slave:
  3282                           	opt stack 20
  3283                           
  3284                           ;incstack = 0
  3285                           ;i2c_configure_slave@addr stored from wreg
  3286  001BEE  0100               	movlb	0	; () banked
  3287  001BF0  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;my_i2c.c: 390: TRISCbits.TRISC3 = 1;
  3291  001BF2  8694               	bsf	3988,3,c	;volatile
  3292                           
  3293                           ;my_i2c.c: 391: TRISCbits.TRISC4 = 1;
  3294  001BF4  8894               	bsf	3988,4,c	;volatile
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;my_i2c.c: 396: SSPADD = addr;
  3298  001BF6  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;my_i2c.c: 398: SSPSTAT = 0x0;
  3302  001BFA  0E00               	movlw	0
  3303  001BFC  6EC7               	movwf	4039,c	;volatile
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;my_i2c.c: 399: SSPCON1 = 0x0;
  3307  001BFE  0E00               	movlw	0
  3308  001C00  6EC6               	movwf	4038,c	;volatile
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;my_i2c.c: 400: SSPCON2 = 0x0;
  3312  001C02  0E00               	movlw	0
  3313  001C04  6EC5               	movwf	4037,c	;volatile
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;my_i2c.c: 401: SSPCON1 |= 0x0E;
  3317  001C06  0E0E               	movlw	14
  3318  001C08  12C6               	iorwf	4038,f,c	;volatile
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;my_i2c.c: 402: SSPSTAT |= 0b10000000;
  3322  001C0A  8EC7               	bsf	4039,7,c	;volatile
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;my_i2c.c: 405: TRISCbits.TRISC3 = 1;
  3326  001C0C  8694               	bsf	3988,3,c	;volatile
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;my_i2c.c: 406: TRISCbits.TRISC4 = 1;
  3330  001C0E  8894               	bsf	3988,4,c	;volatile
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;my_i2c.c: 427: SSPCON2bits.SEN = 1;
  3334  001C10  80C5               	bsf	4037,0,c	;volatile
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;my_i2c.c: 428: SSPCON1 |= 0b00100000;
  3338  001C12  8AC6               	bsf	4038,5,c	;volatile
  3339                           
  3340                           ; BSR set to: 0
  3341  001C14  0012               	return	
  3342  001C16                     __end_of_i2c_configure_slave:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           prodh	equ	0xFF4
  3349                           prodl	equ	0xFF3
  3350                           intcon	equ	0xFF2
  3351                           intcon2	equ	0xFF1
  3352                           postinc0	equ	0xFEE
  3353                           wreg	equ	0xFE8
  3354                           indf1	equ	0xFE7
  3355                           fsr1h	equ	0xFE2
  3356                           fsr1l	equ	0xFE1
  3357                           indf2	equ	0xFDF
  3358                           postinc2	equ	0xFDE
  3359                           postdec2	equ	0xFDD
  3360                           fsr2h	equ	0xFDA
  3361                           fsr2l	equ	0xFD9
  3362                           status	equ	0xFD8
  3363                           
  3364 ;; *************** function _enable_interrupts *****************
  3365 ;; Defined at:
  3366 ;;		line 14 in file "../src/interrupts.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		None
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3380 ;;      Params:         0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         0       0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:   10
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text16
  3395  001CDC                     __ptext16:
  3396                           	opt stack 0
  3397  001CDC                     _enable_interrupts:
  3398                           	opt stack 20
  3399                           
  3400                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;incstack = 0
  3404  001CDC  8ED0               	bsf	4048,7,c	;volatile
  3405                           
  3406                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3407  001CDE  8EF2               	bsf	intcon,7,c	;volatile
  3408                           
  3409                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3410  001CE0  8CF2               	bsf	intcon,6,c	;volatile
  3411  001CE2  0012               	return	
  3412  001CE4                     __end_of_enable_interrupts:
  3413                           	opt stack 0
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           prodh	equ	0xFF4
  3419                           prodl	equ	0xFF3
  3420                           intcon	equ	0xFF2
  3421                           intcon2	equ	0xFF1
  3422                           postinc0	equ	0xFEE
  3423                           wreg	equ	0xFE8
  3424                           indf1	equ	0xFE7
  3425                           fsr1h	equ	0xFE2
  3426                           fsr1l	equ	0xFE1
  3427                           indf2	equ	0xFDF
  3428                           postinc2	equ	0xFDE
  3429                           postdec2	equ	0xFDD
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _debug_configure *****************
  3435 ;; Defined at:
  3436 ;;		line 3 in file "../src/debug.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;		None               void
  3443 ;; Registers used:
  3444 ;;		wreg, status,2
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3450 ;;      Params:         0       0       0       0       0
  3451 ;;      Locals:         0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0
  3453 ;;      Totals:         0       0       0       0       0
  3454 ;;Total ram usage:        0 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:   10
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text17
  3465  001CD2                     __ptext17:
  3466                           	opt stack 0
  3467  001CD2                     _debug_configure:
  3468                           	opt stack 20
  3469                           
  3470                           ;debug.c: 5: TRISD = 0x00;
  3471                           
  3472                           ;incstack = 0
  3473  001CD2  0E00               	movlw	0
  3474  001CD4  6E95               	movwf	3989,c	;volatile
  3475                           
  3476                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3477  001CD6  9093               	bcf	3987,0,c	;volatile
  3478                           
  3479                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3480  001CD8  9293               	bcf	3987,1,c	;volatile
  3481  001CDA  0012               	return	
  3482  001CDC                     __end_of_debug_configure:
  3483                           	opt stack 0
  3484                           tblptru	equ	0xFF8
  3485                           tblptrh	equ	0xFF7
  3486                           tblptrl	equ	0xFF6
  3487                           tablat	equ	0xFF5
  3488                           prodh	equ	0xFF4
  3489                           prodl	equ	0xFF3
  3490                           intcon	equ	0xFF2
  3491                           intcon2	equ	0xFF1
  3492                           postinc0	equ	0xFEE
  3493                           wreg	equ	0xFE8
  3494                           indf1	equ	0xFE7
  3495                           fsr1h	equ	0xFE2
  3496                           fsr1l	equ	0xFE1
  3497                           indf2	equ	0xFDF
  3498                           postinc2	equ	0xFDE
  3499                           postdec2	equ	0xFDD
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _blip3 *****************
  3505 ;; Defined at:
  3506 ;;		line 32 in file "../src/debug.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;		None               void
  3513 ;; Registers used:
  3514 ;;		None
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3520 ;;      Params:         0       0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0
  3523 ;;      Totals:         0       0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:   10
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_main
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text18
  3535  001CE4                     __ptext18:
  3536                           	opt stack 0
  3537  001CE4                     _blip3:
  3538                           	opt stack 20
  3539                           
  3540                           ;debug.c: 34: LATDbits.LD6 = 0;
  3541                           
  3542                           ;incstack = 0
  3543  001CE4  9C8C               	bcf	3980,6,c	;volatile
  3544                           
  3545                           ;debug.c: 35: LATDbits.LD6 = 1;
  3546  001CE6  8C8C               	bsf	3980,6,c	;volatile
  3547                           
  3548                           ;debug.c: 36: LATDbits.LD6 = 0;
  3549  001CE8  9C8C               	bcf	3980,6,c	;volatile
  3550  001CEA  0012               	return	
  3551  001CEC                     __end_of_blip3:
  3552                           	opt stack 0
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           intcon	equ	0xFF2
  3560                           intcon2	equ	0xFF1
  3561                           postinc0	equ	0xFEE
  3562                           wreg	equ	0xFE8
  3563                           indf1	equ	0xFE7
  3564                           fsr1h	equ	0xFE2
  3565                           fsr1l	equ	0xFE1
  3566                           indf2	equ	0xFDF
  3567                           postinc2	equ	0xFDE
  3568                           postdec2	equ	0xFDD
  3569                           fsr2h	equ	0xFDA
  3570                           fsr2l	equ	0xFD9
  3571                           status	equ	0xFD8
  3572                           
  3573 ;; *************** function _blip2 *****************
  3574 ;; Defined at:
  3575 ;;		line 25 in file "../src/debug.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;		None               void
  3582 ;; Registers used:
  3583 ;;		None
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3589 ;;      Params:         0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0
  3592 ;;      Totals:         0       0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:   10
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text19
  3604  001CEC                     __ptext19:
  3605                           	opt stack 0
  3606  001CEC                     _blip2:
  3607                           	opt stack 20
  3608                           
  3609                           ;debug.c: 27: LATDbits.LD5 = 0;
  3610                           
  3611                           ;incstack = 0
  3612  001CEC  9A8C               	bcf	3980,5,c	;volatile
  3613                           
  3614                           ;debug.c: 28: LATDbits.LD5 = 1;
  3615  001CEE  8A8C               	bsf	3980,5,c	;volatile
  3616                           
  3617                           ;debug.c: 29: LATDbits.LD5 = 0;
  3618  001CF0  9A8C               	bcf	3980,5,c	;volatile
  3619  001CF2  0012               	return	
  3620  001CF4                     __end_of_blip2:
  3621                           	opt stack 0
  3622                           tblptru	equ	0xFF8
  3623                           tblptrh	equ	0xFF7
  3624                           tblptrl	equ	0xFF6
  3625                           tablat	equ	0xFF5
  3626                           prodh	equ	0xFF4
  3627                           prodl	equ	0xFF3
  3628                           intcon	equ	0xFF2
  3629                           intcon2	equ	0xFF1
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           indf1	equ	0xFE7
  3633                           fsr1h	equ	0xFE2
  3634                           fsr1l	equ	0xFE1
  3635                           indf2	equ	0xFDF
  3636                           postinc2	equ	0xFDE
  3637                           postdec2	equ	0xFDD
  3638                           fsr2h	equ	0xFDA
  3639                           fsr2l	equ	0xFD9
  3640                           status	equ	0xFD8
  3641                           
  3642 ;; *************** function _blip1 *****************
  3643 ;; Defined at:
  3644 ;;		line 18 in file "../src/debug.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;		None               void
  3651 ;; Registers used:
  3652 ;;		None
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3658 ;;      Params:         0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:   10
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text20
  3673  001CF4                     __ptext20:
  3674                           	opt stack 0
  3675  001CF4                     _blip1:
  3676                           	opt stack 20
  3677                           
  3678                           ;debug.c: 20: LATDbits.LD4 = 0;
  3679                           
  3680                           ;incstack = 0
  3681  001CF4  988C               	bcf	3980,4,c	;volatile
  3682                           
  3683                           ;debug.c: 21: LATDbits.LD4 = 1;
  3684  001CF6  888C               	bsf	3980,4,c	;volatile
  3685                           
  3686                           ;debug.c: 22: LATDbits.LD4 = 0;
  3687  001CF8  988C               	bcf	3980,4,c	;volatile
  3688  001CFA  0012               	return	
  3689  001CFC                     __end_of_blip1:
  3690                           	opt stack 0
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           intcon	equ	0xFF2
  3698                           intcon2	equ	0xFF1
  3699                           postinc0	equ	0xFEE
  3700                           wreg	equ	0xFE8
  3701                           indf1	equ	0xFE7
  3702                           fsr1h	equ	0xFE2
  3703                           fsr1l	equ	0xFE1
  3704                           indf2	equ	0xFDF
  3705                           postinc2	equ	0xFDE
  3706                           postdec2	equ	0xFDD
  3707                           fsr2h	equ	0xFDA
  3708                           fsr2l	equ	0xFD9
  3709                           status	equ	0xFD8
  3710                           
  3711 ;; *************** function _blip *****************
  3712 ;; Defined at:
  3713 ;;		line 11 in file "../src/debug.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;		None               void
  3720 ;; Registers used:
  3721 ;;		None
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3727 ;;      Params:         0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:   10
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text21
  3742  001CFC                     __ptext21:
  3743                           	opt stack 0
  3744  001CFC                     _blip:
  3745                           	opt stack 20
  3746                           
  3747                           ;debug.c: 13: LATDbits.LD2 = 0;
  3748                           
  3749                           ;incstack = 0
  3750  001CFC  948C               	bcf	3980,2,c	;volatile
  3751                           
  3752                           ;debug.c: 14: LATDbits.LD2 = 1;
  3753  001CFE  848C               	bsf	3980,2,c	;volatile
  3754                           
  3755                           ;debug.c: 15: LATDbits.LD2 = 0;
  3756  001D00  948C               	bcf	3980,2,c	;volatile
  3757  001D02  0012               	return	
  3758  001D04                     __end_of_blip:
  3759                           	opt stack 0
  3760                           tblptru	equ	0xFF8
  3761                           tblptrh	equ	0xFF7
  3762                           tblptrl	equ	0xFF6
  3763                           tablat	equ	0xFF5
  3764                           prodh	equ	0xFF4
  3765                           prodl	equ	0xFF3
  3766                           intcon	equ	0xFF2
  3767                           intcon2	equ	0xFF1
  3768                           postinc0	equ	0xFEE
  3769                           wreg	equ	0xFE8
  3770                           indf1	equ	0xFE7
  3771                           fsr1h	equ	0xFE2
  3772                           fsr1l	equ	0xFE1
  3773                           indf2	equ	0xFDF
  3774                           postinc2	equ	0xFDE
  3775                           postdec2	equ	0xFDD
  3776                           fsr2h	equ	0xFDA
  3777                           fsr2l	equ	0xFD9
  3778                           status	equ	0xFD8
  3779                           
  3780 ;; *************** function _ToMainLow_recvmsg *****************
  3781 ;; Defined at:
  3782 ;;		line 112 in file "../src/messages.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  maxlength       1    wreg     unsigned char 
  3785 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3786 ;;		 -> main@msgtype(1), 
  3787 ;;  data            2   14[BANK1 ] PTR void 
  3788 ;;		 -> main@msgbuffer(15), 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      char 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3800 ;;      Params:         0       0       4       0       0
  3801 ;;      Locals:         0       1       0       0       0
  3802 ;;      Temps:          0       0       0       0       0
  3803 ;;      Totals:         0       1       4       0       0
  3804 ;;Total ram usage:        5 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:   12
  3807 ;; This function calls:
  3808 ;;		_recv_msg
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text22
  3815  001A90                     __ptext22:
  3816                           	opt stack 0
  3817  001A90                     _ToMainLow_recvmsg:
  3818                           	opt stack 18
  3819                           
  3820                           ;incstack = 0
  3821                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3822  001A90  0100               	movlb	0	; () banked
  3823  001A92  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3827  001A94  0101               	movlb	1	; () banked
  3828  001A96  0E01               	movlw	high _ToMainLow_MQ
  3829  001A98  0101               	movlb	1	; () banked
  3830  001A9A  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3831  001A9C  0101               	movlb	1	; () banked
  3832  001A9E  0E66               	movlw	low _ToMainLow_MQ
  3833  001AA0  0101               	movlb	1	; () banked
  3834  001AA2  6F00               	movwf	recv_msg@qptr& (0+255),b
  3835  001AA4  C0C4  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3836  001AA8  0101               	movlb	1	; () banked
  3837  001AAA  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3838  001AAE  0101               	movlb	1	; () banked
  3839  001AB0  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3840  001AB4  0101               	movlb	1	; () banked
  3841  001AB6  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3842  001ABA  0101               	movlb	1	; () banked
  3843  001ABC  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3844  001AC0  ECDC  F005         	call	_recv_msg	;wreg free
  3845  001AC4  0012               	return	
  3846  001AC6                     __end_of_ToMainLow_recvmsg:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           intcon2	equ	0xFF1
  3856                           postinc0	equ	0xFEE
  3857                           wreg	equ	0xFE8
  3858                           indf1	equ	0xFE7
  3859                           fsr1h	equ	0xFE2
  3860                           fsr1l	equ	0xFE1
  3861                           indf2	equ	0xFDF
  3862                           postinc2	equ	0xFDE
  3863                           postdec2	equ	0xFDD
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8
  3867                           
  3868 ;; *************** function _ToMainHigh_recvmsg *****************
  3869 ;; Defined at:
  3870 ;;		line 135 in file "../src/messages.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  maxlength       1    wreg     unsigned char 
  3873 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3874 ;;		 -> main@msgtype(1), 
  3875 ;;  data            2   14[BANK1 ] PTR void 
  3876 ;;		 -> main@msgbuffer(15), 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      char 
  3881 ;; Registers used:
  3882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3888 ;;      Params:         0       0       4       0       0
  3889 ;;      Locals:         0       1       0       0       0
  3890 ;;      Temps:          0       0       0       0       0
  3891 ;;      Totals:         0       1       4       0       0
  3892 ;;Total ram usage:        5 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:   12
  3895 ;; This function calls:
  3896 ;;		_recv_msg
  3897 ;; This function is called by:
  3898 ;;		_main
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text23
  3903  001AC6                     __ptext23:
  3904                           	opt stack 0
  3905  001AC6                     _ToMainHigh_recvmsg:
  3906                           	opt stack 18
  3907                           
  3908                           ;incstack = 0
  3909                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3910  001AC6  0100               	movlb	0	; () banked
  3911  001AC8  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3915  001ACA  0102               	movlb	2	; () banked
  3916  001ACC  0E02               	movlw	high _ToMainHigh_MQ
  3917  001ACE  0101               	movlb	1	; () banked
  3918  001AD0  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3919  001AD2  0102               	movlb	2	; () banked
  3920  001AD4  0E57               	movlw	low _ToMainHigh_MQ
  3921  001AD6  0101               	movlb	1	; () banked
  3922  001AD8  6F00               	movwf	recv_msg@qptr& (0+255),b
  3923  001ADA  C0C4  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3924  001ADE  0101               	movlb	1	; () banked
  3925  001AE0  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3926  001AE4  0101               	movlb	1	; () banked
  3927  001AE6  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3928  001AEA  0101               	movlb	1	; () banked
  3929  001AEC  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3930  001AF0  0101               	movlb	1	; () banked
  3931  001AF2  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3932  001AF6  ECDC  F005         	call	_recv_msg	;wreg free
  3933  001AFA  0012               	return	
  3934  001AFC                     __end_of_ToMainHigh_recvmsg:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           prodh	equ	0xFF4
  3941                           prodl	equ	0xFF3
  3942                           intcon	equ	0xFF2
  3943                           intcon2	equ	0xFF1
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           indf1	equ	0xFE7
  3947                           fsr1h	equ	0xFE2
  3948                           fsr1l	equ	0xFE1
  3949                           indf2	equ	0xFDF
  3950                           postinc2	equ	0xFDE
  3951                           postdec2	equ	0xFDD
  3952                           fsr2h	equ	0xFDA
  3953                           fsr2l	equ	0xFD9
  3954                           status	equ	0xFD8
  3955                           
  3956 ;; *************** function _recv_msg *****************
  3957 ;; Defined at:
  3958 ;;		line 63 in file "../src/messages.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3961 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3962 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3963 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3964 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  3965 ;;  data            2    5[BANK1 ] PTR void 
  3966 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3969 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3970 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3971 ;;  tlength         2    8[BANK1 ] unsigned int 
  3972 ;;  slot            1    7[BANK1 ] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      char 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3982 ;;      Params:         0       0       7       0       0
  3983 ;;      Locals:         0       0       5       0       0
  3984 ;;      Temps:          0       2       0       0       0
  3985 ;;      Totals:         0       2      12       0       0
  3986 ;;Total ram usage:       14 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:   11
  3989 ;; This function calls:
  3990 ;;		___awmod
  3991 ;;		_memcpy
  3992 ;; This function is called by:
  3993 ;;		_ToMainLow_recvmsg
  3994 ;;		_ToMainHigh_recvmsg
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text24
  3999  000BB8                     __ptext24:
  4000                           	opt stack 0
  4001  000BB8                     _recv_msg:
  4002                           	opt stack 18
  4003                           
  4004                           ;messages.c: 64: unsigned char slot;
  4005                           ;messages.c: 68: msg *qmsg;
  4006                           ;messages.c: 69: size_t tlength;
  4007                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4008                           
  4009                           ;incstack = 0
  4010  000BB8  0101               	movlb	1	; () banked
  4011  000BBA  EE20 F056          	lfsr	2,86
  4012  000BBE  0101               	movlb	1	; () banked
  4013  000BC0  5100               	movf	recv_msg@qptr& (0+255),w,b
  4014  000BC2  26D9               	addwf	fsr2l,f,c
  4015  000BC4  0101               	movlb	1	; () banked
  4016  000BC6  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4017  000BC8  22DA               	addwfc	fsr2h,f,c
  4018  000BCA  50DF               	movf	indf2,w,c
  4019  000BCC  0101               	movlb	1	; () banked
  4020  000BCE  6F07               	movwf	recv_msg@slot& (0+255),b
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4024  000BD0  0101               	movlb	1	; () banked
  4025  000BD2  5107               	movf	recv_msg@slot& (0+255),w,b
  4026  000BD4  0D11               	mullw	17
  4027  000BD6  50F3               	movf	prodl,w,c
  4028  000BD8  0101               	movlb	1	; () banked
  4029  000BDA  2500               	addwf	recv_msg@qptr& (0+255),w,b
  4030  000BDC  0101               	movlb	1	; () banked
  4031  000BDE  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  4032  000BE0  50F4               	movf	prodh,w,c
  4033  000BE2  0101               	movlb	1	; () banked
  4034  000BE4  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4035  000BE6  0101               	movlb	1	; () banked
  4036  000BE8  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4037                           
  4038                           ; BSR set to: 1
  4039                           ;messages.c: 74: if (qmsg->full == 1) {
  4040  000BEA  0E01               	movlw	1
  4041  000BEC  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4042  000BF0  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4043  000BF4  62DF               	cpfseq	indf2,c
  4044  000BF6  D07F               	goto	l3700
  4045                           
  4046                           ; BSR set to: 1
  4047                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4048  000BF8  0101               	movlb	1	; () banked
  4049  000BFA  EE20 F001          	lfsr	2,1
  4050  000BFE  0101               	movlb	1	; () banked
  4051  000C00  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4052  000C02  26D9               	addwf	fsr2l,f,c
  4053  000C04  0101               	movlb	1	; () banked
  4054  000C06  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4055  000C08  22DA               	addwfc	fsr2h,f,c
  4056  000C0A  50DF               	movf	indf2,w,c
  4057  000C0C  0101               	movlb	1	; () banked
  4058  000C0E  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  4059  000C10  B0D8               	btfsc	status,0,c
  4060  000C12  D002               	goto	l3684
  4061                           
  4062                           ; BSR set to: 1
  4063                           ;messages.c: 77: return (-3);
  4064  000C14  0EFD               	movlw	253
  4065  000C16  0012               	return	
  4066  000C18                     l3684:
  4067                           
  4068                           ; BSR set to: 1
  4069                           ;messages.c: 78: }
  4070                           ;messages.c: 80: tlength = qmsg->length;
  4071  000C18  0101               	movlb	1	; () banked
  4072  000C1A  EE20 F001          	lfsr	2,1
  4073  000C1E  0101               	movlb	1	; () banked
  4074  000C20  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4075  000C22  26D9               	addwf	fsr2l,f,c
  4076  000C24  0101               	movlb	1	; () banked
  4077  000C26  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4078  000C28  22DA               	addwfc	fsr2h,f,c
  4079  000C2A  50DF               	movf	indf2,w,c
  4080  000C2C  0100               	movlb	0	; () banked
  4081  000C2E  6FC2               	movwf	??_recv_msg& (0+255),b
  4082  000C30  0100               	movlb	0	; () banked
  4083  000C32  51C2               	movf	??_recv_msg& (0+255),w,b
  4084  000C34  0101               	movlb	1	; () banked
  4085  000C36  6F08               	movwf	recv_msg@tlength& (0+255),b
  4086  000C38  0101               	movlb	1	; () banked
  4087  000C3A  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4091  000C3C  0101               	movlb	1	; () banked
  4092  000C3E  0100               	movlb	0	; () banked
  4093  000C40  C106  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  4094  000C44  0101               	movlb	1	; () banked
  4095  000C46  0100               	movlb	0	; () banked
  4096  000C48  C105  F0B8         	movff	recv_msg@data,memcpy@d1
  4097  000C4C  0E03               	movlw	3
  4098  000C4E  0101               	movlb	1	; () banked
  4099  000C50  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  4100  000C52  0100               	movlb	0	; () banked
  4101  000C54  6FC2               	movwf	??_recv_msg& (0+255),b
  4102  000C56  0E00               	movlw	0
  4103  000C58  0101               	movlb	1	; () banked
  4104  000C5A  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4105  000C5C  0100               	movlb	0	; () banked
  4106  000C5E  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  4107  000C60  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  4108  000C64  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  4109  000C68  C108  F0BC         	movff	recv_msg@tlength,memcpy@n
  4110  000C6C  C109  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  4111  000C70  EC93  F00C         	call	_memcpy	;wreg free
  4112                           
  4113                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4114  000C74  0101               	movlb	1	; () banked
  4115  000C76  EE20 F056          	lfsr	2,86
  4116  000C7A  0101               	movlb	1	; () banked
  4117  000C7C  5100               	movf	recv_msg@qptr& (0+255),w,b
  4118  000C7E  26D9               	addwf	fsr2l,f,c
  4119  000C80  0101               	movlb	1	; () banked
  4120  000C82  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4121  000C84  22DA               	addwfc	fsr2h,f,c
  4122  000C86  0101               	movlb	1	; () banked
  4123  000C88  EE10 F056          	lfsr	1,86
  4124  000C8C  0101               	movlb	1	; () banked
  4125  000C8E  5100               	movf	recv_msg@qptr& (0+255),w,b
  4126  000C90  26E1               	addwf	fsr1l,f,c
  4127  000C92  0101               	movlb	1	; () banked
  4128  000C94  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4129  000C96  22E2               	addwfc	fsr1h,f,c
  4130  000C98  50E7               	movf	indf1,w,c
  4131  000C9A  0100               	movlb	0	; () banked
  4132  000C9C  6FC2               	movwf	??_recv_msg& (0+255),b
  4133  000C9E  0E01               	movlw	1
  4134  000CA0  0100               	movlb	0	; () banked
  4135  000CA2  25C2               	addwf	??_recv_msg& (0+255),w,b
  4136  000CA4  0100               	movlb	0	; () banked
  4137  000CA6  6FB8               	movwf	___awmod@dividend& (0+255),b
  4138  000CA8  0100               	movlb	0	; () banked
  4139  000CAA  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  4140  000CAC  0E00               	movlw	0
  4141  000CAE  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4142  000CB0  0E00               	movlw	0
  4143  000CB2  0100               	movlb	0	; () banked
  4144  000CB4  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  4145  000CB6  0E05               	movlw	5
  4146  000CB8  0100               	movlb	0	; () banked
  4147  000CBA  6FBA               	movwf	___awmod@divisor& (0+255),b
  4148  000CBC  EC03  F009         	call	___awmod	;wreg free
  4149  000CC0  0100               	movlb	0	; () banked
  4150  000CC2  51B8               	movf	?___awmod& (0+255),w,b
  4151  000CC4  6EDF               	movwf	indf2,c
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4155  000CC6  0101               	movlb	1	; () banked
  4156  000CC8  EE20 F002          	lfsr	2,2
  4157  000CCC  0101               	movlb	1	; () banked
  4158  000CCE  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4159  000CD0  26D9               	addwf	fsr2l,f,c
  4160  000CD2  0101               	movlb	1	; () banked
  4161  000CD4  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4162  000CD6  22DA               	addwfc	fsr2h,f,c
  4163  000CD8  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  4164  000CDC  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4165  000CE0  CFDF FFE7          	movff	indf2,indf1
  4166                           
  4167                           ; BSR set to: 1
  4168                           ;messages.c: 91: qmsg->full = 0;
  4169  000CE4  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4170  000CE8  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4171  000CEC  0E00               	movlw	0
  4172  000CEE  6EDF               	movwf	indf2,c
  4173                           
  4174                           ; BSR set to: 1
  4175                           ;messages.c: 92: return (tlength);
  4176  000CF0  0101               	movlb	1	; () banked
  4177  000CF2  5108               	movf	recv_msg@tlength& (0+255),w,b
  4178  000CF4  0012               	return	
  4179  000CF6                     l3700:
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;messages.c: 94: return (-4);
  4183  000CF6  0EFC               	movlw	252
  4184  000CF8  0012               	return	
  4185  000CFA                     __end_of_recv_msg:
  4186                           	opt stack 0
  4187                           tblptru	equ	0xFF8
  4188                           tblptrh	equ	0xFF7
  4189                           tblptrl	equ	0xFF6
  4190                           tablat	equ	0xFF5
  4191                           prodh	equ	0xFF4
  4192                           prodl	equ	0xFF3
  4193                           intcon	equ	0xFF2
  4194                           intcon2	equ	0xFF1
  4195                           postinc0	equ	0xFEE
  4196                           wreg	equ	0xFE8
  4197                           indf1	equ	0xFE7
  4198                           fsr1h	equ	0xFE2
  4199                           fsr1l	equ	0xFE1
  4200                           indf2	equ	0xFDF
  4201                           postinc2	equ	0xFDE
  4202                           postdec2	equ	0xFDD
  4203                           fsr2h	equ	0xFDA
  4204                           fsr2l	equ	0xFD9
  4205                           status	equ	0xFD8
  4206                           
  4207 ;; *************** function _memcpy *****************
  4208 ;; Defined at:
  4209 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  d1              2   56[BANK0 ] PTR void 
  4212 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4213 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  4214 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  4215 ;;  s1              2   58[BANK0 ] PTR const void 
  4216 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4217 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4218 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  4219 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4220 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4221 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  4222 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  4223 ;;  n               2   60[BANK0 ] unsigned int 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  4226 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4227 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4228 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  4229 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4230 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4231 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  4232 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  4233 ;;  d               2   62[BANK0 ] PTR unsigned char 
  4234 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4235 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  4236 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  2   56[BANK0 ] PTR void 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4246 ;;      Params:         0       6       0       0       0
  4247 ;;      Locals:         0       4       0       0       0
  4248 ;;      Temps:          0       0       0       0       0
  4249 ;;      Totals:         0      10       0       0       0
  4250 ;;Total ram usage:       10 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:   10
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_send_msg
  4257 ;;		_recv_msg
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text25
  4262  001926                     __ptext25:
  4263                           	opt stack 0
  4264  001926                     _memcpy:
  4265                           	opt stack 17
  4266                           
  4267                           ; BSR set to: 1
  4268                           ;incstack = 0
  4269  001926  0100               	movlb	0	; () banked
  4270  001928  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4271  00192C  0100               	movlb	0	; () banked
  4272  00192E  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4273  001932  0100               	movlb	0	; () banked
  4274  001934  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4275  001938  0100               	movlb	0	; () banked
  4276  00193A  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4277  00193E  D010               	goto	l3486
  4278  001940                     l3480:
  4279                           
  4280                           ; BSR set to: 0
  4281  001940  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4282  001944  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4283  001948  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4284  00194C  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4285  001950  CFDF FFE7          	movff	indf2,indf1
  4286                           
  4287                           ; BSR set to: 0
  4288  001954  0100               	movlb	0	; () banked
  4289  001956  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4290  001958  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4291                           
  4292                           ; BSR set to: 0
  4293  00195A  0100               	movlb	0	; () banked
  4294  00195C  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4295  00195E  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4296  001960                     l3486:
  4297                           
  4298                           ; BSR set to: 0
  4299  001960  0100               	movlb	0	; () banked
  4300  001962  07BC               	decf	memcpy@n& (0+255),f,b
  4301  001964  A0D8               	btfss	status,0,c
  4302  001966  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4303  001968  0100               	movlb	0	; () banked
  4304  00196A  29BC               	incf	memcpy@n& (0+255),w,b
  4305  00196C  B4D8               	btfsc	status,2,c
  4306  00196E  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4307  001970  B4D8               	btfsc	status,2,c
  4308                           
  4309                           ; BSR set to: 0
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;	Return value of _memcpy is never used
  4313  001972  0012               	return	
  4314  001974  D7E5               	goto	l3480
  4315  001976                     __end_of_memcpy:
  4316                           	opt stack 0
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           intcon	equ	0xFF2
  4324                           intcon2	equ	0xFF1
  4325                           postinc0	equ	0xFEE
  4326                           wreg	equ	0xFE8
  4327                           indf1	equ	0xFE7
  4328                           fsr1h	equ	0xFE2
  4329                           fsr1l	equ	0xFE1
  4330                           indf2	equ	0xFDF
  4331                           postinc2	equ	0xFDE
  4332                           postdec2	equ	0xFDD
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function ___awmod *****************
  4338 ;; Defined at:
  4339 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  dividend        2   56[BANK0 ] int 
  4342 ;;  divisor         2   58[BANK0 ] int 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  sign            1   61[BANK0 ] unsigned char 
  4345 ;;  counter         1   60[BANK0 ] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  2   56[BANK0 ] int 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0, prodl
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4355 ;;      Params:         0       4       0       0       0
  4356 ;;      Locals:         0       2       0       0       0
  4357 ;;      Temps:          0       0       0       0       0
  4358 ;;      Totals:         0       6       0       0       0
  4359 ;;Total ram usage:        6 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:   10
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_send_msg
  4366 ;;		_recv_msg
  4367 ;;		i1_send_msg
  4368 ;;		i2_send_msg
  4369 ;;		i1_recv_msg
  4370 ;;		i2_recv_msg
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text26
  4375  001206                     __ptext26:
  4376                           	opt stack 0
  4377  001206                     ___awmod:
  4378                           	opt stack 17
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;incstack = 0
  4382  001206  0E00               	movlw	0
  4383  001208  0100               	movlb	0	; () banked
  4384  00120A  6FBD               	movwf	___awmod@sign& (0+255),b
  4385                           
  4386                           ; BSR set to: 0
  4387  00120C  0100               	movlb	0	; () banked
  4388  00120E  51B9               	movf	(___awmod@dividend+1)& (0+255),w,b
  4389  001210  0A80               	xorlw	128
  4390  001212  6EF3               	movwf	prodl,c
  4391  001214  0E80               	movlw	128
  4392  001216  5CF3               	subwf	prodl,w,c
  4393  001218  0E00               	movlw	0
  4394  00121A  B4D8               	btfsc	status,2,c
  4395  00121C  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4396  00121E  B0D8               	btfsc	status,0,c
  4397  001220  D009               	goto	l3496
  4398                           
  4399                           ; BSR set to: 0
  4400  001222  0100               	movlb	0	; () banked
  4401  001224  6DB8               	negf	___awmod@dividend& (0+255),b
  4402  001226  0100               	movlb	0	; () banked
  4403  001228  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4404  00122A  B0D8               	btfsc	status,0,c
  4405  00122C  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4406                           
  4407                           ; BSR set to: 0
  4408  00122E  0E01               	movlw	1
  4409  001230  0100               	movlb	0	; () banked
  4410  001232  6FBD               	movwf	___awmod@sign& (0+255),b
  4411  001234                     l3496:
  4412                           
  4413                           ; BSR set to: 0
  4414  001234  0100               	movlb	0	; () banked
  4415  001236  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4416  001238  0A80               	xorlw	128
  4417  00123A  6EF3               	movwf	prodl,c
  4418  00123C  0E80               	movlw	128
  4419  00123E  5CF3               	subwf	prodl,w,c
  4420  001240  0E00               	movlw	0
  4421  001242  B4D8               	btfsc	status,2,c
  4422  001244  5DBA               	subwf	___awmod@divisor& (0+255),w,b
  4423  001246  B0D8               	btfsc	status,0,c
  4424  001248  D006               	goto	l3500
  4425                           
  4426                           ; BSR set to: 0
  4427  00124A  0100               	movlb	0	; () banked
  4428  00124C  6DBA               	negf	___awmod@divisor& (0+255),b
  4429  00124E  0100               	movlb	0	; () banked
  4430  001250  1FBB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4431  001252  B0D8               	btfsc	status,0,c
  4432  001254  2BBB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4433  001256                     l3500:
  4434                           
  4435                           ; BSR set to: 0
  4436  001256  0100               	movlb	0	; () banked
  4437  001258  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4438  00125A  11BA               	iorwf	___awmod@divisor& (0+255),w,b
  4439  00125C  B4D8               	btfsc	status,2,c
  4440  00125E  D026               	goto	l3516
  4441                           
  4442                           ; BSR set to: 0
  4443  001260  0E01               	movlw	1
  4444  001262  0100               	movlb	0	; () banked
  4445  001264  6FBC               	movwf	___awmod@counter& (0+255),b
  4446  001266  D006               	goto	l3506
  4447  001268                     l3504:
  4448                           
  4449                           ; BSR set to: 0
  4450  001268  0100               	movlb	0	; () banked
  4451  00126A  90D8               	bcf	status,0,c
  4452  00126C  37BA               	rlcf	___awmod@divisor& (0+255),f,b
  4453  00126E  37BB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4454  001270  0100               	movlb	0	; () banked
  4455  001272  2BBC               	incf	___awmod@counter& (0+255),f,b
  4456  001274                     l3506:
  4457                           
  4458                           ; BSR set to: 0
  4459  001274  0100               	movlb	0	; () banked
  4460  001276  AFBB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4461  001278  D7F7               	goto	l3504
  4462  00127A                     l3508:
  4463                           
  4464                           ; BSR set to: 0
  4465  00127A  0100               	movlb	0	; () banked
  4466  00127C  51BA               	movf	___awmod@divisor& (0+255),w,b
  4467  00127E  0100               	movlb	0	; () banked
  4468  001280  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4469  001282  0100               	movlb	0	; () banked
  4470  001284  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4471  001286  0100               	movlb	0	; () banked
  4472  001288  59B9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4473  00128A  A0D8               	btfss	status,0,c
  4474  00128C  D008               	goto	l3512
  4475                           
  4476                           ; BSR set to: 0
  4477  00128E  0100               	movlb	0	; () banked
  4478  001290  51BA               	movf	___awmod@divisor& (0+255),w,b
  4479  001292  0100               	movlb	0	; () banked
  4480  001294  5FB8               	subwf	___awmod@dividend& (0+255),f,b
  4481  001296  0100               	movlb	0	; () banked
  4482  001298  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4483  00129A  0100               	movlb	0	; () banked
  4484  00129C  5BB9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4485  00129E                     l3512:
  4486                           
  4487                           ; BSR set to: 0
  4488  00129E  0100               	movlb	0	; () banked
  4489  0012A0  90D8               	bcf	status,0,c
  4490  0012A2  33BB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4491  0012A4  33BA               	rrcf	___awmod@divisor& (0+255),f,b
  4492                           
  4493                           ; BSR set to: 0
  4494  0012A6  0100               	movlb	0	; () banked
  4495  0012A8  2FBC               	decfsz	___awmod@counter& (0+255),f,b
  4496  0012AA  D7E7               	goto	l3508
  4497  0012AC                     l3516:
  4498                           
  4499                           ; BSR set to: 0
  4500  0012AC  0100               	movlb	0	; () banked
  4501  0012AE  51BD               	movf	___awmod@sign& (0+255),w,b
  4502  0012B0  B4D8               	btfsc	status,2,c
  4503  0012B2  D006               	goto	l3520
  4504                           
  4505                           ; BSR set to: 0
  4506  0012B4  0100               	movlb	0	; () banked
  4507  0012B6  6DB8               	negf	___awmod@dividend& (0+255),b
  4508  0012B8  0100               	movlb	0	; () banked
  4509  0012BA  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4510  0012BC  B0D8               	btfsc	status,0,c
  4511  0012BE  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4512  0012C0                     l3520:
  4513                           
  4514                           ; BSR set to: 0
  4515  0012C0  C0B8  F0B8         	movff	___awmod@dividend,?___awmod
  4516  0012C4  C0B9  F0B9         	movff	___awmod@dividend+1,?___awmod+1
  4517  0012C8  0012               	return	
  4518  0012CA                     __end_of___awmod:
  4519                           	opt stack 0
  4520                           tblptru	equ	0xFF8
  4521                           tblptrh	equ	0xFF7
  4522                           tblptrl	equ	0xFF6
  4523                           tablat	equ	0xFF5
  4524                           prodh	equ	0xFF4
  4525                           prodl	equ	0xFF3
  4526                           intcon	equ	0xFF2
  4527                           intcon2	equ	0xFF1
  4528                           postinc0	equ	0xFEE
  4529                           wreg	equ	0xFE8
  4530                           indf1	equ	0xFE7
  4531                           fsr1h	equ	0xFE2
  4532                           fsr1l	equ	0xFE1
  4533                           indf2	equ	0xFDF
  4534                           postinc2	equ	0xFDE
  4535                           postdec2	equ	0xFDD
  4536                           fsr2h	equ	0xFDA
  4537                           fsr2l	equ	0xFD9
  4538                           status	equ	0xFD8
  4539                           
  4540 ;; *************** function _InterruptHandlerLow *****************
  4541 ;; Defined at:
  4542 ;;		line 133 in file "../src/interrupts.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  sendy_stuff    14   71[COMRAM] unsigned char [14]
  4547 ;; Return value:  Size  Location     Type
  4548 ;;		None               void
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4556 ;;      Params:         0       0       0       0       0
  4557 ;;      Locals:        14       0       0       0       0
  4558 ;;      Temps:         17       0       0       0       0
  4559 ;;      Totals:        31       0       0       0       0
  4560 ;;Total ram usage:       31 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    9
  4563 ;; This function calls:
  4564 ;;		_ToMainLow_sendmsg
  4565 ;;		_blink1
  4566 ;;		_uart_receive_interrupt_handler
  4567 ;;		_uart_transmit_interrupt_handler
  4568 ;;		i1_blip1
  4569 ;;		i1_blip2
  4570 ;;		i1_blip3
  4571 ;; This function is called by:
  4572 ;;		Interrupt level 1
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	intcodelo
  4577  000018                     __pintcodelo:
  4578                           	opt stack 0
  4579  000018                     _InterruptHandlerLow:
  4580                           	opt stack 16
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;incstack = 0
  4584  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4585  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4586  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4587  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4588  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4589  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4590  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4591  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4592  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4593  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4594  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4595  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4596  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4597  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4598  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4599  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4600  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4601                           
  4602                           ;interrupts.c: 134: static unsigned long encoder_left=0;
  4603                           ;interrupts.c: 135: static unsigned long encoder_right=0;
  4604                           ;interrupts.c: 138: if (PIR1bits.TMR1IF) {
  4605  00005C  A09E               	btfss	3998,0,c	;volatile
  4606  00005E  D00C               	goto	i1l4118
  4607                           
  4608                           ;interrupts.c: 139: PIR1bits.TMR1IF = 0;
  4609  000060  909E               	bcf	3998,0,c	;volatile
  4610                           
  4611                           ;interrupts.c: 141: blip1();
  4612  000062  EC8A  F00E         	call	i1_blip1	;wreg free
  4613                           
  4614                           ;interrupts.c: 143: encoder_right++;
  4615  000066  0E01               	movlw	1
  4616  000068  266C               	addwf	InterruptHandlerLow@encoder_right,f,c
  4617  00006A  0E00               	movlw	0
  4618  00006C  226D               	addwfc	InterruptHandlerLow@encoder_right+1,f,c
  4619  00006E  226E               	addwfc	InterruptHandlerLow@encoder_right+2,f,c
  4620  000070  226F               	addwfc	InterruptHandlerLow@encoder_right+3,f,c
  4621                           
  4622                           ;interrupts.c: 145: TMR1L = 0x35;
  4623  000072  0E35               	movlw	53
  4624  000074  6ECE               	movwf	4046,c	;volatile
  4625                           
  4626                           ;interrupts.c: 146: TMR1H = 0xff;
  4627  000076  68CF               	setf	4047,c	;volatile
  4628  000078                     i1l4118:
  4629                           
  4630                           ;interrupts.c: 149: }
  4631                           ;interrupts.c: 152: if (INTCONbits.TMR0IF) {
  4632  000078  A4F2               	btfss	intcon,2,c	;volatile
  4633  00007A  D00D               	goto	i1l4130
  4634                           
  4635                           ;interrupts.c: 153: INTCONbits.TMR0IF = 0;
  4636  00007C  94F2               	bcf	intcon,2,c	;volatile
  4637                           
  4638                           ;interrupts.c: 155: blip2();
  4639  00007E  EC86  F00E         	call	i1_blip2	;wreg free
  4640                           
  4641                           ;interrupts.c: 157: encoder_left++;
  4642  000082  0E01               	movlw	1
  4643  000084  2668               	addwf	InterruptHandlerLow@encoder_left,f,c
  4644  000086  0E00               	movlw	0
  4645  000088  2269               	addwfc	InterruptHandlerLow@encoder_left+1,f,c
  4646  00008A  226A               	addwfc	InterruptHandlerLow@encoder_left+2,f,c
  4647  00008C  226B               	addwfc	InterruptHandlerLow@encoder_left+3,f,c
  4648                           
  4649                           ;interrupts.c: 159: TMR0L = 0x35;
  4650  00008E  0E35               	movlw	53
  4651  000090  6ED6               	movwf	4054,c	;volatile
  4652                           
  4653                           ;interrupts.c: 160: blink1();
  4654  000092  EC93  F00E         	call	_blink1	;wreg free
  4655  000096                     i1l4130:
  4656                           
  4657                           ;interrupts.c: 163: }
  4658                           ;interrupts.c: 166: if (PIR1bits.RCIF) {
  4659  000096  AA9E               	btfss	3998,5,c	;volatile
  4660  000098  D003               	goto	i1l4136
  4661                           
  4662                           ;interrupts.c: 167: PIR1bits.RCIF = 0;
  4663  00009A  9A9E               	bcf	3998,5,c	;volatile
  4664                           
  4665                           ;interrupts.c: 171: uart_receive_interrupt_handler();
  4666  00009C  EC17  F005         	call	_uart_receive_interrupt_handler	;wreg free
  4667  0000A0                     i1l4136:
  4668                           
  4669                           ;interrupts.c: 172: }
  4670                           ;interrupts.c: 176: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4671  0000A0  B89E               	btfsc	3998,4,c	;volatile
  4672  0000A2  A89D               	btfss	3997,4,c	;volatile
  4673  0000A4  D002               	goto	i1l4142
  4674                           
  4675                           ;interrupts.c: 177: {
  4676                           ;interrupts.c: 181: uart_transmit_interrupt_handler();
  4677  0000A6  ECCD  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4678  0000AA                     i1l4142:
  4679                           
  4680                           ;interrupts.c: 185: }
  4681                           ;interrupts.c: 188: if( PIR1bits.ADIF )
  4682  0000AA  AC9E               	btfss	3998,6,c	;volatile
  4683  0000AC  D01C               	goto	i1l69
  4684                           
  4685                           ;interrupts.c: 189: {
  4686                           ;interrupts.c: 190: PIR1bits.ADIF = 0;
  4687  0000AE  9C9E               	bcf	3998,6,c	;volatile
  4688                           
  4689                           ;interrupts.c: 192: unsigned char sendy_stuff[14];
  4690                           ;interrupts.c: 195: sendy_stuff[2] = encoder_left >> 24;
  4691  0000B0  C06B  F04A         	movff	InterruptHandlerLow@encoder_left+3,InterruptHandlerLow@sendy_stuff+2
  4692                           
  4693                           ;interrupts.c: 196: sendy_stuff[3] = encoder_left >> 16;
  4694  0000B4  C06A  F04B         	movff	InterruptHandlerLow@encoder_left+2,InterruptHandlerLow@sendy_stuff+3
  4695                           
  4696                           ;interrupts.c: 197: sendy_stuff[4] = encoder_left >> 8;
  4697  0000B8  C069  F04C         	movff	InterruptHandlerLow@encoder_left+1,InterruptHandlerLow@sendy_stuff+4
  4698                           
  4699                           ;interrupts.c: 198: sendy_stuff[5] = encoder_left;
  4700  0000BC  C068  F04D         	movff	InterruptHandlerLow@encoder_left,InterruptHandlerLow@sendy_stuff+5
  4701                           
  4702                           ;interrupts.c: 199: sendy_stuff[6] = encoder_right >> 24;
  4703  0000C0  C06F  F04E         	movff	InterruptHandlerLow@encoder_right+3,InterruptHandlerLow@sendy_stuff+6
  4704                           
  4705                           ;interrupts.c: 200: sendy_stuff[7] = encoder_right >> 16;
  4706  0000C4  C06E  F04F         	movff	InterruptHandlerLow@encoder_right+2,InterruptHandlerLow@sendy_stuff+7
  4707                           
  4708                           ;interrupts.c: 201: sendy_stuff[8] = encoder_right >> 8;
  4709  0000C8  C06D  F050         	movff	InterruptHandlerLow@encoder_right+1,InterruptHandlerLow@sendy_stuff+8
  4710                           
  4711                           ;interrupts.c: 202: sendy_stuff[9] = encoder_right;
  4712  0000CC  C06C  F051         	movff	InterruptHandlerLow@encoder_right,InterruptHandlerLow@sendy_stuff+9
  4713                           
  4714                           ;interrupts.c: 204: ToMainLow_sendmsg(14,47,(void *) &sendy_stuff );
  4715  0000D0  0E2F               	movlw	47
  4716  0000D2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4717  0000D4  0E00               	movlw	high InterruptHandlerLow@sendy_stuff
  4718  0000D6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4719  0000D8  0E48               	movlw	low InterruptHandlerLow@sendy_stuff
  4720  0000DA  6E18               	movwf	ToMainLow_sendmsg@data,c
  4721  0000DC  0E0E               	movlw	14
  4722  0000DE  EC1F  F00E         	call	_ToMainLow_sendmsg
  4723                           
  4724                           ;interrupts.c: 206: blip3();
  4725  0000E2  EC82  F00E         	call	i1_blip3	;wreg free
  4726  0000E6                     i1l69:
  4727  0000E6  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4728  0000EA  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4729  0000EE  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4730  0000F2  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4731  0000F6  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4732  0000FA  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4733  0000FE  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4734  000102  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4735  000106  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4736  00010A  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4737  00010E  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4738  000112  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4739  000116  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4740  00011A  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4741  00011E  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4742  000122  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4743  000126  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4744  00012A  0010               	retfie	
  4745  00012C                     __end_of_InterruptHandlerLow:
  4746                           	opt stack 0
  4747                           pclatu	equ	0xFFB
  4748                           pclath	equ	0xFFA
  4749                           tblptru	equ	0xFF8
  4750                           tblptrh	equ	0xFF7
  4751                           tblptrl	equ	0xFF6
  4752                           tablat	equ	0xFF5
  4753                           prodh	equ	0xFF4
  4754                           prodl	equ	0xFF3
  4755                           intcon	equ	0xFF2
  4756                           intcon2	equ	0xFF1
  4757                           postinc0	equ	0xFEE
  4758                           fsr0h	equ	0xFEA
  4759                           fsr0l	equ	0xFE9
  4760                           wreg	equ	0xFE8
  4761                           indf1	equ	0xFE7
  4762                           fsr1h	equ	0xFE2
  4763                           fsr1l	equ	0xFE1
  4764                           bsr	equ	0xFE0
  4765                           indf2	equ	0xFDF
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function i1_blip3 *****************
  4773 ;; Defined at:
  4774 ;;		line 32 in file "../src/debug.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;		None               void
  4781 ;; Registers used:
  4782 ;;		None
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4788 ;;      Params:         0       0       0       0       0
  4789 ;;      Locals:         0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0
  4791 ;;      Totals:         0       0       0       0       0
  4792 ;;Total ram usage:        0 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    5
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_InterruptHandlerLow
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text28
  4803  001D04                     __ptext28:
  4804                           	opt stack 0
  4805  001D04                     i1_blip3:
  4806                           	opt stack 19
  4807                           
  4808                           ;debug.c: 34: LATDbits.LD6 = 0;
  4809                           
  4810                           ;incstack = 0
  4811  001D04  9C8C               	bcf	3980,6,c	;volatile
  4812                           
  4813                           ;debug.c: 35: LATDbits.LD6 = 1;
  4814  001D06  8C8C               	bsf	3980,6,c	;volatile
  4815                           
  4816                           ;debug.c: 36: LATDbits.LD6 = 0;
  4817  001D08  9C8C               	bcf	3980,6,c	;volatile
  4818  001D0A  0012               	return	
  4819  001D0C                     __end_ofi1_blip3:
  4820                           	opt stack 0
  4821                           pclatu	equ	0xFFB
  4822                           pclath	equ	0xFFA
  4823                           tblptru	equ	0xFF8
  4824                           tblptrh	equ	0xFF7
  4825                           tblptrl	equ	0xFF6
  4826                           tablat	equ	0xFF5
  4827                           prodh	equ	0xFF4
  4828                           prodl	equ	0xFF3
  4829                           intcon	equ	0xFF2
  4830                           intcon2	equ	0xFF1
  4831                           postinc0	equ	0xFEE
  4832                           fsr0h	equ	0xFEA
  4833                           fsr0l	equ	0xFE9
  4834                           wreg	equ	0xFE8
  4835                           indf1	equ	0xFE7
  4836                           fsr1h	equ	0xFE2
  4837                           fsr1l	equ	0xFE1
  4838                           bsr	equ	0xFE0
  4839                           indf2	equ	0xFDF
  4840                           postinc2	equ	0xFDE
  4841                           postdec2	equ	0xFDD
  4842                           fsr2h	equ	0xFDA
  4843                           fsr2l	equ	0xFD9
  4844                           status	equ	0xFD8
  4845                           
  4846 ;; *************** function i1_blip2 *****************
  4847 ;; Defined at:
  4848 ;;		line 25 in file "../src/debug.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;		None               void
  4855 ;; Registers used:
  4856 ;;		None
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4862 ;;      Params:         0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0
  4865 ;;      Totals:         0       0       0       0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    5
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_InterruptHandlerLow
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text29
  4877  001D0C                     __ptext29:
  4878                           	opt stack 0
  4879  001D0C                     i1_blip2:
  4880                           	opt stack 19
  4881                           
  4882                           ;debug.c: 27: LATDbits.LD5 = 0;
  4883                           
  4884                           ;incstack = 0
  4885  001D0C  9A8C               	bcf	3980,5,c	;volatile
  4886                           
  4887                           ;debug.c: 28: LATDbits.LD5 = 1;
  4888  001D0E  8A8C               	bsf	3980,5,c	;volatile
  4889                           
  4890                           ;debug.c: 29: LATDbits.LD5 = 0;
  4891  001D10  9A8C               	bcf	3980,5,c	;volatile
  4892  001D12  0012               	return	
  4893  001D14                     __end_ofi1_blip2:
  4894                           	opt stack 0
  4895                           pclatu	equ	0xFFB
  4896                           pclath	equ	0xFFA
  4897                           tblptru	equ	0xFF8
  4898                           tblptrh	equ	0xFF7
  4899                           tblptrl	equ	0xFF6
  4900                           tablat	equ	0xFF5
  4901                           prodh	equ	0xFF4
  4902                           prodl	equ	0xFF3
  4903                           intcon	equ	0xFF2
  4904                           intcon2	equ	0xFF1
  4905                           postinc0	equ	0xFEE
  4906                           fsr0h	equ	0xFEA
  4907                           fsr0l	equ	0xFE9
  4908                           wreg	equ	0xFE8
  4909                           indf1	equ	0xFE7
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           bsr	equ	0xFE0
  4913                           indf2	equ	0xFDF
  4914                           postinc2	equ	0xFDE
  4915                           postdec2	equ	0xFDD
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function i1_blip1 *****************
  4921 ;; Defined at:
  4922 ;;		line 18 in file "../src/debug.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;		None               void
  4929 ;; Registers used:
  4930 ;;		None
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4936 ;;      Params:         0       0       0       0       0
  4937 ;;      Locals:         0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0
  4939 ;;      Totals:         0       0       0       0       0
  4940 ;;Total ram usage:        0 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    5
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_InterruptHandlerLow
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text30
  4951  001D14                     __ptext30:
  4952                           	opt stack 0
  4953  001D14                     i1_blip1:
  4954                           	opt stack 19
  4955                           
  4956                           ;debug.c: 20: LATDbits.LD4 = 0;
  4957                           
  4958                           ;incstack = 0
  4959  001D14  988C               	bcf	3980,4,c	;volatile
  4960                           
  4961                           ;debug.c: 21: LATDbits.LD4 = 1;
  4962  001D16  888C               	bsf	3980,4,c	;volatile
  4963                           
  4964                           ;debug.c: 22: LATDbits.LD4 = 0;
  4965  001D18  988C               	bcf	3980,4,c	;volatile
  4966  001D1A  0012               	return	
  4967  001D1C                     __end_ofi1_blip1:
  4968                           	opt stack 0
  4969                           pclatu	equ	0xFFB
  4970                           pclath	equ	0xFFA
  4971                           tblptru	equ	0xFF8
  4972                           tblptrh	equ	0xFF7
  4973                           tblptrl	equ	0xFF6
  4974                           tablat	equ	0xFF5
  4975                           prodh	equ	0xFF4
  4976                           prodl	equ	0xFF3
  4977                           intcon	equ	0xFF2
  4978                           intcon2	equ	0xFF1
  4979                           postinc0	equ	0xFEE
  4980                           fsr0h	equ	0xFEA
  4981                           fsr0l	equ	0xFE9
  4982                           wreg	equ	0xFE8
  4983                           indf1	equ	0xFE7
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           bsr	equ	0xFE0
  4987                           indf2	equ	0xFDF
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           fsr2h	equ	0xFDA
  4991                           fsr2l	equ	0xFD9
  4992                           status	equ	0xFD8
  4993                           
  4994 ;; *************** function _uart_transmit_interrupt_handler *****************
  4995 ;; Defined at:
  4996 ;;		line 200 in file "../src/my_uart.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  message_stat    1   34[COMRAM] char 
  5001 ;;  data            4   29[COMRAM] unsigned char [4]
  5002 ;;  msgtype         1   33[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;		None               void
  5005 ;; Registers used:
  5006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5012 ;;      Params:         0       0       0       0       0
  5013 ;;      Locals:         6       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0
  5015 ;;      Totals:         6       0       0       0       0
  5016 ;;Total ram usage:        6 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    8
  5019 ;; This function calls:
  5020 ;;		_FromMainLow_recvmsg
  5021 ;; This function is called by:
  5022 ;;		_InterruptHandlerLow
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text31
  5027  00159A                     __ptext31:
  5028                           	opt stack 0
  5029  00159A                     _uart_transmit_interrupt_handler:
  5030                           	opt stack 16
  5031                           
  5032                           ;my_uart.c: 203: static unsigned char done = 1;
  5033                           ;my_uart.c: 204: static unsigned char index = 0;
  5034                           ;my_uart.c: 206: unsigned char data[4];
  5035                           ;my_uart.c: 209: unsigned char msgtype = 31;
  5036                           
  5037                           ;incstack = 0
  5038  00159A  0E1F               	movlw	31
  5039  00159C  6E22               	movwf	uart_transmit_interrupt_handler@msgtype,c
  5040                           
  5041                           ;my_uart.c: 211: if( done )
  5042  00159E  5079               	movf	uart_transmit_interrupt_handler@done,w,c
  5043  0015A0  B4D8               	btfsc	status,2,c
  5044  0015A2  D02C               	goto	i1l4038
  5045                           
  5046                           ;my_uart.c: 212: {
  5047                           ;my_uart.c: 213: signed char message_status = FromMainLow_recvmsg(4,&msgtype, (void*)dat
      +                          a );
  5048  0015A4  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  5049  0015A6  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5050  0015A8  0E22               	movlw	low uart_transmit_interrupt_handler@msgtype
  5051  0015AA  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5052  0015AC  0E00               	movlw	high uart_transmit_interrupt_handler@data
  5053  0015AE  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  5054  0015B0  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  5055  0015B2  6E1B               	movwf	FromMainLow_recvmsg@data,c
  5056  0015B4  0E04               	movlw	4
  5057  0015B6  EC0B  F00E         	call	_FromMainLow_recvmsg
  5058  0015BA  6E23               	movwf	uart_transmit_interrupt_handler@message_status,c
  5059                           
  5060                           ;my_uart.c: 215: if( message_status == -4)
  5061  0015BC  5023               	movf	uart_transmit_interrupt_handler@message_status,w,c
  5062  0015BE  0AFC               	xorlw	252
  5063  0015C0  A4D8               	btfss	status,2,c
  5064  0015C2  D002               	goto	i1l4014
  5065                           
  5066                           ;my_uart.c: 216: {
  5067                           ;my_uart.c: 218: PIE1bits.TX1IE = 0;
  5068  0015C4  989D               	bcf	3997,4,c	;volatile
  5069                           
  5070                           ;my_uart.c: 219: }
  5071  0015C6  0012               	return	
  5072  0015C8                     i1l4014:
  5073                           
  5074                           ;my_uart.c: 220: else if( message_status > 0 )
  5075  0015C8  5023               	movf	uart_transmit_interrupt_handler@message_status,w,c
  5076  0015CA  0A80               	xorlw	128
  5077  0015CC  0F7F               	addlw	-129
  5078  0015CE  A0D8               	btfss	status,0,c
  5079  0015D0  0012               	return	
  5080                           
  5081                           ;my_uart.c: 221: {
  5082                           ;my_uart.c: 223: index = 0;
  5083  0015D2  0E00               	movlw	0
  5084  0015D4  6E78               	movwf	uart_transmit_interrupt_handler@index,c
  5085                           
  5086                           ;my_uart.c: 224: done = 0;
  5087  0015D6  0E00               	movlw	0
  5088  0015D8  6E79               	movwf	uart_transmit_interrupt_handler@done,c
  5089                           
  5090                           ;my_uart.c: 226: TXREG1 = data[index];
  5091  0015DA  5078               	movf	uart_transmit_interrupt_handler@index,w,c
  5092  0015DC  0D01               	mullw	1
  5093  0015DE  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  5094  0015E0  24F3               	addwf	prodl,w,c
  5095  0015E2  6ED9               	movwf	fsr2l,c
  5096  0015E4  0E00               	movlw	high uart_transmit_interrupt_handler@data
  5097  0015E6  20F4               	addwfc	prodh,w,c
  5098  0015E8  6EDA               	movwf	fsr2h,c
  5099  0015EA  50DF               	movf	indf2,w,c
  5100  0015EC  6EAD               	movwf	4013,c	;volatile
  5101                           
  5102                           ;my_uart.c: 227: index++;
  5103  0015EE  2A78               	incf	uart_transmit_interrupt_handler@index,f,c
  5104                           
  5105                           ;my_uart.c: 228: if( index >= 4 )
  5106  0015F0  0E03               	movlw	3
  5107  0015F2  6478               	cpfsgt	uart_transmit_interrupt_handler@index,c
  5108  0015F4  0012               	return	
  5109                           
  5110                           ;my_uart.c: 229: {
  5111                           ;my_uart.c: 230: done = 1;
  5112  0015F6  0E01               	movlw	1
  5113  0015F8  6E79               	movwf	uart_transmit_interrupt_handler@done,c
  5114  0015FA  0012               	return	
  5115  0015FC                     i1l4038:
  5116                           
  5117                           ;my_uart.c: 247: else
  5118                           ;my_uart.c: 248: {
  5119                           ;my_uart.c: 250: TXREG1 = data[index];
  5120  0015FC  5078               	movf	uart_transmit_interrupt_handler@index,w,c
  5121  0015FE  0D01               	mullw	1
  5122  001600  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  5123  001602  24F3               	addwf	prodl,w,c
  5124  001604  6ED9               	movwf	fsr2l,c
  5125  001606  0E00               	movlw	high uart_transmit_interrupt_handler@data
  5126  001608  20F4               	addwfc	prodh,w,c
  5127  00160A  6EDA               	movwf	fsr2h,c
  5128  00160C  50DF               	movf	indf2,w,c
  5129  00160E  6EAD               	movwf	4013,c	;volatile
  5130                           
  5131                           ;my_uart.c: 251: index++;
  5132  001610  2A78               	incf	uart_transmit_interrupt_handler@index,f,c
  5133                           
  5134                           ;my_uart.c: 252: if( index >= 4 )
  5135  001612  0E03               	movlw	3
  5136  001614  6478               	cpfsgt	uart_transmit_interrupt_handler@index,c
  5137  001616  0012               	return	
  5138                           
  5139                           ;my_uart.c: 253: {
  5140                           ;my_uart.c: 254: done = 1;
  5141  001618  0E01               	movlw	1
  5142  00161A  6E79               	movwf	uart_transmit_interrupt_handler@done,c
  5143  00161C  0012               	return	
  5144  00161E                     __end_of_uart_transmit_interrupt_handler:
  5145                           	opt stack 0
  5146                           pclatu	equ	0xFFB
  5147                           pclath	equ	0xFFA
  5148                           tblptru	equ	0xFF8
  5149                           tblptrh	equ	0xFF7
  5150                           tblptrl	equ	0xFF6
  5151                           tablat	equ	0xFF5
  5152                           prodh	equ	0xFF4
  5153                           prodl	equ	0xFF3
  5154                           intcon	equ	0xFF2
  5155                           intcon2	equ	0xFF1
  5156                           postinc0	equ	0xFEE
  5157                           fsr0h	equ	0xFEA
  5158                           fsr0l	equ	0xFE9
  5159                           wreg	equ	0xFE8
  5160                           indf1	equ	0xFE7
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           bsr	equ	0xFE0
  5164                           indf2	equ	0xFDF
  5165                           postinc2	equ	0xFDE
  5166                           postdec2	equ	0xFDD
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171 ;; *************** function _FromMainLow_recvmsg *****************
  5172 ;; Defined at:
  5173 ;;		line 159 in file "../src/messages.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  maxlength       1    wreg     unsigned char 
  5176 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5177 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5178 ;;  data            2   26[COMRAM] PTR void 
  5179 ;;		 -> uart_transmit_interrupt_handler@data(4), 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  maxlength       1   28[COMRAM] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      char 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5191 ;;      Params:         4       0       0       0       0
  5192 ;;      Locals:         1       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0
  5194 ;;      Totals:         5       0       0       0       0
  5195 ;;Total ram usage:        5 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    7
  5198 ;; This function calls:
  5199 ;;		i1_recv_msg
  5200 ;; This function is called by:
  5201 ;;		_uart_transmit_interrupt_handler
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text32
  5206  001C16                     __ptext32:
  5207                           	opt stack 0
  5208  001C16                     _FromMainLow_recvmsg:
  5209                           	opt stack 16
  5210                           
  5211                           ;incstack = 0
  5212                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5213  001C16  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5214                           
  5215                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5216  001C18  0102               	movlb	2	; () banked
  5217  001C1A  0E02               	movlw	high _FromMainLow_MQ
  5218  001C1C  6E0C               	movwf	i1recv_msg@qptr+1,c
  5219  001C1E  0102               	movlb	2	; () banked
  5220  001C20  0E00               	movlw	low _FromMainLow_MQ
  5221  001C22  6E0B               	movwf	i1recv_msg@qptr,c
  5222  001C24  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5223  001C28  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5224  001C2C  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5225  001C30  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5226  001C34  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5227  001C38  EC2A  F008         	call	i1_recv_msg	;wreg free
  5228  001C3C  0012               	return	
  5229  001C3E                     __end_of_FromMainLow_recvmsg:
  5230                           	opt stack 0
  5231                           pclatu	equ	0xFFB
  5232                           pclath	equ	0xFFA
  5233                           tblptru	equ	0xFF8
  5234                           tblptrh	equ	0xFF7
  5235                           tblptrl	equ	0xFF6
  5236                           tablat	equ	0xFF5
  5237                           prodh	equ	0xFF4
  5238                           prodl	equ	0xFF3
  5239                           intcon	equ	0xFF2
  5240                           intcon2	equ	0xFF1
  5241                           postinc0	equ	0xFEE
  5242                           fsr0h	equ	0xFEA
  5243                           fsr0l	equ	0xFE9
  5244                           wreg	equ	0xFE8
  5245                           indf1	equ	0xFE7
  5246                           fsr1h	equ	0xFE2
  5247                           fsr1l	equ	0xFE1
  5248                           bsr	equ	0xFE0
  5249                           indf2	equ	0xFDF
  5250                           postinc2	equ	0xFDE
  5251                           postdec2	equ	0xFDD
  5252                           fsr2h	equ	0xFDA
  5253                           fsr2l	equ	0xFD9
  5254                           status	equ	0xFD8
  5255                           
  5256 ;; *************** function i1_recv_msg *****************
  5257 ;; Defined at:
  5258 ;;		line 63 in file "../src/messages.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5261 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5262 ;;  maxlength       1   12[COMRAM] unsigned char 
  5263 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5264 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  5265 ;;  data            2   15[COMRAM] PTR void 
  5266 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5269 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5270 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5271 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5272 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      char 
  5275 ;; Registers used:
  5276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5282 ;;      Params:         7       0       0       0       0
  5283 ;;      Locals:         5       0       0       0       0
  5284 ;;      Temps:          2       0       0       0       0
  5285 ;;      Totals:        14       0       0       0       0
  5286 ;;Total ram usage:       14 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    6
  5289 ;; This function calls:
  5290 ;;		i1___awmod
  5291 ;;		i1_memcpy
  5292 ;; This function is called by:
  5293 ;;		_FromMainLow_recvmsg
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text33
  5298  001054                     __ptext33:
  5299                           	opt stack 0
  5300  001054                     i1_recv_msg:
  5301                           	opt stack 16
  5302                           
  5303                           ;messages.c: 64: unsigned char slot;
  5304                           ;messages.c: 68: msg *qmsg;
  5305                           ;messages.c: 69: size_t tlength;
  5306                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5307                           
  5308                           ;incstack = 0
  5309  001054  EE20 F056          	lfsr	2,86
  5310  001058  500B               	movf	i1recv_msg@qptr,w,c
  5311  00105A  26D9               	addwf	fsr2l,f,c
  5312  00105C  500C               	movf	i1recv_msg@qptr+1,w,c
  5313  00105E  22DA               	addwfc	fsr2h,f,c
  5314  001060  50DF               	movf	indf2,w,c
  5315  001062  6E14               	movwf	i1recv_msg@slot,c
  5316                           
  5317                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5318  001064  5014               	movf	i1recv_msg@slot,w,c
  5319  001066  0D11               	mullw	17
  5320  001068  50F3               	movf	prodl,w,c
  5321  00106A  240B               	addwf	i1recv_msg@qptr,w,c
  5322  00106C  6E17               	movwf	i1recv_msg@qmsg,c
  5323  00106E  50F4               	movf	prodh,w,c
  5324  001070  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5325  001072  6E18               	movwf	i1recv_msg@qmsg+1,c
  5326                           
  5327                           ;messages.c: 74: if (qmsg->full == 1) {
  5328  001074  0E01               	movlw	1
  5329  001076  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5330  00107A  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5331  00107E  62DF               	cpfseq	indf2,c
  5332  001080  D05B               	goto	i1l3628
  5333                           
  5334                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5335  001082  EE20 F001          	lfsr	2,1
  5336  001086  5017               	movf	i1recv_msg@qmsg,w,c
  5337  001088  26D9               	addwf	fsr2l,f,c
  5338  00108A  5018               	movf	i1recv_msg@qmsg+1,w,c
  5339  00108C  22DA               	addwfc	fsr2h,f,c
  5340  00108E  50DF               	movf	indf2,w,c
  5341  001090  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5342  001092  B0D8               	btfsc	status,0,c
  5343  001094  D002               	goto	i1l3612
  5344                           
  5345                           ;messages.c: 77: return (-3);
  5346  001096  0EFD               	movlw	253
  5347  001098  0012               	return	
  5348  00109A                     i1l3612:
  5349                           
  5350                           ;messages.c: 78: }
  5351                           ;messages.c: 80: tlength = qmsg->length;
  5352  00109A  EE20 F001          	lfsr	2,1
  5353  00109E  5017               	movf	i1recv_msg@qmsg,w,c
  5354  0010A0  26D9               	addwf	fsr2l,f,c
  5355  0010A2  5018               	movf	i1recv_msg@qmsg+1,w,c
  5356  0010A4  22DA               	addwfc	fsr2h,f,c
  5357  0010A6  50DF               	movf	indf2,w,c
  5358  0010A8  6E12               	movwf	??i1_recv_msg& (0+255),c
  5359  0010AA  5012               	movf	??i1_recv_msg,w,c
  5360  0010AC  6E15               	movwf	i1recv_msg@tlength,c
  5361  0010AE  6A16               	clrf	i1recv_msg@tlength+1,c
  5362                           
  5363                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5364  0010B0  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5365  0010B4  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5366  0010B8  0E03               	movlw	3
  5367  0010BA  2417               	addwf	i1recv_msg@qmsg,w,c
  5368  0010BC  6E12               	movwf	??i1_recv_msg& (0+255),c
  5369  0010BE  0E00               	movlw	0
  5370  0010C0  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5371  0010C2  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5372  0010C4  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5373  0010C8  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5374  0010CC  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5375  0010D0  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5376  0010D4  EC09  F00D         	call	i1_memcpy	;wreg free
  5377                           
  5378                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5379  0010D8  EE20 F056          	lfsr	2,86
  5380  0010DC  500B               	movf	i1recv_msg@qptr,w,c
  5381  0010DE  26D9               	addwf	fsr2l,f,c
  5382  0010E0  500C               	movf	i1recv_msg@qptr+1,w,c
  5383  0010E2  22DA               	addwfc	fsr2h,f,c
  5384  0010E4  EE10 F056          	lfsr	1,86
  5385  0010E8  500B               	movf	i1recv_msg@qptr,w,c
  5386  0010EA  26E1               	addwf	fsr1l,f,c
  5387  0010EC  500C               	movf	i1recv_msg@qptr+1,w,c
  5388  0010EE  22E2               	addwfc	fsr1h,f,c
  5389  0010F0  50E7               	movf	indf1,w,c
  5390  0010F2  6E12               	movwf	??i1_recv_msg& (0+255),c
  5391  0010F4  0E01               	movlw	1
  5392  0010F6  2412               	addwf	??i1_recv_msg,w,c
  5393  0010F8  6E01               	movwf	i1___awmod@dividend,c
  5394  0010FA  6A02               	clrf	i1___awmod@dividend+1,c
  5395  0010FC  0E00               	movlw	0
  5396  0010FE  2202               	addwfc	i1___awmod@dividend+1,f,c
  5397  001100  0E00               	movlw	0
  5398  001102  6E04               	movwf	i1___awmod@divisor+1,c
  5399  001104  0E05               	movlw	5
  5400  001106  6E03               	movwf	i1___awmod@divisor,c
  5401  001108  EC85  F00A         	call	i1___awmod	;wreg free
  5402  00110C  5001               	movf	?i1___awmod,w,c
  5403  00110E  6EDF               	movwf	indf2,c
  5404                           
  5405                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5406  001110  EE20 F002          	lfsr	2,2
  5407  001114  5017               	movf	i1recv_msg@qmsg,w,c
  5408  001116  26D9               	addwf	fsr2l,f,c
  5409  001118  5018               	movf	i1recv_msg@qmsg+1,w,c
  5410  00111A  22DA               	addwfc	fsr2h,f,c
  5411  00111C  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5412  001120  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5413  001124  CFDF FFE7          	movff	indf2,indf1
  5414                           
  5415                           ;messages.c: 91: qmsg->full = 0;
  5416  001128  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5417  00112C  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5418  001130  0E00               	movlw	0
  5419  001132  6EDF               	movwf	indf2,c
  5420                           
  5421                           ;messages.c: 92: return (tlength);
  5422  001134  5015               	movf	i1recv_msg@tlength,w,c
  5423  001136  0012               	return	
  5424  001138                     i1l3628:
  5425                           
  5426                           ;messages.c: 94: return (-4);
  5427  001138  0EFC               	movlw	252
  5428  00113A  0012               	return	
  5429  00113C                     __end_ofi1_recv_msg:
  5430                           	opt stack 0
  5431                           pclatu	equ	0xFFB
  5432                           pclath	equ	0xFFA
  5433                           tblptru	equ	0xFF8
  5434                           tblptrh	equ	0xFF7
  5435                           tblptrl	equ	0xFF6
  5436                           tablat	equ	0xFF5
  5437                           prodh	equ	0xFF4
  5438                           prodl	equ	0xFF3
  5439                           intcon	equ	0xFF2
  5440                           intcon2	equ	0xFF1
  5441                           postinc0	equ	0xFEE
  5442                           fsr0h	equ	0xFEA
  5443                           fsr0l	equ	0xFE9
  5444                           wreg	equ	0xFE8
  5445                           indf1	equ	0xFE7
  5446                           fsr1h	equ	0xFE2
  5447                           fsr1l	equ	0xFE1
  5448                           bsr	equ	0xFE0
  5449                           indf2	equ	0xFDF
  5450                           postinc2	equ	0xFDE
  5451                           postdec2	equ	0xFDD
  5452                           fsr2h	equ	0xFDA
  5453                           fsr2l	equ	0xFD9
  5454                           status	equ	0xFD8
  5455                           
  5456 ;; *************** function _uart_receive_interrupt_handler *****************
  5457 ;; Defined at:
  5458 ;;		line 61 in file "../src/my_uart.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;		None
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5463 ;;  message_coun    1   50[COMRAM] unsigned char 
  5464 ;;  status          1   42[COMRAM] unsigned char 
  5465 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5466 ;;  msg_id          1   51[COMRAM] unsigned char 
  5467 ;;  status          1   43[COMRAM] unsigned char 
  5468 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5469 ;;  bad_counter_    2   44[COMRAM] unsigned char [2]
  5470 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5471 ;;  i               2   52[COMRAM] int 
  5472 ;;  checksum        1   46[COMRAM] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;		None               void
  5475 ;; Registers used:
  5476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5482 ;;      Params:         0       0       0       0       0
  5483 ;;      Locals:        26       0       0       0       0
  5484 ;;      Temps:          2       0       0       0       0
  5485 ;;      Totals:        28       0       0       0       0
  5486 ;;Total ram usage:       28 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    8
  5489 ;; This function calls:
  5490 ;;		_ToMainLow_sendmsg
  5491 ;; This function is called by:
  5492 ;;		_InterruptHandlerLow
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text34
  5497  000A2E                     __ptext34:
  5498                           	opt stack 0
  5499  000A2E                     _uart_receive_interrupt_handler:
  5500                           	opt stack 16
  5501                           
  5502                           ;my_uart.c: 64: static unsigned char frame[(14 + 2 + 2)];
  5503                           ;my_uart.c: 65: static unsigned char index = 0;
  5504                           ;my_uart.c: 66: static unsigned char done = 0;
  5505                           ;my_uart.c: 67: static unsigned char received_counter = 0;
  5506                           ;my_uart.c: 69: static unsigned char start_byte_bad = 0;
  5507                           ;my_uart.c: 70: static unsigned char error = 0;
  5508                           ;my_uart.c: 72: if(!done)
  5509                           
  5510                           ;incstack = 0
  5511  000A2E  6673               	tstfsz	uart_receive_interrupt_handler@done,c
  5512  000A30  D03B               	goto	i1l3948
  5513                           
  5514                           ;my_uart.c: 73: {
  5515                           ;my_uart.c: 74: frame[index] = RCREG1;
  5516  000A32  5075               	movf	uart_receive_interrupt_handler@index,w,c
  5517  000A34  0D01               	mullw	1
  5518  000A36  0E56               	movlw	low uart_receive_interrupt_handler@frame
  5519  000A38  24F3               	addwf	prodl,w,c
  5520  000A3A  6ED9               	movwf	fsr2l,c
  5521  000A3C  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5522  000A3E  20F4               	addwfc	prodh,w,c
  5523  000A40  6EDA               	movwf	fsr2h,c
  5524  000A42  CFAE FFDF          	movff	4014,indf2	;volatile
  5525                           
  5526                           ;my_uart.c: 78: }
  5527                           ;my_uart.c: 79: if( index == 0 )
  5528                           
  5529                           ;my_uart.c: 76: {
  5530  000A46  6675               	tstfsz	uart_receive_interrupt_handler@index,c
  5531  000A48  D018               	goto	i1l3934
  5532                           
  5533                           ;my_uart.c: 80: {
  5534                           ;my_uart.c: 81: if( frame[0] != 0xff )
  5535  000A4A  2856               	incf	uart_receive_interrupt_handler@frame,w,c
  5536  000A4C  B4D8               	btfsc	status,2,c
  5537  000A4E  D012               	goto	i1l3932
  5538                           
  5539                           ;my_uart.c: 82: {
  5540                           ;my_uart.c: 83: if( !start_byte_bad )
  5541  000A50  6677               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5542  000A52  D00D               	goto	i1l3926
  5543                           
  5544                           ;my_uart.c: 84: {
  5545                           ;my_uart.c: 85: start_byte_bad = 1;
  5546  000A54  0E01               	movlw	1
  5547  000A56  6E77               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5548                           
  5549                           ;my_uart.c: 86: unsigned char bad_start_id = received_counter;
  5550  000A58  C076  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5551                           
  5552                           ;my_uart.c: 87: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5553  000A5C  0E22               	movlw	34
  5554  000A5E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5555  000A60  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5556  000A62  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5557  000A64  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5558  000A66  6E18               	movwf	ToMainLow_sendmsg@data,c
  5559  000A68  0E01               	movlw	1
  5560  000A6A  EC1F  F00E         	call	_ToMainLow_sendmsg
  5561  000A6E                     i1l3926:
  5562                           
  5563                           ;my_uart.c: 89: }
  5564                           ;my_uart.c: 90: index = 0;
  5565  000A6E  0E00               	movlw	0
  5566  000A70  6E75               	movwf	uart_receive_interrupt_handler@index,c
  5567  000A72  0012               	return	
  5568  000A74                     i1l3932:
  5569                           
  5570                           ;my_uart.c: 93: else
  5571                           ;my_uart.c: 94: {
  5572                           ;my_uart.c: 95: start_byte_bad = 0;
  5573  000A74  0E00               	movlw	0
  5574  000A76  6E77               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5575  000A78  D016               	goto	i1l3946
  5576  000A7A                     i1l3934:
  5577                           
  5578                           ;my_uart.c: 98: else if( index >= (14 + 2 + 2) - 1 )
  5579  000A7A  0E10               	movlw	16
  5580  000A7C  6475               	cpfsgt	uart_receive_interrupt_handler@index,c
  5581  000A7E  D013               	goto	i1l3946
  5582                           
  5583                           ;my_uart.c: 99: {
  5584                           ;my_uart.c: 100: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5585  000A80  5067               	movf	uart_receive_interrupt_handler@frame+17,w,c
  5586  000A82  0AFE               	xorlw	254
  5587  000A84  B4D8               	btfsc	status,2,c
  5588  000A86  D00F               	goto	i1l3946
  5589                           
  5590                           ;my_uart.c: 101: {
  5591                           ;my_uart.c: 103: index = 0;
  5592  000A88  0E00               	movlw	0
  5593  000A8A  6E75               	movwf	uart_receive_interrupt_handler@index,c
  5594                           
  5595                           ;my_uart.c: 106: unsigned char bad_end_id = received_counter;
  5596  000A8C  C076  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5597                           
  5598                           ;my_uart.c: 107: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5599  000A90  0E23               	movlw	35
  5600  000A92  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5601  000A94  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5602  000A96  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5603  000A98  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5604  000A9A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5605  000A9C  0E01               	movlw	1
  5606  000A9E  EC1F  F00E         	call	_ToMainLow_sendmsg
  5607                           
  5608                           ;my_uart.c: 108: error = 1;
  5609  000AA2  0E01               	movlw	1
  5610  000AA4  6E74               	movwf	uart_receive_interrupt_handler@error,c
  5611  000AA6                     i1l3946:
  5612                           
  5613                           ;my_uart.c: 109: }
  5614                           ;my_uart.c: 110: }
  5615                           ;my_uart.c: 111: index++;
  5616  000AA6  2A75               	incf	uart_receive_interrupt_handler@index,f,c
  5617  000AA8                     i1l3948:
  5618                           
  5619                           ;my_uart.c: 112: }
  5620                           ;my_uart.c: 114: if( index >= (14 + 2 + 2) )
  5621  000AA8  0E11               	movlw	17
  5622  000AAA  6475               	cpfsgt	uart_receive_interrupt_handler@index,c
  5623  000AAC  0012               	return	
  5624                           
  5625                           ;my_uart.c: 115: {
  5626                           ;my_uart.c: 116: index = 0;
  5627  000AAE  0E00               	movlw	0
  5628  000AB0  6E75               	movwf	uart_receive_interrupt_handler@index,c
  5629                           
  5630                           ;my_uart.c: 118: if( received_counter != frame[1] )
  5631  000AB2  5057               	movf	uart_receive_interrupt_handler@frame+1,w,c
  5632  000AB4  1876               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5633  000AB6  B4D8               	btfsc	status,2,c
  5634  000AB8  D00F               	goto	i1l3958
  5635                           
  5636                           ;my_uart.c: 119: {
  5637                           ;my_uart.c: 121: unsigned char bad_counter_id[2];
  5638                           ;my_uart.c: 122: bad_counter_id[0] = received_counter;
  5639  000ABA  C076  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5640                           
  5641                           ;my_uart.c: 123: bad_counter_id[1] = frame[1];
  5642  000ABE  C057  F02E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5643                           
  5644                           ;my_uart.c: 124: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5645  000AC2  0E21               	movlw	33
  5646  000AC4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5647  000AC6  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5648  000AC8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5649  000ACA  0E2D               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5650  000ACC  6E18               	movwf	ToMainLow_sendmsg@data,c
  5651  000ACE  0E02               	movlw	2
  5652  000AD0  EC1F  F00E         	call	_ToMainLow_sendmsg
  5653                           
  5654                           ;my_uart.c: 125: error = 1;
  5655  000AD4  0E01               	movlw	1
  5656  000AD6  6E74               	movwf	uart_receive_interrupt_handler@error,c
  5657  000AD8                     i1l3958:
  5658                           
  5659                           ;my_uart.c: 126: }
  5660                           ;my_uart.c: 129: unsigned char gooey_uart_center[14];
  5661                           ;my_uart.c: 130: unsigned char checksum = 0;
  5662  000AD8  0E00               	movlw	0
  5663  000ADA  6E2F               	movwf	uart_receive_interrupt_handler@checksum,c
  5664                           
  5665                           ;my_uart.c: 131: int i;
  5666                           ;my_uart.c: 132: for(i = 0; i < 14; i++)
  5667  000ADC  0E00               	movlw	0
  5668  000ADE  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5669  000AE0  0E00               	movlw	0
  5670  000AE2  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5671  000AE4  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5672  000AE6  0A80               	xorlw	128
  5673  000AE8  0F80               	addlw	-128
  5674  000AEA  0E0E               	movlw	14
  5675  000AEC  B4D8               	btfsc	status,2,c
  5676  000AEE  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5677  000AF0  B0D8               	btfsc	status,0,c
  5678  000AF2  D01F               	goto	i1l3974
  5679                           
  5680                           ;my_uart.c: 133: {
  5681                           ;my_uart.c: 134: gooey_uart_center[i] = frame[i+2];
  5682  000AF4  0E02               	movlw	2
  5683  000AF6  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5684  000AF8  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5685  000AFA  0E00               	movlw	0
  5686  000AFC  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5687  000AFE  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5688  000B00  0E56               	movlw	low uart_receive_interrupt_handler@frame
  5689  000B02  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5690  000B04  6ED9               	movwf	fsr2l,c
  5691  000B06  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5692  000B08  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5693  000B0A  6EDA               	movwf	fsr2h,c
  5694  000B0C  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5695  000B0E  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5696  000B10  6EE1               	movwf	fsr1l,c
  5697  000B12  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5698  000B14  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5699  000B16  6EE2               	movwf	fsr1h,c
  5700  000B18  CFDF FFE7          	movff	indf2,indf1
  5701                           
  5702                           ;my_uart.c: 135: checksum ^= gooey_uart_center[i];
  5703  000B1C  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5704  000B1E  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5705  000B20  6ED9               	movwf	fsr2l,c
  5706  000B22  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5707  000B24  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5708  000B26  6EDA               	movwf	fsr2h,c
  5709  000B28  50DF               	movf	indf2,w,c
  5710  000B2A  1A2F               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5711  000B2C  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5712  000B2E  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5713  000B30  D7D9               	goto	L6
  5714  000B32                     i1l3974:
  5715                           
  5716                           ;my_uart.c: 136: }
  5717                           ;my_uart.c: 138: if( checksum != frame[(14 + 2 + 2) - 2] )
  5718  000B32  5066               	movf	uart_receive_interrupt_handler@frame+16,w,c
  5719  000B34  182F               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5720  000B36  B4D8               	btfsc	status,2,c
  5721  000B38  D00D               	goto	i1l3982
  5722                           
  5723                           ;my_uart.c: 139: {
  5724                           ;my_uart.c: 141: unsigned char bad_checksum_id = received_counter;
  5725  000B3A  C076  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5726                           
  5727                           ;my_uart.c: 142: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5728  000B3E  0E20               	movlw	32
  5729  000B40  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5730  000B42  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5731  000B44  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5732  000B46  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5733  000B48  6E18               	movwf	ToMainLow_sendmsg@data,c
  5734  000B4A  0E01               	movlw	1
  5735  000B4C  EC1F  F00E         	call	_ToMainLow_sendmsg
  5736                           
  5737                           ;my_uart.c: 143: error = 1;
  5738  000B50  0E01               	movlw	1
  5739  000B52  6E74               	movwf	uart_receive_interrupt_handler@error,c
  5740  000B54                     i1l3982:
  5741                           
  5742                           ;my_uart.c: 144: }
  5743                           ;my_uart.c: 149: if( !error )
  5744  000B54  6674               	tstfsz	uart_receive_interrupt_handler@error,c
  5745  000B56  D02C               	goto	i1l4002
  5746                           
  5747                           ;my_uart.c: 150: {
  5748                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5749  000B58  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5750                           
  5751                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5752  000B5C  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5753  000B5E  0A11               	xorlw	17
  5754  000B60  B4D8               	btfsc	status,2,c
  5755  000B62  D01C               	goto	i1l440
  5756  000B64  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5757  000B66  0AF1               	xorlw	241
  5758  000B68  B4D8               	btfsc	status,2,c
  5759  000B6A  D018               	goto	i1l440
  5760  000B6C  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5761  000B6E  0AF2               	xorlw	242
  5762  000B70  B4D8               	btfsc	status,2,c
  5763  000B72  D014               	goto	i1l440
  5764  000B74  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5765  000B76  0AF3               	xorlw	243
  5766  000B78  B4D8               	btfsc	status,2,c
  5767  000B7A  D010               	goto	i1l440
  5768  000B7C  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5769  000B7E  0AF4               	xorlw	244
  5770  000B80  B4D8               	btfsc	status,2,c
  5771  000B82  D00C               	goto	i1l440
  5772                           
  5773                           ;my_uart.c: 155: {
  5774                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5775  000B84  C076  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5776                           
  5777                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5778  000B88  0E24               	movlw	36
  5779  000B8A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5780  000B8C  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5781  000B8E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5782  000B90  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5783  000B92  6E18               	movwf	ToMainLow_sendmsg@data,c
  5784  000B94  0E01               	movlw	1
  5785  000B96  EC1F  F00E         	call	_ToMainLow_sendmsg
  5786  000B9A  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5787  000B9C                     i1l440:
  5788                           
  5789                           ;my_uart.c: 158: }
  5790                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5791  000B9C  0E1F               	movlw	31
  5792  000B9E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5793  000BA0  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5794  000BA2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5795  000BA4  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5796  000BA6  6E18               	movwf	ToMainLow_sendmsg@data,c
  5797  000BA8  0E0E               	movlw	14
  5798  000BAA  EC1F  F00E         	call	_ToMainLow_sendmsg
  5799  000BAE  6E2C               	movwf	uart_receive_interrupt_handler@status_2104,c
  5800  000BB0                     i1l4002:
  5801                           
  5802                           ;my_uart.c: 171: }
  5803                           ;my_uart.c: 172: }
  5804                           ;my_uart.c: 174: received_counter++;
  5805  000BB0  2A76               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5806                           
  5807                           ;my_uart.c: 175: error = 0;
  5808  000BB2  0E00               	movlw	0
  5809  000BB4  6E74               	movwf	uart_receive_interrupt_handler@error,c
  5810  000BB6  0012               	return	
  5811  000BB8                     __end_of_uart_receive_interrupt_handler:
  5812                           	opt stack 0
  5813                           pclatu	equ	0xFFB
  5814                           pclath	equ	0xFFA
  5815                           tblptru	equ	0xFF8
  5816                           tblptrh	equ	0xFF7
  5817                           tblptrl	equ	0xFF6
  5818                           tablat	equ	0xFF5
  5819                           prodh	equ	0xFF4
  5820                           prodl	equ	0xFF3
  5821                           intcon	equ	0xFF2
  5822                           intcon2	equ	0xFF1
  5823                           postinc0	equ	0xFEE
  5824                           fsr0h	equ	0xFEA
  5825                           fsr0l	equ	0xFE9
  5826                           wreg	equ	0xFE8
  5827                           indf1	equ	0xFE7
  5828                           fsr1h	equ	0xFE2
  5829                           fsr1l	equ	0xFE1
  5830                           bsr	equ	0xFE0
  5831                           indf2	equ	0xFDF
  5832                           postinc2	equ	0xFDE
  5833                           postdec2	equ	0xFDD
  5834                           fsr2h	equ	0xFDA
  5835                           fsr2l	equ	0xFD9
  5836                           status	equ	0xFD8
  5837                           
  5838 ;; *************** function _ToMainLow_sendmsg *****************
  5839 ;; Defined at:
  5840 ;;		line 103 in file "../src/messages.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  length          1    wreg     unsigned char 
  5843 ;;  msgtype         1   22[COMRAM] unsigned char 
  5844 ;;  data            2   23[COMRAM] PTR void 
  5845 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5846 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), InterruptHandlerLow@sendy_stuff(14), 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;  length          1   25[COMRAM] unsigned char 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      char 
  5851 ;; Registers used:
  5852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5858 ;;      Params:         3       0       0       0       0
  5859 ;;      Locals:         1       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0
  5861 ;;      Totals:         4       0       0       0       0
  5862 ;;Total ram usage:        4 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    7
  5865 ;; This function calls:
  5866 ;;		i1_send_msg
  5867 ;; This function is called by:
  5868 ;;		_InterruptHandlerLow
  5869 ;;		_uart_receive_interrupt_handler
  5870 ;;		_timer1_int_handler
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text35
  5875  001C3E                     __ptext35:
  5876                           	opt stack 0
  5877  001C3E                     _ToMainLow_sendmsg:
  5878                           	opt stack 16
  5879                           
  5880                           ;incstack = 0
  5881                           ;ToMainLow_sendmsg@length stored from wreg
  5882  001C3E  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5883                           
  5884                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5885  001C40  0101               	movlb	1	; () banked
  5886  001C42  0E01               	movlw	high _ToMainLow_MQ
  5887  001C44  6E0C               	movwf	i1send_msg@qptr+1,c
  5888  001C46  0101               	movlb	1	; () banked
  5889  001C48  0E66               	movlw	low _ToMainLow_MQ
  5890  001C4A  6E0B               	movwf	i1send_msg@qptr,c
  5891  001C4C  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5892  001C50  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5893  001C54  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5894  001C58  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5895  001C5C  ECC7  F009         	call	i1_send_msg	;wreg free
  5896  001C60  0012               	return	
  5897  001C62                     __end_of_ToMainLow_sendmsg:
  5898                           	opt stack 0
  5899                           pclatu	equ	0xFFB
  5900                           pclath	equ	0xFFA
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           prodh	equ	0xFF4
  5906                           prodl	equ	0xFF3
  5907                           intcon	equ	0xFF2
  5908                           intcon2	equ	0xFF1
  5909                           postinc0	equ	0xFEE
  5910                           fsr0h	equ	0xFEA
  5911                           fsr0l	equ	0xFE9
  5912                           wreg	equ	0xFE8
  5913                           indf1	equ	0xFE7
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           bsr	equ	0xFE0
  5917                           indf2	equ	0xFDF
  5918                           postinc2	equ	0xFDE
  5919                           postdec2	equ	0xFDD
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8
  5923                           
  5924 ;; *************** function i1_send_msg *****************
  5925 ;; Defined at:
  5926 ;;		line 24 in file "../src/messages.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5929 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5930 ;;  length          1   12[COMRAM] unsigned char 
  5931 ;;  msgtype         1   13[COMRAM] unsigned char 
  5932 ;;  data            2   14[COMRAM] PTR void 
  5933 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  5934 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  5935 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  5936 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5939 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5940 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5941 ;;  send_msg        2   17[COMRAM] unsigned int 
  5942 ;;  send_msg        1   19[COMRAM] unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      char 
  5945 ;; Registers used:
  5946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5952 ;;      Params:         6       0       0       0       0
  5953 ;;      Locals:         5       0       0       0       0
  5954 ;;      Temps:          1       0       0       0       0
  5955 ;;      Totals:        12       0       0       0       0
  5956 ;;Total ram usage:       12 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    6
  5959 ;; This function calls:
  5960 ;;		i1___awmod
  5961 ;;		i1_memcpy
  5962 ;; This function is called by:
  5963 ;;		_ToMainLow_sendmsg
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text36
  5968  00138E                     __ptext36:
  5969                           	opt stack 0
  5970  00138E                     i1_send_msg:
  5971                           	opt stack 16
  5972                           
  5973                           ;messages.c: 25: unsigned char slot;
  5974                           ;messages.c: 27: msg *qmsg;
  5975                           ;messages.c: 28: size_t tlength = length;
  5976                           
  5977                           ;incstack = 0
  5978  00138E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5979  001392  6A13               	clrf	i1send_msg@tlength+1,c
  5980                           
  5981                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5982  001394  EE20 F055          	lfsr	2,85
  5983  001398  500B               	movf	i1send_msg@qptr,w,c
  5984  00139A  26D9               	addwf	fsr2l,f,c
  5985  00139C  500C               	movf	i1send_msg@qptr+1,w,c
  5986  00139E  22DA               	addwfc	fsr2h,f,c
  5987  0013A0  50DF               	movf	indf2,w,c
  5988  0013A2  6E14               	movwf	i1send_msg@slot,c
  5989                           
  5990                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5991  0013A4  5014               	movf	i1send_msg@slot,w,c
  5992  0013A6  0D11               	mullw	17
  5993  0013A8  50F3               	movf	prodl,w,c
  5994  0013AA  240B               	addwf	i1send_msg@qptr,w,c
  5995  0013AC  6E15               	movwf	i1send_msg@qmsg,c
  5996  0013AE  50F4               	movf	prodh,w,c
  5997  0013B0  200C               	addwfc	i1send_msg@qptr+1,w,c
  5998  0013B2  6E16               	movwf	i1send_msg@qmsg+1,c
  5999                           
  6000                           ;messages.c: 41: if (qmsg->full != 0) {
  6001  0013B4  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6002  0013B8  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6003  0013BC  50DF               	movf	indf2,w,c
  6004  0013BE  B4D8               	btfsc	status,2,c
  6005  0013C0  D002               	goto	i1l3564
  6006                           
  6007                           ;messages.c: 42: return (-1);
  6008  0013C2  0EFF               	movlw	255
  6009  0013C4  0012               	return	
  6010  0013C6                     i1l3564:
  6011                           
  6012                           ;messages.c: 43: }
  6013                           ;messages.c: 46: qmsg->length = length;
  6014  0013C6  EE20 F001          	lfsr	2,1
  6015  0013CA  5015               	movf	i1send_msg@qmsg,w,c
  6016  0013CC  26D9               	addwf	fsr2l,f,c
  6017  0013CE  5016               	movf	i1send_msg@qmsg+1,w,c
  6018  0013D0  22DA               	addwfc	fsr2h,f,c
  6019  0013D2  C00D  FFDF         	movff	i1send_msg@length,indf2
  6020                           
  6021                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6022  0013D6  EE20 F002          	lfsr	2,2
  6023  0013DA  5015               	movf	i1send_msg@qmsg,w,c
  6024  0013DC  26D9               	addwf	fsr2l,f,c
  6025  0013DE  5016               	movf	i1send_msg@qmsg+1,w,c
  6026  0013E0  22DA               	addwfc	fsr2h,f,c
  6027  0013E2  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6028                           
  6029                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6030  0013E6  0E03               	movlw	3
  6031  0013E8  2415               	addwf	i1send_msg@qmsg,w,c
  6032  0013EA  6E01               	movwf	i1memcpy@d1,c
  6033  0013EC  0E00               	movlw	0
  6034  0013EE  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6035  0013F0  6E02               	movwf	i1memcpy@d1+1,c
  6036  0013F2  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6037  0013F6  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6038  0013FA  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6039  0013FE  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6040  001402  EC09  F00D         	call	i1_memcpy	;wreg free
  6041                           
  6042                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6043  001406  EE20 F055          	lfsr	2,85
  6044  00140A  500B               	movf	i1send_msg@qptr,w,c
  6045  00140C  26D9               	addwf	fsr2l,f,c
  6046  00140E  500C               	movf	i1send_msg@qptr+1,w,c
  6047  001410  22DA               	addwfc	fsr2h,f,c
  6048  001412  EE10 F055          	lfsr	1,85
  6049  001416  500B               	movf	i1send_msg@qptr,w,c
  6050  001418  26E1               	addwf	fsr1l,f,c
  6051  00141A  500C               	movf	i1send_msg@qptr+1,w,c
  6052  00141C  22E2               	addwfc	fsr1h,f,c
  6053  00141E  50E7               	movf	indf1,w,c
  6054  001420  6E11               	movwf	??i1_send_msg& (0+255),c
  6055  001422  0E01               	movlw	1
  6056  001424  2411               	addwf	??i1_send_msg,w,c
  6057  001426  6E01               	movwf	i1___awmod@dividend,c
  6058  001428  6A02               	clrf	i1___awmod@dividend+1,c
  6059  00142A  0E00               	movlw	0
  6060  00142C  2202               	addwfc	i1___awmod@dividend+1,f,c
  6061  00142E  0E00               	movlw	0
  6062  001430  6E04               	movwf	i1___awmod@divisor+1,c
  6063  001432  0E05               	movlw	5
  6064  001434  6E03               	movwf	i1___awmod@divisor,c
  6065  001436  EC85  F00A         	call	i1___awmod	;wreg free
  6066  00143A  5001               	movf	?i1___awmod,w,c
  6067  00143C  6EDF               	movwf	indf2,c
  6068                           
  6069                           ;messages.c: 59: qmsg->full = 1;
  6070  00143E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6071  001442  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6072  001446  0E01               	movlw	1
  6073  001448  6EDF               	movwf	indf2,c
  6074                           
  6075                           ;messages.c: 60: return (1);
  6076  00144A  0E01               	movlw	1
  6077  00144C  0012               	return	
  6078  00144E                     __end_ofi1_send_msg:
  6079                           	opt stack 0
  6080                           pclatu	equ	0xFFB
  6081                           pclath	equ	0xFFA
  6082                           tblptru	equ	0xFF8
  6083                           tblptrh	equ	0xFF7
  6084                           tblptrl	equ	0xFF6
  6085                           tablat	equ	0xFF5
  6086                           prodh	equ	0xFF4
  6087                           prodl	equ	0xFF3
  6088                           intcon	equ	0xFF2
  6089                           intcon2	equ	0xFF1
  6090                           postinc0	equ	0xFEE
  6091                           fsr0h	equ	0xFEA
  6092                           fsr0l	equ	0xFE9
  6093                           wreg	equ	0xFE8
  6094                           indf1	equ	0xFE7
  6095                           fsr1h	equ	0xFE2
  6096                           fsr1l	equ	0xFE1
  6097                           bsr	equ	0xFE0
  6098                           indf2	equ	0xFDF
  6099                           postinc2	equ	0xFDE
  6100                           postdec2	equ	0xFDD
  6101                           fsr2h	equ	0xFDA
  6102                           fsr2l	equ	0xFD9
  6103                           status	equ	0xFD8
  6104                           
  6105 ;; *************** function i1_memcpy *****************
  6106 ;; Defined at:
  6107 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  d1              2    0[COMRAM] PTR void 
  6110 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6111 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  6112 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  6113 ;;  s1              2    2[COMRAM] PTR const void 
  6114 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6115 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6116 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  6117 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6118 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  6119 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  6120 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  6121 ;;  n               2    4[COMRAM] unsigned int 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6124 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6125 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6126 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  6127 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6128 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  6129 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  6130 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  6131 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6132 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6133 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  6134 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  2    0[COMRAM] PTR void 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6144 ;;      Params:         6       0       0       0       0
  6145 ;;      Locals:         4       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0
  6147 ;;      Totals:        10       0       0       0       0
  6148 ;;Total ram usage:       10 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    5
  6151 ;; This function calls:
  6152 ;;		Nothing
  6153 ;; This function is called by:
  6154 ;;		i1_send_msg
  6155 ;;		i1_recv_msg
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text37
  6160  001A12                     __ptext37:
  6161                           	opt stack 0
  6162  001A12                     i1_memcpy:
  6163                           	opt stack 16
  6164                           
  6165                           ;incstack = 0
  6166  001A12  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6167  001A16  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6168  001A1A  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6169  001A1E  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6170  001A22  D00E               	goto	i1l2426
  6171  001A24                     i1l2420:
  6172  001A24  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6173  001A28  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6174  001A2C  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6175  001A30  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6176  001A34  CFDF FFE7          	movff	indf2,indf1
  6177  001A38  4A09               	infsnz	i1memcpy@s,f,c
  6178  001A3A  2A0A               	incf	i1memcpy@s+1,f,c
  6179  001A3C  4A07               	infsnz	i1memcpy@d,f,c
  6180  001A3E  2A08               	incf	i1memcpy@d+1,f,c
  6181  001A40                     i1l2426:
  6182  001A40  0605               	decf	i1memcpy@n,f,c
  6183  001A42  A0D8               	btfss	status,0,c
  6184  001A44  0606               	decf	i1memcpy@n+1,f,c
  6185  001A46  2805               	incf	i1memcpy@n& (0+255),w,c
  6186  001A48  B4D8               	btfsc	status,2,c
  6187  001A4A  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6188  001A4C  B4D8               	btfsc	status,2,c
  6189                           
  6190                           ;	Return value of i1_memcpy is never used
  6191  001A4E  0012               	return	
  6192  001A50  D7E9               	goto	i1l2420
  6193  001A52                     __end_ofi1_memcpy:
  6194                           	opt stack 0
  6195                           pclatu	equ	0xFFB
  6196                           pclath	equ	0xFFA
  6197                           tblptru	equ	0xFF8
  6198                           tblptrh	equ	0xFF7
  6199                           tblptrl	equ	0xFF6
  6200                           tablat	equ	0xFF5
  6201                           prodh	equ	0xFF4
  6202                           prodl	equ	0xFF3
  6203                           intcon	equ	0xFF2
  6204                           intcon2	equ	0xFF1
  6205                           postinc0	equ	0xFEE
  6206                           fsr0h	equ	0xFEA
  6207                           fsr0l	equ	0xFE9
  6208                           wreg	equ	0xFE8
  6209                           indf1	equ	0xFE7
  6210                           fsr1h	equ	0xFE2
  6211                           fsr1l	equ	0xFE1
  6212                           bsr	equ	0xFE0
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           fsr2h	equ	0xFDA
  6217                           fsr2l	equ	0xFD9
  6218                           status	equ	0xFD8
  6219                           
  6220 ;; *************** function i1___awmod *****************
  6221 ;; Defined at:
  6222 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  dividend        2    0[COMRAM] int 
  6225 ;;  divisor         2    2[COMRAM] int 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  __awmod         1    5[COMRAM] unsigned char 
  6228 ;;  __awmod         1    4[COMRAM] unsigned char 
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  2    0[COMRAM] int 
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0, prodl
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6238 ;;      Params:         4       0       0       0       0
  6239 ;;      Locals:         2       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0
  6241 ;;      Totals:         6       0       0       0       0
  6242 ;;Total ram usage:        6 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    5
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		i1_send_msg
  6249 ;;		i1_recv_msg
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text38
  6254  00150A                     __ptext38:
  6255                           	opt stack 0
  6256  00150A                     i1___awmod:
  6257                           	opt stack 16
  6258                           
  6259                           ;incstack = 0
  6260  00150A  0E00               	movlw	0
  6261  00150C  6E06               	movwf	i1___awmod@sign,c
  6262  00150E  5002               	movf	i1___awmod@dividend+1,w,c
  6263  001510  0A80               	xorlw	128
  6264  001512  6EF3               	movwf	prodl,c
  6265  001514  0E80               	movlw	128
  6266  001516  5CF3               	subwf	prodl,w,c
  6267  001518  0E00               	movlw	0
  6268  00151A  B4D8               	btfsc	status,2,c
  6269  00151C  5C01               	subwf	i1___awmod@dividend,w,c
  6270  00151E  B0D8               	btfsc	status,0,c
  6271  001520  D006               	goto	i1l2446
  6272  001522  6C01               	negf	i1___awmod@dividend,c
  6273  001524  1E02               	comf	i1___awmod@dividend+1,f,c
  6274  001526  B0D8               	btfsc	status,0,c
  6275  001528  2A02               	incf	i1___awmod@dividend+1,f,c
  6276  00152A  0E01               	movlw	1
  6277  00152C  6E06               	movwf	i1___awmod@sign,c
  6278  00152E                     i1l2446:
  6279  00152E  5004               	movf	i1___awmod@divisor+1,w,c
  6280  001530  0A80               	xorlw	128
  6281  001532  6EF3               	movwf	prodl,c
  6282  001534  0E80               	movlw	128
  6283  001536  5CF3               	subwf	prodl,w,c
  6284  001538  0E00               	movlw	0
  6285  00153A  B4D8               	btfsc	status,2,c
  6286  00153C  5C03               	subwf	i1___awmod@divisor,w,c
  6287  00153E  B0D8               	btfsc	status,0,c
  6288  001540  D004               	goto	i1l2450
  6289  001542  6C03               	negf	i1___awmod@divisor,c
  6290  001544  1E04               	comf	i1___awmod@divisor+1,f,c
  6291  001546  B0D8               	btfsc	status,0,c
  6292  001548  2A04               	incf	i1___awmod@divisor+1,f,c
  6293  00154A                     i1l2450:
  6294  00154A  5004               	movf	i1___awmod@divisor+1,w,c
  6295  00154C  1003               	iorwf	i1___awmod@divisor,w,c
  6296  00154E  B4D8               	btfsc	status,2,c
  6297  001550  D018               	goto	i1l2466
  6298  001552  0E01               	movlw	1
  6299  001554  6E05               	movwf	i1___awmod@counter,c
  6300  001556  D004               	goto	i1l2456
  6301  001558                     i1l2454:
  6302  001558  90D8               	bcf	status,0,c
  6303  00155A  3603               	rlcf	i1___awmod@divisor,f,c
  6304  00155C  3604               	rlcf	i1___awmod@divisor+1,f,c
  6305  00155E  2A05               	incf	i1___awmod@counter,f,c
  6306  001560                     i1l2456:
  6307  001560  AE04               	btfss	i1___awmod@divisor+1,7,c
  6308  001562  D7FA               	goto	i1l2454
  6309  001564                     i1l2458:
  6310  001564  5003               	movf	i1___awmod@divisor,w,c
  6311  001566  5C01               	subwf	i1___awmod@dividend,w,c
  6312  001568  5004               	movf	i1___awmod@divisor+1,w,c
  6313  00156A  5802               	subwfb	i1___awmod@dividend+1,w,c
  6314  00156C  A0D8               	btfss	status,0,c
  6315  00156E  D004               	goto	i1l2462
  6316  001570  5003               	movf	i1___awmod@divisor,w,c
  6317  001572  5E01               	subwf	i1___awmod@dividend,f,c
  6318  001574  5004               	movf	i1___awmod@divisor+1,w,c
  6319  001576  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6320  001578                     i1l2462:
  6321  001578  90D8               	bcf	status,0,c
  6322  00157A  3204               	rrcf	i1___awmod@divisor+1,f,c
  6323  00157C  3203               	rrcf	i1___awmod@divisor,f,c
  6324  00157E  2E05               	decfsz	i1___awmod@counter,f,c
  6325  001580  D7F1               	goto	i1l2458
  6326  001582                     i1l2466:
  6327  001582  5006               	movf	i1___awmod@sign,w,c
  6328  001584  B4D8               	btfsc	status,2,c
  6329  001586  D004               	goto	i1l2470
  6330  001588  6C01               	negf	i1___awmod@dividend,c
  6331  00158A  1E02               	comf	i1___awmod@dividend+1,f,c
  6332  00158C  B0D8               	btfsc	status,0,c
  6333  00158E  2A02               	incf	i1___awmod@dividend+1,f,c
  6334  001590                     i1l2470:
  6335  001590  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6336  001594  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6337  001598  0012               	return	
  6338  00159A                     __end_ofi1___awmod:
  6339                           	opt stack 0
  6340                           pclatu	equ	0xFFB
  6341                           pclath	equ	0xFFA
  6342                           tblptru	equ	0xFF8
  6343                           tblptrh	equ	0xFF7
  6344                           tblptrl	equ	0xFF6
  6345                           tablat	equ	0xFF5
  6346                           prodh	equ	0xFF4
  6347                           prodl	equ	0xFF3
  6348                           intcon	equ	0xFF2
  6349                           intcon2	equ	0xFF1
  6350                           postinc0	equ	0xFEE
  6351                           fsr0h	equ	0xFEA
  6352                           fsr0l	equ	0xFE9
  6353                           wreg	equ	0xFE8
  6354                           indf1	equ	0xFE7
  6355                           fsr1h	equ	0xFE2
  6356                           fsr1l	equ	0xFE1
  6357                           bsr	equ	0xFE0
  6358                           indf2	equ	0xFDF
  6359                           postinc2	equ	0xFDE
  6360                           postdec2	equ	0xFDD
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8
  6364                           
  6365 ;; *************** function _blink1 *****************
  6366 ;; Defined at:
  6367 ;;		line 51 in file "../src/debug.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;		None               void
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6381 ;;      Params:         0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0
  6384 ;;      Totals:         0       0       0       0       0
  6385 ;;Total ram usage:        0 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    5
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_InterruptHandlerLow
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text39
  6396  001D26                     __ptext39:
  6397                           	opt stack 0
  6398  001D26                     _blink1:
  6399                           	opt stack 19
  6400                           
  6401                           ;debug.c: 53: LATBbits.LB1 ^= 1;
  6402                           
  6403                           ;incstack = 0
  6404  001D26  728A               	btg	3978,1,c	;volatile
  6405  001D28  0012               	return	
  6406  001D2A                     __end_of_blink1:
  6407                           	opt stack 0
  6408                           pclatu	equ	0xFFB
  6409                           pclath	equ	0xFFA
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           prodh	equ	0xFF4
  6415                           prodl	equ	0xFF3
  6416                           intcon	equ	0xFF2
  6417                           intcon2	equ	0xFF1
  6418                           postinc0	equ	0xFEE
  6419                           fsr0h	equ	0xFEA
  6420                           fsr0l	equ	0xFE9
  6421                           wreg	equ	0xFE8
  6422                           indf1	equ	0xFE7
  6423                           fsr1h	equ	0xFE2
  6424                           fsr1l	equ	0xFE1
  6425                           bsr	equ	0xFE0
  6426                           indf2	equ	0xFDF
  6427                           postinc2	equ	0xFDE
  6428                           postdec2	equ	0xFDD
  6429                           fsr2h	equ	0xFDA
  6430                           fsr2l	equ	0xFD9
  6431                           status	equ	0xFD8
  6432                           
  6433 ;; *************** function _InterruptHandlerHigh *****************
  6434 ;; Defined at:
  6435 ;;		line 86 in file "../src/interrupts.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;		None               void
  6442 ;; Registers used:
  6443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6449 ;;      Params:         0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0
  6451 ;;      Temps:          0      14       0       0       0
  6452 ;;      Totals:         0      14       0       0       0
  6453 ;;Total ram usage:       14 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    4
  6456 ;; This function calls:
  6457 ;;		_SleepIfOkay
  6458 ;;		_i2c_int_handler
  6459 ;; This function is called by:
  6460 ;;		Interrupt level 2
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	intcode
  6465  000008                     __pintcode:
  6466                           	opt stack 0
  6467  000008                     _InterruptHandlerHigh:
  6468                           	opt stack 16
  6469                           
  6470                           ;incstack = 0
  6471  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh
  6472  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+1
  6473  000010  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6474  000014  EF0F  F00B         	goto	int_func
  6475                           pclatu	equ	0xFFB
  6476                           pclath	equ	0xFFA
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           intcon2	equ	0xFF1
  6485                           postinc0	equ	0xFEE
  6486                           fsr0h	equ	0xFEA
  6487                           fsr0l	equ	0xFE9
  6488                           wreg	equ	0xFE8
  6489                           indf1	equ	0xFE7
  6490                           fsr1h	equ	0xFE2
  6491                           fsr1l	equ	0xFE1
  6492                           bsr	equ	0xFE0
  6493                           indf2	equ	0xFDF
  6494                           postinc2	equ	0xFDE
  6495                           postdec2	equ	0xFDD
  6496                           fsr2h	equ	0xFDA
  6497                           fsr2l	equ	0xFD9
  6498                           status	equ	0xFD8
  6499                           
  6500                           	psect	intcode_body
  6501  00161E                     __pintcode_body:
  6502                           	opt stack 16
  6503  00161E                     int_func:
  6504                           	opt stack 16
  6505  00161E  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6506  001622  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6507  001626  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6508  00162A  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6509  00162E  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6510  001632  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+8
  6511  001636  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+9
  6512  00163A  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6513  00163E  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6514  001642  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+12
  6515  001646  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+13
  6516                           
  6517                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6518  00164A  A69E               	btfss	3998,3,c	;volatile
  6519  00164C  D003               	goto	i2l4104
  6520                           
  6521                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6522  00164E  969E               	bcf	3998,3,c	;volatile
  6523                           
  6524                           ;interrupts.c: 98: i2c_int_handler();
  6525  001650  EC98  F000         	call	_i2c_int_handler	;wreg free
  6526  001654                     i2l4104:
  6527                           
  6528                           ;interrupts.c: 99: }
  6529                           ;interrupts.c: 120: SleepIfOkay();
  6530  001654  EC0F  F00C         	call	_SleepIfOkay	;wreg free
  6531  001658  C0B7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6532  00165C  C0B6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6533  001660  C0B5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6534  001664  C0B4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6535  001668  C0B3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6536  00166C  C0B2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6537  001670  C0B1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6538  001674  C0B0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6539  001678  C0AF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6540  00167C  C0AE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6541  001680  C0AD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6542  001684  C0AC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6543  001688  C0AB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6544  00168C  C0AA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6545  001690  0011               	retfie		f
  6546  001692                     __end_of_InterruptHandlerHigh:
  6547                           	opt stack 0
  6548                           pclatu	equ	0xFFB
  6549                           pclath	equ	0xFFA
  6550                           tblptru	equ	0xFF8
  6551                           tblptrh	equ	0xFF7
  6552                           tblptrl	equ	0xFF6
  6553                           tablat	equ	0xFF5
  6554                           prodh	equ	0xFF4
  6555                           prodl	equ	0xFF3
  6556                           intcon	equ	0xFF2
  6557                           intcon2	equ	0xFF1
  6558                           postinc0	equ	0xFEE
  6559                           fsr0h	equ	0xFEA
  6560                           fsr0l	equ	0xFE9
  6561                           wreg	equ	0xFE8
  6562                           indf1	equ	0xFE7
  6563                           fsr1h	equ	0xFE2
  6564                           fsr1l	equ	0xFE1
  6565                           bsr	equ	0xFE0
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           fsr2h	equ	0xFDA
  6570                           fsr2l	equ	0xFD9
  6571                           status	equ	0xFD8
  6572                           
  6573 ;; *************** function _i2c_int_handler *****************
  6574 ;; Defined at:
  6575 ;;		line 108 in file "../src/my_i2c.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  msg_type        1   39[BANK0 ] unsigned char 
  6580 ;;  length          1   30[BANK0 ] unsigned char 
  6581 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  6582 ;;  data_read       1   41[BANK0 ] unsigned char 
  6583 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  6584 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  6585 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  6586 ;;  need_data       1   36[BANK0 ] unsigned char 
  6587 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6588 ;;  data_written    1   34[BANK0 ] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;		None               void
  6591 ;; Registers used:
  6592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6598 ;;      Params:         0       0       0       0       0
  6599 ;;      Locals:         0      12       0       0       0
  6600 ;;      Temps:          0       1       0       0       0
  6601 ;;      Totals:         0      13       0       0       0
  6602 ;;Total ram usage:       13 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    3
  6605 ;; This function calls:
  6606 ;;		_FromMainHigh_recvmsg
  6607 ;;		_ToMainHigh_sendmsg
  6608 ;;		_handle_start
  6609 ;;		_start_i2c_slave_reply
  6610 ;; This function is called by:
  6611 ;;		_InterruptHandlerHigh
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text41
  6616  000130                     __ptext41:
  6617                           	opt stack 0
  6618  000130                     _i2c_int_handler:
  6619                           	opt stack 16
  6620                           
  6621                           ;my_i2c.c: 112: unsigned char i2c_data;
  6622                           ;my_i2c.c: 113: unsigned char data_read = 0;
  6623                           
  6624                           ;incstack = 0
  6625  000130  0E00               	movlw	0
  6626  000132  0100               	movlb	0	; () banked
  6627  000134  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6628                           
  6629                           ;my_i2c.c: 114: unsigned char data_written = 0;
  6630  000136  0E00               	movlw	0
  6631  000138  0100               	movlb	0	; () banked
  6632  00013A  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6633                           
  6634                           ;my_i2c.c: 115: unsigned char msg_ready = 0;
  6635  00013C  0E00               	movlw	0
  6636  00013E  0100               	movlb	0	; () banked
  6637  000140  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6638                           
  6639                           ;my_i2c.c: 116: unsigned char msg_to_send = 0;
  6640  000142  0E00               	movlw	0
  6641  000144  0100               	movlb	0	; () banked
  6642  000146  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6643                           
  6644                           ;my_i2c.c: 117: unsigned char overrun_error = 0;
  6645  000148  0E00               	movlw	0
  6646  00014A  0100               	movlb	0	; () banked
  6647  00014C  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6648                           
  6649                           ;my_i2c.c: 118: unsigned char error_buf[3];
  6650                           ;my_i2c.c: 119: unsigned char need_data = 1;
  6651  00014E  0E01               	movlw	1
  6652  000150  0100               	movlb	0	; () banked
  6653  000152  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;my_i2c.c: 122: if (SSPCON1bits.SSPOV == 1) {
  6657  000154  ACC6               	btfss	4038,6,c	;volatile
  6658  000156  D024               	goto	i2l3752
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;my_i2c.c: 123: SSPCON1bits.SSPOV = 0;
  6662  000158  9CC6               	bcf	4038,6,c	;volatile
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;my_i2c.c: 127: ic_ptr->status = 0x5;
  6666  00015A  0100               	movlb	0	; () banked
  6667  00015C  EE20 F021          	lfsr	2,33
  6668  000160  0100               	movlb	0	; () banked
  6669  000162  51C5               	movf	_ic_ptr& (0+255),w,b
  6670  000164  26D9               	addwf	fsr2l,f,c
  6671  000166  0100               	movlb	0	; () banked
  6672  000168  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6673  00016A  22DA               	addwfc	fsr2h,f,c
  6674  00016C  0E05               	movlw	5
  6675  00016E  6EDF               	movwf	indf2,c
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;my_i2c.c: 128: overrun_error = 1;
  6679  000170  0E01               	movlw	1
  6680  000172  0100               	movlb	0	; () banked
  6681  000174  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;my_i2c.c: 129: ic_ptr->error_count++;
  6685  000176  0100               	movlb	0	; () banked
  6686  000178  EE20 F023          	lfsr	2,35
  6687  00017C  0100               	movlb	0	; () banked
  6688  00017E  51C5               	movf	_ic_ptr& (0+255),w,b
  6689  000180  26D9               	addwf	fsr2l,f,c
  6690  000182  0100               	movlb	0	; () banked
  6691  000184  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6692  000186  22DA               	addwfc	fsr2h,f,c
  6693  000188  2ADF               	incf	indf2,f,c
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;my_i2c.c: 130: ic_ptr->error_code = 0x4;
  6697  00018A  0100               	movlb	0	; () banked
  6698  00018C  EE20 F022          	lfsr	2,34
  6699  000190  0100               	movlb	0	; () banked
  6700  000192  51C5               	movf	_ic_ptr& (0+255),w,b
  6701  000194  26D9               	addwf	fsr2l,f,c
  6702  000196  0100               	movlb	0	; () banked
  6703  000198  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6704  00019A  22DA               	addwfc	fsr2h,f,c
  6705  00019C  0E04               	movlw	4
  6706  00019E  6EDF               	movwf	indf2,c
  6707  0001A0                     i2l3752:
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;my_i2c.c: 131: }
  6711                           ;my_i2c.c: 133: if (SSPSTATbits.BF == 1) {
  6712  0001A0  A0C7               	btfss	4039,0,c	;volatile
  6713  0001A2  D005               	goto	i2l3758
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;my_i2c.c: 134: i2c_data = SSPBUF;
  6717  0001A4  CFC9 F0A5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;my_i2c.c: 135: data_read = 1;
  6721  0001A8  0E01               	movlw	1
  6722  0001AA  0100               	movlb	0	; () banked
  6723  0001AC  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6724  0001AE                     i2l3758:
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;my_i2c.c: 136: }
  6728                           ;my_i2c.c: 139: if (!overrun_error) {
  6729  0001AE  0100               	movlb	0	; () banked
  6730  0001B0  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6731  0001B2  D1EF               	goto	i2l318
  6732  0001B4  D1D8               	goto	i2l3862
  6733  0001B6                     i2l320:
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;my_i2c.c: 142: {
  6737                           ;my_i2c.c: 144: if (SSPSTATbits.S == 1) {
  6738  0001B6  A6C7               	btfss	4039,3,c	;volatile
  6739  0001B8  D1EC               	goto	i2l318
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;my_i2c.c: 145: handle_start(data_read);
  6743  0001BA  0100               	movlb	0	; () banked
  6744  0001BC  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6745  0001BE  EC9E  F008         	call	_handle_start
  6746                           
  6747                           ;my_i2c.c: 147: if (ic_ptr->status == 0x8) {
  6748  0001C2  0100               	movlb	0	; () banked
  6749  0001C4  EE20 F021          	lfsr	2,33
  6750  0001C8  0100               	movlb	0	; () banked
  6751  0001CA  51C5               	movf	_ic_ptr& (0+255),w,b
  6752  0001CC  26D9               	addwf	fsr2l,f,c
  6753  0001CE  0100               	movlb	0	; () banked
  6754  0001D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6755  0001D2  22DA               	addwfc	fsr2h,f,c
  6756  0001D4  0E08               	movlw	8
  6757  0001D6  62DF               	cpfseq	indf2,c
  6758  0001D8  D1DC               	goto	i2l318
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;my_i2c.c: 148: data_read = 0;
  6762  0001DA  0E00               	movlw	0
  6763  0001DC  0100               	movlb	0	; () banked
  6764  0001DE  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6765                           
  6766                           ;my_i2c.c: 149: msg_to_send = 1;
  6767  0001E0  0E01               	movlw	1
  6768  0001E2  0100               	movlb	0	; () banked
  6769  0001E4  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6770  0001E6  D1D5               	goto	i2l318
  6771  0001E8                     i2l324:
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;my_i2c.c: 155: {
  6775                           ;my_i2c.c: 158: if (SSPSTATbits.P == 1) {
  6776  0001E8  A8C7               	btfss	4039,4,c	;volatile
  6777  0001EA  D034               	goto	i2l3778
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;my_i2c.c: 161: ic_ptr->event_count++;
  6781  0001EC  0100               	movlb	0	; () banked
  6782  0001EE  EE20 F020          	lfsr	2,32
  6783  0001F2  0100               	movlb	0	; () banked
  6784  0001F4  51C5               	movf	_ic_ptr& (0+255),w,b
  6785  0001F6  26D9               	addwf	fsr2l,f,c
  6786  0001F8  0100               	movlb	0	; () banked
  6787  0001FA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6788  0001FC  22DA               	addwfc	fsr2h,f,c
  6789  0001FE  2ADF               	incf	indf2,f,c
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;my_i2c.c: 162: if (data_read) {
  6793  000200  0100               	movlb	0	; () banked
  6794  000202  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6795  000204  B4D8               	btfsc	status,2,c
  6796  000206  D01B               	goto	i2l326
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;my_i2c.c: 163: if (SSPSTATbits.D_A == 0) {
  6800  000208  BAC7               	btfsc	4039,5,c	;volatile
  6801  00020A  D004               	goto	i2l3776
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;my_i2c.c: 164: msg_ready = 1;
  6805  00020C  0E01               	movlw	1
  6806  00020E  0100               	movlb	0	; () banked
  6807  000210  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6808                           
  6809                           ;my_i2c.c: 165: } else {
  6810  000212  D015               	goto	i2l326
  6811  000214                     i2l3776:
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;my_i2c.c: 166: ic_ptr->error_count++;
  6815  000214  0100               	movlb	0	; () banked
  6816  000216  EE20 F023          	lfsr	2,35
  6817  00021A  0100               	movlb	0	; () banked
  6818  00021C  51C5               	movf	_ic_ptr& (0+255),w,b
  6819  00021E  26D9               	addwf	fsr2l,f,c
  6820  000220  0100               	movlb	0	; () banked
  6821  000222  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6822  000224  22DA               	addwfc	fsr2h,f,c
  6823  000226  2ADF               	incf	indf2,f,c
  6824                           
  6825                           ;my_i2c.c: 167: ic_ptr->error_code = 0x6;
  6826  000228  0100               	movlb	0	; () banked
  6827  00022A  EE20 F022          	lfsr	2,34
  6828  00022E  0100               	movlb	0	; () banked
  6829  000230  51C5               	movf	_ic_ptr& (0+255),w,b
  6830  000232  26D9               	addwf	fsr2l,f,c
  6831  000234  0100               	movlb	0	; () banked
  6832  000236  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6833  000238  22DA               	addwfc	fsr2h,f,c
  6834  00023A  0E06               	movlw	6
  6835  00023C                     L14:
  6836  00023C  6EDF               	movwf	indf2,c
  6837  00023E                     i2l326:
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;my_i2c.c: 168: }
  6841                           ;my_i2c.c: 169: }
  6842                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6843  00023E  0100               	movlb	0	; () banked
  6844  000240  EE20 F021          	lfsr	2,33
  6845  000244  0100               	movlb	0	; () banked
  6846  000246  51C5               	movf	_ic_ptr& (0+255),w,b
  6847  000248  26D9               	addwf	fsr2l,f,c
  6848  00024A  0100               	movlb	0	; () banked
  6849  00024C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6850  00024E  22DA               	addwfc	fsr2h,f,c
  6851  000250  0E05               	movlw	5
  6852  000252  D096               	goto	L9
  6853  000254                     i2l3778:
  6854                           
  6855                           ; BSR set to: 0
  6856  000254  0100               	movlb	0	; () banked
  6857  000256  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6858  000258  B4D8               	btfsc	status,2,c
  6859  00025A  D19B               	goto	i2l318
  6860                           
  6861                           ; BSR set to: 0
  6862                           ;my_i2c.c: 172: ic_ptr->event_count++;
  6863  00025C  0100               	movlb	0	; () banked
  6864  00025E  EE20 F020          	lfsr	2,32
  6865  000262  0100               	movlb	0	; () banked
  6866  000264  51C5               	movf	_ic_ptr& (0+255),w,b
  6867  000266  26D9               	addwf	fsr2l,f,c
  6868  000268  0100               	movlb	0	; () banked
  6869  00026A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6870  00026C  22DA               	addwfc	fsr2h,f,c
  6871  00026E  2ADF               	incf	indf2,f,c
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;my_i2c.c: 173: if (SSPSTATbits.D_A == 0)
  6875  000270  BAC7               	btfsc	4039,5,c	;volatile
  6876  000272  D02A               	goto	i2l3794
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;my_i2c.c: 174: {
  6880                           ;my_i2c.c: 175: if (SSPSTATbits.R_W == 0)
  6881  000274  B4C7               	btfsc	4039,2,c	;volatile
  6882  000276  D00B               	goto	i2l3788
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;my_i2c.c: 176: {
  6886                           ;my_i2c.c: 177: ic_ptr->status = 0x7;
  6887  000278  0100               	movlb	0	; () banked
  6888  00027A  EE20 F021          	lfsr	2,33
  6889  00027E  0100               	movlb	0	; () banked
  6890  000280  51C5               	movf	_ic_ptr& (0+255),w,b
  6891  000282  26D9               	addwf	fsr2l,f,c
  6892  000284  0100               	movlb	0	; () banked
  6893  000286  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6894  000288  22DA               	addwfc	fsr2h,f,c
  6895  00028A  0E07               	movlw	7
  6896  00028C  D079               	goto	L9
  6897  00028E                     i2l3788:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;my_i2c.c: 179: else
  6901                           ;my_i2c.c: 180: {
  6902                           ;my_i2c.c: 181: ic_ptr->status = 0x8;
  6903  00028E  0100               	movlb	0	; () banked
  6904  000290  EE20 F021          	lfsr	2,33
  6905  000294  0100               	movlb	0	; () banked
  6906  000296  51C5               	movf	_ic_ptr& (0+255),w,b
  6907  000298  26D9               	addwf	fsr2l,f,c
  6908  00029A  0100               	movlb	0	; () banked
  6909  00029C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6910  00029E  22DA               	addwfc	fsr2h,f,c
  6911  0002A0  0E08               	movlw	8
  6912  0002A2  6EDF               	movwf	indf2,c
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;my_i2c.c: 182: msg_to_send = 1;
  6916  0002A4  0E01               	movlw	1
  6917  0002A6  0100               	movlb	0	; () banked
  6918  0002A8  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;my_i2c.c: 184: data_read = 0;
  6922  0002AA  0E00               	movlw	0
  6923  0002AC  0100               	movlb	0	; () banked
  6924  0002AE  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6925                           
  6926                           ;my_i2c.c: 185: ic_ptr->outbufind = 0;
  6927  0002B0  0100               	movlb	0	; () banked
  6928  0002B2  EE20 F01E          	lfsr	2,30
  6929  0002B6  0100               	movlb	0	; () banked
  6930  0002B8  51C5               	movf	_ic_ptr& (0+255),w,b
  6931  0002BA  26D9               	addwf	fsr2l,f,c
  6932  0002BC  0100               	movlb	0	; () banked
  6933  0002BE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6934  0002C0  22DA               	addwfc	fsr2h,f,c
  6935  0002C2  0E00               	movlw	0
  6936  0002C4  6EDF               	movwf	indf2,c
  6937                           
  6938                           ;my_i2c.c: 186: goto l;
  6939  0002C6  D020               	goto	i2l3796
  6940  0002C8                     i2l3794:
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;my_i2c.c: 189: else
  6944                           ;my_i2c.c: 190: {
  6945                           ;my_i2c.c: 191: ic_ptr->error_count++;
  6946  0002C8  0100               	movlb	0	; () banked
  6947  0002CA  EE20 F023          	lfsr	2,35
  6948  0002CE  0100               	movlb	0	; () banked
  6949  0002D0  51C5               	movf	_ic_ptr& (0+255),w,b
  6950  0002D2  26D9               	addwf	fsr2l,f,c
  6951  0002D4  0100               	movlb	0	; () banked
  6952  0002D6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6953  0002D8  22DA               	addwfc	fsr2h,f,c
  6954  0002DA  2ADF               	incf	indf2,f,c
  6955                           
  6956                           ;my_i2c.c: 192: ic_ptr->status = 0x5;
  6957  0002DC  0100               	movlb	0	; () banked
  6958  0002DE  EE20 F021          	lfsr	2,33
  6959  0002E2  0100               	movlb	0	; () banked
  6960  0002E4  51C5               	movf	_ic_ptr& (0+255),w,b
  6961  0002E6  26D9               	addwf	fsr2l,f,c
  6962  0002E8  0100               	movlb	0	; () banked
  6963  0002EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6964  0002EC  22DA               	addwfc	fsr2h,f,c
  6965  0002EE  0E05               	movlw	5
  6966  0002F0  6EDF               	movwf	indf2,c
  6967                           
  6968                           ;my_i2c.c: 193: ic_ptr->error_code = 0x6;
  6969  0002F2  0100               	movlb	0	; () banked
  6970  0002F4  EE20 F022          	lfsr	2,34
  6971  0002F8  0100               	movlb	0	; () banked
  6972  0002FA  51C5               	movf	_ic_ptr& (0+255),w,b
  6973  0002FC  26D9               	addwf	fsr2l,f,c
  6974  0002FE  0100               	movlb	0	; () banked
  6975  000300  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6976  000302  22DA               	addwfc	fsr2h,f,c
  6977  000304  0E06               	movlw	6
  6978  000306  D03C               	goto	L9
  6979  000308                     i2l3796:
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;my_i2c.c: 200: {
  6983                           ;my_i2c.c: 201: if (ic_ptr->outbufind < 14)
  6984  000308  0100               	movlb	0	; () banked
  6985  00030A  EE20 F01E          	lfsr	2,30
  6986  00030E  0100               	movlb	0	; () banked
  6987  000310  51C5               	movf	_ic_ptr& (0+255),w,b
  6988  000312  26D9               	addwf	fsr2l,f,c
  6989  000314  0100               	movlb	0	; () banked
  6990  000316  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6991  000318  22DA               	addwfc	fsr2h,f,c
  6992  00031A  50DF               	movf	indf2,w,c
  6993  00031C  0100               	movlb	0	; () banked
  6994  00031E  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  6995  000320  0E0E               	movlw	14
  6996  000322  0100               	movlb	0	; () banked
  6997  000324  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  6998  000326  B0D8               	btfsc	status,0,c
  6999  000328  D78A               	goto	i2l326
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;my_i2c.c: 202: {
  7003                           ;my_i2c.c: 203: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7004  00032A  0100               	movlb	0	; () banked
  7005  00032C  EE20 F01E          	lfsr	2,30
  7006  000330  0100               	movlb	0	; () banked
  7007  000332  51C5               	movf	_ic_ptr& (0+255),w,b
  7008  000334  26D9               	addwf	fsr2l,f,c
  7009  000336  0100               	movlb	0	; () banked
  7010  000338  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7011  00033A  22DA               	addwfc	fsr2h,f,c
  7012  00033C  50DF               	movf	indf2,w,c
  7013  00033E  0100               	movlb	0	; () banked
  7014  000340  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7015  000342  0100               	movlb	0	; () banked
  7016  000344  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7017  000346  0D01               	mullw	1
  7018  000348  0E10               	movlw	16
  7019  00034A  26F3               	addwf	prodl,f,c
  7020  00034C  0E00               	movlw	0
  7021  00034E  22F4               	addwfc	prodh,f,c
  7022  000350  50F3               	movf	prodl,w,c
  7023  000352  0100               	movlb	0	; () banked
  7024  000354  25C5               	addwf	_ic_ptr& (0+255),w,b
  7025  000356  6ED9               	movwf	fsr2l,c
  7026  000358  50F4               	movf	prodh,w,c
  7027  00035A  0100               	movlb	0	; () banked
  7028  00035C  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7029  00035E  6EDA               	movwf	fsr2h,c
  7030  000360  50DF               	movf	indf2,w,c
  7031  000362  6EC9               	movwf	4041,c	;volatile
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;my_i2c.c: 204: ic_ptr->outbufind++;
  7035  000364  0100               	movlb	0	; () banked
  7036  000366  EE20 F01E          	lfsr	2,30
  7037  00036A  0100               	movlb	0	; () banked
  7038  00036C  51C5               	movf	_ic_ptr& (0+255),w,b
  7039  00036E  26D9               	addwf	fsr2l,f,c
  7040  000370  0100               	movlb	0	; () banked
  7041  000372  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7042  000374  22DA               	addwfc	fsr2h,f,c
  7043  000376  2ADF               	incf	indf2,f,c
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;my_i2c.c: 205: data_written = 1;
  7047  000378  0E01               	movlw	1
  7048  00037A  0100               	movlb	0	; () banked
  7049  00037C  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  7050                           
  7051                           ;my_i2c.c: 206: }
  7052  00037E  D109               	goto	i2l318
  7053  000380                     L9:
  7054  000380  6EDF               	movwf	indf2,c
  7055  000382  D107               	goto	i2l318
  7056  000384                     i2l339:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;my_i2c.c: 215: {
  7060                           ;my_i2c.c: 217: if (SSPSTATbits.P == 1)
  7061  000384  A8C7               	btfss	4039,4,c	;volatile
  7062  000386  D059               	goto	i2l3824
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;my_i2c.c: 218: {
  7066                           ;my_i2c.c: 221: ic_ptr->event_count++;
  7067  000388  0100               	movlb	0	; () banked
  7068  00038A  EE20 F020          	lfsr	2,32
  7069  00038E  0100               	movlb	0	; () banked
  7070  000390  51C5               	movf	_ic_ptr& (0+255),w,b
  7071  000392  26D9               	addwf	fsr2l,f,c
  7072  000394  0100               	movlb	0	; () banked
  7073  000396  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7074  000398  22DA               	addwfc	fsr2h,f,c
  7075  00039A  2ADF               	incf	indf2,f,c
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;my_i2c.c: 222: if (data_read)
  7079  00039C  0100               	movlb	0	; () banked
  7080  00039E  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7081  0003A0  B4D8               	btfsc	status,2,c
  7082  0003A2  D047               	goto	i2l3820
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;my_i2c.c: 223: {
  7086                           ;my_i2c.c: 224: if (SSPSTATbits.D_A == 1)
  7087  0003A4  AAC7               	btfss	4039,5,c	;volatile
  7088  0003A6  D025               	goto	i2l3818
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;my_i2c.c: 225: {
  7092                           ;my_i2c.c: 227: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7093  0003A8  0100               	movlb	0	; () banked
  7094  0003AA  EE20 F00E          	lfsr	2,14
  7095  0003AE  0100               	movlb	0	; () banked
  7096  0003B0  51C5               	movf	_ic_ptr& (0+255),w,b
  7097  0003B2  26D9               	addwf	fsr2l,f,c
  7098  0003B4  0100               	movlb	0	; () banked
  7099  0003B6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7100  0003B8  22DA               	addwfc	fsr2h,f,c
  7101  0003BA  50DF               	movf	indf2,w,c
  7102  0003BC  0100               	movlb	0	; () banked
  7103  0003BE  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7104  0003C0  0100               	movlb	0	; () banked
  7105  0003C2  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7106  0003C4  0D01               	mullw	1
  7107  0003C6  50F3               	movf	prodl,w,c
  7108  0003C8  0100               	movlb	0	; () banked
  7109  0003CA  25C5               	addwf	_ic_ptr& (0+255),w,b
  7110  0003CC  6ED9               	movwf	fsr2l,c
  7111  0003CE  50F4               	movf	prodh,w,c
  7112  0003D0  0100               	movlb	0	; () banked
  7113  0003D2  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7114  0003D4  6EDA               	movwf	fsr2h,c
  7115  0003D6  0100               	movlb	0	; () banked
  7116  0003D8  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;my_i2c.c: 228: ic_ptr->buflen++;
  7120  0003DC  0100               	movlb	0	; () banked
  7121  0003DE  EE20 F00E          	lfsr	2,14
  7122  0003E2  0100               	movlb	0	; () banked
  7123  0003E4  51C5               	movf	_ic_ptr& (0+255),w,b
  7124  0003E6  26D9               	addwf	fsr2l,f,c
  7125  0003E8  0100               	movlb	0	; () banked
  7126  0003EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7127  0003EC  22DA               	addwfc	fsr2h,f,c
  7128  0003EE  2ADF               	incf	indf2,f,c
  7129  0003F0  D020               	goto	i2l3820
  7130  0003F2                     i2l3818:
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;my_i2c.c: 231: else
  7134                           ;my_i2c.c: 232: {
  7135                           ;my_i2c.c: 234: ic_ptr->error_count++;
  7136  0003F2  0100               	movlb	0	; () banked
  7137  0003F4  EE20 F023          	lfsr	2,35
  7138  0003F8  0100               	movlb	0	; () banked
  7139  0003FA  51C5               	movf	_ic_ptr& (0+255),w,b
  7140  0003FC  26D9               	addwf	fsr2l,f,c
  7141  0003FE  0100               	movlb	0	; () banked
  7142  000400  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7143  000402  22DA               	addwfc	fsr2h,f,c
  7144  000404  2ADF               	incf	indf2,f,c
  7145                           
  7146                           ;my_i2c.c: 235: ic_ptr->error_code = 0x6;
  7147  000406  0100               	movlb	0	; () banked
  7148  000408  EE20 F022          	lfsr	2,34
  7149  00040C  0100               	movlb	0	; () banked
  7150  00040E  51C5               	movf	_ic_ptr& (0+255),w,b
  7151  000410  26D9               	addwf	fsr2l,f,c
  7152  000412  0100               	movlb	0	; () banked
  7153  000414  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7154  000416  22DA               	addwfc	fsr2h,f,c
  7155  000418  0E06               	movlw	6
  7156  00041A  6EDF               	movwf	indf2,c
  7157                           
  7158                           ;my_i2c.c: 236: ic_ptr->status = 0x5;
  7159  00041C  0100               	movlb	0	; () banked
  7160  00041E  EE20 F021          	lfsr	2,33
  7161  000422  0100               	movlb	0	; () banked
  7162  000424  51C5               	movf	_ic_ptr& (0+255),w,b
  7163  000426  26D9               	addwf	fsr2l,f,c
  7164  000428  0100               	movlb	0	; () banked
  7165  00042A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7166  00042C  22DA               	addwfc	fsr2h,f,c
  7167  00042E  0E05               	movlw	5
  7168  000430  D705               	goto	L14
  7169  000432                     i2l3820:
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 239: else
  7173                           ;my_i2c.c: 240: {
  7174                           ;my_i2c.c: 242: msg_ready = 1;
  7175  000432  0E01               	movlw	1
  7176  000434  0100               	movlb	0	; () banked
  7177  000436  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7178                           
  7179                           ; BSR set to: 0
  7180  000438  D702               	goto	i2l326
  7181  00043A                     i2l3824:
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;my_i2c.c: 246: else if (data_read)
  7185  00043A  0100               	movlb	0	; () banked
  7186  00043C  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7187  00043E  B4D8               	btfsc	status,2,c
  7188  000440  D0A8               	goto	i2l318
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;my_i2c.c: 247: {
  7192                           ;my_i2c.c: 248: ic_ptr->event_count++;
  7193  000442  0100               	movlb	0	; () banked
  7194  000444  EE20 F020          	lfsr	2,32
  7195  000448  0100               	movlb	0	; () banked
  7196  00044A  51C5               	movf	_ic_ptr& (0+255),w,b
  7197  00044C  26D9               	addwf	fsr2l,f,c
  7198  00044E  0100               	movlb	0	; () banked
  7199  000450  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7200  000452  22DA               	addwfc	fsr2h,f,c
  7201  000454  2ADF               	incf	indf2,f,c
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;my_i2c.c: 249: if (SSP1STATbits.D_A == 1)
  7205  000456  AAC7               	btfss	4039,5,c	;volatile
  7206  000458  D01E               	goto	i2l347
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;my_i2c.c: 250: {
  7210                           ;my_i2c.c: 252: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7211  00045A  0100               	movlb	0	; () banked
  7212  00045C  EE20 F00E          	lfsr	2,14
  7213  000460  0100               	movlb	0	; () banked
  7214  000462  51C5               	movf	_ic_ptr& (0+255),w,b
  7215  000464  26D9               	addwf	fsr2l,f,c
  7216  000466  0100               	movlb	0	; () banked
  7217  000468  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7218  00046A  22DA               	addwfc	fsr2h,f,c
  7219  00046C  50DF               	movf	indf2,w,c
  7220  00046E  0100               	movlb	0	; () banked
  7221  000470  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7222  000472  0100               	movlb	0	; () banked
  7223  000474  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7224  000476  0D01               	mullw	1
  7225  000478  50F3               	movf	prodl,w,c
  7226  00047A  0100               	movlb	0	; () banked
  7227  00047C  25C5               	addwf	_ic_ptr& (0+255),w,b
  7228  00047E  6ED9               	movwf	fsr2l,c
  7229  000480  50F4               	movf	prodh,w,c
  7230  000482  0100               	movlb	0	; () banked
  7231  000484  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7232  000486  6EDA               	movwf	fsr2h,c
  7233  000488  0100               	movlb	0	; () banked
  7234  00048A  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;my_i2c.c: 253: ic_ptr->buflen++;
  7238  00048E  0100               	movlb	0	; () banked
  7239  000490  EE20 F00E          	lfsr	2,14
  7240  000494  D036               	goto	L10
  7241  000496                     i2l347:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;my_i2c.c: 255: else
  7245                           ;my_i2c.c: 256: {
  7246                           ;my_i2c.c: 257: if (SSPSTATbits.R_W == 1)
  7247  000496  A4C7               	btfss	4039,2,c	;volatile
  7248  000498  D6BD               	goto	i2l3776
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;my_i2c.c: 258: {
  7252                           ;my_i2c.c: 259: if( ic_ptr->buffer[0] == 0x06 )
  7253  00049A  0E06               	movlw	6
  7254  00049C  C0C5  FFD9         	movff	_ic_ptr,fsr2l
  7255  0004A0  C0C6  FFDA         	movff	_ic_ptr+1,fsr2h
  7256  0004A4  62DF               	cpfseq	indf2,c
  7257  0004A6  D035               	goto	i2l3850
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;my_i2c.c: 260: {
  7261                           ;my_i2c.c: 261: ic_ptr->status = 0x8;
  7262  0004A8  0100               	movlb	0	; () banked
  7263  0004AA  EE20 F021          	lfsr	2,33
  7264  0004AE  0100               	movlb	0	; () banked
  7265  0004B0  51C5               	movf	_ic_ptr& (0+255),w,b
  7266  0004B2  26D9               	addwf	fsr2l,f,c
  7267  0004B4  0100               	movlb	0	; () banked
  7268  0004B6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7269  0004B8  22DA               	addwfc	fsr2h,f,c
  7270  0004BA  0E08               	movlw	8
  7271  0004BC  6EDF               	movwf	indf2,c
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;my_i2c.c: 262: msg_ready = 1;
  7275  0004BE  0E01               	movlw	1
  7276  0004C0  0100               	movlb	0	; () banked
  7277  0004C2  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;my_i2c.c: 263: msg_to_send = 1;
  7281  0004C4  0E01               	movlw	1
  7282  0004C6  0100               	movlb	0	; () banked
  7283  0004C8  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;my_i2c.c: 265: data_read = 0;
  7287  0004CA  0E00               	movlw	0
  7288  0004CC  0100               	movlb	0	; () banked
  7289  0004CE  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;my_i2c.c: 266: ic_ptr->outbufind = 0;
  7293  0004D0  0100               	movlb	0	; () banked
  7294  0004D2  EE20 F01E          	lfsr	2,30
  7295  0004D6  0100               	movlb	0	; () banked
  7296  0004D8  51C5               	movf	_ic_ptr& (0+255),w,b
  7297  0004DA  26D9               	addwf	fsr2l,f,c
  7298  0004DC  0100               	movlb	0	; () banked
  7299  0004DE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7300  0004E0  22DA               	addwfc	fsr2h,f,c
  7301  0004E2  0E00               	movlw	0
  7302  0004E4  6EDF               	movwf	indf2,c
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;my_i2c.c: 267: SSPBUF = ic_ptr->outbuffer[0];
  7306  0004E6  0100               	movlb	0	; () banked
  7307  0004E8  EE20 F010          	lfsr	2,16
  7308  0004EC  0100               	movlb	0	; () banked
  7309  0004EE  51C5               	movf	_ic_ptr& (0+255),w,b
  7310  0004F0  26D9               	addwf	fsr2l,f,c
  7311  0004F2  0100               	movlb	0	; () banked
  7312  0004F4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7313  0004F6  22DA               	addwfc	fsr2h,f,c
  7314  0004F8  50DF               	movf	indf2,w,c
  7315  0004FA  6EC9               	movwf	4041,c	;volatile
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;my_i2c.c: 268: ic_ptr->outbufind++;
  7319  0004FC  0100               	movlb	0	; () banked
  7320  0004FE  EE20 F01E          	lfsr	2,30
  7321  000502                     L10:
  7322  000502  0100               	movlb	0	; () banked
  7323  000504  51C5               	movf	_ic_ptr& (0+255),w,b
  7324  000506  26D9               	addwf	fsr2l,f,c
  7325  000508  0100               	movlb	0	; () banked
  7326  00050A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7327  00050C  22DA               	addwfc	fsr2h,f,c
  7328  00050E  2ADF               	incf	indf2,f,c
  7329                           
  7330                           ;my_i2c.c: 270: }
  7331  000510  D040               	goto	i2l318
  7332  000512                     i2l3850:
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;my_i2c.c: 271: else
  7336                           ;my_i2c.c: 272: {
  7337                           ;my_i2c.c: 273: if( ic_ptr->outbufind < 14 )
  7338  000512  0100               	movlb	0	; () banked
  7339  000514  EE20 F01E          	lfsr	2,30
  7340  000518  0100               	movlb	0	; () banked
  7341  00051A  51C5               	movf	_ic_ptr& (0+255),w,b
  7342  00051C  26D9               	addwf	fsr2l,f,c
  7343  00051E  0100               	movlb	0	; () banked
  7344  000520  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7345  000522  22DA               	addwfc	fsr2h,f,c
  7346  000524  50DF               	movf	indf2,w,c
  7347  000526  0100               	movlb	0	; () banked
  7348  000528  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7349  00052A  0E0E               	movlw	14
  7350  00052C  0100               	movlb	0	; () banked
  7351  00052E  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7352  000530  B0D8               	btfsc	status,0,c
  7353  000532  D00E               	goto	i2l3856
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;my_i2c.c: 274: {
  7357                           ;my_i2c.c: 275: ic_ptr->outbufind++;
  7358  000534  0100               	movlb	0	; () banked
  7359  000536  EE20 F01E          	lfsr	2,30
  7360  00053A  0100               	movlb	0	; () banked
  7361  00053C  51C5               	movf	_ic_ptr& (0+255),w,b
  7362  00053E  26D9               	addwf	fsr2l,f,c
  7363  000540  0100               	movlb	0	; () banked
  7364  000542  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7365  000544  22DA               	addwfc	fsr2h,f,c
  7366  000546  2ADF               	incf	indf2,f,c
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;my_i2c.c: 276: data_read = 0;
  7370  000548  0E00               	movlw	0
  7371  00054A  0100               	movlb	0	; () banked
  7372  00054C  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7373                           
  7374                           ;my_i2c.c: 277: }
  7375  00054E  D021               	goto	i2l318
  7376  000550                     i2l3856:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;my_i2c.c: 278: else
  7380                           ;my_i2c.c: 279: {
  7381                           ;my_i2c.c: 280: ic_ptr->outbufind = 0;
  7382  000550  0100               	movlb	0	; () banked
  7383  000552  EE20 F01E          	lfsr	2,30
  7384  000556  0100               	movlb	0	; () banked
  7385  000558  51C5               	movf	_ic_ptr& (0+255),w,b
  7386  00055A  26D9               	addwf	fsr2l,f,c
  7387  00055C  0100               	movlb	0	; () banked
  7388  00055E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7389  000560  22DA               	addwfc	fsr2h,f,c
  7390  000562  0E00               	movlw	0
  7391  000564  D66B               	goto	L14
  7392  000566                     i2l3862:
  7393                           
  7394                           ; BSR set to: 0
  7395  000566  0100               	movlb	0	; () banked
  7396  000568  EE20 F021          	lfsr	2,33
  7397  00056C  0100               	movlb	0	; () banked
  7398  00056E  51C5               	movf	_ic_ptr& (0+255),w,b
  7399  000570  26D9               	addwf	fsr2l,f,c
  7400  000572  0100               	movlb	0	; () banked
  7401  000574  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7402  000576  22DA               	addwfc	fsr2h,f,c
  7403  000578  50DF               	movf	indf2,w,c
  7404                           
  7405                           ; Switch size 1, requested type "space"
  7406                           ; Number of cases is 4, Range of values is 5 to 8
  7407                           ; switch strategies available:
  7408                           ; Name         Instructions Cycles
  7409                           ; simple_byte           13     7 (average)
  7410                           ;	Chosen strategy is simple_byte
  7411  00057A  0A05               	xorlw	5	; case 5
  7412  00057C  B4D8               	btfsc	status,2,c
  7413  00057E  D61B               	goto	i2l320
  7414  000580  0A03               	xorlw	3	; case 6
  7415  000582  B4D8               	btfsc	status,2,c
  7416  000584  D631               	goto	i2l324
  7417  000586  0A01               	xorlw	1	; case 7
  7418  000588  B4D8               	btfsc	status,2,c
  7419  00058A  D6FC               	goto	i2l339
  7420  00058C  0A0F               	xorlw	15	; case 8
  7421  00058E  B4D8               	btfsc	status,2,c
  7422  000590  D6BB               	goto	i2l3796
  7423  000592                     i2l318:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;my_i2c.c: 298: }
  7427                           ;my_i2c.c: 301: if (data_read || data_written) {
  7428  000592  0100               	movlb	0	; () banked
  7429  000594  67A9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7430  000596  D004               	goto	i2l357
  7431                           
  7432                           ; BSR set to: 0
  7433  000598  0100               	movlb	0	; () banked
  7434  00059A  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7435  00059C  B4D8               	btfsc	status,2,c
  7436  00059E  D002               	goto	i2l3868
  7437  0005A0                     i2l357:
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;my_i2c.c: 303: if (SSPCON1bits.CKP == 0) {
  7441  0005A0  A8C6               	btfss	4038,4,c	;volatile
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;my_i2c.c: 304: SSPCON1bits.CKP = 1;
  7445  0005A2  88C6               	bsf	4038,4,c	;volatile
  7446  0005A4                     i2l3868:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;my_i2c.c: 306: }
  7450                           ;my_i2c.c: 307: }
  7451                           ;my_i2c.c: 312: if ((ic_ptr->buflen > 14) && (!msg_ready))
  7452  0005A4  0100               	movlb	0	; () banked
  7453  0005A6  EE20 F00E          	lfsr	2,14
  7454  0005AA  0100               	movlb	0	; () banked
  7455  0005AC  51C5               	movf	_ic_ptr& (0+255),w,b
  7456  0005AE  26D9               	addwf	fsr2l,f,c
  7457  0005B0  0100               	movlb	0	; () banked
  7458  0005B2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7459  0005B4  22DA               	addwfc	fsr2h,f,c
  7460  0005B6  0E0E               	movlw	14
  7461  0005B8  64DF               	cpfsgt	indf2,c
  7462  0005BA  D023               	goto	i2l3874
  7463                           
  7464                           ; BSR set to: 0
  7465  0005BC  0100               	movlb	0	; () banked
  7466  0005BE  67A8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7467  0005C0  D020               	goto	i2l3874
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;my_i2c.c: 313: {
  7471                           ;my_i2c.c: 315: ic_ptr->status = 0x5;
  7472  0005C2  0100               	movlb	0	; () banked
  7473  0005C4  EE20 F021          	lfsr	2,33
  7474  0005C8  0100               	movlb	0	; () banked
  7475  0005CA  51C5               	movf	_ic_ptr& (0+255),w,b
  7476  0005CC  26D9               	addwf	fsr2l,f,c
  7477  0005CE  0100               	movlb	0	; () banked
  7478  0005D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7479  0005D2  22DA               	addwfc	fsr2h,f,c
  7480  0005D4  0E05               	movlw	5
  7481  0005D6  6EDF               	movwf	indf2,c
  7482                           
  7483                           ;my_i2c.c: 316: ic_ptr->error_count++;
  7484  0005D8  0100               	movlb	0	; () banked
  7485  0005DA  EE20 F023          	lfsr	2,35
  7486  0005DE  0100               	movlb	0	; () banked
  7487  0005E0  51C5               	movf	_ic_ptr& (0+255),w,b
  7488  0005E2  26D9               	addwf	fsr2l,f,c
  7489  0005E4  0100               	movlb	0	; () banked
  7490  0005E6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7491  0005E8  22DA               	addwfc	fsr2h,f,c
  7492  0005EA  2ADF               	incf	indf2,f,c
  7493                           
  7494                           ;my_i2c.c: 317: ic_ptr->error_code = 0x7;
  7495  0005EC  0100               	movlb	0	; () banked
  7496  0005EE  EE20 F022          	lfsr	2,34
  7497  0005F2  0100               	movlb	0	; () banked
  7498  0005F4  51C5               	movf	_ic_ptr& (0+255),w,b
  7499  0005F6  26D9               	addwf	fsr2l,f,c
  7500  0005F8  0100               	movlb	0	; () banked
  7501  0005FA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7502  0005FC  22DA               	addwfc	fsr2h,f,c
  7503  0005FE  0E07               	movlw	7
  7504  000600  6EDF               	movwf	indf2,c
  7505  000602                     i2l3874:
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;my_i2c.c: 318: }
  7509                           ;my_i2c.c: 320: if (msg_ready)
  7510  000602  0100               	movlb	0	; () banked
  7511  000604  51A8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7512  000606  B4D8               	btfsc	status,2,c
  7513  000608  D032               	goto	i2l3882
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;my_i2c.c: 321: {
  7517                           ;my_i2c.c: 322: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7518  00060A  0100               	movlb	0	; () banked
  7519  00060C  EE20 F020          	lfsr	2,32
  7520  000610  0100               	movlb	0	; () banked
  7521  000612  51C5               	movf	_ic_ptr& (0+255),w,b
  7522  000614  26D9               	addwf	fsr2l,f,c
  7523  000616  0100               	movlb	0	; () banked
  7524  000618  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7525  00061A  22DA               	addwfc	fsr2h,f,c
  7526  00061C  0100               	movlb	0	; () banked
  7527  00061E  EE10 F00E          	lfsr	1,14
  7528  000622  0100               	movlb	0	; () banked
  7529  000624  51C5               	movf	_ic_ptr& (0+255),w,b
  7530  000626  26E1               	addwf	fsr1l,f,c
  7531  000628  0100               	movlb	0	; () banked
  7532  00062A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7533  00062C  22E2               	addwfc	fsr1h,f,c
  7534  00062E  50E7               	movf	indf1,w,c
  7535  000630  0100               	movlb	0	; () banked
  7536  000632  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7537  000634  0100               	movlb	0	; () banked
  7538  000636  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7539  000638  0D01               	mullw	1
  7540  00063A  50F3               	movf	prodl,w,c
  7541  00063C  0100               	movlb	0	; () banked
  7542  00063E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7543  000640  6EE1               	movwf	fsr1l,c
  7544  000642  50F4               	movf	prodh,w,c
  7545  000644  0100               	movlb	0	; () banked
  7546  000646  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7547  000648  6EE2               	movwf	fsr1h,c
  7548  00064A  CFDF FFE7          	movff	indf2,indf1
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;my_i2c.c: 323: ToMainHigh_sendmsg(14, 40, (void *) ic_ptr->buffer);
  7552  00064E  0E28               	movlw	40
  7553  000650  0100               	movlb	0	; () banked
  7554  000652  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7555  000654  0100               	movlb	0	; () banked
  7556  000656  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7557  00065A  0100               	movlb	0	; () banked
  7558  00065C  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7559  000660  0E0E               	movlw	14
  7560  000662  ECE0  F00D         	call	_ToMainHigh_sendmsg
  7561                           
  7562                           ;my_i2c.c: 324: ic_ptr->buflen = 0;
  7563  000666  0100               	movlb	0	; () banked
  7564  000668  EE20 F00E          	lfsr	2,14
  7565  00066C  D041               	goto	L11
  7566  00066E                     i2l3882:
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;my_i2c.c: 326: else if (ic_ptr->error_count >= 1)
  7570  00066E  0100               	movlb	0	; () banked
  7571  000670  EE20 F023          	lfsr	2,35
  7572  000674  0100               	movlb	0	; () banked
  7573  000676  51C5               	movf	_ic_ptr& (0+255),w,b
  7574  000678  26D9               	addwf	fsr2l,f,c
  7575  00067A  0100               	movlb	0	; () banked
  7576  00067C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7577  00067E  22DA               	addwfc	fsr2h,f,c
  7578  000680  50DF               	movf	indf2,w,c
  7579  000682  B4D8               	btfsc	status,2,c
  7580  000684  D03D               	goto	i2l3890
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;my_i2c.c: 327: {
  7584                           ;my_i2c.c: 328: error_buf[0] = ic_ptr->error_count;
  7585  000686  0100               	movlb	0	; () banked
  7586  000688  EE20 F023          	lfsr	2,35
  7587  00068C  0100               	movlb	0	; () banked
  7588  00068E  51C5               	movf	_ic_ptr& (0+255),w,b
  7589  000690  26D9               	addwf	fsr2l,f,c
  7590  000692  0100               	movlb	0	; () banked
  7591  000694  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7592  000696  22DA               	addwfc	fsr2h,f,c
  7593  000698  50DF               	movf	indf2,w,c
  7594  00069A  0100               	movlb	0	; () banked
  7595  00069C  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  7596                           
  7597                           ;my_i2c.c: 329: error_buf[1] = ic_ptr->error_code;
  7598  00069E  0100               	movlb	0	; () banked
  7599  0006A0  EE20 F022          	lfsr	2,34
  7600  0006A4  0100               	movlb	0	; () banked
  7601  0006A6  51C5               	movf	_ic_ptr& (0+255),w,b
  7602  0006A8  26D9               	addwf	fsr2l,f,c
  7603  0006AA  0100               	movlb	0	; () banked
  7604  0006AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7605  0006AE  22DA               	addwfc	fsr2h,f,c
  7606  0006B0  50DF               	movf	indf2,w,c
  7607  0006B2  0100               	movlb	0	; () banked
  7608  0006B4  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7609                           
  7610                           ;my_i2c.c: 330: error_buf[2] = ic_ptr->event_count;
  7611  0006B6  0100               	movlb	0	; () banked
  7612  0006B8  EE20 F020          	lfsr	2,32
  7613  0006BC  0100               	movlb	0	; () banked
  7614  0006BE  51C5               	movf	_ic_ptr& (0+255),w,b
  7615  0006C0  26D9               	addwf	fsr2l,f,c
  7616  0006C2  0100               	movlb	0	; () banked
  7617  0006C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7618  0006C6  22DA               	addwfc	fsr2h,f,c
  7619  0006C8  50DF               	movf	indf2,w,c
  7620  0006CA  0100               	movlb	0	; () banked
  7621  0006CC  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;my_i2c.c: 331: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7625  0006CE  0E29               	movlw	41
  7626  0006D0  0100               	movlb	0	; () banked
  7627  0006D2  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7628  0006D4  0100               	movlb	0	; () banked
  7629  0006D6  0E00               	movlw	high i2c_int_handler@error_buf
  7630  0006D8  0100               	movlb	0	; () banked
  7631  0006DA  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7632  0006DC  0100               	movlb	0	; () banked
  7633  0006DE  0E9F               	movlw	low i2c_int_handler@error_buf
  7634  0006E0  0100               	movlb	0	; () banked
  7635  0006E2  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7636  0006E4  0E03               	movlw	3
  7637  0006E6  ECE0  F00D         	call	_ToMainHigh_sendmsg
  7638                           
  7639                           ;my_i2c.c: 332: ic_ptr->error_count = 0;
  7640  0006EA  0100               	movlb	0	; () banked
  7641  0006EC  EE20 F023          	lfsr	2,35
  7642  0006F0                     L11:
  7643  0006F0  0100               	movlb	0	; () banked
  7644  0006F2  51C5               	movf	_ic_ptr& (0+255),w,b
  7645  0006F4  26D9               	addwf	fsr2l,f,c
  7646  0006F6  0100               	movlb	0	; () banked
  7647  0006F8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7648  0006FA  22DA               	addwfc	fsr2h,f,c
  7649  0006FC  0E00               	movlw	0
  7650  0006FE  6EDF               	movwf	indf2,c
  7651  000700                     i2l3890:
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;my_i2c.c: 333: }
  7655                           ;my_i2c.c: 334: if (msg_to_send) {
  7656  000700  0100               	movlb	0	; () banked
  7657  000702  51A6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7658  000704  B4D8               	btfsc	status,2,c
  7659  000706  D01F               	goto	i2l3900
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;my_i2c.c: 336: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  7663  000708  0E10               	movlw	16
  7664  00070A  0100               	movlb	0	; () banked
  7665  00070C  25C5               	addwf	_ic_ptr& (0+255),w,b
  7666  00070E  0100               	movlb	0	; () banked
  7667  000710  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7668  000712  0E00               	movlw	0
  7669  000714  0100               	movlb	0	; () banked
  7670  000716  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7671  000718  0100               	movlb	0	; () banked
  7672  00071A  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7673  00071C  0E0E               	movlw	14
  7674  00071E  ECE3  F00C         	call	_start_i2c_slave_reply
  7675                           
  7676                           ;my_i2c.c: 338: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7677  000722  0E2A               	movlw	42
  7678  000724  0100               	movlb	0	; () banked
  7679  000726  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7680  000728  0100               	movlb	0	; () banked
  7681  00072A  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7682  00072E  0100               	movlb	0	; () banked
  7683  000730  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7684  000734  0E00               	movlw	0
  7685  000736  ECE0  F00D         	call	_ToMainHigh_sendmsg
  7686                           
  7687                           ;my_i2c.c: 339: need_data = 1;
  7688  00073A  0E01               	movlw	1
  7689  00073C  0100               	movlb	0	; () banked
  7690  00073E  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;my_i2c.c: 340: msg_to_send = 0;
  7694  000740  0E00               	movlw	0
  7695  000742  0100               	movlb	0	; () banked
  7696  000744  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7697  000746                     i2l3900:
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;my_i2c.c: 341: }
  7701                           ;my_i2c.c: 344: if(need_data)
  7702  000746  0100               	movlb	0	; () banked
  7703  000748  51A4               	movf	i2c_int_handler@need_data& (0+255),w,b
  7704  00074A  B4D8               	btfsc	status,2,c
  7705  00074C  0012               	return	
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;my_i2c.c: 345: {
  7709                           ;my_i2c.c: 346: unsigned char msg_type;
  7710                           ;my_i2c.c: 347: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  7711  00074E  0100               	movlb	0	; () banked
  7712  000750  0E00               	movlw	high i2c_int_handler@msg_type
  7713  000752  0100               	movlb	0	; () banked
  7714  000754  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7715  000756  0100               	movlb	0	; () banked
  7716  000758  0EA7               	movlw	low i2c_int_handler@msg_type
  7717  00075A  0100               	movlb	0	; () banked
  7718  00075C  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7719  00075E  0E10               	movlw	16
  7720  000760  0100               	movlb	0	; () banked
  7721  000762  25C5               	addwf	_ic_ptr& (0+255),w,b
  7722  000764  0100               	movlb	0	; () banked
  7723  000766  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7724  000768  0E00               	movlw	0
  7725  00076A  0100               	movlb	0	; () banked
  7726  00076C  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7727  00076E  0100               	movlb	0	; () banked
  7728  000770  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7729  000772  0E0E               	movlw	14
  7730  000774  EC7E  F00D         	call	_FromMainHigh_recvmsg
  7731  000778  0100               	movlb	0	; () banked
  7732  00077A  6F9E               	movwf	i2c_int_handler@length& (0+255),b
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;my_i2c.c: 356: else
  7736                           ;my_i2c.c: 357: {
  7737                           ;my_i2c.c: 358: need_data = 0;
  7738                           
  7739                           ; BSR set to: 0
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;my_i2c.c: 353: {
  7743                           ;my_i2c.c: 355: }
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;my_i2c.c: 352: else if( length < 0 )
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;my_i2c.c: 349: {
  7750                           ;my_i2c.c: 351: }
  7751                           
  7752                           ;my_i2c.c: 348: if( length == -4 )
  7753  00077C  0E00               	movlw	0
  7754  00077E  0100               	movlb	0	; () banked
  7755  000780  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7756  000782  0012               	return	
  7757  000784                     __end_of_i2c_int_handler:
  7758                           	opt stack 0
  7759                           pclatu	equ	0xFFB
  7760                           pclath	equ	0xFFA
  7761                           tblptru	equ	0xFF8
  7762                           tblptrh	equ	0xFF7
  7763                           tblptrl	equ	0xFF6
  7764                           tablat	equ	0xFF5
  7765                           prodh	equ	0xFF4
  7766                           prodl	equ	0xFF3
  7767                           intcon	equ	0xFF2
  7768                           intcon2	equ	0xFF1
  7769                           postinc0	equ	0xFEE
  7770                           fsr0h	equ	0xFEA
  7771                           fsr0l	equ	0xFE9
  7772                           wreg	equ	0xFE8
  7773                           indf1	equ	0xFE7
  7774                           fsr1h	equ	0xFE2
  7775                           fsr1l	equ	0xFE1
  7776                           bsr	equ	0xFE0
  7777                           indf2	equ	0xFDF
  7778                           postinc2	equ	0xFDE
  7779                           postdec2	equ	0xFDD
  7780                           fsr2h	equ	0xFDA
  7781                           fsr2l	equ	0xFD9
  7782                           status	equ	0xFD8
  7783                           
  7784 ;; *************** function _start_i2c_slave_reply *****************
  7785 ;; Defined at:
  7786 ;;		line 57 in file "../src/my_i2c.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  length          1    wreg     unsigned char 
  7789 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  7790 ;;		 -> NULL(0), main@ic(38), 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  length          1    2[BANK0 ] unsigned char 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;		None               void
  7795 ;; Registers used:
  7796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7802 ;;      Params:         0       2       0       0       0
  7803 ;;      Locals:         0       1       0       0       0
  7804 ;;      Temps:          0       0       0       0       0
  7805 ;;      Totals:         0       3       0       0       0
  7806 ;;Total ram usage:        3 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_i2c_int_handler
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text42
  7816  0019C6                     __ptext42:
  7817                           	opt stack 0
  7818  0019C6                     _start_i2c_slave_reply:
  7819                           	opt stack 18
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;incstack = 0
  7823                           ;start_i2c_slave_reply@length stored from wreg
  7824  0019C6  0100               	movlb	0	; () banked
  7825  0019C8  6F82               	movwf	start_i2c_slave_reply@length& (0+255),b
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;my_i2c.c: 64: ic_ptr->outbuflen = length;
  7829  0019CA  0100               	movlb	0	; () banked
  7830  0019CC  EE20 F01F          	lfsr	2,31
  7831  0019D0  0100               	movlb	0	; () banked
  7832  0019D2  51C5               	movf	_ic_ptr& (0+255),w,b
  7833  0019D4  26D9               	addwf	fsr2l,f,c
  7834  0019D6  0100               	movlb	0	; () banked
  7835  0019D8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7836  0019DA  22DA               	addwfc	fsr2h,f,c
  7837  0019DC  0100               	movlb	0	; () banked
  7838  0019DE  C082  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7839                           
  7840                           ;my_i2c.c: 65: ic_ptr->outbufind = 1;
  7841  0019E2  0100               	movlb	0	; () banked
  7842  0019E4  EE20 F01E          	lfsr	2,30
  7843  0019E8  0100               	movlb	0	; () banked
  7844  0019EA  51C5               	movf	_ic_ptr& (0+255),w,b
  7845  0019EC  26D9               	addwf	fsr2l,f,c
  7846  0019EE  0100               	movlb	0	; () banked
  7847  0019F0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7848  0019F2  22DA               	addwfc	fsr2h,f,c
  7849  0019F4  0E01               	movlw	1
  7850  0019F6  6EDF               	movwf	indf2,c
  7851                           
  7852                           ;my_i2c.c: 68: SSPBUF = ic_ptr->outbuffer[0];
  7853  0019F8  0100               	movlb	0	; () banked
  7854  0019FA  EE20 F010          	lfsr	2,16
  7855  0019FE  0100               	movlb	0	; () banked
  7856  001A00  51C5               	movf	_ic_ptr& (0+255),w,b
  7857  001A02  26D9               	addwf	fsr2l,f,c
  7858  001A04  0100               	movlb	0	; () banked
  7859  001A06  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7860  001A08  22DA               	addwfc	fsr2h,f,c
  7861  001A0A  50DF               	movf	indf2,w,c
  7862  001A0C  6EC9               	movwf	4041,c	;volatile
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;my_i2c.c: 71: SSPCON1bits.CKP = 1;
  7866  001A0E  88C6               	bsf	4038,4,c	;volatile
  7867                           
  7868                           ; BSR set to: 0
  7869  001A10  0012               	return	
  7870  001A12                     __end_of_start_i2c_slave_reply:
  7871                           	opt stack 0
  7872                           pclatu	equ	0xFFB
  7873                           pclath	equ	0xFFA
  7874                           tblptru	equ	0xFF8
  7875                           tblptrh	equ	0xFF7
  7876                           tblptrl	equ	0xFF6
  7877                           tablat	equ	0xFF5
  7878                           prodh	equ	0xFF4
  7879                           prodl	equ	0xFF3
  7880                           intcon	equ	0xFF2
  7881                           intcon2	equ	0xFF1
  7882                           postinc0	equ	0xFEE
  7883                           fsr0h	equ	0xFEA
  7884                           fsr0l	equ	0xFE9
  7885                           wreg	equ	0xFE8
  7886                           indf1	equ	0xFE7
  7887                           fsr1h	equ	0xFE2
  7888                           fsr1l	equ	0xFE1
  7889                           bsr	equ	0xFE0
  7890                           indf2	equ	0xFDF
  7891                           postinc2	equ	0xFDE
  7892                           postdec2	equ	0xFDD
  7893                           fsr2h	equ	0xFDA
  7894                           fsr2l	equ	0xFD9
  7895                           status	equ	0xFD8
  7896                           
  7897 ;; *************** function _handle_start *****************
  7898 ;; Defined at:
  7899 ;;		line 77 in file "../src/my_i2c.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  data_read       1    wreg     unsigned char 
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;  data_read       1    0[BANK0 ] unsigned char 
  7904 ;; Return value:  Size  Location     Type
  7905 ;;		None               void
  7906 ;; Registers used:
  7907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7913 ;;      Params:         0       0       0       0       0
  7914 ;;      Locals:         0       1       0       0       0
  7915 ;;      Temps:          0       0       0       0       0
  7916 ;;      Totals:         0       1       0       0       0
  7917 ;;Total ram usage:        1 bytes
  7918 ;; Hardware stack levels used:    1
  7919 ;; This function calls:
  7920 ;;		Nothing
  7921 ;; This function is called by:
  7922 ;;		_i2c_int_handler
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text43
  7927  00113C                     __ptext43:
  7928                           	opt stack 0
  7929  00113C                     _handle_start:
  7930                           	opt stack 18
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;incstack = 0
  7934                           ;handle_start@data_read stored from wreg
  7935  00113C  0100               	movlb	0	; () banked
  7936  00113E  6F80               	movwf	handle_start@data_read& (0+255),b
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;my_i2c.c: 78: ic_ptr->event_count = 1;
  7940  001140  0100               	movlb	0	; () banked
  7941  001142  EE20 F020          	lfsr	2,32
  7942  001146  0100               	movlb	0	; () banked
  7943  001148  51C5               	movf	_ic_ptr& (0+255),w,b
  7944  00114A  26D9               	addwf	fsr2l,f,c
  7945  00114C  0100               	movlb	0	; () banked
  7946  00114E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7947  001150  22DA               	addwfc	fsr2h,f,c
  7948  001152  0E01               	movlw	1
  7949  001154  6EDF               	movwf	indf2,c
  7950                           
  7951                           ;my_i2c.c: 79: ic_ptr->buflen = 0;
  7952  001156  0100               	movlb	0	; () banked
  7953  001158  EE20 F00E          	lfsr	2,14
  7954  00115C  0100               	movlb	0	; () banked
  7955  00115E  51C5               	movf	_ic_ptr& (0+255),w,b
  7956  001160  26D9               	addwf	fsr2l,f,c
  7957  001162  0100               	movlb	0	; () banked
  7958  001164  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7959  001166  22DA               	addwfc	fsr2h,f,c
  7960  001168  0E00               	movlw	0
  7961  00116A  6EDF               	movwf	indf2,c
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;my_i2c.c: 81: if (data_read) {
  7965  00116C  0100               	movlb	0	; () banked
  7966  00116E  5180               	movf	handle_start@data_read& (0+255),w,b
  7967  001170  B4D8               	btfsc	status,2,c
  7968  001172  D03D               	goto	i2l2738
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;my_i2c.c: 82: if (SSPSTATbits.D_A == 1) {
  7972  001174  AAC7               	btfss	4039,5,c	;volatile
  7973  001176  D021               	goto	i2l308
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;my_i2c.c: 85: ic_ptr->status = 0x5;
  7977  001178  0100               	movlb	0	; () banked
  7978  00117A  EE20 F021          	lfsr	2,33
  7979  00117E  0100               	movlb	0	; () banked
  7980  001180  51C5               	movf	_ic_ptr& (0+255),w,b
  7981  001182  26D9               	addwf	fsr2l,f,c
  7982  001184  0100               	movlb	0	; () banked
  7983  001186  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7984  001188  22DA               	addwfc	fsr2h,f,c
  7985  00118A  0E05               	movlw	5
  7986  00118C  6EDF               	movwf	indf2,c
  7987                           
  7988                           ;my_i2c.c: 86: ic_ptr->error_count++;
  7989  00118E  0100               	movlb	0	; () banked
  7990  001190  EE20 F023          	lfsr	2,35
  7991  001194  0100               	movlb	0	; () banked
  7992  001196  51C5               	movf	_ic_ptr& (0+255),w,b
  7993  001198  26D9               	addwf	fsr2l,f,c
  7994  00119A  0100               	movlb	0	; () banked
  7995  00119C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7996  00119E  22DA               	addwfc	fsr2h,f,c
  7997  0011A0  2ADF               	incf	indf2,f,c
  7998                           
  7999                           ;my_i2c.c: 87: ic_ptr->error_code = 0x5;
  8000  0011A2  0100               	movlb	0	; () banked
  8001  0011A4  EE20 F022          	lfsr	2,34
  8002  0011A8  0100               	movlb	0	; () banked
  8003  0011AA  51C5               	movf	_ic_ptr& (0+255),w,b
  8004  0011AC  26D9               	addwf	fsr2l,f,c
  8005  0011AE  0100               	movlb	0	; () banked
  8006  0011B0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8007  0011B2  22DA               	addwfc	fsr2h,f,c
  8008  0011B4  0E05               	movlw	5
  8009  0011B6  6EDF               	movwf	indf2,c
  8010                           
  8011                           ;my_i2c.c: 88: } else {
  8012  0011B8  0012               	return	
  8013  0011BA                     i2l308:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;my_i2c.c: 89: if (SSPSTATbits.R_W == 1) {
  8017  0011BA  A4C7               	btfss	4039,2,c	;volatile
  8018  0011BC  D00C               	goto	i2l2736
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;my_i2c.c: 90: ic_ptr->status = 0x8;
  8022  0011BE  0100               	movlb	0	; () banked
  8023  0011C0  EE20 F021          	lfsr	2,33
  8024  0011C4  0100               	movlb	0	; () banked
  8025  0011C6  51C5               	movf	_ic_ptr& (0+255),w,b
  8026  0011C8  26D9               	addwf	fsr2l,f,c
  8027  0011CA  0100               	movlb	0	; () banked
  8028  0011CC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8029  0011CE  22DA               	addwfc	fsr2h,f,c
  8030  0011D0  0E08               	movlw	8
  8031  0011D2  6EDF               	movwf	indf2,c
  8032                           
  8033                           ;my_i2c.c: 92: } else {
  8034  0011D4  0012               	return	
  8035  0011D6                     i2l2736:
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;my_i2c.c: 93: ic_ptr->status = 0x7;
  8039  0011D6  0100               	movlb	0	; () banked
  8040  0011D8  EE20 F021          	lfsr	2,33
  8041  0011DC  0100               	movlb	0	; () banked
  8042  0011DE  51C5               	movf	_ic_ptr& (0+255),w,b
  8043  0011E0  26D9               	addwf	fsr2l,f,c
  8044  0011E2  0100               	movlb	0	; () banked
  8045  0011E4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8046  0011E6  22DA               	addwfc	fsr2h,f,c
  8047  0011E8  0E07               	movlw	7
  8048  0011EA  6EDF               	movwf	indf2,c
  8049  0011EC  0012               	return	
  8050  0011EE                     i2l2738:
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;my_i2c.c: 98: ic_ptr->status = 0x6;
  8054  0011EE  0100               	movlb	0	; () banked
  8055  0011F0  EE20 F021          	lfsr	2,33
  8056  0011F4  0100               	movlb	0	; () banked
  8057  0011F6  51C5               	movf	_ic_ptr& (0+255),w,b
  8058  0011F8  26D9               	addwf	fsr2l,f,c
  8059  0011FA  0100               	movlb	0	; () banked
  8060  0011FC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8061  0011FE  22DA               	addwfc	fsr2h,f,c
  8062  001200  0E06               	movlw	6
  8063  001202  6EDF               	movwf	indf2,c
  8064  001204  0012               	return	
  8065  001206                     __end_of_handle_start:
  8066                           	opt stack 0
  8067                           pclatu	equ	0xFFB
  8068                           pclath	equ	0xFFA
  8069                           tblptru	equ	0xFF8
  8070                           tblptrh	equ	0xFF7
  8071                           tblptrl	equ	0xFF6
  8072                           tablat	equ	0xFF5
  8073                           prodh	equ	0xFF4
  8074                           prodl	equ	0xFF3
  8075                           intcon	equ	0xFF2
  8076                           intcon2	equ	0xFF1
  8077                           postinc0	equ	0xFEE
  8078                           fsr0h	equ	0xFEA
  8079                           fsr0l	equ	0xFE9
  8080                           wreg	equ	0xFE8
  8081                           indf1	equ	0xFE7
  8082                           fsr1h	equ	0xFE2
  8083                           fsr1l	equ	0xFE1
  8084                           bsr	equ	0xFE0
  8085                           indf2	equ	0xFDF
  8086                           postinc2	equ	0xFDE
  8087                           postdec2	equ	0xFDD
  8088                           fsr2h	equ	0xFDA
  8089                           fsr2l	equ	0xFD9
  8090                           status	equ	0xFD8
  8091                           
  8092 ;; *************** function _ToMainHigh_sendmsg *****************
  8093 ;; Defined at:
  8094 ;;		line 126 in file "../src/messages.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  length          1    wreg     unsigned char 
  8097 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8098 ;;  data            2   23[BANK0 ] PTR void 
  8099 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(38), 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;  length          1   25[BANK0 ] unsigned char 
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  1    wreg      char 
  8104 ;; Registers used:
  8105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8111 ;;      Params:         0       3       0       0       0
  8112 ;;      Locals:         0       1       0       0       0
  8113 ;;      Temps:          0       0       0       0       0
  8114 ;;      Totals:         0       4       0       0       0
  8115 ;;Total ram usage:        4 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:    2
  8118 ;; This function calls:
  8119 ;;		i2_send_msg
  8120 ;; This function is called by:
  8121 ;;		_i2c_int_handler
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text44
  8126  001BC0                     __ptext44:
  8127                           	opt stack 0
  8128  001BC0                     _ToMainHigh_sendmsg:
  8129                           	opt stack 16
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;incstack = 0
  8133                           ;ToMainHigh_sendmsg@length stored from wreg
  8134  001BC0  0100               	movlb	0	; () banked
  8135  001BC2  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8139                           ;	Return value of _ToMainHigh_sendmsg is never used
  8140  001BC4  0102               	movlb	2	; () banked
  8141  001BC6  0E02               	movlw	high _ToMainHigh_MQ
  8142  001BC8  0100               	movlb	0	; () banked
  8143  001BCA  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8144  001BCC  0102               	movlb	2	; () banked
  8145  001BCE  0E57               	movlw	low _ToMainHigh_MQ
  8146  001BD0  0100               	movlb	0	; () banked
  8147  001BD2  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8148  001BD4  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8149  001BD8  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8150  001BDC  0100               	movlb	0	; () banked
  8151  001BDE  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8152  001BE2  0100               	movlb	0	; () banked
  8153  001BE4  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8154  001BE8  ECA4  F007         	call	i2_send_msg	;wreg free
  8155  001BEC  0012               	return	
  8156  001BEE                     __end_of_ToMainHigh_sendmsg:
  8157                           	opt stack 0
  8158                           pclatu	equ	0xFFB
  8159                           pclath	equ	0xFFA
  8160                           tblptru	equ	0xFF8
  8161                           tblptrh	equ	0xFF7
  8162                           tblptrl	equ	0xFF6
  8163                           tablat	equ	0xFF5
  8164                           prodh	equ	0xFF4
  8165                           prodl	equ	0xFF3
  8166                           intcon	equ	0xFF2
  8167                           intcon2	equ	0xFF1
  8168                           postinc0	equ	0xFEE
  8169                           fsr0h	equ	0xFEA
  8170                           fsr0l	equ	0xFE9
  8171                           wreg	equ	0xFE8
  8172                           indf1	equ	0xFE7
  8173                           fsr1h	equ	0xFE2
  8174                           fsr1l	equ	0xFE1
  8175                           bsr	equ	0xFE0
  8176                           indf2	equ	0xFDF
  8177                           postinc2	equ	0xFDE
  8178                           postdec2	equ	0xFDD
  8179                           fsr2h	equ	0xFDA
  8180                           fsr2l	equ	0xFD9
  8181                           status	equ	0xFD8
  8182                           
  8183 ;; *************** function i2_send_msg *****************
  8184 ;; Defined at:
  8185 ;;		line 24 in file "../src/messages.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8188 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8189 ;;  length          1   12[BANK0 ] unsigned char 
  8190 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8191 ;;  data            2   14[BANK0 ] PTR void 
  8192 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  8193 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8194 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  8195 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8198 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8199 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8200 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8201 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      char 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8211 ;;      Params:         0       6       0       0       0
  8212 ;;      Locals:         0       5       0       0       0
  8213 ;;      Temps:          0       1       0       0       0
  8214 ;;      Totals:         0      12       0       0       0
  8215 ;;Total ram usage:       12 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; Hardware stack levels required when called:    1
  8218 ;; This function calls:
  8219 ;;		i2___awmod
  8220 ;;		i2_memcpy
  8221 ;; This function is called by:
  8222 ;;		_ToMainHigh_sendmsg
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text45
  8227  000F48                     __ptext45:
  8228                           	opt stack 0
  8229  000F48                     i2_send_msg:
  8230                           	opt stack 16
  8231                           
  8232                           ;messages.c: 25: unsigned char slot;
  8233                           ;messages.c: 27: msg *qmsg;
  8234                           ;messages.c: 28: size_t tlength = length;
  8235                           
  8236                           ;incstack = 0
  8237  000F48  0100               	movlb	0	; () banked
  8238  000F4A  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8239  000F4E  0100               	movlb	0	; () banked
  8240  000F50  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8244  000F52  0100               	movlb	0	; () banked
  8245  000F54  EE20 F055          	lfsr	2,85
  8246  000F58  0100               	movlb	0	; () banked
  8247  000F5A  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8248  000F5C  26D9               	addwf	fsr2l,f,c
  8249  000F5E  0100               	movlb	0	; () banked
  8250  000F60  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8251  000F62  22DA               	addwfc	fsr2h,f,c
  8252  000F64  50DF               	movf	indf2,w,c
  8253  000F66  0100               	movlb	0	; () banked
  8254  000F68  6F93               	movwf	i2send_msg@slot& (0+255),b
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8258  000F6A  0100               	movlb	0	; () banked
  8259  000F6C  5193               	movf	i2send_msg@slot& (0+255),w,b
  8260  000F6E  0D11               	mullw	17
  8261  000F70  50F3               	movf	prodl,w,c
  8262  000F72  0100               	movlb	0	; () banked
  8263  000F74  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8264  000F76  0100               	movlb	0	; () banked
  8265  000F78  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8266  000F7A  50F4               	movf	prodh,w,c
  8267  000F7C  0100               	movlb	0	; () banked
  8268  000F7E  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8269  000F80  0100               	movlb	0	; () banked
  8270  000F82  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;messages.c: 41: if (qmsg->full != 0) {
  8274  000F84  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8275  000F88  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8276  000F8C  50DF               	movf	indf2,w,c
  8277  000F8E  B4D8               	btfsc	status,2,c
  8278  000F90  D002               	goto	i2l3588
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;messages.c: 42: return (-1);
  8282  000F92  0EFF               	movlw	255
  8283  000F94  0012               	return	
  8284  000F96                     i2l3588:
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;messages.c: 43: }
  8288                           ;messages.c: 46: qmsg->length = length;
  8289  000F96  0100               	movlb	0	; () banked
  8290  000F98  EE20 F001          	lfsr	2,1
  8291  000F9C  0100               	movlb	0	; () banked
  8292  000F9E  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8293  000FA0  26D9               	addwf	fsr2l,f,c
  8294  000FA2  0100               	movlb	0	; () banked
  8295  000FA4  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8296  000FA6  22DA               	addwfc	fsr2h,f,c
  8297  000FA8  0100               	movlb	0	; () banked
  8298  000FAA  C08C  FFDF         	movff	i2send_msg@length,indf2
  8299                           
  8300                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8301  000FAE  0100               	movlb	0	; () banked
  8302  000FB0  EE20 F002          	lfsr	2,2
  8303  000FB4  0100               	movlb	0	; () banked
  8304  000FB6  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8305  000FB8  26D9               	addwf	fsr2l,f,c
  8306  000FBA  0100               	movlb	0	; () banked
  8307  000FBC  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8308  000FBE  22DA               	addwfc	fsr2h,f,c
  8309  000FC0  0100               	movlb	0	; () banked
  8310  000FC2  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8314  000FC6  0E03               	movlw	3
  8315  000FC8  0100               	movlb	0	; () banked
  8316  000FCA  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8317  000FCC  0100               	movlb	0	; () banked
  8318  000FCE  6F80               	movwf	i2memcpy@d1& (0+255),b
  8319  000FD0  0E00               	movlw	0
  8320  000FD2  0100               	movlb	0	; () banked
  8321  000FD4  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8322  000FD6  0100               	movlb	0	; () banked
  8323  000FD8  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8324  000FDA  0100               	movlb	0	; () banked
  8325  000FDC  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8326  000FE0  0100               	movlb	0	; () banked
  8327  000FE2  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8328  000FE6  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8329  000FEA  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8330  000FEE  ECBB  F00C         	call	i2_memcpy	;wreg free
  8331                           
  8332                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8333  000FF2  0100               	movlb	0	; () banked
  8334  000FF4  EE20 F055          	lfsr	2,85
  8335  000FF8  0100               	movlb	0	; () banked
  8336  000FFA  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8337  000FFC  26D9               	addwf	fsr2l,f,c
  8338  000FFE  0100               	movlb	0	; () banked
  8339  001000  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8340  001002  22DA               	addwfc	fsr2h,f,c
  8341  001004  0100               	movlb	0	; () banked
  8342  001006  EE10 F055          	lfsr	1,85
  8343  00100A  0100               	movlb	0	; () banked
  8344  00100C  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8345  00100E  26E1               	addwf	fsr1l,f,c
  8346  001010  0100               	movlb	0	; () banked
  8347  001012  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8348  001014  22E2               	addwfc	fsr1h,f,c
  8349  001016  50E7               	movf	indf1,w,c
  8350  001018  0100               	movlb	0	; () banked
  8351  00101A  6F90               	movwf	??i2_send_msg& (0+255),b
  8352  00101C  0E01               	movlw	1
  8353  00101E  0100               	movlb	0	; () banked
  8354  001020  2590               	addwf	??i2_send_msg& (0+255),w,b
  8355  001022  0100               	movlb	0	; () banked
  8356  001024  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8357  001026  0100               	movlb	0	; () banked
  8358  001028  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8359  00102A  0E00               	movlw	0
  8360  00102C  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8361  00102E  0E00               	movlw	0
  8362  001030  0100               	movlb	0	; () banked
  8363  001032  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8364  001034  0E05               	movlw	5
  8365  001036  0100               	movlb	0	; () banked
  8366  001038  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8367  00103A  EC65  F009         	call	i2___awmod	;wreg free
  8368  00103E  0100               	movlb	0	; () banked
  8369  001040  5180               	movf	?i2___awmod& (0+255),w,b
  8370  001042  6EDF               	movwf	indf2,c
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;messages.c: 59: qmsg->full = 1;
  8374  001044  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8375  001048  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8376  00104C  0E01               	movlw	1
  8377  00104E  6EDF               	movwf	indf2,c
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;messages.c: 60: return (1);
  8381  001050  0E01               	movlw	1
  8382  001052  0012               	return	
  8383  001054                     __end_ofi2_send_msg:
  8384                           	opt stack 0
  8385                           pclatu	equ	0xFFB
  8386                           pclath	equ	0xFFA
  8387                           tblptru	equ	0xFF8
  8388                           tblptrh	equ	0xFF7
  8389                           tblptrl	equ	0xFF6
  8390                           tablat	equ	0xFF5
  8391                           prodh	equ	0xFF4
  8392                           prodl	equ	0xFF3
  8393                           intcon	equ	0xFF2
  8394                           intcon2	equ	0xFF1
  8395                           postinc0	equ	0xFEE
  8396                           fsr0h	equ	0xFEA
  8397                           fsr0l	equ	0xFE9
  8398                           wreg	equ	0xFE8
  8399                           indf1	equ	0xFE7
  8400                           fsr1h	equ	0xFE2
  8401                           fsr1l	equ	0xFE1
  8402                           bsr	equ	0xFE0
  8403                           indf2	equ	0xFDF
  8404                           postinc2	equ	0xFDE
  8405                           postdec2	equ	0xFDD
  8406                           fsr2h	equ	0xFDA
  8407                           fsr2l	equ	0xFD9
  8408                           status	equ	0xFD8
  8409                           
  8410 ;; *************** function _FromMainHigh_recvmsg *****************
  8411 ;; Defined at:
  8412 ;;		line 183 in file "../src/messages.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  maxlength       1    wreg     unsigned char 
  8415 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8416 ;;		 -> retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  8417 ;;  data            2   26[BANK0 ] PTR void 
  8418 ;;		 -> NULL(0), main@ic(38), 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      char 
  8423 ;; Registers used:
  8424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8430 ;;      Params:         0       4       0       0       0
  8431 ;;      Locals:         0       1       0       0       0
  8432 ;;      Temps:          0       0       0       0       0
  8433 ;;      Totals:         0       5       0       0       0
  8434 ;;Total ram usage:        5 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    2
  8437 ;; This function calls:
  8438 ;;		i2_recv_msg
  8439 ;; This function is called by:
  8440 ;;		_i2c_int_handler
  8441 ;;		_retrieve_sensor_values
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text46
  8446  001AFC                     __ptext46:
  8447                           	opt stack 0
  8448  001AFC                     _FromMainHigh_recvmsg:
  8449                           	opt stack 16
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;incstack = 0
  8453                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8454  001AFC  0100               	movlb	0	; () banked
  8455  001AFE  6F9C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8459  001B00  0103               	movlb	3	; () banked
  8460  001B02  0E03               	movlw	high _FromMainHigh_MQ
  8461  001B04  0100               	movlb	0	; () banked
  8462  001B06  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8463  001B08  0103               	movlb	3	; () banked
  8464  001B0A  0E00               	movlw	low _FromMainHigh_MQ
  8465  001B0C  0100               	movlb	0	; () banked
  8466  001B0E  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8467  001B10  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8468  001B14  0100               	movlb	0	; () banked
  8469  001B16  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8470  001B1A  0100               	movlb	0	; () banked
  8471  001B1C  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8472  001B20  0100               	movlb	0	; () banked
  8473  001B22  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8474  001B26  0100               	movlb	0	; () banked
  8475  001B28  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8476  001B2C  EC7D  F006         	call	i2_recv_msg	;wreg free
  8477  001B30  0012               	return	
  8478  001B32                     __end_of_FromMainHigh_recvmsg:
  8479                           	opt stack 0
  8480                           pclatu	equ	0xFFB
  8481                           pclath	equ	0xFFA
  8482                           tblptru	equ	0xFF8
  8483                           tblptrh	equ	0xFF7
  8484                           tblptrl	equ	0xFF6
  8485                           tablat	equ	0xFF5
  8486                           prodh	equ	0xFF4
  8487                           prodl	equ	0xFF3
  8488                           intcon	equ	0xFF2
  8489                           intcon2	equ	0xFF1
  8490                           postinc0	equ	0xFEE
  8491                           fsr0h	equ	0xFEA
  8492                           fsr0l	equ	0xFE9
  8493                           wreg	equ	0xFE8
  8494                           indf1	equ	0xFE7
  8495                           fsr1h	equ	0xFE2
  8496                           fsr1l	equ	0xFE1
  8497                           bsr	equ	0xFE0
  8498                           indf2	equ	0xFDF
  8499                           postinc2	equ	0xFDE
  8500                           postdec2	equ	0xFDD
  8501                           fsr2h	equ	0xFDA
  8502                           fsr2l	equ	0xFD9
  8503                           status	equ	0xFD8
  8504                           
  8505 ;; *************** function i2_recv_msg *****************
  8506 ;; Defined at:
  8507 ;;		line 63 in file "../src/messages.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8510 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8511 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8512 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8513 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  8514 ;;  data            2   15[BANK0 ] PTR void 
  8515 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8518 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8519 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8520 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8521 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  1    wreg      char 
  8524 ;; Registers used:
  8525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/0
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8531 ;;      Params:         0       7       0       0       0
  8532 ;;      Locals:         0       5       0       0       0
  8533 ;;      Temps:          0       2       0       0       0
  8534 ;;      Totals:         0      14       0       0       0
  8535 ;;Total ram usage:       14 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; Hardware stack levels required when called:    1
  8538 ;; This function calls:
  8539 ;;		i2___awmod
  8540 ;;		i2_memcpy
  8541 ;; This function is called by:
  8542 ;;		_FromMainHigh_recvmsg
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text47
  8547  000CFA                     __ptext47:
  8548                           	opt stack 0
  8549  000CFA                     i2_recv_msg:
  8550                           	opt stack 16
  8551                           
  8552                           ;messages.c: 64: unsigned char slot;
  8553                           ;messages.c: 68: msg *qmsg;
  8554                           ;messages.c: 69: size_t tlength;
  8555                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8556                           
  8557                           ;incstack = 0
  8558  000CFA  0100               	movlb	0	; () banked
  8559  000CFC  EE20 F056          	lfsr	2,86
  8560  000D00  0100               	movlb	0	; () banked
  8561  000D02  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8562  000D04  26D9               	addwf	fsr2l,f,c
  8563  000D06  0100               	movlb	0	; () banked
  8564  000D08  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8565  000D0A  22DA               	addwfc	fsr2h,f,c
  8566  000D0C  50DF               	movf	indf2,w,c
  8567  000D0E  0100               	movlb	0	; () banked
  8568  000D10  6F93               	movwf	i2recv_msg@slot& (0+255),b
  8569                           
  8570                           ; BSR set to: 0
  8571                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8572  000D12  0100               	movlb	0	; () banked
  8573  000D14  5193               	movf	i2recv_msg@slot& (0+255),w,b
  8574  000D16  0D11               	mullw	17
  8575  000D18  50F3               	movf	prodl,w,c
  8576  000D1A  0100               	movlb	0	; () banked
  8577  000D1C  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8578  000D1E  0100               	movlb	0	; () banked
  8579  000D20  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  8580  000D22  50F4               	movf	prodh,w,c
  8581  000D24  0100               	movlb	0	; () banked
  8582  000D26  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8583  000D28  0100               	movlb	0	; () banked
  8584  000D2A  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;messages.c: 74: if (qmsg->full == 1) {
  8588  000D2C  0E01               	movlw	1
  8589  000D2E  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8590  000D32  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8591  000D36  62DF               	cpfseq	indf2,c
  8592  000D38  D07D               	goto	i2l3660
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8596  000D3A  0100               	movlb	0	; () banked
  8597  000D3C  EE20 F001          	lfsr	2,1
  8598  000D40  0100               	movlb	0	; () banked
  8599  000D42  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8600  000D44  26D9               	addwf	fsr2l,f,c
  8601  000D46  0100               	movlb	0	; () banked
  8602  000D48  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8603  000D4A  22DA               	addwfc	fsr2h,f,c
  8604  000D4C  50DF               	movf	indf2,w,c
  8605  000D4E  0100               	movlb	0	; () banked
  8606  000D50  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8607  000D52  B0D8               	btfsc	status,0,c
  8608  000D54  D002               	goto	i2l3644
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;messages.c: 77: return (-3);
  8612  000D56  0EFD               	movlw	253
  8613  000D58  0012               	return	
  8614  000D5A                     i2l3644:
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;messages.c: 78: }
  8618                           ;messages.c: 80: tlength = qmsg->length;
  8619  000D5A  0100               	movlb	0	; () banked
  8620  000D5C  EE20 F001          	lfsr	2,1
  8621  000D60  0100               	movlb	0	; () banked
  8622  000D62  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8623  000D64  26D9               	addwf	fsr2l,f,c
  8624  000D66  0100               	movlb	0	; () banked
  8625  000D68  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8626  000D6A  22DA               	addwfc	fsr2h,f,c
  8627  000D6C  50DF               	movf	indf2,w,c
  8628  000D6E  0100               	movlb	0	; () banked
  8629  000D70  6F91               	movwf	??i2_recv_msg& (0+255),b
  8630  000D72  0100               	movlb	0	; () banked
  8631  000D74  5191               	movf	??i2_recv_msg& (0+255),w,b
  8632  000D76  0100               	movlb	0	; () banked
  8633  000D78  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  8634  000D7A  0100               	movlb	0	; () banked
  8635  000D7C  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8639  000D7E  0100               	movlb	0	; () banked
  8640  000D80  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8641  000D84  0100               	movlb	0	; () banked
  8642  000D86  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  8643  000D8A  0E03               	movlw	3
  8644  000D8C  0100               	movlb	0	; () banked
  8645  000D8E  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8646  000D90  0100               	movlb	0	; () banked
  8647  000D92  6F91               	movwf	??i2_recv_msg& (0+255),b
  8648  000D94  0E00               	movlw	0
  8649  000D96  0100               	movlb	0	; () banked
  8650  000D98  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8651  000D9A  0100               	movlb	0	; () banked
  8652  000D9C  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  8653  000D9E  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  8654  000DA2  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8655  000DA6  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  8656  000DAA  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8657  000DAE  ECBB  F00C         	call	i2_memcpy	;wreg free
  8658                           
  8659                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  8660  000DB2  0100               	movlb	0	; () banked
  8661  000DB4  EE20 F056          	lfsr	2,86
  8662  000DB8  0100               	movlb	0	; () banked
  8663  000DBA  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8664  000DBC  26D9               	addwf	fsr2l,f,c
  8665  000DBE  0100               	movlb	0	; () banked
  8666  000DC0  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8667  000DC2  22DA               	addwfc	fsr2h,f,c
  8668  000DC4  0100               	movlb	0	; () banked
  8669  000DC6  EE10 F056          	lfsr	1,86
  8670  000DCA  0100               	movlb	0	; () banked
  8671  000DCC  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8672  000DCE  26E1               	addwf	fsr1l,f,c
  8673  000DD0  0100               	movlb	0	; () banked
  8674  000DD2  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8675  000DD4  22E2               	addwfc	fsr1h,f,c
  8676  000DD6  50E7               	movf	indf1,w,c
  8677  000DD8  0100               	movlb	0	; () banked
  8678  000DDA  6F91               	movwf	??i2_recv_msg& (0+255),b
  8679  000DDC  0E01               	movlw	1
  8680  000DDE  0100               	movlb	0	; () banked
  8681  000DE0  2591               	addwf	??i2_recv_msg& (0+255),w,b
  8682  000DE2  0100               	movlb	0	; () banked
  8683  000DE4  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8684  000DE6  0100               	movlb	0	; () banked
  8685  000DE8  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8686  000DEA  0E00               	movlw	0
  8687  000DEC  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8688  000DEE  0E00               	movlw	0
  8689  000DF0  0100               	movlb	0	; () banked
  8690  000DF2  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8691  000DF4  0E05               	movlw	5
  8692  000DF6  0100               	movlb	0	; () banked
  8693  000DF8  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8694  000DFA  EC65  F009         	call	i2___awmod	;wreg free
  8695  000DFE  0100               	movlb	0	; () banked
  8696  000E00  5180               	movf	?i2___awmod& (0+255),w,b
  8697  000E02  6EDF               	movwf	indf2,c
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8701  000E04  0100               	movlb	0	; () banked
  8702  000E06  EE20 F002          	lfsr	2,2
  8703  000E0A  0100               	movlb	0	; () banked
  8704  000E0C  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8705  000E0E  26D9               	addwf	fsr2l,f,c
  8706  000E10  0100               	movlb	0	; () banked
  8707  000E12  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8708  000E14  22DA               	addwfc	fsr2h,f,c
  8709  000E16  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8710  000E1A  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8711  000E1E  CFDF FFE7          	movff	indf2,indf1
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;messages.c: 91: qmsg->full = 0;
  8715  000E22  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8716  000E26  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8717  000E2A  0E00               	movlw	0
  8718  000E2C  6EDF               	movwf	indf2,c
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;messages.c: 92: return (tlength);
  8722  000E2E  0100               	movlb	0	; () banked
  8723  000E30  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  8724  000E32  0012               	return	
  8725  000E34                     i2l3660:
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;messages.c: 94: return (-4);
  8729  000E34  0EFC               	movlw	252
  8730  000E36  0012               	return	
  8731  000E38                     __end_ofi2_recv_msg:
  8732                           	opt stack 0
  8733                           pclatu	equ	0xFFB
  8734                           pclath	equ	0xFFA
  8735                           tblptru	equ	0xFF8
  8736                           tblptrh	equ	0xFF7
  8737                           tblptrl	equ	0xFF6
  8738                           tablat	equ	0xFF5
  8739                           prodh	equ	0xFF4
  8740                           prodl	equ	0xFF3
  8741                           intcon	equ	0xFF2
  8742                           intcon2	equ	0xFF1
  8743                           postinc0	equ	0xFEE
  8744                           fsr0h	equ	0xFEA
  8745                           fsr0l	equ	0xFE9
  8746                           wreg	equ	0xFE8
  8747                           indf1	equ	0xFE7
  8748                           fsr1h	equ	0xFE2
  8749                           fsr1l	equ	0xFE1
  8750                           bsr	equ	0xFE0
  8751                           indf2	equ	0xFDF
  8752                           postinc2	equ	0xFDE
  8753                           postdec2	equ	0xFDD
  8754                           fsr2h	equ	0xFDA
  8755                           fsr2l	equ	0xFD9
  8756                           status	equ	0xFD8
  8757                           
  8758 ;; *************** function i2_memcpy *****************
  8759 ;; Defined at:
  8760 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  d1              2    0[BANK0 ] PTR void 
  8763 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8764 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  8765 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  8766 ;;  s1              2    2[BANK0 ] PTR const void 
  8767 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  8768 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  8769 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  8770 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8771 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  8772 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  8773 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  8774 ;;  n               2    4[BANK0 ] unsigned int 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8777 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  8778 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  8779 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  8780 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8781 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  8782 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  8783 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  8784 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8785 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8786 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  8787 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  2    0[BANK0 ] PTR void 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8797 ;;      Params:         0       6       0       0       0
  8798 ;;      Locals:         0       4       0       0       0
  8799 ;;      Temps:          0       0       0       0       0
  8800 ;;      Totals:         0      10       0       0       0
  8801 ;;Total ram usage:       10 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		i2_send_msg
  8807 ;;		i2_recv_msg
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text48
  8812  001976                     __ptext48:
  8813                           	opt stack 0
  8814  001976                     i2_memcpy:
  8815                           	opt stack 16
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;incstack = 0
  8819  001976  0100               	movlb	0	; () banked
  8820  001978  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8821  00197C  0100               	movlb	0	; () banked
  8822  00197E  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  8823  001982  0100               	movlb	0	; () banked
  8824  001984  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8825  001988  0100               	movlb	0	; () banked
  8826  00198A  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  8827  00198E  D010               	goto	i2l2436
  8828  001990                     i2l2430:
  8829                           
  8830                           ; BSR set to: 0
  8831  001990  C088  FFD9         	movff	i2memcpy@s,fsr2l
  8832  001994  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  8833  001998  C086  FFE1         	movff	i2memcpy@d,fsr1l
  8834  00199C  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  8835  0019A0  CFDF FFE7          	movff	indf2,indf1
  8836                           
  8837                           ; BSR set to: 0
  8838  0019A4  0100               	movlb	0	; () banked
  8839  0019A6  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  8840  0019A8  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  8841                           
  8842                           ; BSR set to: 0
  8843  0019AA  0100               	movlb	0	; () banked
  8844  0019AC  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  8845  0019AE  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  8846  0019B0                     i2l2436:
  8847                           
  8848                           ; BSR set to: 0
  8849  0019B0  0100               	movlb	0	; () banked
  8850  0019B2  0784               	decf	i2memcpy@n& (0+255),f,b
  8851  0019B4  A0D8               	btfss	status,0,c
  8852  0019B6  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  8853  0019B8  0100               	movlb	0	; () banked
  8854  0019BA  2984               	incf	i2memcpy@n& (0+255),w,b
  8855  0019BC  B4D8               	btfsc	status,2,c
  8856  0019BE  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  8857  0019C0  B4D8               	btfsc	status,2,c
  8858                           
  8859                           ; BSR set to: 0
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;	Return value of i2_memcpy is never used
  8863  0019C2  0012               	return	
  8864  0019C4  D7E5               	goto	i2l2430
  8865  0019C6                     __end_ofi2_memcpy:
  8866                           	opt stack 0
  8867                           pclatu	equ	0xFFB
  8868                           pclath	equ	0xFFA
  8869                           tblptru	equ	0xFF8
  8870                           tblptrh	equ	0xFF7
  8871                           tblptrl	equ	0xFF6
  8872                           tablat	equ	0xFF5
  8873                           prodh	equ	0xFF4
  8874                           prodl	equ	0xFF3
  8875                           intcon	equ	0xFF2
  8876                           intcon2	equ	0xFF1
  8877                           postinc0	equ	0xFEE
  8878                           fsr0h	equ	0xFEA
  8879                           fsr0l	equ	0xFE9
  8880                           wreg	equ	0xFE8
  8881                           indf1	equ	0xFE7
  8882                           fsr1h	equ	0xFE2
  8883                           fsr1l	equ	0xFE1
  8884                           bsr	equ	0xFE0
  8885                           indf2	equ	0xFDF
  8886                           postinc2	equ	0xFDE
  8887                           postdec2	equ	0xFDD
  8888                           fsr2h	equ	0xFDA
  8889                           fsr2l	equ	0xFD9
  8890                           status	equ	0xFD8
  8891                           
  8892 ;; *************** function i2___awmod *****************
  8893 ;; Defined at:
  8894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  dividend        2    0[BANK0 ] int 
  8897 ;;  divisor         2    2[BANK0 ] int 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  __awmod         1    5[BANK0 ] unsigned char 
  8900 ;;  __awmod         1    4[BANK0 ] unsigned char 
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  2    0[BANK0 ] int 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2, status,0, prodl
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8910 ;;      Params:         0       4       0       0       0
  8911 ;;      Locals:         0       2       0       0       0
  8912 ;;      Temps:          0       0       0       0       0
  8913 ;;      Totals:         0       6       0       0       0
  8914 ;;Total ram usage:        6 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; This function calls:
  8917 ;;		Nothing
  8918 ;; This function is called by:
  8919 ;;		i2_send_msg
  8920 ;;		i2_recv_msg
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text49
  8925  0012CA                     __ptext49:
  8926                           	opt stack 0
  8927  0012CA                     i2___awmod:
  8928                           	opt stack 16
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;incstack = 0
  8932  0012CA  0E00               	movlw	0
  8933  0012CC  0100               	movlb	0	; () banked
  8934  0012CE  6F85               	movwf	i2___awmod@sign& (0+255),b
  8935                           
  8936                           ; BSR set to: 0
  8937  0012D0  0100               	movlb	0	; () banked
  8938  0012D2  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  8939  0012D4  0A80               	xorlw	128
  8940  0012D6  6EF3               	movwf	prodl,c
  8941  0012D8  0E80               	movlw	128
  8942  0012DA  5CF3               	subwf	prodl,w,c
  8943  0012DC  0E00               	movlw	0
  8944  0012DE  B4D8               	btfsc	status,2,c
  8945  0012E0  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  8946  0012E2  B0D8               	btfsc	status,0,c
  8947  0012E4  D009               	goto	i2l2482
  8948                           
  8949                           ; BSR set to: 0
  8950  0012E6  0100               	movlb	0	; () banked
  8951  0012E8  6D80               	negf	i2___awmod@dividend& (0+255),b
  8952  0012EA  0100               	movlb	0	; () banked
  8953  0012EC  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8954  0012EE  B0D8               	btfsc	status,0,c
  8955  0012F0  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8956                           
  8957                           ; BSR set to: 0
  8958  0012F2  0E01               	movlw	1
  8959  0012F4  0100               	movlb	0	; () banked
  8960  0012F6  6F85               	movwf	i2___awmod@sign& (0+255),b
  8961  0012F8                     i2l2482:
  8962                           
  8963                           ; BSR set to: 0
  8964  0012F8  0100               	movlb	0	; () banked
  8965  0012FA  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8966  0012FC  0A80               	xorlw	128
  8967  0012FE  6EF3               	movwf	prodl,c
  8968  001300  0E80               	movlw	128
  8969  001302  5CF3               	subwf	prodl,w,c
  8970  001304  0E00               	movlw	0
  8971  001306  B4D8               	btfsc	status,2,c
  8972  001308  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  8973  00130A  B0D8               	btfsc	status,0,c
  8974  00130C  D006               	goto	i2l2486
  8975                           
  8976                           ; BSR set to: 0
  8977  00130E  0100               	movlb	0	; () banked
  8978  001310  6D82               	negf	i2___awmod@divisor& (0+255),b
  8979  001312  0100               	movlb	0	; () banked
  8980  001314  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  8981  001316  B0D8               	btfsc	status,0,c
  8982  001318  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  8983  00131A                     i2l2486:
  8984                           
  8985                           ; BSR set to: 0
  8986  00131A  0100               	movlb	0	; () banked
  8987  00131C  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8988  00131E  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  8989  001320  B4D8               	btfsc	status,2,c
  8990  001322  D026               	goto	i2l2502
  8991                           
  8992                           ; BSR set to: 0
  8993  001324  0E01               	movlw	1
  8994  001326  0100               	movlb	0	; () banked
  8995  001328  6F84               	movwf	i2___awmod@counter& (0+255),b
  8996  00132A  D006               	goto	i2l2492
  8997  00132C                     i2l2490:
  8998                           
  8999                           ; BSR set to: 0
  9000  00132C  0100               	movlb	0	; () banked
  9001  00132E  90D8               	bcf	status,0,c
  9002  001330  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9003  001332  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9004  001334  0100               	movlb	0	; () banked
  9005  001336  2B84               	incf	i2___awmod@counter& (0+255),f,b
  9006  001338                     i2l2492:
  9007                           
  9008                           ; BSR set to: 0
  9009  001338  0100               	movlb	0	; () banked
  9010  00133A  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9011  00133C  D7F7               	goto	i2l2490
  9012  00133E                     i2l2494:
  9013                           
  9014                           ; BSR set to: 0
  9015  00133E  0100               	movlb	0	; () banked
  9016  001340  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9017  001342  0100               	movlb	0	; () banked
  9018  001344  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9019  001346  0100               	movlb	0	; () banked
  9020  001348  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9021  00134A  0100               	movlb	0	; () banked
  9022  00134C  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9023  00134E  A0D8               	btfss	status,0,c
  9024  001350  D008               	goto	i2l2498
  9025                           
  9026                           ; BSR set to: 0
  9027  001352  0100               	movlb	0	; () banked
  9028  001354  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9029  001356  0100               	movlb	0	; () banked
  9030  001358  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9031  00135A  0100               	movlb	0	; () banked
  9032  00135C  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9033  00135E  0100               	movlb	0	; () banked
  9034  001360  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9035  001362                     i2l2498:
  9036                           
  9037                           ; BSR set to: 0
  9038  001362  0100               	movlb	0	; () banked
  9039  001364  90D8               	bcf	status,0,c
  9040  001366  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9041  001368  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9042                           
  9043                           ; BSR set to: 0
  9044  00136A  0100               	movlb	0	; () banked
  9045  00136C  2F84               	decfsz	i2___awmod@counter& (0+255),f,b
  9046  00136E  D7E7               	goto	i2l2494
  9047  001370                     i2l2502:
  9048                           
  9049                           ; BSR set to: 0
  9050  001370  0100               	movlb	0	; () banked
  9051  001372  5185               	movf	i2___awmod@sign& (0+255),w,b
  9052  001374  B4D8               	btfsc	status,2,c
  9053  001376  D006               	goto	i2l2506
  9054                           
  9055                           ; BSR set to: 0
  9056  001378  0100               	movlb	0	; () banked
  9057  00137A  6D80               	negf	i2___awmod@dividend& (0+255),b
  9058  00137C  0100               	movlb	0	; () banked
  9059  00137E  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9060  001380  B0D8               	btfsc	status,0,c
  9061  001382  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9062  001384                     i2l2506:
  9063                           
  9064                           ; BSR set to: 0
  9065  001384  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9066  001388  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9067  00138C  0012               	return	
  9068  00138E                     __end_ofi2___awmod:
  9069                           	opt stack 0
  9070                           pclatu	equ	0xFFB
  9071                           pclath	equ	0xFFA
  9072                           tblptru	equ	0xFF8
  9073                           tblptrh	equ	0xFF7
  9074                           tblptrl	equ	0xFF6
  9075                           tablat	equ	0xFF5
  9076                           prodh	equ	0xFF4
  9077                           prodl	equ	0xFF3
  9078                           intcon	equ	0xFF2
  9079                           intcon2	equ	0xFF1
  9080                           postinc0	equ	0xFEE
  9081                           fsr0h	equ	0xFEA
  9082                           fsr0l	equ	0xFE9
  9083                           wreg	equ	0xFE8
  9084                           indf1	equ	0xFE7
  9085                           fsr1h	equ	0xFE2
  9086                           fsr1l	equ	0xFE1
  9087                           bsr	equ	0xFE0
  9088                           indf2	equ	0xFDF
  9089                           postinc2	equ	0xFDE
  9090                           postdec2	equ	0xFDD
  9091                           fsr2h	equ	0xFDA
  9092                           fsr2l	equ	0xFD9
  9093                           status	equ	0xFD8
  9094                           
  9095 ;; *************** function _SleepIfOkay *****************
  9096 ;; Defined at:
  9097 ;;		line 226 in file "../src/messages.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;		None               void
  9104 ;; Registers used:
  9105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9111 ;;      Params:         0       0       0       0       0
  9112 ;;      Locals:         0       0       0       0       0
  9113 ;;      Temps:          0       0       0       0       0
  9114 ;;      Totals:         0       0       0       0       0
  9115 ;;Total ram usage:        0 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    2
  9118 ;; This function calls:
  9119 ;;		_check_msg
  9120 ;;		_enter_sleep_mode
  9121 ;;		_in_high_int
  9122 ;;		_in_low_int
  9123 ;; This function is called by:
  9124 ;;		_InterruptHandlerHigh
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128                           	psect	text50
  9129  00181E                     __ptext50:
  9130                           	opt stack 0
  9131  00181E                     _SleepIfOkay:
  9132                           	opt stack 17
  9133                           
  9134                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;incstack = 0
  9138  00181E  0100               	movlb	0	; () banked
  9139  001820  67C7               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9140  001822  D001               	goto	i2l2954
  9141  001824  0012               	return	
  9142  001826                     i2l2954:
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;messages.c: 230: }
  9146                           ;messages.c: 233: if (in_low_int()) {
  9147  001826  EC29  F00D         	call	_in_low_int	;wreg free
  9148  00182A  0100               	movlb	0	; () banked
  9149  00182C  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  9150  00182E  0100               	movlb	0	; () banked
  9151  001830  1182               	iorwf	?_in_low_int& (0+255),w,b
  9152  001832  A4D8               	btfss	status,2,c
  9153  001834  0012               	return	
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;messages.c: 235: }
  9157                           ;messages.c: 238: if (!in_high_int()) {
  9158                           
  9159                           ; BSR set to: 0
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;messages.c: 234: return;
  9163  001836  EC5A  F00E         	call	_in_high_int	;wreg free
  9164  00183A  0100               	movlb	0	; () banked
  9165  00183C  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9166  00183E  0100               	movlb	0	; () banked
  9167  001840  1180               	iorwf	?_in_high_int& (0+255),w,b
  9168  001842  B4D8               	btfsc	status,2,c
  9169  001844  0012               	return	
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;messages.c: 240: }
  9173                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9174                           
  9175                           ; BSR set to: 0
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;messages.c: 239: return;
  9179  001846  0102               	movlb	2	; () banked
  9180  001848  0E02               	movlw	high _ToMainHigh_MQ
  9181  00184A  0100               	movlb	0	; () banked
  9182  00184C  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9183  00184E  0102               	movlb	2	; () banked
  9184  001850  0E57               	movlw	low _ToMainHigh_MQ
  9185  001852  0100               	movlb	0	; () banked
  9186  001854  6F80               	movwf	check_msg@qptr& (0+255),b
  9187  001856  EC99  F00D         	call	_check_msg	;wreg free
  9188  00185A  0900               	iorlw	0
  9189  00185C  A4D8               	btfss	status,2,c
  9190  00185E  0012               	return	
  9191                           
  9192                           ;messages.c: 247: }
  9193                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9194                           
  9195                           ;messages.c: 246: return;
  9196  001860  0101               	movlb	1	; () banked
  9197  001862  0E01               	movlw	high _ToMainLow_MQ
  9198  001864  0100               	movlb	0	; () banked
  9199  001866  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9200  001868  0101               	movlb	1	; () banked
  9201  00186A  0E66               	movlw	low _ToMainLow_MQ
  9202  00186C  0100               	movlb	0	; () banked
  9203  00186E  6F80               	movwf	check_msg@qptr& (0+255),b
  9204  001870  EC99  F00D         	call	_check_msg	;wreg free
  9205  001874  0900               	iorlw	0
  9206  001876  B4D8               	btfsc	status,2,c
  9207                           
  9208                           ;messages.c: 250: }
  9209                           ;messages.c: 251: enter_sleep_mode();
  9210                           
  9211                           ;messages.c: 249: return;
  9212  001878  EC8E  F00E         	call	_enter_sleep_mode	;wreg free
  9213  00187C  0012               	return	
  9214  00187E                     __end_of_SleepIfOkay:
  9215                           	opt stack 0
  9216                           pclatu	equ	0xFFB
  9217                           pclath	equ	0xFFA
  9218                           tblptru	equ	0xFF8
  9219                           tblptrh	equ	0xFF7
  9220                           tblptrl	equ	0xFF6
  9221                           tablat	equ	0xFF5
  9222                           prodh	equ	0xFF4
  9223                           prodl	equ	0xFF3
  9224                           intcon	equ	0xFF2
  9225                           intcon2	equ	0xFF1
  9226                           postinc0	equ	0xFEE
  9227                           fsr0h	equ	0xFEA
  9228                           fsr0l	equ	0xFE9
  9229                           wreg	equ	0xFE8
  9230                           indf1	equ	0xFE7
  9231                           fsr1h	equ	0xFE2
  9232                           fsr1l	equ	0xFE1
  9233                           bsr	equ	0xFE0
  9234                           indf2	equ	0xFDF
  9235                           postinc2	equ	0xFDE
  9236                           postdec2	equ	0xFDD
  9237                           fsr2h	equ	0xFDA
  9238                           fsr2l	equ	0xFD9
  9239                           status	equ	0xFD8
  9240                           
  9241 ;; *************** function _in_low_int *****************
  9242 ;; Defined at:
  9243 ;;		line 33 in file "../src/interrupts.c"
  9244 ;; Parameters:    Size  Location     Type
  9245 ;;		None
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;		None
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  2    2[BANK0 ] int 
  9250 ;; Registers used:
  9251 ;;		wreg, status,2, status,0, cstack
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9257 ;;      Params:         0       2       0       0       0
  9258 ;;      Locals:         0       0       0       0       0
  9259 ;;      Temps:          0       0       0       0       0
  9260 ;;      Totals:         0       2       0       0       0
  9261 ;;Total ram usage:        2 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; Hardware stack levels required when called:    1
  9264 ;; This function calls:
  9265 ;;		_in_high_int
  9266 ;; This function is called by:
  9267 ;;		_SleepIfOkay
  9268 ;;		_in_main
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text51
  9273  001A52                     __ptext51:
  9274                           	opt stack 0
  9275  001A52                     _in_low_int:
  9276                           	opt stack 17
  9277                           
  9278                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9279                           
  9280                           ;incstack = 0
  9281  001A52  ACF2               	btfss	intcon,6,c	;volatile
  9282  001A54  D007               	goto	i2l2638
  9283                           
  9284                           ;interrupts.c: 35: return (0);
  9285  001A56  0E00               	movlw	0
  9286  001A58  0100               	movlb	0	; () banked
  9287  001A5A  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9288  001A5C  0E00               	movlw	0
  9289  001A5E  0100               	movlb	0	; () banked
  9290  001A60  6F82               	movwf	?_in_low_int& (0+255),b
  9291  001A62  0012               	return	
  9292  001A64                     i2l2638:
  9293  001A64  EC5A  F00E         	call	_in_high_int	;wreg free
  9294  001A68  0100               	movlb	0	; () banked
  9295  001A6A  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9296  001A6C  0100               	movlb	0	; () banked
  9297  001A6E  1180               	iorwf	?_in_high_int& (0+255),w,b
  9298  001A70  B4D8               	btfsc	status,2,c
  9299  001A72  D007               	goto	i2l2646
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;interrupts.c: 37: return (0);
  9303  001A74  0E00               	movlw	0
  9304  001A76  0100               	movlb	0	; () banked
  9305  001A78  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9306  001A7A  0E00               	movlw	0
  9307  001A7C  0100               	movlb	0	; () banked
  9308  001A7E  6F82               	movwf	?_in_low_int& (0+255),b
  9309  001A80  0012               	return	
  9310  001A82                     i2l2646:
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;interrupts.c: 39: return (1);
  9314  001A82  0E00               	movlw	0
  9315  001A84  0100               	movlb	0	; () banked
  9316  001A86  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9317  001A88  0E01               	movlw	1
  9318  001A8A  0100               	movlb	0	; () banked
  9319  001A8C  6F82               	movwf	?_in_low_int& (0+255),b
  9320  001A8E  0012               	return	
  9321  001A90                     __end_of_in_low_int:
  9322                           	opt stack 0
  9323                           pclatu	equ	0xFFB
  9324                           pclath	equ	0xFFA
  9325                           tblptru	equ	0xFF8
  9326                           tblptrh	equ	0xFF7
  9327                           tblptrl	equ	0xFF6
  9328                           tablat	equ	0xFF5
  9329                           prodh	equ	0xFF4
  9330                           prodl	equ	0xFF3
  9331                           intcon	equ	0xFF2
  9332                           intcon2	equ	0xFF1
  9333                           postinc0	equ	0xFEE
  9334                           fsr0h	equ	0xFEA
  9335                           fsr0l	equ	0xFE9
  9336                           wreg	equ	0xFE8
  9337                           indf1	equ	0xFE7
  9338                           fsr1h	equ	0xFE2
  9339                           fsr1l	equ	0xFE1
  9340                           bsr	equ	0xFE0
  9341                           indf2	equ	0xFDF
  9342                           postinc2	equ	0xFDE
  9343                           postdec2	equ	0xFDD
  9344                           fsr2h	equ	0xFDA
  9345                           fsr2l	equ	0xFD9
  9346                           status	equ	0xFD8
  9347                           
  9348 ;; *************** function _in_high_int *****************
  9349 ;; Defined at:
  9350 ;;		line 25 in file "../src/interrupts.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  2    0[BANK0 ] int 
  9357 ;; Registers used:
  9358 ;;		wreg, status,2
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9364 ;;      Params:         0       2       0       0       0
  9365 ;;      Locals:         0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0
  9367 ;;      Totals:         0       2       0       0       0
  9368 ;;Total ram usage:        2 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		_in_low_int
  9374 ;;		_SleepIfOkay
  9375 ;;		_in_main
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text52
  9380  001CB4                     __ptext52:
  9381                           	opt stack 0
  9382  001CB4                     _in_high_int:
  9383                           	opt stack 17
  9384                           
  9385                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;incstack = 0
  9389  001CB4  0E00               	movlw	0
  9390  001CB6  AEF2               	btfss	intcon,7,c	;volatile
  9391  001CB8  0E01               	movlw	1
  9392  001CBA  0100               	movlb	0	; () banked
  9393  001CBC  6F80               	movwf	?_in_high_int& (0+255),b
  9394  001CBE  0100               	movlb	0	; () banked
  9395  001CC0  6B81               	clrf	(?_in_high_int+1)& (0+255),b
  9396  001CC2  0012               	return	
  9397  001CC4                     __end_of_in_high_int:
  9398                           	opt stack 0
  9399                           pclatu	equ	0xFFB
  9400                           pclath	equ	0xFFA
  9401                           tblptru	equ	0xFF8
  9402                           tblptrh	equ	0xFF7
  9403                           tblptrl	equ	0xFF6
  9404                           tablat	equ	0xFF5
  9405                           prodh	equ	0xFF4
  9406                           prodl	equ	0xFF3
  9407                           intcon	equ	0xFF2
  9408                           intcon2	equ	0xFF1
  9409                           postinc0	equ	0xFEE
  9410                           fsr0h	equ	0xFEA
  9411                           fsr0l	equ	0xFE9
  9412                           wreg	equ	0xFE8
  9413                           indf1	equ	0xFE7
  9414                           fsr1h	equ	0xFE2
  9415                           fsr1l	equ	0xFE1
  9416                           bsr	equ	0xFE0
  9417                           indf2	equ	0xFDF
  9418                           postinc2	equ	0xFDE
  9419                           postdec2	equ	0xFDD
  9420                           fsr2h	equ	0xFDA
  9421                           fsr2l	equ	0xFD9
  9422                           status	equ	0xFD8
  9423                           
  9424 ;; *************** function _enter_sleep_mode *****************
  9425 ;; Defined at:
  9426 ;;		line 202 in file "../src/messages.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;		None
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;		None               void
  9433 ;; Registers used:
  9434 ;;		None
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9440 ;;      Params:         0       0       0       0       0
  9441 ;;      Locals:         0       0       0       0       0
  9442 ;;      Temps:          0       0       0       0       0
  9443 ;;      Totals:         0       0       0       0       0
  9444 ;;Total ram usage:        0 bytes
  9445 ;; Hardware stack levels used:    1
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_SleepIfOkay
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text53
  9454  001D1C                     __ptext53:
  9455                           	opt stack 0
  9456  001D1C                     _enter_sleep_mode:
  9457                           	opt stack 18
  9458                           
  9459                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;incstack = 0
  9463  001D1C  8ED3               	bsf	4051,7,c	;volatile
  9464  001D1E  0003               	sleep		;# 
  9465  001D20  0012               	return	
  9466  001D22                     __end_of_enter_sleep_mode:
  9467                           	opt stack 0
  9468                           pclatu	equ	0xFFB
  9469                           pclath	equ	0xFFA
  9470                           tblptru	equ	0xFF8
  9471                           tblptrh	equ	0xFF7
  9472                           tblptrl	equ	0xFF6
  9473                           tablat	equ	0xFF5
  9474                           prodh	equ	0xFF4
  9475                           prodl	equ	0xFF3
  9476                           intcon	equ	0xFF2
  9477                           intcon2	equ	0xFF1
  9478                           postinc0	equ	0xFEE
  9479                           fsr0h	equ	0xFEA
  9480                           fsr0l	equ	0xFE9
  9481                           wreg	equ	0xFE8
  9482                           indf1	equ	0xFE7
  9483                           fsr1h	equ	0xFE2
  9484                           fsr1l	equ	0xFE1
  9485                           bsr	equ	0xFE0
  9486                           indf2	equ	0xFDF
  9487                           postinc2	equ	0xFDE
  9488                           postdec2	equ	0xFDD
  9489                           fsr2h	equ	0xFDA
  9490                           fsr2l	equ	0xFD9
  9491                           status	equ	0xFD8
  9492                           
  9493 ;; *************** function _check_msg *****************
  9494 ;; Defined at:
  9495 ;;		line 220 in file "../src/messages.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9498 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      unsigned char 
  9503 ;; Registers used:
  9504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9510 ;;      Params:         0       2       0       0       0
  9511 ;;      Locals:         0       0       0       0       0
  9512 ;;      Temps:          0       1       0       0       0
  9513 ;;      Totals:         0       3       0       0       0
  9514 ;;Total ram usage:        3 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_SleepIfOkay
  9520 ;;		_block_on_To_msgqueues
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           	psect	text54
  9525  001B32                     __ptext54:
  9526                           	opt stack 0
  9527  001B32                     _check_msg:
  9528                           	opt stack 18
  9529                           
  9530                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9531                           
  9532                           ;incstack = 0
  9533  001B32  0100               	movlb	0	; () banked
  9534  001B34  EE20 F056          	lfsr	2,86
  9535  001B38  0100               	movlb	0	; () banked
  9536  001B3A  5180               	movf	check_msg@qptr& (0+255),w,b
  9537  001B3C  26D9               	addwf	fsr2l,f,c
  9538  001B3E  0100               	movlb	0	; () banked
  9539  001B40  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
  9540  001B42  22DA               	addwfc	fsr2h,f,c
  9541  001B44  50DF               	movf	indf2,w,c
  9542  001B46  0100               	movlb	0	; () banked
  9543  001B48  6F82               	movwf	??_check_msg& (0+255),b
  9544  001B4A  0100               	movlb	0	; () banked
  9545  001B4C  5182               	movf	??_check_msg& (0+255),w,b
  9546  001B4E  0D11               	mullw	17
  9547  001B50  50F3               	movf	prodl,w,c
  9548  001B52  0100               	movlb	0	; () banked
  9549  001B54  2580               	addwf	check_msg@qptr& (0+255),w,b
  9550  001B56  6ED9               	movwf	fsr2l,c
  9551  001B58  50F4               	movf	prodh,w,c
  9552  001B5A  0100               	movlb	0	; () banked
  9553  001B5C  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9554  001B5E  6EDA               	movwf	fsr2h,c
  9555  001B60  50DF               	movf	indf2,w,c
  9556  001B62  0012               	return	
  9557  001B64                     __end_of_check_msg:
  9558                           	opt stack 0
  9559  0000                     pclatu	equ	0xFFB
  9560                           pclath	equ	0xFFA
  9561                           tblptru	equ	0xFF8
  9562                           tblptrh	equ	0xFF7
  9563                           tblptrl	equ	0xFF6
  9564                           tablat	equ	0xFF5
  9565                           prodh	equ	0xFF4
  9566                           prodl	equ	0xFF3
  9567                           intcon	equ	0xFF2
  9568                           intcon2	equ	0xFF1
  9569                           postinc0	equ	0xFEE
  9570                           fsr0h	equ	0xFEA
  9571                           fsr0l	equ	0xFE9
  9572                           wreg	equ	0xFE8
  9573                           indf1	equ	0xFE7
  9574                           fsr1h	equ	0xFE2
  9575                           fsr1l	equ	0xFE1
  9576                           bsr	equ	0xFE0
  9577                           indf2	equ	0xFDF
  9578                           postinc2	equ	0xFDE
  9579                           postdec2	equ	0xFDD
  9580                           fsr2h	equ	0xFDA
  9581                           fsr2l	equ	0xFD9
  9582                           status	equ	0xFD8
  9583                           pclatu	equ	0xFFB
  9584                           pclath	equ	0xFFA
  9585                           tblptru	equ	0xFF8
  9586                           tblptrh	equ	0xFF7
  9587                           tblptrl	equ	0xFF6
  9588                           tablat	equ	0xFF5
  9589                           prodh	equ	0xFF4
  9590                           prodl	equ	0xFF3
  9591                           intcon	equ	0xFF2
  9592                           intcon2	equ	0xFF1
  9593                           postinc0	equ	0xFEE
  9594                           fsr0h	equ	0xFEA
  9595                           fsr0l	equ	0xFE9
  9596                           wreg	equ	0xFE8
  9597                           indf1	equ	0xFE7
  9598                           fsr1h	equ	0xFE2
  9599                           fsr1l	equ	0xFE1
  9600                           bsr	equ	0xFE0
  9601                           indf2	equ	0xFDF
  9602                           postinc2	equ	0xFDE
  9603                           postdec2	equ	0xFDD
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608                           	psect	param0
  9609  0000                     pclatu	equ	0xFFB
  9610                           pclath	equ	0xFFA
  9611                           tblptru	equ	0xFF8
  9612                           tblptrh	equ	0xFF7
  9613                           tblptrl	equ	0xFF6
  9614                           tablat	equ	0xFF5
  9615                           prodh	equ	0xFF4
  9616                           prodl	equ	0xFF3
  9617                           intcon	equ	0xFF2
  9618                           intcon2	equ	0xFF1
  9619                           postinc0	equ	0xFEE
  9620                           fsr0h	equ	0xFEA
  9621                           fsr0l	equ	0xFE9
  9622                           wreg	equ	0xFE8
  9623                           indf1	equ	0xFE7
  9624                           fsr1h	equ	0xFE2
  9625                           fsr1l	equ	0xFE1
  9626                           bsr	equ	0xFE0
  9627                           indf2	equ	0xFDF
  9628                           postinc2	equ	0xFDE
  9629                           postdec2	equ	0xFDD
  9630                           fsr2h	equ	0xFDA
  9631                           fsr2l	equ	0xFD9
  9632                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         384
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     85     121
    BANK0           128     69      72
    BANK1           256    102     189
    BANK2           256      0     174
    BANK3           256      0      87

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[14]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[14]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 6
		 -> main@t1thread_data(BANK1[6]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 6
		 -> main@t1thread_data(BANK1[6]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 4
		 -> uart_transmit_interrupt_handler@data(COMRAM[4]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 4
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), InterruptHandlerLow@sendy_stuff(COMRAM[14]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[14]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_i_like_to_moveit_moveit
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                83    83      0   17990
                                             22 BANK1     80    80      0
               _FromMainHigh_sendmsg
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
            _i_like_to_moveit_moveit
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3477
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2788
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i_like_to_moveit_moveit                              6     5      1    3913
                                             16 BANK1      6     5      1
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (2) _send_uart_message                                    3     1      2    2822
                                             68 BANK0      1     1      0
                                             14 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _FromMainLow_sendmsg                                  4     1      3    2658
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 31    31      0    7491
                                             54 COMRAM    31    31      0
                  _ToMainLow_sendmsg
                             _blink1
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
                            i1_blip1
                            i1_blip2
                            i1_blip3
 ---------------------------------------------------------------------------------
 (7) i1_blip3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_blip2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_blip1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                      6     6      0    1765
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      28    28      0    3073
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2317
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _blink1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    4263
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    13    13      0    4007
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               3     1      2      75
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1667
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1568
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainHigh_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _i_like_to_moveit_moveit
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           ___awmod
           _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _ToMainLow_sendmsg
     i1_send_msg
       i1___awmod
       i1_memcpy
   _blink1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
   i1_blip1
   i1_blip2
   i1_blip3

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      57      10       34.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      AE       8       68.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     66      BD       6       73.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      48       4       56.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     55      79       1       95.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     283      11        0.0%
DATA                 0      0     283      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Nov 19 17:38:11 2014

                              ??_debug_configure 00B8                         _MQ_Main_Willing_to_block 00C7  
                                    _SSPSTATbits 000FC7               uart_receive_interrupt_handler@done 0073  
                      __end_of_ToMainLow_recvmsg 1AC6                                               bsr 000FE0  
                      __end_of_ToMainLow_sendmsg 1C62                                     __CFG_CP0$OFF 000000  
                              i2recv_msg@msgtype 008D                                i2recv_msg@tlength 0094  
                           ?_FromMainLow_recvmsg 0019                                              l152 08EA  
                                            l153 08F0                                              l551 148A  
                                            l555 14E2                             ?_FromMainLow_sendmsg 010B  
                               ??_uart_configure 00B8                                     ___awmod@sign 00BD  
                                 _FromMainLow_MQ 0200                                              prod 000FF3  
                                            wreg 000FE8                                       _TXSTA1bits 000FAC  
                                   __CFG_IESO$ON 000000                                     ?_in_high_int 0080  
                                           l1111 1814                              i2recv_msg@maxlength 008C  
                                           l3500 1256                                             l3520 12C0  
                                           l3512 129E                                             l3504 1268  
                                           l4080 14D8                                             l4064 1480  
                                           l3506 1274                                             l4074 14C2  
                                           l4058 146A                                             l4242 0836  
                                           l3508 127A                                             l3516 12AC  
                                           l3700 0CF6                                             l4260 08E0  
                                           l4254 088E                                             l4270 0932  
                                           l3480 1940                                             l3536 0E86  
                                           l4280 09A6                                             l4256 08D2  
                                           l4248 085C                                             l2666 1734  
                                           l3730 17E2                                             l4276 0964  
                                           l4268 0916                                             l3486 1960  
                                           l3734 1806                                             l3726 17D0  
                                           l4286 09AE                                             l3496 1234  
                                           l3728 17DC                                             l4296 09F2  
                                           l3684 0C18                                             _LATB 000F8A  
                                           i1l69 00E6                                  _FromMainHigh_MQ 0300  
                                  __CFG_FCMEN$ON 000000                                             _blip 1CFC  
                                     i1_recv_msg 1054                                             _main 0784  
                       ?_i_like_to_moveit_moveit 0110                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             fsr0l 000FE9  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           fsr1l 000FE1                                             indf2 000FDF  
                                           fsr2l 000FD9                                      main@msgtype 013E  
                                     i1_send_msg 138E                                             pclat 000FFA  
                                __end_ofi1_blip1 1D1C                                  __end_ofi1_blip2 1D14  
                                __end_ofi1_blip3 1D0C                                             prodh 000FF4  
                                           prodl 000FF3                            handle_start@data_read 0080  
                                           start 012C                                       i2_recv_msg 0CFA  
                                  __CFG_FOSC2$ON 000000                                       i2_send_msg 0F48  
                      ToMainHigh_recvmsg@msgtype 010C                                   send_msg@length 0102  
         uart_receive_interrupt_handler@checksum 002F                            ??_FromMainLow_recvmsg 001D  
                                          ?_blip 0001                            ??_FromMainLow_sendmsg 00C3  
                                          ?_main 0001                                  __end_of___awmod 12CA  
                                          i1l440 0B9C                                  __end_of___lwmod 181E  
                                     i1memcpy@d1 0001                                            i2l320 01B6  
                                          i2l308 11BA                                            i2l324 01E8  
                                          i2l326 023E                                            i2l318 0592  
                                          i2l347 0496                                            i2l339 0384  
                                          i2l357 05A0                                       i1memcpy@s1 0003  
                    FromMainHigh_recvmsg@msgtype 0098                                            _TMR0H 000FD7  
                                          _TMR1H 000FCF                                            _TMR0L 000FD6  
                                          _TMR1L 000FCE                                            _SPBRG 000FAF  
                                          _TRISB 000F93                                            _TRISD 000F95  
                                     i2memcpy@d1 0080                                       i2memcpy@s1 0082  
                                   ?_init_queues 0001                        __size_of_enter_sleep_mode 0006  
                                 i1___awmod@sign 0006                                            _blip1 1CF4  
                                          _blip2 1CEC                                            _blip3 1CE4  
    uart_receive_interrupt_handler@message_count 0033                       ToMainLow_recvmsg@maxlength 00C4  
                                          main@i 013F                          timer0_lthread@msgbuffer 00BE  
                        i2c_configure_slave@addr 00B8                             main@need_sensor_data 0134  
                                          tablat 000FF5          i_like_to_moveit_moveit@right_side_speed 0110  
                                          status 000FD8                                 __end_ofi1_memcpy 1A52  
                             __size_ofi1___awmod 0090                                 __end_ofi2_memcpy 19C6  
                             __size_ofi2___awmod 00C4                                  __initialization 18D6  
                                   __end_of_blip 1D04                                     __end_of_main 0A2E  
                     __size_of_ToMainLow_recvmsg 0036                       __size_of_ToMainLow_sendmsg 0024  
                  __size_of_FromMainHigh_recvmsg 0036                    __size_of_FromMainHigh_sendmsg 002E  
                                         ??_blip 00B8                                           ??_main 00C5  
                                send_msg@msgtype 0103                                    __activetblptr 000002  
                                send_msg@tlength 0106                       FromMainLow_sendmsg@msgtype 010B  
                           __end_of_handle_start 1206                                           ?_blip1 0001  
                                         ?_blip2 0001                                           ?_blip3 0001  
                                      ??i1_blip1 0001                                        ??i1_blip2 0001  
                                      ??i1_blip3 0001                                           i1l4002 0BB0  
                                         i1l2420 1A24                                           i1l4014 15C8  
                                         i1l2450 154A                                           i1l2426 1A40  
                                         i1l4130 0096                                           i1l2470 1590  
                                         i1l2462 1578                                           i1l2454 1558  
                                         i1l2446 152E                                           i1l4038 15FC  
                                         i1l4142 00AA                                           i1l4118 0078  
                                         i1l2456 1560                                           i1l4136 00A0  
                                         i1l2458 1564                                           i1l2466 1582  
                                         i1l3612 109A                                           i1l3564 13C6  
                                         i1l3628 1138                                           i1l3932 0A74  
                                         i2l2502 1370                                           i2l2430 1990  
                                         i1l3926 0A6E                                           i1l3934 0A7A  
                                         i2l4104 1654                                           i2l2506 1384  
                                         i1l3946 0AA6                                           i2l2436 19B0  
                                         i1l3948 0AA8                                           i1l3982 0B54  
                                         i1l3974 0B32                                           i1l3958 0AD8  
                                 __CFG_WDTEN$OFF 000000                                           i2l2490 132C  
                                         i2l2482 12F8                                           i2l2492 1338  
                                         i2l2646 1A82                                           i2l2638 1A64  
                                         i2l2494 133E                                           i2l2486 131A  
                                         i2l2736 11D6                                           i2l2498 1362  
                                         i2l2738 11EE                                           i2l3644 0D5A  
                                         i2l3660 0E34                                           i2l3900 0746  
                                         i2l3820 0432                                           i2l3824 043A  
                                         i2l3752 01A0                                           i2l2954 1826  
                                         i2l3850 0512                                           i2l3818 03F2  
                                         i2l3588 0F96                                           i2l3862 0566  
                                         i2l3758 01AE                                           i2l3856 0550  
                                         i2l3776 0214                                           i2l3890 0700  
                                         i2l3882 066E                                           i2l3874 0602  
                                         i2l3794 02C8                                           i2l3778 0254  
                                         i2l3868 05A4                                           i2l3796 0308  
                                         i2l3788 028E                                           _RCREG1 000FAE  
                    __end_of_i2c_configure_slave 1C16                                    ??_SleepIfOkay 0084  
                                         _OSCCON 000FD3                                           _SPBRGH 000FB0  
                                    ?i1_recv_msg 000B                                           _SSPADD 000FC8  
                                         _SSPBUF 000FC9                   __size_of_start_i2c_slave_reply 004C  
                                         _TXREG1 000FAD                                      ?i1_send_msg 000B  
                  __end_of_start_i2c_slave_reply 1A12                               timer0_lthread@tptr 00B8  
                        FromMainLow_recvmsg@data 001B                                      ?i2_recv_msg 008A  
                                    ?i2_send_msg 008A                                   __CFG_XINST$OFF 000000  
               ??_uart_receive_interrupt_handler 001B                  ?_uart_receive_interrupt_handler 0001  
                                _i2c_int_handler 0130                                        ??___awmod 00BC  
                                         _blink0 1D22                                           _blink1 1D26  
                                         _ic_ptr 00C5                                        ??___lwmod 00BC  
                                  main@msgbuffer 0124                                 __end_of_init_i2c 16F8  
                                         _memcpy 1926                                           clear_0 18DC  
                                         clear_1 18E8                                           clear_2 18F4  
                                         clear_3 1904                                  ___awmod@divisor 00BA  
                                ___awmod@counter 00BC                                           main@ic 0140  
                               __end_of_recv_msg 0CFA                      start_i2c_slave_reply@length 0082  
  uart_transmit_interrupt_handler@message_status 0023                                __end_ofi1___awmod 159A  
                               __end_of_send_msg 0F48                                     __pdataCOMRAM 0079  
                              __end_ofi2___awmod 138E                          i2c_int_handler@i2c_data 00A5  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8             uart_receive_interrupt_handler@msg_id 0034  
                                    init_queue@i 00BA                                   i2___awmod@sign 0085  
           uart_receive_interrupt_handler@status 002B                         ToMainLow_recvmsg@msgtype 010C  
                           __size_of_in_high_int 0010                          FromMainLow_sendmsg@data 010C  
                                _debug_configure 1CD2                                  __CFG_FOSC$HSPLL 000000  
           uart_transmit_interrupt_handler@index 0078                                       __accesstop 0080  
                        __end_of__initialization 191C                       __end_of_ToMainHigh_recvmsg 1AFC  
                     __end_of_ToMainHigh_sendmsg 1BEE                                 _need_sensor_data 0070  
                    __end_of_init_timer1_lthread 1CB4                              __end_of_SleepIfOkay 187E  
                                 __pcstackCOMRAM 0001                                    __end_of_blip1 1CFC  
                                  __end_of_blip2 1CF4                                    __end_of_blip3 1CEC  
                send_uart_message@message_q_code 00C4                               __size_of_check_msg 0032  
                            __size_ofi1_recv_msg 00E8                              __size_ofi1_send_msg 00C0  
                                      ?i1_memcpy 0001                    __size_of_InterruptHandlerHigh 168A  
                    __end_of_InterruptHandlerLow 012C                                        ?i2_memcpy 0080  
                                  _ToMainHigh_MQ 0257                              __size_ofi2_recv_msg 013E  
                               _enter_sleep_mode 1D1C                              __size_ofi2_send_msg 010C  
                           timer1_lthread@length 0112                                          ??_blip1 00B8  
                                        ??_blip2 00B8                                          ??_blip3 00B8  
                                  check_msg@qptr 0080                             timer1_lthread@retval 00C4  
                           __size_of_init_queues 0058                                       __pbssBANK0 00C7  
                                     __pbssBANK1 0166                                       __pbssBANK2 0200  
                                     __pbssBANK3 0300                          i2c_int_handler@msg_type 00A7  
                        __end_of_i2c_int_handler 0784                               timer1_lthread@tptr 010E  
                                        ?_blink0 0001                                          ?_blink1 0001  
                              recv_msg@maxlength 0102                                  recv_msg@msgtype 0103  
                                recv_msg@tlength 0108                            __size_of_handle_start 00CA  
                                        ?_memcpy 00B8                 __size_of_i_like_to_moveit_moveit 00BC  
                        __size_of_timer0_lthread 000E                          __size_of_timer1_lthread 0062  
                                     ??i1_memcpy 0007                                       ??i2_memcpy 0086  
                        __end_of_debug_configure 1CDC                                 i1send_msg@length 000D  
                                        _SSPCON1 000FC6                                          _SSPCON2 000FC5  
                                        _SSPSTAT 000FC7                                          i1_blip1 1D14  
                                        i1_blip2 1D0C                                          i1_blip3 1D04  
                              __end_of_check_msg 1B64                                        ?_init_i2c 00B8  
                                    _SleepIfOkay 181E                                _send_uart_message 1C82  
                                      ?_recv_msg 0100                                       _in_low_int 1A52  
                                   _handle_start 113C                                          __Hparam 0000  
                                      ?_send_msg 0100                                          __Lparam 0000  
                             ?_send_uart_message 010E        uart_receive_interrupt_handler@status_2104 002C  
                    __end_of_FromMainLow_recvmsg 1C3E                      __end_of_FromMainLow_sendmsg 1BC0  
                                        ___awmod 1206                                          ___lwmod 17BE  
                                __size_of_blink0 0004                                  __size_of_blink1 0004  
                                __CFG_STVREN$OFF 000000                              ??_send_uart_message 00C4  
                                        __pcinit 18D6                                  __size_of_memcpy 0050  
                                     _init_queue 16F8                                          __ramtop 0400  
                                        __ptext0 0784                                          __ptext1 1C62  
                                        __ptext2 175C                                          __ptext3 1D22  
                                        __ptext4 17BE                                          __ptext5 1B64  
                                        __ptext6 1CC4                                          __ptext7 1CA2  
                                        __ptext8 187E                                          __ptext9 16F8  
                                      _T0CONbits 000FD5                                        _T1CONbits 000FCD  
                               ___awmod@dividend 00B8                                   main@motor_data 0116  
                                 __pintcode_body 161E                     __end_of_FromMainHigh_recvmsg 1B32  
                           end_of_initialization 191C                          timer1_lthread@msgbuffer 0114  
                   __end_of_FromMainHigh_sendmsg 1B92                       FromMainHigh_sendmsg@length 00C3  
                      __end_of_send_uart_message 1CA2                                          memcpy@d 00BE  
                                        memcpy@n 00BC                                          memcpy@s 00C0  
                                     ??_init_i2c 00BA                                     ??i1_recv_msg 0012  
                        __size_of_uart_configure 0020                      i2c_int_handler@data_written 00A2  
                                  __Lmediumconst 0000                                          int_func 161E  
                                   ??i1_send_msg 0011         uart_receive_interrupt_handler@bad_end_id 0031  
     uart_receive_interrupt_handler@bad_start_id 0030                                 ?_i2c_int_handler 0001  
                                   ??i2_recv_msg 0091                                       ??_recv_msg 00C2  
                                   ??i2_send_msg 0090                                       ??_send_msg 00C2  
uart_receive_interrupt_handler@gooey_uart_center 001D                                          postdec2 000FDD  
                                        postinc0 000FEE                                          postinc2 000FDE  
                      ToMainHigh_sendmsg@msgtype 0096           i_like_to_moveit_moveit@left_side_speed 0111  
                             __end_ofi1_recv_msg 113C                               __end_ofi1_send_msg 144E  
                    FromMainHigh_sendmsg@msgtype 010B           __end_of_uart_receive_interrupt_handler 0BB8  
        __size_of_uart_receive_interrupt_handler 018A                   _uart_receive_interrupt_handler 0A2E  
                               ?_debug_configure 0001                                        _TRISBbits 000F93  
                                      _TRISCbits 000F94                               __end_ofi2_recv_msg 0E38  
                                      i1___awmod 150A                               __end_ofi2_send_msg 1054  
                                      i2___awmod 12CA                    FromMainHigh_recvmsg@maxlength 009C  
                                     main@length 013D                                      ?_in_low_int 0082  
                          timer0_lthread@msgtype 00BA                            _start_i2c_slave_reply 19C6  
                   __size_of_i2c_configure_slave 0028                         __end_of_enter_sleep_mode 1D22  
                        _i_like_to_moveit_moveit 144E                               _ToMainHigh_recvmsg 1AC6  
                                      i1memcpy@d 0007                               _ToMainHigh_sendmsg 1BC0  
                                      i1memcpy@n 0005                                        i1memcpy@s 0009  
                                    _BAUDCONbits 000FB8                                   __end_of_blink0 1D26  
                                 __end_of_blink1 1D2A                                    __pidataCOMRAM 1D2A  
                                 _timer0_lthread 1CC4                                      ?_init_queue 00B8  
                                      i2memcpy@d 0086                                        i2memcpy@n 0084  
                                      i2memcpy@s 0088                                   _timer1_lthread 175C  
                                 __end_of_memcpy 1976                                _enable_interrupts 1CDC  
                            ?_ToMainHigh_recvmsg 010C                         i2c_int_handler@data_read 00A9  
                            ?_ToMainHigh_sendmsg 0096                               ?_enable_interrupts 0001  
                            start_initialization 18D6                                    ??_in_high_int 0082  
   uart_receive_interrupt_handler@start_byte_bad 0077                                       ?i1___awmod 0001  
                              __size_ofi1_memcpy 0040                                __size_ofi2_memcpy 0050  
                                     ?i2___awmod 0080                        FromMainLow_sendmsg@length 00C3  
                InterruptHandlerLow@encoder_left 0068                            i2c_int_handler@length 009E  
                            ??_enable_interrupts 00B8                  uart_receive_interrupt_handler@i 0035  
                     __size_of_send_uart_message 0020                     __end_of_InterruptHandlerHigh 1692  
                                     init_i2c@ic 00B8                             ??_ToMainHigh_recvmsg 00C4  
                           ??_ToMainHigh_sendmsg 0099           uart_transmit_interrupt_handler@msgtype 0022  
                       i2c_int_handler@need_data 00A4                           __end_of_timer0_lthread 1CD2  
                                       ??_blink0 00B8                                         ??_blink1 0001  
                       i2c_int_handler@error_buf 009F                           __end_of_timer1_lthread 17BE  
                             i1___awmod@dividend 0001                        __end_of_enable_interrupts 1CE4  
                                       ??_memcpy 00BE                            timer1_lthread@msgtype 0110  
                           _FromMainHigh_recvmsg 1AFC              uart_receive_interrupt_handler@frame 0056  
            uart_receive_interrupt_handler@index 0075                             _FromMainHigh_sendmsg 1B64  
            uart_receive_interrupt_handler@error 0074                     __size_of_init_timer1_lthread 0012  
                       i2c_int_handler@msg_ready 00A8                                      __pbssCOMRAM 0056  
                                  ??_init_queues 00BB                                    __pcstackBANK0 0080  
                                  __pcstackBANK1 0100                              __size_of_in_low_int 003E  
                       start_i2c_slave_reply@msg 0080                              __CFG_CCP2MX$DEFAULT 000000  
                                       ?i1_blip1 0001                                         ?i1_blip2 0001  
                                       ?i1_blip3 0001                         ToMainLow_sendmsg@msgtype 0017  
                   __size_of_InterruptHandlerLow 0114                              __end_of_in_high_int 1CC4  
                                 _uart_configure 1C62                                     ?_SleepIfOkay 0001  
                          ToMainLow_recvmsg@data 010E                                     _ToMainLow_MQ 0166  
                            __size_of_init_queue 0064                                        _check_msg 1B32  
                                      __pnvBANK0 00C5                           ?_start_i2c_slave_reply 0080  
                              __size_of_init_i2c 0066                                     recv_msg@data 0105  
                      ??_i_like_to_moveit_moveit 00C5                                     recv_msg@qmsg 010A  
                                   recv_msg@slot 0107                                     recv_msg@qptr 0100  
                              __size_of_recv_msg 0142                                        __pintcode 0008  
                              __size_of_send_msg 0110                                         ?___awmod 00B8  
                                ?_timer0_lthread 00B8                                         ?___lwmod 00B8  
                          ?_FromMainHigh_recvmsg 0098                                  ?_timer1_lthread 010E  
                          ?_FromMainHigh_sendmsg 010B                                      __pintcodelo 0018  
                         ToMainHigh_recvmsg@data 010E                       i2c_int_handler@msg_to_send 00A6  
                 InterruptHandlerLow@sendy_stuff 0048                                      ??i1___awmod 0005  
                          ToMainLow_sendmsg@data 0018                                   __size_of_blip1 0008  
                                 __size_of_blip2 0008                                   __size_of_blip3 0008  
                                    ??i2___awmod 0084                           __end_of_uart_configure 1C82  
                            i1recv_msg@maxlength 000D     uart_receive_interrupt_handler@bad_counter_id 002D  
                            __end_of_init_queues 18D6                                         _LATBbits 000F8A  
                                       _LATDbits 000F8C                                       ?_check_msg 0080  
                                       _IPR1bits 000F9F                                         _PIE1bits 000F9D  
                                       _PIR1bits 000F9E                           ToMainHigh_sendmsg@data 0097  
                                       _RCONbits 000FD0                                 __CFG_WDTPS$32768 000000  
                                 i1recv_msg@data 0010                 InterruptHandlerLow@encoder_right 006C  
                                 i1recv_msg@qmsg 0017                                   i1recv_msg@slot 0014  
                                 i1recv_msg@qptr 000B   uart_receive_interrupt_handler@received_counter 0076  
                   FromMainLow_recvmsg@maxlength 001D                       __size_of_enable_interrupts 0008  
                              i1send_msg@msgtype 000E                                i1send_msg@tlength 0012  
                     FromMainLow_recvmsg@msgtype 0019                     __size_of_FromMainLow_recvmsg 0028  
                   __size_of_FromMainLow_sendmsg 002E                             timer0_lthread@length 00BC  
                                       i1_memcpy 1A12                             _InterruptHandlerHigh 0008  
                                       i2_memcpy 1976                  __end_of_i_like_to_moveit_moveit 150A  
                           timer0_lthread@msgval 00C0                         FromMainHigh_recvmsg@data 009A  
                                    _in_high_int 1CB4                                     send_msg@data 0104  
                            _i2c_configure_slave 1BEE                                     send_msg@qmsg 0109  
                                   send_msg@slot 0108                                     send_msg@qptr 0100  
                                    _INTCON2bits 000FF1                                  ?_uart_configure 0001  
                             i2___awmod@dividend 0080                                 __size_ofi1_blip1 0008  
                               __size_ofi1_blip2 0008                                 __size_ofi1_blip3 0008  
                                       __Hparam0 0000                                     ??_in_low_int 0084  
                                       __Lparam0 0000                             ?_i2c_configure_slave 0001  
                              ?_enter_sleep_mode 0001                           ??_FromMainHigh_recvmsg 009C  
                         ??_FromMainHigh_sendmsg 00C3                                i1___awmod@divisor 0003  
        __end_of_uart_transmit_interrupt_handler 161E         __size_of_uart_transmit_interrupt_handler 0084  
              ??_uart_transmit_interrupt_handler 001E                 ?_uart_transmit_interrupt_handler 0001  
                _uart_transmit_interrupt_handler 159A                                i1___awmod@counter 0005  
                       __size_of_i2c_int_handler 0654                                 __size_of___awmod 00C4  
                             ??_enter_sleep_mode 0080                                 __size_of___lwmod 0060  
                                   ??_init_queue 00BA                         FromMainHigh_sendmsg@data 010C  
                        ToMainLow_sendmsg@length 001A                                main@t0thread_data 0135  
                 uart_frame_message@sent_counter 0072                            ?_InterruptHandlerHigh 0001  
            uart_transmit_interrupt_handler@data 001E              uart_transmit_interrupt_handler@done 0079  
                   i_like_to_moveit_moveit@moves 0112                                i2send_msg@msgtype 008D  
                    ToMainHigh_recvmsg@maxlength 00C4                                i2send_msg@tlength 0091  
                        init_timer1_lthread@tptr 00B8                                      _init_queues 187E  
                             __end_of_in_low_int 1A90                                         __ptext10 1692  
                                       __ptext11 144E                                         __ptext20 1CF4  
                                       __ptext12 1C82                                         __ptext21 1CFC  
                                       __ptext13 1B92                                         __ptext30 1D14  
                                       __ptext22 1A90                                         __ptext14 0E38  
                                       __ptext31 159A                                         __ptext23 1AC6  
                                       __ptext15 1BEE                                         __ptext32 1C16  
                                       __ptext24 0BB8                                         __ptext16 1CDC  
                                       __ptext41 0130                                         __ptext33 1054  
                                       __ptext25 1926                                         __ptext17 1CD2  
                                       __ptext50 181E                                         __ptext42 19C6  
                                       __ptext34 0A2E                                         __ptext26 1206  
                                       __ptext18 1CE4                                         __ptext51 1A52  
                                       __ptext43 113C                                         __ptext35 1C3E  
                                       __ptext19 1CEC                                         __ptext52 1CB4  
                                       __ptext44 1BC0                                         __ptext36 138E  
                                       __ptext28 1D04                                         __ptext53 1D1C  
                                       __ptext45 0F48                                         __ptext37 1A12  
                                       __ptext29 1D0C                                         __ptext54 1B32  
                                       __ptext46 1AFC                                         __ptext38 150A  
                                       __ptext47 0CFA                                         __ptext39 1D26  
                                       __ptext48 1976                                         __ptext49 12CA  
                                 i1send_msg@data 000F                                   i1send_msg@qmsg 0015  
                                 i1send_msg@slot 0014                                   i1send_msg@qptr 000B  
                                       _init_i2c 1692                         __size_of_debug_configure 000A  
                            _init_timer1_lthread 1CA2                                    __size_of_blip 0008  
                                  __size_of_main 02AA                                main@t1thread_data 0137  
                                    ??_check_msg 0082                               __end_of_init_queue 175C  
                           __size_of_SleepIfOkay 0060                                         _recv_msg 0BB8  
                          ??_i2c_configure_slave 00B8                                         _send_msg 0E38  
  uart_receive_interrupt_handler@bad_checksum_id 0032                                   init_queue@qptr 00B8  
                                 i2recv_msg@data 008F                                   i2recv_msg@qmsg 0096  
                                 i2recv_msg@slot 0093                                   i2recv_msg@qptr 008A  
                                   _SSP1STATbits 000FC7                              _InterruptHandlerLow 0018  
                           ?_init_timer1_lthread 00B8                                i2___awmod@divisor 0082  
                              i2___awmod@counter 0084                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                                         memcpy@d1 00B8  
                                       memcpy@s1 00BA                     i2c_int_handler@overrun_error 00A3  
                               i2send_msg@length 008C                                         intlevel1 0000  
                                       intlevel2 0000                             ?_InterruptHandlerLow 0001  
                        ??_start_i2c_slave_reply 0082                     send_uart_message@message_ptr 010E  
                               ___lwmod@dividend 00B8                                       _RCSTA1bits 000FAB  
                                  ?_handle_start 0001                                 ??_timer0_lthread 00C0  
                    __size_of_ToMainHigh_recvmsg 0036                      __size_of_ToMainHigh_sendmsg 002E  
                                     _OSCCONbits 000FD3                                 ??_timer1_lthread 00C4  
                              i1recv_msg@msgtype 000E                                i1recv_msg@tlength 0015  
                       ToMainHigh_sendmsg@length 0099                            ??_init_timer1_lthread 00BA  
                         ??_InterruptHandlerHigh 00AA                                _ToMainLow_recvmsg 1A90  
                              _ToMainLow_sendmsg 1C3E                               main@last_reg_recvd 0133  
                                ___lwmod@divisor 00BA                               ?_ToMainLow_recvmsg 010C  
                              ??_i2c_int_handler 009D                                  ___lwmod@counter 00BC  
                             ?_ToMainLow_sendmsg 0017                                      _SSPCON1bits 000FC6  
                                    _SSPCON2bits 000FC5                                   i2send_msg@data 008E  
                          ??_InterruptHandlerLow 0037                              ??_ToMainLow_recvmsg 00C4  
                                 i2send_msg@qmsg 0094                                   i2send_msg@slot 0093  
                                 i2send_msg@qptr 008A                              ??_ToMainLow_sendmsg 001A  
                            _FromMainLow_recvmsg 1C16                                   ??_handle_start 0080  
                            _FromMainLow_sendmsg 1B92  
