

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 15 15:20:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	param0,global,class=BANK0,space=1,delta=1
    81  0000                     
    82                           	psect	idataCOMRAM
    83  001E46                     __pidataCOMRAM:
    84                           	opt stack 0
    85                           
    86                           ;initializer for uart_transmit_interrupt_handler@done
    87  001E46  01                 	db	1
    88  0000                     _BAUDCONbits	set	4024
    89  0000                     _INTCONbits	set	4082
    90  0000                     _IPR1bits	set	3999
    91  0000                     _LATB	set	3978
    92  0000                     _LATBbits	set	3978
    93  0000                     _LATDbits	set	3980
    94  0000                     _OSCCON	set	4051
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _OSCTUNEbits	set	3995
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PIR1bits	set	3998
    99  0000                     _RCONbits	set	4048
   100  0000                     _RCREG1	set	4014
   101  0000                     _RCSTA1bits	set	4011
   102  0000                     _SPBRG	set	4015
   103  0000                     _SPBRGH	set	4016
   104  0000                     _SSP1STATbits	set	4039
   105  0000                     _SSPADD	set	4040
   106  0000                     _SSPBUF	set	4041
   107  0000                     _SSPCON1	set	4038
   108  0000                     _SSPCON1bits	set	4038
   109  0000                     _SSPCON2	set	4037
   110  0000                     _SSPCON2bits	set	4037
   111  0000                     _SSPSTAT	set	4039
   112  0000                     _SSPSTATbits	set	4039
   113  0000                     _T0CON	set	4053
   114  0000                     _T0CONbits	set	4053
   115  0000                     _T1CON	set	4045
   116  0000                     _T1CONbits	set	4045
   117  0000                     _TMR0H	set	4055
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR1H	set	4047
   120  0000                     _TMR1L	set	4046
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISBbits	set	3987
   123  0000                     _TRISCbits	set	3988
   124  0000                     _TRISD	set	3989
   125  0000                     _TXREG1	set	4013
   126  0000                     _TXSTA1bits	set	4012
   127                           
   128                           	psect	nvBANK0
   129  0000C5                     __pnvBANK0:
   130                           	opt stack 0
   131  0000C5                     _ic_ptr:
   132                           	opt stack 0
   133  0000C5                     	ds	2
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  001956                     __pcinit:
   139                           	opt stack 0
   140  001956                     start_initialization:
   141                           	opt stack 0
   142  001956                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK3 (87 bytes)
   146  001956  EE03  F000         	lfsr	0,__pbssBANK3
   147  00195A  0E57               	movlw	87
   148  00195C                     clear_0:
   149  00195C  6AEE               	clrf	postinc0,c
   150  00195E  06E8               	decf	wreg,f,c
   151  001960  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK2 (174 bytes)
   154  001962  EE02  F000         	lfsr	0,__pbssBANK2
   155  001966  0EAE               	movlw	174
   156  001968                     clear_1:
   157  001968  6AEE               	clrf	postinc0,c
   158  00196A  06E8               	decf	wreg,f,c
   159  00196C  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK1 (87 bytes)
   162  00196E  EE01  F072         	lfsr	0,__pbssBANK1
   163  001972  0E57               	movlw	87
   164  001974                     clear_2:
   165  001974  6AEE               	clrf	postinc0,c
   166  001976  06E8               	decf	wreg,f,c
   167  001978  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to BANK0 (1 bytes)
   170  00197A  0100               	movlb	0
   171  00197C  6BC7               	clrf	__pbssBANK0& (0+255),b
   172                           
   173                           ; Clear objects allocated to COMRAM (27 bytes)
   174  00197E  EE00  F048         	lfsr	0,__pbssCOMRAM
   175  001982  0E1B               	movlw	27
   176  001984                     clear_3:
   177  001984  6AEE               	clrf	postinc0,c
   178  001986  06E8               	decf	wreg,f,c
   179  001988  E1FD               	bnz	clear_3
   180                           
   181                           ; Initialize objects allocated to COMRAM (1 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  00198A  0E46               	movlw	low __pidataCOMRAM
   184  00198C  6EF6               	movwf	tblptrl,c
   185  00198E  0E1E               	movlw	high __pidataCOMRAM
   186  001990  6EF7               	movwf	tblptrh,c
   187  001992  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  001994  6EF8               	movwf	tblptru,c
   189  001996  0009               	tblrd		*+	;fetch initializer
   190  001998  CFF5 F063          	movff	tablat,__pdataCOMRAM
   191  00199C                     end_of_initialization:
   192                           	opt stack 0
   193  00199C                     __end_of__initialization:
   194                           	opt stack 0
   195  00199C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  00199E  6EF8               	movwf	tblptru,c
   197  0019A0  0100               	movlb	0
   198  0019A2  EF71  F003         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           
   206                           	psect	bssCOMRAM
   207  000048                     __pbssCOMRAM:
   208                           	opt stack 0
   209  000048                     uart_receive_interrupt_handler@frame:
   210                           	opt stack 0
   211  000048                     	ds	18
   212  00005A                     _need_sensor_data:
   213                           	opt stack 0
   214  00005A                     	ds	2
   215  00005C                     uart_frame_message@sent_counter:
   216                           	opt stack 0
   217  00005C                     	ds	1
   218  00005D                     uart_receive_interrupt_handler@done:
   219                           	opt stack 0
   220  00005D                     	ds	1
   221  00005E                     uart_receive_interrupt_handler@error:
   222                           	opt stack 0
   223  00005E                     	ds	1
   224  00005F                     uart_receive_interrupt_handler@index:
   225                           	opt stack 0
   226  00005F                     	ds	1
   227  000060                     uart_receive_interrupt_handler@received_counter:
   228                           	opt stack 0
   229  000060                     	ds	1
   230  000061                     uart_receive_interrupt_handler@start_byte_bad:
   231                           	opt stack 0
   232  000061                     	ds	1
   233  000062                     uart_transmit_interrupt_handler@index:
   234                           	opt stack 0
   235  000062                     	ds	1
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           
   243                           	psect	dataCOMRAM
   244  000063                     __pdataCOMRAM:
   245                           	opt stack 0
   246  000063                     uart_transmit_interrupt_handler@done:
   247                           	opt stack 0
   248  000063                     	ds	1
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           
   256                           	psect	bssBANK0
   257  0000C7                     __pbssBANK0:
   258                           	opt stack 0
   259  0000C7                     _MQ_Main_Willing_to_block:
   260                           	opt stack 0
   261  0000C7                     	ds	1
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           
   269                           	psect	bssBANK1
   270  000172                     __pbssBANK1:
   271                           	opt stack 0
   272  000172                     _ToMainLow_MQ:
   273                           	opt stack 0
   274  000172                     	ds	87
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	bssBANK2
   283  000200                     __pbssBANK2:
   284                           	opt stack 0
   285  000200                     _FromMainLow_MQ:
   286                           	opt stack 0
   287  000200                     	ds	87
   288  000257                     _ToMainHigh_MQ:
   289                           	opt stack 0
   290  000257                     	ds	87
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           
   298                           	psect	bssBANK3
   299  000300                     __pbssBANK3:
   300                           	opt stack 0
   301  000300                     _FromMainHigh_MQ:
   302                           	opt stack 0
   303  000300                     	ds	87
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           
   311                           	psect	cstackBANK1
   312  000100                     __pcstackBANK1:
   313                           	opt stack 0
   314  000100                     send_msg@qptr:
   315                           	opt stack 0
   316  000100                     recv_msg@qptr:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x0
   320  000100                     	ds	2
   321  000102                     send_msg@length:
   322                           	opt stack 0
   323  000102                     recv_msg@maxlength:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x2
   327  000102                     	ds	1
   328  000103                     send_msg@msgtype:
   329                           	opt stack 0
   330  000103                     recv_msg@msgtype:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x3
   334  000103                     	ds	1
   335  000104                     send_msg@data:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x4
   339  000104                     	ds	1
   340  000105                     recv_msg@data:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x5
   344  000105                     	ds	1
   345  000106                     send_msg@tlength:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x6
   349  000106                     	ds	1
   350  000107                     recv_msg@slot:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x7
   354  000107                     	ds	1
   355  000108                     send_msg@slot:
   356                           	opt stack 0
   357  000108                     recv_msg@tlength:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x8
   361  000108                     	ds	1
   362  000109                     send_msg@qmsg:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x9
   366  000109                     	ds	1
   367  00010A                     recv_msg@qmsg:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0xA
   371  00010A                     	ds	1
   372  00010B                     FromMainLow_sendmsg@msgtype:
   373                           	opt stack 0
   374  00010B                     FromMainHigh_sendmsg@msgtype:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0xB
   378  00010B                     	ds	1
   379  00010C                     ToMainLow_recvmsg@msgtype:
   380                           	opt stack 0
   381  00010C                     ToMainHigh_recvmsg@msgtype:
   382                           	opt stack 0
   383  00010C                     FromMainLow_sendmsg@data:
   384                           	opt stack 0
   385  00010C                     FromMainHigh_sendmsg@data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0xC
   389  00010C                     	ds	2
   390  00010E                     ToMainLow_recvmsg@data:
   391                           	opt stack 0
   392  00010E                     ToMainHigh_recvmsg@data:
   393                           	opt stack 0
   394  00010E                     send_uart_message@message_ptr:
   395                           	opt stack 0
   396  00010E                     timer1_lthread@tptr:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0xE
   400  00010E                     	ds	2
   401  000110                     i_like_to_moveit_moveit@right_side_speed:
   402                           	opt stack 0
   403  000110                     timer1_lthread@msgtype:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407  000110                     	ds	1
   408  000111                     i_like_to_moveit_moveit@left_side_speed:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x11
   412  000111                     	ds	1
   413  000112                     timer1_lthread@length:
   414                           	opt stack 0
   415  000112                     i_like_to_moveit_moveit@moves:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x12
   419  000112                     	ds	2
   420  000114                     timer1_lthread@msgbuffer:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x14
   424  000114                     	ds	2
   425  000116                     main@motor_data:
   426                           	opt stack 0
   427                           
   428                           ; 14 bytes @ 0x16
   429  000116                     	ds	14
   430  000124                     main@last_reg_recvd:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x24
   434  000124                     	ds	1
   435  000125                     main@need_sensor_data:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x25
   439  000125                     	ds	1
   440  000126                     main@msgbuffer:
   441                           	opt stack 0
   442                           
   443                           ; 15 bytes @ 0x26
   444  000126                     	ds	15
   445  000135                     main@t0thread_data:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x35
   449  000135                     	ds	2
   450  000137                     main@uart_response:
   451                           	opt stack 0
   452                           
   453                           ; 14 bytes @ 0x37
   454  000137                     	ds	14
   455  000145                     main@jjj:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x45
   459  000145                     	ds	2
   460  000147                     main@poop:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x47
   464  000147                     	ds	1
   465  000148                     main@t1thread_data:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x48
   469  000148                     	ds	2
   470  00014A                     main@length:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x4A
   474  00014A                     	ds	1
   475  00014B                     main@msgtype:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x4B
   479  00014B                     	ds	1
   480  00014C                     main@ic:
   481                           	opt stack 0
   482                           
   483                           ; 38 bytes @ 0x4C
   484  00014C                     	ds	38
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           
   492                           	psect	cstackBANK0
   493  000080                     __pcstackBANK0:
   494                           	opt stack 0
   495  000080                     ?_in_high_int:
   496                           	opt stack 0
   497  000080                     ?i2___awmod:
   498                           	opt stack 0
   499  000080                     handle_start@data_read:
   500                           	opt stack 0
   501  000080                     check_msg@qptr:
   502                           	opt stack 0
   503  000080                     start_i2c_slave_reply@msg:
   504                           	opt stack 0
   505  000080                     WriteTimer0@timer0:
   506                           	opt stack 0
   507  000080                     i2memcpy@d1:
   508                           	opt stack 0
   509  000080                     i2___awmod@dividend:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x0
   513  000080                     	ds	2
   514  000082                     ??_check_msg:
   515  000082                     ??_start_i2c_slave_reply:
   516  000082                     ?_in_low_int:
   517                           	opt stack 0
   518  000082                     WriteTimer0@timer:
   519                           	opt stack 0
   520  000082                     i2memcpy@s1:
   521                           	opt stack 0
   522  000082                     i2___awmod@divisor:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x2
   526  000082                     	ds	2
   527  000084                     start_i2c_slave_reply@length:
   528                           	opt stack 0
   529  000084                     i2___awmod@counter:
   530                           	opt stack 0
   531  000084                     i2memcpy@n:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x4
   535  000084                     	ds	1
   536  000085                     i2___awmod@sign:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x5
   540  000085                     	ds	1
   541  000086                     i2memcpy@d:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x6
   545  000086                     	ds	2
   546  000088                     i2memcpy@s:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x8
   550  000088                     	ds	2
   551  00008A                     i2send_msg@qptr:
   552                           	opt stack 0
   553  00008A                     i2recv_msg@qptr:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0xA
   557  00008A                     	ds	2
   558  00008C                     i2send_msg@length:
   559                           	opt stack 0
   560  00008C                     i2recv_msg@maxlength:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0xC
   564  00008C                     	ds	1
   565  00008D                     i2send_msg@msgtype:
   566                           	opt stack 0
   567  00008D                     i2recv_msg@msgtype:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0xD
   571  00008D                     	ds	1
   572  00008E                     i2send_msg@data:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0xE
   576  00008E                     	ds	1
   577  00008F                     i2recv_msg@data:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xF
   581  00008F                     	ds	1
   582  000090                     ??i2_send_msg:
   583                           
   584                           ; 0 bytes @ 0x10
   585  000090                     	ds	1
   586  000091                     ??i2_recv_msg:
   587  000091                     i2send_msg@tlength:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x11
   591  000091                     	ds	2
   592  000093                     i2send_msg@slot:
   593                           	opt stack 0
   594  000093                     i2recv_msg@slot:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x13
   598  000093                     	ds	1
   599  000094                     i2send_msg@qmsg:
   600                           	opt stack 0
   601  000094                     i2recv_msg@tlength:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x14
   605  000094                     	ds	2
   606  000096                     ToMainHigh_sendmsg@msgtype:
   607                           	opt stack 0
   608  000096                     i2recv_msg@qmsg:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x16
   612  000096                     	ds	1
   613  000097                     ToMainHigh_sendmsg@data:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x17
   617  000097                     	ds	1
   618  000098                     FromMainHigh_recvmsg@msgtype:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x18
   622  000098                     	ds	1
   623  000099                     ToMainHigh_sendmsg@length:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x19
   627  000099                     	ds	1
   628  00009A                     FromMainHigh_recvmsg@data:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x1A
   632  00009A                     	ds	2
   633  00009C                     FromMainHigh_recvmsg@maxlength:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x1C
   637  00009C                     	ds	1
   638  00009D                     ??_i2c_int_handler:
   639  00009D                     timer0_int_handler@length:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x1D
   643  00009D                     	ds	1
   644  00009E                     i2c_int_handler@length:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x1E
   648  00009E                     	ds	1
   649  00009F                     timer0_int_handler@msgtype:
   650                           	opt stack 0
   651  00009F                     i2c_int_handler@error_buf:
   652                           	opt stack 0
   653                           
   654                           ; 3 bytes @ 0x1F
   655  00009F                     	ds	2
   656  0000A1                     timer0_int_handler@val:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x21
   660  0000A1                     	ds	1
   661  0000A2                     i2c_int_handler@data_written:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x22
   665  0000A2                     	ds	1
   666  0000A3                     i2c_int_handler@overrun_error:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x23
   670  0000A3                     	ds	1
   671  0000A4                     i2c_int_handler@need_data:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x24
   675  0000A4                     	ds	1
   676  0000A5                     i2c_int_handler@i2c_data:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x25
   680  0000A5                     	ds	1
   681  0000A6                     i2c_int_handler@msg_to_send:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x26
   685  0000A6                     	ds	1
   686  0000A7                     i2c_int_handler@msg_type:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x27
   690  0000A7                     	ds	1
   691  0000A8                     i2c_int_handler@msg_ready:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x28
   695  0000A8                     	ds	1
   696  0000A9                     i2c_int_handler@data_read:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x29
   700  0000A9                     	ds	1
   701  0000AA                     ??_InterruptHandlerHigh:
   702                           
   703                           ; 0 bytes @ 0x2A
   704  0000AA                     	ds	14
   705  0000B8                     ?___awmod:
   706                           	opt stack 0
   707  0000B8                     ?___lwmod:
   708                           	opt stack 0
   709  0000B8                     i2c_configure_slave@addr:
   710                           	opt stack 0
   711  0000B8                     OpenTimer0@config:
   712                           	opt stack 0
   713  0000B8                     OpenTimer1@config:
   714                           	opt stack 0
   715  0000B8                     init_queue@qptr:
   716                           	opt stack 0
   717  0000B8                     init_i2c@ic:
   718                           	opt stack 0
   719  0000B8                     timer0_lthread@tptr:
   720                           	opt stack 0
   721  0000B8                     init_timer1_lthread@tptr:
   722                           	opt stack 0
   723  0000B8                     ___awmod@dividend:
   724                           	opt stack 0
   725  0000B8                     ___lwmod@dividend:
   726                           	opt stack 0
   727  0000B8                     memcpy@d1:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x38
   731  0000B8                     	ds	2
   732  0000BA                     init_queue@i:
   733                           	opt stack 0
   734  0000BA                     timer0_lthread@msgtype:
   735                           	opt stack 0
   736  0000BA                     ___awmod@divisor:
   737                           	opt stack 0
   738  0000BA                     ___lwmod@divisor:
   739                           	opt stack 0
   740  0000BA                     memcpy@s1:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x3A
   744  0000BA                     	ds	1
   745  0000BB                     
   746                           ; 0 bytes @ 0x3B
   747  0000BB                     	ds	1
   748  0000BC                     ___awmod@counter:
   749                           	opt stack 0
   750  0000BC                     ___lwmod@counter:
   751                           	opt stack 0
   752  0000BC                     timer0_lthread@length:
   753                           	opt stack 0
   754  0000BC                     memcpy@n:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x3C
   758  0000BC                     	ds	1
   759  0000BD                     ___awmod@sign:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x3D
   763  0000BD                     	ds	1
   764  0000BE                     timer0_lthread@msgbuffer:
   765                           	opt stack 0
   766  0000BE                     memcpy@d:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x3E
   770  0000BE                     	ds	2
   771  0000C0                     timer0_lthread@msgval:
   772                           	opt stack 0
   773  0000C0                     memcpy@s:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x40
   777  0000C0                     	ds	2
   778  0000C2                     ??_send_msg:
   779  0000C2                     ??_recv_msg:
   780                           
   781                           ; 0 bytes @ 0x42
   782  0000C2                     	ds	1
   783  0000C3                     FromMainLow_sendmsg@length:
   784                           	opt stack 0
   785  0000C3                     FromMainHigh_sendmsg@length:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x43
   789  0000C3                     	ds	1
   790  0000C4                     ToMainLow_recvmsg@maxlength:
   791                           	opt stack 0
   792  0000C4                     ToMainHigh_recvmsg@maxlength:
   793                           	opt stack 0
   794  0000C4                     send_uart_message@message_q_code:
   795                           	opt stack 0
   796  0000C4                     timer1_lthread@retval:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x44
   800  0000C4                     	ds	1
   801  0000C5                     tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           
   808                           ; 0 bytes @ 0x45
   809                           
   810                           	psect	cstackCOMRAM
   811  000001                     __pcstackCOMRAM:
   812                           	opt stack 0
   813  000001                     ?_ReadTimer1:
   814                           	opt stack 0
   815  000001                     ?i1___awmod:
   816                           	opt stack 0
   817  000001                     WriteTimer1@timer1:
   818                           	opt stack 0
   819  000001                     i1memcpy@d1:
   820                           	opt stack 0
   821  000001                     i1___awmod@dividend:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x0
   825  000001                     	ds	2
   826  000003                     ReadTimer1@timer:
   827                           	opt stack 0
   828  000003                     WriteTimer1@timer:
   829                           	opt stack 0
   830  000003                     i1memcpy@s1:
   831                           	opt stack 0
   832  000003                     i1___awmod@divisor:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x2
   836  000003                     	ds	2
   837  000005                     i1___awmod@counter:
   838                           	opt stack 0
   839  000005                     i1memcpy@n:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x4
   843  000005                     	ds	1
   844  000006                     i1___awmod@sign:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x5
   848  000006                     	ds	1
   849  000007                     i1memcpy@d:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x6
   853  000007                     	ds	2
   854  000009                     i1memcpy@s:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x8
   858  000009                     	ds	2
   859  00000B                     i1send_msg@qptr:
   860                           	opt stack 0
   861  00000B                     i1recv_msg@qptr:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0xA
   865  00000B                     	ds	2
   866  00000D                     i1send_msg@length:
   867                           	opt stack 0
   868  00000D                     i1recv_msg@maxlength:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0xC
   872  00000D                     	ds	1
   873  00000E                     i1send_msg@msgtype:
   874                           	opt stack 0
   875  00000E                     i1recv_msg@msgtype:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0xD
   879  00000E                     	ds	1
   880  00000F                     i1send_msg@data:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0xE
   884  00000F                     	ds	1
   885  000010                     i1recv_msg@data:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0xF
   889  000010                     	ds	1
   890  000011                     ??i1_send_msg:
   891                           
   892                           ; 0 bytes @ 0x10
   893  000011                     	ds	1
   894  000012                     ??i1_recv_msg:
   895  000012                     i1send_msg@tlength:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x11
   899  000012                     	ds	2
   900  000014                     i1send_msg@slot:
   901                           	opt stack 0
   902  000014                     i1recv_msg@slot:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x13
   906  000014                     	ds	1
   907  000015                     i1send_msg@qmsg:
   908                           	opt stack 0
   909  000015                     i1recv_msg@tlength:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x14
   913  000015                     	ds	2
   914  000017                     ToMainLow_sendmsg@msgtype:
   915                           	opt stack 0
   916  000017                     i1recv_msg@qmsg:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x16
   920  000017                     	ds	1
   921  000018                     ToMainLow_sendmsg@data:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x17
   925  000018                     	ds	1
   926  000019                     FromMainLow_recvmsg@msgtype:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x18
   930  000019                     	ds	1
   931  00001A                     ToMainLow_sendmsg@length:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x19
   935  00001A                     	ds	1
   936  00001B                     ??_uart_receive_interrupt_handler:
   937  00001B                     FromMainLow_recvmsg@data:
   938                           	opt stack 0
   939  00001B                     timer1_int_handler@result:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x1A
   943  00001B                     	ds	2
   944  00001D                     FromMainLow_recvmsg@maxlength:
   945                           	opt stack 0
   946  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   947                           	opt stack 0
   948                           
   949                           ; 14 bytes @ 0x1C
   950  00001D                     	ds	1
   951  00001E                     uart_transmit_interrupt_handler@data:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x1D
   955  00001E                     	ds	2
   956  000020                     uart_transmit_interrupt_handler@msgtype:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x1F
   960  000020                     	ds	1
   961  000021                     uart_transmit_interrupt_handler@message_status:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x20
   965  000021                     	ds	10
   966  00002B                     uart_receive_interrupt_handler@status:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x2A
   970  00002B                     	ds	1
   971  00002C                     uart_receive_interrupt_handler@status_1937:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x2B
   975  00002C                     	ds	1
   976  00002D                     uart_receive_interrupt_handler@bad_counter_id:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x2C
   980  00002D                     	ds	2
   981  00002F                     uart_receive_interrupt_handler@checksum:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x2E
   985  00002F                     	ds	1
   986  000030                     uart_receive_interrupt_handler@bad_start_id:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x2F
   990  000030                     	ds	1
   991  000031                     uart_receive_interrupt_handler@bad_end_id:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x30
   995  000031                     	ds	1
   996  000032                     uart_receive_interrupt_handler@bad_checksum_id:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x31
  1000  000032                     	ds	1
  1001  000033                     uart_receive_interrupt_handler@message_count:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x32
  1005  000033                     	ds	1
  1006  000034                     uart_receive_interrupt_handler@msg_id:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x33
  1010  000034                     	ds	1
  1011  000035                     uart_receive_interrupt_handler@i:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x34
  1015  000035                     	ds	2
  1016  000037                     ??_InterruptHandlerLow:
  1017                           
  1018                           ; 0 bytes @ 0x36
  1019  000037                     	ds	17
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 189 in file "../src/main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  uart_respons   14   55[BANK1 ] unsigned char [14]
  1037 ;;  jjj             2   69[BANK1 ] int 
  1038 ;;  motor_data     14   22[BANK1 ] unsigned char [14]
  1039 ;;  poop            1   71[BANK1 ] unsigned char 
  1040 ;;  ic             38   76[BANK1 ] struct __i2c_comm
  1041 ;;  msgbuffer      15   38[BANK1 ] unsigned char [15]
  1042 ;;  t1thread_dat    2   72[BANK1 ] struct __timer1_thread_s
  1043 ;;  t0thread_dat    2   53[BANK1 ] struct __timer0_thread_s
  1044 ;;  uthread_data    2    0        struct __uart_thread_str
  1045 ;;  msgtype         1   75[BANK1 ] unsigned char 
  1046 ;;  length          1   74[BANK1 ] char 
  1047 ;;  need_sensor_    1   37[BANK1 ] unsigned char 
  1048 ;;  last_reg_rec    1   36[BANK1 ] unsigned char 
  1049 ;;  i               1    0        unsigned char 
  1050 ;;  c               1    0        unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;		None               void
  1053 ;; Registers used:
  1054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0      92       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         0       0      92       0       0
  1064 ;;Total ram usage:       92 bytes
  1065 ;; Hardware stack levels required when called:   15
  1066 ;; This function calls:
  1067 ;;		_FromMainHigh_sendmsg
  1068 ;;		_OpenTimer0
  1069 ;;		_OpenTimer1
  1070 ;;		_ToMainHigh_recvmsg
  1071 ;;		_ToMainLow_recvmsg
  1072 ;;		_blip
  1073 ;;		_blip1
  1074 ;;		_blip2
  1075 ;;		_blip3
  1076 ;;		_debug_configure
  1077 ;;		_enable_interrupts
  1078 ;;		_i2c_configure_slave
  1079 ;;		_i_like_to_moveit_moveit
  1080 ;;		_init_i2c
  1081 ;;		_init_queues
  1082 ;;		_init_timer1_lthread
  1083 ;;		_send_uart_message
  1084 ;;		_timer0_lthread
  1085 ;;		_timer1_lthread
  1086 ;;		_uart_configure
  1087 ;; This function is called by:
  1088 ;;		Startup code after reset
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text0
  1093  0006E2                     __ptext0:
  1094                           	opt stack 0
  1095  0006E2                     _main:
  1096                           	opt stack 16
  1097                           
  1098                           ;main.c: 190: char c;
  1099                           ;main.c: 191: signed char length;
  1100                           ;main.c: 192: unsigned char msgtype;
  1101                           ;main.c: 193: unsigned char last_reg_recvd;
  1102                           ;main.c: 194: i2c_comm ic;
  1103                           ;main.c: 195: unsigned char msgbuffer[14 + 1];
  1104                           ;main.c: 196: unsigned char i;
  1105                           ;main.c: 197: uart_thread_struct uthread_data;
  1106                           ;main.c: 198: timer1_thread_struct t1thread_data;
  1107                           ;main.c: 199: timer0_thread_struct t0thread_data;
  1108                           ;main.c: 200: unsigned char need_sensor_data = 1;
  1109                           
  1110                           ;incstack = 0
  1111  0006E2  0E01               	movlw	1
  1112  0006E4  0101               	movlb	1	; () banked
  1113  0006E6  6F25               	movwf	main@need_sensor_data& (0+255),b
  1114                           
  1115                           ;main.c: 208: OSCCON = 0x82;
  1116  0006E8  0E82               	movlw	130
  1117  0006EA  6ED3               	movwf	4051,c	;volatile
  1118                           
  1119                           ; BSR set to: 1
  1120                           ;main.c: 209: OSCTUNEbits.PLLEN = 0;
  1121  0006EC  9C9B               	bcf	3995,6,c	;volatile
  1122                           
  1123                           ; BSR set to: 1
  1124                           ;main.c: 239: init_i2c(&ic);
  1125  0006EE  0101               	movlb	1	; () banked
  1126  0006F0  0E01               	movlw	high main@ic
  1127  0006F2  0100               	movlb	0	; () banked
  1128  0006F4  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
  1129  0006F6  0101               	movlb	1	; () banked
  1130  0006F8  0E4C               	movlw	low main@ic
  1131  0006FA  0100               	movlb	0	; () banked
  1132  0006FC  6FB8               	movwf	init_i2c@ic& (0+255),b
  1133  0006FE  EC89  F00B         	call	_init_i2c	;wreg free
  1134                           
  1135                           ;main.c: 242: init_timer1_lthread(&t1thread_data);
  1136  000702  0101               	movlb	1	; () banked
  1137  000704  0E01               	movlw	high main@t1thread_data
  1138  000706  0100               	movlb	0	; () banked
  1139  000708  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1140  00070A  0101               	movlb	1	; () banked
  1141  00070C  0E48               	movlw	low main@t1thread_data
  1142  00070E  0100               	movlb	0	; () banked
  1143  000710  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1144  000712  ECC6  F00E         	call	_init_timer1_lthread	;wreg free
  1145                           
  1146                           ;main.c: 245: init_queues();
  1147  000716  EC7F  F00C         	call	_init_queues	;wreg free
  1148                           
  1149                           ;main.c: 249: TRISB = 0x0;
  1150  00071A  0E00               	movlw	0
  1151  00071C  6E93               	movwf	3987,c	;volatile
  1152                           
  1153                           ;main.c: 250: LATB = 0x0;
  1154  00071E  0E00               	movlw	0
  1155  000720  6E8A               	movwf	3978,c	;volatile
  1156                           
  1157                           ;main.c: 263: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1158  000722  0E96               	movlw	150
  1159  000724  EC81  F00E         	call	_OpenTimer0
  1160                           
  1161                           ;main.c: 272: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1162  000728  0EF5               	movlw	245
  1163  00072A  ECCC  F00D         	call	_OpenTimer1
  1164                           
  1165                           ;main.c: 279: IPR1bits.TMR1IP = 0;
  1166  00072E  909F               	bcf	3999,0,c	;volatile
  1167                           
  1168                           ;main.c: 281: IPR1bits.RCIP = 0;
  1169  000730  9A9F               	bcf	3999,5,c	;volatile
  1170                           
  1171                           ;main.c: 284: IPR1bits.SSPIP = 1;
  1172  000732  869F               	bsf	3999,3,c	;volatile
  1173                           
  1174                           ;main.c: 293: i2c_configure_slave(0x9E);
  1175  000734  0E9E               	movlw	158
  1176  000736  EC59  F00E         	call	_i2c_configure_slave
  1177                           
  1178                           ;main.c: 308: PIE1bits.SSPIE = 1;
  1179  00073A  869D               	bsf	3997,3,c	;volatile
  1180                           
  1181                           ;main.c: 333: debug_configure();
  1182  00073C  ECF9  F00E         	call	_debug_configure	;wreg free
  1183                           
  1184                           ;main.c: 334: blip();
  1185  000740  EC0E  F00F         	call	_blip	;wreg free
  1186                           
  1187                           ;main.c: 335: blip1();
  1188  000744  EC0A  F00F         	call	_blip1	;wreg free
  1189                           
  1190                           ;main.c: 336: blip2();
  1191  000748  EC06  F00F         	call	_blip2	;wreg free
  1192                           
  1193                           ;main.c: 337: blip3();
  1194  00074C  EC02  F00F         	call	_blip3	;wreg free
  1195                           
  1196                           ;main.c: 346: enable_interrupts();
  1197  000750  ECFE  F00E         	call	_enable_interrupts	;wreg free
  1198                           
  1199                           ;main.c: 359: uart_configure();
  1200  000754  ECA6  F00E         	call	_uart_configure	;wreg free
  1201  000758                     l4196:
  1202                           
  1203                           ;main.c: 388: unsigned char motor_data[14];
  1204                           ;main.c: 391: unsigned char poop;
  1205                           ;main.c: 392: for(poop=0;poop<14;poop++)
  1206  000758  0E00               	movlw	0
  1207  00075A  0101               	movlb	1	; () banked
  1208  00075C  6F47               	movwf	main@poop& (0+255),b
  1209  00075E  D00F               	goto	L2
  1210  000760                     l4202:
  1211                           
  1212                           ; BSR set to: 1
  1213                           ;main.c: 393: {
  1214                           ;main.c: 394: motor_data[poop]=0x55;
  1215  000760  0101               	movlb	1	; () banked
  1216  000762  5147               	movf	main@poop& (0+255),w,b
  1217  000764  0D01               	mullw	1
  1218  000766  0101               	movlb	1	; () banked
  1219  000768  0E16               	movlw	low main@motor_data
  1220  00076A  24F3               	addwf	prodl,w,c
  1221  00076C  6ED9               	movwf	fsr2l,c
  1222  00076E  0101               	movlb	1	; () banked
  1223  000770  0E01               	movlw	high main@motor_data
  1224  000772  20F4               	addwfc	prodh,w,c
  1225  000774  6EDA               	movwf	fsr2h,c
  1226  000776  0E55               	movlw	85
  1227  000778  6EDF               	movwf	indf2,c
  1228                           
  1229                           ; BSR set to: 1
  1230  00077A  0101               	movlb	1	; () banked
  1231  00077C  2B47               	incf	main@poop& (0+255),f,b
  1232  00077E                     L2:
  1233                           
  1234                           ; BSR set to: 1
  1235  00077E  0E0D               	movlw	13
  1236  000780  0101               	movlb	1	; () banked
  1237  000782  6547               	cpfsgt	main@poop& (0+255),b
  1238  000784  D7ED               	goto	l4202
  1239                           
  1240                           ; BSR set to: 1
  1241                           ;main.c: 395: }
  1242                           ;main.c: 402: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1243                           
  1244                           ; BSR set to: 1
  1245  000786  0101               	movlb	1	; () banked
  1246  000788  0E01               	movlw	high main@msgtype
  1247  00078A  0101               	movlb	1	; () banked
  1248  00078C  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1249  00078E  0101               	movlb	1	; () banked
  1250  000790  0E4B               	movlw	low main@msgtype
  1251  000792  0101               	movlb	1	; () banked
  1252  000794  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1253  000796  0101               	movlb	1	; () banked
  1254  000798  0E01               	movlw	high main@msgbuffer
  1255  00079A  0101               	movlb	1	; () banked
  1256  00079C  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1257  00079E  0101               	movlb	1	; () banked
  1258  0007A0  0E26               	movlw	low main@msgbuffer
  1259  0007A2  0101               	movlb	1	; () banked
  1260  0007A4  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1261  0007A6  0E0E               	movlw	14
  1262  0007A8  EC7D  F00D         	call	_ToMainHigh_recvmsg
  1263  0007AC  0101               	movlb	1	; () banked
  1264  0007AE  6F4A               	movwf	main@length& (0+255),b
  1265                           
  1266                           ; BSR set to: 1
  1267                           ;main.c: 403: if (length < 0) {
  1268  0007B0  0101               	movlb	1	; () banked
  1269  0007B2  BF4A               	btfsc	main@length& (0+255),7,b
  1270  0007B4  D051               	goto	l4230
  1271  0007B6  D042               	goto	l4228
  1272  0007B8                     l4214:
  1273                           
  1274                           ; BSR set to: 1
  1275                           ;main.c: 413: {
  1276                           ;main.c: 414: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1277  0007B8  0101               	movlb	1	; () banked
  1278  0007BA  0E01               	movlw	high main@t0thread_data
  1279  0007BC  0100               	movlb	0	; () banked
  1280  0007BE  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1281  0007C0  0101               	movlb	1	; () banked
  1282  0007C2  0E35               	movlw	low main@t0thread_data
  1283  0007C4  0100               	movlb	0	; () banked
  1284  0007C6  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1285  0007C8  0101               	movlb	1	; () banked
  1286  0007CA  0100               	movlb	0	; () banked
  1287  0007CC  C14B  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1288  0007D0  0100               	movlb	0	; () banked
  1289  0007D2  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1290  0007D4  0101               	movlb	1	; () banked
  1291  0007D6  514A               	movf	main@length& (0+255),w,b
  1292  0007D8  0100               	movlb	0	; () banked
  1293  0007DA  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1294  0007DC  0100               	movlb	0	; () banked
  1295  0007DE  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1296  0007E0  0100               	movlb	0	; () banked
  1297  0007E2  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1298  0007E4  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1299  0007E6  0101               	movlb	1	; () banked
  1300  0007E8  0E01               	movlw	high main@msgbuffer
  1301  0007EA  0100               	movlb	0	; () banked
  1302  0007EC  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1303  0007EE  0101               	movlb	1	; () banked
  1304  0007F0  0E26               	movlw	low main@msgbuffer
  1305  0007F2  0100               	movlb	0	; () banked
  1306  0007F4  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1307  0007F6  ECF2  F00E         	call	_timer0_lthread	;wreg free
  1308                           
  1309                           ;main.c: 415: break;
  1310  0007FA  D02E               	goto	l4230
  1311  0007FC                     l4216:
  1312                           
  1313                           ;main.c: 422: {
  1314                           ;main.c: 423: i_like_to_moveit_moveit( msgbuffer[1] , msgbuffer[2] );
  1315  0007FC  C128  F110         	movff	main@msgbuffer+2,i_like_to_moveit_moveit@right_side_speed
  1316  000800  0101               	movlb	1	; () banked
  1317  000802  5127               	movf	(main@msgbuffer+1)& (0+255),w,b
  1318  000804  ECB3  F00D         	call	_i_like_to_moveit_moveit
  1319                           
  1320                           ;main.c: 424: blip();
  1321  000808  EC0E  F00F         	call	_blip	;wreg free
  1322                           
  1323                           ;main.c: 425: break;
  1324  00080C  D005               	goto	l123
  1325  00080E                     l4222:
  1326  00080E  0101               	movlb	1	; () banked
  1327  000810  5126               	movf	main@msgbuffer& (0+255),w,b
  1328                           
  1329                           ; Switch size 1, requested type "space"
  1330                           ; Number of cases is 1, Range of values is 1 to 1
  1331                           ; switch strategies available:
  1332                           ; Name         Instructions Cycles
  1333                           ; simple_byte            4     3 (average)
  1334                           ;	Chosen strategy is simple_byte
  1335  000812  0A01               	xorlw	1	; case 1
  1336  000814  B4D8               	btfsc	status,2,c
  1337  000816  D7F2               	goto	l4216
  1338  000818                     l123:
  1339                           
  1340                           ;main.c: 435: {
  1341                           ;main.c: 438: last_reg_recvd = msgbuffer[0];
  1342  000818  C126  F124         	movff	main@msgbuffer,main@last_reg_recvd
  1343                           
  1344                           ;main.c: 439: break;
  1345  00081C  D01D               	goto	l4230
  1346  00081E                     l4224:
  1347                           
  1348                           ;main.c: 442: {
  1349                           ;main.c: 443: FromMainHigh_sendmsg(14,40,(void *) motor_data);
  1350  00081E  0E28               	movlw	40
  1351  000820  0101               	movlb	1	; () banked
  1352  000822  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1353  000824  0101               	movlb	1	; () banked
  1354  000826  0E01               	movlw	high main@motor_data
  1355  000828  0101               	movlb	1	; () banked
  1356  00082A  6F0D               	movwf	(FromMainHigh_sendmsg@data+1)& (0+255),b
  1357  00082C  0101               	movlb	1	; () banked
  1358  00082E  0E16               	movlw	low main@motor_data
  1359  000830  0101               	movlb	1	; () banked
  1360  000832  6F0C               	movwf	FromMainHigh_sendmsg@data& (0+255),b
  1361  000834  0E0E               	movlw	14
  1362  000836  ECFE  F00D         	call	_FromMainHigh_sendmsg
  1363                           
  1364                           ;main.c: 445: break;
  1365  00083A  D00E               	goto	l4230
  1366  00083C                     l4228:
  1367  00083C  0101               	movlb	1	; () banked
  1368  00083E  514B               	movf	main@msgtype& (0+255),w,b
  1369                           
  1370                           ; Switch size 1, requested type "space"
  1371                           ; Number of cases is 4, Range of values is 10 to 42
  1372                           ; switch strategies available:
  1373                           ; Name         Instructions Cycles
  1374                           ; simple_byte           13     7 (average)
  1375                           ;	Chosen strategy is simple_byte
  1376  000840  0A0A               	xorlw	10	; case 10
  1377  000842  B4D8               	btfsc	status,2,c
  1378  000844  D7B9               	goto	l4214
  1379  000846  0A22               	xorlw	34	; case 40
  1380  000848  B4D8               	btfsc	status,2,c
  1381  00084A  D7E1               	goto	l4222
  1382  00084C  0A01               	xorlw	1	; case 41
  1383  00084E  B4D8               	btfsc	status,2,c
  1384  000850  D7E3               	goto	l123
  1385  000852  0A03               	xorlw	3	; case 42
  1386  000854  B4D8               	btfsc	status,2,c
  1387  000856  D7E3               	goto	l4224
  1388  000858                     l4230:
  1389                           
  1390                           ;main.c: 453: }
  1391                           ;main.c: 456: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1392  000858  0101               	movlb	1	; () banked
  1393  00085A  0E01               	movlw	high main@msgtype
  1394  00085C  0101               	movlb	1	; () banked
  1395  00085E  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1396  000860  0101               	movlb	1	; () banked
  1397  000862  0E4B               	movlw	low main@msgtype
  1398  000864  0101               	movlb	1	; () banked
  1399  000866  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1400  000868  0101               	movlb	1	; () banked
  1401  00086A  0E01               	movlw	high main@msgbuffer
  1402  00086C  0101               	movlb	1	; () banked
  1403  00086E  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1404  000870  0101               	movlb	1	; () banked
  1405  000872  0E26               	movlw	low main@msgbuffer
  1406  000874  0101               	movlb	1	; () banked
  1407  000876  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1408  000878  0E0E               	movlw	14
  1409  00087A  EC62  F00D         	call	_ToMainLow_recvmsg
  1410  00087E  0101               	movlb	1	; () banked
  1411  000880  6F4A               	movwf	main@length& (0+255),b
  1412                           
  1413                           ; BSR set to: 1
  1414                           ;main.c: 457: if (length < 0) {
  1415  000882  0101               	movlb	1	; () banked
  1416  000884  BF4A               	btfsc	main@length& (0+255),7,b
  1417  000886  D768               	goto	l4196
  1418                           
  1419                           ; BSR set to: 1
  1420                           ;main.c: 463: else
  1421                           ;main.c: 464: {
  1422                           ;main.c: 465: unsigned char uart_response[14];
  1423                           ;main.c: 466: int jjj;
  1424                           ;main.c: 467: for(jjj=0;jjj<14;jjj++)
  1425                           
  1426                           ; BSR set to: 1
  1427                           
  1428                           ; BSR set to: 1
  1429                           ;main.c: 461: }
  1430                           ;main.c: 462: }
  1431                           
  1432                           ; BSR set to: 1
  1433  000888  0E00               	movlw	0
  1434  00088A  0101               	movlb	1	; () banked
  1435  00088C  6F46               	movwf	(main@jjj+1)& (0+255),b
  1436  00088E  0E00               	movlw	0
  1437  000890  0101               	movlb	1	; () banked
  1438  000892  6F45               	movwf	main@jjj& (0+255),b
  1439  000894                     
  1440                           ; BSR set to: 1
  1441  000894  0101               	movlb	1	; () banked
  1442  000896  5146               	movf	(main@jjj+1)& (0+255),w,b
  1443  000898  0A80               	xorlw	128
  1444  00089A  0F80               	addlw	-128
  1445  00089C  0E0E               	movlw	14
  1446  00089E  B4D8               	btfsc	status,2,c
  1447  0008A0  5D45               	subwf	main@jjj& (0+255),w,b
  1448  0008A2  B0D8               	btfsc	status,0,c
  1449  0008A4  D083               	goto	l4286
  1450                           
  1451                           ; BSR set to: 1
  1452                           ;main.c: 468: {
  1453                           ;main.c: 469: uart_response[jjj] = 0;
  1454                           
  1455                           ; BSR set to: 1
  1456                           
  1457                           ; BSR set to: 1
  1458  0008A6  0101               	movlb	1	; () banked
  1459  0008A8  0E37               	movlw	low main@uart_response
  1460  0008AA  0101               	movlb	1	; () banked
  1461  0008AC  2545               	addwf	main@jjj& (0+255),w,b
  1462  0008AE  6ED9               	movwf	fsr2l,c
  1463  0008B0  0101               	movlb	1	; () banked
  1464  0008B2  0E01               	movlw	high main@uart_response
  1465  0008B4  0101               	movlb	1	; () banked
  1466  0008B6  2146               	addwfc	(main@jjj+1)& (0+255),w,b
  1467  0008B8  6EDA               	movwf	fsr2h,c
  1468  0008BA  0E00               	movlw	0
  1469  0008BC  6EDF               	movwf	indf2,c
  1470                           
  1471                           ; BSR set to: 1
  1472  0008BE  0101               	movlb	1	; () banked
  1473  0008C0  4B45               	infsnz	main@jjj& (0+255),f,b
  1474  0008C2  2B46               	incf	(main@jjj+1)& (0+255),f,b
  1475  0008C4  D7E7               	goto	L1
  1476  0008C6                     l4248:
  1477                           
  1478                           ; BSR set to: 1
  1479                           ;main.c: 474: {
  1480                           ;main.c: 475: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1481  0008C6  0101               	movlb	1	; () banked
  1482  0008C8  0E01               	movlw	high main@t1thread_data
  1483  0008CA  0101               	movlb	1	; () banked
  1484  0008CC  6F0F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1485  0008CE  0101               	movlb	1	; () banked
  1486  0008D0  0E48               	movlw	low main@t1thread_data
  1487  0008D2  0101               	movlb	1	; () banked
  1488  0008D4  6F0E               	movwf	timer1_lthread@tptr& (0+255),b
  1489  0008D6  0101               	movlb	1	; () banked
  1490  0008D8  C14B  F110         	movff	main@msgtype,timer1_lthread@msgtype
  1491  0008DC  0101               	movlb	1	; () banked
  1492  0008DE  6B11               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1493  0008E0  0101               	movlb	1	; () banked
  1494  0008E2  514A               	movf	main@length& (0+255),w,b
  1495  0008E4  0101               	movlb	1	; () banked
  1496  0008E6  6F12               	movwf	timer1_lthread@length& (0+255),b
  1497  0008E8  0101               	movlb	1	; () banked
  1498  0008EA  6B13               	clrf	(timer1_lthread@length+1)& (0+255),b
  1499  0008EC  0101               	movlb	1	; () banked
  1500  0008EE  BF12               	btfsc	timer1_lthread@length& (0+255),7,b
  1501  0008F0  0713               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1502  0008F2  0101               	movlb	1	; () banked
  1503  0008F4  0E01               	movlw	high main@msgbuffer
  1504  0008F6  0101               	movlb	1	; () banked
  1505  0008F8  6F15               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1506  0008FA  0101               	movlb	1	; () banked
  1507  0008FC  0E26               	movlw	low main@msgbuffer
  1508  0008FE  0101               	movlb	1	; () banked
  1509  000900  6F14               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1510  000902  ECEE  F00B         	call	_timer1_lthread	;wreg free
  1511                           
  1512                           ;main.c: 476: break;
  1513  000906  D728               	goto	l4196
  1514  000908                     l4250:
  1515                           
  1516                           ;main.c: 481: {
  1517                           ;main.c: 482: uart_response[0] = 0xf1;
  1518  000908  0EF1               	movlw	241
  1519  00090A  0101               	movlb	1	; () banked
  1520  00090C  6F37               	movwf	main@uart_response& (0+255),b
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;main.c: 483: uart_response[1] = msgbuffer[0];
  1524  00090E  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1525                           
  1526                           ; BSR set to: 1
  1527                           ;main.c: 484: send_uart_message( uart_response );
  1528  000912  0101               	movlb	1	; () banked
  1529  000914  0E01               	movlw	high main@uart_response
  1530  000916  0101               	movlb	1	; () banked
  1531  000918  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1532  00091A  0101               	movlb	1	; () banked
  1533  00091C  0E37               	movlw	low main@uart_response
  1534  00091E  0101               	movlb	1	; () banked
  1535  000920  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1536  000922  ECB6  F00E         	call	_send_uart_message	;wreg free
  1537                           
  1538                           ;main.c: 485: break;
  1539  000926  D718               	goto	l4196
  1540  000928                     l4256:
  1541                           
  1542                           ;main.c: 488: {
  1543                           ;main.c: 489: uart_response[0] = 0xf2;
  1544  000928  0EF2               	movlw	242
  1545  00092A  0101               	movlb	1	; () banked
  1546  00092C  6F37               	movwf	main@uart_response& (0+255),b
  1547                           
  1548                           ; BSR set to: 1
  1549                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1550  00092E  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1551                           
  1552                           ; BSR set to: 1
  1553                           ;main.c: 491: uart_response[2] = msgbuffer[1];
  1554  000932  C127  F139         	movff	main@msgbuffer+1,main@uart_response+2
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;main.c: 492: send_uart_message( uart_response );
  1558  000936  0101               	movlb	1	; () banked
  1559  000938  0E01               	movlw	high main@uart_response
  1560  00093A  0101               	movlb	1	; () banked
  1561  00093C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1562  00093E  0101               	movlb	1	; () banked
  1563  000940  0E37               	movlw	low main@uart_response
  1564  000942  0101               	movlb	1	; () banked
  1565  000944  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1566  000946  ECB6  F00E         	call	_send_uart_message	;wreg free
  1567                           
  1568                           ;main.c: 493: break;
  1569  00094A  D706               	goto	l4196
  1570  00094C                     l4264:
  1571                           
  1572                           ;main.c: 496: {
  1573                           ;main.c: 497: uart_response[0] = 0xf3;
  1574  00094C  0EF3               	movlw	243
  1575  00094E  0101               	movlb	1	; () banked
  1576  000950  6F37               	movwf	main@uart_response& (0+255),b
  1577                           
  1578                           ; BSR set to: 1
  1579                           ;main.c: 498: uart_response[1] = msgbuffer[0];
  1580  000952  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;main.c: 499: send_uart_message( uart_response );
  1584  000956  0101               	movlb	1	; () banked
  1585  000958  0E01               	movlw	high main@uart_response
  1586  00095A  0101               	movlb	1	; () banked
  1587  00095C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1588  00095E  0101               	movlb	1	; () banked
  1589  000960  0E37               	movlw	low main@uart_response
  1590  000962  0101               	movlb	1	; () banked
  1591  000964  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1592  000966  ECB6  F00E         	call	_send_uart_message	;wreg free
  1593                           
  1594                           ;main.c: 500: break;
  1595  00096A  D6F6               	goto	l4196
  1596  00096C                     l4270:
  1597                           
  1598                           ;main.c: 503: {
  1599                           ;main.c: 504: uart_response[0] = 0xf4;
  1600  00096C  0EF4               	movlw	244
  1601  00096E  0101               	movlb	1	; () banked
  1602  000970  6F37               	movwf	main@uart_response& (0+255),b
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;main.c: 505: uart_response[1] = msgbuffer[0];
  1606  000972  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;main.c: 506: send_uart_message( uart_response );
  1610  000976  0101               	movlb	1	; () banked
  1611  000978  0E01               	movlw	high main@uart_response
  1612  00097A  0101               	movlb	1	; () banked
  1613  00097C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1614  00097E  0101               	movlb	1	; () banked
  1615  000980  0E37               	movlw	low main@uart_response
  1616  000982  0101               	movlb	1	; () banked
  1617  000984  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1618  000986  ECB6  F00E         	call	_send_uart_message	;wreg free
  1619                           
  1620                           ;main.c: 507: break;
  1621  00098A  D6E6               	goto	l4196
  1622  00098C                     l4276:
  1623                           
  1624                           ;main.c: 511: {
  1625                           ;main.c: 512: uart_response[0] = 0x11;
  1626  00098C  0E11               	movlw	17
  1627  00098E  0101               	movlb	1	; () banked
  1628  000990  6F37               	movwf	main@uart_response& (0+255),b
  1629                           
  1630                           ; BSR set to: 1
  1631                           ;main.c: 513: uart_response[1] = msgbuffer[0];
  1632  000992  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1633                           
  1634                           ; BSR set to: 1
  1635                           ;main.c: 514: send_uart_message( uart_response );
  1636  000996  0101               	movlb	1	; () banked
  1637  000998  0E01               	movlw	high main@uart_response
  1638  00099A  0101               	movlb	1	; () banked
  1639  00099C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1640  00099E  0101               	movlb	1	; () banked
  1641  0009A0  0E37               	movlw	low main@uart_response
  1642  0009A2  0101               	movlb	1	; () banked
  1643  0009A4  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1644  0009A6  ECB6  F00E         	call	_send_uart_message	;wreg free
  1645                           
  1646                           ;main.c: 515: break;
  1647  0009AA  D6D6               	goto	l4196
  1648  0009AC                     l4286:
  1649  0009AC  0101               	movlb	1	; () banked
  1650  0009AE  514B               	movf	main@msgtype& (0+255),w,b
  1651                           
  1652                           ; Switch size 1, requested type "space"
  1653                           ; Number of cases is 8, Range of values is 11 to 36
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte           25    13 (average)
  1657                           ;	Chosen strategy is simple_byte
  1658  0009B0  0A0B               	xorlw	11	; case 11
  1659  0009B2  B4D8               	btfsc	status,2,c
  1660  0009B4  D788               	goto	l4248
  1661  0009B6  0A15               	xorlw	21	; case 30
  1662  0009B8  B4D8               	btfsc	status,2,c
  1663  0009BA  D7A6               	goto	l4250
  1664  0009BC  0A01               	xorlw	1	; case 31
  1665  0009BE  B4D8               	btfsc	status,2,c
  1666  0009C0  D6CB               	goto	l4196
  1667  0009C2  0A3F               	xorlw	63	; case 32
  1668  0009C4  B4D8               	btfsc	status,2,c
  1669  0009C6  D7A0               	goto	l4250
  1670  0009C8  0A01               	xorlw	1	; case 33
  1671  0009CA  B4D8               	btfsc	status,2,c
  1672  0009CC  D7AD               	goto	l4256
  1673  0009CE  0A03               	xorlw	3	; case 34
  1674  0009D0  B4D8               	btfsc	status,2,c
  1675  0009D2  D7BC               	goto	l4264
  1676  0009D4  0A01               	xorlw	1	; case 35
  1677  0009D6  B4D8               	btfsc	status,2,c
  1678  0009D8  D7C9               	goto	l4270
  1679  0009DA  0A07               	xorlw	7	; case 36
  1680  0009DC  B4D8               	btfsc	status,2,c
  1681  0009DE  D7D6               	goto	l4276
  1682  0009E0  D6BB               	goto	l4196
  1683  0009E2                     __end_of_main:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           prodh	equ	0xFF4
  1690                           prodl	equ	0xFF3
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           indf2	equ	0xFDF
  1694                           fsr2h	equ	0xFDA
  1695                           fsr2l	equ	0xFD9
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _uart_configure *****************
  1699 ;; Defined at:
  1700 ;;		line 22 in file "../src/my_uart.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;		None               void
  1707 ;; Registers used:
  1708 ;;		wreg, status,2
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1714 ;;      Params:         0       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:   10
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text1
  1729  001D4C                     __ptext1:
  1730                           	opt stack 0
  1731  001D4C                     _uart_configure:
  1732                           	opt stack 20
  1733                           
  1734                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;incstack = 0
  1738  001D4C  8E94               	bsf	3988,7,c	;volatile
  1739                           
  1740                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1741  001D4E  9C94               	bcf	3988,6,c	;volatile
  1742                           
  1743                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1744  001D50  86B8               	bsf	4024,3,c	;volatile
  1745                           
  1746                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1747  001D52  84AC               	bsf	4012,2,c	;volatile
  1748                           
  1749                           ;my_uart.c: 36: SPBRGH = 0x01;
  1750  001D54  0E01               	movlw	1
  1751  001D56  6EB0               	movwf	4016,c	;volatile
  1752                           
  1753                           ;my_uart.c: 37: SPBRG = 0x38;
  1754  001D58  0E38               	movlw	56
  1755  001D5A  6EAF               	movwf	4015,c	;volatile
  1756                           
  1757                           ;my_uart.c: 41: TXSTA1bits.SYNC = 0;
  1758  001D5C  98AC               	bcf	4012,4,c	;volatile
  1759                           
  1760                           ;my_uart.c: 42: RCSTA1bits.SPEN = 1;
  1761  001D5E  8EAB               	bsf	4011,7,c	;volatile
  1762                           
  1763                           ;my_uart.c: 45: IPR1bits.TX1IP = 0;
  1764  001D60  989F               	bcf	3999,4,c	;volatile
  1765                           
  1766                           ;my_uart.c: 47: PIE1bits.TX1IE = 0;
  1767  001D62  989D               	bcf	3997,4,c	;volatile
  1768                           
  1769                           ;my_uart.c: 48: PIE1bits.RC1IE = 1;
  1770  001D64  8A9D               	bsf	3997,5,c	;volatile
  1771                           
  1772                           ;my_uart.c: 50: TXSTA1bits.TXEN = 1;
  1773  001D66  8AAC               	bsf	4012,5,c	;volatile
  1774                           
  1775                           ;my_uart.c: 51: RCSTA1bits.CREN = 1;
  1776  001D68  88AB               	bsf	4011,4,c	;volatile
  1777  001D6A  0012               	return	
  1778  001D6C                     __end_of_uart_configure:
  1779                           	opt stack 0
  1780                           tblptru	equ	0xFF8
  1781                           tblptrh	equ	0xFF7
  1782                           tblptrl	equ	0xFF6
  1783                           tablat	equ	0xFF5
  1784                           prodh	equ	0xFF4
  1785                           prodl	equ	0xFF3
  1786                           postinc0	equ	0xFEE
  1787                           wreg	equ	0xFE8
  1788                           indf2	equ	0xFDF
  1789                           fsr2h	equ	0xFDA
  1790                           fsr2l	equ	0xFD9
  1791                           status	equ	0xFD8
  1792                           
  1793 ;; *************** function _timer1_lthread *****************
  1794 ;; Defined at:
  1795 ;;		line 15 in file "../src/timer1_thread.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1798 ;;		 -> main@t1thread_data(2), 
  1799 ;;  msgtype         2   16[BANK1 ] int 
  1800 ;;  length          2   18[BANK1 ] int 
  1801 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1802 ;;		 -> main@msgbuffer(15), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  retval          1   68[BANK0 ] char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2   14[BANK1 ] int 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1814 ;;      Params:         0       0       8       0       0
  1815 ;;      Locals:         0       1       0       0       0
  1816 ;;      Temps:          0       0       0       0       0
  1817 ;;      Totals:         0       1       8       0       0
  1818 ;;Total ram usage:        9 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:   13
  1821 ;; This function calls:
  1822 ;;		_FromMainHigh_sendmsg
  1823 ;;		___lwmod
  1824 ;;		_blink0
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text2
  1831  0017DC                     __ptext2:
  1832                           	opt stack 0
  1833  0017DC                     _timer1_lthread:
  1834                           	opt stack 17
  1835                           
  1836                           ;timer1_thread.c: 16: signed char retval;
  1837                           ;timer1_thread.c: 18: blink0();
  1838                           
  1839                           ;incstack = 0
  1840  0017DC  EC21  F00F         	call	_blink0	;wreg free
  1841                           
  1842                           ;timer1_thread.c: 20: tptr->msgcount++;
  1843  0017E0  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1844  0017E4  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1845  0017E8  2ADE               	incf	postinc2,f,c
  1846  0017EA  0E00               	movlw	0
  1847  0017EC  22DD               	addwfc	postdec2,f,c
  1848                           
  1849                           ;timer1_thread.c: 23: if ((tptr->msgcount % 10) == 9) {
  1850  0017EE  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1851  0017F2  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1852  0017F6  0100               	movlb	0	; () banked
  1853  0017F8  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1854  0017FC  0100               	movlb	0	; () banked
  1855  0017FE  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1856  001802  0E00               	movlw	0
  1857  001804  0100               	movlb	0	; () banked
  1858  001806  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1859  001808  0E0A               	movlw	10
  1860  00180A  0100               	movlb	0	; () banked
  1861  00180C  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1862  00180E  EC1F  F00C         	call	___lwmod	;wreg free
  1863  001812  0100               	movlb	0	; () banked
  1864  001814  51B8               	movf	?___lwmod& (0+255),w,b
  1865  001816  0A09               	xorlw	9
  1866  001818  0100               	movlb	0	; () banked
  1867  00181A  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1868  00181C  A4D8               	btfss	status,2,c
  1869  00181E  0012               	return	
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;timer1_thread.c: 24: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1873  001820  0E14               	movlw	20
  1874  001822  0101               	movlb	1	; () banked
  1875  001824  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1876  001826  0101               	movlb	1	; () banked
  1877  001828  C10F  F10D         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1878  00182C  0101               	movlb	1	; () banked
  1879  00182E  C10E  F10C         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1880  001832  0E02               	movlw	2
  1881  001834  ECFE  F00D         	call	_FromMainHigh_sendmsg
  1882  001838  0100               	movlb	0	; () banked
  1883  00183A  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1884  00183C  0012               	return	
  1885  00183E                     __end_of_timer1_lthread:
  1886                           	opt stack 0
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           prodh	equ	0xFF4
  1892                           prodl	equ	0xFF3
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           indf2	equ	0xFDF
  1896                           postinc2	equ	0xFDE
  1897                           postdec2	equ	0xFDD
  1898                           fsr2h	equ	0xFDA
  1899                           fsr2l	equ	0xFD9
  1900                           status	equ	0xFD8
  1901                           
  1902 ;; *************** function _blink0 *****************
  1903 ;; Defined at:
  1904 ;;		line 46 in file "../src/debug.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;		None               void
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1918 ;;      Params:         0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0
  1921 ;;      Totals:         0       0       0       0       0
  1922 ;;Total ram usage:        0 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:   10
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_timer1_lthread
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text3
  1933  001E42                     __ptext3:
  1934                           	opt stack 0
  1935  001E42                     _blink0:
  1936                           	opt stack 19
  1937                           
  1938                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;incstack = 0
  1942  001E42  708A               	btg	3978,0,c	;volatile
  1943  001E44  0012               	return	
  1944  001E46                     __end_of_blink0:
  1945                           	opt stack 0
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           prodh	equ	0xFF4
  1951                           prodl	equ	0xFF3
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           indf2	equ	0xFDF
  1955                           postinc2	equ	0xFDE
  1956                           postdec2	equ	0xFDD
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function ___lwmod *****************
  1962 ;; Defined at:
  1963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  dividend        2   56[BANK0 ] unsigned int 
  1966 ;;  divisor         2   58[BANK0 ] unsigned int 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  counter         1   60[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2   56[BANK0 ] unsigned int 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1978 ;;      Params:         0       4       0       0       0
  1979 ;;      Locals:         0       1       0       0       0
  1980 ;;      Temps:          0       0       0       0       0
  1981 ;;      Totals:         0       5       0       0       0
  1982 ;;Total ram usage:        5 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:   10
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_timer1_lthread
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text4
  1993  00183E                     __ptext4:
  1994                           	opt stack 0
  1995  00183E                     ___lwmod:
  1996                           	opt stack 19
  1997                           
  1998                           ;incstack = 0
  1999  00183E  0100               	movlb	0	; () banked
  2000  001840  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2001  001842  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  2002  001844  B4D8               	btfsc	status,2,c
  2003  001846  D026               	goto	l1119
  2004                           
  2005                           ; BSR set to: 0
  2006  001848  0E01               	movlw	1
  2007  00184A  0100               	movlb	0	; () banked
  2008  00184C  6FBC               	movwf	___lwmod@counter& (0+255),b
  2009  00184E  D006               	goto	l3746
  2010  001850                     l3744:
  2011                           
  2012                           ; BSR set to: 0
  2013  001850  0100               	movlb	0	; () banked
  2014  001852  90D8               	bcf	status,0,c
  2015  001854  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  2016  001856  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2017  001858  0100               	movlb	0	; () banked
  2018  00185A  2BBC               	incf	___lwmod@counter& (0+255),f,b
  2019  00185C                     l3746:
  2020                           
  2021                           ; BSR set to: 0
  2022  00185C  0100               	movlb	0	; () banked
  2023  00185E  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2024  001860  D7F7               	goto	l3744
  2025  001862                     l3748:
  2026                           
  2027                           ; BSR set to: 0
  2028  001862  0100               	movlb	0	; () banked
  2029  001864  51BA               	movf	___lwmod@divisor& (0+255),w,b
  2030  001866  0100               	movlb	0	; () banked
  2031  001868  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  2032  00186A  0100               	movlb	0	; () banked
  2033  00186C  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2034  00186E  0100               	movlb	0	; () banked
  2035  001870  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2036  001872  A0D8               	btfss	status,0,c
  2037  001874  D008               	goto	l3752
  2038                           
  2039                           ; BSR set to: 0
  2040  001876  0100               	movlb	0	; () banked
  2041  001878  51BA               	movf	___lwmod@divisor& (0+255),w,b
  2042  00187A  0100               	movlb	0	; () banked
  2043  00187C  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  2044  00187E  0100               	movlb	0	; () banked
  2045  001880  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2046  001882  0100               	movlb	0	; () banked
  2047  001884  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2048  001886                     l3752:
  2049                           
  2050                           ; BSR set to: 0
  2051  001886  0100               	movlb	0	; () banked
  2052  001888  90D8               	bcf	status,0,c
  2053  00188A  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2054  00188C  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  2055                           
  2056                           ; BSR set to: 0
  2057  00188E  0100               	movlb	0	; () banked
  2058  001890  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  2059  001892  D7E7               	goto	l3748
  2060  001894                     l1119:
  2061                           
  2062                           ; BSR set to: 0
  2063  001894  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  2064  001898  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  2065                           
  2066                           ; BSR set to: 0
  2067  00189C  0012               	return	
  2068  00189E                     __end_of___lwmod:
  2069                           	opt stack 0
  2070                           tblptru	equ	0xFF8
  2071                           tblptrh	equ	0xFF7
  2072                           tblptrl	equ	0xFF6
  2073                           tablat	equ	0xFF5
  2074                           prodh	equ	0xFF4
  2075                           prodl	equ	0xFF3
  2076                           postinc0	equ	0xFEE
  2077                           wreg	equ	0xFE8
  2078                           indf2	equ	0xFDF
  2079                           postinc2	equ	0xFDE
  2080                           postdec2	equ	0xFDD
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _FromMainHigh_sendmsg *****************
  2086 ;; Defined at:
  2087 ;;		line 174 in file "../src/messages.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  length          1    wreg     unsigned char 
  2090 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2091 ;;  data            2   12[BANK1 ] PTR void 
  2092 ;;		 -> main@motor_data(14), main@t1thread_data(2), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  length          1   67[BANK0 ] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      char 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2104 ;;      Params:         0       0       3       0       0
  2105 ;;      Locals:         0       1       0       0       0
  2106 ;;      Temps:          0       0       0       0       0
  2107 ;;      Totals:         0       1       3       0       0
  2108 ;;Total ram usage:        4 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:   12
  2111 ;; This function calls:
  2112 ;;		_send_msg
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;;		_timer1_lthread
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text5
  2120  001BFC                     __ptext5:
  2121                           	opt stack 0
  2122  001BFC                     _FromMainHigh_sendmsg:
  2123                           	opt stack 17
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;incstack = 0
  2127                           ;FromMainHigh_sendmsg@length stored from wreg
  2128  001BFC  0100               	movlb	0	; () banked
  2129  001BFE  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2133  001C00  0103               	movlb	3	; () banked
  2134  001C02  0E03               	movlw	high _FromMainHigh_MQ
  2135  001C04  0101               	movlb	1	; () banked
  2136  001C06  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2137  001C08  0103               	movlb	3	; () banked
  2138  001C0A  0E00               	movlw	low _FromMainHigh_MQ
  2139  001C0C  0101               	movlb	1	; () banked
  2140  001C0E  6F00               	movwf	send_msg@qptr& (0+255),b
  2141  001C10  C0C3  F102         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2142  001C14  C10B  F103         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2143  001C18  0101               	movlb	1	; () banked
  2144  001C1A  C10D  F105         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2145  001C1E  0101               	movlb	1	; () banked
  2146  001C20  C10C  F104         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2147  001C24  ECF6  F006         	call	_send_msg	;wreg free
  2148  001C28  0012               	return	
  2149  001C2A                     __end_of_FromMainHigh_sendmsg:
  2150                           	opt stack 0
  2151                           tblptru	equ	0xFF8
  2152                           tblptrh	equ	0xFF7
  2153                           tblptrl	equ	0xFF6
  2154                           tablat	equ	0xFF5
  2155                           prodh	equ	0xFF4
  2156                           prodl	equ	0xFF3
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           indf2	equ	0xFDF
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _timer0_lthread *****************
  2167 ;; Defined at:
  2168 ;;		line 9 in file "../src/timer0_thread.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2171 ;;		 -> main@t0thread_data(2), 
  2172 ;;  msgtype         2   58[BANK0 ] int 
  2173 ;;  length          2   60[BANK0 ] int 
  2174 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2175 ;;		 -> main@msgbuffer(15), 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  2178 ;;		 -> main@msgbuffer(15), 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2   56[BANK0 ] int 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2188 ;;      Params:         0       8       0       0       0
  2189 ;;      Locals:         0       2       0       0       0
  2190 ;;      Temps:          0       0       0       0       0
  2191 ;;      Totals:         0      10       0       0       0
  2192 ;;Total ram usage:       10 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:   10
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text6
  2203  001DE4                     __ptext6:
  2204                           	opt stack 0
  2205  001DE4                     _timer0_lthread:
  2206                           	opt stack 20
  2207                           
  2208                           ;timer0_thread.c: 10: unsigned int *msgval;
  2209                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2210                           
  2211                           ;incstack = 0
  2212  001DE4  0100               	movlb	0	; () banked
  2213  001DE6  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2214  001DEA  0100               	movlb	0	; () banked
  2215  001DEC  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2216                           
  2217                           ; BSR set to: 0
  2218  001DF0  0012               	return	
  2219  001DF2                     __end_of_timer0_lthread:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           indf2	equ	0xFDF
  2230                           postinc2	equ	0xFDE
  2231                           postdec2	equ	0xFDD
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _init_timer1_lthread *****************
  2237 ;; Defined at:
  2238 ;;		line 7 in file "../src/timer1_thread.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2241 ;;		 -> main@t1thread_data(2), 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;		None               void
  2246 ;; Registers used:
  2247 ;;		wreg, fsr2l, fsr2h
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2253 ;;      Params:         0       2       0       0       0
  2254 ;;      Locals:         0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0
  2256 ;;      Totals:         0       2       0       0       0
  2257 ;;Total ram usage:        2 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:   10
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text7
  2268  001D8C                     __ptext7:
  2269                           	opt stack 0
  2270  001D8C                     _init_timer1_lthread:
  2271                           	opt stack 20
  2272                           
  2273                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;incstack = 0
  2277  001D8C  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2278  001D90  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2279  001D94  0E00               	movlw	0
  2280  001D96  6EDE               	movwf	postinc2,c
  2281  001D98  0E00               	movlw	0
  2282  001D9A  6EDD               	movwf	postdec2,c
  2283  001D9C  0012               	return	
  2284  001D9E                     __end_of_init_timer1_lthread:
  2285                           	opt stack 0
  2286                           tblptru	equ	0xFF8
  2287                           tblptrh	equ	0xFF7
  2288                           tblptrl	equ	0xFF6
  2289                           tablat	equ	0xFF5
  2290                           prodh	equ	0xFF4
  2291                           prodl	equ	0xFF3
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           indf2	equ	0xFDF
  2295                           postinc2	equ	0xFDE
  2296                           postdec2	equ	0xFDD
  2297                           fsr2h	equ	0xFDA
  2298                           fsr2l	equ	0xFD9
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function _init_queues *****************
  2302 ;; Defined at:
  2303 ;;		line 194 in file "../src/messages.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;		None               void
  2310 ;; Registers used:
  2311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2317 ;;      Params:         0       0       0       0       0
  2318 ;;      Locals:         0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0
  2320 ;;      Totals:         0       0       0       0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:   11
  2324 ;; This function calls:
  2325 ;;		_init_queue
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text8
  2332  0018FE                     __ptext8:
  2333                           	opt stack 0
  2334  0018FE                     _init_queues:
  2335                           	opt stack 19
  2336                           
  2337                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2338                           
  2339                           ;incstack = 0
  2340  0018FE  0E00               	movlw	0
  2341  001900  0100               	movlb	0	; () banked
  2342  001902  6FC7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2346  001904  0101               	movlb	1	; () banked
  2347  001906  0E01               	movlw	high _ToMainLow_MQ
  2348  001908  0100               	movlb	0	; () banked
  2349  00190A  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2350  00190C  0101               	movlb	1	; () banked
  2351  00190E  0E72               	movlw	low _ToMainLow_MQ
  2352  001910  0100               	movlb	0	; () banked
  2353  001912  6FB8               	movwf	init_queue@qptr& (0+255),b
  2354  001914  ECBC  F00B         	call	_init_queue	;wreg free
  2355                           
  2356                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2357  001918  0102               	movlb	2	; () banked
  2358  00191A  0E02               	movlw	high _ToMainHigh_MQ
  2359  00191C  0100               	movlb	0	; () banked
  2360  00191E  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2361  001920  0102               	movlb	2	; () banked
  2362  001922  0E57               	movlw	low _ToMainHigh_MQ
  2363  001924  0100               	movlb	0	; () banked
  2364  001926  6FB8               	movwf	init_queue@qptr& (0+255),b
  2365  001928  ECBC  F00B         	call	_init_queue	;wreg free
  2366                           
  2367                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2368  00192C  0102               	movlb	2	; () banked
  2369  00192E  0E02               	movlw	high _FromMainLow_MQ
  2370  001930  0100               	movlb	0	; () banked
  2371  001932  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2372  001934  0102               	movlb	2	; () banked
  2373  001936  0E00               	movlw	low _FromMainLow_MQ
  2374  001938  0100               	movlb	0	; () banked
  2375  00193A  6FB8               	movwf	init_queue@qptr& (0+255),b
  2376  00193C  ECBC  F00B         	call	_init_queue	;wreg free
  2377                           
  2378                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2379  001940  0103               	movlb	3	; () banked
  2380  001942  0E03               	movlw	high _FromMainHigh_MQ
  2381  001944  0100               	movlb	0	; () banked
  2382  001946  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2383  001948  0103               	movlb	3	; () banked
  2384  00194A  0E00               	movlw	low _FromMainHigh_MQ
  2385  00194C  0100               	movlb	0	; () banked
  2386  00194E  6FB8               	movwf	init_queue@qptr& (0+255),b
  2387  001950  ECBC  F00B         	call	_init_queue	;wreg free
  2388  001954  0012               	return	
  2389  001956                     __end_of_init_queues:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           postinc0	equ	0xFEE
  2398                           wreg	equ	0xFE8
  2399                           indf2	equ	0xFDF
  2400                           postinc2	equ	0xFDE
  2401                           postdec2	equ	0xFDD
  2402                           fsr2h	equ	0xFDA
  2403                           fsr2l	equ	0xFD9
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function _init_queue *****************
  2407 ;; Defined at:
  2408 ;;		line 14 in file "../src/messages.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2411 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  i               1   58[BANK0 ] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2423 ;;      Params:         0       2       0       0       0
  2424 ;;      Locals:         0       1       0       0       0
  2425 ;;      Temps:          0       0       0       0       0
  2426 ;;      Totals:         0       3       0       0       0
  2427 ;;Total ram usage:        3 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:   10
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_init_queues
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text9
  2438  001778                     __ptext9:
  2439                           	opt stack 0
  2440  001778                     _init_queue:
  2441                           	opt stack 19
  2442                           
  2443                           ;messages.c: 15: unsigned char i;
  2444                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2445                           
  2446                           ;incstack = 0
  2447  001778  0100               	movlb	0	; () banked
  2448  00177A  EE20 F055          	lfsr	2,85
  2449  00177E  0100               	movlb	0	; () banked
  2450  001780  51B8               	movf	init_queue@qptr& (0+255),w,b
  2451  001782  26D9               	addwf	fsr2l,f,c
  2452  001784  0100               	movlb	0	; () banked
  2453  001786  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2454  001788  22DA               	addwfc	fsr2h,f,c
  2455  00178A  0E00               	movlw	0
  2456  00178C  6EDF               	movwf	indf2,c
  2457                           
  2458                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2459  00178E  0100               	movlb	0	; () banked
  2460  001790  EE20 F056          	lfsr	2,86
  2461  001794  0100               	movlb	0	; () banked
  2462  001796  51B8               	movf	init_queue@qptr& (0+255),w,b
  2463  001798  26D9               	addwf	fsr2l,f,c
  2464  00179A  0100               	movlb	0	; () banked
  2465  00179C  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2466  00179E  22DA               	addwfc	fsr2h,f,c
  2467  0017A0  0E00               	movlw	0
  2468  0017A2  6EDF               	movwf	indf2,c
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2472  0017A4  0E00               	movlw	0
  2473  0017A6  0100               	movlb	0	; () banked
  2474  0017A8  6FBA               	movwf	init_queue@i& (0+255),b
  2475                           
  2476                           ; BSR set to: 0
  2477  0017AA  0E04               	movlw	4
  2478  0017AC  0100               	movlb	0	; () banked
  2479  0017AE  65BA               	cpfsgt	init_queue@i& (0+255),b
  2480  0017B0  D001               	goto	l2678
  2481  0017B2  0012               	return	
  2482  0017B4                     l2678:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;messages.c: 20: qptr->queue[i].full = 0;
  2486  0017B4  0100               	movlb	0	; () banked
  2487  0017B6  51BA               	movf	init_queue@i& (0+255),w,b
  2488  0017B8  0D11               	mullw	17
  2489  0017BA  50F3               	movf	prodl,w,c
  2490  0017BC  0100               	movlb	0	; () banked
  2491  0017BE  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2492  0017C0  6ED9               	movwf	fsr2l,c
  2493  0017C2  50F4               	movf	prodh,w,c
  2494  0017C4  0100               	movlb	0	; () banked
  2495  0017C6  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2496  0017C8  6EDA               	movwf	fsr2h,c
  2497  0017CA  0E00               	movlw	0
  2498  0017CC  6EDF               	movwf	indf2,c
  2499                           
  2500                           ; BSR set to: 0
  2501  0017CE  0100               	movlb	0	; () banked
  2502  0017D0  2BBA               	incf	init_queue@i& (0+255),f,b
  2503                           
  2504                           ; BSR set to: 0
  2505  0017D2  0E04               	movlw	4
  2506  0017D4  0100               	movlb	0	; () banked
  2507  0017D6  65BA               	cpfsgt	init_queue@i& (0+255),b
  2508  0017D8  D7ED               	goto	l2678
  2509  0017DA  0012               	return	
  2510  0017DC                     __end_of_init_queue:
  2511                           	opt stack 0
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           prodh	equ	0xFF4
  2517                           prodl	equ	0xFF3
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _init_i2c *****************
  2528 ;; Defined at:
  2529 ;;		line 358 in file "../src/my_i2c.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2532 ;;		 -> main@ic(38), 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;		None               void
  2537 ;; Registers used:
  2538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2544 ;;      Params:         0       2       0       0       0
  2545 ;;      Locals:         0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0
  2547 ;;      Totals:         0       2       0       0       0
  2548 ;;Total ram usage:        2 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:   10
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text10
  2559  001712                     __ptext10:
  2560                           	opt stack 0
  2561  001712                     _init_i2c:
  2562                           	opt stack 20
  2563                           
  2564                           ;my_i2c.c: 359: ic_ptr = ic;
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;incstack = 0
  2568  001712  0100               	movlb	0	; () banked
  2569  001714  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2570  001718  0100               	movlb	0	; () banked
  2571  00171A  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;my_i2c.c: 360: ic_ptr->buflen = 0;
  2575  00171E  0100               	movlb	0	; () banked
  2576  001720  EE20 F00E          	lfsr	2,14
  2577  001724  0100               	movlb	0	; () banked
  2578  001726  51C5               	movf	_ic_ptr& (0+255),w,b
  2579  001728  26D9               	addwf	fsr2l,f,c
  2580  00172A  0100               	movlb	0	; () banked
  2581  00172C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2582  00172E  22DA               	addwfc	fsr2h,f,c
  2583  001730  0E00               	movlw	0
  2584  001732  6EDF               	movwf	indf2,c
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;my_i2c.c: 361: ic_ptr->event_count = 0;
  2588  001734  0100               	movlb	0	; () banked
  2589  001736  EE20 F020          	lfsr	2,32
  2590  00173A  0100               	movlb	0	; () banked
  2591  00173C  51C5               	movf	_ic_ptr& (0+255),w,b
  2592  00173E  26D9               	addwf	fsr2l,f,c
  2593  001740  0100               	movlb	0	; () banked
  2594  001742  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2595  001744  22DA               	addwfc	fsr2h,f,c
  2596  001746  0E00               	movlw	0
  2597  001748  6EDF               	movwf	indf2,c
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;my_i2c.c: 362: ic_ptr->status = 0x5;
  2601  00174A  0100               	movlb	0	; () banked
  2602  00174C  EE20 F021          	lfsr	2,33
  2603  001750  0100               	movlb	0	; () banked
  2604  001752  51C5               	movf	_ic_ptr& (0+255),w,b
  2605  001754  26D9               	addwf	fsr2l,f,c
  2606  001756  0100               	movlb	0	; () banked
  2607  001758  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2608  00175A  22DA               	addwfc	fsr2h,f,c
  2609  00175C  0E05               	movlw	5
  2610  00175E  6EDF               	movwf	indf2,c
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;my_i2c.c: 363: ic_ptr->error_count = 0;
  2614  001760  0100               	movlb	0	; () banked
  2615  001762  EE20 F023          	lfsr	2,35
  2616  001766  0100               	movlb	0	; () banked
  2617  001768  51C5               	movf	_ic_ptr& (0+255),w,b
  2618  00176A  26D9               	addwf	fsr2l,f,c
  2619  00176C  0100               	movlb	0	; () banked
  2620  00176E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2621  001770  22DA               	addwfc	fsr2h,f,c
  2622  001772  0E00               	movlw	0
  2623  001774  6EDF               	movwf	indf2,c
  2624                           
  2625                           ; BSR set to: 0
  2626  001776  0012               	return	
  2627  001778                     __end_of_init_i2c:
  2628                           	opt stack 0
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           postinc0	equ	0xFEE
  2636                           wreg	equ	0xFE8
  2637                           indf2	equ	0xFDF
  2638                           postinc2	equ	0xFDE
  2639                           postdec2	equ	0xFDD
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function _i_like_to_moveit_moveit *****************
  2645 ;; Defined at:
  2646 ;;		line 3 in file "C:/Users/alex/Documents/VI/School/Embedded/code/pic_motor/src/src/motor.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  left_side_sp    1    wreg     unsigned char 
  2649 ;;  right_side_s    1   16[BANK1 ] unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  left_side_sp    1   17[BANK1 ] unsigned char 
  2652 ;;  moves           2   18[BANK1 ] unsigned char [2]
  2653 ;; Return value:  Size  Location     Type
  2654 ;;		None               void
  2655 ;; Registers used:
  2656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2662 ;;      Params:         0       0       1       0       0
  2663 ;;      Locals:         0       0       3       0       0
  2664 ;;      Temps:          0       0       0       0       0
  2665 ;;      Totals:         0       0       4       0       0
  2666 ;;Total ram usage:        4 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:   14
  2669 ;; This function calls:
  2670 ;;		_send_uart_message
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text11
  2677  001B66                     __ptext11:
  2678                           	opt stack 0
  2679  001B66                     _i_like_to_moveit_moveit:
  2680                           	opt stack 16
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;incstack = 0
  2684                           ;i_like_to_moveit_moveit@left_side_speed stored from wreg
  2685  001B66  0101               	movlb	1	; () banked
  2686  001B68  6F11               	movwf	i_like_to_moveit_moveit@left_side_speed& (0+255),b
  2687                           
  2688                           ; BSR set to: 1
  2689                           ;motor.c: 14: unsigned char moves[2];
  2690                           ;motor.c: 17: moves[0] = (left_side_speed>>1) + 192;
  2691  001B6A  0101               	movlb	1	; () banked
  2692  001B6C  90D8               	bcf	status,0,c
  2693  001B6E  3111               	rrcf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2694  001B70  0FC0               	addlw	192
  2695  001B72  0101               	movlb	1	; () banked
  2696  001B74  6F12               	movwf	i_like_to_moveit_moveit@moves& (0+255),b
  2697                           
  2698                           ;motor.c: 18: moves[1] = (right_side_speed>>1) + 64 ;
  2699  001B76  0101               	movlb	1	; () banked
  2700  001B78  90D8               	bcf	status,0,c
  2701  001B7A  3110               	rrcf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2702  001B7C  0F40               	addlw	64
  2703  001B7E  0101               	movlb	1	; () banked
  2704  001B80  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2705                           
  2706                           ; BSR set to: 1
  2707                           ;motor.c: 20: send_uart_message(moves);
  2708  001B82  0101               	movlb	1	; () banked
  2709  001B84  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2710  001B86  0101               	movlb	1	; () banked
  2711  001B88  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2712  001B8A  0101               	movlb	1	; () banked
  2713  001B8C  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2714  001B8E  0101               	movlb	1	; () banked
  2715  001B90  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2716  001B92  ECB6  F00E         	call	_send_uart_message	;wreg free
  2717  001B96  0012               	return	
  2718  001B98                     __end_of_i_like_to_moveit_moveit:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           indf2	equ	0xFDF
  2729                           postinc2	equ	0xFDE
  2730                           postdec2	equ	0xFDD
  2731                           fsr2h	equ	0xFDA
  2732                           fsr2l	equ	0xFD9
  2733                           status	equ	0xFD8
  2734                           
  2735 ;; *************** function _send_uart_message *****************
  2736 ;; Defined at:
  2737 ;;		line 186 in file "../src/my_uart.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  message_ptr     2   14[BANK1 ] PTR unsigned char 
  2740 ;;		 -> i_like_to_moveit_moveit@moves(2), main@uart_response(14), 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  message_q_co    1   68[BANK0 ] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      unsigned char 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2752 ;;      Params:         0       0       2       0       0
  2753 ;;      Locals:         0       1       0       0       0
  2754 ;;      Temps:          0       0       0       0       0
  2755 ;;      Totals:         0       1       2       0       0
  2756 ;;Total ram usage:        3 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:   13
  2759 ;; This function calls:
  2760 ;;		_FromMainLow_sendmsg
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;;		_i_like_to_moveit_moveit
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text12
  2768  001D6C                     __ptext12:
  2769                           	opt stack 0
  2770  001D6C                     _send_uart_message:
  2771                           	opt stack 17
  2772                           
  2773                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(2,31,(void *) messag
      +                          e_ptr );
  2774                           
  2775                           ;incstack = 0
  2776  001D6C  0E1F               	movlw	31
  2777  001D6E  0101               	movlb	1	; () banked
  2778  001D70  6F0B               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2779  001D72  0101               	movlb	1	; () banked
  2780  001D74  C10F  F10D         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2781  001D78  0101               	movlb	1	; () banked
  2782  001D7A  C10E  F10C         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2783  001D7E  0E02               	movlw	2
  2784  001D80  EC15  F00E         	call	_FromMainLow_sendmsg
  2785  001D84  0100               	movlb	0	; () banked
  2786  001D86  6FC4               	movwf	send_uart_message@message_q_code& (0+255),b
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;my_uart.c: 193: }
  2790                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;my_uart.c: 191: {
  2794                           ;my_uart.c: 192: return 0x02;
  2795                           ;	Return value of _send_uart_message is never used
  2796                           
  2797                           ;my_uart.c: 190: if( message_q_code == -1)
  2798  001D88  889D               	bsf	3997,4,c	;volatile
  2799                           
  2800                           ; BSR set to: 0
  2801                           
  2802                           ;my_uart.c: 196: return 0x00;
  2803                           ;	Return value of _send_uart_message is never used
  2804  001D8A  0012               	return	
  2805  001D8C                     __end_of_send_uart_message:
  2806                           	opt stack 0
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           prodh	equ	0xFF4
  2812                           prodl	equ	0xFF3
  2813                           postinc0	equ	0xFEE
  2814                           wreg	equ	0xFE8
  2815                           indf2	equ	0xFDF
  2816                           postinc2	equ	0xFDE
  2817                           postdec2	equ	0xFDD
  2818                           fsr2h	equ	0xFDA
  2819                           fsr2l	equ	0xFD9
  2820                           status	equ	0xFD8
  2821                           
  2822 ;; *************** function _FromMainLow_sendmsg *****************
  2823 ;; Defined at:
  2824 ;;		line 150 in file "../src/messages.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  length          1    wreg     unsigned char 
  2827 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2828 ;;  data            2   12[BANK1 ] PTR void 
  2829 ;;		 -> i_like_to_moveit_moveit@moves(2), main@uart_response(14), 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  length          1   67[BANK0 ] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      char 
  2834 ;; Registers used:
  2835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2841 ;;      Params:         0       0       3       0       0
  2842 ;;      Locals:         0       1       0       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         0       1       3       0       0
  2845 ;;Total ram usage:        4 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:   12
  2848 ;; This function calls:
  2849 ;;		_send_msg
  2850 ;; This function is called by:
  2851 ;;		_send_uart_message
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text13
  2856  001C2A                     __ptext13:
  2857                           	opt stack 0
  2858  001C2A                     _FromMainLow_sendmsg:
  2859                           	opt stack 17
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;incstack = 0
  2863                           ;FromMainLow_sendmsg@length stored from wreg
  2864  001C2A  0100               	movlb	0	; () banked
  2865  001C2C  6FC3               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2869  001C2E  0102               	movlb	2	; () banked
  2870  001C30  0E02               	movlw	high _FromMainLow_MQ
  2871  001C32  0101               	movlb	1	; () banked
  2872  001C34  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2873  001C36  0102               	movlb	2	; () banked
  2874  001C38  0E00               	movlw	low _FromMainLow_MQ
  2875  001C3A  0101               	movlb	1	; () banked
  2876  001C3C  6F00               	movwf	send_msg@qptr& (0+255),b
  2877  001C3E  C0C3  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  2878  001C42  C10B  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2879  001C46  0101               	movlb	1	; () banked
  2880  001C48  C10D  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2881  001C4C  0101               	movlb	1	; () banked
  2882  001C4E  C10C  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  2883  001C52  ECF6  F006         	call	_send_msg	;wreg free
  2884  001C56  0012               	return	
  2885  001C58                     __end_of_FromMainLow_sendmsg:
  2886                           	opt stack 0
  2887                           tblptru	equ	0xFF8
  2888                           tblptrh	equ	0xFF7
  2889                           tblptrl	equ	0xFF6
  2890                           tablat	equ	0xFF5
  2891                           prodh	equ	0xFF4
  2892                           prodl	equ	0xFF3
  2893                           postinc0	equ	0xFEE
  2894                           wreg	equ	0xFE8
  2895                           indf2	equ	0xFDF
  2896                           postinc2	equ	0xFDE
  2897                           postdec2	equ	0xFDD
  2898                           fsr2h	equ	0xFDA
  2899                           fsr2l	equ	0xFD9
  2900                           status	equ	0xFD8
  2901                           
  2902 ;; *************** function _send_msg *****************
  2903 ;; Defined at:
  2904 ;;		line 24 in file "../src/messages.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2907 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2908 ;;  length          1    2[BANK1 ] unsigned char 
  2909 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2910 ;;  data            2    4[BANK1 ] PTR void 
  2911 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  2912 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  2913 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  2914 ;;		 -> main@t1thread_data(2), main@ic(38), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2917 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  2918 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2919 ;;  tlength         2    6[BANK1 ] unsigned int 
  2920 ;;  slot            1    8[BANK1 ] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      char 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2930 ;;      Params:         0       0       6       0       0
  2931 ;;      Locals:         0       0       5       0       0
  2932 ;;      Temps:          0       1       0       0       0
  2933 ;;      Totals:         0       1      11       0       0
  2934 ;;Total ram usage:       12 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:   11
  2937 ;; This function calls:
  2938 ;;		___awmod
  2939 ;;		_memcpy
  2940 ;; This function is called by:
  2941 ;;		_FromMainLow_sendmsg
  2942 ;;		_FromMainHigh_sendmsg
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text14
  2947  000DEC                     __ptext14:
  2948                           	opt stack 0
  2949  000DEC                     _send_msg:
  2950                           	opt stack 17
  2951                           
  2952                           ;messages.c: 25: unsigned char slot;
  2953                           ;messages.c: 27: msg *qmsg;
  2954                           ;messages.c: 28: size_t tlength = length;
  2955                           
  2956                           ;incstack = 0
  2957  000DEC  0101               	movlb	1	; () banked
  2958  000DEE  C102  F106         	movff	send_msg@length,send_msg@tlength
  2959  000DF2  0101               	movlb	1	; () banked
  2960  000DF4  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2964  000DF6  0101               	movlb	1	; () banked
  2965  000DF8  EE20 F055          	lfsr	2,85
  2966  000DFC  0101               	movlb	1	; () banked
  2967  000DFE  5100               	movf	send_msg@qptr& (0+255),w,b
  2968  000E00  26D9               	addwf	fsr2l,f,c
  2969  000E02  0101               	movlb	1	; () banked
  2970  000E04  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2971  000E06  22DA               	addwfc	fsr2h,f,c
  2972  000E08  50DF               	movf	indf2,w,c
  2973  000E0A  0101               	movlb	1	; () banked
  2974  000E0C  6F08               	movwf	send_msg@slot& (0+255),b
  2975                           
  2976                           ; BSR set to: 1
  2977                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2978  000E0E  0101               	movlb	1	; () banked
  2979  000E10  5108               	movf	send_msg@slot& (0+255),w,b
  2980  000E12  0D11               	mullw	17
  2981  000E14  50F3               	movf	prodl,w,c
  2982  000E16  0101               	movlb	1	; () banked
  2983  000E18  2500               	addwf	send_msg@qptr& (0+255),w,b
  2984  000E1A  0101               	movlb	1	; () banked
  2985  000E1C  6F09               	movwf	send_msg@qmsg& (0+255),b
  2986  000E1E  50F4               	movf	prodh,w,c
  2987  000E20  0101               	movlb	1	; () banked
  2988  000E22  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2989  000E24  0101               	movlb	1	; () banked
  2990  000E26  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  2991                           
  2992                           ; BSR set to: 1
  2993                           ;messages.c: 41: if (qmsg->full != 0) {
  2994  000E28  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2995  000E2C  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2996  000E30  50DF               	movf	indf2,w,c
  2997  000E32  B4D8               	btfsc	status,2,c
  2998  000E34  D002               	goto	l3554
  2999                           
  3000                           ; BSR set to: 1
  3001                           ;messages.c: 42: return (-1);
  3002  000E36  0EFF               	movlw	255
  3003  000E38  0012               	return	
  3004  000E3A                     l3554:
  3005                           
  3006                           ; BSR set to: 1
  3007                           ;messages.c: 43: }
  3008                           ;messages.c: 46: qmsg->length = length;
  3009  000E3A  0101               	movlb	1	; () banked
  3010  000E3C  EE20 F001          	lfsr	2,1
  3011  000E40  0101               	movlb	1	; () banked
  3012  000E42  5109               	movf	send_msg@qmsg& (0+255),w,b
  3013  000E44  26D9               	addwf	fsr2l,f,c
  3014  000E46  0101               	movlb	1	; () banked
  3015  000E48  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3016  000E4A  22DA               	addwfc	fsr2h,f,c
  3017  000E4C  0101               	movlb	1	; () banked
  3018  000E4E  C102  FFDF         	movff	send_msg@length,indf2
  3019                           
  3020                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3021  000E52  0101               	movlb	1	; () banked
  3022  000E54  EE20 F002          	lfsr	2,2
  3023  000E58  0101               	movlb	1	; () banked
  3024  000E5A  5109               	movf	send_msg@qmsg& (0+255),w,b
  3025  000E5C  26D9               	addwf	fsr2l,f,c
  3026  000E5E  0101               	movlb	1	; () banked
  3027  000E60  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3028  000E62  22DA               	addwfc	fsr2h,f,c
  3029  000E64  0101               	movlb	1	; () banked
  3030  000E66  C103  FFDF         	movff	send_msg@msgtype,indf2
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3034  000E6A  0E03               	movlw	3
  3035  000E6C  0101               	movlb	1	; () banked
  3036  000E6E  2509               	addwf	send_msg@qmsg& (0+255),w,b
  3037  000E70  0100               	movlb	0	; () banked
  3038  000E72  6FB8               	movwf	memcpy@d1& (0+255),b
  3039  000E74  0E00               	movlw	0
  3040  000E76  0101               	movlb	1	; () banked
  3041  000E78  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3042  000E7A  0100               	movlb	0	; () banked
  3043  000E7C  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  3044  000E7E  0101               	movlb	1	; () banked
  3045  000E80  0100               	movlb	0	; () banked
  3046  000E82  C105  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  3047  000E86  0101               	movlb	1	; () banked
  3048  000E88  0100               	movlb	0	; () banked
  3049  000E8A  C104  F0BA         	movff	send_msg@data,memcpy@s1
  3050  000E8E  C106  F0BC         	movff	send_msg@tlength,memcpy@n
  3051  000E92  C107  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  3052  000E96  ECD3  F00C         	call	_memcpy	;wreg free
  3053                           
  3054                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  3055  000E9A  0101               	movlb	1	; () banked
  3056  000E9C  EE20 F055          	lfsr	2,85
  3057  000EA0  0101               	movlb	1	; () banked
  3058  000EA2  5100               	movf	send_msg@qptr& (0+255),w,b
  3059  000EA4  26D9               	addwf	fsr2l,f,c
  3060  000EA6  0101               	movlb	1	; () banked
  3061  000EA8  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3062  000EAA  22DA               	addwfc	fsr2h,f,c
  3063  000EAC  0101               	movlb	1	; () banked
  3064  000EAE  EE10 F055          	lfsr	1,85
  3065  000EB2  0101               	movlb	1	; () banked
  3066  000EB4  5100               	movf	send_msg@qptr& (0+255),w,b
  3067  000EB6  26E1               	addwf	fsr1l,f,c
  3068  000EB8  0101               	movlb	1	; () banked
  3069  000EBA  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3070  000EBC  22E2               	addwfc	fsr1h,f,c
  3071  000EBE  50E7               	movf	indf1,w,c
  3072  000EC0  0100               	movlb	0	; () banked
  3073  000EC2  6FC2               	movwf	??_send_msg& (0+255),b
  3074  000EC4  0E01               	movlw	1
  3075  000EC6  0100               	movlb	0	; () banked
  3076  000EC8  25C2               	addwf	??_send_msg& (0+255),w,b
  3077  000ECA  0100               	movlb	0	; () banked
  3078  000ECC  6FB8               	movwf	___awmod@dividend& (0+255),b
  3079  000ECE  0100               	movlb	0	; () banked
  3080  000ED0  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3081  000ED2  0E00               	movlw	0
  3082  000ED4  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3083  000ED6  0E00               	movlw	0
  3084  000ED8  0100               	movlb	0	; () banked
  3085  000EDA  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3086  000EDC  0E05               	movlw	5
  3087  000EDE  0100               	movlb	0	; () banked
  3088  000EE0  6FBA               	movwf	___awmod@divisor& (0+255),b
  3089  000EE2  EC5F  F009         	call	___awmod	;wreg free
  3090  000EE6  0100               	movlb	0	; () banked
  3091  000EE8  51B8               	movf	?___awmod& (0+255),w,b
  3092  000EEA  6EDF               	movwf	indf2,c
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;messages.c: 59: qmsg->full = 1;
  3096  000EEC  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3097  000EF0  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3098  000EF4  0E01               	movlw	1
  3099  000EF6  6EDF               	movwf	indf2,c
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;messages.c: 60: return (1);
  3103  000EF8  0E01               	movlw	1
  3104  000EFA  0012               	return	
  3105  000EFC                     __end_of_send_msg:
  3106                           	opt stack 0
  3107                           tblptru	equ	0xFF8
  3108                           tblptrh	equ	0xFF7
  3109                           tblptrl	equ	0xFF6
  3110                           tablat	equ	0xFF5
  3111                           prodh	equ	0xFF4
  3112                           prodl	equ	0xFF3
  3113                           postinc0	equ	0xFEE
  3114                           wreg	equ	0xFE8
  3115                           indf1	equ	0xFE7
  3116                           fsr1h	equ	0xFE2
  3117                           fsr1l	equ	0xFE1
  3118                           indf2	equ	0xFDF
  3119                           postinc2	equ	0xFDE
  3120                           postdec2	equ	0xFDD
  3121                           fsr2h	equ	0xFDA
  3122                           fsr2l	equ	0xFD9
  3123                           status	equ	0xFD8
  3124                           
  3125 ;; *************** function _i2c_configure_slave *****************
  3126 ;; Defined at:
  3127 ;;		line 369 in file "../src/my_i2c.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  addr            1    wreg     unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  addr            1   56[BANK0 ] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;		None               void
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       1       0       0       0
  3143 ;;      Temps:          0       0       0       0       0
  3144 ;;      Totals:         0       1       0       0       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:   10
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text15
  3156  001CB2                     __ptext15:
  3157                           	opt stack 0
  3158  001CB2                     _i2c_configure_slave:
  3159                           	opt stack 20
  3160                           
  3161                           ;incstack = 0
  3162                           ;i2c_configure_slave@addr stored from wreg
  3163  001CB2  0100               	movlb	0	; () banked
  3164  001CB4  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;my_i2c.c: 381: TRISCbits.TRISC3 = 1;
  3168  001CB6  8694               	bsf	3988,3,c	;volatile
  3169                           
  3170                           ;my_i2c.c: 382: TRISCbits.TRISC4 = 1;
  3171  001CB8  8894               	bsf	3988,4,c	;volatile
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;my_i2c.c: 387: SSPADD = addr;
  3175  001CBA  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;my_i2c.c: 389: SSPSTAT = 0x0;
  3179  001CBE  0E00               	movlw	0
  3180  001CC0  6EC7               	movwf	4039,c	;volatile
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;my_i2c.c: 390: SSPCON1 = 0x0;
  3184  001CC2  0E00               	movlw	0
  3185  001CC4  6EC6               	movwf	4038,c	;volatile
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;my_i2c.c: 391: SSPCON2 = 0x0;
  3189  001CC6  0E00               	movlw	0
  3190  001CC8  6EC5               	movwf	4037,c	;volatile
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;my_i2c.c: 392: SSPCON1 |= 0x0E;
  3194  001CCA  0E0E               	movlw	14
  3195  001CCC  12C6               	iorwf	4038,f,c	;volatile
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;my_i2c.c: 393: SSPSTAT |= 0b10000000;
  3199  001CCE  8EC7               	bsf	4039,7,c	;volatile
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;my_i2c.c: 396: TRISCbits.TRISC3 = 1;
  3203  001CD0  8694               	bsf	3988,3,c	;volatile
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;my_i2c.c: 397: TRISCbits.TRISC4 = 1;
  3207  001CD2  8894               	bsf	3988,4,c	;volatile
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;my_i2c.c: 418: SSPCON2bits.SEN = 1;
  3211  001CD4  80C5               	bsf	4037,0,c	;volatile
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;my_i2c.c: 419: SSPCON1 |= 0b00100000;
  3215  001CD6  8AC6               	bsf	4038,5,c	;volatile
  3216                           
  3217                           ; BSR set to: 0
  3218  001CD8  0012               	return	
  3219  001CDA                     __end_of_i2c_configure_slave:
  3220                           	opt stack 0
  3221                           tblptru	equ	0xFF8
  3222                           tblptrh	equ	0xFF7
  3223                           tblptrl	equ	0xFF6
  3224                           tablat	equ	0xFF5
  3225                           prodh	equ	0xFF4
  3226                           prodl	equ	0xFF3
  3227                           postinc0	equ	0xFEE
  3228                           wreg	equ	0xFE8
  3229                           indf1	equ	0xFE7
  3230                           fsr1h	equ	0xFE2
  3231                           fsr1l	equ	0xFE1
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           postdec2	equ	0xFDD
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function _enable_interrupts *****************
  3240 ;; Defined at:
  3241 ;;		line 14 in file "../src/interrupts.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		None
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3255 ;;      Params:         0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:   10
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text16
  3270  001DFC                     __ptext16:
  3271                           	opt stack 0
  3272  001DFC                     _enable_interrupts:
  3273                           	opt stack 20
  3274                           
  3275                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;incstack = 0
  3279  001DFC  8ED0               	bsf	4048,7,c	;volatile
  3280                           
  3281                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3282  001DFE  8EF2               	bsf	intcon,7,c	;volatile
  3283                           
  3284                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3285  001E00  8CF2               	bsf	intcon,6,c	;volatile
  3286  001E02  0012               	return	
  3287  001E04                     __end_of_enable_interrupts:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           intcon	equ	0xFF2
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf1	equ	0xFE7
  3299                           fsr1h	equ	0xFE2
  3300                           fsr1l	equ	0xFE1
  3301                           indf2	equ	0xFDF
  3302                           postinc2	equ	0xFDE
  3303                           postdec2	equ	0xFDD
  3304                           fsr2h	equ	0xFDA
  3305                           fsr2l	equ	0xFD9
  3306                           status	equ	0xFD8
  3307                           
  3308 ;; *************** function _debug_configure *****************
  3309 ;; Defined at:
  3310 ;;		line 3 in file "../src/debug.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;		None               void
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:   10
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text17
  3339  001DF2                     __ptext17:
  3340                           	opt stack 0
  3341  001DF2                     _debug_configure:
  3342                           	opt stack 20
  3343                           
  3344                           ;debug.c: 5: TRISD = 0x00;
  3345                           
  3346                           ;incstack = 0
  3347  001DF2  0E00               	movlw	0
  3348  001DF4  6E95               	movwf	3989,c	;volatile
  3349                           
  3350                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3351  001DF6  9093               	bcf	3987,0,c	;volatile
  3352                           
  3353                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3354  001DF8  9293               	bcf	3987,1,c	;volatile
  3355  001DFA  0012               	return	
  3356  001DFC                     __end_of_debug_configure:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           intcon	equ	0xFF2
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           indf1	equ	0xFE7
  3368                           fsr1h	equ	0xFE2
  3369                           fsr1l	equ	0xFE1
  3370                           indf2	equ	0xFDF
  3371                           postinc2	equ	0xFDE
  3372                           postdec2	equ	0xFDD
  3373                           fsr2h	equ	0xFDA
  3374                           fsr2l	equ	0xFD9
  3375                           status	equ	0xFD8
  3376                           
  3377 ;; *************** function _blip3 *****************
  3378 ;; Defined at:
  3379 ;;		line 32 in file "../src/debug.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;		None               void
  3386 ;; Registers used:
  3387 ;;		None
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3393 ;;      Params:         0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0
  3396 ;;      Totals:         0       0       0       0       0
  3397 ;;Total ram usage:        0 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:   10
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text18
  3408  001E04                     __ptext18:
  3409                           	opt stack 0
  3410  001E04                     _blip3:
  3411                           	opt stack 20
  3412                           
  3413                           ;debug.c: 34: LATDbits.LD6 = 0;
  3414                           
  3415                           ;incstack = 0
  3416  001E04  9C8C               	bcf	3980,6,c	;volatile
  3417                           
  3418                           ;debug.c: 35: LATDbits.LD6 = 1;
  3419  001E06  8C8C               	bsf	3980,6,c	;volatile
  3420                           
  3421                           ;debug.c: 36: LATDbits.LD6 = 0;
  3422  001E08  9C8C               	bcf	3980,6,c	;volatile
  3423  001E0A  0012               	return	
  3424  001E0C                     __end_of_blip3:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           prodh	equ	0xFF4
  3431                           prodl	equ	0xFF3
  3432                           intcon	equ	0xFF2
  3433                           postinc0	equ	0xFEE
  3434                           wreg	equ	0xFE8
  3435                           indf1	equ	0xFE7
  3436                           fsr1h	equ	0xFE2
  3437                           fsr1l	equ	0xFE1
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           fsr2h	equ	0xFDA
  3442                           fsr2l	equ	0xFD9
  3443                           status	equ	0xFD8
  3444                           
  3445 ;; *************** function _blip2 *****************
  3446 ;; Defined at:
  3447 ;;		line 25 in file "../src/debug.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;		None               void
  3454 ;; Registers used:
  3455 ;;		None
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3461 ;;      Params:         0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:   10
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text19
  3476  001E0C                     __ptext19:
  3477                           	opt stack 0
  3478  001E0C                     _blip2:
  3479                           	opt stack 20
  3480                           
  3481                           ;debug.c: 27: LATDbits.LD5 = 0;
  3482                           
  3483                           ;incstack = 0
  3484  001E0C  9A8C               	bcf	3980,5,c	;volatile
  3485                           
  3486                           ;debug.c: 28: LATDbits.LD5 = 1;
  3487  001E0E  8A8C               	bsf	3980,5,c	;volatile
  3488                           
  3489                           ;debug.c: 29: LATDbits.LD5 = 0;
  3490  001E10  9A8C               	bcf	3980,5,c	;volatile
  3491  001E12  0012               	return	
  3492  001E14                     __end_of_blip2:
  3493                           	opt stack 0
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           intcon	equ	0xFF2
  3501                           postinc0	equ	0xFEE
  3502                           wreg	equ	0xFE8
  3503                           indf1	equ	0xFE7
  3504                           fsr1h	equ	0xFE2
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           postinc2	equ	0xFDE
  3508                           postdec2	equ	0xFDD
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function _blip1 *****************
  3514 ;; Defined at:
  3515 ;;		line 18 in file "../src/debug.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;		None               void
  3522 ;; Registers used:
  3523 ;;		None
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3529 ;;      Params:         0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0
  3532 ;;      Totals:         0       0       0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:   10
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text20
  3544  001E14                     __ptext20:
  3545                           	opt stack 0
  3546  001E14                     _blip1:
  3547                           	opt stack 20
  3548                           
  3549                           ;debug.c: 20: LATDbits.LD4 = 0;
  3550                           
  3551                           ;incstack = 0
  3552  001E14  988C               	bcf	3980,4,c	;volatile
  3553                           
  3554                           ;debug.c: 21: LATDbits.LD4 = 1;
  3555  001E16  888C               	bsf	3980,4,c	;volatile
  3556                           
  3557                           ;debug.c: 22: LATDbits.LD4 = 0;
  3558  001E18  988C               	bcf	3980,4,c	;volatile
  3559  001E1A  0012               	return	
  3560  001E1C                     __end_of_blip1:
  3561                           	opt stack 0
  3562                           tblptru	equ	0xFF8
  3563                           tblptrh	equ	0xFF7
  3564                           tblptrl	equ	0xFF6
  3565                           tablat	equ	0xFF5
  3566                           prodh	equ	0xFF4
  3567                           prodl	equ	0xFF3
  3568                           intcon	equ	0xFF2
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           indf1	equ	0xFE7
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           indf2	equ	0xFDF
  3575                           postinc2	equ	0xFDE
  3576                           postdec2	equ	0xFDD
  3577                           fsr2h	equ	0xFDA
  3578                           fsr2l	equ	0xFD9
  3579                           status	equ	0xFD8
  3580                           
  3581 ;; *************** function _blip *****************
  3582 ;; Defined at:
  3583 ;;		line 11 in file "../src/debug.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;		None
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;		None               void
  3590 ;; Registers used:
  3591 ;;		None
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3597 ;;      Params:         0       0       0       0       0
  3598 ;;      Locals:         0       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0
  3600 ;;      Totals:         0       0       0       0       0
  3601 ;;Total ram usage:        0 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:   10
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text21
  3612  001E1C                     __ptext21:
  3613                           	opt stack 0
  3614  001E1C                     _blip:
  3615                           	opt stack 20
  3616                           
  3617                           ;debug.c: 13: LATDbits.LD2 = 0;
  3618                           
  3619                           ;incstack = 0
  3620  001E1C  948C               	bcf	3980,2,c	;volatile
  3621                           
  3622                           ;debug.c: 14: LATDbits.LD2 = 1;
  3623  001E1E  848C               	bsf	3980,2,c	;volatile
  3624                           
  3625                           ;debug.c: 15: LATDbits.LD2 = 0;
  3626  001E20  948C               	bcf	3980,2,c	;volatile
  3627  001E22  0012               	return	
  3628  001E24                     __end_of_blip:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           prodh	equ	0xFF4
  3635                           prodl	equ	0xFF3
  3636                           intcon	equ	0xFF2
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           indf1	equ	0xFE7
  3640                           fsr1h	equ	0xFE2
  3641                           fsr1l	equ	0xFE1
  3642                           indf2	equ	0xFDF
  3643                           postinc2	equ	0xFDE
  3644                           postdec2	equ	0xFDD
  3645                           fsr2h	equ	0xFDA
  3646                           fsr2l	equ	0xFD9
  3647                           status	equ	0xFD8
  3648                           
  3649 ;; *************** function _ToMainLow_recvmsg *****************
  3650 ;; Defined at:
  3651 ;;		line 112 in file "../src/messages.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  maxlength       1    wreg     unsigned char 
  3654 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3655 ;;		 -> main@msgtype(1), 
  3656 ;;  data            2   14[BANK1 ] PTR void 
  3657 ;;		 -> main@msgbuffer(15), 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      char 
  3662 ;; Registers used:
  3663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3669 ;;      Params:         0       0       4       0       0
  3670 ;;      Locals:         0       1       0       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         0       1       4       0       0
  3673 ;;Total ram usage:        5 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:   12
  3676 ;; This function calls:
  3677 ;;		_recv_msg
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text22
  3684  001AC4                     __ptext22:
  3685                           	opt stack 0
  3686  001AC4                     _ToMainLow_recvmsg:
  3687                           	opt stack 18
  3688                           
  3689                           ;incstack = 0
  3690                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3691  001AC4  0100               	movlb	0	; () banked
  3692  001AC6  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3696  001AC8  0101               	movlb	1	; () banked
  3697  001ACA  0E01               	movlw	high _ToMainLow_MQ
  3698  001ACC  0101               	movlb	1	; () banked
  3699  001ACE  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3700  001AD0  0101               	movlb	1	; () banked
  3701  001AD2  0E72               	movlw	low _ToMainLow_MQ
  3702  001AD4  0101               	movlb	1	; () banked
  3703  001AD6  6F00               	movwf	recv_msg@qptr& (0+255),b
  3704  001AD8  C0C4  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3705  001ADC  0101               	movlb	1	; () banked
  3706  001ADE  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3707  001AE2  0101               	movlb	1	; () banked
  3708  001AE4  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3709  001AE8  0101               	movlb	1	; () banked
  3710  001AEA  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3711  001AEE  0101               	movlb	1	; () banked
  3712  001AF0  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3713  001AF4  ECB6  F005         	call	_recv_msg	;wreg free
  3714  001AF8  0012               	return	
  3715  001AFA                     __end_of_ToMainLow_recvmsg:
  3716                           	opt stack 0
  3717                           tblptru	equ	0xFF8
  3718                           tblptrh	equ	0xFF7
  3719                           tblptrl	equ	0xFF6
  3720                           tablat	equ	0xFF5
  3721                           prodh	equ	0xFF4
  3722                           prodl	equ	0xFF3
  3723                           intcon	equ	0xFF2
  3724                           postinc0	equ	0xFEE
  3725                           wreg	equ	0xFE8
  3726                           indf1	equ	0xFE7
  3727                           fsr1h	equ	0xFE2
  3728                           fsr1l	equ	0xFE1
  3729                           indf2	equ	0xFDF
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _ToMainHigh_recvmsg *****************
  3737 ;; Defined at:
  3738 ;;		line 135 in file "../src/messages.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  maxlength       1    wreg     unsigned char 
  3741 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3742 ;;		 -> main@msgtype(1), 
  3743 ;;  data            2   14[BANK1 ] PTR void 
  3744 ;;		 -> main@msgbuffer(15), 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      char 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3756 ;;      Params:         0       0       4       0       0
  3757 ;;      Locals:         0       1       0       0       0
  3758 ;;      Temps:          0       0       0       0       0
  3759 ;;      Totals:         0       1       4       0       0
  3760 ;;Total ram usage:        5 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:   12
  3763 ;; This function calls:
  3764 ;;		_recv_msg
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text23
  3771  001AFA                     __ptext23:
  3772                           	opt stack 0
  3773  001AFA                     _ToMainHigh_recvmsg:
  3774                           	opt stack 18
  3775                           
  3776                           ;incstack = 0
  3777                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3778  001AFA  0100               	movlb	0	; () banked
  3779  001AFC  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3783  001AFE  0102               	movlb	2	; () banked
  3784  001B00  0E02               	movlw	high _ToMainHigh_MQ
  3785  001B02  0101               	movlb	1	; () banked
  3786  001B04  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3787  001B06  0102               	movlb	2	; () banked
  3788  001B08  0E57               	movlw	low _ToMainHigh_MQ
  3789  001B0A  0101               	movlb	1	; () banked
  3790  001B0C  6F00               	movwf	recv_msg@qptr& (0+255),b
  3791  001B0E  C0C4  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3792  001B12  0101               	movlb	1	; () banked
  3793  001B14  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3794  001B18  0101               	movlb	1	; () banked
  3795  001B1A  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3796  001B1E  0101               	movlb	1	; () banked
  3797  001B20  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3798  001B24  0101               	movlb	1	; () banked
  3799  001B26  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3800  001B2A  ECB6  F005         	call	_recv_msg	;wreg free
  3801  001B2E  0012               	return	
  3802  001B30                     __end_of_ToMainHigh_recvmsg:
  3803                           	opt stack 0
  3804                           tblptru	equ	0xFF8
  3805                           tblptrh	equ	0xFF7
  3806                           tblptrl	equ	0xFF6
  3807                           tablat	equ	0xFF5
  3808                           prodh	equ	0xFF4
  3809                           prodl	equ	0xFF3
  3810                           intcon	equ	0xFF2
  3811                           postinc0	equ	0xFEE
  3812                           wreg	equ	0xFE8
  3813                           indf1	equ	0xFE7
  3814                           fsr1h	equ	0xFE2
  3815                           fsr1l	equ	0xFE1
  3816                           indf2	equ	0xFDF
  3817                           postinc2	equ	0xFDE
  3818                           postdec2	equ	0xFDD
  3819                           fsr2h	equ	0xFDA
  3820                           fsr2l	equ	0xFD9
  3821                           status	equ	0xFD8
  3822                           
  3823 ;; *************** function _recv_msg *****************
  3824 ;; Defined at:
  3825 ;;		line 63 in file "../src/messages.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3828 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3829 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3830 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3831 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  3832 ;;		 -> main@msgtype(1), 
  3833 ;;  data            2    5[BANK1 ] PTR void 
  3834 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  3835 ;;		 -> main@ic(38), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3838 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3839 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3840 ;;  tlength         2    8[BANK1 ] unsigned int 
  3841 ;;  slot            1    7[BANK1 ] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      char 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3851 ;;      Params:         0       0       7       0       0
  3852 ;;      Locals:         0       0       5       0       0
  3853 ;;      Temps:          0       2       0       0       0
  3854 ;;      Totals:         0       2      12       0       0
  3855 ;;Total ram usage:       14 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:   11
  3858 ;; This function calls:
  3859 ;;		___awmod
  3860 ;;		_memcpy
  3861 ;; This function is called by:
  3862 ;;		_ToMainLow_recvmsg
  3863 ;;		_ToMainHigh_recvmsg
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text24
  3868  000B6C                     __ptext24:
  3869                           	opt stack 0
  3870  000B6C                     _recv_msg:
  3871                           	opt stack 18
  3872                           
  3873                           ;messages.c: 64: unsigned char slot;
  3874                           ;messages.c: 68: msg *qmsg;
  3875                           ;messages.c: 69: size_t tlength;
  3876                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3877                           
  3878                           ;incstack = 0
  3879  000B6C  0101               	movlb	1	; () banked
  3880  000B6E  EE20 F056          	lfsr	2,86
  3881  000B72  0101               	movlb	1	; () banked
  3882  000B74  5100               	movf	recv_msg@qptr& (0+255),w,b
  3883  000B76  26D9               	addwf	fsr2l,f,c
  3884  000B78  0101               	movlb	1	; () banked
  3885  000B7A  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3886  000B7C  22DA               	addwfc	fsr2h,f,c
  3887  000B7E  50DF               	movf	indf2,w,c
  3888  000B80  0101               	movlb	1	; () banked
  3889  000B82  6F07               	movwf	recv_msg@slot& (0+255),b
  3890                           
  3891                           ; BSR set to: 1
  3892                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3893  000B84  0101               	movlb	1	; () banked
  3894  000B86  5107               	movf	recv_msg@slot& (0+255),w,b
  3895  000B88  0D11               	mullw	17
  3896  000B8A  50F3               	movf	prodl,w,c
  3897  000B8C  0101               	movlb	1	; () banked
  3898  000B8E  2500               	addwf	recv_msg@qptr& (0+255),w,b
  3899  000B90  0101               	movlb	1	; () banked
  3900  000B92  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  3901  000B94  50F4               	movf	prodh,w,c
  3902  000B96  0101               	movlb	1	; () banked
  3903  000B98  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3904  000B9A  0101               	movlb	1	; () banked
  3905  000B9C  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3906                           
  3907                           ; BSR set to: 1
  3908                           ;messages.c: 74: if (qmsg->full == 1) {
  3909  000B9E  0E01               	movlw	1
  3910  000BA0  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  3911  000BA4  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3912  000BA8  62DF               	cpfseq	indf2,c
  3913  000BAA  D07F               	goto	l3718
  3914                           
  3915                           ; BSR set to: 1
  3916                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3917  000BAC  0101               	movlb	1	; () banked
  3918  000BAE  EE20 F001          	lfsr	2,1
  3919  000BB2  0101               	movlb	1	; () banked
  3920  000BB4  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3921  000BB6  26D9               	addwf	fsr2l,f,c
  3922  000BB8  0101               	movlb	1	; () banked
  3923  000BBA  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3924  000BBC  22DA               	addwfc	fsr2h,f,c
  3925  000BBE  50DF               	movf	indf2,w,c
  3926  000BC0  0101               	movlb	1	; () banked
  3927  000BC2  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  3928  000BC4  B0D8               	btfsc	status,0,c
  3929  000BC6  D002               	goto	l3702
  3930                           
  3931                           ; BSR set to: 1
  3932                           ;messages.c: 77: return (-3);
  3933  000BC8  0EFD               	movlw	253
  3934  000BCA  0012               	return	
  3935  000BCC                     l3702:
  3936                           
  3937                           ; BSR set to: 1
  3938                           ;messages.c: 78: }
  3939                           ;messages.c: 80: tlength = qmsg->length;
  3940  000BCC  0101               	movlb	1	; () banked
  3941  000BCE  EE20 F001          	lfsr	2,1
  3942  000BD2  0101               	movlb	1	; () banked
  3943  000BD4  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3944  000BD6  26D9               	addwf	fsr2l,f,c
  3945  000BD8  0101               	movlb	1	; () banked
  3946  000BDA  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3947  000BDC  22DA               	addwfc	fsr2h,f,c
  3948  000BDE  50DF               	movf	indf2,w,c
  3949  000BE0  0100               	movlb	0	; () banked
  3950  000BE2  6FC2               	movwf	??_recv_msg& (0+255),b
  3951  000BE4  0100               	movlb	0	; () banked
  3952  000BE6  51C2               	movf	??_recv_msg& (0+255),w,b
  3953  000BE8  0101               	movlb	1	; () banked
  3954  000BEA  6F08               	movwf	recv_msg@tlength& (0+255),b
  3955  000BEC  0101               	movlb	1	; () banked
  3956  000BEE  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3960  000BF0  0101               	movlb	1	; () banked
  3961  000BF2  0100               	movlb	0	; () banked
  3962  000BF4  C106  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  3963  000BF8  0101               	movlb	1	; () banked
  3964  000BFA  0100               	movlb	0	; () banked
  3965  000BFC  C105  F0B8         	movff	recv_msg@data,memcpy@d1
  3966  000C00  0E03               	movlw	3
  3967  000C02  0101               	movlb	1	; () banked
  3968  000C04  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  3969  000C06  0100               	movlb	0	; () banked
  3970  000C08  6FC2               	movwf	??_recv_msg& (0+255),b
  3971  000C0A  0E00               	movlw	0
  3972  000C0C  0101               	movlb	1	; () banked
  3973  000C0E  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3974  000C10  0100               	movlb	0	; () banked
  3975  000C12  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  3976  000C14  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  3977  000C18  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  3978  000C1C  C108  F0BC         	movff	recv_msg@tlength,memcpy@n
  3979  000C20  C109  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  3980  000C24  ECD3  F00C         	call	_memcpy	;wreg free
  3981                           
  3982                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  3983  000C28  0101               	movlb	1	; () banked
  3984  000C2A  EE20 F056          	lfsr	2,86
  3985  000C2E  0101               	movlb	1	; () banked
  3986  000C30  5100               	movf	recv_msg@qptr& (0+255),w,b
  3987  000C32  26D9               	addwf	fsr2l,f,c
  3988  000C34  0101               	movlb	1	; () banked
  3989  000C36  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3990  000C38  22DA               	addwfc	fsr2h,f,c
  3991  000C3A  0101               	movlb	1	; () banked
  3992  000C3C  EE10 F056          	lfsr	1,86
  3993  000C40  0101               	movlb	1	; () banked
  3994  000C42  5100               	movf	recv_msg@qptr& (0+255),w,b
  3995  000C44  26E1               	addwf	fsr1l,f,c
  3996  000C46  0101               	movlb	1	; () banked
  3997  000C48  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3998  000C4A  22E2               	addwfc	fsr1h,f,c
  3999  000C4C  50E7               	movf	indf1,w,c
  4000  000C4E  0100               	movlb	0	; () banked
  4001  000C50  6FC2               	movwf	??_recv_msg& (0+255),b
  4002  000C52  0E01               	movlw	1
  4003  000C54  0100               	movlb	0	; () banked
  4004  000C56  25C2               	addwf	??_recv_msg& (0+255),w,b
  4005  000C58  0100               	movlb	0	; () banked
  4006  000C5A  6FB8               	movwf	___awmod@dividend& (0+255),b
  4007  000C5C  0100               	movlb	0	; () banked
  4008  000C5E  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  4009  000C60  0E00               	movlw	0
  4010  000C62  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4011  000C64  0E00               	movlw	0
  4012  000C66  0100               	movlb	0	; () banked
  4013  000C68  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  4014  000C6A  0E05               	movlw	5
  4015  000C6C  0100               	movlb	0	; () banked
  4016  000C6E  6FBA               	movwf	___awmod@divisor& (0+255),b
  4017  000C70  EC5F  F009         	call	___awmod	;wreg free
  4018  000C74  0100               	movlb	0	; () banked
  4019  000C76  51B8               	movf	?___awmod& (0+255),w,b
  4020  000C78  6EDF               	movwf	indf2,c
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4024  000C7A  0101               	movlb	1	; () banked
  4025  000C7C  EE20 F002          	lfsr	2,2
  4026  000C80  0101               	movlb	1	; () banked
  4027  000C82  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4028  000C84  26D9               	addwf	fsr2l,f,c
  4029  000C86  0101               	movlb	1	; () banked
  4030  000C88  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4031  000C8A  22DA               	addwfc	fsr2h,f,c
  4032  000C8C  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  4033  000C90  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4034  000C94  CFDF FFE7          	movff	indf2,indf1
  4035                           
  4036                           ; BSR set to: 1
  4037                           ;messages.c: 91: qmsg->full = 0;
  4038  000C98  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4039  000C9C  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4040  000CA0  0E00               	movlw	0
  4041  000CA2  6EDF               	movwf	indf2,c
  4042                           
  4043                           ; BSR set to: 1
  4044                           ;messages.c: 92: return (tlength);
  4045  000CA4  0101               	movlb	1	; () banked
  4046  000CA6  5108               	movf	recv_msg@tlength& (0+255),w,b
  4047  000CA8  0012               	return	
  4048  000CAA                     l3718:
  4049                           
  4050                           ; BSR set to: 1
  4051                           ;messages.c: 94: return (-4);
  4052  000CAA  0EFC               	movlw	252
  4053  000CAC  0012               	return	
  4054  000CAE                     __end_of_recv_msg:
  4055                           	opt stack 0
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           postinc0	equ	0xFEE
  4064                           wreg	equ	0xFE8
  4065                           indf1	equ	0xFE7
  4066                           fsr1h	equ	0xFE2
  4067                           fsr1l	equ	0xFE1
  4068                           indf2	equ	0xFDF
  4069                           postinc2	equ	0xFDE
  4070                           postdec2	equ	0xFDD
  4071                           fsr2h	equ	0xFDA
  4072                           fsr2l	equ	0xFD9
  4073                           status	equ	0xFD8
  4074                           
  4075 ;; *************** function _memcpy *****************
  4076 ;; Defined at:
  4077 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  d1              2   56[BANK0 ] PTR void 
  4080 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4081 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  4082 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4083 ;;		 -> main@ic(38), 
  4084 ;;  s1              2   58[BANK0 ] PTR const void 
  4085 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4086 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4087 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  4088 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4089 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  4090 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  4091 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4092 ;;  n               2   60[BANK0 ] unsigned int 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  4095 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4096 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4097 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  4098 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4099 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  4100 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  4101 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4102 ;;  d               2   62[BANK0 ] PTR unsigned char 
  4103 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4104 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  4105 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4106 ;;		 -> main@ic(38), 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  2   56[BANK0 ] PTR void 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4116 ;;      Params:         0       6       0       0       0
  4117 ;;      Locals:         0       4       0       0       0
  4118 ;;      Temps:          0       0       0       0       0
  4119 ;;      Totals:         0      10       0       0       0
  4120 ;;Total ram usage:       10 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:   10
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_send_msg
  4127 ;;		_recv_msg
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text25
  4132  0019A6                     __ptext25:
  4133                           	opt stack 0
  4134  0019A6                     _memcpy:
  4135                           	opt stack 17
  4136                           
  4137                           ; BSR set to: 1
  4138                           ;incstack = 0
  4139  0019A6  0100               	movlb	0	; () banked
  4140  0019A8  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4141  0019AC  0100               	movlb	0	; () banked
  4142  0019AE  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4143  0019B2  0100               	movlb	0	; () banked
  4144  0019B4  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4145  0019B8  0100               	movlb	0	; () banked
  4146  0019BA  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4147  0019BE  D010               	goto	l3504
  4148  0019C0                     l3498:
  4149                           
  4150                           ; BSR set to: 0
  4151  0019C0  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4152  0019C4  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4153  0019C8  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4154  0019CC  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4155  0019D0  CFDF FFE7          	movff	indf2,indf1
  4156                           
  4157                           ; BSR set to: 0
  4158  0019D4  0100               	movlb	0	; () banked
  4159  0019D6  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4160  0019D8  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4161                           
  4162                           ; BSR set to: 0
  4163  0019DA  0100               	movlb	0	; () banked
  4164  0019DC  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4165  0019DE  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4166  0019E0                     l3504:
  4167                           
  4168                           ; BSR set to: 0
  4169  0019E0  0100               	movlb	0	; () banked
  4170  0019E2  07BC               	decf	memcpy@n& (0+255),f,b
  4171  0019E4  A0D8               	btfss	status,0,c
  4172  0019E6  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4173  0019E8  0100               	movlb	0	; () banked
  4174  0019EA  29BC               	incf	memcpy@n& (0+255),w,b
  4175  0019EC  B4D8               	btfsc	status,2,c
  4176  0019EE  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4177  0019F0  B4D8               	btfsc	status,2,c
  4178                           
  4179                           ; BSR set to: 0
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;	Return value of _memcpy is never used
  4183  0019F2  0012               	return	
  4184  0019F4  D7E5               	goto	l3498
  4185  0019F6                     __end_of_memcpy:
  4186                           	opt stack 0
  4187                           tblptru	equ	0xFF8
  4188                           tblptrh	equ	0xFF7
  4189                           tblptrl	equ	0xFF6
  4190                           tablat	equ	0xFF5
  4191                           prodh	equ	0xFF4
  4192                           prodl	equ	0xFF3
  4193                           intcon	equ	0xFF2
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           indf1	equ	0xFE7
  4197                           fsr1h	equ	0xFE2
  4198                           fsr1l	equ	0xFE1
  4199                           indf2	equ	0xFDF
  4200                           postinc2	equ	0xFDE
  4201                           postdec2	equ	0xFDD
  4202                           fsr2h	equ	0xFDA
  4203                           fsr2l	equ	0xFD9
  4204                           status	equ	0xFD8
  4205                           
  4206 ;; *************** function ___awmod *****************
  4207 ;; Defined at:
  4208 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  dividend        2   56[BANK0 ] int 
  4211 ;;  divisor         2   58[BANK0 ] int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  sign            1   61[BANK0 ] unsigned char 
  4214 ;;  counter         1   60[BANK0 ] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  2   56[BANK0 ] int 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, prodl
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4224 ;;      Params:         0       4       0       0       0
  4225 ;;      Locals:         0       2       0       0       0
  4226 ;;      Temps:          0       0       0       0       0
  4227 ;;      Totals:         0       6       0       0       0
  4228 ;;Total ram usage:        6 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:   10
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_send_msg
  4235 ;;		_recv_msg
  4236 ;;		i1_send_msg
  4237 ;;		i2_send_msg
  4238 ;;		i1_recv_msg
  4239 ;;		i2_recv_msg
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text26
  4244  0012BE                     __ptext26:
  4245                           	opt stack 0
  4246  0012BE                     ___awmod:
  4247                           	opt stack 17
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;incstack = 0
  4251  0012BE  0E00               	movlw	0
  4252  0012C0  0100               	movlb	0	; () banked
  4253  0012C2  6FBD               	movwf	___awmod@sign& (0+255),b
  4254                           
  4255                           ; BSR set to: 0
  4256  0012C4  0100               	movlb	0	; () banked
  4257  0012C6  51B9               	movf	(___awmod@dividend+1)& (0+255),w,b
  4258  0012C8  0A80               	xorlw	128
  4259  0012CA  6EF3               	movwf	prodl,c
  4260  0012CC  0E80               	movlw	128
  4261  0012CE  5CF3               	subwf	prodl,w,c
  4262  0012D0  0E00               	movlw	0
  4263  0012D2  B4D8               	btfsc	status,2,c
  4264  0012D4  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4265  0012D6  B0D8               	btfsc	status,0,c
  4266  0012D8  D009               	goto	l3514
  4267                           
  4268                           ; BSR set to: 0
  4269  0012DA  0100               	movlb	0	; () banked
  4270  0012DC  6DB8               	negf	___awmod@dividend& (0+255),b
  4271  0012DE  0100               	movlb	0	; () banked
  4272  0012E0  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4273  0012E2  B0D8               	btfsc	status,0,c
  4274  0012E4  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4275                           
  4276                           ; BSR set to: 0
  4277  0012E6  0E01               	movlw	1
  4278  0012E8  0100               	movlb	0	; () banked
  4279  0012EA  6FBD               	movwf	___awmod@sign& (0+255),b
  4280  0012EC                     l3514:
  4281                           
  4282                           ; BSR set to: 0
  4283  0012EC  0100               	movlb	0	; () banked
  4284  0012EE  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4285  0012F0  0A80               	xorlw	128
  4286  0012F2  6EF3               	movwf	prodl,c
  4287  0012F4  0E80               	movlw	128
  4288  0012F6  5CF3               	subwf	prodl,w,c
  4289  0012F8  0E00               	movlw	0
  4290  0012FA  B4D8               	btfsc	status,2,c
  4291  0012FC  5DBA               	subwf	___awmod@divisor& (0+255),w,b
  4292  0012FE  B0D8               	btfsc	status,0,c
  4293  001300  D006               	goto	l3518
  4294                           
  4295                           ; BSR set to: 0
  4296  001302  0100               	movlb	0	; () banked
  4297  001304  6DBA               	negf	___awmod@divisor& (0+255),b
  4298  001306  0100               	movlb	0	; () banked
  4299  001308  1FBB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4300  00130A  B0D8               	btfsc	status,0,c
  4301  00130C  2BBB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4302  00130E                     l3518:
  4303                           
  4304                           ; BSR set to: 0
  4305  00130E  0100               	movlb	0	; () banked
  4306  001310  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4307  001312  11BA               	iorwf	___awmod@divisor& (0+255),w,b
  4308  001314  B4D8               	btfsc	status,2,c
  4309  001316  D026               	goto	l3534
  4310                           
  4311                           ; BSR set to: 0
  4312  001318  0E01               	movlw	1
  4313  00131A  0100               	movlb	0	; () banked
  4314  00131C  6FBC               	movwf	___awmod@counter& (0+255),b
  4315  00131E  D006               	goto	l3524
  4316  001320                     l3522:
  4317                           
  4318                           ; BSR set to: 0
  4319  001320  0100               	movlb	0	; () banked
  4320  001322  90D8               	bcf	status,0,c
  4321  001324  37BA               	rlcf	___awmod@divisor& (0+255),f,b
  4322  001326  37BB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4323  001328  0100               	movlb	0	; () banked
  4324  00132A  2BBC               	incf	___awmod@counter& (0+255),f,b
  4325  00132C                     l3524:
  4326                           
  4327                           ; BSR set to: 0
  4328  00132C  0100               	movlb	0	; () banked
  4329  00132E  AFBB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4330  001330  D7F7               	goto	l3522
  4331  001332                     l3526:
  4332                           
  4333                           ; BSR set to: 0
  4334  001332  0100               	movlb	0	; () banked
  4335  001334  51BA               	movf	___awmod@divisor& (0+255),w,b
  4336  001336  0100               	movlb	0	; () banked
  4337  001338  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4338  00133A  0100               	movlb	0	; () banked
  4339  00133C  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4340  00133E  0100               	movlb	0	; () banked
  4341  001340  59B9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4342  001342  A0D8               	btfss	status,0,c
  4343  001344  D008               	goto	l3530
  4344                           
  4345                           ; BSR set to: 0
  4346  001346  0100               	movlb	0	; () banked
  4347  001348  51BA               	movf	___awmod@divisor& (0+255),w,b
  4348  00134A  0100               	movlb	0	; () banked
  4349  00134C  5FB8               	subwf	___awmod@dividend& (0+255),f,b
  4350  00134E  0100               	movlb	0	; () banked
  4351  001350  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4352  001352  0100               	movlb	0	; () banked
  4353  001354  5BB9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4354  001356                     l3530:
  4355                           
  4356                           ; BSR set to: 0
  4357  001356  0100               	movlb	0	; () banked
  4358  001358  90D8               	bcf	status,0,c
  4359  00135A  33BB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4360  00135C  33BA               	rrcf	___awmod@divisor& (0+255),f,b
  4361                           
  4362                           ; BSR set to: 0
  4363  00135E  0100               	movlb	0	; () banked
  4364  001360  2FBC               	decfsz	___awmod@counter& (0+255),f,b
  4365  001362  D7E7               	goto	l3526
  4366  001364                     l3534:
  4367                           
  4368                           ; BSR set to: 0
  4369  001364  0100               	movlb	0	; () banked
  4370  001366  51BD               	movf	___awmod@sign& (0+255),w,b
  4371  001368  B4D8               	btfsc	status,2,c
  4372  00136A  D006               	goto	l3538
  4373                           
  4374                           ; BSR set to: 0
  4375  00136C  0100               	movlb	0	; () banked
  4376  00136E  6DB8               	negf	___awmod@dividend& (0+255),b
  4377  001370  0100               	movlb	0	; () banked
  4378  001372  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4379  001374  B0D8               	btfsc	status,0,c
  4380  001376  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4381  001378                     l3538:
  4382                           
  4383                           ; BSR set to: 0
  4384  001378  C0B8  F0B8         	movff	___awmod@dividend,?___awmod
  4385  00137C  C0B9  F0B9         	movff	___awmod@dividend+1,?___awmod+1
  4386  001380  0012               	return	
  4387  001382                     __end_of___awmod:
  4388                           	opt stack 0
  4389                           tblptru	equ	0xFF8
  4390                           tblptrh	equ	0xFF7
  4391                           tblptrl	equ	0xFF6
  4392                           tablat	equ	0xFF5
  4393                           prodh	equ	0xFF4
  4394                           prodl	equ	0xFF3
  4395                           intcon	equ	0xFF2
  4396                           postinc0	equ	0xFEE
  4397                           wreg	equ	0xFE8
  4398                           indf1	equ	0xFE7
  4399                           fsr1h	equ	0xFE2
  4400                           fsr1l	equ	0xFE1
  4401                           indf2	equ	0xFDF
  4402                           postinc2	equ	0xFDE
  4403                           postdec2	equ	0xFDD
  4404                           fsr2h	equ	0xFDA
  4405                           fsr2l	equ	0xFD9
  4406                           status	equ	0xFD8
  4407                           
  4408 ;; *************** function _OpenTimer1 *****************
  4409 ;; Defined at:
  4410 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  config          1    wreg     unsigned char 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  config          1   56[BANK0 ] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;		None               void
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4424 ;;      Params:         0       0       0       0       0
  4425 ;;      Locals:         0       1       0       0       0
  4426 ;;      Temps:          0       0       0       0       0
  4427 ;;      Totals:         0       1       0       0       0
  4428 ;;Total ram usage:        1 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:   10
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text27
  4439  001B98                     __ptext27:
  4440                           	opt stack 0
  4441  001B98                     _OpenTimer1:
  4442                           	opt stack 20
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;incstack = 0
  4446                           ;OpenTimer1@config stored from wreg
  4447  001B98  0100               	movlb	0	; () banked
  4448  001B9A  6FB8               	movwf	OpenTimer1@config& (0+255),b
  4449                           
  4450                           ; BSR set to: 0
  4451  001B9C  0100               	movlb	0	; () banked
  4452  001B9E  51B8               	movf	OpenTimer1@config& (0+255),w,b
  4453  001BA0  0B7E               	andlw	126
  4454  001BA2  6ECD               	movwf	4045,c	;volatile
  4455                           
  4456                           ; BSR set to: 0
  4457  001BA4  0100               	movlb	0	; () banked
  4458  001BA6  ADB8               	btfss	OpenTimer1@config& (0+255),6,b
  4459  001BA8  D002               	goto	l569
  4460                           
  4461                           ; BSR set to: 0
  4462  001BAA  8ECD               	bsf	4045,7,c	;volatile
  4463  001BAC  D001               	goto	l3206
  4464  001BAE                     l569:
  4465                           
  4466                           ; BSR set to: 0
  4467  001BAE  9ECD               	bcf	4045,7,c	;volatile
  4468  001BB0                     l3206:
  4469                           
  4470                           ; BSR set to: 0
  4471  001BB0  0E00               	movlw	0
  4472  001BB2  6ECF               	movwf	4047,c	;volatile
  4473  001BB4  0E00               	movlw	0
  4474  001BB6  6ECE               	movwf	4046,c	;volatile
  4475                           
  4476                           ; BSR set to: 0
  4477  001BB8  909E               	bcf	3998,0,c	;volatile
  4478                           
  4479                           ; BSR set to: 0
  4480  001BBA  0100               	movlb	0	; () banked
  4481  001BBC  AFB8               	btfss	OpenTimer1@config& (0+255),7,b
  4482  001BBE  D002               	goto	l571
  4483                           
  4484                           ; BSR set to: 0
  4485  001BC0  809D               	bsf	3997,0,c	;volatile
  4486  001BC2  D001               	goto	l572
  4487  001BC4                     l571:
  4488                           
  4489                           ; BSR set to: 0
  4490  001BC4  909D               	bcf	3997,0,c	;volatile
  4491  001BC6                     l572:
  4492                           
  4493                           ; BSR set to: 0
  4494  001BC6  80CD               	bsf	4045,0,c	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497  001BC8  0012               	return	
  4498  001BCA                     __end_of_OpenTimer1:
  4499                           	opt stack 0
  4500                           tblptru	equ	0xFF8
  4501                           tblptrh	equ	0xFF7
  4502                           tblptrl	equ	0xFF6
  4503                           tablat	equ	0xFF5
  4504                           prodh	equ	0xFF4
  4505                           prodl	equ	0xFF3
  4506                           intcon	equ	0xFF2
  4507                           postinc0	equ	0xFEE
  4508                           wreg	equ	0xFE8
  4509                           indf1	equ	0xFE7
  4510                           fsr1h	equ	0xFE2
  4511                           fsr1l	equ	0xFE1
  4512                           indf2	equ	0xFDF
  4513                           postinc2	equ	0xFDE
  4514                           postdec2	equ	0xFDD
  4515                           fsr2h	equ	0xFDA
  4516                           fsr2l	equ	0xFD9
  4517                           status	equ	0xFD8
  4518                           
  4519 ;; *************** function _OpenTimer0 *****************
  4520 ;; Defined at:
  4521 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  config          1    wreg     unsigned char 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  config          1   56[BANK0 ] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;		None               void
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4535 ;;      Params:         0       0       0       0       0
  4536 ;;      Locals:         0       1       0       0       0
  4537 ;;      Temps:          0       0       0       0       0
  4538 ;;      Totals:         0       1       0       0       0
  4539 ;;Total ram usage:        1 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:   10
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_main
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text28
  4550  001D02                     __ptext28:
  4551                           	opt stack 0
  4552  001D02                     _OpenTimer0:
  4553                           	opt stack 20
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;incstack = 0
  4557                           ;OpenTimer0@config stored from wreg
  4558  001D02  0100               	movlb	0	; () banked
  4559  001D04  6FB8               	movwf	OpenTimer0@config& (0+255),b
  4560                           
  4561                           ; BSR set to: 0
  4562  001D06  0100               	movlb	0	; () banked
  4563  001D08  51B8               	movf	OpenTimer0@config& (0+255),w,b
  4564  001D0A  0B7F               	andlw	127
  4565  001D0C  6ED5               	movwf	4053,c	;volatile
  4566                           
  4567                           ; BSR set to: 0
  4568  001D0E  0E00               	movlw	0
  4569  001D10  6ED7               	movwf	4055,c	;volatile
  4570                           
  4571                           ; BSR set to: 0
  4572  001D12  0E00               	movlw	0
  4573  001D14  6ED6               	movwf	4054,c	;volatile
  4574                           
  4575                           ; BSR set to: 0
  4576  001D16  94F2               	bcf	intcon,2,c	;volatile
  4577                           
  4578                           ; BSR set to: 0
  4579  001D18  0100               	movlb	0	; () banked
  4580  001D1A  AFB8               	btfss	OpenTimer0@config& (0+255),7,b
  4581  001D1C  D002               	goto	l545
  4582                           
  4583                           ; BSR set to: 0
  4584  001D1E  8AF2               	bsf	intcon,5,c	;volatile
  4585  001D20  D001               	goto	l546
  4586  001D22                     l545:
  4587                           
  4588                           ; BSR set to: 0
  4589  001D22  9AF2               	bcf	intcon,5,c	;volatile
  4590  001D24                     l546:
  4591                           
  4592                           ; BSR set to: 0
  4593  001D24  8ED5               	bsf	4053,7,c	;volatile
  4594                           
  4595                           ; BSR set to: 0
  4596  001D26  0012               	return	
  4597  001D28                     __end_of_OpenTimer0:
  4598                           	opt stack 0
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           intcon	equ	0xFF2
  4606                           postinc0	equ	0xFEE
  4607                           wreg	equ	0xFE8
  4608                           indf1	equ	0xFE7
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _InterruptHandlerLow *****************
  4619 ;; Defined at:
  4620 ;;		line 135 in file "../src/interrupts.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;		None               void
  4627 ;; Registers used:
  4628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4634 ;;      Params:         0       0       0       0       0
  4635 ;;      Locals:         0       0       0       0       0
  4636 ;;      Temps:         17       0       0       0       0
  4637 ;;      Totals:        17       0       0       0       0
  4638 ;;Total ram usage:       17 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    9
  4641 ;; This function calls:
  4642 ;;		_timer1_int_handler
  4643 ;;		_uart_receive_interrupt_handler
  4644 ;;		_uart_transmit_interrupt_handler
  4645 ;; This function is called by:
  4646 ;;		Interrupt level 1
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	intcodelo
  4651  000018                     __pintcodelo:
  4652                           	opt stack 0
  4653  000018                     _InterruptHandlerLow:
  4654                           	opt stack 16
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;incstack = 0
  4658  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4659  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4660  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4661  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4662  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4663  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4664  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4665  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4666  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4667  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4668  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4669  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4670  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4671  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4672  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4673  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4674  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4675                           
  4676                           ;interrupts.c: 138: if (PIR1bits.TMR1IF) {
  4677  00005C  A09E               	btfss	3998,0,c	;volatile
  4678  00005E  D003               	goto	i1l4142
  4679                           
  4680                           ;interrupts.c: 139: PIR1bits.TMR1IF = 0;
  4681  000060  909E               	bcf	3998,0,c	;volatile
  4682                           
  4683                           ;interrupts.c: 143: timer1_int_handler();
  4684  000062  EC43  F00E         	call	_timer1_int_handler	;wreg free
  4685  000066                     i1l4142:
  4686                           
  4687                           ;interrupts.c: 144: }
  4688                           ;interrupts.c: 147: if (PIR1bits.RCIF) {
  4689  000066  AA9E               	btfss	3998,5,c	;volatile
  4690  000068  D003               	goto	i1l4148
  4691                           
  4692                           ;interrupts.c: 148: PIR1bits.RCIF = 0;
  4693  00006A  9A9E               	bcf	3998,5,c	;volatile
  4694                           
  4695                           ;interrupts.c: 152: uart_receive_interrupt_handler();
  4696  00006C  ECF1  F004         	call	_uart_receive_interrupt_handler	;wreg free
  4697  000070                     i1l4148:
  4698                           
  4699                           ;interrupts.c: 153: }
  4700                           ;interrupts.c: 157: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4701  000070  B89E               	btfsc	3998,4,c	;volatile
  4702  000072  A89D               	btfss	3997,4,c	;volatile
  4703  000074  D002               	goto	i1l54
  4704                           
  4705                           ;interrupts.c: 158: {
  4706                           ;interrupts.c: 162: uart_transmit_interrupt_handler();
  4707  000076  ECCB  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4708  00007A                     i1l54:
  4709  00007A  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4710  00007E  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4711  000082  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4712  000086  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4713  00008A  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4714  00008E  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4715  000092  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4716  000096  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4717  00009A  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4718  00009E  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4719  0000A2  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4720  0000A6  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4721  0000AA  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4722  0000AE  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4723  0000B2  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4724  0000B6  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4725  0000BA  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4726  0000BE  0010               	retfie	
  4727  0000C0                     __end_of_InterruptHandlerLow:
  4728                           	opt stack 0
  4729                           pclatu	equ	0xFFB
  4730                           pclath	equ	0xFFA
  4731                           tblptru	equ	0xFF8
  4732                           tblptrh	equ	0xFF7
  4733                           tblptrl	equ	0xFF6
  4734                           tablat	equ	0xFF5
  4735                           prodh	equ	0xFF4
  4736                           prodl	equ	0xFF3
  4737                           intcon	equ	0xFF2
  4738                           postinc0	equ	0xFEE
  4739                           fsr0h	equ	0xFEA
  4740                           fsr0l	equ	0xFE9
  4741                           wreg	equ	0xFE8
  4742                           indf1	equ	0xFE7
  4743                           fsr1h	equ	0xFE2
  4744                           fsr1l	equ	0xFE1
  4745                           bsr	equ	0xFE0
  4746                           indf2	equ	0xFDF
  4747                           postinc2	equ	0xFDE
  4748                           postdec2	equ	0xFDD
  4749                           fsr2h	equ	0xFDA
  4750                           fsr2l	equ	0xFD9
  4751                           status	equ	0xFD8
  4752                           
  4753 ;; *************** function _uart_transmit_interrupt_handler *****************
  4754 ;; Defined at:
  4755 ;;		line 200 in file "../src/my_uart.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  message_stat    1   32[COMRAM] char 
  4760 ;;  data            2   29[COMRAM] unsigned char [2]
  4761 ;;  msgtype         1   31[COMRAM] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;		None               void
  4764 ;; Registers used:
  4765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4771 ;;      Params:         0       0       0       0       0
  4772 ;;      Locals:         4       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0
  4774 ;;      Totals:         4       0       0       0       0
  4775 ;;Total ram usage:        4 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    8
  4778 ;; This function calls:
  4779 ;;		_FromMainLow_recvmsg
  4780 ;;		i1_blip
  4781 ;; This function is called by:
  4782 ;;		_InterruptHandlerLow
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text30
  4787  001596                     __ptext30:
  4788                           	opt stack 0
  4789  001596                     _uart_transmit_interrupt_handler:
  4790                           	opt stack 16
  4791                           
  4792                           ;my_uart.c: 202: blip();
  4793                           
  4794                           ;incstack = 0
  4795  001596  EC12  F00F         	call	i1_blip	;wreg free
  4796                           
  4797                           ;my_uart.c: 204: static unsigned char done = 1;
  4798                           ;my_uart.c: 205: static unsigned char index = 0;
  4799                           ;my_uart.c: 207: unsigned char data[2];
  4800                           ;my_uart.c: 210: unsigned char msgtype = 31;
  4801  00159A  0E1F               	movlw	31
  4802  00159C  6E20               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4803                           
  4804                           ;my_uart.c: 212: if( done )
  4805  00159E  5063               	movf	uart_transmit_interrupt_handler@done,w,c
  4806  0015A0  B4D8               	btfsc	status,2,c
  4807  0015A2  D02C               	goto	i1l4088
  4808                           
  4809                           ;my_uart.c: 213: {
  4810                           ;my_uart.c: 214: signed char message_status = FromMainLow_recvmsg(2,&msgtype, (void*)dat
      +                          a );
  4811  0015A4  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4812  0015A6  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4813  0015A8  0E20               	movlw	low uart_transmit_interrupt_handler@msgtype
  4814  0015AA  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4815  0015AC  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4816  0015AE  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4817  0015B0  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4818  0015B2  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4819  0015B4  0E02               	movlw	2
  4820  0015B6  EC6D  F00E         	call	_FromMainLow_recvmsg
  4821  0015BA  6E21               	movwf	uart_transmit_interrupt_handler@message_status,c
  4822                           
  4823                           ;my_uart.c: 216: if( message_status == -4)
  4824  0015BC  5021               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4825  0015BE  0AFC               	xorlw	252
  4826  0015C0  A4D8               	btfss	status,2,c
  4827  0015C2  D002               	goto	i1l4064
  4828                           
  4829                           ;my_uart.c: 217: {
  4830                           ;my_uart.c: 219: PIE1bits.TX1IE = 0;
  4831  0015C4  989D               	bcf	3997,4,c	;volatile
  4832                           
  4833                           ;my_uart.c: 220: }
  4834  0015C6  0012               	return	
  4835  0015C8                     i1l4064:
  4836                           
  4837                           ;my_uart.c: 221: else if( message_status > 0 )
  4838  0015C8  5021               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4839  0015CA  0A80               	xorlw	128
  4840  0015CC  0F7F               	addlw	-129
  4841  0015CE  A0D8               	btfss	status,0,c
  4842  0015D0  0012               	return	
  4843                           
  4844                           ;my_uart.c: 222: {
  4845                           ;my_uart.c: 224: index = 0;
  4846  0015D2  0E00               	movlw	0
  4847  0015D4  6E62               	movwf	uart_transmit_interrupt_handler@index,c
  4848                           
  4849                           ;my_uart.c: 225: done = 0;
  4850  0015D6  0E00               	movlw	0
  4851  0015D8  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4852                           
  4853                           ;my_uart.c: 227: TXREG1 = data[index];
  4854  0015DA  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4855  0015DC  0D01               	mullw	1
  4856  0015DE  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4857  0015E0  24F3               	addwf	prodl,w,c
  4858  0015E2  6ED9               	movwf	fsr2l,c
  4859  0015E4  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4860  0015E6  20F4               	addwfc	prodh,w,c
  4861  0015E8  6EDA               	movwf	fsr2h,c
  4862  0015EA  50DF               	movf	indf2,w,c
  4863  0015EC  6EAD               	movwf	4013,c	;volatile
  4864                           
  4865                           ;my_uart.c: 228: index++;
  4866  0015EE  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4867                           
  4868                           ;my_uart.c: 229: if( index >= 2 )
  4869  0015F0  0E01               	movlw	1
  4870  0015F2  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4871  0015F4  0012               	return	
  4872                           
  4873                           ;my_uart.c: 230: {
  4874                           ;my_uart.c: 231: done = 1;
  4875  0015F6  0E01               	movlw	1
  4876  0015F8  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4877  0015FA  0012               	return	
  4878  0015FC                     i1l4088:
  4879                           
  4880                           ;my_uart.c: 248: else
  4881                           ;my_uart.c: 249: {
  4882                           ;my_uart.c: 251: TXREG1 = data[index];
  4883  0015FC  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4884  0015FE  0D01               	mullw	1
  4885  001600  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4886  001602  24F3               	addwf	prodl,w,c
  4887  001604  6ED9               	movwf	fsr2l,c
  4888  001606  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4889  001608  20F4               	addwfc	prodh,w,c
  4890  00160A  6EDA               	movwf	fsr2h,c
  4891  00160C  50DF               	movf	indf2,w,c
  4892  00160E  6EAD               	movwf	4013,c	;volatile
  4893                           
  4894                           ;my_uart.c: 252: index++;
  4895  001610  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4896                           
  4897                           ;my_uart.c: 253: if( index >= 2 )
  4898  001612  0E01               	movlw	1
  4899  001614  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4900  001616  0012               	return	
  4901                           
  4902                           ;my_uart.c: 254: {
  4903                           ;my_uart.c: 255: done = 1;
  4904  001618  0E01               	movlw	1
  4905  00161A  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4906  00161C  0012               	return	
  4907  00161E                     __end_of_uart_transmit_interrupt_handler:
  4908                           	opt stack 0
  4909                           pclatu	equ	0xFFB
  4910                           pclath	equ	0xFFA
  4911                           tblptru	equ	0xFF8
  4912                           tblptrh	equ	0xFF7
  4913                           tblptrl	equ	0xFF6
  4914                           tablat	equ	0xFF5
  4915                           prodh	equ	0xFF4
  4916                           prodl	equ	0xFF3
  4917                           intcon	equ	0xFF2
  4918                           postinc0	equ	0xFEE
  4919                           fsr0h	equ	0xFEA
  4920                           fsr0l	equ	0xFE9
  4921                           wreg	equ	0xFE8
  4922                           indf1	equ	0xFE7
  4923                           fsr1h	equ	0xFE2
  4924                           fsr1l	equ	0xFE1
  4925                           bsr	equ	0xFE0
  4926                           indf2	equ	0xFDF
  4927                           postinc2	equ	0xFDE
  4928                           postdec2	equ	0xFDD
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           status	equ	0xFD8
  4932                           
  4933 ;; *************** function i1_blip *****************
  4934 ;; Defined at:
  4935 ;;		line 11 in file "../src/debug.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;		None               void
  4942 ;; Registers used:
  4943 ;;		None
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4949 ;;      Params:         0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    5
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_uart_transmit_interrupt_handler
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text31
  4964  001E24                     __ptext31:
  4965                           	opt stack 0
  4966  001E24                     i1_blip:
  4967                           	opt stack 18
  4968                           
  4969                           ;debug.c: 13: LATDbits.LD2 = 0;
  4970                           
  4971                           ;incstack = 0
  4972  001E24  948C               	bcf	3980,2,c	;volatile
  4973                           
  4974                           ;debug.c: 14: LATDbits.LD2 = 1;
  4975  001E26  848C               	bsf	3980,2,c	;volatile
  4976                           
  4977                           ;debug.c: 15: LATDbits.LD2 = 0;
  4978  001E28  948C               	bcf	3980,2,c	;volatile
  4979  001E2A  0012               	return	
  4980  001E2C                     __end_ofi1_blip:
  4981                           	opt stack 0
  4982                           pclatu	equ	0xFFB
  4983                           pclath	equ	0xFFA
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           intcon	equ	0xFF2
  4991                           postinc0	equ	0xFEE
  4992                           fsr0h	equ	0xFEA
  4993                           fsr0l	equ	0xFE9
  4994                           wreg	equ	0xFE8
  4995                           indf1	equ	0xFE7
  4996                           fsr1h	equ	0xFE2
  4997                           fsr1l	equ	0xFE1
  4998                           bsr	equ	0xFE0
  4999                           indf2	equ	0xFDF
  5000                           postinc2	equ	0xFDE
  5001                           postdec2	equ	0xFDD
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function _FromMainLow_recvmsg *****************
  5007 ;; Defined at:
  5008 ;;		line 159 in file "../src/messages.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  maxlength       1    wreg     unsigned char 
  5011 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5012 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5013 ;;  data            2   26[COMRAM] PTR void 
  5014 ;;		 -> uart_transmit_interrupt_handler@data(2), 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  maxlength       1   28[COMRAM] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      char 
  5019 ;; Registers used:
  5020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5026 ;;      Params:         4       0       0       0       0
  5027 ;;      Locals:         1       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0
  5029 ;;      Totals:         5       0       0       0       0
  5030 ;;Total ram usage:        5 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    7
  5033 ;; This function calls:
  5034 ;;		i1_recv_msg
  5035 ;; This function is called by:
  5036 ;;		_uart_transmit_interrupt_handler
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text32
  5041  001CDA                     __ptext32:
  5042                           	opt stack 0
  5043  001CDA                     _FromMainLow_recvmsg:
  5044                           	opt stack 16
  5045                           
  5046                           ;incstack = 0
  5047                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5048  001CDA  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5049                           
  5050                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5051  001CDC  0102               	movlb	2	; () banked
  5052  001CDE  0E02               	movlw	high _FromMainLow_MQ
  5053  001CE0  6E0C               	movwf	i1recv_msg@qptr+1,c
  5054  001CE2  0102               	movlb	2	; () banked
  5055  001CE4  0E00               	movlw	low _FromMainLow_MQ
  5056  001CE6  6E0B               	movwf	i1recv_msg@qptr,c
  5057  001CE8  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5058  001CEC  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5059  001CF0  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5060  001CF4  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5061  001CF8  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5062  001CFC  EC86  F008         	call	i1_recv_msg	;wreg free
  5063  001D00  0012               	return	
  5064  001D02                     __end_of_FromMainLow_recvmsg:
  5065                           	opt stack 0
  5066                           pclatu	equ	0xFFB
  5067                           pclath	equ	0xFFA
  5068                           tblptru	equ	0xFF8
  5069                           tblptrh	equ	0xFF7
  5070                           tblptrl	equ	0xFF6
  5071                           tablat	equ	0xFF5
  5072                           prodh	equ	0xFF4
  5073                           prodl	equ	0xFF3
  5074                           intcon	equ	0xFF2
  5075                           postinc0	equ	0xFEE
  5076                           fsr0h	equ	0xFEA
  5077                           fsr0l	equ	0xFE9
  5078                           wreg	equ	0xFE8
  5079                           indf1	equ	0xFE7
  5080                           fsr1h	equ	0xFE2
  5081                           fsr1l	equ	0xFE1
  5082                           bsr	equ	0xFE0
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function i1_recv_msg *****************
  5091 ;; Defined at:
  5092 ;;		line 63 in file "../src/messages.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5095 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5096 ;;  maxlength       1   12[COMRAM] unsigned char 
  5097 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5098 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  5099 ;;		 -> main@msgtype(1), 
  5100 ;;  data            2   15[COMRAM] PTR void 
  5101 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  5102 ;;		 -> main@ic(38), 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5105 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5106 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5107 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5108 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      char 
  5111 ;; Registers used:
  5112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5118 ;;      Params:         7       0       0       0       0
  5119 ;;      Locals:         5       0       0       0       0
  5120 ;;      Temps:          2       0       0       0       0
  5121 ;;      Totals:        14       0       0       0       0
  5122 ;;Total ram usage:       14 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    6
  5125 ;; This function calls:
  5126 ;;		i1___awmod
  5127 ;;		i1_memcpy
  5128 ;; This function is called by:
  5129 ;;		_FromMainLow_recvmsg
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text33
  5134  00110C                     __ptext33:
  5135                           	opt stack 0
  5136  00110C                     i1_recv_msg:
  5137                           	opt stack 16
  5138                           
  5139                           ;messages.c: 64: unsigned char slot;
  5140                           ;messages.c: 68: msg *qmsg;
  5141                           ;messages.c: 69: size_t tlength;
  5142                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5143                           
  5144                           ;incstack = 0
  5145  00110C  EE20 F056          	lfsr	2,86
  5146  001110  500B               	movf	i1recv_msg@qptr,w,c
  5147  001112  26D9               	addwf	fsr2l,f,c
  5148  001114  500C               	movf	i1recv_msg@qptr+1,w,c
  5149  001116  22DA               	addwfc	fsr2h,f,c
  5150  001118  50DF               	movf	indf2,w,c
  5151  00111A  6E14               	movwf	i1recv_msg@slot,c
  5152                           
  5153                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5154  00111C  5014               	movf	i1recv_msg@slot,w,c
  5155  00111E  0D11               	mullw	17
  5156  001120  50F3               	movf	prodl,w,c
  5157  001122  240B               	addwf	i1recv_msg@qptr,w,c
  5158  001124  6E17               	movwf	i1recv_msg@qmsg,c
  5159  001126  50F4               	movf	prodh,w,c
  5160  001128  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5161  00112A  6E18               	movwf	i1recv_msg@qmsg+1,c
  5162                           
  5163                           ;messages.c: 74: if (qmsg->full == 1) {
  5164  00112C  0E01               	movlw	1
  5165  00112E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5166  001132  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5167  001136  62DF               	cpfseq	indf2,c
  5168  001138  D05B               	goto	i1l3646
  5169                           
  5170                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5171  00113A  EE20 F001          	lfsr	2,1
  5172  00113E  5017               	movf	i1recv_msg@qmsg,w,c
  5173  001140  26D9               	addwf	fsr2l,f,c
  5174  001142  5018               	movf	i1recv_msg@qmsg+1,w,c
  5175  001144  22DA               	addwfc	fsr2h,f,c
  5176  001146  50DF               	movf	indf2,w,c
  5177  001148  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5178  00114A  B0D8               	btfsc	status,0,c
  5179  00114C  D002               	goto	i1l3630
  5180                           
  5181                           ;messages.c: 77: return (-3);
  5182  00114E  0EFD               	movlw	253
  5183  001150  0012               	return	
  5184  001152                     i1l3630:
  5185                           
  5186                           ;messages.c: 78: }
  5187                           ;messages.c: 80: tlength = qmsg->length;
  5188  001152  EE20 F001          	lfsr	2,1
  5189  001156  5017               	movf	i1recv_msg@qmsg,w,c
  5190  001158  26D9               	addwf	fsr2l,f,c
  5191  00115A  5018               	movf	i1recv_msg@qmsg+1,w,c
  5192  00115C  22DA               	addwfc	fsr2h,f,c
  5193  00115E  50DF               	movf	indf2,w,c
  5194  001160  6E12               	movwf	??i1_recv_msg& (0+255),c
  5195  001162  5012               	movf	??i1_recv_msg,w,c
  5196  001164  6E15               	movwf	i1recv_msg@tlength,c
  5197  001166  6A16               	clrf	i1recv_msg@tlength+1,c
  5198                           
  5199                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5200  001168  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5201  00116C  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5202  001170  0E03               	movlw	3
  5203  001172  2417               	addwf	i1recv_msg@qmsg,w,c
  5204  001174  6E12               	movwf	??i1_recv_msg& (0+255),c
  5205  001176  0E00               	movlw	0
  5206  001178  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5207  00117A  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5208  00117C  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5209  001180  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5210  001184  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5211  001188  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5212  00118C  EC23  F00D         	call	i1_memcpy	;wreg free
  5213                           
  5214                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5215  001190  EE20 F056          	lfsr	2,86
  5216  001194  500B               	movf	i1recv_msg@qptr,w,c
  5217  001196  26D9               	addwf	fsr2l,f,c
  5218  001198  500C               	movf	i1recv_msg@qptr+1,w,c
  5219  00119A  22DA               	addwfc	fsr2h,f,c
  5220  00119C  EE10 F056          	lfsr	1,86
  5221  0011A0  500B               	movf	i1recv_msg@qptr,w,c
  5222  0011A2  26E1               	addwf	fsr1l,f,c
  5223  0011A4  500C               	movf	i1recv_msg@qptr+1,w,c
  5224  0011A6  22E2               	addwfc	fsr1h,f,c
  5225  0011A8  50E7               	movf	indf1,w,c
  5226  0011AA  6E12               	movwf	??i1_recv_msg& (0+255),c
  5227  0011AC  0E01               	movlw	1
  5228  0011AE  2412               	addwf	??i1_recv_msg,w,c
  5229  0011B0  6E01               	movwf	i1___awmod@dividend,c
  5230  0011B2  6A02               	clrf	i1___awmod@dividend+1,c
  5231  0011B4  0E00               	movlw	0
  5232  0011B6  2202               	addwfc	i1___awmod@dividend+1,f,c
  5233  0011B8  0E00               	movlw	0
  5234  0011BA  6E04               	movwf	i1___awmod@divisor+1,c
  5235  0011BC  0E05               	movlw	5
  5236  0011BE  6E03               	movwf	i1___awmod@divisor,c
  5237  0011C0  EC83  F00A         	call	i1___awmod	;wreg free
  5238  0011C4  5001               	movf	?i1___awmod,w,c
  5239  0011C6  6EDF               	movwf	indf2,c
  5240                           
  5241                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5242  0011C8  EE20 F002          	lfsr	2,2
  5243  0011CC  5017               	movf	i1recv_msg@qmsg,w,c
  5244  0011CE  26D9               	addwf	fsr2l,f,c
  5245  0011D0  5018               	movf	i1recv_msg@qmsg+1,w,c
  5246  0011D2  22DA               	addwfc	fsr2h,f,c
  5247  0011D4  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5248  0011D8  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5249  0011DC  CFDF FFE7          	movff	indf2,indf1
  5250                           
  5251                           ;messages.c: 91: qmsg->full = 0;
  5252  0011E0  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5253  0011E4  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5254  0011E8  0E00               	movlw	0
  5255  0011EA  6EDF               	movwf	indf2,c
  5256                           
  5257                           ;messages.c: 92: return (tlength);
  5258  0011EC  5015               	movf	i1recv_msg@tlength,w,c
  5259  0011EE  0012               	return	
  5260  0011F0                     i1l3646:
  5261                           
  5262                           ;messages.c: 94: return (-4);
  5263  0011F0  0EFC               	movlw	252
  5264  0011F2  0012               	return	
  5265  0011F4                     __end_ofi1_recv_msg:
  5266                           	opt stack 0
  5267                           pclatu	equ	0xFFB
  5268                           pclath	equ	0xFFA
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           prodh	equ	0xFF4
  5274                           prodl	equ	0xFF3
  5275                           intcon	equ	0xFF2
  5276                           postinc0	equ	0xFEE
  5277                           fsr0h	equ	0xFEA
  5278                           fsr0l	equ	0xFE9
  5279                           wreg	equ	0xFE8
  5280                           indf1	equ	0xFE7
  5281                           fsr1h	equ	0xFE2
  5282                           fsr1l	equ	0xFE1
  5283                           bsr	equ	0xFE0
  5284                           indf2	equ	0xFDF
  5285                           postinc2	equ	0xFDE
  5286                           postdec2	equ	0xFDD
  5287                           fsr2h	equ	0xFDA
  5288                           fsr2l	equ	0xFD9
  5289                           status	equ	0xFD8
  5290                           
  5291 ;; *************** function _uart_receive_interrupt_handler *****************
  5292 ;; Defined at:
  5293 ;;		line 61 in file "../src/my_uart.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5298 ;;  message_coun    1   50[COMRAM] unsigned char 
  5299 ;;  status          1   42[COMRAM] unsigned char 
  5300 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5301 ;;  msg_id          1   51[COMRAM] unsigned char 
  5302 ;;  status          1   43[COMRAM] unsigned char 
  5303 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5304 ;;  bad_counter_    2   44[COMRAM] unsigned char [2]
  5305 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5306 ;;  i               2   52[COMRAM] int 
  5307 ;;  checksum        1   46[COMRAM] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;		None               void
  5310 ;; Registers used:
  5311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5317 ;;      Params:         0       0       0       0       0
  5318 ;;      Locals:        26       0       0       0       0
  5319 ;;      Temps:          2       0       0       0       0
  5320 ;;      Totals:        28       0       0       0       0
  5321 ;;Total ram usage:       28 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    8
  5324 ;; This function calls:
  5325 ;;		_ToMainLow_sendmsg
  5326 ;; This function is called by:
  5327 ;;		_InterruptHandlerLow
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text34
  5332  0009E2                     __ptext34:
  5333                           	opt stack 0
  5334  0009E2                     _uart_receive_interrupt_handler:
  5335                           	opt stack 16
  5336                           
  5337                           ;my_uart.c: 64: static unsigned char frame[(14 + 2 + 2)];
  5338                           ;my_uart.c: 65: static unsigned char index = 0;
  5339                           ;my_uart.c: 66: static unsigned char done = 0;
  5340                           ;my_uart.c: 67: static unsigned char received_counter = 0;
  5341                           ;my_uart.c: 69: static unsigned char start_byte_bad = 0;
  5342                           ;my_uart.c: 70: static unsigned char error = 0;
  5343                           ;my_uart.c: 72: if(!done)
  5344                           
  5345                           ;incstack = 0
  5346  0009E2  665D               	tstfsz	uart_receive_interrupt_handler@done,c
  5347  0009E4  D03B               	goto	i1l3994
  5348                           
  5349                           ;my_uart.c: 73: {
  5350                           ;my_uart.c: 74: frame[index] = RCREG1;
  5351  0009E6  505F               	movf	uart_receive_interrupt_handler@index,w,c
  5352  0009E8  0D01               	mullw	1
  5353  0009EA  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5354  0009EC  24F3               	addwf	prodl,w,c
  5355  0009EE  6ED9               	movwf	fsr2l,c
  5356  0009F0  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5357  0009F2  20F4               	addwfc	prodh,w,c
  5358  0009F4  6EDA               	movwf	fsr2h,c
  5359  0009F6  CFAE FFDF          	movff	4014,indf2	;volatile
  5360                           
  5361                           ;my_uart.c: 78: }
  5362                           ;my_uart.c: 79: if( index == 0 )
  5363                           
  5364                           ;my_uart.c: 76: {
  5365  0009FA  665F               	tstfsz	uart_receive_interrupt_handler@index,c
  5366  0009FC  D018               	goto	i1l3980
  5367                           
  5368                           ;my_uart.c: 80: {
  5369                           ;my_uart.c: 81: if( frame[0] != 0xff )
  5370  0009FE  2848               	incf	uart_receive_interrupt_handler@frame,w,c
  5371  000A00  B4D8               	btfsc	status,2,c
  5372  000A02  D012               	goto	i1l3978
  5373                           
  5374                           ;my_uart.c: 82: {
  5375                           ;my_uart.c: 83: if( !start_byte_bad )
  5376  000A04  6661               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5377  000A06  D00D               	goto	i1l3972
  5378                           
  5379                           ;my_uart.c: 84: {
  5380                           ;my_uart.c: 85: start_byte_bad = 1;
  5381  000A08  0E01               	movlw	1
  5382  000A0A  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5383                           
  5384                           ;my_uart.c: 86: unsigned char bad_start_id = received_counter;
  5385  000A0C  C060  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5386                           
  5387                           ;my_uart.c: 87: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5388  000A10  0E22               	movlw	34
  5389  000A12  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5390  000A14  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5391  000A16  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5392  000A18  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5393  000A1A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5394  000A1C  0E01               	movlw	1
  5395  000A1E  EC94  F00E         	call	_ToMainLow_sendmsg
  5396  000A22                     i1l3972:
  5397                           
  5398                           ;my_uart.c: 89: }
  5399                           ;my_uart.c: 90: index = 0;
  5400  000A22  0E00               	movlw	0
  5401  000A24  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5402  000A26  0012               	return	
  5403  000A28                     i1l3978:
  5404                           
  5405                           ;my_uart.c: 93: else
  5406                           ;my_uart.c: 94: {
  5407                           ;my_uart.c: 95: start_byte_bad = 0;
  5408  000A28  0E00               	movlw	0
  5409  000A2A  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5410  000A2C  D016               	goto	i1l3992
  5411  000A2E                     i1l3980:
  5412                           
  5413                           ;my_uart.c: 98: else if( index >= (14 + 2 + 2) - 1 )
  5414  000A2E  0E10               	movlw	16
  5415  000A30  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5416  000A32  D013               	goto	i1l3992
  5417                           
  5418                           ;my_uart.c: 99: {
  5419                           ;my_uart.c: 100: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5420  000A34  5059               	movf	uart_receive_interrupt_handler@frame+17,w,c
  5421  000A36  0AFE               	xorlw	254
  5422  000A38  B4D8               	btfsc	status,2,c
  5423  000A3A  D00F               	goto	i1l3992
  5424                           
  5425                           ;my_uart.c: 101: {
  5426                           ;my_uart.c: 103: index = 0;
  5427  000A3C  0E00               	movlw	0
  5428  000A3E  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5429                           
  5430                           ;my_uart.c: 106: unsigned char bad_end_id = received_counter;
  5431  000A40  C060  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5432                           
  5433                           ;my_uart.c: 107: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5434  000A44  0E23               	movlw	35
  5435  000A46  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5436  000A48  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5437  000A4A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5438  000A4C  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5439  000A4E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5440  000A50  0E01               	movlw	1
  5441  000A52  EC94  F00E         	call	_ToMainLow_sendmsg
  5442                           
  5443                           ;my_uart.c: 108: error = 1;
  5444  000A56  0E01               	movlw	1
  5445  000A58  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5446  000A5A                     i1l3992:
  5447                           
  5448                           ;my_uart.c: 109: }
  5449                           ;my_uart.c: 110: }
  5450                           ;my_uart.c: 111: index++;
  5451  000A5A  2A5F               	incf	uart_receive_interrupt_handler@index,f,c
  5452  000A5C                     i1l3994:
  5453                           
  5454                           ;my_uart.c: 112: }
  5455                           ;my_uart.c: 114: if( index >= (14 + 2 + 2) )
  5456  000A5C  0E11               	movlw	17
  5457  000A5E  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5458  000A60  0012               	return	
  5459                           
  5460                           ;my_uart.c: 115: {
  5461                           ;my_uart.c: 116: index = 0;
  5462  000A62  0E00               	movlw	0
  5463  000A64  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5464                           
  5465                           ;my_uart.c: 118: if( received_counter != frame[1] )
  5466  000A66  5049               	movf	uart_receive_interrupt_handler@frame+1,w,c
  5467  000A68  1860               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5468  000A6A  B4D8               	btfsc	status,2,c
  5469  000A6C  D00F               	goto	i1l4004
  5470                           
  5471                           ;my_uart.c: 119: {
  5472                           ;my_uart.c: 121: unsigned char bad_counter_id[2];
  5473                           ;my_uart.c: 122: bad_counter_id[0] = received_counter;
  5474  000A6E  C060  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5475                           
  5476                           ;my_uart.c: 123: bad_counter_id[1] = frame[1];
  5477  000A72  C049  F02E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5478                           
  5479                           ;my_uart.c: 124: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5480  000A76  0E21               	movlw	33
  5481  000A78  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5482  000A7A  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5483  000A7C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5484  000A7E  0E2D               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5485  000A80  6E18               	movwf	ToMainLow_sendmsg@data,c
  5486  000A82  0E02               	movlw	2
  5487  000A84  EC94  F00E         	call	_ToMainLow_sendmsg
  5488                           
  5489                           ;my_uart.c: 125: error = 1;
  5490  000A88  0E01               	movlw	1
  5491  000A8A  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5492  000A8C                     i1l4004:
  5493                           
  5494                           ;my_uart.c: 126: }
  5495                           ;my_uart.c: 129: unsigned char gooey_uart_center[14];
  5496                           ;my_uart.c: 130: unsigned char checksum = 0;
  5497  000A8C  0E00               	movlw	0
  5498  000A8E  6E2F               	movwf	uart_receive_interrupt_handler@checksum,c
  5499                           
  5500                           ;my_uart.c: 131: int i;
  5501                           ;my_uart.c: 132: for(i = 0; i < 14; i++)
  5502  000A90  0E00               	movlw	0
  5503  000A92  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5504  000A94  0E00               	movlw	0
  5505  000A96  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5506  000A98  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5507  000A9A  0A80               	xorlw	128
  5508  000A9C  0F80               	addlw	-128
  5509  000A9E  0E0E               	movlw	14
  5510  000AA0  B4D8               	btfsc	status,2,c
  5511  000AA2  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5512  000AA4  B0D8               	btfsc	status,0,c
  5513  000AA6  D01F               	goto	i1l4020
  5514                           
  5515                           ;my_uart.c: 133: {
  5516                           ;my_uart.c: 134: gooey_uart_center[i] = frame[i+2];
  5517  000AA8  0E02               	movlw	2
  5518  000AAA  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5519  000AAC  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5520  000AAE  0E00               	movlw	0
  5521  000AB0  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5522  000AB2  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5523  000AB4  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5524  000AB6  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5525  000AB8  6ED9               	movwf	fsr2l,c
  5526  000ABA  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5527  000ABC  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5528  000ABE  6EDA               	movwf	fsr2h,c
  5529  000AC0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5530  000AC2  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5531  000AC4  6EE1               	movwf	fsr1l,c
  5532  000AC6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5533  000AC8  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5534  000ACA  6EE2               	movwf	fsr1h,c
  5535  000ACC  CFDF FFE7          	movff	indf2,indf1
  5536                           
  5537                           ;my_uart.c: 135: checksum ^= gooey_uart_center[i];
  5538  000AD0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5539  000AD2  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5540  000AD4  6ED9               	movwf	fsr2l,c
  5541  000AD6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5542  000AD8  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5543  000ADA  6EDA               	movwf	fsr2h,c
  5544  000ADC  50DF               	movf	indf2,w,c
  5545  000ADE  1A2F               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5546  000AE0  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5547  000AE2  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5548  000AE4  D7D9               	goto	L3
  5549  000AE6                     i1l4020:
  5550                           
  5551                           ;my_uart.c: 136: }
  5552                           ;my_uart.c: 138: if( checksum != frame[(14 + 2 + 2) - 2] )
  5553  000AE6  5058               	movf	uart_receive_interrupt_handler@frame+16,w,c
  5554  000AE8  182F               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5555  000AEA  B4D8               	btfsc	status,2,c
  5556  000AEC  D00D               	goto	i1l4028
  5557                           
  5558                           ;my_uart.c: 139: {
  5559                           ;my_uart.c: 141: unsigned char bad_checksum_id = received_counter;
  5560  000AEE  C060  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5561                           
  5562                           ;my_uart.c: 142: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5563  000AF2  0E20               	movlw	32
  5564  000AF4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5565  000AF6  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5566  000AF8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5567  000AFA  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5568  000AFC  6E18               	movwf	ToMainLow_sendmsg@data,c
  5569  000AFE  0E01               	movlw	1
  5570  000B00  EC94  F00E         	call	_ToMainLow_sendmsg
  5571                           
  5572                           ;my_uart.c: 143: error = 1;
  5573  000B04  0E01               	movlw	1
  5574  000B06  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5575  000B08                     i1l4028:
  5576                           
  5577                           ;my_uart.c: 144: }
  5578                           ;my_uart.c: 149: if( !error )
  5579  000B08  665E               	tstfsz	uart_receive_interrupt_handler@error,c
  5580  000B0A  D02C               	goto	i1l4048
  5581                           
  5582                           ;my_uart.c: 150: {
  5583                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5584  000B0C  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5585                           
  5586                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5587  000B10  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5588  000B12  0A11               	xorlw	17
  5589  000B14  B4D8               	btfsc	status,2,c
  5590  000B16  D01C               	goto	i1l417
  5591  000B18  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5592  000B1A  0AF1               	xorlw	241
  5593  000B1C  B4D8               	btfsc	status,2,c
  5594  000B1E  D018               	goto	i1l417
  5595  000B20  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5596  000B22  0AF2               	xorlw	242
  5597  000B24  B4D8               	btfsc	status,2,c
  5598  000B26  D014               	goto	i1l417
  5599  000B28  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5600  000B2A  0AF3               	xorlw	243
  5601  000B2C  B4D8               	btfsc	status,2,c
  5602  000B2E  D010               	goto	i1l417
  5603  000B30  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5604  000B32  0AF4               	xorlw	244
  5605  000B34  B4D8               	btfsc	status,2,c
  5606  000B36  D00C               	goto	i1l417
  5607                           
  5608                           ;my_uart.c: 155: {
  5609                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5610  000B38  C060  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5611                           
  5612                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5613  000B3C  0E24               	movlw	36
  5614  000B3E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5615  000B40  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5616  000B42  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5617  000B44  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5618  000B46  6E18               	movwf	ToMainLow_sendmsg@data,c
  5619  000B48  0E01               	movlw	1
  5620  000B4A  EC94  F00E         	call	_ToMainLow_sendmsg
  5621  000B4E  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5622  000B50                     i1l417:
  5623                           
  5624                           ;my_uart.c: 158: }
  5625                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5626  000B50  0E1F               	movlw	31
  5627  000B52  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5628  000B54  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5629  000B56  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5630  000B58  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5631  000B5A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5632  000B5C  0E0E               	movlw	14
  5633  000B5E  EC94  F00E         	call	_ToMainLow_sendmsg
  5634  000B62  6E2C               	movwf	uart_receive_interrupt_handler@status_1937,c
  5635  000B64                     i1l4048:
  5636                           
  5637                           ;my_uart.c: 171: }
  5638                           ;my_uart.c: 172: }
  5639                           ;my_uart.c: 174: received_counter++;
  5640  000B64  2A60               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5641                           
  5642                           ;my_uart.c: 175: error = 0;
  5643  000B66  0E00               	movlw	0
  5644  000B68  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5645  000B6A  0012               	return	
  5646  000B6C                     __end_of_uart_receive_interrupt_handler:
  5647                           	opt stack 0
  5648                           pclatu	equ	0xFFB
  5649                           pclath	equ	0xFFA
  5650                           tblptru	equ	0xFF8
  5651                           tblptrh	equ	0xFF7
  5652                           tblptrl	equ	0xFF6
  5653                           tablat	equ	0xFF5
  5654                           prodh	equ	0xFF4
  5655                           prodl	equ	0xFF3
  5656                           intcon	equ	0xFF2
  5657                           postinc0	equ	0xFEE
  5658                           fsr0h	equ	0xFEA
  5659                           fsr0l	equ	0xFE9
  5660                           wreg	equ	0xFE8
  5661                           indf1	equ	0xFE7
  5662                           fsr1h	equ	0xFE2
  5663                           fsr1l	equ	0xFE1
  5664                           bsr	equ	0xFE0
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           postdec2	equ	0xFDD
  5668                           fsr2h	equ	0xFDA
  5669                           fsr2l	equ	0xFD9
  5670                           status	equ	0xFD8
  5671                           
  5672 ;; *************** function _timer1_int_handler *****************
  5673 ;; Defined at:
  5674 ;;		line 38 in file "../src/user_interrupts.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;		None
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  result          2   26[COMRAM] unsigned int 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;		None               void
  5681 ;; Registers used:
  5682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5688 ;;      Params:         0       0       0       0       0
  5689 ;;      Locals:         2       0       0       0       0
  5690 ;;      Temps:          0       0       0       0       0
  5691 ;;      Totals:         2       0       0       0       0
  5692 ;;Total ram usage:        2 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    8
  5695 ;; This function calls:
  5696 ;;		_ReadTimer1
  5697 ;;		_ToMainLow_sendmsg
  5698 ;;		_WriteTimer1
  5699 ;; This function is called by:
  5700 ;;		_InterruptHandlerLow
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text35
  5705  001C86                     __ptext35:
  5706                           	opt stack 0
  5707  001C86                     _timer1_int_handler:
  5708                           	opt stack 16
  5709                           
  5710                           ;user_interrupts.c: 42: unsigned int result;
  5711                           ;user_interrupts.c: 49: result = ReadTimer1();
  5712                           
  5713                           ;incstack = 0
  5714  001C86  ECD8  F00E         	call	_ReadTimer1	;wreg free
  5715  001C8A  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5716  001C8E  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5717                           
  5718                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5719  001C92  0E0B               	movlw	11
  5720  001C94  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5721  001C96  0E00               	movlw	0
  5722  001C98  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5723  001C9A  0E00               	movlw	0
  5724  001C9C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5725  001C9E  0E00               	movlw	0
  5726  001CA0  EC94  F00E         	call	_ToMainLow_sendmsg
  5727                           
  5728                           ;user_interrupts.c: 53: WriteTimer1(0);
  5729  001CA4  0E00               	movlw	0
  5730  001CA6  6E02               	movwf	WriteTimer1@timer1+1,c
  5731  001CA8  0E00               	movlw	0
  5732  001CAA  6E01               	movwf	WriteTimer1@timer1,c
  5733  001CAC  ECCF  F00E         	call	_WriteTimer1	;wreg free
  5734  001CB0  0012               	return	
  5735  001CB2                     __end_of_timer1_int_handler:
  5736                           	opt stack 0
  5737                           pclatu	equ	0xFFB
  5738                           pclath	equ	0xFFA
  5739                           tblptru	equ	0xFF8
  5740                           tblptrh	equ	0xFF7
  5741                           tblptrl	equ	0xFF6
  5742                           tablat	equ	0xFF5
  5743                           prodh	equ	0xFF4
  5744                           prodl	equ	0xFF3
  5745                           intcon	equ	0xFF2
  5746                           postinc0	equ	0xFEE
  5747                           fsr0h	equ	0xFEA
  5748                           fsr0l	equ	0xFE9
  5749                           wreg	equ	0xFE8
  5750                           indf1	equ	0xFE7
  5751                           fsr1h	equ	0xFE2
  5752                           fsr1l	equ	0xFE1
  5753                           bsr	equ	0xFE0
  5754                           indf2	equ	0xFDF
  5755                           postinc2	equ	0xFDE
  5756                           postdec2	equ	0xFDD
  5757                           fsr2h	equ	0xFDA
  5758                           fsr2l	equ	0xFD9
  5759                           status	equ	0xFD8
  5760                           
  5761 ;; *************** function _WriteTimer1 *****************
  5762 ;; Defined at:
  5763 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  timer1          2    0[COMRAM] unsigned int 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  timer           2    2[COMRAM] struct Timers
  5768 ;; Return value:  Size  Location     Type
  5769 ;;		None               void
  5770 ;; Registers used:
  5771 ;;		None
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5777 ;;      Params:         2       0       0       0       0
  5778 ;;      Locals:         2       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0
  5780 ;;      Totals:         4       0       0       0       0
  5781 ;;Total ram usage:        4 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    5
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_timer1_int_handler
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text36
  5792  001D9E                     __ptext36:
  5793                           	opt stack 0
  5794  001D9E                     _WriteTimer1:
  5795                           	opt stack 18
  5796                           
  5797                           ;incstack = 0
  5798  001D9E  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5799  001DA2  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5800  001DA6  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5801  001DAA  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5802  001DAE  0012               	return	
  5803  001DB0                     __end_of_WriteTimer1:
  5804                           	opt stack 0
  5805                           pclatu	equ	0xFFB
  5806                           pclath	equ	0xFFA
  5807                           tblptru	equ	0xFF8
  5808                           tblptrh	equ	0xFF7
  5809                           tblptrl	equ	0xFF6
  5810                           tablat	equ	0xFF5
  5811                           prodh	equ	0xFF4
  5812                           prodl	equ	0xFF3
  5813                           intcon	equ	0xFF2
  5814                           postinc0	equ	0xFEE
  5815                           fsr0h	equ	0xFEA
  5816                           fsr0l	equ	0xFE9
  5817                           wreg	equ	0xFE8
  5818                           indf1	equ	0xFE7
  5819                           fsr1h	equ	0xFE2
  5820                           fsr1l	equ	0xFE1
  5821                           bsr	equ	0xFE0
  5822                           indf2	equ	0xFDF
  5823                           postinc2	equ	0xFDE
  5824                           postdec2	equ	0xFDD
  5825                           fsr2h	equ	0xFDA
  5826                           fsr2l	equ	0xFD9
  5827                           status	equ	0xFD8
  5828                           
  5829 ;; *************** function _ToMainLow_sendmsg *****************
  5830 ;; Defined at:
  5831 ;;		line 103 in file "../src/messages.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  length          1    wreg     unsigned char 
  5834 ;;  msgtype         1   22[COMRAM] unsigned char 
  5835 ;;  data            2   23[COMRAM] PTR void 
  5836 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5837 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  length          1   25[COMRAM] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      char 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5849 ;;      Params:         3       0       0       0       0
  5850 ;;      Locals:         1       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0
  5852 ;;      Totals:         4       0       0       0       0
  5853 ;;Total ram usage:        4 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    7
  5856 ;; This function calls:
  5857 ;;		i1_send_msg
  5858 ;; This function is called by:
  5859 ;;		_uart_receive_interrupt_handler
  5860 ;;		_timer1_int_handler
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text37
  5865  001D28                     __ptext37:
  5866                           	opt stack 0
  5867  001D28                     _ToMainLow_sendmsg:
  5868                           	opt stack 16
  5869                           
  5870                           ;incstack = 0
  5871                           ;ToMainLow_sendmsg@length stored from wreg
  5872  001D28  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5873                           
  5874                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5875  001D2A  0101               	movlb	1	; () banked
  5876  001D2C  0E01               	movlw	high _ToMainLow_MQ
  5877  001D2E  6E0C               	movwf	i1send_msg@qptr+1,c
  5878  001D30  0101               	movlb	1	; () banked
  5879  001D32  0E72               	movlw	low _ToMainLow_MQ
  5880  001D34  6E0B               	movwf	i1send_msg@qptr,c
  5881  001D36  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5882  001D3A  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5883  001D3E  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5884  001D42  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5885  001D46  EC23  F00A         	call	i1_send_msg	;wreg free
  5886  001D4A  0012               	return	
  5887  001D4C                     __end_of_ToMainLow_sendmsg:
  5888                           	opt stack 0
  5889                           pclatu	equ	0xFFB
  5890                           pclath	equ	0xFFA
  5891                           tblptru	equ	0xFF8
  5892                           tblptrh	equ	0xFF7
  5893                           tblptrl	equ	0xFF6
  5894                           tablat	equ	0xFF5
  5895                           prodh	equ	0xFF4
  5896                           prodl	equ	0xFF3
  5897                           intcon	equ	0xFF2
  5898                           postinc0	equ	0xFEE
  5899                           fsr0h	equ	0xFEA
  5900                           fsr0l	equ	0xFE9
  5901                           wreg	equ	0xFE8
  5902                           indf1	equ	0xFE7
  5903                           fsr1h	equ	0xFE2
  5904                           fsr1l	equ	0xFE1
  5905                           bsr	equ	0xFE0
  5906                           indf2	equ	0xFDF
  5907                           postinc2	equ	0xFDE
  5908                           postdec2	equ	0xFDD
  5909                           fsr2h	equ	0xFDA
  5910                           fsr2l	equ	0xFD9
  5911                           status	equ	0xFD8
  5912                           
  5913 ;; *************** function i1_send_msg *****************
  5914 ;; Defined at:
  5915 ;;		line 24 in file "../src/messages.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5918 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5919 ;;  length          1   12[COMRAM] unsigned char 
  5920 ;;  msgtype         1   13[COMRAM] unsigned char 
  5921 ;;  data            2   14[COMRAM] PTR void 
  5922 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  5923 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  5924 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  5925 ;;		 -> main@t1thread_data(2), main@ic(38), 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5928 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5929 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5930 ;;  send_msg        2   17[COMRAM] unsigned int 
  5931 ;;  send_msg        1   19[COMRAM] unsigned char 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      char 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5941 ;;      Params:         6       0       0       0       0
  5942 ;;      Locals:         5       0       0       0       0
  5943 ;;      Temps:          1       0       0       0       0
  5944 ;;      Totals:        12       0       0       0       0
  5945 ;;Total ram usage:       12 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    6
  5948 ;; This function calls:
  5949 ;;		i1___awmod
  5950 ;;		i1_memcpy
  5951 ;; This function is called by:
  5952 ;;		_ToMainLow_sendmsg
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text38
  5957  001446                     __ptext38:
  5958                           	opt stack 0
  5959  001446                     i1_send_msg:
  5960                           	opt stack 16
  5961                           
  5962                           ;messages.c: 25: unsigned char slot;
  5963                           ;messages.c: 27: msg *qmsg;
  5964                           ;messages.c: 28: size_t tlength = length;
  5965                           
  5966                           ;incstack = 0
  5967  001446  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5968  00144A  6A13               	clrf	i1send_msg@tlength+1,c
  5969                           
  5970                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5971  00144C  EE20 F055          	lfsr	2,85
  5972  001450  500B               	movf	i1send_msg@qptr,w,c
  5973  001452  26D9               	addwf	fsr2l,f,c
  5974  001454  500C               	movf	i1send_msg@qptr+1,w,c
  5975  001456  22DA               	addwfc	fsr2h,f,c
  5976  001458  50DF               	movf	indf2,w,c
  5977  00145A  6E14               	movwf	i1send_msg@slot,c
  5978                           
  5979                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5980  00145C  5014               	movf	i1send_msg@slot,w,c
  5981  00145E  0D11               	mullw	17
  5982  001460  50F3               	movf	prodl,w,c
  5983  001462  240B               	addwf	i1send_msg@qptr,w,c
  5984  001464  6E15               	movwf	i1send_msg@qmsg,c
  5985  001466  50F4               	movf	prodh,w,c
  5986  001468  200C               	addwfc	i1send_msg@qptr+1,w,c
  5987  00146A  6E16               	movwf	i1send_msg@qmsg+1,c
  5988                           
  5989                           ;messages.c: 41: if (qmsg->full != 0) {
  5990  00146C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5991  001470  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5992  001474  50DF               	movf	indf2,w,c
  5993  001476  B4D8               	btfsc	status,2,c
  5994  001478  D002               	goto	i1l3582
  5995                           
  5996                           ;messages.c: 42: return (-1);
  5997  00147A  0EFF               	movlw	255
  5998  00147C  0012               	return	
  5999  00147E                     i1l3582:
  6000                           
  6001                           ;messages.c: 43: }
  6002                           ;messages.c: 46: qmsg->length = length;
  6003  00147E  EE20 F001          	lfsr	2,1
  6004  001482  5015               	movf	i1send_msg@qmsg,w,c
  6005  001484  26D9               	addwf	fsr2l,f,c
  6006  001486  5016               	movf	i1send_msg@qmsg+1,w,c
  6007  001488  22DA               	addwfc	fsr2h,f,c
  6008  00148A  C00D  FFDF         	movff	i1send_msg@length,indf2
  6009                           
  6010                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6011  00148E  EE20 F002          	lfsr	2,2
  6012  001492  5015               	movf	i1send_msg@qmsg,w,c
  6013  001494  26D9               	addwf	fsr2l,f,c
  6014  001496  5016               	movf	i1send_msg@qmsg+1,w,c
  6015  001498  22DA               	addwfc	fsr2h,f,c
  6016  00149A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6017                           
  6018                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6019  00149E  0E03               	movlw	3
  6020  0014A0  2415               	addwf	i1send_msg@qmsg,w,c
  6021  0014A2  6E01               	movwf	i1memcpy@d1,c
  6022  0014A4  0E00               	movlw	0
  6023  0014A6  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6024  0014A8  6E02               	movwf	i1memcpy@d1+1,c
  6025  0014AA  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6026  0014AE  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6027  0014B2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6028  0014B6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6029  0014BA  EC23  F00D         	call	i1_memcpy	;wreg free
  6030                           
  6031                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6032  0014BE  EE20 F055          	lfsr	2,85
  6033  0014C2  500B               	movf	i1send_msg@qptr,w,c
  6034  0014C4  26D9               	addwf	fsr2l,f,c
  6035  0014C6  500C               	movf	i1send_msg@qptr+1,w,c
  6036  0014C8  22DA               	addwfc	fsr2h,f,c
  6037  0014CA  EE10 F055          	lfsr	1,85
  6038  0014CE  500B               	movf	i1send_msg@qptr,w,c
  6039  0014D0  26E1               	addwf	fsr1l,f,c
  6040  0014D2  500C               	movf	i1send_msg@qptr+1,w,c
  6041  0014D4  22E2               	addwfc	fsr1h,f,c
  6042  0014D6  50E7               	movf	indf1,w,c
  6043  0014D8  6E11               	movwf	??i1_send_msg& (0+255),c
  6044  0014DA  0E01               	movlw	1
  6045  0014DC  2411               	addwf	??i1_send_msg,w,c
  6046  0014DE  6E01               	movwf	i1___awmod@dividend,c
  6047  0014E0  6A02               	clrf	i1___awmod@dividend+1,c
  6048  0014E2  0E00               	movlw	0
  6049  0014E4  2202               	addwfc	i1___awmod@dividend+1,f,c
  6050  0014E6  0E00               	movlw	0
  6051  0014E8  6E04               	movwf	i1___awmod@divisor+1,c
  6052  0014EA  0E05               	movlw	5
  6053  0014EC  6E03               	movwf	i1___awmod@divisor,c
  6054  0014EE  EC83  F00A         	call	i1___awmod	;wreg free
  6055  0014F2  5001               	movf	?i1___awmod,w,c
  6056  0014F4  6EDF               	movwf	indf2,c
  6057                           
  6058                           ;messages.c: 59: qmsg->full = 1;
  6059  0014F6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6060  0014FA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6061  0014FE  0E01               	movlw	1
  6062  001500  6EDF               	movwf	indf2,c
  6063                           
  6064                           ;messages.c: 60: return (1);
  6065  001502  0E01               	movlw	1
  6066  001504  0012               	return	
  6067  001506                     __end_ofi1_send_msg:
  6068                           	opt stack 0
  6069                           pclatu	equ	0xFFB
  6070                           pclath	equ	0xFFA
  6071                           tblptru	equ	0xFF8
  6072                           tblptrh	equ	0xFF7
  6073                           tblptrl	equ	0xFF6
  6074                           tablat	equ	0xFF5
  6075                           prodh	equ	0xFF4
  6076                           prodl	equ	0xFF3
  6077                           intcon	equ	0xFF2
  6078                           postinc0	equ	0xFEE
  6079                           fsr0h	equ	0xFEA
  6080                           fsr0l	equ	0xFE9
  6081                           wreg	equ	0xFE8
  6082                           indf1	equ	0xFE7
  6083                           fsr1h	equ	0xFE2
  6084                           fsr1l	equ	0xFE1
  6085                           bsr	equ	0xFE0
  6086                           indf2	equ	0xFDF
  6087                           postinc2	equ	0xFDE
  6088                           postdec2	equ	0xFDD
  6089                           fsr2h	equ	0xFDA
  6090                           fsr2l	equ	0xFD9
  6091                           status	equ	0xFD8
  6092                           
  6093 ;; *************** function i1_memcpy *****************
  6094 ;; Defined at:
  6095 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  d1              2    0[COMRAM] PTR void 
  6098 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6099 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  6100 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6101 ;;		 -> main@ic(38), 
  6102 ;;  s1              2    2[COMRAM] PTR const void 
  6103 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6104 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6105 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  6106 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6107 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  6108 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  6109 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6110 ;;  n               2    4[COMRAM] unsigned int 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6113 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6114 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6115 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  6116 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6117 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  6118 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  6119 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6120 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6121 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6122 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  6123 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6124 ;;		 -> main@ic(38), 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  2    0[COMRAM] PTR void 
  6127 ;; Registers used:
  6128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6134 ;;      Params:         6       0       0       0       0
  6135 ;;      Locals:         4       0       0       0       0
  6136 ;;      Temps:          0       0       0       0       0
  6137 ;;      Totals:        10       0       0       0       0
  6138 ;;Total ram usage:       10 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    5
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		i1_send_msg
  6145 ;;		i1_recv_msg
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text39
  6150  001A46                     __ptext39:
  6151                           	opt stack 0
  6152  001A46                     i1_memcpy:
  6153                           	opt stack 16
  6154                           
  6155                           ;incstack = 0
  6156  001A46  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6157  001A4A  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6158  001A4E  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6159  001A52  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6160  001A56  D00E               	goto	i1l2438
  6161  001A58                     i1l2432:
  6162  001A58  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6163  001A5C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6164  001A60  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6165  001A64  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6166  001A68  CFDF FFE7          	movff	indf2,indf1
  6167  001A6C  4A09               	infsnz	i1memcpy@s,f,c
  6168  001A6E  2A0A               	incf	i1memcpy@s+1,f,c
  6169  001A70  4A07               	infsnz	i1memcpy@d,f,c
  6170  001A72  2A08               	incf	i1memcpy@d+1,f,c
  6171  001A74                     i1l2438:
  6172  001A74  0605               	decf	i1memcpy@n,f,c
  6173  001A76  A0D8               	btfss	status,0,c
  6174  001A78  0606               	decf	i1memcpy@n+1,f,c
  6175  001A7A  2805               	incf	i1memcpy@n& (0+255),w,c
  6176  001A7C  B4D8               	btfsc	status,2,c
  6177  001A7E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6178  001A80  B4D8               	btfsc	status,2,c
  6179                           
  6180                           ;	Return value of i1_memcpy is never used
  6181  001A82  0012               	return	
  6182  001A84  D7E9               	goto	i1l2432
  6183  001A86                     __end_ofi1_memcpy:
  6184                           	opt stack 0
  6185                           pclatu	equ	0xFFB
  6186                           pclath	equ	0xFFA
  6187                           tblptru	equ	0xFF8
  6188                           tblptrh	equ	0xFF7
  6189                           tblptrl	equ	0xFF6
  6190                           tablat	equ	0xFF5
  6191                           prodh	equ	0xFF4
  6192                           prodl	equ	0xFF3
  6193                           intcon	equ	0xFF2
  6194                           postinc0	equ	0xFEE
  6195                           fsr0h	equ	0xFEA
  6196                           fsr0l	equ	0xFE9
  6197                           wreg	equ	0xFE8
  6198                           indf1	equ	0xFE7
  6199                           fsr1h	equ	0xFE2
  6200                           fsr1l	equ	0xFE1
  6201                           bsr	equ	0xFE0
  6202                           indf2	equ	0xFDF
  6203                           postinc2	equ	0xFDE
  6204                           postdec2	equ	0xFDD
  6205                           fsr2h	equ	0xFDA
  6206                           fsr2l	equ	0xFD9
  6207                           status	equ	0xFD8
  6208                           
  6209 ;; *************** function i1___awmod *****************
  6210 ;; Defined at:
  6211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  dividend        2    0[COMRAM] int 
  6214 ;;  divisor         2    2[COMRAM] int 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  __awmod         1    5[COMRAM] unsigned char 
  6217 ;;  __awmod         1    4[COMRAM] unsigned char 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  2    0[COMRAM] int 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0, prodl
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6227 ;;      Params:         4       0       0       0       0
  6228 ;;      Locals:         2       0       0       0       0
  6229 ;;      Temps:          0       0       0       0       0
  6230 ;;      Totals:         6       0       0       0       0
  6231 ;;Total ram usage:        6 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    5
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		i1_send_msg
  6238 ;;		i1_recv_msg
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text40
  6243  001506                     __ptext40:
  6244                           	opt stack 0
  6245  001506                     i1___awmod:
  6246                           	opt stack 16
  6247                           
  6248                           ;incstack = 0
  6249  001506  0E00               	movlw	0
  6250  001508  6E06               	movwf	i1___awmod@sign,c
  6251  00150A  5002               	movf	i1___awmod@dividend+1,w,c
  6252  00150C  0A80               	xorlw	128
  6253  00150E  6EF3               	movwf	prodl,c
  6254  001510  0E80               	movlw	128
  6255  001512  5CF3               	subwf	prodl,w,c
  6256  001514  0E00               	movlw	0
  6257  001516  B4D8               	btfsc	status,2,c
  6258  001518  5C01               	subwf	i1___awmod@dividend,w,c
  6259  00151A  B0D8               	btfsc	status,0,c
  6260  00151C  D006               	goto	i1l2458
  6261  00151E  6C01               	negf	i1___awmod@dividend,c
  6262  001520  1E02               	comf	i1___awmod@dividend+1,f,c
  6263  001522  B0D8               	btfsc	status,0,c
  6264  001524  2A02               	incf	i1___awmod@dividend+1,f,c
  6265  001526  0E01               	movlw	1
  6266  001528  6E06               	movwf	i1___awmod@sign,c
  6267  00152A                     i1l2458:
  6268  00152A  5004               	movf	i1___awmod@divisor+1,w,c
  6269  00152C  0A80               	xorlw	128
  6270  00152E  6EF3               	movwf	prodl,c
  6271  001530  0E80               	movlw	128
  6272  001532  5CF3               	subwf	prodl,w,c
  6273  001534  0E00               	movlw	0
  6274  001536  B4D8               	btfsc	status,2,c
  6275  001538  5C03               	subwf	i1___awmod@divisor,w,c
  6276  00153A  B0D8               	btfsc	status,0,c
  6277  00153C  D004               	goto	i1l2462
  6278  00153E  6C03               	negf	i1___awmod@divisor,c
  6279  001540  1E04               	comf	i1___awmod@divisor+1,f,c
  6280  001542  B0D8               	btfsc	status,0,c
  6281  001544  2A04               	incf	i1___awmod@divisor+1,f,c
  6282  001546                     i1l2462:
  6283  001546  5004               	movf	i1___awmod@divisor+1,w,c
  6284  001548  1003               	iorwf	i1___awmod@divisor,w,c
  6285  00154A  B4D8               	btfsc	status,2,c
  6286  00154C  D018               	goto	i1l2478
  6287  00154E  0E01               	movlw	1
  6288  001550  6E05               	movwf	i1___awmod@counter,c
  6289  001552  D004               	goto	i1l2468
  6290  001554                     i1l2466:
  6291  001554  90D8               	bcf	status,0,c
  6292  001556  3603               	rlcf	i1___awmod@divisor,f,c
  6293  001558  3604               	rlcf	i1___awmod@divisor+1,f,c
  6294  00155A  2A05               	incf	i1___awmod@counter,f,c
  6295  00155C                     i1l2468:
  6296  00155C  AE04               	btfss	i1___awmod@divisor+1,7,c
  6297  00155E  D7FA               	goto	i1l2466
  6298  001560                     i1l2470:
  6299  001560  5003               	movf	i1___awmod@divisor,w,c
  6300  001562  5C01               	subwf	i1___awmod@dividend,w,c
  6301  001564  5004               	movf	i1___awmod@divisor+1,w,c
  6302  001566  5802               	subwfb	i1___awmod@dividend+1,w,c
  6303  001568  A0D8               	btfss	status,0,c
  6304  00156A  D004               	goto	i1l2474
  6305  00156C  5003               	movf	i1___awmod@divisor,w,c
  6306  00156E  5E01               	subwf	i1___awmod@dividend,f,c
  6307  001570  5004               	movf	i1___awmod@divisor+1,w,c
  6308  001572  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6309  001574                     i1l2474:
  6310  001574  90D8               	bcf	status,0,c
  6311  001576  3204               	rrcf	i1___awmod@divisor+1,f,c
  6312  001578  3203               	rrcf	i1___awmod@divisor,f,c
  6313  00157A  2E05               	decfsz	i1___awmod@counter,f,c
  6314  00157C  D7F1               	goto	i1l2470
  6315  00157E                     i1l2478:
  6316  00157E  5006               	movf	i1___awmod@sign,w,c
  6317  001580  B4D8               	btfsc	status,2,c
  6318  001582  D004               	goto	i1l2482
  6319  001584  6C01               	negf	i1___awmod@dividend,c
  6320  001586  1E02               	comf	i1___awmod@dividend+1,f,c
  6321  001588  B0D8               	btfsc	status,0,c
  6322  00158A  2A02               	incf	i1___awmod@dividend+1,f,c
  6323  00158C                     i1l2482:
  6324  00158C  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6325  001590  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6326  001594  0012               	return	
  6327  001596                     __end_ofi1___awmod:
  6328                           	opt stack 0
  6329                           pclatu	equ	0xFFB
  6330                           pclath	equ	0xFFA
  6331                           tblptru	equ	0xFF8
  6332                           tblptrh	equ	0xFF7
  6333                           tblptrl	equ	0xFF6
  6334                           tablat	equ	0xFF5
  6335                           prodh	equ	0xFF4
  6336                           prodl	equ	0xFF3
  6337                           intcon	equ	0xFF2
  6338                           postinc0	equ	0xFEE
  6339                           fsr0h	equ	0xFEA
  6340                           fsr0l	equ	0xFE9
  6341                           wreg	equ	0xFE8
  6342                           indf1	equ	0xFE7
  6343                           fsr1h	equ	0xFE2
  6344                           fsr1l	equ	0xFE1
  6345                           bsr	equ	0xFE0
  6346                           indf2	equ	0xFDF
  6347                           postinc2	equ	0xFDE
  6348                           postdec2	equ	0xFDD
  6349                           fsr2h	equ	0xFDA
  6350                           fsr2l	equ	0xFD9
  6351                           status	equ	0xFD8
  6352                           
  6353 ;; *************** function _ReadTimer1 *****************
  6354 ;; Defined at:
  6355 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  timer           2    2[COMRAM] struct Timers
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  2    0[COMRAM] unsigned int 
  6362 ;; Registers used:
  6363 ;;		None
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6369 ;;      Params:         2       0       0       0       0
  6370 ;;      Locals:         2       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0
  6372 ;;      Totals:         4       0       0       0       0
  6373 ;;Total ram usage:        4 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    5
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_timer1_int_handler
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text41
  6384  001DB0                     __ptext41:
  6385                           	opt stack 0
  6386  001DB0                     _ReadTimer1:
  6387                           	opt stack 18
  6388                           
  6389                           ;incstack = 0
  6390  001DB0  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6391  001DB4  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6392  001DB8  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6393  001DBC  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6394  001DC0  0012               	return	
  6395  001DC2                     __end_of_ReadTimer1:
  6396                           	opt stack 0
  6397                           pclatu	equ	0xFFB
  6398                           pclath	equ	0xFFA
  6399                           tblptru	equ	0xFF8
  6400                           tblptrh	equ	0xFF7
  6401                           tblptrl	equ	0xFF6
  6402                           tablat	equ	0xFF5
  6403                           prodh	equ	0xFF4
  6404                           prodl	equ	0xFF3
  6405                           intcon	equ	0xFF2
  6406                           postinc0	equ	0xFEE
  6407                           fsr0h	equ	0xFEA
  6408                           fsr0l	equ	0xFE9
  6409                           wreg	equ	0xFE8
  6410                           indf1	equ	0xFE7
  6411                           fsr1h	equ	0xFE2
  6412                           fsr1l	equ	0xFE1
  6413                           bsr	equ	0xFE0
  6414                           indf2	equ	0xFDF
  6415                           postinc2	equ	0xFDE
  6416                           postdec2	equ	0xFDD
  6417                           fsr2h	equ	0xFDA
  6418                           fsr2l	equ	0xFD9
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _InterruptHandlerHigh *****************
  6422 ;; Defined at:
  6423 ;;		line 86 in file "../src/interrupts.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;		None               void
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6437 ;;      Params:         0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0
  6439 ;;      Temps:          0      14       0       0       0
  6440 ;;      Totals:         0      14       0       0       0
  6441 ;;Total ram usage:       14 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    4
  6444 ;; This function calls:
  6445 ;;		_SleepIfOkay
  6446 ;;		_i2c_int_handler
  6447 ;;		_timer0_int_handler
  6448 ;; This function is called by:
  6449 ;;		Interrupt level 2
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	intcode
  6454  000008                     __pintcode:
  6455                           	opt stack 0
  6456  000008                     _InterruptHandlerHigh:
  6457                           	opt stack 16
  6458                           
  6459                           ;incstack = 0
  6460  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh
  6461  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+1
  6462  000010  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6463  000014  EF0F  F00B         	goto	int_func
  6464                           pclatu	equ	0xFFB
  6465                           pclath	equ	0xFFA
  6466                           tblptru	equ	0xFF8
  6467                           tblptrh	equ	0xFF7
  6468                           tblptrl	equ	0xFF6
  6469                           tablat	equ	0xFF5
  6470                           prodh	equ	0xFF4
  6471                           prodl	equ	0xFF3
  6472                           intcon	equ	0xFF2
  6473                           postinc0	equ	0xFEE
  6474                           fsr0h	equ	0xFEA
  6475                           fsr0l	equ	0xFE9
  6476                           wreg	equ	0xFE8
  6477                           indf1	equ	0xFE7
  6478                           fsr1h	equ	0xFE2
  6479                           fsr1l	equ	0xFE1
  6480                           bsr	equ	0xFE0
  6481                           indf2	equ	0xFDF
  6482                           postinc2	equ	0xFDE
  6483                           postdec2	equ	0xFDD
  6484                           fsr2h	equ	0xFDA
  6485                           fsr2l	equ	0xFD9
  6486                           status	equ	0xFD8
  6487                           
  6488                           	psect	intcode_body
  6489  00161E                     __pintcode_body:
  6490                           	opt stack 16
  6491  00161E                     int_func:
  6492                           	opt stack 16
  6493  00161E  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6494  001622  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6495  001626  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6496  00162A  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6497  00162E  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6498  001632  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+8
  6499  001636  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+9
  6500  00163A  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6501  00163E  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6502  001642  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+12
  6503  001646  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+13
  6504                           
  6505                           ;interrupts.c: 87: LATDbits.LD6 = 0;
  6506  00164A  9C8C               	bcf	3980,6,c	;volatile
  6507                           
  6508                           ;interrupts.c: 88: LATDbits.LD6 = 1;
  6509  00164C  8C8C               	bsf	3980,6,c	;volatile
  6510                           
  6511                           ;interrupts.c: 93: if (PIR1bits.SSPIF) {
  6512  00164E  A69E               	btfss	3998,3,c	;volatile
  6513  001650  D003               	goto	i2l4124
  6514                           
  6515                           ;interrupts.c: 95: PIR1bits.SSPIF = 0;
  6516  001652  969E               	bcf	3998,3,c	;volatile
  6517                           
  6518                           ;interrupts.c: 100: i2c_int_handler();
  6519  001654  EC62  F000         	call	_i2c_int_handler	;wreg free
  6520  001658                     i2l4124:
  6521                           
  6522                           ;interrupts.c: 101: }
  6523                           ;interrupts.c: 104: if (INTCONbits.TMR0IF) {
  6524  001658  A4F2               	btfss	intcon,2,c	;volatile
  6525  00165A  D003               	goto	i2l4130
  6526                           
  6527                           ;interrupts.c: 105: INTCONbits.TMR0IF = 0;
  6528  00165C  94F2               	bcf	intcon,2,c	;volatile
  6529                           
  6530                           ;interrupts.c: 110: timer0_int_handler();
  6531  00165E  EC52  F00B         	call	_timer0_int_handler	;wreg free
  6532  001662                     i2l4130:
  6533                           
  6534                           ;interrupts.c: 111: }
  6535                           ;interrupts.c: 120: SleepIfOkay();
  6536  001662  EC4F  F00C         	call	_SleepIfOkay	;wreg free
  6537                           
  6538                           ;interrupts.c: 121: LATDbits.LD6 = 1;
  6539  001666  8C8C               	bsf	3980,6,c	;volatile
  6540                           
  6541                           ;interrupts.c: 122: LATDbits.LD6 = 0;
  6542  001668  9C8C               	bcf	3980,6,c	;volatile
  6543  00166A  C0B7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6544  00166E  C0B6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6545  001672  C0B5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6546  001676  C0B4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6547  00167A  C0B3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6548  00167E  C0B2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6549  001682  C0B1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6550  001686  C0B0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6551  00168A  C0AF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6552  00168E  C0AE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6553  001692  C0AD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6554  001696  C0AC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6555  00169A  C0AB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6556  00169E  C0AA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6557  0016A2  0011               	retfie		f
  6558  0016A4                     __end_of_InterruptHandlerHigh:
  6559                           	opt stack 0
  6560                           pclatu	equ	0xFFB
  6561                           pclath	equ	0xFFA
  6562                           tblptru	equ	0xFF8
  6563                           tblptrh	equ	0xFF7
  6564                           tblptrl	equ	0xFF6
  6565                           tablat	equ	0xFF5
  6566                           prodh	equ	0xFF4
  6567                           prodl	equ	0xFF3
  6568                           intcon	equ	0xFF2
  6569                           postinc0	equ	0xFEE
  6570                           fsr0h	equ	0xFEA
  6571                           fsr0l	equ	0xFE9
  6572                           wreg	equ	0xFE8
  6573                           indf1	equ	0xFE7
  6574                           fsr1h	equ	0xFE2
  6575                           fsr1l	equ	0xFE1
  6576                           bsr	equ	0xFE0
  6577                           indf2	equ	0xFDF
  6578                           postinc2	equ	0xFDE
  6579                           postdec2	equ	0xFDD
  6580                           fsr2h	equ	0xFDA
  6581                           fsr2l	equ	0xFD9
  6582                           status	equ	0xFD8
  6583                           
  6584 ;; *************** function _timer0_int_handler *****************
  6585 ;; Defined at:
  6586 ;;		line 16 in file "../src/user_interrupts.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  val             2   33[BANK0 ] unsigned int 
  6591 ;;  msgtype         2   31[BANK0 ] int 
  6592 ;;  length          2   29[BANK0 ] int 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;		None               void
  6595 ;; Registers used:
  6596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6602 ;;      Params:         0       0       0       0       0
  6603 ;;      Locals:         0       6       0       0       0
  6604 ;;      Temps:          0       0       0       0       0
  6605 ;;      Totals:         0       6       0       0       0
  6606 ;;Total ram usage:        6 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    3
  6609 ;; This function calls:
  6610 ;;		_FromMainHigh_recvmsg
  6611 ;;		_ToMainHigh_sendmsg
  6612 ;;		_WriteTimer0
  6613 ;; This function is called by:
  6614 ;;		_InterruptHandlerHigh
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text43
  6619  0016A4                     __ptext43:
  6620                           	opt stack 0
  6621  0016A4                     _timer0_int_handler:
  6622                           	opt stack 16
  6623                           
  6624                           ;user_interrupts.c: 20: unsigned int val;
  6625                           ;user_interrupts.c: 21: int length, msgtype;
  6626                           ;user_interrupts.c: 25: WriteTimer0(0);
  6627                           
  6628                           ;incstack = 0
  6629  0016A4  0E00               	movlw	0
  6630  0016A6  0100               	movlb	0	; () banked
  6631  0016A8  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6632  0016AA  0E00               	movlw	0
  6633  0016AC  0100               	movlb	0	; () banked
  6634  0016AE  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6635  0016B0  ECE1  F00E         	call	_WriteTimer0	;wreg free
  6636                           
  6637                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6638  0016B4  0100               	movlb	0	; () banked
  6639  0016B6  0E00               	movlw	high timer0_int_handler@msgtype
  6640  0016B8  0100               	movlb	0	; () banked
  6641  0016BA  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6642  0016BC  0100               	movlb	0	; () banked
  6643  0016BE  0E9F               	movlw	low timer0_int_handler@msgtype
  6644  0016C0  0100               	movlb	0	; () banked
  6645  0016C2  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6646  0016C4  0100               	movlb	0	; () banked
  6647  0016C6  0E00               	movlw	high timer0_int_handler@val
  6648  0016C8  0100               	movlb	0	; () banked
  6649  0016CA  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6650  0016CC  0100               	movlb	0	; () banked
  6651  0016CE  0EA1               	movlw	low timer0_int_handler@val
  6652  0016D0  0100               	movlb	0	; () banked
  6653  0016D2  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6654  0016D4  0E02               	movlw	2
  6655  0016D6  EC98  F00D         	call	_FromMainHigh_recvmsg
  6656  0016DA  0100               	movlb	0	; () banked
  6657  0016DC  6F9D               	movwf	timer0_int_handler@length& (0+255),b
  6658  0016DE  0100               	movlb	0	; () banked
  6659  0016E0  6B9E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6660  0016E2  0100               	movlb	0	; () banked
  6661  0016E4  BF9D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6662  0016E6  079E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6666  0016E8  0100               	movlb	0	; () banked
  6667  0016EA  519D               	movf	timer0_int_handler@length& (0+255),w,b
  6668  0016EC  0A02               	xorlw	2
  6669  0016EE  119E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6670  0016F0  A4D8               	btfss	status,2,c
  6671  0016F2  0012               	return	
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6675  0016F4  0E0A               	movlw	10
  6676  0016F6  0100               	movlb	0	; () banked
  6677  0016F8  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6678  0016FA  0100               	movlb	0	; () banked
  6679  0016FC  0E00               	movlw	high timer0_int_handler@val
  6680  0016FE  0100               	movlb	0	; () banked
  6681  001700  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6682  001702  0100               	movlb	0	; () banked
  6683  001704  0EA1               	movlw	low timer0_int_handler@val
  6684  001706  0100               	movlb	0	; () banked
  6685  001708  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6686  00170A  0E02               	movlw	2
  6687  00170C  EC2C  F00E         	call	_ToMainHigh_sendmsg
  6688  001710  0012               	return	
  6689  001712                     __end_of_timer0_int_handler:
  6690                           	opt stack 0
  6691                           pclatu	equ	0xFFB
  6692                           pclath	equ	0xFFA
  6693                           tblptru	equ	0xFF8
  6694                           tblptrh	equ	0xFF7
  6695                           tblptrl	equ	0xFF6
  6696                           tablat	equ	0xFF5
  6697                           prodh	equ	0xFF4
  6698                           prodl	equ	0xFF3
  6699                           intcon	equ	0xFF2
  6700                           postinc0	equ	0xFEE
  6701                           fsr0h	equ	0xFEA
  6702                           fsr0l	equ	0xFE9
  6703                           wreg	equ	0xFE8
  6704                           indf1	equ	0xFE7
  6705                           fsr1h	equ	0xFE2
  6706                           fsr1l	equ	0xFE1
  6707                           bsr	equ	0xFE0
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           postdec2	equ	0xFDD
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function _WriteTimer0 *****************
  6716 ;; Defined at:
  6717 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  timer0          2    0[BANK0 ] unsigned int 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  timer           2    2[BANK0 ] struct Timers
  6722 ;; Return value:  Size  Location     Type
  6723 ;;		None               void
  6724 ;; Registers used:
  6725 ;;		None
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6731 ;;      Params:         0       2       0       0       0
  6732 ;;      Locals:         0       2       0       0       0
  6733 ;;      Temps:          0       0       0       0       0
  6734 ;;      Totals:         0       4       0       0       0
  6735 ;;Total ram usage:        4 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_timer0_int_handler
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text44
  6745  001DC2                     __ptext44:
  6746                           	opt stack 0
  6747  001DC2                     _WriteTimer0:
  6748                           	opt stack 18
  6749                           
  6750                           ;incstack = 0
  6751  001DC2  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6752  001DC6  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6753  001DCA  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6754  001DCE  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6755  001DD2  0012               	return	
  6756  001DD4                     __end_of_WriteTimer0:
  6757                           	opt stack 0
  6758                           pclatu	equ	0xFFB
  6759                           pclath	equ	0xFFA
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           intcon	equ	0xFF2
  6767                           postinc0	equ	0xFEE
  6768                           fsr0h	equ	0xFEA
  6769                           fsr0l	equ	0xFE9
  6770                           wreg	equ	0xFE8
  6771                           indf1	equ	0xFE7
  6772                           fsr1h	equ	0xFE2
  6773                           fsr1l	equ	0xFE1
  6774                           bsr	equ	0xFE0
  6775                           indf2	equ	0xFDF
  6776                           postinc2	equ	0xFDE
  6777                           postdec2	equ	0xFDD
  6778                           fsr2h	equ	0xFDA
  6779                           fsr2l	equ	0xFD9
  6780                           status	equ	0xFD8
  6781                           
  6782 ;; *************** function _i2c_int_handler *****************
  6783 ;; Defined at:
  6784 ;;		line 103 in file "../src/my_i2c.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;		None
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  msg_type        1   39[BANK0 ] unsigned char 
  6789 ;;  length          1   30[BANK0 ] unsigned char 
  6790 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  6791 ;;  data_read       1   41[BANK0 ] unsigned char 
  6792 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  6793 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  6794 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  6795 ;;  need_data       1   36[BANK0 ] unsigned char 
  6796 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6797 ;;  data_written    1   34[BANK0 ] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;		None               void
  6800 ;; Registers used:
  6801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6807 ;;      Params:         0       0       0       0       0
  6808 ;;      Locals:         0      12       0       0       0
  6809 ;;      Temps:          0       1       0       0       0
  6810 ;;      Totals:         0      13       0       0       0
  6811 ;;Total ram usage:       13 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    3
  6814 ;; This function calls:
  6815 ;;		_FromMainHigh_recvmsg
  6816 ;;		_ToMainHigh_sendmsg
  6817 ;;		_handle_start
  6818 ;;		_start_i2c_slave_reply
  6819 ;;		i2_blip1
  6820 ;;		i2_blip2
  6821 ;; This function is called by:
  6822 ;;		_InterruptHandlerHigh
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text45
  6827  0000C4                     __ptext45:
  6828                           	opt stack 0
  6829  0000C4                     _i2c_int_handler:
  6830                           	opt stack 16
  6831                           
  6832                           ;my_i2c.c: 106: LATDbits.LD2 = 0;
  6833                           
  6834                           ;incstack = 0
  6835  0000C4  948C               	bcf	3980,2,c	;volatile
  6836                           
  6837                           ;my_i2c.c: 107: LATDbits.LD2 = 1;
  6838  0000C6  848C               	bsf	3980,2,c	;volatile
  6839                           
  6840                           ;my_i2c.c: 109: unsigned char i2c_data;
  6841                           ;my_i2c.c: 110: unsigned char data_read = 0;
  6842  0000C8  0E00               	movlw	0
  6843  0000CA  0100               	movlb	0	; () banked
  6844  0000CC  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6845                           
  6846                           ;my_i2c.c: 111: unsigned char data_written = 0;
  6847  0000CE  0E00               	movlw	0
  6848  0000D0  0100               	movlb	0	; () banked
  6849  0000D2  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6850                           
  6851                           ;my_i2c.c: 112: unsigned char msg_ready = 0;
  6852  0000D4  0E00               	movlw	0
  6853  0000D6  0100               	movlb	0	; () banked
  6854  0000D8  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6855                           
  6856                           ;my_i2c.c: 113: unsigned char msg_to_send = 0;
  6857  0000DA  0E00               	movlw	0
  6858  0000DC  0100               	movlb	0	; () banked
  6859  0000DE  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6860                           
  6861                           ;my_i2c.c: 114: unsigned char overrun_error = 0;
  6862  0000E0  0E00               	movlw	0
  6863  0000E2  0100               	movlb	0	; () banked
  6864  0000E4  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6865                           
  6866                           ;my_i2c.c: 115: unsigned char error_buf[3];
  6867                           ;my_i2c.c: 116: unsigned char need_data = 1;
  6868  0000E6  0E01               	movlw	1
  6869  0000E8  0100               	movlb	0	; () banked
  6870  0000EA  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;my_i2c.c: 118: blip1();
  6874  0000EC  EC1A  F00F         	call	i2_blip1	;wreg free
  6875                           
  6876                           ;my_i2c.c: 120: if (SSPCON1bits.SSPOV == 1) {
  6877  0000F0  ACC6               	btfss	4038,6,c	;volatile
  6878  0000F2  D024               	goto	i2l3774
  6879                           
  6880                           ;my_i2c.c: 121: SSPCON1bits.SSPOV = 0;
  6881  0000F4  9CC6               	bcf	4038,6,c	;volatile
  6882                           
  6883                           ;my_i2c.c: 125: ic_ptr->status = 0x5;
  6884  0000F6  0100               	movlb	0	; () banked
  6885  0000F8  EE20 F021          	lfsr	2,33
  6886  0000FC  0100               	movlb	0	; () banked
  6887  0000FE  51C5               	movf	_ic_ptr& (0+255),w,b
  6888  000100  26D9               	addwf	fsr2l,f,c
  6889  000102  0100               	movlb	0	; () banked
  6890  000104  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6891  000106  22DA               	addwfc	fsr2h,f,c
  6892  000108  0E05               	movlw	5
  6893  00010A  6EDF               	movwf	indf2,c
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;my_i2c.c: 126: overrun_error = 1;
  6897  00010C  0E01               	movlw	1
  6898  00010E  0100               	movlb	0	; () banked
  6899  000110  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;my_i2c.c: 127: ic_ptr->error_count++;
  6903  000112  0100               	movlb	0	; () banked
  6904  000114  EE20 F023          	lfsr	2,35
  6905  000118  0100               	movlb	0	; () banked
  6906  00011A  51C5               	movf	_ic_ptr& (0+255),w,b
  6907  00011C  26D9               	addwf	fsr2l,f,c
  6908  00011E  0100               	movlb	0	; () banked
  6909  000120  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6910  000122  22DA               	addwfc	fsr2h,f,c
  6911  000124  2ADF               	incf	indf2,f,c
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;my_i2c.c: 128: ic_ptr->error_code = 0x4;
  6915  000126  0100               	movlb	0	; () banked
  6916  000128  EE20 F022          	lfsr	2,34
  6917  00012C  0100               	movlb	0	; () banked
  6918  00012E  51C5               	movf	_ic_ptr& (0+255),w,b
  6919  000130  26D9               	addwf	fsr2l,f,c
  6920  000132  0100               	movlb	0	; () banked
  6921  000134  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6922  000136  22DA               	addwfc	fsr2h,f,c
  6923  000138  0E04               	movlw	4
  6924  00013A  6EDF               	movwf	indf2,c
  6925  00013C                     i2l3774:
  6926                           
  6927                           ;my_i2c.c: 129: }
  6928                           ;my_i2c.c: 131: if (SSPSTATbits.BF == 1) {
  6929  00013C  A0C7               	btfss	4039,0,c	;volatile
  6930  00013E  D005               	goto	i2l3780
  6931                           
  6932                           ;my_i2c.c: 132: i2c_data = SSPBUF;
  6933  000140  CFC9 F0A5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6934                           
  6935                           ;my_i2c.c: 133: data_read = 1;
  6936  000144  0E01               	movlw	1
  6937  000146  0100               	movlb	0	; () banked
  6938  000148  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6939  00014A                     i2l3780:
  6940                           
  6941                           ;my_i2c.c: 134: }
  6942                           ;my_i2c.c: 136: blip1();
  6943  00014A  EC1A  F00F         	call	i2_blip1	;wreg free
  6944                           
  6945                           ;my_i2c.c: 138: if (!overrun_error) {
  6946  00014E  0100               	movlb	0	; () banked
  6947  000150  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6948  000152  D1C6               	goto	i2l3886
  6949  000154  D1AF               	goto	i2l3884
  6950  000156                     i2l299:
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;my_i2c.c: 141: {
  6954                           ;my_i2c.c: 143: if (SSPSTATbits.S == 1) {
  6955  000156  A6C7               	btfss	4039,3,c	;volatile
  6956  000158  D1C3               	goto	i2l3886
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;my_i2c.c: 144: handle_start(data_read);
  6960  00015A  0100               	movlb	0	; () banked
  6961  00015C  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6962  00015E  ECFA  F008         	call	_handle_start
  6963                           
  6964                           ;my_i2c.c: 146: if (ic_ptr->status == 0x8) {
  6965  000162  0100               	movlb	0	; () banked
  6966  000164  EE20 F021          	lfsr	2,33
  6967  000168  0100               	movlb	0	; () banked
  6968  00016A  51C5               	movf	_ic_ptr& (0+255),w,b
  6969  00016C  26D9               	addwf	fsr2l,f,c
  6970  00016E  0100               	movlb	0	; () banked
  6971  000170  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6972  000172  22DA               	addwfc	fsr2h,f,c
  6973  000174  0E08               	movlw	8
  6974  000176  62DF               	cpfseq	indf2,c
  6975  000178  D1B3               	goto	i2l3886
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;my_i2c.c: 147: data_read = 0;
  6979  00017A  0E00               	movlw	0
  6980  00017C  0100               	movlb	0	; () banked
  6981  00017E  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6982                           
  6983                           ;my_i2c.c: 148: msg_to_send = 1;
  6984  000180  0E01               	movlw	1
  6985  000182  0100               	movlb	0	; () banked
  6986  000184  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6987  000186  D1AC               	goto	i2l3886
  6988  000188                     i2l303:
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;my_i2c.c: 154: {
  6992                           ;my_i2c.c: 157: if (SSPSTATbits.P == 1) {
  6993  000188  A8C7               	btfss	4039,4,c	;volatile
  6994  00018A  D02A               	goto	i2l3802
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;my_i2c.c: 160: ic_ptr->event_count++;
  6998  00018C  0100               	movlb	0	; () banked
  6999  00018E  EE20 F020          	lfsr	2,32
  7000  000192  0100               	movlb	0	; () banked
  7001  000194  51C5               	movf	_ic_ptr& (0+255),w,b
  7002  000196  26D9               	addwf	fsr2l,f,c
  7003  000198  0100               	movlb	0	; () banked
  7004  00019A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7005  00019C  22DA               	addwfc	fsr2h,f,c
  7006  00019E  2ADF               	incf	indf2,f,c
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;my_i2c.c: 161: if (data_read) {
  7010  0001A0  0100               	movlb	0	; () banked
  7011  0001A2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7012  0001A4  B4D8               	btfsc	status,2,c
  7013  0001A6  D17B               	goto	L9
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  7017  0001A8  BAC7               	btfsc	4039,5,c	;volatile
  7018  0001AA  D004               	goto	i2l3800
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;my_i2c.c: 163: msg_ready = 1;
  7022  0001AC  0E01               	movlw	1
  7023  0001AE  0100               	movlb	0	; () banked
  7024  0001B0  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7025                           
  7026                           ;my_i2c.c: 164: } else {
  7027  0001B2  D175               	goto	L9
  7028  0001B4                     i2l3800:
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;my_i2c.c: 165: ic_ptr->error_count++;
  7032  0001B4  0100               	movlb	0	; () banked
  7033  0001B6  EE20 F023          	lfsr	2,35
  7034  0001BA  0100               	movlb	0	; () banked
  7035  0001BC  51C5               	movf	_ic_ptr& (0+255),w,b
  7036  0001BE  26D9               	addwf	fsr2l,f,c
  7037  0001C0  0100               	movlb	0	; () banked
  7038  0001C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7039  0001C4  22DA               	addwfc	fsr2h,f,c
  7040  0001C6  2ADF               	incf	indf2,f,c
  7041                           
  7042                           ;my_i2c.c: 166: ic_ptr->error_code = 0x6;
  7043  0001C8  0100               	movlb	0	; () banked
  7044  0001CA  EE20 F022          	lfsr	2,34
  7045  0001CE  0100               	movlb	0	; () banked
  7046  0001D0  51C5               	movf	_ic_ptr& (0+255),w,b
  7047  0001D2  26D9               	addwf	fsr2l,f,c
  7048  0001D4  0100               	movlb	0	; () banked
  7049  0001D6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7050  0001D8  22DA               	addwfc	fsr2h,f,c
  7051  0001DA  0E06               	movlw	6
  7052  0001DC  6EDF               	movwf	indf2,c
  7053                           
  7054                           ; BSR set to: 0
  7055  0001DE  D15F               	goto	L9
  7056  0001E0                     i2l3802:
  7057                           
  7058                           ; BSR set to: 0
  7059  0001E0  0100               	movlb	0	; () banked
  7060  0001E2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7061  0001E4  B4D8               	btfsc	status,2,c
  7062  0001E6  D17C               	goto	i2l3886
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;my_i2c.c: 171: ic_ptr->event_count++;
  7066  0001E8  0100               	movlb	0	; () banked
  7067  0001EA  EE20 F020          	lfsr	2,32
  7068  0001EE  0100               	movlb	0	; () banked
  7069  0001F0  51C5               	movf	_ic_ptr& (0+255),w,b
  7070  0001F2  26D9               	addwf	fsr2l,f,c
  7071  0001F4  0100               	movlb	0	; () banked
  7072  0001F6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7073  0001F8  22DA               	addwfc	fsr2h,f,c
  7074  0001FA  2ADF               	incf	indf2,f,c
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;my_i2c.c: 172: if (SSPSTATbits.D_A == 0)
  7078  0001FC  BAC7               	btfsc	4039,5,c	;volatile
  7079  0001FE  D02A               	goto	i2l3818
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;my_i2c.c: 173: {
  7083                           ;my_i2c.c: 174: if (SSPSTATbits.R_W == 0)
  7084  000200  B4C7               	btfsc	4039,2,c	;volatile
  7085  000202  D00B               	goto	i2l3812
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;my_i2c.c: 175: {
  7089                           ;my_i2c.c: 176: ic_ptr->status = 0x7;
  7090  000204  0100               	movlb	0	; () banked
  7091  000206  EE20 F021          	lfsr	2,33
  7092  00020A  0100               	movlb	0	; () banked
  7093  00020C  51C5               	movf	_ic_ptr& (0+255),w,b
  7094  00020E  26D9               	addwf	fsr2l,f,c
  7095  000210  0100               	movlb	0	; () banked
  7096  000212  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7097  000214  22DA               	addwfc	fsr2h,f,c
  7098  000216  0E07               	movlw	7
  7099  000218  D079               	goto	L6
  7100  00021A                     i2l3812:
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;my_i2c.c: 178: else
  7104                           ;my_i2c.c: 179: {
  7105                           ;my_i2c.c: 180: ic_ptr->status = 0x8;
  7106  00021A  0100               	movlb	0	; () banked
  7107  00021C  EE20 F021          	lfsr	2,33
  7108  000220  0100               	movlb	0	; () banked
  7109  000222  51C5               	movf	_ic_ptr& (0+255),w,b
  7110  000224  26D9               	addwf	fsr2l,f,c
  7111  000226  0100               	movlb	0	; () banked
  7112  000228  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7113  00022A  22DA               	addwfc	fsr2h,f,c
  7114  00022C  0E08               	movlw	8
  7115  00022E  6EDF               	movwf	indf2,c
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;my_i2c.c: 181: msg_to_send = 1;
  7119  000230  0E01               	movlw	1
  7120  000232  0100               	movlb	0	; () banked
  7121  000234  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;my_i2c.c: 183: data_read = 0;
  7125  000236  0E00               	movlw	0
  7126  000238  0100               	movlb	0	; () banked
  7127  00023A  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7128                           
  7129                           ;my_i2c.c: 184: ic_ptr->outbufind = 0;
  7130  00023C  0100               	movlb	0	; () banked
  7131  00023E  EE20 F01E          	lfsr	2,30
  7132  000242  0100               	movlb	0	; () banked
  7133  000244  51C5               	movf	_ic_ptr& (0+255),w,b
  7134  000246  26D9               	addwf	fsr2l,f,c
  7135  000248  0100               	movlb	0	; () banked
  7136  00024A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7137  00024C  22DA               	addwfc	fsr2h,f,c
  7138  00024E  0E00               	movlw	0
  7139  000250  6EDF               	movwf	indf2,c
  7140                           
  7141                           ;my_i2c.c: 185: goto l;
  7142  000252  D020               	goto	i2l3820
  7143  000254                     i2l3818:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;my_i2c.c: 188: else
  7147                           ;my_i2c.c: 189: {
  7148                           ;my_i2c.c: 190: ic_ptr->error_count++;
  7149  000254  0100               	movlb	0	; () banked
  7150  000256  EE20 F023          	lfsr	2,35
  7151  00025A  0100               	movlb	0	; () banked
  7152  00025C  51C5               	movf	_ic_ptr& (0+255),w,b
  7153  00025E  26D9               	addwf	fsr2l,f,c
  7154  000260  0100               	movlb	0	; () banked
  7155  000262  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7156  000264  22DA               	addwfc	fsr2h,f,c
  7157  000266  2ADF               	incf	indf2,f,c
  7158                           
  7159                           ;my_i2c.c: 191: ic_ptr->status = 0x5;
  7160  000268  0100               	movlb	0	; () banked
  7161  00026A  EE20 F021          	lfsr	2,33
  7162  00026E  0100               	movlb	0	; () banked
  7163  000270  51C5               	movf	_ic_ptr& (0+255),w,b
  7164  000272  26D9               	addwf	fsr2l,f,c
  7165  000274  0100               	movlb	0	; () banked
  7166  000276  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7167  000278  22DA               	addwfc	fsr2h,f,c
  7168  00027A  0E05               	movlw	5
  7169  00027C  6EDF               	movwf	indf2,c
  7170                           
  7171                           ;my_i2c.c: 192: ic_ptr->error_code = 0x6;
  7172  00027E  0100               	movlb	0	; () banked
  7173  000280  EE20 F022          	lfsr	2,34
  7174  000284  0100               	movlb	0	; () banked
  7175  000286  51C5               	movf	_ic_ptr& (0+255),w,b
  7176  000288  26D9               	addwf	fsr2l,f,c
  7177  00028A  0100               	movlb	0	; () banked
  7178  00028C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7179  00028E  22DA               	addwfc	fsr2h,f,c
  7180  000290  0E06               	movlw	6
  7181  000292  D03C               	goto	L6
  7182  000294                     i2l3820:
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;my_i2c.c: 199: {
  7186                           ;my_i2c.c: 200: if (ic_ptr->outbufind < 14)
  7187  000294  0100               	movlb	0	; () banked
  7188  000296  EE20 F01E          	lfsr	2,30
  7189  00029A  0100               	movlb	0	; () banked
  7190  00029C  51C5               	movf	_ic_ptr& (0+255),w,b
  7191  00029E  26D9               	addwf	fsr2l,f,c
  7192  0002A0  0100               	movlb	0	; () banked
  7193  0002A2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7194  0002A4  22DA               	addwfc	fsr2h,f,c
  7195  0002A6  50DF               	movf	indf2,w,c
  7196  0002A8  0100               	movlb	0	; () banked
  7197  0002AA  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7198  0002AC  0E0E               	movlw	14
  7199  0002AE  0100               	movlb	0	; () banked
  7200  0002B0  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7201  0002B2  B0D8               	btfsc	status,0,c
  7202  0002B4  D0F4               	goto	L9
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;my_i2c.c: 201: {
  7206                           ;my_i2c.c: 202: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7207  0002B6  0100               	movlb	0	; () banked
  7208  0002B8  EE20 F01E          	lfsr	2,30
  7209  0002BC  0100               	movlb	0	; () banked
  7210  0002BE  51C5               	movf	_ic_ptr& (0+255),w,b
  7211  0002C0  26D9               	addwf	fsr2l,f,c
  7212  0002C2  0100               	movlb	0	; () banked
  7213  0002C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7214  0002C6  22DA               	addwfc	fsr2h,f,c
  7215  0002C8  50DF               	movf	indf2,w,c
  7216  0002CA  0100               	movlb	0	; () banked
  7217  0002CC  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7218  0002CE  0100               	movlb	0	; () banked
  7219  0002D0  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7220  0002D2  0D01               	mullw	1
  7221  0002D4  0E10               	movlw	16
  7222  0002D6  26F3               	addwf	prodl,f,c
  7223  0002D8  0E00               	movlw	0
  7224  0002DA  22F4               	addwfc	prodh,f,c
  7225  0002DC  50F3               	movf	prodl,w,c
  7226  0002DE  0100               	movlb	0	; () banked
  7227  0002E0  25C5               	addwf	_ic_ptr& (0+255),w,b
  7228  0002E2  6ED9               	movwf	fsr2l,c
  7229  0002E4  50F4               	movf	prodh,w,c
  7230  0002E6  0100               	movlb	0	; () banked
  7231  0002E8  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7232  0002EA  6EDA               	movwf	fsr2h,c
  7233  0002EC  50DF               	movf	indf2,w,c
  7234  0002EE  6EC9               	movwf	4041,c	;volatile
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;my_i2c.c: 203: ic_ptr->outbufind++;
  7238  0002F0  0100               	movlb	0	; () banked
  7239  0002F2  EE20 F01E          	lfsr	2,30
  7240  0002F6  0100               	movlb	0	; () banked
  7241  0002F8  51C5               	movf	_ic_ptr& (0+255),w,b
  7242  0002FA  26D9               	addwf	fsr2l,f,c
  7243  0002FC  0100               	movlb	0	; () banked
  7244  0002FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7245  000300  22DA               	addwfc	fsr2h,f,c
  7246  000302  2ADF               	incf	indf2,f,c
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;my_i2c.c: 204: data_written = 1;
  7250  000304  0E01               	movlw	1
  7251  000306  0100               	movlb	0	; () banked
  7252  000308  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  7253                           
  7254                           ;my_i2c.c: 205: }
  7255  00030A  D0EA               	goto	i2l3886
  7256  00030C                     L6:
  7257  00030C  6EDF               	movwf	indf2,c
  7258  00030E  D0E8               	goto	i2l3886
  7259  000310                     i2l3830:
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;my_i2c.c: 214: {
  7263                           ;my_i2c.c: 215: blip2();
  7264  000310  EC16  F00F         	call	i2_blip2	;wreg free
  7265                           
  7266                           ;my_i2c.c: 217: if (SSPSTATbits.P == 1)
  7267  000314  A8C7               	btfss	4039,4,c	;volatile
  7268  000316  D05C               	goto	i2l3854
  7269                           
  7270                           ;my_i2c.c: 218: {
  7271                           ;my_i2c.c: 219: blip2();
  7272  000318  EC16  F00F         	call	i2_blip2	;wreg free
  7273                           
  7274                           ;my_i2c.c: 222: ic_ptr->event_count++;
  7275  00031C  0100               	movlb	0	; () banked
  7276  00031E  EE20 F020          	lfsr	2,32
  7277  000322  0100               	movlb	0	; () banked
  7278  000324  51C5               	movf	_ic_ptr& (0+255),w,b
  7279  000326  26D9               	addwf	fsr2l,f,c
  7280  000328  0100               	movlb	0	; () banked
  7281  00032A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7282  00032C  22DA               	addwfc	fsr2h,f,c
  7283  00032E  2ADF               	incf	indf2,f,c
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;my_i2c.c: 223: if (data_read)
  7287  000330  0100               	movlb	0	; () banked
  7288  000332  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7289  000334  B4D8               	btfsc	status,2,c
  7290  000336  D048               	goto	i2l3850
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;my_i2c.c: 224: {
  7294                           ;my_i2c.c: 225: if (SSPSTATbits.D_A == 1)
  7295  000338  AAC7               	btfss	4039,5,c	;volatile
  7296  00033A  D025               	goto	i2l3848
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;my_i2c.c: 226: {
  7300                           ;my_i2c.c: 228: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7301  00033C  0100               	movlb	0	; () banked
  7302  00033E  EE20 F00E          	lfsr	2,14
  7303  000342  0100               	movlb	0	; () banked
  7304  000344  51C5               	movf	_ic_ptr& (0+255),w,b
  7305  000346  26D9               	addwf	fsr2l,f,c
  7306  000348  0100               	movlb	0	; () banked
  7307  00034A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7308  00034C  22DA               	addwfc	fsr2h,f,c
  7309  00034E  50DF               	movf	indf2,w,c
  7310  000350  0100               	movlb	0	; () banked
  7311  000352  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7312  000354  0100               	movlb	0	; () banked
  7313  000356  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7314  000358  0D01               	mullw	1
  7315  00035A  50F3               	movf	prodl,w,c
  7316  00035C  0100               	movlb	0	; () banked
  7317  00035E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7318  000360  6ED9               	movwf	fsr2l,c
  7319  000362  50F4               	movf	prodh,w,c
  7320  000364  0100               	movlb	0	; () banked
  7321  000366  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7322  000368  6EDA               	movwf	fsr2h,c
  7323  00036A  0100               	movlb	0	; () banked
  7324  00036C  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;my_i2c.c: 229: ic_ptr->buflen++;
  7328  000370  0100               	movlb	0	; () banked
  7329  000372  EE20 F00E          	lfsr	2,14
  7330  000376  0100               	movlb	0	; () banked
  7331  000378  51C5               	movf	_ic_ptr& (0+255),w,b
  7332  00037A  26D9               	addwf	fsr2l,f,c
  7333  00037C  0100               	movlb	0	; () banked
  7334  00037E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7335  000380  22DA               	addwfc	fsr2h,f,c
  7336  000382  2ADF               	incf	indf2,f,c
  7337  000384  D021               	goto	i2l3850
  7338  000386                     i2l3848:
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;my_i2c.c: 232: else
  7342                           ;my_i2c.c: 233: {
  7343                           ;my_i2c.c: 235: ic_ptr->error_count++;
  7344  000386  0100               	movlb	0	; () banked
  7345  000388  EE20 F023          	lfsr	2,35
  7346  00038C  0100               	movlb	0	; () banked
  7347  00038E  51C5               	movf	_ic_ptr& (0+255),w,b
  7348  000390  26D9               	addwf	fsr2l,f,c
  7349  000392  0100               	movlb	0	; () banked
  7350  000394  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7351  000396  22DA               	addwfc	fsr2h,f,c
  7352  000398  2ADF               	incf	indf2,f,c
  7353                           
  7354                           ;my_i2c.c: 236: ic_ptr->error_code = 0x6;
  7355  00039A  0100               	movlb	0	; () banked
  7356  00039C  EE20 F022          	lfsr	2,34
  7357  0003A0  0100               	movlb	0	; () banked
  7358  0003A2  51C5               	movf	_ic_ptr& (0+255),w,b
  7359  0003A4  26D9               	addwf	fsr2l,f,c
  7360  0003A6  0100               	movlb	0	; () banked
  7361  0003A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7362  0003AA  22DA               	addwfc	fsr2h,f,c
  7363  0003AC  0E06               	movlw	6
  7364  0003AE  6EDF               	movwf	indf2,c
  7365                           
  7366                           ;my_i2c.c: 237: ic_ptr->status = 0x5;
  7367  0003B0  0100               	movlb	0	; () banked
  7368  0003B2  EE20 F021          	lfsr	2,33
  7369  0003B6  0100               	movlb	0	; () banked
  7370  0003B8  51C5               	movf	_ic_ptr& (0+255),w,b
  7371  0003BA  26D9               	addwf	fsr2l,f,c
  7372  0003BC  0100               	movlb	0	; () banked
  7373  0003BE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7374  0003C0  22DA               	addwfc	fsr2h,f,c
  7375  0003C2  0E05               	movlw	5
  7376  0003C4  6EDF               	movwf	indf2,c
  7377  0003C6  D06B               	goto	L9
  7378  0003C8                     i2l3850:
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;my_i2c.c: 240: else
  7382                           ;my_i2c.c: 241: {
  7383                           ;my_i2c.c: 243: msg_ready = 1;
  7384  0003C8  0E01               	movlw	1
  7385  0003CA  0100               	movlb	0	; () banked
  7386  0003CC  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7387                           
  7388                           ; BSR set to: 0
  7389  0003CE  D067               	goto	L9
  7390  0003D0                     i2l3854:
  7391                           
  7392                           ;my_i2c.c: 247: else if (data_read)
  7393  0003D0  0100               	movlb	0	; () banked
  7394  0003D2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7395  0003D4  B4D8               	btfsc	status,2,c
  7396  0003D6  D084               	goto	i2l3886
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;my_i2c.c: 248: {
  7400                           ;my_i2c.c: 249: blip2();
  7401  0003D8  EC16  F00F         	call	i2_blip2	;wreg free
  7402                           
  7403                           ;my_i2c.c: 250: ic_ptr->event_count++;
  7404  0003DC  0100               	movlb	0	; () banked
  7405  0003DE  EE20 F020          	lfsr	2,32
  7406  0003E2  0100               	movlb	0	; () banked
  7407  0003E4  51C5               	movf	_ic_ptr& (0+255),w,b
  7408  0003E6  26D9               	addwf	fsr2l,f,c
  7409  0003E8  0100               	movlb	0	; () banked
  7410  0003EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7411  0003EC  22DA               	addwfc	fsr2h,f,c
  7412  0003EE  2ADF               	incf	indf2,f,c
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;my_i2c.c: 251: if (SSP1STATbits.D_A == 1)
  7416  0003F0  AAC7               	btfss	4039,5,c	;volatile
  7417  0003F2  D01E               	goto	i2l326
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;my_i2c.c: 252: {
  7421                           ;my_i2c.c: 254: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7422  0003F4  0100               	movlb	0	; () banked
  7423  0003F6  EE20 F00E          	lfsr	2,14
  7424  0003FA  0100               	movlb	0	; () banked
  7425  0003FC  51C5               	movf	_ic_ptr& (0+255),w,b
  7426  0003FE  26D9               	addwf	fsr2l,f,c
  7427  000400  0100               	movlb	0	; () banked
  7428  000402  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7429  000404  22DA               	addwfc	fsr2h,f,c
  7430  000406  50DF               	movf	indf2,w,c
  7431  000408  0100               	movlb	0	; () banked
  7432  00040A  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7433  00040C  0100               	movlb	0	; () banked
  7434  00040E  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7435  000410  0D01               	mullw	1
  7436  000412  50F3               	movf	prodl,w,c
  7437  000414  0100               	movlb	0	; () banked
  7438  000416  25C5               	addwf	_ic_ptr& (0+255),w,b
  7439  000418  6ED9               	movwf	fsr2l,c
  7440  00041A  50F4               	movf	prodh,w,c
  7441  00041C  0100               	movlb	0	; () banked
  7442  00041E  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7443  000420  6EDA               	movwf	fsr2h,c
  7444  000422  0100               	movlb	0	; () banked
  7445  000424  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;my_i2c.c: 255: ic_ptr->buflen++;
  7449  000428  0100               	movlb	0	; () banked
  7450  00042A  EE20 F00E          	lfsr	2,14
  7451  00042E  D02F               	goto	L7
  7452  000430                     i2l326:
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;my_i2c.c: 257: else
  7456                           ;my_i2c.c: 258: {
  7457                           ;my_i2c.c: 259: if (SSPSTATbits.R_W == 1)
  7458  000430  A4C7               	btfss	4039,2,c	;volatile
  7459  000432  D6C0               	goto	i2l3800
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;my_i2c.c: 260: {
  7463                           ;my_i2c.c: 262: ic_ptr->status = 0x8;
  7464  000434  0100               	movlb	0	; () banked
  7465  000436  EE20 F021          	lfsr	2,33
  7466  00043A  0100               	movlb	0	; () banked
  7467  00043C  51C5               	movf	_ic_ptr& (0+255),w,b
  7468  00043E  26D9               	addwf	fsr2l,f,c
  7469  000440  0100               	movlb	0	; () banked
  7470  000442  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7471  000444  22DA               	addwfc	fsr2h,f,c
  7472  000446  0E08               	movlw	8
  7473  000448  6EDF               	movwf	indf2,c
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;my_i2c.c: 263: msg_ready = 1;
  7477  00044A  0E01               	movlw	1
  7478  00044C  0100               	movlb	0	; () banked
  7479  00044E  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;my_i2c.c: 264: msg_to_send = 1;
  7483  000450  0E01               	movlw	1
  7484  000452  0100               	movlb	0	; () banked
  7485  000454  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;my_i2c.c: 266: data_read = 0;
  7489  000456  0E00               	movlw	0
  7490  000458  0100               	movlb	0	; () banked
  7491  00045A  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;my_i2c.c: 267: ic_ptr->outbufind = 0;
  7495  00045C  0100               	movlb	0	; () banked
  7496  00045E  EE20 F01E          	lfsr	2,30
  7497  000462  0100               	movlb	0	; () banked
  7498  000464  51C5               	movf	_ic_ptr& (0+255),w,b
  7499  000466  26D9               	addwf	fsr2l,f,c
  7500  000468  0100               	movlb	0	; () banked
  7501  00046A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7502  00046C  22DA               	addwfc	fsr2h,f,c
  7503  00046E  0E00               	movlw	0
  7504  000470  6EDF               	movwf	indf2,c
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;my_i2c.c: 268: SSPBUF = ic_ptr->outbuffer[0];
  7508  000472  0100               	movlb	0	; () banked
  7509  000474  EE20 F010          	lfsr	2,16
  7510  000478  0100               	movlb	0	; () banked
  7511  00047A  51C5               	movf	_ic_ptr& (0+255),w,b
  7512  00047C  26D9               	addwf	fsr2l,f,c
  7513  00047E  0100               	movlb	0	; () banked
  7514  000480  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7515  000482  22DA               	addwfc	fsr2h,f,c
  7516  000484  50DF               	movf	indf2,w,c
  7517  000486  6EC9               	movwf	4041,c	;volatile
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;my_i2c.c: 269: ic_ptr->outbufind++;
  7521  000488  0100               	movlb	0	; () banked
  7522  00048A  EE20 F01E          	lfsr	2,30
  7523  00048E                     L7:
  7524  00048E  0100               	movlb	0	; () banked
  7525  000490  51C5               	movf	_ic_ptr& (0+255),w,b
  7526  000492  26D9               	addwf	fsr2l,f,c
  7527  000494  0100               	movlb	0	; () banked
  7528  000496  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7529  000498  22DA               	addwfc	fsr2h,f,c
  7530  00049A  2ADF               	incf	indf2,f,c
  7531                           
  7532                           ;my_i2c.c: 271: }
  7533  00049C  D021               	goto	i2l3886
  7534  00049E                     L9:
  7535                           
  7536                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
  7537  00049E  0100               	movlb	0	; () banked
  7538  0004A0  EE20 F021          	lfsr	2,33
  7539  0004A4  0100               	movlb	0	; () banked
  7540  0004A6  51C5               	movf	_ic_ptr& (0+255),w,b
  7541  0004A8  26D9               	addwf	fsr2l,f,c
  7542  0004AA  0100               	movlb	0	; () banked
  7543  0004AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7544  0004AE  22DA               	addwfc	fsr2h,f,c
  7545  0004B0  0E05               	movlw	5
  7546  0004B2  D72C               	goto	L6
  7547  0004B4                     i2l3884:
  7548                           
  7549                           ; BSR set to: 0
  7550  0004B4  0100               	movlb	0	; () banked
  7551  0004B6  EE20 F021          	lfsr	2,33
  7552  0004BA  0100               	movlb	0	; () banked
  7553  0004BC  51C5               	movf	_ic_ptr& (0+255),w,b
  7554  0004BE  26D9               	addwf	fsr2l,f,c
  7555  0004C0  0100               	movlb	0	; () banked
  7556  0004C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7557  0004C4  22DA               	addwfc	fsr2h,f,c
  7558  0004C6  50DF               	movf	indf2,w,c
  7559                           
  7560                           ; Switch size 1, requested type "space"
  7561                           ; Number of cases is 4, Range of values is 5 to 8
  7562                           ; switch strategies available:
  7563                           ; Name         Instructions Cycles
  7564                           ; simple_byte           13     7 (average)
  7565                           ;	Chosen strategy is simple_byte
  7566  0004C8  0A05               	xorlw	5	; case 5
  7567  0004CA  B4D8               	btfsc	status,2,c
  7568  0004CC  D644               	goto	i2l299
  7569  0004CE  0A03               	xorlw	3	; case 6
  7570  0004D0  B4D8               	btfsc	status,2,c
  7571  0004D2  D65A               	goto	i2l303
  7572  0004D4  0A01               	xorlw	1	; case 7
  7573  0004D6  B4D8               	btfsc	status,2,c
  7574  0004D8  D71B               	goto	i2l3830
  7575  0004DA  0A0F               	xorlw	15	; case 8
  7576  0004DC  B4D8               	btfsc	status,2,c
  7577  0004DE  D6DA               	goto	i2l3820
  7578  0004E0                     i2l3886:
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;my_i2c.c: 283: }
  7582                           ;my_i2c.c: 285: blip1();
  7583  0004E0  EC1A  F00F         	call	i2_blip1	;wreg free
  7584                           
  7585                           ;my_i2c.c: 288: if (data_read || data_written) {
  7586  0004E4  0100               	movlb	0	; () banked
  7587  0004E6  67A9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7588  0004E8  D004               	goto	i2l332
  7589                           
  7590                           ; BSR set to: 0
  7591  0004EA  0100               	movlb	0	; () banked
  7592  0004EC  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7593  0004EE  B4D8               	btfsc	status,2,c
  7594  0004F0  D002               	goto	i2l3894
  7595  0004F2                     i2l332:
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;my_i2c.c: 290: if (SSPCON1bits.CKP == 0) {
  7599  0004F2  A8C6               	btfss	4038,4,c	;volatile
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;my_i2c.c: 291: SSPCON1bits.CKP = 1;
  7603  0004F4  88C6               	bsf	4038,4,c	;volatile
  7604  0004F6                     i2l3894:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;my_i2c.c: 292: }
  7608                           ;my_i2c.c: 293: }
  7609                           ;my_i2c.c: 298: if ((ic_ptr->buflen > 14) && (!msg_ready))
  7610  0004F6  0100               	movlb	0	; () banked
  7611  0004F8  EE20 F00E          	lfsr	2,14
  7612  0004FC  0100               	movlb	0	; () banked
  7613  0004FE  51C5               	movf	_ic_ptr& (0+255),w,b
  7614  000500  26D9               	addwf	fsr2l,f,c
  7615  000502  0100               	movlb	0	; () banked
  7616  000504  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7617  000506  22DA               	addwfc	fsr2h,f,c
  7618  000508  0E0E               	movlw	14
  7619  00050A  64DF               	cpfsgt	indf2,c
  7620  00050C  D023               	goto	i2l3900
  7621                           
  7622                           ; BSR set to: 0
  7623  00050E  0100               	movlb	0	; () banked
  7624  000510  67A8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7625  000512  D020               	goto	i2l3900
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;my_i2c.c: 299: {
  7629                           ;my_i2c.c: 301: ic_ptr->status = 0x5;
  7630  000514  0100               	movlb	0	; () banked
  7631  000516  EE20 F021          	lfsr	2,33
  7632  00051A  0100               	movlb	0	; () banked
  7633  00051C  51C5               	movf	_ic_ptr& (0+255),w,b
  7634  00051E  26D9               	addwf	fsr2l,f,c
  7635  000520  0100               	movlb	0	; () banked
  7636  000522  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7637  000524  22DA               	addwfc	fsr2h,f,c
  7638  000526  0E05               	movlw	5
  7639  000528  6EDF               	movwf	indf2,c
  7640                           
  7641                           ;my_i2c.c: 302: ic_ptr->error_count++;
  7642  00052A  0100               	movlb	0	; () banked
  7643  00052C  EE20 F023          	lfsr	2,35
  7644  000530  0100               	movlb	0	; () banked
  7645  000532  51C5               	movf	_ic_ptr& (0+255),w,b
  7646  000534  26D9               	addwf	fsr2l,f,c
  7647  000536  0100               	movlb	0	; () banked
  7648  000538  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7649  00053A  22DA               	addwfc	fsr2h,f,c
  7650  00053C  2ADF               	incf	indf2,f,c
  7651                           
  7652                           ;my_i2c.c: 303: ic_ptr->error_code = 0x7;
  7653  00053E  0100               	movlb	0	; () banked
  7654  000540  EE20 F022          	lfsr	2,34
  7655  000544  0100               	movlb	0	; () banked
  7656  000546  51C5               	movf	_ic_ptr& (0+255),w,b
  7657  000548  26D9               	addwf	fsr2l,f,c
  7658  00054A  0100               	movlb	0	; () banked
  7659  00054C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7660  00054E  22DA               	addwfc	fsr2h,f,c
  7661  000550  0E07               	movlw	7
  7662  000552  6EDF               	movwf	indf2,c
  7663  000554                     i2l3900:
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;my_i2c.c: 304: }
  7667                           ;my_i2c.c: 306: if (msg_ready)
  7668  000554  0100               	movlb	0	; () banked
  7669  000556  51A8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7670  000558  B4D8               	btfsc	status,2,c
  7671  00055A  D032               	goto	i2l3908
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;my_i2c.c: 307: {
  7675                           ;my_i2c.c: 308: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7676  00055C  0100               	movlb	0	; () banked
  7677  00055E  EE20 F020          	lfsr	2,32
  7678  000562  0100               	movlb	0	; () banked
  7679  000564  51C5               	movf	_ic_ptr& (0+255),w,b
  7680  000566  26D9               	addwf	fsr2l,f,c
  7681  000568  0100               	movlb	0	; () banked
  7682  00056A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7683  00056C  22DA               	addwfc	fsr2h,f,c
  7684  00056E  0100               	movlb	0	; () banked
  7685  000570  EE10 F00E          	lfsr	1,14
  7686  000574  0100               	movlb	0	; () banked
  7687  000576  51C5               	movf	_ic_ptr& (0+255),w,b
  7688  000578  26E1               	addwf	fsr1l,f,c
  7689  00057A  0100               	movlb	0	; () banked
  7690  00057C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7691  00057E  22E2               	addwfc	fsr1h,f,c
  7692  000580  50E7               	movf	indf1,w,c
  7693  000582  0100               	movlb	0	; () banked
  7694  000584  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7695  000586  0100               	movlb	0	; () banked
  7696  000588  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7697  00058A  0D01               	mullw	1
  7698  00058C  50F3               	movf	prodl,w,c
  7699  00058E  0100               	movlb	0	; () banked
  7700  000590  25C5               	addwf	_ic_ptr& (0+255),w,b
  7701  000592  6EE1               	movwf	fsr1l,c
  7702  000594  50F4               	movf	prodh,w,c
  7703  000596  0100               	movlb	0	; () banked
  7704  000598  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7705  00059A  6EE2               	movwf	fsr1h,c
  7706  00059C  CFDF FFE7          	movff	indf2,indf1
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;my_i2c.c: 309: ToMainHigh_sendmsg(14, 40, (void *) ic_ptr->buffer);
  7710  0005A0  0E28               	movlw	40
  7711  0005A2  0100               	movlb	0	; () banked
  7712  0005A4  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7713  0005A6  0100               	movlb	0	; () banked
  7714  0005A8  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7715  0005AC  0100               	movlb	0	; () banked
  7716  0005AE  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7717  0005B2  0E0E               	movlw	14
  7718  0005B4  EC2C  F00E         	call	_ToMainHigh_sendmsg
  7719                           
  7720                           ;my_i2c.c: 310: ic_ptr->buflen = 0;
  7721  0005B8  0100               	movlb	0	; () banked
  7722  0005BA  EE20 F00E          	lfsr	2,14
  7723  0005BE  D041               	goto	L8
  7724  0005C0                     i2l3908:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;my_i2c.c: 312: else if (ic_ptr->error_count >= 1)
  7728  0005C0  0100               	movlb	0	; () banked
  7729  0005C2  EE20 F023          	lfsr	2,35
  7730  0005C6  0100               	movlb	0	; () banked
  7731  0005C8  51C5               	movf	_ic_ptr& (0+255),w,b
  7732  0005CA  26D9               	addwf	fsr2l,f,c
  7733  0005CC  0100               	movlb	0	; () banked
  7734  0005CE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7735  0005D0  22DA               	addwfc	fsr2h,f,c
  7736  0005D2  50DF               	movf	indf2,w,c
  7737  0005D4  B4D8               	btfsc	status,2,c
  7738  0005D6  D03D               	goto	i2l3916
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;my_i2c.c: 313: {
  7742                           ;my_i2c.c: 314: error_buf[0] = ic_ptr->error_count;
  7743  0005D8  0100               	movlb	0	; () banked
  7744  0005DA  EE20 F023          	lfsr	2,35
  7745  0005DE  0100               	movlb	0	; () banked
  7746  0005E0  51C5               	movf	_ic_ptr& (0+255),w,b
  7747  0005E2  26D9               	addwf	fsr2l,f,c
  7748  0005E4  0100               	movlb	0	; () banked
  7749  0005E6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7750  0005E8  22DA               	addwfc	fsr2h,f,c
  7751  0005EA  50DF               	movf	indf2,w,c
  7752  0005EC  0100               	movlb	0	; () banked
  7753  0005EE  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  7754                           
  7755                           ;my_i2c.c: 315: error_buf[1] = ic_ptr->error_code;
  7756  0005F0  0100               	movlb	0	; () banked
  7757  0005F2  EE20 F022          	lfsr	2,34
  7758  0005F6  0100               	movlb	0	; () banked
  7759  0005F8  51C5               	movf	_ic_ptr& (0+255),w,b
  7760  0005FA  26D9               	addwf	fsr2l,f,c
  7761  0005FC  0100               	movlb	0	; () banked
  7762  0005FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7763  000600  22DA               	addwfc	fsr2h,f,c
  7764  000602  50DF               	movf	indf2,w,c
  7765  000604  0100               	movlb	0	; () banked
  7766  000606  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7767                           
  7768                           ;my_i2c.c: 316: error_buf[2] = ic_ptr->event_count;
  7769  000608  0100               	movlb	0	; () banked
  7770  00060A  EE20 F020          	lfsr	2,32
  7771  00060E  0100               	movlb	0	; () banked
  7772  000610  51C5               	movf	_ic_ptr& (0+255),w,b
  7773  000612  26D9               	addwf	fsr2l,f,c
  7774  000614  0100               	movlb	0	; () banked
  7775  000616  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7776  000618  22DA               	addwfc	fsr2h,f,c
  7777  00061A  50DF               	movf	indf2,w,c
  7778  00061C  0100               	movlb	0	; () banked
  7779  00061E  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;my_i2c.c: 317: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7783  000620  0E29               	movlw	41
  7784  000622  0100               	movlb	0	; () banked
  7785  000624  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7786  000626  0100               	movlb	0	; () banked
  7787  000628  0E00               	movlw	high i2c_int_handler@error_buf
  7788  00062A  0100               	movlb	0	; () banked
  7789  00062C  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7790  00062E  0100               	movlb	0	; () banked
  7791  000630  0E9F               	movlw	low i2c_int_handler@error_buf
  7792  000632  0100               	movlb	0	; () banked
  7793  000634  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7794  000636  0E03               	movlw	3
  7795  000638  EC2C  F00E         	call	_ToMainHigh_sendmsg
  7796                           
  7797                           ;my_i2c.c: 318: ic_ptr->error_count = 0;
  7798  00063C  0100               	movlb	0	; () banked
  7799  00063E  EE20 F023          	lfsr	2,35
  7800  000642                     L8:
  7801  000642  0100               	movlb	0	; () banked
  7802  000644  51C5               	movf	_ic_ptr& (0+255),w,b
  7803  000646  26D9               	addwf	fsr2l,f,c
  7804  000648  0100               	movlb	0	; () banked
  7805  00064A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7806  00064C  22DA               	addwfc	fsr2h,f,c
  7807  00064E  0E00               	movlw	0
  7808  000650  6EDF               	movwf	indf2,c
  7809  000652                     i2l3916:
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;my_i2c.c: 319: }
  7813                           ;my_i2c.c: 320: if (msg_to_send) {
  7814  000652  0100               	movlb	0	; () banked
  7815  000654  51A6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7816  000656  B4D8               	btfsc	status,2,c
  7817  000658  D01F               	goto	i2l3924
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;my_i2c.c: 322: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  7821  00065A  0E10               	movlw	16
  7822  00065C  0100               	movlb	0	; () banked
  7823  00065E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7824  000660  0100               	movlb	0	; () banked
  7825  000662  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7826  000664  0E00               	movlw	0
  7827  000666  0100               	movlb	0	; () banked
  7828  000668  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7829  00066A  0100               	movlb	0	; () banked
  7830  00066C  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7831  00066E  0E0E               	movlw	14
  7832  000670  EC04  F008         	call	_start_i2c_slave_reply
  7833                           
  7834                           ;my_i2c.c: 324: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7835  000674  0E2A               	movlw	42
  7836  000676  0100               	movlb	0	; () banked
  7837  000678  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7838  00067A  0100               	movlb	0	; () banked
  7839  00067C  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7840  000680  0100               	movlb	0	; () banked
  7841  000682  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7842  000686  0E00               	movlw	0
  7843  000688  EC2C  F00E         	call	_ToMainHigh_sendmsg
  7844                           
  7845                           ;my_i2c.c: 325: need_data = 1;
  7846  00068C  0E01               	movlw	1
  7847  00068E  0100               	movlb	0	; () banked
  7848  000690  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;my_i2c.c: 326: msg_to_send = 0;
  7852  000692  0E00               	movlw	0
  7853  000694  0100               	movlb	0	; () banked
  7854  000696  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7855  000698                     i2l3924:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;my_i2c.c: 327: }
  7859                           ;my_i2c.c: 329: blip1();
  7860  000698  EC1A  F00F         	call	i2_blip1	;wreg free
  7861                           
  7862                           ;my_i2c.c: 331: if(need_data)
  7863  00069C  0100               	movlb	0	; () banked
  7864  00069E  51A4               	movf	i2c_int_handler@need_data& (0+255),w,b
  7865  0006A0  B4D8               	btfsc	status,2,c
  7866  0006A2  D01A               	goto	i2l3936
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;my_i2c.c: 332: {
  7870                           ;my_i2c.c: 333: unsigned char msg_type;
  7871                           ;my_i2c.c: 334: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  7872  0006A4  0100               	movlb	0	; () banked
  7873  0006A6  0E00               	movlw	high i2c_int_handler@msg_type
  7874  0006A8  0100               	movlb	0	; () banked
  7875  0006AA  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7876  0006AC  0100               	movlb	0	; () banked
  7877  0006AE  0EA7               	movlw	low i2c_int_handler@msg_type
  7878  0006B0  0100               	movlb	0	; () banked
  7879  0006B2  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7880  0006B4  0E10               	movlw	16
  7881  0006B6  0100               	movlb	0	; () banked
  7882  0006B8  25C5               	addwf	_ic_ptr& (0+255),w,b
  7883  0006BA  0100               	movlb	0	; () banked
  7884  0006BC  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7885  0006BE  0E00               	movlw	0
  7886  0006C0  0100               	movlb	0	; () banked
  7887  0006C2  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7888  0006C4  0100               	movlb	0	; () banked
  7889  0006C6  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7890  0006C8  0E0E               	movlw	14
  7891  0006CA  EC98  F00D         	call	_FromMainHigh_recvmsg
  7892  0006CE  0100               	movlb	0	; () banked
  7893  0006D0  6F9E               	movwf	i2c_int_handler@length& (0+255),b
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;my_i2c.c: 343: else
  7897                           ;my_i2c.c: 344: {
  7898                           ;my_i2c.c: 345: need_data = 0;
  7899                           
  7900                           ; BSR set to: 0
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;my_i2c.c: 340: {
  7904                           ;my_i2c.c: 342: }
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;my_i2c.c: 339: else if( length < 0 )
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;my_i2c.c: 336: {
  7911                           ;my_i2c.c: 338: }
  7912                           
  7913                           ;my_i2c.c: 335: if( length == -4 )
  7914  0006D2  0E00               	movlw	0
  7915  0006D4  0100               	movlb	0	; () banked
  7916  0006D6  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7917  0006D8                     i2l3936:
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;my_i2c.c: 346: }
  7921                           ;my_i2c.c: 347: }
  7922                           ;my_i2c.c: 349: blip1();
  7923  0006D8  EC1A  F00F         	call	i2_blip1	;wreg free
  7924                           
  7925                           ;my_i2c.c: 350: LATDbits.LD2 = 1;
  7926  0006DC  848C               	bsf	3980,2,c	;volatile
  7927                           
  7928                           ;my_i2c.c: 351: LATDbits.LD2 = 0;
  7929  0006DE  948C               	bcf	3980,2,c	;volatile
  7930  0006E0  0012               	return	
  7931  0006E2                     __end_of_i2c_int_handler:
  7932                           	opt stack 0
  7933                           pclatu	equ	0xFFB
  7934                           pclath	equ	0xFFA
  7935                           tblptru	equ	0xFF8
  7936                           tblptrh	equ	0xFF7
  7937                           tblptrl	equ	0xFF6
  7938                           tablat	equ	0xFF5
  7939                           prodh	equ	0xFF4
  7940                           prodl	equ	0xFF3
  7941                           intcon	equ	0xFF2
  7942                           postinc0	equ	0xFEE
  7943                           fsr0h	equ	0xFEA
  7944                           fsr0l	equ	0xFE9
  7945                           wreg	equ	0xFE8
  7946                           indf1	equ	0xFE7
  7947                           fsr1h	equ	0xFE2
  7948                           fsr1l	equ	0xFE1
  7949                           bsr	equ	0xFE0
  7950                           indf2	equ	0xFDF
  7951                           postinc2	equ	0xFDE
  7952                           postdec2	equ	0xFDD
  7953                           fsr2h	equ	0xFDA
  7954                           fsr2l	equ	0xFD9
  7955                           status	equ	0xFD8
  7956                           
  7957 ;; *************** function i2_blip2 *****************
  7958 ;; Defined at:
  7959 ;;		line 25 in file "../src/debug.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;		None               void
  7966 ;; Registers used:
  7967 ;;		None
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7973 ;;      Params:         0       0       0       0       0
  7974 ;;      Locals:         0       0       0       0       0
  7975 ;;      Temps:          0       0       0       0       0
  7976 ;;      Totals:         0       0       0       0       0
  7977 ;;Total ram usage:        0 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		_i2c_int_handler
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text46
  7987  001E2C                     __ptext46:
  7988                           	opt stack 0
  7989  001E2C                     i2_blip2:
  7990                           	opt stack 18
  7991                           
  7992                           ;debug.c: 27: LATDbits.LD5 = 0;
  7993                           
  7994                           ;incstack = 0
  7995  001E2C  9A8C               	bcf	3980,5,c	;volatile
  7996                           
  7997                           ;debug.c: 28: LATDbits.LD5 = 1;
  7998  001E2E  8A8C               	bsf	3980,5,c	;volatile
  7999                           
  8000                           ;debug.c: 29: LATDbits.LD5 = 0;
  8001  001E30  9A8C               	bcf	3980,5,c	;volatile
  8002  001E32  0012               	return	
  8003  001E34                     __end_ofi2_blip2:
  8004                           	opt stack 0
  8005                           pclatu	equ	0xFFB
  8006                           pclath	equ	0xFFA
  8007                           tblptru	equ	0xFF8
  8008                           tblptrh	equ	0xFF7
  8009                           tblptrl	equ	0xFF6
  8010                           tablat	equ	0xFF5
  8011                           prodh	equ	0xFF4
  8012                           prodl	equ	0xFF3
  8013                           intcon	equ	0xFF2
  8014                           postinc0	equ	0xFEE
  8015                           fsr0h	equ	0xFEA
  8016                           fsr0l	equ	0xFE9
  8017                           wreg	equ	0xFE8
  8018                           indf1	equ	0xFE7
  8019                           fsr1h	equ	0xFE2
  8020                           fsr1l	equ	0xFE1
  8021                           bsr	equ	0xFE0
  8022                           indf2	equ	0xFDF
  8023                           postinc2	equ	0xFDE
  8024                           postdec2	equ	0xFDD
  8025                           fsr2h	equ	0xFDA
  8026                           fsr2l	equ	0xFD9
  8027                           status	equ	0xFD8
  8028                           
  8029 ;; *************** function i2_blip1 *****************
  8030 ;; Defined at:
  8031 ;;		line 18 in file "../src/debug.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;		None
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;		None               void
  8038 ;; Registers used:
  8039 ;;		None
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8045 ;;      Params:         0       0       0       0       0
  8046 ;;      Locals:         0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0
  8048 ;;      Totals:         0       0       0       0       0
  8049 ;;Total ram usage:        0 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		_i2c_int_handler
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text47
  8059  001E34                     __ptext47:
  8060                           	opt stack 0
  8061  001E34                     i2_blip1:
  8062                           	opt stack 18
  8063                           
  8064                           ;debug.c: 20: LATDbits.LD4 = 0;
  8065                           
  8066                           ;incstack = 0
  8067  001E34  988C               	bcf	3980,4,c	;volatile
  8068                           
  8069                           ;debug.c: 21: LATDbits.LD4 = 1;
  8070  001E36  888C               	bsf	3980,4,c	;volatile
  8071                           
  8072                           ;debug.c: 22: LATDbits.LD4 = 0;
  8073  001E38  988C               	bcf	3980,4,c	;volatile
  8074  001E3A  0012               	return	
  8075  001E3C                     __end_ofi2_blip1:
  8076                           	opt stack 0
  8077                           pclatu	equ	0xFFB
  8078                           pclath	equ	0xFFA
  8079                           tblptru	equ	0xFF8
  8080                           tblptrh	equ	0xFF7
  8081                           tblptrl	equ	0xFF6
  8082                           tablat	equ	0xFF5
  8083                           prodh	equ	0xFF4
  8084                           prodl	equ	0xFF3
  8085                           intcon	equ	0xFF2
  8086                           postinc0	equ	0xFEE
  8087                           fsr0h	equ	0xFEA
  8088                           fsr0l	equ	0xFE9
  8089                           wreg	equ	0xFE8
  8090                           indf1	equ	0xFE7
  8091                           fsr1h	equ	0xFE2
  8092                           fsr1l	equ	0xFE1
  8093                           bsr	equ	0xFE0
  8094                           indf2	equ	0xFDF
  8095                           postinc2	equ	0xFDE
  8096                           postdec2	equ	0xFDD
  8097                           fsr2h	equ	0xFDA
  8098                           fsr2l	equ	0xFD9
  8099                           status	equ	0xFD8
  8100                           
  8101 ;; *************** function _start_i2c_slave_reply *****************
  8102 ;; Defined at:
  8103 ;;		line 54 in file "../src/my_i2c.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  length          1    wreg     unsigned char 
  8106 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8107 ;;		 -> NULL(0), main@ic(38), 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  length          1    4[BANK0 ] unsigned char 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;		None               void
  8112 ;; Registers used:
  8113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8119 ;;      Params:         0       2       0       0       0
  8120 ;;      Locals:         0       1       0       0       0
  8121 ;;      Temps:          0       2       0       0       0
  8122 ;;      Totals:         0       5       0       0       0
  8123 ;;Total ram usage:        5 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_i2c_int_handler
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text48
  8133  001008                     __ptext48:
  8134                           	opt stack 0
  8135  001008                     _start_i2c_slave_reply:
  8136                           	opt stack 18
  8137                           
  8138                           ;incstack = 0
  8139                           ;start_i2c_slave_reply@length stored from wreg
  8140  001008  0100               	movlb	0	; () banked
  8141  00100A  6F84               	movwf	start_i2c_slave_reply@length& (0+255),b
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8145  00100C  0100               	movlb	0	; () banked
  8146  00100E  EE20 F01F          	lfsr	2,31
  8147  001012  0100               	movlb	0	; () banked
  8148  001014  51C5               	movf	_ic_ptr& (0+255),w,b
  8149  001016  26D9               	addwf	fsr2l,f,c
  8150  001018  0100               	movlb	0	; () banked
  8151  00101A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8152  00101C  22DA               	addwfc	fsr2h,f,c
  8153  00101E  0E00               	movlw	0
  8154  001020  6EDF               	movwf	indf2,c
  8155  001022  D03E               	goto	i2l2744
  8156  001024                     i2l2740:
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8160  001024  0100               	movlb	0	; () banked
  8161  001026  EE20 F01F          	lfsr	2,31
  8162  00102A  0100               	movlb	0	; () banked
  8163  00102C  51C5               	movf	_ic_ptr& (0+255),w,b
  8164  00102E  26D9               	addwf	fsr2l,f,c
  8165  001030  0100               	movlb	0	; () banked
  8166  001032  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8167  001034  22DA               	addwfc	fsr2h,f,c
  8168  001036  50DF               	movf	indf2,w,c
  8169  001038  0100               	movlb	0	; () banked
  8170  00103A  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8171  00103C  0100               	movlb	0	; () banked
  8172  00103E  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8173  001040  0D01               	mullw	1
  8174  001042  50F3               	movf	prodl,w,c
  8175  001044  0100               	movlb	0	; () banked
  8176  001046  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  8177  001048  6ED9               	movwf	fsr2l,c
  8178  00104A  50F4               	movf	prodh,w,c
  8179  00104C  0100               	movlb	0	; () banked
  8180  00104E  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  8181  001050  6EDA               	movwf	fsr2h,c
  8182  001052  0100               	movlb	0	; () banked
  8183  001054  EE10 F01F          	lfsr	1,31
  8184  001058  0100               	movlb	0	; () banked
  8185  00105A  51C5               	movf	_ic_ptr& (0+255),w,b
  8186  00105C  26E1               	addwf	fsr1l,f,c
  8187  00105E  0100               	movlb	0	; () banked
  8188  001060  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8189  001062  22E2               	addwfc	fsr1h,f,c
  8190  001064  50E7               	movf	indf1,w,c
  8191  001066  0100               	movlb	0	; () banked
  8192  001068  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8193  00106A  0100               	movlb	0	; () banked
  8194  00106C  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8195  00106E  0D01               	mullw	1
  8196  001070  0E10               	movlw	16
  8197  001072  26F3               	addwf	prodl,f,c
  8198  001074  0E00               	movlw	0
  8199  001076  22F4               	addwfc	prodh,f,c
  8200  001078  50F3               	movf	prodl,w,c
  8201  00107A  0100               	movlb	0	; () banked
  8202  00107C  25C5               	addwf	_ic_ptr& (0+255),w,b
  8203  00107E  6EE1               	movwf	fsr1l,c
  8204  001080  50F4               	movf	prodh,w,c
  8205  001082  0100               	movlb	0	; () banked
  8206  001084  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8207  001086  6EE2               	movwf	fsr1h,c
  8208  001088  CFDF FFE7          	movff	indf2,indf1
  8209                           
  8210                           ; BSR set to: 0
  8211  00108C  0100               	movlb	0	; () banked
  8212  00108E  EE20 F01F          	lfsr	2,31
  8213  001092  0100               	movlb	0	; () banked
  8214  001094  51C5               	movf	_ic_ptr& (0+255),w,b
  8215  001096  26D9               	addwf	fsr2l,f,c
  8216  001098  0100               	movlb	0	; () banked
  8217  00109A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8218  00109C  22DA               	addwfc	fsr2h,f,c
  8219  00109E  2ADF               	incf	indf2,f,c
  8220  0010A0                     i2l2744:
  8221                           
  8222                           ; BSR set to: 0
  8223  0010A0  0100               	movlb	0	; () banked
  8224  0010A2  EE20 F01F          	lfsr	2,31
  8225  0010A6  0100               	movlb	0	; () banked
  8226  0010A8  51C5               	movf	_ic_ptr& (0+255),w,b
  8227  0010AA  26D9               	addwf	fsr2l,f,c
  8228  0010AC  0100               	movlb	0	; () banked
  8229  0010AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8230  0010B0  22DA               	addwfc	fsr2h,f,c
  8231  0010B2  50DF               	movf	indf2,w,c
  8232  0010B4  0100               	movlb	0	; () banked
  8233  0010B6  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8234  0010B8  0100               	movlb	0	; () banked
  8235  0010BA  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8236  0010BC  0100               	movlb	0	; () banked
  8237  0010BE  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8238  0010C0  A0D8               	btfss	status,0,c
  8239  0010C2  D7B0               	goto	i2l2740
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;my_i2c.c: 58: }
  8243                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  8244                           
  8245                           ; BSR set to: 0
  8246  0010C4  0100               	movlb	0	; () banked
  8247  0010C6  EE20 F01F          	lfsr	2,31
  8248  0010CA  0100               	movlb	0	; () banked
  8249  0010CC  51C5               	movf	_ic_ptr& (0+255),w,b
  8250  0010CE  26D9               	addwf	fsr2l,f,c
  8251  0010D0  0100               	movlb	0	; () banked
  8252  0010D2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8253  0010D4  22DA               	addwfc	fsr2h,f,c
  8254  0010D6  0100               	movlb	0	; () banked
  8255  0010D8  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8256                           
  8257                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  8258  0010DC  0100               	movlb	0	; () banked
  8259  0010DE  EE20 F01E          	lfsr	2,30
  8260  0010E2  0100               	movlb	0	; () banked
  8261  0010E4  51C5               	movf	_ic_ptr& (0+255),w,b
  8262  0010E6  26D9               	addwf	fsr2l,f,c
  8263  0010E8  0100               	movlb	0	; () banked
  8264  0010EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8265  0010EC  22DA               	addwfc	fsr2h,f,c
  8266  0010EE  0E01               	movlw	1
  8267  0010F0  6EDF               	movwf	indf2,c
  8268                           
  8269                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  8270  0010F2  0100               	movlb	0	; () banked
  8271  0010F4  EE20 F010          	lfsr	2,16
  8272  0010F8  0100               	movlb	0	; () banked
  8273  0010FA  51C5               	movf	_ic_ptr& (0+255),w,b
  8274  0010FC  26D9               	addwf	fsr2l,f,c
  8275  0010FE  0100               	movlb	0	; () banked
  8276  001100  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8277  001102  22DA               	addwfc	fsr2h,f,c
  8278  001104  50DF               	movf	indf2,w,c
  8279  001106  6EC9               	movwf	4041,c	;volatile
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  8283  001108  88C6               	bsf	4038,4,c	;volatile
  8284                           
  8285                           ; BSR set to: 0
  8286  00110A  0012               	return	
  8287  00110C                     __end_of_start_i2c_slave_reply:
  8288                           	opt stack 0
  8289                           pclatu	equ	0xFFB
  8290                           pclath	equ	0xFFA
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           postinc0	equ	0xFEE
  8299                           fsr0h	equ	0xFEA
  8300                           fsr0l	equ	0xFE9
  8301                           wreg	equ	0xFE8
  8302                           indf1	equ	0xFE7
  8303                           fsr1h	equ	0xFE2
  8304                           fsr1l	equ	0xFE1
  8305                           bsr	equ	0xFE0
  8306                           indf2	equ	0xFDF
  8307                           postinc2	equ	0xFDE
  8308                           postdec2	equ	0xFDD
  8309                           fsr2h	equ	0xFDA
  8310                           fsr2l	equ	0xFD9
  8311                           status	equ	0xFD8
  8312                           
  8313 ;; *************** function _handle_start *****************
  8314 ;; Defined at:
  8315 ;;		line 72 in file "../src/my_i2c.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  data_read       1    wreg     unsigned char 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  data_read       1    0[BANK0 ] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;		None               void
  8322 ;; Registers used:
  8323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8329 ;;      Params:         0       0       0       0       0
  8330 ;;      Locals:         0       1       0       0       0
  8331 ;;      Temps:          0       0       0       0       0
  8332 ;;      Totals:         0       1       0       0       0
  8333 ;;Total ram usage:        1 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; This function calls:
  8336 ;;		Nothing
  8337 ;; This function is called by:
  8338 ;;		_i2c_int_handler
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           	psect	text49
  8343  0011F4                     __ptext49:
  8344                           	opt stack 0
  8345  0011F4                     _handle_start:
  8346                           	opt stack 18
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;incstack = 0
  8350                           ;handle_start@data_read stored from wreg
  8351  0011F4  0100               	movlb	0	; () banked
  8352  0011F6  6F80               	movwf	handle_start@data_read& (0+255),b
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8356  0011F8  0100               	movlb	0	; () banked
  8357  0011FA  EE20 F020          	lfsr	2,32
  8358  0011FE  0100               	movlb	0	; () banked
  8359  001200  51C5               	movf	_ic_ptr& (0+255),w,b
  8360  001202  26D9               	addwf	fsr2l,f,c
  8361  001204  0100               	movlb	0	; () banked
  8362  001206  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8363  001208  22DA               	addwfc	fsr2h,f,c
  8364  00120A  0E01               	movlw	1
  8365  00120C  6EDF               	movwf	indf2,c
  8366                           
  8367                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8368  00120E  0100               	movlb	0	; () banked
  8369  001210  EE20 F00E          	lfsr	2,14
  8370  001214  0100               	movlb	0	; () banked
  8371  001216  51C5               	movf	_ic_ptr& (0+255),w,b
  8372  001218  26D9               	addwf	fsr2l,f,c
  8373  00121A  0100               	movlb	0	; () banked
  8374  00121C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8375  00121E  22DA               	addwfc	fsr2h,f,c
  8376  001220  0E00               	movlw	0
  8377  001222  6EDF               	movwf	indf2,c
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;my_i2c.c: 76: if (data_read) {
  8381  001224  0100               	movlb	0	; () banked
  8382  001226  5180               	movf	handle_start@data_read& (0+255),w,b
  8383  001228  B4D8               	btfsc	status,2,c
  8384  00122A  D03D               	goto	i2l2762
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8388  00122C  AAC7               	btfss	4039,5,c	;volatile
  8389  00122E  D021               	goto	i2l287
  8390                           
  8391                           ; BSR set to: 0
  8392                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8393  001230  0100               	movlb	0	; () banked
  8394  001232  EE20 F021          	lfsr	2,33
  8395  001236  0100               	movlb	0	; () banked
  8396  001238  51C5               	movf	_ic_ptr& (0+255),w,b
  8397  00123A  26D9               	addwf	fsr2l,f,c
  8398  00123C  0100               	movlb	0	; () banked
  8399  00123E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8400  001240  22DA               	addwfc	fsr2h,f,c
  8401  001242  0E05               	movlw	5
  8402  001244  6EDF               	movwf	indf2,c
  8403                           
  8404                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8405  001246  0100               	movlb	0	; () banked
  8406  001248  EE20 F023          	lfsr	2,35
  8407  00124C  0100               	movlb	0	; () banked
  8408  00124E  51C5               	movf	_ic_ptr& (0+255),w,b
  8409  001250  26D9               	addwf	fsr2l,f,c
  8410  001252  0100               	movlb	0	; () banked
  8411  001254  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8412  001256  22DA               	addwfc	fsr2h,f,c
  8413  001258  2ADF               	incf	indf2,f,c
  8414                           
  8415                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8416  00125A  0100               	movlb	0	; () banked
  8417  00125C  EE20 F022          	lfsr	2,34
  8418  001260  0100               	movlb	0	; () banked
  8419  001262  51C5               	movf	_ic_ptr& (0+255),w,b
  8420  001264  26D9               	addwf	fsr2l,f,c
  8421  001266  0100               	movlb	0	; () banked
  8422  001268  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8423  00126A  22DA               	addwfc	fsr2h,f,c
  8424  00126C  0E05               	movlw	5
  8425  00126E  6EDF               	movwf	indf2,c
  8426                           
  8427                           ;my_i2c.c: 83: } else {
  8428  001270  0012               	return	
  8429  001272                     i2l287:
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8433  001272  A4C7               	btfss	4039,2,c	;volatile
  8434  001274  D00C               	goto	i2l2760
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8438  001276  0100               	movlb	0	; () banked
  8439  001278  EE20 F021          	lfsr	2,33
  8440  00127C  0100               	movlb	0	; () banked
  8441  00127E  51C5               	movf	_ic_ptr& (0+255),w,b
  8442  001280  26D9               	addwf	fsr2l,f,c
  8443  001282  0100               	movlb	0	; () banked
  8444  001284  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8445  001286  22DA               	addwfc	fsr2h,f,c
  8446  001288  0E08               	movlw	8
  8447  00128A  6EDF               	movwf	indf2,c
  8448                           
  8449                           ;my_i2c.c: 87: } else {
  8450  00128C  0012               	return	
  8451  00128E                     i2l2760:
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  8455  00128E  0100               	movlb	0	; () banked
  8456  001290  EE20 F021          	lfsr	2,33
  8457  001294  0100               	movlb	0	; () banked
  8458  001296  51C5               	movf	_ic_ptr& (0+255),w,b
  8459  001298  26D9               	addwf	fsr2l,f,c
  8460  00129A  0100               	movlb	0	; () banked
  8461  00129C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8462  00129E  22DA               	addwfc	fsr2h,f,c
  8463  0012A0  0E07               	movlw	7
  8464  0012A2  6EDF               	movwf	indf2,c
  8465  0012A4  0012               	return	
  8466  0012A6                     i2l2762:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  8470  0012A6  0100               	movlb	0	; () banked
  8471  0012A8  EE20 F021          	lfsr	2,33
  8472  0012AC  0100               	movlb	0	; () banked
  8473  0012AE  51C5               	movf	_ic_ptr& (0+255),w,b
  8474  0012B0  26D9               	addwf	fsr2l,f,c
  8475  0012B2  0100               	movlb	0	; () banked
  8476  0012B4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8477  0012B6  22DA               	addwfc	fsr2h,f,c
  8478  0012B8  0E06               	movlw	6
  8479  0012BA  6EDF               	movwf	indf2,c
  8480  0012BC  0012               	return	
  8481  0012BE                     __end_of_handle_start:
  8482                           	opt stack 0
  8483                           pclatu	equ	0xFFB
  8484                           pclath	equ	0xFFA
  8485                           tblptru	equ	0xFF8
  8486                           tblptrh	equ	0xFF7
  8487                           tblptrl	equ	0xFF6
  8488                           tablat	equ	0xFF5
  8489                           prodh	equ	0xFF4
  8490                           prodl	equ	0xFF3
  8491                           intcon	equ	0xFF2
  8492                           postinc0	equ	0xFEE
  8493                           fsr0h	equ	0xFEA
  8494                           fsr0l	equ	0xFE9
  8495                           wreg	equ	0xFE8
  8496                           indf1	equ	0xFE7
  8497                           fsr1h	equ	0xFE2
  8498                           fsr1l	equ	0xFE1
  8499                           bsr	equ	0xFE0
  8500                           indf2	equ	0xFDF
  8501                           postinc2	equ	0xFDE
  8502                           postdec2	equ	0xFDD
  8503                           fsr2h	equ	0xFDA
  8504                           fsr2l	equ	0xFD9
  8505                           status	equ	0xFD8
  8506                           
  8507 ;; *************** function _ToMainHigh_sendmsg *****************
  8508 ;; Defined at:
  8509 ;;		line 126 in file "../src/messages.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  length          1    wreg     unsigned char 
  8512 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8513 ;;  data            2   23[BANK0 ] PTR void 
  8514 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  length          1   25[BANK0 ] unsigned char 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      char 
  8519 ;; Registers used:
  8520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8526 ;;      Params:         0       3       0       0       0
  8527 ;;      Locals:         0       1       0       0       0
  8528 ;;      Temps:          0       0       0       0       0
  8529 ;;      Totals:         0       4       0       0       0
  8530 ;;Total ram usage:        4 bytes
  8531 ;; Hardware stack levels used:    1
  8532 ;; Hardware stack levels required when called:    2
  8533 ;; This function calls:
  8534 ;;		i2_send_msg
  8535 ;; This function is called by:
  8536 ;;		_i2c_int_handler
  8537 ;;		_timer0_int_handler
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text50
  8542  001C58                     __ptext50:
  8543                           	opt stack 0
  8544  001C58                     _ToMainHigh_sendmsg:
  8545                           	opt stack 16
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;incstack = 0
  8549                           ;ToMainHigh_sendmsg@length stored from wreg
  8550  001C58  0100               	movlb	0	; () banked
  8551  001C5A  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8555                           ;	Return value of _ToMainHigh_sendmsg is never used
  8556  001C5C  0102               	movlb	2	; () banked
  8557  001C5E  0E02               	movlw	high _ToMainHigh_MQ
  8558  001C60  0100               	movlb	0	; () banked
  8559  001C62  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8560  001C64  0102               	movlb	2	; () banked
  8561  001C66  0E57               	movlw	low _ToMainHigh_MQ
  8562  001C68  0100               	movlb	0	; () banked
  8563  001C6A  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8564  001C6C  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8565  001C70  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8566  001C74  0100               	movlb	0	; () banked
  8567  001C76  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8568  001C7A  0100               	movlb	0	; () banked
  8569  001C7C  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8570  001C80  EC7E  F007         	call	i2_send_msg	;wreg free
  8571  001C84  0012               	return	
  8572  001C86                     __end_of_ToMainHigh_sendmsg:
  8573                           	opt stack 0
  8574                           pclatu	equ	0xFFB
  8575                           pclath	equ	0xFFA
  8576                           tblptru	equ	0xFF8
  8577                           tblptrh	equ	0xFF7
  8578                           tblptrl	equ	0xFF6
  8579                           tablat	equ	0xFF5
  8580                           prodh	equ	0xFF4
  8581                           prodl	equ	0xFF3
  8582                           intcon	equ	0xFF2
  8583                           postinc0	equ	0xFEE
  8584                           fsr0h	equ	0xFEA
  8585                           fsr0l	equ	0xFE9
  8586                           wreg	equ	0xFE8
  8587                           indf1	equ	0xFE7
  8588                           fsr1h	equ	0xFE2
  8589                           fsr1l	equ	0xFE1
  8590                           bsr	equ	0xFE0
  8591                           indf2	equ	0xFDF
  8592                           postinc2	equ	0xFDE
  8593                           postdec2	equ	0xFDD
  8594                           fsr2h	equ	0xFDA
  8595                           fsr2l	equ	0xFD9
  8596                           status	equ	0xFD8
  8597                           
  8598 ;; *************** function i2_send_msg *****************
  8599 ;; Defined at:
  8600 ;;		line 24 in file "../src/messages.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8603 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8604 ;;  length          1   12[BANK0 ] unsigned char 
  8605 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8606 ;;  data            2   14[BANK0 ] PTR void 
  8607 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  8608 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  8609 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  8610 ;;		 -> main@t1thread_data(2), main@ic(38), 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8613 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8614 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8615 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8616 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      char 
  8619 ;; Registers used:
  8620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8626 ;;      Params:         0       6       0       0       0
  8627 ;;      Locals:         0       5       0       0       0
  8628 ;;      Temps:          0       1       0       0       0
  8629 ;;      Totals:         0      12       0       0       0
  8630 ;;Total ram usage:       12 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; Hardware stack levels required when called:    1
  8633 ;; This function calls:
  8634 ;;		i2___awmod
  8635 ;;		i2_memcpy
  8636 ;; This function is called by:
  8637 ;;		_ToMainHigh_sendmsg
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           	psect	text51
  8642  000EFC                     __ptext51:
  8643                           	opt stack 0
  8644  000EFC                     i2_send_msg:
  8645                           	opt stack 16
  8646                           
  8647                           ;messages.c: 25: unsigned char slot;
  8648                           ;messages.c: 27: msg *qmsg;
  8649                           ;messages.c: 28: size_t tlength = length;
  8650                           
  8651                           ;incstack = 0
  8652  000EFC  0100               	movlb	0	; () banked
  8653  000EFE  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8654  000F02  0100               	movlb	0	; () banked
  8655  000F04  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8659  000F06  0100               	movlb	0	; () banked
  8660  000F08  EE20 F055          	lfsr	2,85
  8661  000F0C  0100               	movlb	0	; () banked
  8662  000F0E  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8663  000F10  26D9               	addwf	fsr2l,f,c
  8664  000F12  0100               	movlb	0	; () banked
  8665  000F14  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8666  000F16  22DA               	addwfc	fsr2h,f,c
  8667  000F18  50DF               	movf	indf2,w,c
  8668  000F1A  0100               	movlb	0	; () banked
  8669  000F1C  6F93               	movwf	i2send_msg@slot& (0+255),b
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8673  000F1E  0100               	movlb	0	; () banked
  8674  000F20  5193               	movf	i2send_msg@slot& (0+255),w,b
  8675  000F22  0D11               	mullw	17
  8676  000F24  50F3               	movf	prodl,w,c
  8677  000F26  0100               	movlb	0	; () banked
  8678  000F28  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8679  000F2A  0100               	movlb	0	; () banked
  8680  000F2C  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8681  000F2E  50F4               	movf	prodh,w,c
  8682  000F30  0100               	movlb	0	; () banked
  8683  000F32  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8684  000F34  0100               	movlb	0	; () banked
  8685  000F36  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;messages.c: 41: if (qmsg->full != 0) {
  8689  000F38  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8690  000F3C  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8691  000F40  50DF               	movf	indf2,w,c
  8692  000F42  B4D8               	btfsc	status,2,c
  8693  000F44  D002               	goto	i2l3606
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;messages.c: 42: return (-1);
  8697  000F46  0EFF               	movlw	255
  8698  000F48  0012               	return	
  8699  000F4A                     i2l3606:
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;messages.c: 43: }
  8703                           ;messages.c: 46: qmsg->length = length;
  8704  000F4A  0100               	movlb	0	; () banked
  8705  000F4C  EE20 F001          	lfsr	2,1
  8706  000F50  0100               	movlb	0	; () banked
  8707  000F52  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8708  000F54  26D9               	addwf	fsr2l,f,c
  8709  000F56  0100               	movlb	0	; () banked
  8710  000F58  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8711  000F5A  22DA               	addwfc	fsr2h,f,c
  8712  000F5C  0100               	movlb	0	; () banked
  8713  000F5E  C08C  FFDF         	movff	i2send_msg@length,indf2
  8714                           
  8715                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8716  000F62  0100               	movlb	0	; () banked
  8717  000F64  EE20 F002          	lfsr	2,2
  8718  000F68  0100               	movlb	0	; () banked
  8719  000F6A  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8720  000F6C  26D9               	addwf	fsr2l,f,c
  8721  000F6E  0100               	movlb	0	; () banked
  8722  000F70  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8723  000F72  22DA               	addwfc	fsr2h,f,c
  8724  000F74  0100               	movlb	0	; () banked
  8725  000F76  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8729  000F7A  0E03               	movlw	3
  8730  000F7C  0100               	movlb	0	; () banked
  8731  000F7E  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8732  000F80  0100               	movlb	0	; () banked
  8733  000F82  6F80               	movwf	i2memcpy@d1& (0+255),b
  8734  000F84  0E00               	movlw	0
  8735  000F86  0100               	movlb	0	; () banked
  8736  000F88  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8737  000F8A  0100               	movlb	0	; () banked
  8738  000F8C  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8739  000F8E  0100               	movlb	0	; () banked
  8740  000F90  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8741  000F94  0100               	movlb	0	; () banked
  8742  000F96  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8743  000F9A  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8744  000F9E  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8745  000FA2  ECFB  F00C         	call	i2_memcpy	;wreg free
  8746                           
  8747                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8748  000FA6  0100               	movlb	0	; () banked
  8749  000FA8  EE20 F055          	lfsr	2,85
  8750  000FAC  0100               	movlb	0	; () banked
  8751  000FAE  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8752  000FB0  26D9               	addwf	fsr2l,f,c
  8753  000FB2  0100               	movlb	0	; () banked
  8754  000FB4  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8755  000FB6  22DA               	addwfc	fsr2h,f,c
  8756  000FB8  0100               	movlb	0	; () banked
  8757  000FBA  EE10 F055          	lfsr	1,85
  8758  000FBE  0100               	movlb	0	; () banked
  8759  000FC0  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8760  000FC2  26E1               	addwf	fsr1l,f,c
  8761  000FC4  0100               	movlb	0	; () banked
  8762  000FC6  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8763  000FC8  22E2               	addwfc	fsr1h,f,c
  8764  000FCA  50E7               	movf	indf1,w,c
  8765  000FCC  0100               	movlb	0	; () banked
  8766  000FCE  6F90               	movwf	??i2_send_msg& (0+255),b
  8767  000FD0  0E01               	movlw	1
  8768  000FD2  0100               	movlb	0	; () banked
  8769  000FD4  2590               	addwf	??i2_send_msg& (0+255),w,b
  8770  000FD6  0100               	movlb	0	; () banked
  8771  000FD8  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8772  000FDA  0100               	movlb	0	; () banked
  8773  000FDC  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8774  000FDE  0E00               	movlw	0
  8775  000FE0  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8776  000FE2  0E00               	movlw	0
  8777  000FE4  0100               	movlb	0	; () banked
  8778  000FE6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8779  000FE8  0E05               	movlw	5
  8780  000FEA  0100               	movlb	0	; () banked
  8781  000FEC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8782  000FEE  ECC1  F009         	call	i2___awmod	;wreg free
  8783  000FF2  0100               	movlb	0	; () banked
  8784  000FF4  5180               	movf	?i2___awmod& (0+255),w,b
  8785  000FF6  6EDF               	movwf	indf2,c
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;messages.c: 59: qmsg->full = 1;
  8789  000FF8  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8790  000FFC  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8791  001000  0E01               	movlw	1
  8792  001002  6EDF               	movwf	indf2,c
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;messages.c: 60: return (1);
  8796  001004  0E01               	movlw	1
  8797  001006  0012               	return	
  8798  001008                     __end_ofi2_send_msg:
  8799                           	opt stack 0
  8800                           pclatu	equ	0xFFB
  8801                           pclath	equ	0xFFA
  8802                           tblptru	equ	0xFF8
  8803                           tblptrh	equ	0xFF7
  8804                           tblptrl	equ	0xFF6
  8805                           tablat	equ	0xFF5
  8806                           prodh	equ	0xFF4
  8807                           prodl	equ	0xFF3
  8808                           intcon	equ	0xFF2
  8809                           postinc0	equ	0xFEE
  8810                           fsr0h	equ	0xFEA
  8811                           fsr0l	equ	0xFE9
  8812                           wreg	equ	0xFE8
  8813                           indf1	equ	0xFE7
  8814                           fsr1h	equ	0xFE2
  8815                           fsr1l	equ	0xFE1
  8816                           bsr	equ	0xFE0
  8817                           indf2	equ	0xFDF
  8818                           postinc2	equ	0xFDE
  8819                           postdec2	equ	0xFDD
  8820                           fsr2h	equ	0xFDA
  8821                           fsr2l	equ	0xFD9
  8822                           status	equ	0xFD8
  8823                           
  8824 ;; *************** function _FromMainHigh_recvmsg *****************
  8825 ;; Defined at:
  8826 ;;		line 183 in file "../src/messages.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  maxlength       1    wreg     unsigned char 
  8829 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8830 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  8831 ;;  data            2   26[BANK0 ] PTR void 
  8832 ;;		 -> NULL(0), timer0_int_handler@val(2), main@ic(38), 
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  1    wreg      char 
  8837 ;; Registers used:
  8838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8844 ;;      Params:         0       4       0       0       0
  8845 ;;      Locals:         0       1       0       0       0
  8846 ;;      Temps:          0       0       0       0       0
  8847 ;;      Totals:         0       5       0       0       0
  8848 ;;Total ram usage:        5 bytes
  8849 ;; Hardware stack levels used:    1
  8850 ;; Hardware stack levels required when called:    2
  8851 ;; This function calls:
  8852 ;;		i2_recv_msg
  8853 ;; This function is called by:
  8854 ;;		_i2c_int_handler
  8855 ;;		_timer0_int_handler
  8856 ;;		_retrieve_sensor_values
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text52
  8861  001B30                     __ptext52:
  8862                           	opt stack 0
  8863  001B30                     _FromMainHigh_recvmsg:
  8864                           	opt stack 16
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;incstack = 0
  8868                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8869  001B30  0100               	movlb	0	; () banked
  8870  001B32  6F9C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8874  001B34  0103               	movlb	3	; () banked
  8875  001B36  0E03               	movlw	high _FromMainHigh_MQ
  8876  001B38  0100               	movlb	0	; () banked
  8877  001B3A  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8878  001B3C  0103               	movlb	3	; () banked
  8879  001B3E  0E00               	movlw	low _FromMainHigh_MQ
  8880  001B40  0100               	movlb	0	; () banked
  8881  001B42  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8882  001B44  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8883  001B48  0100               	movlb	0	; () banked
  8884  001B4A  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8885  001B4E  0100               	movlb	0	; () banked
  8886  001B50  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8887  001B54  0100               	movlb	0	; () banked
  8888  001B56  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8889  001B5A  0100               	movlb	0	; () banked
  8890  001B5C  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8891  001B60  EC57  F006         	call	i2_recv_msg	;wreg free
  8892  001B64  0012               	return	
  8893  001B66                     __end_of_FromMainHigh_recvmsg:
  8894                           	opt stack 0
  8895                           pclatu	equ	0xFFB
  8896                           pclath	equ	0xFFA
  8897                           tblptru	equ	0xFF8
  8898                           tblptrh	equ	0xFF7
  8899                           tblptrl	equ	0xFF6
  8900                           tablat	equ	0xFF5
  8901                           prodh	equ	0xFF4
  8902                           prodl	equ	0xFF3
  8903                           intcon	equ	0xFF2
  8904                           postinc0	equ	0xFEE
  8905                           fsr0h	equ	0xFEA
  8906                           fsr0l	equ	0xFE9
  8907                           wreg	equ	0xFE8
  8908                           indf1	equ	0xFE7
  8909                           fsr1h	equ	0xFE2
  8910                           fsr1l	equ	0xFE1
  8911                           bsr	equ	0xFE0
  8912                           indf2	equ	0xFDF
  8913                           postinc2	equ	0xFDE
  8914                           postdec2	equ	0xFDD
  8915                           fsr2h	equ	0xFDA
  8916                           fsr2l	equ	0xFD9
  8917                           status	equ	0xFD8
  8918                           
  8919 ;; *************** function i2_recv_msg *****************
  8920 ;; Defined at:
  8921 ;;		line 63 in file "../src/messages.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8924 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8925 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8926 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8927 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  8928 ;;		 -> main@msgtype(1), 
  8929 ;;  data            2   15[BANK0 ] PTR void 
  8930 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  8931 ;;		 -> main@ic(38), 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8934 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8935 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8936 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8937 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      char 
  8940 ;; Registers used:
  8941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8947 ;;      Params:         0       7       0       0       0
  8948 ;;      Locals:         0       5       0       0       0
  8949 ;;      Temps:          0       2       0       0       0
  8950 ;;      Totals:         0      14       0       0       0
  8951 ;;Total ram usage:       14 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:    1
  8954 ;; This function calls:
  8955 ;;		i2___awmod
  8956 ;;		i2_memcpy
  8957 ;; This function is called by:
  8958 ;;		_FromMainHigh_recvmsg
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text53
  8963  000CAE                     __ptext53:
  8964                           	opt stack 0
  8965  000CAE                     i2_recv_msg:
  8966                           	opt stack 16
  8967                           
  8968                           ;messages.c: 64: unsigned char slot;
  8969                           ;messages.c: 68: msg *qmsg;
  8970                           ;messages.c: 69: size_t tlength;
  8971                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8972                           
  8973                           ;incstack = 0
  8974  000CAE  0100               	movlb	0	; () banked
  8975  000CB0  EE20 F056          	lfsr	2,86
  8976  000CB4  0100               	movlb	0	; () banked
  8977  000CB6  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8978  000CB8  26D9               	addwf	fsr2l,f,c
  8979  000CBA  0100               	movlb	0	; () banked
  8980  000CBC  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8981  000CBE  22DA               	addwfc	fsr2h,f,c
  8982  000CC0  50DF               	movf	indf2,w,c
  8983  000CC2  0100               	movlb	0	; () banked
  8984  000CC4  6F93               	movwf	i2recv_msg@slot& (0+255),b
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8988  000CC6  0100               	movlb	0	; () banked
  8989  000CC8  5193               	movf	i2recv_msg@slot& (0+255),w,b
  8990  000CCA  0D11               	mullw	17
  8991  000CCC  50F3               	movf	prodl,w,c
  8992  000CCE  0100               	movlb	0	; () banked
  8993  000CD0  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8994  000CD2  0100               	movlb	0	; () banked
  8995  000CD4  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  8996  000CD6  50F4               	movf	prodh,w,c
  8997  000CD8  0100               	movlb	0	; () banked
  8998  000CDA  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8999  000CDC  0100               	movlb	0	; () banked
  9000  000CDE  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;messages.c: 74: if (qmsg->full == 1) {
  9004  000CE0  0E01               	movlw	1
  9005  000CE2  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9006  000CE6  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9007  000CEA  62DF               	cpfseq	indf2,c
  9008  000CEC  D07D               	goto	i2l3678
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9012  000CEE  0100               	movlb	0	; () banked
  9013  000CF0  EE20 F001          	lfsr	2,1
  9014  000CF4  0100               	movlb	0	; () banked
  9015  000CF6  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9016  000CF8  26D9               	addwf	fsr2l,f,c
  9017  000CFA  0100               	movlb	0	; () banked
  9018  000CFC  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9019  000CFE  22DA               	addwfc	fsr2h,f,c
  9020  000D00  50DF               	movf	indf2,w,c
  9021  000D02  0100               	movlb	0	; () banked
  9022  000D04  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  9023  000D06  B0D8               	btfsc	status,0,c
  9024  000D08  D002               	goto	i2l3662
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;messages.c: 77: return (-3);
  9028  000D0A  0EFD               	movlw	253
  9029  000D0C  0012               	return	
  9030  000D0E                     i2l3662:
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;messages.c: 78: }
  9034                           ;messages.c: 80: tlength = qmsg->length;
  9035  000D0E  0100               	movlb	0	; () banked
  9036  000D10  EE20 F001          	lfsr	2,1
  9037  000D14  0100               	movlb	0	; () banked
  9038  000D16  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9039  000D18  26D9               	addwf	fsr2l,f,c
  9040  000D1A  0100               	movlb	0	; () banked
  9041  000D1C  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9042  000D1E  22DA               	addwfc	fsr2h,f,c
  9043  000D20  50DF               	movf	indf2,w,c
  9044  000D22  0100               	movlb	0	; () banked
  9045  000D24  6F91               	movwf	??i2_recv_msg& (0+255),b
  9046  000D26  0100               	movlb	0	; () banked
  9047  000D28  5191               	movf	??i2_recv_msg& (0+255),w,b
  9048  000D2A  0100               	movlb	0	; () banked
  9049  000D2C  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  9050  000D2E  0100               	movlb	0	; () banked
  9051  000D30  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9055  000D32  0100               	movlb	0	; () banked
  9056  000D34  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  9057  000D38  0100               	movlb	0	; () banked
  9058  000D3A  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  9059  000D3E  0E03               	movlw	3
  9060  000D40  0100               	movlb	0	; () banked
  9061  000D42  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  9062  000D44  0100               	movlb	0	; () banked
  9063  000D46  6F91               	movwf	??i2_recv_msg& (0+255),b
  9064  000D48  0E00               	movlw	0
  9065  000D4A  0100               	movlb	0	; () banked
  9066  000D4C  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  9067  000D4E  0100               	movlb	0	; () banked
  9068  000D50  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  9069  000D52  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  9070  000D56  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  9071  000D5A  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  9072  000D5E  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  9073  000D62  ECFB  F00C         	call	i2_memcpy	;wreg free
  9074                           
  9075                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  9076  000D66  0100               	movlb	0	; () banked
  9077  000D68  EE20 F056          	lfsr	2,86
  9078  000D6C  0100               	movlb	0	; () banked
  9079  000D6E  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9080  000D70  26D9               	addwf	fsr2l,f,c
  9081  000D72  0100               	movlb	0	; () banked
  9082  000D74  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9083  000D76  22DA               	addwfc	fsr2h,f,c
  9084  000D78  0100               	movlb	0	; () banked
  9085  000D7A  EE10 F056          	lfsr	1,86
  9086  000D7E  0100               	movlb	0	; () banked
  9087  000D80  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9088  000D82  26E1               	addwf	fsr1l,f,c
  9089  000D84  0100               	movlb	0	; () banked
  9090  000D86  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9091  000D88  22E2               	addwfc	fsr1h,f,c
  9092  000D8A  50E7               	movf	indf1,w,c
  9093  000D8C  0100               	movlb	0	; () banked
  9094  000D8E  6F91               	movwf	??i2_recv_msg& (0+255),b
  9095  000D90  0E01               	movlw	1
  9096  000D92  0100               	movlb	0	; () banked
  9097  000D94  2591               	addwf	??i2_recv_msg& (0+255),w,b
  9098  000D96  0100               	movlb	0	; () banked
  9099  000D98  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9100  000D9A  0100               	movlb	0	; () banked
  9101  000D9C  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9102  000D9E  0E00               	movlw	0
  9103  000DA0  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9104  000DA2  0E00               	movlw	0
  9105  000DA4  0100               	movlb	0	; () banked
  9106  000DA6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9107  000DA8  0E05               	movlw	5
  9108  000DAA  0100               	movlb	0	; () banked
  9109  000DAC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9110  000DAE  ECC1  F009         	call	i2___awmod	;wreg free
  9111  000DB2  0100               	movlb	0	; () banked
  9112  000DB4  5180               	movf	?i2___awmod& (0+255),w,b
  9113  000DB6  6EDF               	movwf	indf2,c
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9117  000DB8  0100               	movlb	0	; () banked
  9118  000DBA  EE20 F002          	lfsr	2,2
  9119  000DBE  0100               	movlb	0	; () banked
  9120  000DC0  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9121  000DC2  26D9               	addwf	fsr2l,f,c
  9122  000DC4  0100               	movlb	0	; () banked
  9123  000DC6  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9124  000DC8  22DA               	addwfc	fsr2h,f,c
  9125  000DCA  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9126  000DCE  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9127  000DD2  CFDF FFE7          	movff	indf2,indf1
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;messages.c: 91: qmsg->full = 0;
  9131  000DD6  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9132  000DDA  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9133  000DDE  0E00               	movlw	0
  9134  000DE0  6EDF               	movwf	indf2,c
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;messages.c: 92: return (tlength);
  9138  000DE2  0100               	movlb	0	; () banked
  9139  000DE4  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  9140  000DE6  0012               	return	
  9141  000DE8                     i2l3678:
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;messages.c: 94: return (-4);
  9145  000DE8  0EFC               	movlw	252
  9146  000DEA  0012               	return	
  9147  000DEC                     __end_ofi2_recv_msg:
  9148                           	opt stack 0
  9149                           pclatu	equ	0xFFB
  9150                           pclath	equ	0xFFA
  9151                           tblptru	equ	0xFF8
  9152                           tblptrh	equ	0xFF7
  9153                           tblptrl	equ	0xFF6
  9154                           tablat	equ	0xFF5
  9155                           prodh	equ	0xFF4
  9156                           prodl	equ	0xFF3
  9157                           intcon	equ	0xFF2
  9158                           postinc0	equ	0xFEE
  9159                           fsr0h	equ	0xFEA
  9160                           fsr0l	equ	0xFE9
  9161                           wreg	equ	0xFE8
  9162                           indf1	equ	0xFE7
  9163                           fsr1h	equ	0xFE2
  9164                           fsr1l	equ	0xFE1
  9165                           bsr	equ	0xFE0
  9166                           indf2	equ	0xFDF
  9167                           postinc2	equ	0xFDE
  9168                           postdec2	equ	0xFDD
  9169                           fsr2h	equ	0xFDA
  9170                           fsr2l	equ	0xFD9
  9171                           status	equ	0xFD8
  9172                           
  9173 ;; *************** function i2_memcpy *****************
  9174 ;; Defined at:
  9175 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  d1              2    0[BANK0 ] PTR void 
  9178 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9179 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  9180 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9181 ;;		 -> main@ic(38), 
  9182 ;;  s1              2    2[BANK0 ] PTR const void 
  9183 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9184 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9185 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  9186 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9187 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  9188 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  9189 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9190 ;;  n               2    4[BANK0 ] unsigned int 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9193 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9194 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9195 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  9196 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9197 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  9198 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  9199 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9200 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9201 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9202 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  9203 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9204 ;;		 -> main@ic(38), 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  2    0[BANK0 ] PTR void 
  9207 ;; Registers used:
  9208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9214 ;;      Params:         0       6       0       0       0
  9215 ;;      Locals:         0       4       0       0       0
  9216 ;;      Temps:          0       0       0       0       0
  9217 ;;      Totals:         0      10       0       0       0
  9218 ;;Total ram usage:       10 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		i2_send_msg
  9224 ;;		i2_recv_msg
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           	psect	text54
  9229  0019F6                     __ptext54:
  9230                           	opt stack 0
  9231  0019F6                     i2_memcpy:
  9232                           	opt stack 16
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;incstack = 0
  9236  0019F6  0100               	movlb	0	; () banked
  9237  0019F8  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9238  0019FC  0100               	movlb	0	; () banked
  9239  0019FE  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9240  001A02  0100               	movlb	0	; () banked
  9241  001A04  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9242  001A08  0100               	movlb	0	; () banked
  9243  001A0A  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9244  001A0E  D010               	goto	i2l2448
  9245  001A10                     i2l2442:
  9246                           
  9247                           ; BSR set to: 0
  9248  001A10  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9249  001A14  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9250  001A18  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9251  001A1C  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9252  001A20  CFDF FFE7          	movff	indf2,indf1
  9253                           
  9254                           ; BSR set to: 0
  9255  001A24  0100               	movlb	0	; () banked
  9256  001A26  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9257  001A28  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9258                           
  9259                           ; BSR set to: 0
  9260  001A2A  0100               	movlb	0	; () banked
  9261  001A2C  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9262  001A2E  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9263  001A30                     i2l2448:
  9264                           
  9265                           ; BSR set to: 0
  9266  001A30  0100               	movlb	0	; () banked
  9267  001A32  0784               	decf	i2memcpy@n& (0+255),f,b
  9268  001A34  A0D8               	btfss	status,0,c
  9269  001A36  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9270  001A38  0100               	movlb	0	; () banked
  9271  001A3A  2984               	incf	i2memcpy@n& (0+255),w,b
  9272  001A3C  B4D8               	btfsc	status,2,c
  9273  001A3E  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9274  001A40  B4D8               	btfsc	status,2,c
  9275                           
  9276                           ; BSR set to: 0
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;	Return value of i2_memcpy is never used
  9280  001A42  0012               	return	
  9281  001A44  D7E5               	goto	i2l2442
  9282  001A46                     __end_ofi2_memcpy:
  9283                           	opt stack 0
  9284                           pclatu	equ	0xFFB
  9285                           pclath	equ	0xFFA
  9286                           tblptru	equ	0xFF8
  9287                           tblptrh	equ	0xFF7
  9288                           tblptrl	equ	0xFF6
  9289                           tablat	equ	0xFF5
  9290                           prodh	equ	0xFF4
  9291                           prodl	equ	0xFF3
  9292                           intcon	equ	0xFF2
  9293                           postinc0	equ	0xFEE
  9294                           fsr0h	equ	0xFEA
  9295                           fsr0l	equ	0xFE9
  9296                           wreg	equ	0xFE8
  9297                           indf1	equ	0xFE7
  9298                           fsr1h	equ	0xFE2
  9299                           fsr1l	equ	0xFE1
  9300                           bsr	equ	0xFE0
  9301                           indf2	equ	0xFDF
  9302                           postinc2	equ	0xFDE
  9303                           postdec2	equ	0xFDD
  9304                           fsr2h	equ	0xFDA
  9305                           fsr2l	equ	0xFD9
  9306                           status	equ	0xFD8
  9307                           
  9308 ;; *************** function i2___awmod *****************
  9309 ;; Defined at:
  9310 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;  dividend        2    0[BANK0 ] int 
  9313 ;;  divisor         2    2[BANK0 ] int 
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9316 ;;  __awmod         1    4[BANK0 ] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  2    0[BANK0 ] int 
  9319 ;; Registers used:
  9320 ;;		wreg, status,2, status,0, prodl
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9326 ;;      Params:         0       4       0       0       0
  9327 ;;      Locals:         0       2       0       0       0
  9328 ;;      Temps:          0       0       0       0       0
  9329 ;;      Totals:         0       6       0       0       0
  9330 ;;Total ram usage:        6 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; This function calls:
  9333 ;;		Nothing
  9334 ;; This function is called by:
  9335 ;;		i2_send_msg
  9336 ;;		i2_recv_msg
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text55
  9341  001382                     __ptext55:
  9342                           	opt stack 0
  9343  001382                     i2___awmod:
  9344                           	opt stack 16
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;incstack = 0
  9348  001382  0E00               	movlw	0
  9349  001384  0100               	movlb	0	; () banked
  9350  001386  6F85               	movwf	i2___awmod@sign& (0+255),b
  9351                           
  9352                           ; BSR set to: 0
  9353  001388  0100               	movlb	0	; () banked
  9354  00138A  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9355  00138C  0A80               	xorlw	128
  9356  00138E  6EF3               	movwf	prodl,c
  9357  001390  0E80               	movlw	128
  9358  001392  5CF3               	subwf	prodl,w,c
  9359  001394  0E00               	movlw	0
  9360  001396  B4D8               	btfsc	status,2,c
  9361  001398  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9362  00139A  B0D8               	btfsc	status,0,c
  9363  00139C  D009               	goto	i2l2494
  9364                           
  9365                           ; BSR set to: 0
  9366  00139E  0100               	movlb	0	; () banked
  9367  0013A0  6D80               	negf	i2___awmod@dividend& (0+255),b
  9368  0013A2  0100               	movlb	0	; () banked
  9369  0013A4  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9370  0013A6  B0D8               	btfsc	status,0,c
  9371  0013A8  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9372                           
  9373                           ; BSR set to: 0
  9374  0013AA  0E01               	movlw	1
  9375  0013AC  0100               	movlb	0	; () banked
  9376  0013AE  6F85               	movwf	i2___awmod@sign& (0+255),b
  9377  0013B0                     i2l2494:
  9378                           
  9379                           ; BSR set to: 0
  9380  0013B0  0100               	movlb	0	; () banked
  9381  0013B2  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9382  0013B4  0A80               	xorlw	128
  9383  0013B6  6EF3               	movwf	prodl,c
  9384  0013B8  0E80               	movlw	128
  9385  0013BA  5CF3               	subwf	prodl,w,c
  9386  0013BC  0E00               	movlw	0
  9387  0013BE  B4D8               	btfsc	status,2,c
  9388  0013C0  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9389  0013C2  B0D8               	btfsc	status,0,c
  9390  0013C4  D006               	goto	i2l2498
  9391                           
  9392                           ; BSR set to: 0
  9393  0013C6  0100               	movlb	0	; () banked
  9394  0013C8  6D82               	negf	i2___awmod@divisor& (0+255),b
  9395  0013CA  0100               	movlb	0	; () banked
  9396  0013CC  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9397  0013CE  B0D8               	btfsc	status,0,c
  9398  0013D0  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9399  0013D2                     i2l2498:
  9400                           
  9401                           ; BSR set to: 0
  9402  0013D2  0100               	movlb	0	; () banked
  9403  0013D4  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9404  0013D6  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9405  0013D8  B4D8               	btfsc	status,2,c
  9406  0013DA  D026               	goto	i2l2514
  9407                           
  9408                           ; BSR set to: 0
  9409  0013DC  0E01               	movlw	1
  9410  0013DE  0100               	movlb	0	; () banked
  9411  0013E0  6F84               	movwf	i2___awmod@counter& (0+255),b
  9412  0013E2  D006               	goto	i2l2504
  9413  0013E4                     i2l2502:
  9414                           
  9415                           ; BSR set to: 0
  9416  0013E4  0100               	movlb	0	; () banked
  9417  0013E6  90D8               	bcf	status,0,c
  9418  0013E8  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9419  0013EA  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9420  0013EC  0100               	movlb	0	; () banked
  9421  0013EE  2B84               	incf	i2___awmod@counter& (0+255),f,b
  9422  0013F0                     i2l2504:
  9423                           
  9424                           ; BSR set to: 0
  9425  0013F0  0100               	movlb	0	; () banked
  9426  0013F2  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9427  0013F4  D7F7               	goto	i2l2502
  9428  0013F6                     i2l2506:
  9429                           
  9430                           ; BSR set to: 0
  9431  0013F6  0100               	movlb	0	; () banked
  9432  0013F8  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9433  0013FA  0100               	movlb	0	; () banked
  9434  0013FC  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9435  0013FE  0100               	movlb	0	; () banked
  9436  001400  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9437  001402  0100               	movlb	0	; () banked
  9438  001404  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9439  001406  A0D8               	btfss	status,0,c
  9440  001408  D008               	goto	i2l2510
  9441                           
  9442                           ; BSR set to: 0
  9443  00140A  0100               	movlb	0	; () banked
  9444  00140C  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9445  00140E  0100               	movlb	0	; () banked
  9446  001410  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9447  001412  0100               	movlb	0	; () banked
  9448  001414  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9449  001416  0100               	movlb	0	; () banked
  9450  001418  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9451  00141A                     i2l2510:
  9452                           
  9453                           ; BSR set to: 0
  9454  00141A  0100               	movlb	0	; () banked
  9455  00141C  90D8               	bcf	status,0,c
  9456  00141E  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9457  001420  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9458                           
  9459                           ; BSR set to: 0
  9460  001422  0100               	movlb	0	; () banked
  9461  001424  2F84               	decfsz	i2___awmod@counter& (0+255),f,b
  9462  001426  D7E7               	goto	i2l2506
  9463  001428                     i2l2514:
  9464                           
  9465                           ; BSR set to: 0
  9466  001428  0100               	movlb	0	; () banked
  9467  00142A  5185               	movf	i2___awmod@sign& (0+255),w,b
  9468  00142C  B4D8               	btfsc	status,2,c
  9469  00142E  D006               	goto	i2l2518
  9470                           
  9471                           ; BSR set to: 0
  9472  001430  0100               	movlb	0	; () banked
  9473  001432  6D80               	negf	i2___awmod@dividend& (0+255),b
  9474  001434  0100               	movlb	0	; () banked
  9475  001436  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9476  001438  B0D8               	btfsc	status,0,c
  9477  00143A  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9478  00143C                     i2l2518:
  9479                           
  9480                           ; BSR set to: 0
  9481  00143C  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9482  001440  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9483  001444  0012               	return	
  9484  001446                     __end_ofi2___awmod:
  9485                           	opt stack 0
  9486                           pclatu	equ	0xFFB
  9487                           pclath	equ	0xFFA
  9488                           tblptru	equ	0xFF8
  9489                           tblptrh	equ	0xFF7
  9490                           tblptrl	equ	0xFF6
  9491                           tablat	equ	0xFF5
  9492                           prodh	equ	0xFF4
  9493                           prodl	equ	0xFF3
  9494                           intcon	equ	0xFF2
  9495                           postinc0	equ	0xFEE
  9496                           fsr0h	equ	0xFEA
  9497                           fsr0l	equ	0xFE9
  9498                           wreg	equ	0xFE8
  9499                           indf1	equ	0xFE7
  9500                           fsr1h	equ	0xFE2
  9501                           fsr1l	equ	0xFE1
  9502                           bsr	equ	0xFE0
  9503                           indf2	equ	0xFDF
  9504                           postinc2	equ	0xFDE
  9505                           postdec2	equ	0xFDD
  9506                           fsr2h	equ	0xFDA
  9507                           fsr2l	equ	0xFD9
  9508                           status	equ	0xFD8
  9509                           
  9510 ;; *************** function _SleepIfOkay *****************
  9511 ;; Defined at:
  9512 ;;		line 226 in file "../src/messages.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;		None
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;		None
  9517 ;; Return value:  Size  Location     Type
  9518 ;;		None               void
  9519 ;; Registers used:
  9520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9526 ;;      Params:         0       0       0       0       0
  9527 ;;      Locals:         0       0       0       0       0
  9528 ;;      Temps:          0       0       0       0       0
  9529 ;;      Totals:         0       0       0       0       0
  9530 ;;Total ram usage:        0 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    2
  9533 ;; This function calls:
  9534 ;;		_check_msg
  9535 ;;		_enter_sleep_mode
  9536 ;;		_in_high_int
  9537 ;;		_in_low_int
  9538 ;; This function is called by:
  9539 ;;		_InterruptHandlerHigh
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text56
  9544  00189E                     __ptext56:
  9545                           	opt stack 0
  9546  00189E                     _SleepIfOkay:
  9547                           	opt stack 17
  9548                           
  9549                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;incstack = 0
  9553  00189E  0100               	movlb	0	; () banked
  9554  0018A0  67C7               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9555  0018A2  D001               	goto	i2l3002
  9556  0018A4  0012               	return	
  9557  0018A6                     i2l3002:
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;messages.c: 230: }
  9561                           ;messages.c: 233: if (in_low_int()) {
  9562  0018A6  EC43  F00D         	call	_in_low_int	;wreg free
  9563  0018AA  0100               	movlb	0	; () banked
  9564  0018AC  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  9565  0018AE  0100               	movlb	0	; () banked
  9566  0018B0  1182               	iorwf	?_in_low_int& (0+255),w,b
  9567  0018B2  A4D8               	btfss	status,2,c
  9568  0018B4  0012               	return	
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;messages.c: 235: }
  9572                           ;messages.c: 238: if (!in_high_int()) {
  9573                           
  9574                           ; BSR set to: 0
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;messages.c: 234: return;
  9578  0018B6  ECEA  F00E         	call	_in_high_int	;wreg free
  9579  0018BA  0100               	movlb	0	; () banked
  9580  0018BC  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9581  0018BE  0100               	movlb	0	; () banked
  9582  0018C0  1180               	iorwf	?_in_high_int& (0+255),w,b
  9583  0018C2  B4D8               	btfsc	status,2,c
  9584  0018C4  0012               	return	
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;messages.c: 240: }
  9588                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9589                           
  9590                           ; BSR set to: 0
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;messages.c: 239: return;
  9594  0018C6  0102               	movlb	2	; () banked
  9595  0018C8  0E02               	movlw	high _ToMainHigh_MQ
  9596  0018CA  0100               	movlb	0	; () banked
  9597  0018CC  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9598  0018CE  0102               	movlb	2	; () banked
  9599  0018D0  0E57               	movlw	low _ToMainHigh_MQ
  9600  0018D2  0100               	movlb	0	; () banked
  9601  0018D4  6F80               	movwf	check_msg@qptr& (0+255),b
  9602  0018D6  ECE5  F00D         	call	_check_msg	;wreg free
  9603  0018DA  0900               	iorlw	0
  9604  0018DC  A4D8               	btfss	status,2,c
  9605  0018DE  0012               	return	
  9606                           
  9607                           ;messages.c: 247: }
  9608                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9609                           
  9610                           ;messages.c: 246: return;
  9611  0018E0  0101               	movlb	1	; () banked
  9612  0018E2  0E01               	movlw	high _ToMainLow_MQ
  9613  0018E4  0100               	movlb	0	; () banked
  9614  0018E6  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9615  0018E8  0101               	movlb	1	; () banked
  9616  0018EA  0E72               	movlw	low _ToMainLow_MQ
  9617  0018EC  0100               	movlb	0	; () banked
  9618  0018EE  6F80               	movwf	check_msg@qptr& (0+255),b
  9619  0018F0  ECE5  F00D         	call	_check_msg	;wreg free
  9620  0018F4  0900               	iorlw	0
  9621  0018F6  B4D8               	btfsc	status,2,c
  9622                           
  9623                           ;messages.c: 250: }
  9624                           ;messages.c: 251: enter_sleep_mode();
  9625                           
  9626                           ;messages.c: 249: return;
  9627  0018F8  EC1E  F00F         	call	_enter_sleep_mode	;wreg free
  9628  0018FC  0012               	return	
  9629  0018FE                     __end_of_SleepIfOkay:
  9630                           	opt stack 0
  9631                           pclatu	equ	0xFFB
  9632                           pclath	equ	0xFFA
  9633                           tblptru	equ	0xFF8
  9634                           tblptrh	equ	0xFF7
  9635                           tblptrl	equ	0xFF6
  9636                           tablat	equ	0xFF5
  9637                           prodh	equ	0xFF4
  9638                           prodl	equ	0xFF3
  9639                           intcon	equ	0xFF2
  9640                           postinc0	equ	0xFEE
  9641                           fsr0h	equ	0xFEA
  9642                           fsr0l	equ	0xFE9
  9643                           wreg	equ	0xFE8
  9644                           indf1	equ	0xFE7
  9645                           fsr1h	equ	0xFE2
  9646                           fsr1l	equ	0xFE1
  9647                           bsr	equ	0xFE0
  9648                           indf2	equ	0xFDF
  9649                           postinc2	equ	0xFDE
  9650                           postdec2	equ	0xFDD
  9651                           fsr2h	equ	0xFDA
  9652                           fsr2l	equ	0xFD9
  9653                           status	equ	0xFD8
  9654                           
  9655 ;; *************** function _in_low_int *****************
  9656 ;; Defined at:
  9657 ;;		line 33 in file "../src/interrupts.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;		None
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  2    2[BANK0 ] int 
  9664 ;; Registers used:
  9665 ;;		wreg, status,2, status,0, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9671 ;;      Params:         0       2       0       0       0
  9672 ;;      Locals:         0       0       0       0       0
  9673 ;;      Temps:          0       0       0       0       0
  9674 ;;      Totals:         0       2       0       0       0
  9675 ;;Total ram usage:        2 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    1
  9678 ;; This function calls:
  9679 ;;		_in_high_int
  9680 ;; This function is called by:
  9681 ;;		_SleepIfOkay
  9682 ;;		_in_main
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           	psect	text57
  9687  001A86                     __ptext57:
  9688                           	opt stack 0
  9689  001A86                     _in_low_int:
  9690                           	opt stack 17
  9691                           
  9692                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9693                           
  9694                           ;incstack = 0
  9695  001A86  ACF2               	btfss	intcon,6,c	;volatile
  9696  001A88  D007               	goto	i2l2650
  9697                           
  9698                           ;interrupts.c: 35: return (0);
  9699  001A8A  0E00               	movlw	0
  9700  001A8C  0100               	movlb	0	; () banked
  9701  001A8E  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9702  001A90  0E00               	movlw	0
  9703  001A92  0100               	movlb	0	; () banked
  9704  001A94  6F82               	movwf	?_in_low_int& (0+255),b
  9705  001A96  0012               	return	
  9706  001A98                     i2l2650:
  9707  001A98  ECEA  F00E         	call	_in_high_int	;wreg free
  9708  001A9C  0100               	movlb	0	; () banked
  9709  001A9E  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9710  001AA0  0100               	movlb	0	; () banked
  9711  001AA2  1180               	iorwf	?_in_high_int& (0+255),w,b
  9712  001AA4  B4D8               	btfsc	status,2,c
  9713  001AA6  D007               	goto	i2l2658
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;interrupts.c: 37: return (0);
  9717  001AA8  0E00               	movlw	0
  9718  001AAA  0100               	movlb	0	; () banked
  9719  001AAC  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9720  001AAE  0E00               	movlw	0
  9721  001AB0  0100               	movlb	0	; () banked
  9722  001AB2  6F82               	movwf	?_in_low_int& (0+255),b
  9723  001AB4  0012               	return	
  9724  001AB6                     i2l2658:
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;interrupts.c: 39: return (1);
  9728  001AB6  0E00               	movlw	0
  9729  001AB8  0100               	movlb	0	; () banked
  9730  001ABA  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9731  001ABC  0E01               	movlw	1
  9732  001ABE  0100               	movlb	0	; () banked
  9733  001AC0  6F82               	movwf	?_in_low_int& (0+255),b
  9734  001AC2  0012               	return	
  9735  001AC4                     __end_of_in_low_int:
  9736                           	opt stack 0
  9737                           pclatu	equ	0xFFB
  9738                           pclath	equ	0xFFA
  9739                           tblptru	equ	0xFF8
  9740                           tblptrh	equ	0xFF7
  9741                           tblptrl	equ	0xFF6
  9742                           tablat	equ	0xFF5
  9743                           prodh	equ	0xFF4
  9744                           prodl	equ	0xFF3
  9745                           intcon	equ	0xFF2
  9746                           postinc0	equ	0xFEE
  9747                           fsr0h	equ	0xFEA
  9748                           fsr0l	equ	0xFE9
  9749                           wreg	equ	0xFE8
  9750                           indf1	equ	0xFE7
  9751                           fsr1h	equ	0xFE2
  9752                           fsr1l	equ	0xFE1
  9753                           bsr	equ	0xFE0
  9754                           indf2	equ	0xFDF
  9755                           postinc2	equ	0xFDE
  9756                           postdec2	equ	0xFDD
  9757                           fsr2h	equ	0xFDA
  9758                           fsr2l	equ	0xFD9
  9759                           status	equ	0xFD8
  9760                           
  9761 ;; *************** function _in_high_int *****************
  9762 ;; Defined at:
  9763 ;;		line 25 in file "../src/interrupts.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  2    0[BANK0 ] int 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9777 ;;      Params:         0       2       0       0       0
  9778 ;;      Locals:         0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0
  9780 ;;      Totals:         0       2       0       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		_in_low_int
  9787 ;;		_SleepIfOkay
  9788 ;;		_in_main
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text58
  9793  001DD4                     __ptext58:
  9794                           	opt stack 0
  9795  001DD4                     _in_high_int:
  9796                           	opt stack 17
  9797                           
  9798                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;incstack = 0
  9802  001DD4  0E00               	movlw	0
  9803  001DD6  AEF2               	btfss	intcon,7,c	;volatile
  9804  001DD8  0E01               	movlw	1
  9805  001DDA  0100               	movlb	0	; () banked
  9806  001DDC  6F80               	movwf	?_in_high_int& (0+255),b
  9807  001DDE  0100               	movlb	0	; () banked
  9808  001DE0  6B81               	clrf	(?_in_high_int+1)& (0+255),b
  9809  001DE2  0012               	return	
  9810  001DE4                     __end_of_in_high_int:
  9811                           	opt stack 0
  9812                           pclatu	equ	0xFFB
  9813                           pclath	equ	0xFFA
  9814                           tblptru	equ	0xFF8
  9815                           tblptrh	equ	0xFF7
  9816                           tblptrl	equ	0xFF6
  9817                           tablat	equ	0xFF5
  9818                           prodh	equ	0xFF4
  9819                           prodl	equ	0xFF3
  9820                           intcon	equ	0xFF2
  9821                           postinc0	equ	0xFEE
  9822                           fsr0h	equ	0xFEA
  9823                           fsr0l	equ	0xFE9
  9824                           wreg	equ	0xFE8
  9825                           indf1	equ	0xFE7
  9826                           fsr1h	equ	0xFE2
  9827                           fsr1l	equ	0xFE1
  9828                           bsr	equ	0xFE0
  9829                           indf2	equ	0xFDF
  9830                           postinc2	equ	0xFDE
  9831                           postdec2	equ	0xFDD
  9832                           fsr2h	equ	0xFDA
  9833                           fsr2l	equ	0xFD9
  9834                           status	equ	0xFD8
  9835                           
  9836 ;; *************** function _enter_sleep_mode *****************
  9837 ;; Defined at:
  9838 ;;		line 202 in file "../src/messages.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;		None
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;		None
  9843 ;; Return value:  Size  Location     Type
  9844 ;;		None               void
  9845 ;; Registers used:
  9846 ;;		None
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9852 ;;      Params:         0       0       0       0       0
  9853 ;;      Locals:         0       0       0       0       0
  9854 ;;      Temps:          0       0       0       0       0
  9855 ;;      Totals:         0       0       0       0       0
  9856 ;;Total ram usage:        0 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; This function calls:
  9859 ;;		Nothing
  9860 ;; This function is called by:
  9861 ;;		_SleepIfOkay
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text59
  9866  001E3C                     __ptext59:
  9867                           	opt stack 0
  9868  001E3C                     _enter_sleep_mode:
  9869                           	opt stack 18
  9870                           
  9871                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;incstack = 0
  9875  001E3C  8ED3               	bsf	4051,7,c	;volatile
  9876  001E3E  0003               	sleep		;# 
  9877  001E40  0012               	return	
  9878  001E42                     __end_of_enter_sleep_mode:
  9879                           	opt stack 0
  9880                           pclatu	equ	0xFFB
  9881                           pclath	equ	0xFFA
  9882                           tblptru	equ	0xFF8
  9883                           tblptrh	equ	0xFF7
  9884                           tblptrl	equ	0xFF6
  9885                           tablat	equ	0xFF5
  9886                           prodh	equ	0xFF4
  9887                           prodl	equ	0xFF3
  9888                           intcon	equ	0xFF2
  9889                           postinc0	equ	0xFEE
  9890                           fsr0h	equ	0xFEA
  9891                           fsr0l	equ	0xFE9
  9892                           wreg	equ	0xFE8
  9893                           indf1	equ	0xFE7
  9894                           fsr1h	equ	0xFE2
  9895                           fsr1l	equ	0xFE1
  9896                           bsr	equ	0xFE0
  9897                           indf2	equ	0xFDF
  9898                           postinc2	equ	0xFDE
  9899                           postdec2	equ	0xFDD
  9900                           fsr2h	equ	0xFDA
  9901                           fsr2l	equ	0xFD9
  9902                           status	equ	0xFD8
  9903                           
  9904 ;; *************** function _check_msg *****************
  9905 ;; Defined at:
  9906 ;;		line 220 in file "../src/messages.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9909 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1    wreg      unsigned char 
  9914 ;; Registers used:
  9915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9921 ;;      Params:         0       2       0       0       0
  9922 ;;      Locals:         0       0       0       0       0
  9923 ;;      Temps:          0       1       0       0       0
  9924 ;;      Totals:         0       3       0       0       0
  9925 ;;Total ram usage:        3 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; This function calls:
  9928 ;;		Nothing
  9929 ;; This function is called by:
  9930 ;;		_SleepIfOkay
  9931 ;;		_block_on_To_msgqueues
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text60
  9936  001BCA                     __ptext60:
  9937                           	opt stack 0
  9938  001BCA                     _check_msg:
  9939                           	opt stack 18
  9940                           
  9941                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9942                           
  9943                           ;incstack = 0
  9944  001BCA  0100               	movlb	0	; () banked
  9945  001BCC  EE20 F056          	lfsr	2,86
  9946  001BD0  0100               	movlb	0	; () banked
  9947  001BD2  5180               	movf	check_msg@qptr& (0+255),w,b
  9948  001BD4  26D9               	addwf	fsr2l,f,c
  9949  001BD6  0100               	movlb	0	; () banked
  9950  001BD8  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
  9951  001BDA  22DA               	addwfc	fsr2h,f,c
  9952  001BDC  50DF               	movf	indf2,w,c
  9953  001BDE  0100               	movlb	0	; () banked
  9954  001BE0  6F82               	movwf	??_check_msg& (0+255),b
  9955  001BE2  0100               	movlb	0	; () banked
  9956  001BE4  5182               	movf	??_check_msg& (0+255),w,b
  9957  001BE6  0D11               	mullw	17
  9958  001BE8  50F3               	movf	prodl,w,c
  9959  001BEA  0100               	movlb	0	; () banked
  9960  001BEC  2580               	addwf	check_msg@qptr& (0+255),w,b
  9961  001BEE  6ED9               	movwf	fsr2l,c
  9962  001BF0  50F4               	movf	prodh,w,c
  9963  001BF2  0100               	movlb	0	; () banked
  9964  001BF4  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9965  001BF6  6EDA               	movwf	fsr2h,c
  9966  001BF8  50DF               	movf	indf2,w,c
  9967  001BFA  0012               	return	
  9968  001BFC                     __end_of_check_msg:
  9969                           	opt stack 0
  9970  0000                     pclatu	equ	0xFFB
  9971                           pclath	equ	0xFFA
  9972                           tblptru	equ	0xFF8
  9973                           tblptrh	equ	0xFF7
  9974                           tblptrl	equ	0xFF6
  9975                           tablat	equ	0xFF5
  9976                           prodh	equ	0xFF4
  9977                           prodl	equ	0xFF3
  9978                           intcon	equ	0xFF2
  9979                           postinc0	equ	0xFEE
  9980                           fsr0h	equ	0xFEA
  9981                           fsr0l	equ	0xFE9
  9982                           wreg	equ	0xFE8
  9983                           indf1	equ	0xFE7
  9984                           fsr1h	equ	0xFE2
  9985                           fsr1l	equ	0xFE1
  9986                           bsr	equ	0xFE0
  9987                           indf2	equ	0xFDF
  9988                           postinc2	equ	0xFDE
  9989                           postdec2	equ	0xFDD
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           pclatu	equ	0xFFB
  9994                           pclath	equ	0xFFA
  9995                           tblptru	equ	0xFF8
  9996                           tblptrh	equ	0xFF7
  9997                           tblptrl	equ	0xFF6
  9998                           tablat	equ	0xFF5
  9999                           prodh	equ	0xFF4
 10000                           prodl	equ	0xFF3
 10001                           intcon	equ	0xFF2
 10002                           postinc0	equ	0xFEE
 10003                           fsr0h	equ	0xFEA
 10004                           fsr0l	equ	0xFE9
 10005                           wreg	equ	0xFE8
 10006                           indf1	equ	0xFE7
 10007                           fsr1h	equ	0xFE2
 10008                           fsr1l	equ	0xFE1
 10009                           bsr	equ	0xFE0
 10010                           indf2	equ	0xFDF
 10011                           postinc2	equ	0xFDE
 10012                           postdec2	equ	0xFDD
 10013                           fsr2h	equ	0xFDA
 10014                           fsr2l	equ	0xFD9
 10015                           status	equ	0xFD8
 10016                           
 10017                           	psect	param0
 10018  0000                     pclatu	equ	0xFFB
 10019                           pclath	equ	0xFFA
 10020                           tblptru	equ	0xFF8
 10021                           tblptrh	equ	0xFF7
 10022                           tblptrl	equ	0xFF6
 10023                           tablat	equ	0xFF5
 10024                           prodh	equ	0xFF4
 10025                           prodl	equ	0xFF3
 10026                           intcon	equ	0xFF2
 10027                           postinc0	equ	0xFEE
 10028                           fsr0h	equ	0xFEA
 10029                           fsr0l	equ	0xFE9
 10030                           wreg	equ	0xFE8
 10031                           indf1	equ	0xFE7
 10032                           fsr1h	equ	0xFE2
 10033                           fsr1l	equ	0xFE1
 10034                           bsr	equ	0xFE0
 10035                           indf2	equ	0xFDF
 10036                           postinc2	equ	0xFDE
 10037                           postdec2	equ	0xFDD
 10038                           fsr2h	equ	0xFDA
 10039                           fsr2l	equ	0xFD9
 10040                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         376
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      99
    BANK0           128     69      72
    BANK1           256    114     201
    BANK2           256      0     174
    BANK3           256      0      87

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), main@uart_response(BANK1[14]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> uart_transmit_interrupt_handler@data(COMRAM[2]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), main@uart_response(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_send_uart_message
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                96    96      0   21012
                                             22 BANK1     92    92      0
               _FromMainHigh_sendmsg
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
            _i_like_to_moveit_moveit
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3477
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2788
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i_like_to_moveit_moveit                              4     3      1    3289
                                             16 BANK1      4     3      1
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (1) _send_uart_message                                    3     1      2    3082
                                             68 BANK0      1     1      0
                                             14 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2658
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    7016
                                             54 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                      4     4      0    1765
                                             29 COMRAM     4     4      0
                _FromMainLow_recvmsg
                             i1_blip
 ---------------------------------------------------------------------------------
 (8) i1_blip                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      28    28      0    2943
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    2308
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2187
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    8352
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    3788
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    13    13      0    4308
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                            i2_blip1
                            i2_blip2
 ---------------------------------------------------------------------------------
 (13) i2_blip2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     119
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1797
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1698
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainHigh_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _i_like_to_moveit_moveit
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           ___awmod
           _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         ___awmod
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
     i1_blip

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply
     i2_blip1
     i2_blip2
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      57      10       34.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      AE       8       68.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     72      C9       6       78.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      48       4       56.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     279      11        0.0%
DATA                 0      0     279      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 15 15:20:37 2014

                              ??_debug_configure 00B8                         _MQ_Main_Willing_to_block 00C7  
                                    _SSPSTATbits 000FC7               uart_receive_interrupt_handler@done 005D  
                      __end_of_ToMainLow_recvmsg 1AFA                                               bsr 000FE0  
                      __end_of_ToMainLow_sendmsg 1D4C                                     __CFG_CP0$OFF 000000  
                              i2recv_msg@msgtype 008D                                i2recv_msg@tlength 0094  
                           ?_FromMainLow_recvmsg 0019                                              l123 0818  
                                            l545 1D22                                              l546 1D24  
                                            l571 1BC4                                              l572 1BC6  
                                            l569 1BAE                             ?_FromMainLow_sendmsg 010B  
                           __size_of_WriteTimer0 0012                             __size_of_WriteTimer1 0012  
                               ??_uart_configure 00B8                                     ___awmod@sign 00BD  
                                 _FromMainLow_MQ 0200                                              prod 000FF3  
                                            wreg 000FE8                                       _TXSTA1bits 000FAC  
                                   __CFG_IESO$ON 000000                                     ?_in_high_int 0080  
                                ReadTimer1@timer 0003                              i2recv_msg@maxlength 008C  
                                           l1119 1894                                             l3206 1BB0  
                                           l4202 0760                                             l4222 080E  
                                           l4214 07B8                                             l4230 0858  
                                           l3504 19E0                                             l4224 081E  
                                           l4216 07FC                                             l3530 1356  
                                           l3522 1320                                             l3514 12EC  
                                           l4250 0908                                             l3524 132C  
                                           l4228 083C                                             l3526 1332  
                                           l3534 1364                                             l3518 130E  
                                           l3702 0BCC                                             l4270 096C  
                                           l4264 094C                                             l4256 0928  
                                           l4248 08C6                                             l3538 1378  
                                           l3554 0E3A                                             l4276 098C  
                                           l4196 0758                                             l3718 0CAA  
                                           l2678 17B4                                             l4286 09AC  
                                           l3752 1886                                             l3744 1850  
                                           l3498 19C0                                             l3746 185C  
                                           l3748 1862                                             _LATB 000F8A  
                                           i1l54 007A                                  _FromMainHigh_MQ 0300  
                                  __CFG_FCMEN$ON 000000                                             _blip 1E1C  
                                     i1_recv_msg 110C                                             _main 06E2  
                       ?_i_like_to_moveit_moveit 0110                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             fsr0l 000FE9  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           fsr1l 000FE1                                             indf2 000FDF  
                                           fsr2l 000FD9                                      main@msgtype 014B  
                                     i1_send_msg 1446                                             pclat 000FFA  
                                           prodh 000FF4                                  __end_ofi2_blip1 1E3C  
                                           prodl 000FF3                                  __end_ofi2_blip2 1E34  
                          handle_start@data_read 0080                                             start 00C0  
                                     i2_recv_msg 0CAE                                    __CFG_FOSC2$ON 000000  
                                     i2_send_msg 0EFC                        ToMainHigh_recvmsg@msgtype 010C  
                                 send_msg@length 0102                      __size_of_timer0_int_handler 006E  
         uart_receive_interrupt_handler@checksum 002F                            ??_FromMainLow_recvmsg 001D  
                                          ?_blip 0001                            ??_FromMainLow_sendmsg 00C3  
                                          ?_main 0001                                  __end_of___awmod 1382  
                                          _T0CON 000FD5                                            _T1CON 000FCD  
                                          i1l417 0B50                                  __end_of___lwmod 189E  
                                     i1memcpy@d1 0001                                            i2l303 0188  
                                          i2l332 04F2                                            i2l326 0430  
                                          i2l287 1272                                            i2l299 0156  
                                     i1memcpy@s1 0003                      FromMainHigh_recvmsg@msgtype 0098  
                                          _TMR0H 000FD7                                            _TMR1H 000FCF  
                                          _TMR0L 000FD6                                            _TMR1L 000FCE  
                                          _SPBRG 000FAF                                            _TRISB 000F93  
                                          _TRISD 000F95                                       i2memcpy@d1 0080  
                                     i2memcpy@s1 0082                                     ?_init_queues 0001  
                      __size_of_enter_sleep_mode 0006                                   i1___awmod@sign 0006  
                                          _blip1 1E14                                            _blip2 1E0C  
                                          _blip3 1E04      uart_receive_interrupt_handler@message_count 0033  
                     ToMainLow_recvmsg@maxlength 00C4                          timer0_lthread@msgbuffer 00BE  
                        i2c_configure_slave@addr 00B8                             main@need_sensor_data 0125  
                                          tablat 000FF5          i_like_to_moveit_moveit@right_side_speed 0110  
                                          status 000FD8                                 __end_ofi1_memcpy 1A86  
                             __size_ofi1___awmod 0090                                 __end_ofi2_memcpy 1A46  
                             __size_ofi2___awmod 00C4                                  __initialization 1956  
                                   __end_of_blip 1E24                                     __end_of_main 09E2  
                                     _ReadTimer1 1DB0                      __size_of_timer1_int_handler 002C  
                     __size_of_ToMainLow_recvmsg 0036                       __size_of_ToMainLow_sendmsg 0024  
                  __size_of_FromMainHigh_recvmsg 0036                    __size_of_FromMainHigh_sendmsg 002E  
                                         ??_blip 00B8                                           ??_main 00C5  
                                send_msg@msgtype 0103                                    __activetblptr 000002  
                                send_msg@tlength 0106                       FromMainLow_sendmsg@msgtype 010B  
                           __end_of_handle_start 12BE                                           ?_blip1 0001  
                                         ?_blip2 0001                                           ?_blip3 0001  
                                      ??i2_blip1 0080                                        ??i2_blip2 0080  
                                         i1l4020 0AE6                                           i1l4004 0A8C  
                                         i1l2432 1A58                                           i1l4028 0B08  
                                         i1l2470 1560                                           i1l2462 1546  
                                         i1l2438 1A74                                           i1l4142 0066  
                                         i1l4048 0B64                                           i1l4064 15C8  
                                         i1l2482 158C                                           i1l2474 1574  
                                         i1l2466 1554                                           i1l2458 152A  
                                         i1l2468 155C                                           i1l4148 0070  
                                         i1l2478 157E                                           i1l3630 1152  
                                         i1l4088 15FC                                           i2l3002 18A6  
                                         i1l3582 147E                                           i1l3646 11F0  
                                         i2l2510 141A                                           i2l2502 13E4  
                                         i2l2504 13F0                                       _OpenTimer0 1D02  
                                         i2l2506 13F6                                           i2l2514 1428  
                                         i2l2442 1A10                                           i2l4130 1662  
                                     _OpenTimer1 1B98                                           i2l4124 1658  
                                         i1l3972 0A22                                           i1l3980 0A2E  
                                         i2l2518 143C                                   __CFG_WDTEN$OFF 000000  
                                         i2l2448 1A30                                           i1l3992 0A5A  
                                         i2l2650 1A98                                           i1l3978 0A28  
                                         i1l3994 0A5C                                           i2l2740 1024  
                                         i2l2494 13B0                                           i2l3606 0F4A  
                                         i2l2760 128E                                           i2l2744 10A0  
                                         i2l3800 01B4                                           i2l2658 1AB6  
                                         i2l2498 13D2                                           i2l2762 12A6  
                                         i2l3802 01E0                                           i2l3900 0554  
                                         i2l3820 0294                                           i2l3812 021A  
                                         i2l3662 0D0E                                           i2l3830 0310  
                                         i2l3850 03C8                                           i2l3818 0254  
                                         i2l3924 0698                                           i2l3916 0652  
                                         i2l3908 05C0                                           i2l3780 014A  
                                         i2l3678 0DE8                                           i2l3854 03D0  
                                         i2l3774 013C                                           i2l3936 06D8  
                                         i2l3848 0386                                           i2l3884 04B4  
                                         i2l3894 04F6                                           i2l3886 04E0  
                                         _RCREG1 000FAE                      __end_of_i2c_configure_slave 1CDA  
                                  ??_SleepIfOkay 0084                                           _OSCCON 000FD3  
                                         _SPBRGH 000FB0                                      ?i1_recv_msg 000B  
                                         _SSPADD 000FC8                                           _SSPBUF 000FC9  
                 __size_of_start_i2c_slave_reply 0104                                           _TXREG1 000FAD  
                                    ?i1_send_msg 000B                                           i1_blip 1E24  
                  __end_of_start_i2c_slave_reply 110C                               timer0_lthread@tptr 00B8  
                        FromMainLow_recvmsg@data 001B                                      ?i2_recv_msg 008A  
                                    ?i2_send_msg 008A                                   __CFG_XINST$OFF 000000  
               ??_uart_receive_interrupt_handler 001B                  ?_uart_receive_interrupt_handler 0001  
                                _i2c_int_handler 00C4                                        ??___awmod 00BC  
                                         _blink0 1E42                                 OpenTimer0@config 00B8  
                                         _ic_ptr 00C5                                        ??___lwmod 00BC  
                                  main@msgbuffer 0126                                 __end_of_init_i2c 1778  
                               OpenTimer1@config 00B8                                           _memcpy 19A6  
                                         clear_0 195C                                           clear_1 1968  
                                         clear_2 1974                                           clear_3 1984  
                                ___awmod@divisor 00BA                                  ___awmod@counter 00BC  
                                         main@ic 014C                                 __end_of_recv_msg 0CAE  
                    start_i2c_slave_reply@length 0084    uart_transmit_interrupt_handler@message_status 0021  
                              __end_ofi1___awmod 1596                                 __end_of_send_msg 0EFC  
                                   __pdataCOMRAM 0063                                __end_ofi2___awmod 1446  
                          timer0_int_handler@val 00A1                          i2c_int_handler@i2c_data 00A5  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8             uart_receive_interrupt_handler@msg_id 0034  
                                    init_queue@i 00BA                                   i2___awmod@sign 0085  
           uart_receive_interrupt_handler@status 002B                         ToMainLow_recvmsg@msgtype 010C  
                           __size_of_in_high_int 0010                          FromMainLow_sendmsg@data 010C  
                                _debug_configure 1DF2                                  __CFG_FOSC$HSPLL 000000  
           uart_transmit_interrupt_handler@index 0062                                       __accesstop 0080  
                        __end_of__initialization 199C                       __end_of_ToMainHigh_recvmsg 1B30  
                     __end_of_ToMainHigh_sendmsg 1C86                                 _need_sensor_data 005A  
                    __end_of_init_timer1_lthread 1D9E                              __end_of_SleepIfOkay 18FE  
                                 __pcstackCOMRAM 0001                                      ?_ReadTimer1 0001  
                                  __end_of_blip1 1E1C                                    __end_of_blip2 1E14  
                                  __end_of_blip3 1E0C                  send_uart_message@message_q_code 00C4  
                             __size_of_check_msg 0032                        timer0_int_handler@msgtype 009F  
                            __size_ofi1_recv_msg 00E8                              __size_ofi1_send_msg 00C0  
                                      ?i1_memcpy 0001                    __size_of_InterruptHandlerHigh 169C  
                    __end_of_InterruptHandlerLow 00C0                                        ?i2_memcpy 0080  
                                  _ToMainHigh_MQ 0257                              __size_ofi2_recv_msg 013E  
                               _enter_sleep_mode 1E3C                              __size_ofi2_send_msg 010C  
                           timer1_lthread@length 0112                                          ??_blip1 00B8  
                                        ??_blip2 00B8                                          ??_blip3 00B8  
                                  check_msg@qptr 0080                             timer1_lthread@retval 00C4  
                           __size_of_init_queues 0058                                       __pbssBANK0 00C7  
                                     __pbssBANK1 0172                                       __pbssBANK2 0200  
                                     __pbssBANK3 0300                                      ?_OpenTimer0 0001  
                                    ?_OpenTimer1 0001                          i2c_int_handler@msg_type 00A7  
                                        ?i1_blip 0001                          __end_of_i2c_int_handler 06E2  
                             timer1_lthread@tptr 010E                                          ?_blink0 0001  
                              recv_msg@maxlength 0102                                  recv_msg@msgtype 0103  
                                recv_msg@tlength 0108                            __size_of_handle_start 00CA  
                               WriteTimer0@timer 0082                                          ?_memcpy 00B8  
                               WriteTimer1@timer 0003                                    ??_WriteTimer0 0082  
                                  ??_WriteTimer1 0003                 __size_of_i_like_to_moveit_moveit 0032  
                        __size_of_timer0_lthread 000E                          __size_of_timer1_lthread 0062  
                                     ??i1_memcpy 0007                                       ??i2_memcpy 0086  
                        __end_of_debug_configure 1DFC                                 i1send_msg@length 000D  
                                        _SSPCON1 000FC6                                          _SSPCON2 000FC5  
                                        _SSPSTAT 000FC7                              __size_of_ReadTimer1 0012  
                              __end_of_check_msg 1BFC                                          i2_blip1 1E34  
                                        i2_blip2 1E2C                                        ?_init_i2c 00B8  
                                    _SleepIfOkay 189E                                _send_uart_message 1D6C  
                                __size_ofi1_blip 0008                                        ?_recv_msg 0100  
                                     _in_low_int 1A86                                     _handle_start 11F4  
                                        __Hparam 0000                                        ?_send_msg 0100  
                                        __Lparam 0000                               ?_send_uart_message 010E  
      uart_receive_interrupt_handler@status_1937 002C                       __end_of_timer0_int_handler 1712  
                    __end_of_FromMainLow_recvmsg 1D02                      __end_of_FromMainLow_sendmsg 1C58  
                                        ___awmod 12BE                                          ___lwmod 183E  
                                __size_of_blink0 0004                                  __CFG_STVREN$OFF 000000  
                            ??_send_uart_message 00C4                                          __pcinit 1956  
                                __size_of_memcpy 0050                                       _init_queue 1778  
                                        __ramtop 0400                              __size_of_OpenTimer0 0026  
                            __size_of_OpenTimer1 0032                                          __ptext0 06E2  
                                        __ptext1 1D4C                                          __ptext2 17DC  
                                        __ptext3 1E42                                          __ptext4 183E  
                                        __ptext5 1BFC                                          __ptext6 1DE4  
                                        __ptext7 1D8C                                          __ptext8 18FE  
                                        __ptext9 1778                                        _T0CONbits 000FD5  
                                      _T1CONbits 000FCD                                 ___awmod@dividend 00B8  
                            __end_of_WriteTimer0 1DD4                              __end_of_WriteTimer1 1DB0  
                                        main@jjj 0145                                   main@motor_data 0116  
                                 __pintcode_body 161E                     __end_of_FromMainHigh_recvmsg 1B66  
                           end_of_initialization 199C                          timer1_lthread@msgbuffer 0114  
                   __end_of_FromMainHigh_sendmsg 1C2A                       FromMainHigh_sendmsg@length 00C3  
                      __end_of_send_uart_message 1D8C                                          memcpy@d 00BE  
                                        memcpy@n 00BC                                          memcpy@s 00C0  
                                     ??_init_i2c 00BA                                     ??i1_recv_msg 0012  
                        __size_of_uart_configure 0020                      i2c_int_handler@data_written 00A2  
                                  __Lmediumconst 0000                                          int_func 161E  
                                   ??i1_send_msg 0011         uart_receive_interrupt_handler@bad_end_id 0031  
     uart_receive_interrupt_handler@bad_start_id 0030                                 ?_i2c_int_handler 0001  
                                   ??i2_recv_msg 0091                                       ??_recv_msg 00C2  
                                   ??i2_send_msg 0090                                       ??_send_msg 00C2  
uart_receive_interrupt_handler@gooey_uart_center 001D                       __end_of_timer1_int_handler 1CB2  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc2 000FDE                        ToMainHigh_sendmsg@msgtype 0096  
         i_like_to_moveit_moveit@left_side_speed 0111                               __end_ofi1_recv_msg 11F4  
                             __end_ofi1_send_msg 1506                      FromMainHigh_sendmsg@msgtype 010B  
         __end_of_uart_receive_interrupt_handler 0B6C          __size_of_uart_receive_interrupt_handler 018A  
                 _uart_receive_interrupt_handler 09E2                                 ?_debug_configure 0001  
                                      _TRISBbits 000F93                                        _TRISCbits 000F94  
                             __end_ofi2_recv_msg 0DEC                                        i1___awmod 1506  
                             __end_ofi2_send_msg 1008                                        i2___awmod 1382  
                  FromMainHigh_recvmsg@maxlength 009C                         timer1_int_handler@result 001B  
                                     main@length 014A                                      ?_in_low_int 0082  
                                 __end_ofi1_blip 1E2C                            timer0_lthread@msgtype 00BA  
                          _start_i2c_slave_reply 1008                     __size_of_i2c_configure_slave 0028  
                       __end_of_enter_sleep_mode 1E42                                     ??_ReadTimer1 0003  
                        _i_like_to_moveit_moveit 1B66                               _ToMainHigh_recvmsg 1AFA  
                                      i1memcpy@d 0007                               _ToMainHigh_sendmsg 1C58  
                                      i1memcpy@n 0005                                        i1memcpy@s 0009  
                                    _BAUDCONbits 000FB8                                   __end_of_blink0 1E46  
                                  __pidataCOMRAM 1E46                                   _timer0_lthread 1DE4  
                                    ?_init_queue 00B8                                        i2memcpy@d 0086  
                                    _WriteTimer0 1DC2                                      _WriteTimer1 1D9E  
                                      i2memcpy@n 0084                                        i2memcpy@s 0088  
                                 _timer1_lthread 17DC                                   __end_of_memcpy 19F6  
                              _enable_interrupts 1DFC                              ?_ToMainHigh_recvmsg 010C  
                       i2c_int_handler@data_read 00A9                              ?_ToMainHigh_sendmsg 0096  
                             ?_enable_interrupts 0001                              start_initialization 1956  
                                  ??_in_high_int 0082     uart_receive_interrupt_handler@start_byte_bad 0061  
                                     ?i1___awmod 0001                                __size_ofi1_memcpy 0040  
                              __size_ofi2_memcpy 0050                                       ?i2___awmod 0080  
                      FromMainLow_sendmsg@length 00C3                            i2c_int_handler@length 009E  
                            ??_enable_interrupts 00B8                                     ??_OpenTimer0 00B8  
                                   ??_OpenTimer1 00B8                               __end_of_ReadTimer1 1DC2  
                uart_receive_interrupt_handler@i 0035                       __size_of_send_uart_message 0020  
                              main@uart_response 0137                                         ??i1_blip 0001  
                   __end_of_InterruptHandlerHigh 16A4                                       init_i2c@ic 00B8  
                           ??_ToMainHigh_recvmsg 00C4                             ??_ToMainHigh_sendmsg 0099  
         uart_transmit_interrupt_handler@msgtype 0020                         i2c_int_handler@need_data 00A4  
                         __end_of_timer0_lthread 1DF2                                         ??_blink0 00B8  
                       i2c_int_handler@error_buf 009F                           __end_of_timer1_lthread 183E  
                             i1___awmod@dividend 0001                        __end_of_enable_interrupts 1E04  
                                       ??_memcpy 00BE                            timer1_lthread@msgtype 0110  
                           _FromMainHigh_recvmsg 1B30              uart_receive_interrupt_handler@frame 0048  
            uart_receive_interrupt_handler@index 005F                             _FromMainHigh_sendmsg 1BFC  
            uart_receive_interrupt_handler@error 005E                     __size_of_init_timer1_lthread 0012  
                             __end_of_OpenTimer0 1D28                               __end_of_OpenTimer1 1BCA  
                       i2c_int_handler@msg_ready 00A8                                      __pbssCOMRAM 0048  
                                  ??_init_queues 00BB                                    __pcstackBANK0 0080  
                                  __pcstackBANK1 0100                              __size_of_in_low_int 003E  
                       start_i2c_slave_reply@msg 0080                              __CFG_CCP2MX$DEFAULT 000000  
                                       ?i2_blip1 0001                                         ?i2_blip2 0001  
                       ToMainLow_sendmsg@msgtype 0017                     __size_of_InterruptHandlerLow 00A8  
                            __end_of_in_high_int 1DE4                                   _uart_configure 1D4C  
                                   ?_SleepIfOkay 0001                            ToMainLow_recvmsg@data 010E  
                                   _ToMainLow_MQ 0172                              __size_of_init_queue 0064  
                                      _check_msg 1BCA                                        __pnvBANK0 00C5  
                         ?_start_i2c_slave_reply 0080                                __size_of_init_i2c 0066  
                                   recv_msg@data 0105                        ??_i_like_to_moveit_moveit 00C5  
                                   recv_msg@qmsg 010A                                     recv_msg@slot 0107  
                                   recv_msg@qptr 0100                                __size_of_recv_msg 0142  
                                      __pintcode 0008                                __size_of_send_msg 0110  
                                       ?___awmod 00B8                                  ?_timer0_lthread 00B8  
                                       ?___lwmod 00B8                            ?_FromMainHigh_recvmsg 0098  
                                ?_timer1_lthread 010E                            ?_FromMainHigh_sendmsg 010B  
                                    __pintcodelo 0018                           ToMainHigh_recvmsg@data 010E  
                     i2c_int_handler@msg_to_send 00A6                                WriteTimer0@timer0 0080  
                             _timer0_int_handler 16A4                                WriteTimer1@timer1 0001  
                                    ??i1___awmod 0005                            ToMainLow_sendmsg@data 0018  
                                 __size_of_blip1 0008                                   __size_of_blip2 0008  
                                 __size_of_blip3 0008                                      ??i2___awmod 0084  
                         __end_of_uart_configure 1D6C                              i1recv_msg@maxlength 000D  
                            ?_timer0_int_handler 0001     uart_receive_interrupt_handler@bad_counter_id 002D  
                            __end_of_init_queues 1956                                         _LATBbits 000F8A  
                                       _LATDbits 000F8C                                       ?_check_msg 0080  
                                       _IPR1bits 000F9F                                         _PIE1bits 000F9D  
                                       _PIR1bits 000F9E                           ToMainHigh_sendmsg@data 0097  
                                       _RCONbits 000FD0                                 __CFG_WDTPS$32768 000000  
                                 i1recv_msg@data 0010                             ??_timer0_int_handler 009D  
                                 i1recv_msg@qmsg 0017                                   i1recv_msg@slot 0014  
                                 i1recv_msg@qptr 000B   uart_receive_interrupt_handler@received_counter 0060  
                   FromMainLow_recvmsg@maxlength 001D                       __size_of_enable_interrupts 0008  
                              i1send_msg@msgtype 000E                                i1send_msg@tlength 0012  
                     FromMainLow_recvmsg@msgtype 0019                     __size_of_FromMainLow_recvmsg 0028  
                   __size_of_FromMainLow_sendmsg 002E                             timer0_lthread@length 00BC  
                             _timer1_int_handler 1C86                                         i1_memcpy 1A46  
                           _InterruptHandlerHigh 0008                                         i2_memcpy 19F6  
                __end_of_i_like_to_moveit_moveit 1B98                             timer0_lthread@msgval 00C0  
                       FromMainHigh_recvmsg@data 009A                                      _in_high_int 1DD4  
                                   send_msg@data 0104                              _i2c_configure_slave 1CB2  
                                   send_msg@qmsg 0109                                     send_msg@slot 0108  
                                   send_msg@qptr 0100                                  ?_uart_configure 0001  
                            ?_timer1_int_handler 0001                               i2___awmod@dividend 0080  
                               __size_ofi2_blip1 0008                                 __size_ofi2_blip2 0008  
                                       __Hparam0 0000                                     ??_in_low_int 0084  
                                       __Lparam0 0000                             ?_i2c_configure_slave 0001  
                              ?_enter_sleep_mode 0001                           ??_FromMainHigh_recvmsg 009C  
                         ??_FromMainHigh_sendmsg 00C3                                i1___awmod@divisor 0003  
                           ??_timer1_int_handler 001B          __end_of_uart_transmit_interrupt_handler 161E  
       __size_of_uart_transmit_interrupt_handler 0088                ??_uart_transmit_interrupt_handler 001E  
               ?_uart_transmit_interrupt_handler 0001                  _uart_transmit_interrupt_handler 1596  
                              i1___awmod@counter 0005                         __size_of_i2c_int_handler 061E  
                               __size_of___awmod 00C4                               ??_enter_sleep_mode 0080  
                               __size_of___lwmod 0060                                     ??_init_queue 00BA  
                                   ?_WriteTimer0 0080                                     ?_WriteTimer1 0001  
                       FromMainHigh_sendmsg@data 010C                          ToMainLow_sendmsg@length 001A  
                              main@t0thread_data 0135                   uart_frame_message@sent_counter 005C  
                          ?_InterruptHandlerHigh 0001              uart_transmit_interrupt_handler@data 001E  
            uart_transmit_interrupt_handler@done 0063                     i_like_to_moveit_moveit@moves 0112  
                              i2send_msg@msgtype 008D                      ToMainHigh_recvmsg@maxlength 00C4  
                              i2send_msg@tlength 0091                          init_timer1_lthread@tptr 00B8  
                                    _init_queues 18FE                               __end_of_in_low_int 1AC4  
                                       __ptext10 1712                                         __ptext11 1B66  
                                       __ptext20 1E14                                         __ptext12 1D6C  
                                       __ptext21 1E1C                                         __ptext13 1C2A  
                                       __ptext30 1596                                         __ptext22 1AC4  
                                       __ptext14 0DEC                                         __ptext31 1E24  
                                       __ptext23 1AFA                                         __ptext15 1CB2  
                                       __ptext40 1506                                         __ptext32 1CDA  
                                       __ptext24 0B6C                                         __ptext16 1DFC  
                                       __ptext41 1DB0                                         __ptext33 110C  
                                       __ptext25 19A6                                         __ptext17 1DF2  
                                       __ptext50 1C58                                         __ptext34 09E2  
                                       __ptext26 12BE                                         __ptext18 1E04  
                                       __ptext51 0EFC                                         __ptext43 16A4  
                                       __ptext35 1C86                                         __ptext27 1B98  
                                       __ptext19 1E0C                                         __ptext60 1BCA  
                                       __ptext52 1B30                                         __ptext44 1DC2  
                                       __ptext36 1D9E                                         __ptext28 1D02  
                                       __ptext53 0CAE                                         __ptext45 00C4  
                                       __ptext37 1D28                                         __ptext54 19F6  
                                       __ptext46 1E2C                                         __ptext38 1446  
                                       __ptext55 1382                                         __ptext47 1E34  
                                       __ptext39 1A46                                         __ptext56 189E  
                                       __ptext48 1008                                         __ptext57 1A86  
                                       __ptext49 11F4                                         __ptext58 1DD4  
                                       __ptext59 1E3C                                   i1send_msg@data 000F  
                                 i1send_msg@qmsg 0015                                   i1send_msg@slot 0014  
                                 i1send_msg@qptr 000B                         timer0_int_handler@length 009D  
                                       _init_i2c 1712                         __size_of_debug_configure 000A  
                            _init_timer1_lthread 1D8C                                    __size_of_blip 0008  
                                  __size_of_main 0300                                main@t1thread_data 0148  
                                    ??_check_msg 0082                               __end_of_init_queue 17DC  
                           __size_of_SleepIfOkay 0060                                         _recv_msg 0B6C  
                          ??_i2c_configure_slave 00B8                                         _send_msg 0DEC  
  uart_receive_interrupt_handler@bad_checksum_id 0032                                   init_queue@qptr 00B8  
                                 i2recv_msg@data 008F                                   i2recv_msg@qmsg 0096  
                                 i2recv_msg@slot 0093                                   i2recv_msg@qptr 008A  
                                   _SSP1STATbits 000FC7                              _InterruptHandlerLow 0018  
                                       main@poop 0147                             ?_init_timer1_lthread 00B8  
                              i2___awmod@divisor 0082                                i2___awmod@counter 0084  
                                    _OSCTUNEbits 000F9B                                       _INTCONbits 000FF2  
                                       memcpy@d1 00B8                                         memcpy@s1 00BA  
                   i2c_int_handler@overrun_error 00A3                                 i2send_msg@length 008C  
                                       intlevel1 0000                                         intlevel2 0000  
                           ?_InterruptHandlerLow 0001                          ??_start_i2c_slave_reply 0082  
                   send_uart_message@message_ptr 010E                                 ___lwmod@dividend 00B8  
                                     _RCSTA1bits 000FAB                                    ?_handle_start 0001  
                               ??_timer0_lthread 00C0                      __size_of_ToMainHigh_recvmsg 0036  
                    __size_of_ToMainHigh_sendmsg 002E                                       _OSCCONbits 000FD3  
                               ??_timer1_lthread 00C4                                i1recv_msg@msgtype 000E  
                              i1recv_msg@tlength 0015                         ToMainHigh_sendmsg@length 0099  
                          ??_init_timer1_lthread 00BA                           ??_InterruptHandlerHigh 00AA  
                              _ToMainLow_recvmsg 1AC4                                _ToMainLow_sendmsg 1D28  
                             main@last_reg_recvd 0124                                  ___lwmod@divisor 00BA  
                             ?_ToMainLow_recvmsg 010C                                ??_i2c_int_handler 009D  
                                ___lwmod@counter 00BC                               ?_ToMainLow_sendmsg 0017  
                                    _SSPCON1bits 000FC6                                      _SSPCON2bits 000FC5  
                                 i2send_msg@data 008E                            ??_InterruptHandlerLow 0037  
                            ??_ToMainLow_recvmsg 00C4                                   i2send_msg@qmsg 0094  
                                 i2send_msg@slot 0093                                   i2send_msg@qptr 008A  
                            ??_ToMainLow_sendmsg 001A                              _FromMainLow_recvmsg 1CDA  
                                 ??_handle_start 0080                              _FromMainLow_sendmsg 1C2A  
