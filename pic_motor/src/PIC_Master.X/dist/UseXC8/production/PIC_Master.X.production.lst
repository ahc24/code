

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Nov 03 18:52:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    79                           	psect	param0,global,class=BANK0,space=1,delta=1
    80  0000                     
    81                           	psect	idataCOMRAM
    82  001D3E                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for uart_transmit_interrupt_handler@done
    86  001D3E  01                 	db	1
    87  0000                     _BAUDCONbits	set	4024
    88  0000                     _INTCON2bits	set	4081
    89  0000                     _INTCONbits	set	4082
    90  0000                     _IPR1bits	set	3999
    91  0000                     _LATB	set	3978
    92  0000                     _LATBbits	set	3978
    93  0000                     _LATDbits	set	3980
    94  0000                     _OSCCON	set	4051
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _OSCTUNEbits	set	3995
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PIR1bits	set	3998
    99  0000                     _RCONbits	set	4048
   100  0000                     _RCREG1	set	4014
   101  0000                     _RCSTA1bits	set	4011
   102  0000                     _SPBRG	set	4015
   103  0000                     _SPBRGH	set	4016
   104  0000                     _SSP1STATbits	set	4039
   105  0000                     _SSPADD	set	4040
   106  0000                     _SSPBUF	set	4041
   107  0000                     _SSPCON1	set	4038
   108  0000                     _SSPCON1bits	set	4038
   109  0000                     _SSPCON2	set	4037
   110  0000                     _SSPCON2bits	set	4037
   111  0000                     _SSPSTAT	set	4039
   112  0000                     _SSPSTATbits	set	4039
   113  0000                     _T0CONbits	set	4053
   114  0000                     _T1CON	set	4045
   115  0000                     _T1CONbits	set	4045
   116  0000                     _TMR0H	set	4055
   117  0000                     _TMR0L	set	4054
   118  0000                     _TMR1H	set	4047
   119  0000                     _TMR1L	set	4046
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISBbits	set	3987
   122  0000                     _TRISCbits	set	3988
   123  0000                     _TRISD	set	3989
   124  0000                     _TXREG1	set	4013
   125  0000                     _TXSTA1bits	set	4012
   126                           
   127                           	psect	nvBANK0
   128  0000C5                     __pnvBANK0:
   129                           	opt stack 0
   130  0000C5                     _ic_ptr:
   131                           	opt stack 0
   132  0000C5                     	ds	2
   133                           
   134                           ; #config settings
   135  0000                     
   136                           	psect	cinit
   137  00184C                     __pcinit:
   138                           	opt stack 0
   139  00184C                     start_initialization:
   140                           	opt stack 0
   141  00184C                     __initialization:
   142                           	opt stack 0
   143                           
   144                           ; Clear objects allocated to BANK3 (87 bytes)
   145  00184C  EE03  F000         	lfsr	0,__pbssBANK3
   146  001850  0E57               	movlw	87
   147  001852                     clear_0:
   148  001852  6AEE               	clrf	postinc0,c
   149  001854  06E8               	decf	wreg,f,c
   150  001856  E1FD               	bnz	clear_0
   151                           
   152                           ; Clear objects allocated to BANK2 (174 bytes)
   153  001858  EE02  F000         	lfsr	0,__pbssBANK2
   154  00185C  0EAE               	movlw	174
   155  00185E                     clear_1:
   156  00185E  6AEE               	clrf	postinc0,c
   157  001860  06E8               	decf	wreg,f,c
   158  001862  E1FD               	bnz	clear_1
   159                           
   160                           ; Clear objects allocated to BANK1 (87 bytes)
   161  001864  EE01  F066         	lfsr	0,__pbssBANK1
   162  001868  0E57               	movlw	87
   163  00186A                     clear_2:
   164  00186A  6AEE               	clrf	postinc0,c
   165  00186C  06E8               	decf	wreg,f,c
   166  00186E  E1FD               	bnz	clear_2
   167                           
   168                           ; Clear objects allocated to BANK0 (1 bytes)
   169  001870  0100               	movlb	0
   170  001872  6BC7               	clrf	__pbssBANK0& (0+255),b
   171                           
   172                           ; Clear objects allocated to COMRAM (28 bytes)
   173  001874  EE00  F049         	lfsr	0,__pbssCOMRAM
   174  001878  0E1C               	movlw	28
   175  00187A                     clear_3:
   176  00187A  6AEE               	clrf	postinc0,c
   177  00187C  06E8               	decf	wreg,f,c
   178  00187E  E1FD               	bnz	clear_3
   179                           
   180                           ; Initialize objects allocated to COMRAM (1 bytes)
   181                           ; load TBLPTR registers with __pidataCOMRAM
   182  001880  0E3E               	movlw	low __pidataCOMRAM
   183  001882  6EF6               	movwf	tblptrl,c
   184  001884  0E1D               	movlw	high __pidataCOMRAM
   185  001886  6EF7               	movwf	tblptrh,c
   186  001888  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   187  00188A  6EF8               	movwf	tblptru,c
   188  00188C  0009               	tblrd		*+	;fetch initializer
   189  00188E  CFF5 F065          	movff	tablat,__pdataCOMRAM
   190  001892                     end_of_initialization:
   191                           	opt stack 0
   192  001892                     __end_of__initialization:
   193                           	opt stack 0
   194  001892  0E00               	movlw	low (__Lmediumconst shr (0+16))
   195  001894  6EF8               	movwf	tblptru,c
   196  001896  0100               	movlb	0
   197  001898  EFAA  F003         	goto	_main	;jump to C main() function
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           
   205                           	psect	bssCOMRAM
   206  000049                     __pbssCOMRAM:
   207                           	opt stack 0
   208  000049                     uart_receive_interrupt_handler@frame:
   209                           	opt stack 0
   210  000049                     	ds	18
   211  00005B                     _need_sensor_data:
   212                           	opt stack 0
   213  00005B                     	ds	2
   214  00005D                     InterruptHandlerLow@encoder_ticks:
   215                           	opt stack 0
   216  00005D                     	ds	1
   217  00005E                     uart_frame_message@sent_counter:
   218                           	opt stack 0
   219  00005E                     	ds	1
   220  00005F                     uart_receive_interrupt_handler@done:
   221                           	opt stack 0
   222  00005F                     	ds	1
   223  000060                     uart_receive_interrupt_handler@error:
   224                           	opt stack 0
   225  000060                     	ds	1
   226  000061                     uart_receive_interrupt_handler@index:
   227                           	opt stack 0
   228  000061                     	ds	1
   229  000062                     uart_receive_interrupt_handler@received_counter:
   230                           	opt stack 0
   231  000062                     	ds	1
   232  000063                     uart_receive_interrupt_handler@start_byte_bad:
   233                           	opt stack 0
   234  000063                     	ds	1
   235  000064                     uart_transmit_interrupt_handler@index:
   236                           	opt stack 0
   237  000064                     	ds	1
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245                           	psect	dataCOMRAM
   246  000065                     __pdataCOMRAM:
   247                           	opt stack 0
   248  000065                     uart_transmit_interrupt_handler@done:
   249                           	opt stack 0
   250  000065                     	ds	1
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258                           	psect	bssBANK0
   259  0000C7                     __pbssBANK0:
   260                           	opt stack 0
   261  0000C7                     _MQ_Main_Willing_to_block:
   262                           	opt stack 0
   263  0000C7                     	ds	1
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           
   271                           	psect	bssBANK1
   272  000166                     __pbssBANK1:
   273                           	opt stack 0
   274  000166                     _ToMainLow_MQ:
   275                           	opt stack 0
   276  000166                     	ds	87
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           
   284                           	psect	bssBANK2
   285  000200                     __pbssBANK2:
   286                           	opt stack 0
   287  000200                     _FromMainLow_MQ:
   288                           	opt stack 0
   289  000200                     	ds	87
   290  000257                     _ToMainHigh_MQ:
   291                           	opt stack 0
   292  000257                     	ds	87
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           
   300                           	psect	bssBANK3
   301  000300                     __pbssBANK3:
   302                           	opt stack 0
   303  000300                     _FromMainHigh_MQ:
   304                           	opt stack 0
   305  000300                     	ds	87
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           
   313                           	psect	cstackBANK1
   314  000100                     __pcstackBANK1:
   315                           	opt stack 0
   316  000100                     send_msg@qptr:
   317                           	opt stack 0
   318  000100                     recv_msg@qptr:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x0
   322  000100                     	ds	2
   323  000102                     send_msg@length:
   324                           	opt stack 0
   325  000102                     recv_msg@maxlength:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x2
   329  000102                     	ds	1
   330  000103                     send_msg@msgtype:
   331                           	opt stack 0
   332  000103                     recv_msg@msgtype:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x3
   336  000103                     	ds	1
   337  000104                     send_msg@data:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x4
   341  000104                     	ds	1
   342  000105                     recv_msg@data:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x5
   346  000105                     	ds	1
   347  000106                     send_msg@tlength:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x6
   351  000106                     	ds	1
   352  000107                     recv_msg@slot:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x7
   356  000107                     	ds	1
   357  000108                     send_msg@slot:
   358                           	opt stack 0
   359  000108                     recv_msg@tlength:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x8
   363  000108                     	ds	1
   364  000109                     send_msg@qmsg:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x9
   368  000109                     	ds	1
   369  00010A                     recv_msg@qmsg:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0xA
   373  00010A                     	ds	1
   374  00010B                     FromMainLow_sendmsg@msgtype:
   375                           	opt stack 0
   376  00010B                     FromMainHigh_sendmsg@msgtype:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0xB
   380  00010B                     	ds	1
   381  00010C                     ToMainLow_recvmsg@msgtype:
   382                           	opt stack 0
   383  00010C                     ToMainHigh_recvmsg@msgtype:
   384                           	opt stack 0
   385  00010C                     FromMainLow_sendmsg@data:
   386                           	opt stack 0
   387  00010C                     FromMainHigh_sendmsg@data:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0xC
   391  00010C                     	ds	2
   392  00010E                     ToMainLow_recvmsg@data:
   393                           	opt stack 0
   394  00010E                     ToMainHigh_recvmsg@data:
   395                           	opt stack 0
   396  00010E                     send_uart_message@message_ptr:
   397                           	opt stack 0
   398  00010E                     timer1_lthread@tptr:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0xE
   402  00010E                     	ds	2
   403  000110                     i_like_to_moveit_moveit@right_side_speed:
   404                           	opt stack 0
   405  000110                     timer1_lthread@msgtype:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x10
   409  000110                     	ds	1
   410  000111                     i_like_to_moveit_moveit@left_side_speed:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x11
   414  000111                     	ds	1
   415  000112                     timer1_lthread@length:
   416                           	opt stack 0
   417  000112                     i_like_to_moveit_moveit@moves:
   418                           	opt stack 0
   419                           
   420                           ; 4 bytes @ 0x12
   421  000112                     	ds	2
   422  000114                     timer1_lthread@msgbuffer:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x14
   426  000114                     	ds	2
   427  000116                     main@motor_data:
   428                           	opt stack 0
   429                           
   430                           ; 14 bytes @ 0x16
   431  000116                     	ds	14
   432  000124                     main@last_reg_recvd:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x24
   436  000124                     	ds	1
   437  000125                     main@need_sensor_data:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x25
   441  000125                     	ds	1
   442  000126                     main@msgbuffer:
   443                           	opt stack 0
   444                           
   445                           ; 15 bytes @ 0x26
   446  000126                     	ds	15
   447  000135                     main@t0thread_data:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x35
   451  000135                     	ds	2
   452  000137                     main@t1thread_data:
   453                           	opt stack 0
   454                           
   455                           ; 6 bytes @ 0x37
   456  000137                     	ds	6
   457  00013D                     main@poop:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x3D
   461  00013D                     	ds	1
   462  00013E                     main@length:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x3E
   466  00013E                     	ds	1
   467  00013F                     main@msgtype:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x3F
   471  00013F                     	ds	1
   472  000140                     main@ic:
   473                           	opt stack 0
   474                           
   475                           ; 38 bytes @ 0x40
   476  000140                     	ds	38
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           
   484                           	psect	cstackBANK0
   485  000080                     __pcstackBANK0:
   486                           	opt stack 0
   487  000080                     ?_in_high_int:
   488                           	opt stack 0
   489  000080                     ?i2___awmod:
   490                           	opt stack 0
   491  000080                     handle_start@data_read:
   492                           	opt stack 0
   493  000080                     check_msg@qptr:
   494                           	opt stack 0
   495  000080                     start_i2c_slave_reply@msg:
   496                           	opt stack 0
   497  000080                     i2memcpy@d1:
   498                           	opt stack 0
   499  000080                     i2___awmod@dividend:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x0
   503  000080                     	ds	2
   504  000082                     ??_check_msg:
   505  000082                     ?_in_low_int:
   506                           	opt stack 0
   507  000082                     start_i2c_slave_reply@length:
   508                           	opt stack 0
   509  000082                     i2memcpy@s1:
   510                           	opt stack 0
   511  000082                     i2___awmod@divisor:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x2
   515  000082                     	ds	2
   516  000084                     i2___awmod@counter:
   517                           	opt stack 0
   518  000084                     i2memcpy@n:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x4
   522  000084                     	ds	1
   523  000085                     i2___awmod@sign:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x5
   527  000085                     	ds	1
   528  000086                     i2memcpy@d:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x6
   532  000086                     	ds	2
   533  000088                     i2memcpy@s:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x8
   537  000088                     	ds	2
   538  00008A                     i2send_msg@qptr:
   539                           	opt stack 0
   540  00008A                     i2recv_msg@qptr:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0xA
   544  00008A                     	ds	2
   545  00008C                     i2send_msg@length:
   546                           	opt stack 0
   547  00008C                     i2recv_msg@maxlength:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0xC
   551  00008C                     	ds	1
   552  00008D                     i2send_msg@msgtype:
   553                           	opt stack 0
   554  00008D                     i2recv_msg@msgtype:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0xD
   558  00008D                     	ds	1
   559  00008E                     i2send_msg@data:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0xE
   563  00008E                     	ds	1
   564  00008F                     i2recv_msg@data:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0xF
   568  00008F                     	ds	1
   569  000090                     ??i2_send_msg:
   570                           
   571                           ; 0 bytes @ 0x10
   572  000090                     	ds	1
   573  000091                     ??i2_recv_msg:
   574  000091                     i2send_msg@tlength:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x11
   578  000091                     	ds	2
   579  000093                     i2send_msg@slot:
   580                           	opt stack 0
   581  000093                     i2recv_msg@slot:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x13
   585  000093                     	ds	1
   586  000094                     i2send_msg@qmsg:
   587                           	opt stack 0
   588  000094                     i2recv_msg@tlength:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x14
   592  000094                     	ds	2
   593  000096                     ToMainHigh_sendmsg@msgtype:
   594                           	opt stack 0
   595  000096                     i2recv_msg@qmsg:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x16
   599  000096                     	ds	1
   600  000097                     ToMainHigh_sendmsg@data:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x17
   604  000097                     	ds	1
   605  000098                     FromMainHigh_recvmsg@msgtype:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x18
   609  000098                     	ds	1
   610  000099                     ToMainHigh_sendmsg@length:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x19
   614  000099                     	ds	1
   615  00009A                     FromMainHigh_recvmsg@data:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x1A
   619  00009A                     	ds	2
   620  00009C                     FromMainHigh_recvmsg@maxlength:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x1C
   624  00009C                     	ds	1
   625  00009D                     ??_i2c_int_handler:
   626                           
   627                           ; 0 bytes @ 0x1D
   628  00009D                     	ds	1
   629  00009E                     i2c_int_handler@length:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x1E
   633  00009E                     	ds	1
   634  00009F                     i2c_int_handler@error_buf:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x1F
   638  00009F                     	ds	3
   639  0000A2                     i2c_int_handler@data_written:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x22
   643  0000A2                     	ds	1
   644  0000A3                     i2c_int_handler@overrun_error:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x23
   648  0000A3                     	ds	1
   649  0000A4                     i2c_int_handler@need_data:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x24
   653  0000A4                     	ds	1
   654  0000A5                     i2c_int_handler@i2c_data:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x25
   658  0000A5                     	ds	1
   659  0000A6                     i2c_int_handler@msg_to_send:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x26
   663  0000A6                     	ds	1
   664  0000A7                     i2c_int_handler@msg_type:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x27
   668  0000A7                     	ds	1
   669  0000A8                     i2c_int_handler@msg_ready:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x28
   673  0000A8                     	ds	1
   674  0000A9                     i2c_int_handler@data_read:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x29
   678  0000A9                     	ds	1
   679  0000AA                     ??_InterruptHandlerHigh:
   680                           
   681                           ; 0 bytes @ 0x2A
   682  0000AA                     	ds	14
   683  0000B8                     ?___awmod:
   684                           	opt stack 0
   685  0000B8                     ?___lwmod:
   686                           	opt stack 0
   687  0000B8                     i2c_configure_slave@addr:
   688                           	opt stack 0
   689  0000B8                     OpenTimer1@config:
   690                           	opt stack 0
   691  0000B8                     init_queue@qptr:
   692                           	opt stack 0
   693  0000B8                     init_i2c@ic:
   694                           	opt stack 0
   695  0000B8                     timer0_lthread@tptr:
   696                           	opt stack 0
   697  0000B8                     init_timer1_lthread@tptr:
   698                           	opt stack 0
   699  0000B8                     ___awmod@dividend:
   700                           	opt stack 0
   701  0000B8                     ___lwmod@dividend:
   702                           	opt stack 0
   703  0000B8                     memcpy@d1:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x38
   707  0000B8                     	ds	2
   708  0000BA                     init_queue@i:
   709                           	opt stack 0
   710  0000BA                     timer0_lthread@msgtype:
   711                           	opt stack 0
   712  0000BA                     ___awmod@divisor:
   713                           	opt stack 0
   714  0000BA                     ___lwmod@divisor:
   715                           	opt stack 0
   716  0000BA                     memcpy@s1:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x3A
   720  0000BA                     	ds	1
   721  0000BB                     
   722                           ; 0 bytes @ 0x3B
   723  0000BB                     	ds	1
   724  0000BC                     ___awmod@counter:
   725                           	opt stack 0
   726  0000BC                     ___lwmod@counter:
   727                           	opt stack 0
   728  0000BC                     timer0_lthread@length:
   729                           	opt stack 0
   730  0000BC                     memcpy@n:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x3C
   734  0000BC                     	ds	1
   735  0000BD                     ___awmod@sign:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x3D
   739  0000BD                     	ds	1
   740  0000BE                     timer0_lthread@msgbuffer:
   741                           	opt stack 0
   742  0000BE                     memcpy@d:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x3E
   746  0000BE                     	ds	2
   747  0000C0                     timer0_lthread@msgval:
   748                           	opt stack 0
   749  0000C0                     memcpy@s:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x40
   753  0000C0                     	ds	2
   754  0000C2                     ??_send_msg:
   755  0000C2                     ??_recv_msg:
   756                           
   757                           ; 0 bytes @ 0x42
   758  0000C2                     	ds	1
   759  0000C3                     FromMainLow_sendmsg@length:
   760                           	opt stack 0
   761  0000C3                     FromMainHigh_sendmsg@length:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x43
   765  0000C3                     	ds	1
   766  0000C4                     ToMainLow_recvmsg@maxlength:
   767                           	opt stack 0
   768  0000C4                     ToMainHigh_recvmsg@maxlength:
   769                           	opt stack 0
   770  0000C4                     send_uart_message@message_q_code:
   771                           	opt stack 0
   772  0000C4                     timer1_lthread@retval:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x44
   776  0000C4                     	ds	1
   777  0000C5                     tblptru	equ	0xFF8
   778                           tblptrh	equ	0xFF7
   779                           tblptrl	equ	0xFF6
   780                           tablat	equ	0xFF5
   781                           postinc0	equ	0xFEE
   782                           wreg	equ	0xFE8
   783                           
   784                           ; 0 bytes @ 0x45
   785                           
   786                           	psect	cstackCOMRAM
   787  000001                     __pcstackCOMRAM:
   788                           	opt stack 0
   789  000001                     ?_ReadTimer1:
   790                           	opt stack 0
   791  000001                     ?i1___awmod:
   792                           	opt stack 0
   793  000001                     WriteTimer0@timer0:
   794                           	opt stack 0
   795  000001                     WriteTimer1@timer1:
   796                           	opt stack 0
   797  000001                     i1memcpy@d1:
   798                           	opt stack 0
   799  000001                     i1___awmod@dividend:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x0
   803  000001                     	ds	2
   804  000003                     WriteTimer0@timer:
   805                           	opt stack 0
   806  000003                     ReadTimer1@timer:
   807                           	opt stack 0
   808  000003                     WriteTimer1@timer:
   809                           	opt stack 0
   810  000003                     i1memcpy@s1:
   811                           	opt stack 0
   812  000003                     i1___awmod@divisor:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816  000003                     	ds	2
   817  000005                     i1___awmod@counter:
   818                           	opt stack 0
   819  000005                     i1memcpy@n:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x4
   823  000005                     	ds	1
   824  000006                     i1___awmod@sign:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x5
   828  000006                     	ds	1
   829  000007                     i1memcpy@d:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x6
   833  000007                     	ds	2
   834  000009                     i1memcpy@s:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x8
   838  000009                     	ds	2
   839  00000B                     i1send_msg@qptr:
   840                           	opt stack 0
   841  00000B                     i1recv_msg@qptr:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0xA
   845  00000B                     	ds	2
   846  00000D                     i1send_msg@length:
   847                           	opt stack 0
   848  00000D                     i1recv_msg@maxlength:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0xC
   852  00000D                     	ds	1
   853  00000E                     i1send_msg@msgtype:
   854                           	opt stack 0
   855  00000E                     i1recv_msg@msgtype:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0xD
   859  00000E                     	ds	1
   860  00000F                     i1send_msg@data:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0xE
   864  00000F                     	ds	1
   865  000010                     i1recv_msg@data:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0xF
   869  000010                     	ds	1
   870  000011                     ??i1_send_msg:
   871                           
   872                           ; 0 bytes @ 0x10
   873  000011                     	ds	1
   874  000012                     ??i1_recv_msg:
   875  000012                     i1send_msg@tlength:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x11
   879  000012                     	ds	2
   880  000014                     i1send_msg@slot:
   881                           	opt stack 0
   882  000014                     i1recv_msg@slot:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x13
   886  000014                     	ds	1
   887  000015                     i1send_msg@qmsg:
   888                           	opt stack 0
   889  000015                     i1recv_msg@tlength:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x14
   893  000015                     	ds	2
   894  000017                     ToMainLow_sendmsg@msgtype:
   895                           	opt stack 0
   896  000017                     i1recv_msg@qmsg:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x16
   900  000017                     	ds	1
   901  000018                     ToMainLow_sendmsg@data:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x17
   905  000018                     	ds	1
   906  000019                     FromMainLow_recvmsg@msgtype:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x18
   910  000019                     	ds	1
   911  00001A                     ToMainLow_sendmsg@length:
   912                           	opt stack 0
   913                           
   914                           ; 1 bytes @ 0x19
   915  00001A                     	ds	1
   916  00001B                     ??_uart_receive_interrupt_handler:
   917  00001B                     FromMainLow_recvmsg@data:
   918                           	opt stack 0
   919  00001B                     timer1_int_handler@result:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x1A
   923  00001B                     	ds	2
   924  00001D                     FromMainLow_recvmsg@maxlength:
   925                           	opt stack 0
   926  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   927                           	opt stack 0
   928                           
   929                           ; 14 bytes @ 0x1C
   930  00001D                     	ds	1
   931  00001E                     uart_transmit_interrupt_handler@data:
   932                           	opt stack 0
   933                           
   934                           ; 4 bytes @ 0x1D
   935  00001E                     	ds	4
   936  000022                     uart_transmit_interrupt_handler@msgtype:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x21
   940  000022                     	ds	1
   941  000023                     uart_transmit_interrupt_handler@message_status:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0x22
   945  000023                     	ds	8
   946  00002B                     uart_receive_interrupt_handler@status:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x2A
   950  00002B                     	ds	1
   951  00002C                     uart_receive_interrupt_handler@status_2014:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0x2B
   955  00002C                     	ds	1
   956  00002D                     uart_receive_interrupt_handler@bad_counter_id:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x2C
   960  00002D                     	ds	2
   961  00002F                     uart_receive_interrupt_handler@checksum:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x2E
   965  00002F                     	ds	1
   966  000030                     uart_receive_interrupt_handler@bad_start_id:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x2F
   970  000030                     	ds	1
   971  000031                     uart_receive_interrupt_handler@bad_end_id:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x30
   975  000031                     	ds	1
   976  000032                     uart_receive_interrupt_handler@bad_checksum_id:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x31
   980  000032                     	ds	1
   981  000033                     uart_receive_interrupt_handler@message_count:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x32
   985  000033                     	ds	1
   986  000034                     uart_receive_interrupt_handler@msg_id:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x33
   990  000034                     	ds	1
   991  000035                     uart_receive_interrupt_handler@i:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x34
   995  000035                     	ds	2
   996  000037                     ??_InterruptHandlerLow:
   997                           
   998                           ; 0 bytes @ 0x36
   999  000037                     	ds	17
  1000  000048                     InterruptHandlerLow@sendy_stuff:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x47
  1004  000048                     	ds	1
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           
  1012 ;;
  1013 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1014 ;;
  1015 ;; *************** function _main *****************
  1016 ;; Defined at:
  1017 ;;		line 189 in file "../src/main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  ic             38   64[BANK1 ] struct __i2c_comm
  1022 ;;  msgbuffer      15   38[BANK1 ] unsigned char [15]
  1023 ;;  motor_data     14   22[BANK1 ] unsigned char [14]
  1024 ;;  t1thread_dat    6   55[BANK1 ] struct __timer1_thread_s
  1025 ;;  t0thread_dat    2   53[BANK1 ] struct __timer0_thread_s
  1026 ;;  uthread_data    2    0        struct __uart_thread_str
  1027 ;;  msgtype         1   63[BANK1 ] unsigned char 
  1028 ;;  length          1   62[BANK1 ] char 
  1029 ;;  poop            1   61[BANK1 ] unsigned char 
  1030 ;;  need_sensor_    1   37[BANK1 ] unsigned char 
  1031 ;;  last_reg_rec    1   36[BANK1 ] unsigned char 
  1032 ;;  i               1    0        unsigned char 
  1033 ;;  c               1    0        unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;		None               void
  1036 ;; Registers used:
  1037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1043 ;;      Params:         0       0       0       0       0
  1044 ;;      Locals:         0       0      80       0       0
  1045 ;;      Temps:          0       0       0       0       0
  1046 ;;      Totals:         0       0      80       0       0
  1047 ;;Total ram usage:       80 bytes
  1048 ;; Hardware stack levels required when called:   15
  1049 ;; This function calls:
  1050 ;;		_FromMainHigh_sendmsg
  1051 ;;		_OpenTimer1
  1052 ;;		_ToMainHigh_recvmsg
  1053 ;;		_ToMainLow_recvmsg
  1054 ;;		_blip
  1055 ;;		_blip1
  1056 ;;		_blip2
  1057 ;;		_blip3
  1058 ;;		_debug_configure
  1059 ;;		_enable_interrupts
  1060 ;;		_i2c_configure_slave
  1061 ;;		_i_like_to_moveit_moveit
  1062 ;;		_init_i2c
  1063 ;;		_init_queues
  1064 ;;		_init_timer1_lthread
  1065 ;;		_timer0_lthread
  1066 ;;		_timer1_lthread
  1067 ;;		_uart_configure
  1068 ;; This function is called by:
  1069 ;;		Startup code after reset
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text0
  1074  000754                     __ptext0:
  1075                           	opt stack 0
  1076  000754                     _main:
  1077                           	opt stack 16
  1078                           
  1079                           ;main.c: 190: char c;
  1080                           ;main.c: 191: signed char length;
  1081                           ;main.c: 192: unsigned char msgtype;
  1082                           ;main.c: 193: unsigned char last_reg_recvd;
  1083                           ;main.c: 194: i2c_comm ic;
  1084                           ;main.c: 195: unsigned char msgbuffer[14 + 1];
  1085                           ;main.c: 196: unsigned char i;
  1086                           ;main.c: 197: uart_thread_struct uthread_data;
  1087                           ;main.c: 198: timer1_thread_struct t1thread_data;
  1088                           ;main.c: 199: timer0_thread_struct t0thread_data;
  1089                           ;main.c: 200: unsigned char need_sensor_data = 1;
  1090                           
  1091                           ;incstack = 0
  1092  000754  0E01               	movlw	1
  1093  000756  0101               	movlb	1	; () banked
  1094  000758  6F25               	movwf	main@need_sensor_data& (0+255),b
  1095                           
  1096                           ;main.c: 208: OSCCON = 0x82;
  1097  00075A  0E82               	movlw	130
  1098  00075C  6ED3               	movwf	4051,c	;volatile
  1099                           
  1100                           ; BSR set to: 1
  1101                           ;main.c: 209: OSCTUNEbits.PLLEN = 1;
  1102  00075E  8C9B               	bsf	3995,6,c	;volatile
  1103                           
  1104                           ; BSR set to: 1
  1105                           ;main.c: 239: init_i2c(&ic);
  1106  000760  0101               	movlb	1	; () banked
  1107  000762  0E01               	movlw	high main@ic
  1108  000764  0100               	movlb	0	; () banked
  1109  000766  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
  1110  000768  0101               	movlb	1	; () banked
  1111  00076A  0E40               	movlw	low main@ic
  1112  00076C  0100               	movlb	0	; () banked
  1113  00076E  6FB8               	movwf	init_i2c@ic& (0+255),b
  1114  000770  EC04  F00B         	call	_init_i2c	;wreg free
  1115                           
  1116                           ;main.c: 242: init_timer1_lthread(&t1thread_data);
  1117  000774  0101               	movlb	1	; () banked
  1118  000776  0E01               	movlw	high main@t1thread_data
  1119  000778  0100               	movlb	0	; () banked
  1120  00077A  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1121  00077C  0101               	movlb	1	; () banked
  1122  00077E  0E37               	movlw	low main@t1thread_data
  1123  000780  0100               	movlb	0	; () banked
  1124  000782  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1125  000784  EC3B  F00E         	call	_init_timer1_lthread	;wreg free
  1126                           
  1127                           ;main.c: 245: init_queues();
  1128  000788  ECFA  F00B         	call	_init_queues	;wreg free
  1129                           
  1130                           ;main.c: 249: TRISB = 0x0;
  1131  00078C  0E00               	movlw	0
  1132  00078E  6E93               	movwf	3987,c	;volatile
  1133                           
  1134                           ;main.c: 250: LATB = 0x0;
  1135  000790  0E00               	movlw	0
  1136  000792  6E8A               	movwf	3978,c	;volatile
  1137                           
  1138                           ;main.c: 267: INTCONbits.TMR0IE = 1;
  1139  000794  8AF2               	bsf	intcon,5,c	;volatile
  1140                           
  1141                           ;main.c: 268: TRISBbits.TRISB5 = 1;
  1142  000796  8A93               	bsf	3987,5,c	;volatile
  1143                           
  1144                           ;main.c: 269: T0CONbits.T08BIT = 1;
  1145  000798  8CD5               	bsf	4053,6,c	;volatile
  1146                           
  1147                           ;main.c: 270: T0CONbits.T0CS = 1;
  1148  00079A  8AD5               	bsf	4053,5,c	;volatile
  1149                           
  1150                           ;main.c: 271: T0CONbits.T0SE = 1;
  1151  00079C  88D5               	bsf	4053,4,c	;volatile
  1152                           
  1153                           ;main.c: 272: T0CONbits.PSA = 0;
  1154  00079E  96D5               	bcf	4053,3,c	;volatile
  1155                           
  1156                           ;main.c: 273: T0CONbits.T0PS = 0x1;
  1157  0007A0  50D5               	movf	4053,w,c	;volatile
  1158  0007A2  0BF8               	andlw	-8
  1159  0007A4  0901               	iorlw	1
  1160  0007A6  6ED5               	movwf	4053,c	;volatile
  1161                           
  1162                           ;main.c: 274: T0CONbits.TMR0ON = 1;
  1163  0007A8  8ED5               	bsf	4053,7,c	;volatile
  1164                           
  1165                           ;main.c: 286: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1166  0007AA  0EF5               	movlw	245
  1167  0007AC  EC54  F00D         	call	_OpenTimer1
  1168                           
  1169                           ;main.c: 299: IPR1bits.TMR1IP = 0;
  1170  0007B0  909F               	bcf	3999,0,c	;volatile
  1171                           
  1172                           ;main.c: 301: IPR1bits.RCIP = 0;
  1173  0007B2  9A9F               	bcf	3999,5,c	;volatile
  1174                           
  1175                           ;main.c: 304: IPR1bits.SSPIP = 1;
  1176  0007B4  869F               	bsf	3999,3,c	;volatile
  1177                           
  1178                           ;main.c: 307: INTCON2bits.TMR0IP = 0;
  1179  0007B6  94F1               	bcf	intcon2,2,c	;volatile
  1180                           
  1181                           ;main.c: 316: i2c_configure_slave(0x9C);
  1182  0007B8  0E9C               	movlw	156
  1183  0007BA  ECE1  F00D         	call	_i2c_configure_slave
  1184                           
  1185                           ;main.c: 331: PIE1bits.SSPIE = 1;
  1186  0007BE  869D               	bsf	3997,3,c	;volatile
  1187                           
  1188                           ;main.c: 335: IPR1bits.ADIP = 0;
  1189  0007C0  9C9F               	bcf	3999,6,c	;volatile
  1190                           
  1191                           ;main.c: 336: PIE1bits.ADIE = 1;
  1192  0007C2  8C9D               	bsf	3997,6,c	;volatile
  1193                           
  1194                           ;main.c: 360: debug_configure();
  1195  0007C4  EC75  F00E         	call	_debug_configure	;wreg free
  1196                           
  1197                           ;main.c: 361: blip();
  1198  0007C8  EC8A  F00E         	call	_blip	;wreg free
  1199                           
  1200                           ;main.c: 362: blip1();
  1201  0007CC  EC86  F00E         	call	_blip1	;wreg free
  1202                           
  1203                           ;main.c: 363: blip2();
  1204  0007D0  EC82  F00E         	call	_blip2	;wreg free
  1205                           
  1206                           ;main.c: 364: blip3();
  1207  0007D4  EC7E  F00E         	call	_blip3	;wreg free
  1208                           
  1209                           ;main.c: 373: enable_interrupts();
  1210  0007D8  EC7A  F00E         	call	_enable_interrupts	;wreg free
  1211                           
  1212                           ;main.c: 386: uart_configure();
  1213  0007DC  EC1B  F00E         	call	_uart_configure	;wreg free
  1214                           
  1215                           ;main.c: 404: unsigned char motor_data[14];
  1216                           ;main.c: 406: unsigned char poop;
  1217                           ;main.c: 407: for(poop=1;poop<14;poop++)
  1218  0007E0  0E01               	movlw	1
  1219  0007E2  0101               	movlb	1	; () banked
  1220  0007E4  6F3D               	movwf	main@poop& (0+255),b
  1221  0007E6  D00F               	goto	L2
  1222  0007E8                     l4188:
  1223                           
  1224                           ; BSR set to: 1
  1225                           ;main.c: 408: {
  1226                           ;main.c: 409: motor_data[poop]=0x44;
  1227  0007E8  0101               	movlb	1	; () banked
  1228  0007EA  513D               	movf	main@poop& (0+255),w,b
  1229  0007EC  0D01               	mullw	1
  1230  0007EE  0101               	movlb	1	; () banked
  1231  0007F0  0E16               	movlw	low main@motor_data
  1232  0007F2  24F3               	addwf	prodl,w,c
  1233  0007F4  6ED9               	movwf	fsr2l,c
  1234  0007F6  0101               	movlb	1	; () banked
  1235  0007F8  0E01               	movlw	high main@motor_data
  1236  0007FA  20F4               	addwfc	prodh,w,c
  1237  0007FC  6EDA               	movwf	fsr2h,c
  1238  0007FE  0E44               	movlw	68
  1239  000800  6EDF               	movwf	indf2,c
  1240                           
  1241                           ; BSR set to: 1
  1242  000802  0101               	movlb	1	; () banked
  1243  000804  2B3D               	incf	main@poop& (0+255),f,b
  1244  000806                     L2:
  1245                           
  1246                           ; BSR set to: 1
  1247  000806  0E0D               	movlw	13
  1248  000808  0101               	movlb	1	; () banked
  1249  00080A  653D               	cpfsgt	main@poop& (0+255),b
  1250  00080C  D7ED               	goto	l4188
  1251  00080E                     l4194:
  1252                           
  1253                           ;main.c: 426: motor_data[0] = 0x07;
  1254  00080E  0E07               	movlw	7
  1255  000810  0101               	movlb	1	; () banked
  1256  000812  6F16               	movwf	main@motor_data& (0+255),b
  1257                           
  1258                           ; BSR set to: 1
  1259                           ;main.c: 435: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1260  000814  0101               	movlb	1	; () banked
  1261  000816  0E01               	movlw	high main@msgtype
  1262  000818  0101               	movlb	1	; () banked
  1263  00081A  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1264  00081C  0101               	movlb	1	; () banked
  1265  00081E  0E3F               	movlw	low main@msgtype
  1266  000820  0101               	movlb	1	; () banked
  1267  000822  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1268  000824  0101               	movlb	1	; () banked
  1269  000826  0E01               	movlw	high main@msgbuffer
  1270  000828  0101               	movlb	1	; () banked
  1271  00082A  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1272  00082C  0101               	movlb	1	; () banked
  1273  00082E  0E26               	movlw	low main@msgbuffer
  1274  000830  0101               	movlb	1	; () banked
  1275  000832  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1276  000834  0E0E               	movlw	14
  1277  000836  EC1E  F00D         	call	_ToMainHigh_recvmsg
  1278  00083A  0101               	movlb	1	; () banked
  1279  00083C  6F3E               	movwf	main@length& (0+255),b
  1280                           
  1281                           ; BSR set to: 1
  1282                           ;main.c: 436: if (length < 0) {
  1283  00083E  0101               	movlb	1	; () banked
  1284  000840  BF3E               	btfsc	main@length& (0+255),7,b
  1285  000842  D050               	goto	l4216
  1286  000844  D041               	goto	l4214
  1287  000846                     l4202:
  1288                           
  1289                           ; BSR set to: 1
  1290                           ;main.c: 446: {
  1291                           ;main.c: 447: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1292  000846  0101               	movlb	1	; () banked
  1293  000848  0E01               	movlw	high main@t0thread_data
  1294  00084A  0100               	movlb	0	; () banked
  1295  00084C  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1296  00084E  0101               	movlb	1	; () banked
  1297  000850  0E35               	movlw	low main@t0thread_data
  1298  000852  0100               	movlb	0	; () banked
  1299  000854  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1300  000856  0101               	movlb	1	; () banked
  1301  000858  0100               	movlb	0	; () banked
  1302  00085A  C13F  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1303  00085E  0100               	movlb	0	; () banked
  1304  000860  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1305  000862  0101               	movlb	1	; () banked
  1306  000864  513E               	movf	main@length& (0+255),w,b
  1307  000866  0100               	movlb	0	; () banked
  1308  000868  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1309  00086A  0100               	movlb	0	; () banked
  1310  00086C  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1311  00086E  0100               	movlb	0	; () banked
  1312  000870  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1313  000872  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1314  000874  0101               	movlb	1	; () banked
  1315  000876  0E01               	movlw	high main@msgbuffer
  1316  000878  0100               	movlb	0	; () banked
  1317  00087A  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1318  00087C  0101               	movlb	1	; () banked
  1319  00087E  0E26               	movlw	low main@msgbuffer
  1320  000880  0100               	movlb	0	; () banked
  1321  000882  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1322  000884  EC67  F00E         	call	_timer0_lthread	;wreg free
  1323                           
  1324                           ;main.c: 448: break;
  1325  000888  D02D               	goto	l4216
  1326  00088A                     l4204:
  1327                           
  1328                           ;main.c: 455: {
  1329                           ;main.c: 456: i_like_to_moveit_moveit( (signed char)msgbuffer[1] , (signed char)msgbuffe
      +                          r[2] );
  1330  00088A  C128  F110         	movff	main@msgbuffer+2,i_like_to_moveit_moveit@right_side_speed
  1331  00088E  0101               	movlb	1	; () banked
  1332  000890  5127               	movf	(main@msgbuffer+1)& (0+255),w,b
  1333  000892  ECE2  F009         	call	_i_like_to_moveit_moveit
  1334                           
  1335                           ;main.c: 458: break;
  1336  000896  D005               	goto	l140
  1337  000898                     l4208:
  1338  000898  0101               	movlb	1	; () banked
  1339  00089A  5126               	movf	main@msgbuffer& (0+255),w,b
  1340                           
  1341                           ; Switch size 1, requested type "space"
  1342                           ; Number of cases is 1, Range of values is 1 to 1
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte            4     3 (average)
  1346                           ;	Chosen strategy is simple_byte
  1347  00089C  0A01               	xorlw	1	; case 1
  1348  00089E  B4D8               	btfsc	status,2,c
  1349  0008A0  D7F4               	goto	l4204
  1350  0008A2                     l140:
  1351                           
  1352                           ;main.c: 468: {
  1353                           ;main.c: 471: last_reg_recvd = msgbuffer[0];
  1354  0008A2  C126  F124         	movff	main@msgbuffer,main@last_reg_recvd
  1355                           
  1356                           ;main.c: 472: break;
  1357  0008A6  D01E               	goto	l4216
  1358  0008A8                     l141:
  1359                           
  1360                           ; BSR set to: 1
  1361                           ;main.c: 475: {
  1362                           ;main.c: 477: PIR1bits.ADIF = 1;
  1363  0008A8  8C9E               	bsf	3998,6,c	;volatile
  1364                           
  1365                           ; BSR set to: 1
  1366                           ;main.c: 479: FromMainHigh_sendmsg(14,40,(void *) motor_data );
  1367  0008AA  0E28               	movlw	40
  1368  0008AC  0101               	movlb	1	; () banked
  1369  0008AE  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1370  0008B0  0101               	movlb	1	; () banked
  1371  0008B2  0E01               	movlw	high main@motor_data
  1372  0008B4  0101               	movlb	1	; () banked
  1373  0008B6  6F0D               	movwf	(FromMainHigh_sendmsg@data+1)& (0+255),b
  1374  0008B8  0101               	movlb	1	; () banked
  1375  0008BA  0E16               	movlw	low main@motor_data
  1376  0008BC  0101               	movlb	1	; () banked
  1377  0008BE  6F0C               	movwf	FromMainHigh_sendmsg@data& (0+255),b
  1378  0008C0  0E0E               	movlw	14
  1379  0008C2  EC86  F00D         	call	_FromMainHigh_sendmsg
  1380                           
  1381                           ;main.c: 481: break;
  1382  0008C6  D00E               	goto	l4216
  1383  0008C8                     l4214:
  1384  0008C8  0101               	movlb	1	; () banked
  1385  0008CA  513F               	movf	main@msgtype& (0+255),w,b
  1386                           
  1387                           ; Switch size 1, requested type "space"
  1388                           ; Number of cases is 4, Range of values is 10 to 42
  1389                           ; switch strategies available:
  1390                           ; Name         Instructions Cycles
  1391                           ; simple_byte           13     7 (average)
  1392                           ;	Chosen strategy is simple_byte
  1393  0008CC  0A0A               	xorlw	10	; case 10
  1394  0008CE  B4D8               	btfsc	status,2,c
  1395  0008D0  D7BA               	goto	l4202
  1396  0008D2  0A22               	xorlw	34	; case 40
  1397  0008D4  B4D8               	btfsc	status,2,c
  1398  0008D6  D7E0               	goto	l4208
  1399  0008D8  0A01               	xorlw	1	; case 41
  1400  0008DA  B4D8               	btfsc	status,2,c
  1401  0008DC  D7E2               	goto	l140
  1402  0008DE  0A03               	xorlw	3	; case 42
  1403  0008E0  B4D8               	btfsc	status,2,c
  1404  0008E2  D7E2               	goto	l141
  1405  0008E4                     l4216:
  1406                           
  1407                           ;main.c: 489: }
  1408                           ;main.c: 492: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1409  0008E4  0101               	movlb	1	; () banked
  1410  0008E6  0E01               	movlw	high main@msgtype
  1411  0008E8  0101               	movlb	1	; () banked
  1412  0008EA  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1413  0008EC  0101               	movlb	1	; () banked
  1414  0008EE  0E3F               	movlw	low main@msgtype
  1415  0008F0  0101               	movlb	1	; () banked
  1416  0008F2  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1417  0008F4  0101               	movlb	1	; () banked
  1418  0008F6  0E01               	movlw	high main@msgbuffer
  1419  0008F8  0101               	movlb	1	; () banked
  1420  0008FA  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1421  0008FC  0101               	movlb	1	; () banked
  1422  0008FE  0E26               	movlw	low main@msgbuffer
  1423  000900  0101               	movlb	1	; () banked
  1424  000902  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1425  000904  0E0E               	movlw	14
  1426  000906  EC03  F00D         	call	_ToMainLow_recvmsg
  1427  00090A  0101               	movlb	1	; () banked
  1428  00090C  6F3E               	movwf	main@length& (0+255),b
  1429                           
  1430                           ; BSR set to: 1
  1431                           ;main.c: 493: if (length < 0) {
  1432  00090E  0101               	movlb	1	; () banked
  1433  000910  BF3E               	btfsc	main@length& (0+255),7,b
  1434  000912  D77D               	goto	l4194
  1435  000914  D029               	goto	l4234
  1436  000916                     l4222:
  1437                           
  1438                           ; BSR set to: 1
  1439                           ;main.c: 512: {
  1440                           ;main.c: 513: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1441  000916  0101               	movlb	1	; () banked
  1442  000918  0E01               	movlw	high main@t1thread_data
  1443  00091A  0101               	movlb	1	; () banked
  1444  00091C  6F0F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1445  00091E  0101               	movlb	1	; () banked
  1446  000920  0E37               	movlw	low main@t1thread_data
  1447  000922  0101               	movlb	1	; () banked
  1448  000924  6F0E               	movwf	timer1_lthread@tptr& (0+255),b
  1449  000926  0101               	movlb	1	; () banked
  1450  000928  C13F  F110         	movff	main@msgtype,timer1_lthread@msgtype
  1451  00092C  0101               	movlb	1	; () banked
  1452  00092E  6B11               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1453  000930  0101               	movlb	1	; () banked
  1454  000932  513E               	movf	main@length& (0+255),w,b
  1455  000934  0101               	movlb	1	; () banked
  1456  000936  6F12               	movwf	timer1_lthread@length& (0+255),b
  1457  000938  0101               	movlb	1	; () banked
  1458  00093A  6B13               	clrf	(timer1_lthread@length+1)& (0+255),b
  1459  00093C  0101               	movlb	1	; () banked
  1460  00093E  BF12               	btfsc	timer1_lthread@length& (0+255),7,b
  1461  000940  0713               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1462  000942  0101               	movlb	1	; () banked
  1463  000944  0E01               	movlw	high main@msgbuffer
  1464  000946  0101               	movlb	1	; () banked
  1465  000948  6F15               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1466  00094A  0101               	movlb	1	; () banked
  1467  00094C  0E26               	movlw	low main@msgbuffer
  1468  00094E  0101               	movlb	1	; () banked
  1469  000950  6F14               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1470  000952  EC69  F00B         	call	_timer1_lthread	;wreg free
  1471                           
  1472                           ;main.c: 514: break;
  1473  000956  D75B               	goto	l4194
  1474  000958                     l4226:
  1475                           
  1476                           ;main.c: 584: {
  1477                           ;main.c: 585: if(msgbuffer[0] != 0)
  1478  000958  0101               	movlb	1	; () banked
  1479  00095A  5126               	movf	main@msgbuffer& (0+255),w,b
  1480  00095C  A4D8               	btfss	status,2,c
  1481                           
  1482                           ; BSR set to: 1
  1483                           ;main.c: 586: blip();
  1484  00095E  EC8A  F00E         	call	_blip	;wreg free
  1485                           
  1486                           ;main.c: 588: motor_data[14-1] = msgbuffer[0];
  1487  000962  C126  F123         	movff	main@msgbuffer,main@motor_data+13
  1488                           
  1489                           ;main.c: 589: break;
  1490  000966  D753               	goto	l4194
  1491  000968                     l4234:
  1492  000968  0101               	movlb	1	; () banked
  1493  00096A  513F               	movf	main@msgtype& (0+255),w,b
  1494                           
  1495                           ; Switch size 1, requested type "space"
  1496                           ; Number of cases is 9, Range of values is 11 to 47
  1497                           ; switch strategies available:
  1498                           ; Name         Instructions Cycles
  1499                           ; simple_byte           28    15 (average)
  1500                           ;	Chosen strategy is simple_byte
  1501  00096C  0A0B               	xorlw	11	; case 11
  1502  00096E  B4D8               	btfsc	status,2,c
  1503  000970  D7D2               	goto	l4222
  1504  000972  0A15               	xorlw	21	; case 30
  1505  000974  B4D8               	btfsc	status,2,c
  1506  000976  D74B               	goto	l4194
  1507  000978  0A01               	xorlw	1	; case 31
  1508  00097A  B4D8               	btfsc	status,2,c
  1509  00097C  D748               	goto	l4194
  1510  00097E  0A3F               	xorlw	63	; case 32
  1511  000980  B4D8               	btfsc	status,2,c
  1512  000982  D745               	goto	l4194
  1513  000984  0A01               	xorlw	1	; case 33
  1514  000986  B4D8               	btfsc	status,2,c
  1515  000988  D742               	goto	l4194
  1516  00098A  0A03               	xorlw	3	; case 34
  1517  00098C  B4D8               	btfsc	status,2,c
  1518  00098E  D73F               	goto	l4194
  1519  000990  0A01               	xorlw	1	; case 35
  1520  000992  B4D8               	btfsc	status,2,c
  1521  000994  D73C               	goto	l4194
  1522  000996  0A07               	xorlw	7	; case 36
  1523  000998  B4D8               	btfsc	status,2,c
  1524  00099A  D739               	goto	l4194
  1525  00099C  0A0B               	xorlw	11	; case 47
  1526  00099E  B4D8               	btfsc	status,2,c
  1527  0009A0  D7DB               	goto	l4226
  1528  0009A2  D735               	goto	l4194
  1529  0009A4                     __end_of_main:
  1530                           	opt stack 0
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           prodh	equ	0xFF4
  1536                           prodl	equ	0xFF3
  1537                           intcon	equ	0xFF2
  1538                           intcon2	equ	0xFF1
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           indf2	equ	0xFDF
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _uart_configure *****************
  1547 ;; Defined at:
  1548 ;;		line 22 in file "../src/my_uart.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg, status,2
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1562 ;;      Params:         0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0
  1565 ;;      Totals:         0       0       0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:   10
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text1
  1577  001C36                     __ptext1:
  1578                           	opt stack 0
  1579  001C36                     _uart_configure:
  1580                           	opt stack 20
  1581                           
  1582                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1583                           
  1584                           ; BSR set to: 1
  1585                           ;incstack = 0
  1586  001C36  8E94               	bsf	3988,7,c	;volatile
  1587                           
  1588                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1589  001C38  9C94               	bcf	3988,6,c	;volatile
  1590                           
  1591                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1592  001C3A  86B8               	bsf	4024,3,c	;volatile
  1593                           
  1594                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1595  001C3C  84AC               	bsf	4012,2,c	;volatile
  1596                           
  1597                           ;my_uart.c: 36: SPBRGH = 0x04;
  1598  001C3E  0E04               	movlw	4
  1599  001C40  6EB0               	movwf	4016,c	;volatile
  1600                           
  1601                           ;my_uart.c: 37: SPBRG = 0xe1;
  1602  001C42  0EE1               	movlw	225
  1603  001C44  6EAF               	movwf	4015,c	;volatile
  1604                           
  1605                           ;my_uart.c: 41: TXSTA1bits.SYNC = 0;
  1606  001C46  98AC               	bcf	4012,4,c	;volatile
  1607                           
  1608                           ;my_uart.c: 42: RCSTA1bits.SPEN = 1;
  1609  001C48  8EAB               	bsf	4011,7,c	;volatile
  1610                           
  1611                           ;my_uart.c: 45: IPR1bits.TX1IP = 0;
  1612  001C4A  989F               	bcf	3999,4,c	;volatile
  1613                           
  1614                           ;my_uart.c: 47: PIE1bits.TX1IE = 0;
  1615  001C4C  989D               	bcf	3997,4,c	;volatile
  1616                           
  1617                           ;my_uart.c: 48: PIE1bits.RC1IE = 1;
  1618  001C4E  8A9D               	bsf	3997,5,c	;volatile
  1619                           
  1620                           ;my_uart.c: 50: TXSTA1bits.TXEN = 1;
  1621  001C50  8AAC               	bsf	4012,5,c	;volatile
  1622                           
  1623                           ;my_uart.c: 51: RCSTA1bits.CREN = 1;
  1624  001C52  88AB               	bsf	4011,4,c	;volatile
  1625  001C54  0012               	return	
  1626  001C56                     __end_of_uart_configure:
  1627                           	opt stack 0
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           prodh	equ	0xFF4
  1633                           prodl	equ	0xFF3
  1634                           intcon	equ	0xFF2
  1635                           intcon2	equ	0xFF1
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           indf2	equ	0xFDF
  1639                           fsr2h	equ	0xFDA
  1640                           fsr2l	equ	0xFD9
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function _timer1_lthread *****************
  1644 ;; Defined at:
  1645 ;;		line 15 in file "../src/timer1_thread.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1648 ;;		 -> main@t1thread_data(6), 
  1649 ;;  msgtype         2   16[BANK1 ] int 
  1650 ;;  length          2   18[BANK1 ] int 
  1651 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1652 ;;		 -> main@msgbuffer(15), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  retval          1   68[BANK0 ] char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2   14[BANK1 ] int 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1664 ;;      Params:         0       0       8       0       0
  1665 ;;      Locals:         0       1       0       0       0
  1666 ;;      Temps:          0       0       0       0       0
  1667 ;;      Totals:         0       1       8       0       0
  1668 ;;Total ram usage:        9 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:   13
  1671 ;; This function calls:
  1672 ;;		_FromMainHigh_sendmsg
  1673 ;;		___lwmod
  1674 ;;		_blink0
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text2
  1681  0016D2                     __ptext2:
  1682                           	opt stack 0
  1683  0016D2                     _timer1_lthread:
  1684                           	opt stack 17
  1685                           
  1686                           ;timer1_thread.c: 16: signed char retval;
  1687                           ;timer1_thread.c: 18: blink0();
  1688                           
  1689                           ;incstack = 0
  1690  0016D2  EC9D  F00E         	call	_blink0	;wreg free
  1691                           
  1692                           ;timer1_thread.c: 22: tptr->msgcount++;
  1693  0016D6  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1694  0016DA  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1695  0016DE  2ADE               	incf	postinc2,f,c
  1696  0016E0  0E00               	movlw	0
  1697  0016E2  22DD               	addwfc	postdec2,f,c
  1698                           
  1699                           ;timer1_thread.c: 25: if ((tptr->msgcount % 10) == 9) {
  1700  0016E4  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1701  0016E8  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1702  0016EC  0100               	movlb	0	; () banked
  1703  0016EE  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1704  0016F2  0100               	movlb	0	; () banked
  1705  0016F4  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1706  0016F8  0E00               	movlw	0
  1707  0016FA  0100               	movlb	0	; () banked
  1708  0016FC  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1709  0016FE  0E0A               	movlw	10
  1710  001700  0100               	movlb	0	; () banked
  1711  001702  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1712  001704  EC9A  F00B         	call	___lwmod	;wreg free
  1713  001708  0100               	movlb	0	; () banked
  1714  00170A  51B8               	movf	?___lwmod& (0+255),w,b
  1715  00170C  0A09               	xorlw	9
  1716  00170E  0100               	movlb	0	; () banked
  1717  001710  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1718  001712  A4D8               	btfss	status,2,c
  1719  001714  0012               	return	
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;timer1_thread.c: 26: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1723  001716  0E14               	movlw	20
  1724  001718  0101               	movlb	1	; () banked
  1725  00171A  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1726  00171C  0101               	movlb	1	; () banked
  1727  00171E  C10F  F10D         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1728  001722  0101               	movlb	1	; () banked
  1729  001724  C10E  F10C         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1730  001728  0E02               	movlw	2
  1731  00172A  EC86  F00D         	call	_FromMainHigh_sendmsg
  1732  00172E  0100               	movlb	0	; () banked
  1733  001730  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1734  001732  0012               	return	
  1735  001734                     __end_of_timer1_lthread:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           prodh	equ	0xFF4
  1742                           prodl	equ	0xFF3
  1743                           intcon	equ	0xFF2
  1744                           intcon2	equ	0xFF1
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           indf2	equ	0xFDF
  1748                           postinc2	equ	0xFDE
  1749                           postdec2	equ	0xFDD
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _blink0 *****************
  1755 ;; Defined at:
  1756 ;;		line 46 in file "../src/debug.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;		None               void
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:   10
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_timer1_lthread
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text3
  1785  001D3A                     __ptext3:
  1786                           	opt stack 0
  1787  001D3A                     _blink0:
  1788                           	opt stack 19
  1789                           
  1790                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;incstack = 0
  1794  001D3A  708A               	btg	3978,0,c	;volatile
  1795  001D3C  0012               	return	
  1796  001D3E                     __end_of_blink0:
  1797                           	opt stack 0
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           prodh	equ	0xFF4
  1803                           prodl	equ	0xFF3
  1804                           intcon	equ	0xFF2
  1805                           intcon2	equ	0xFF1
  1806                           postinc0	equ	0xFEE
  1807                           wreg	equ	0xFE8
  1808                           indf2	equ	0xFDF
  1809                           postinc2	equ	0xFDE
  1810                           postdec2	equ	0xFDD
  1811                           fsr2h	equ	0xFDA
  1812                           fsr2l	equ	0xFD9
  1813                           status	equ	0xFD8
  1814                           
  1815 ;; *************** function ___lwmod *****************
  1816 ;; Defined at:
  1817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  dividend        2   56[BANK0 ] unsigned int 
  1820 ;;  divisor         2   58[BANK0 ] unsigned int 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  counter         1   60[BANK0 ] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2   56[BANK0 ] unsigned int 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1832 ;;      Params:         0       4       0       0       0
  1833 ;;      Locals:         0       1       0       0       0
  1834 ;;      Temps:          0       0       0       0       0
  1835 ;;      Totals:         0       5       0       0       0
  1836 ;;Total ram usage:        5 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:   10
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_timer1_lthread
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text4
  1847  001734                     __ptext4:
  1848                           	opt stack 0
  1849  001734                     ___lwmod:
  1850                           	opt stack 19
  1851                           
  1852                           ;incstack = 0
  1853  001734  0100               	movlb	0	; () banked
  1854  001736  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1855  001738  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  1856  00173A  B4D8               	btfsc	status,2,c
  1857  00173C  D026               	goto	l1117
  1858                           
  1859                           ; BSR set to: 0
  1860  00173E  0E01               	movlw	1
  1861  001740  0100               	movlb	0	; () banked
  1862  001742  6FBC               	movwf	___lwmod@counter& (0+255),b
  1863  001744  D006               	goto	l3696
  1864  001746                     l3694:
  1865                           
  1866                           ; BSR set to: 0
  1867  001746  0100               	movlb	0	; () banked
  1868  001748  90D8               	bcf	status,0,c
  1869  00174A  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  1870  00174C  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1871  00174E  0100               	movlb	0	; () banked
  1872  001750  2BBC               	incf	___lwmod@counter& (0+255),f,b
  1873  001752                     l3696:
  1874                           
  1875                           ; BSR set to: 0
  1876  001752  0100               	movlb	0	; () banked
  1877  001754  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1878  001756  D7F7               	goto	l3694
  1879  001758                     l3698:
  1880                           
  1881                           ; BSR set to: 0
  1882  001758  0100               	movlb	0	; () banked
  1883  00175A  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1884  00175C  0100               	movlb	0	; () banked
  1885  00175E  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  1886  001760  0100               	movlb	0	; () banked
  1887  001762  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1888  001764  0100               	movlb	0	; () banked
  1889  001766  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1890  001768  A0D8               	btfss	status,0,c
  1891  00176A  D008               	goto	l3702
  1892                           
  1893                           ; BSR set to: 0
  1894  00176C  0100               	movlb	0	; () banked
  1895  00176E  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1896  001770  0100               	movlb	0	; () banked
  1897  001772  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  1898  001774  0100               	movlb	0	; () banked
  1899  001776  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1900  001778  0100               	movlb	0	; () banked
  1901  00177A  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1902  00177C                     l3702:
  1903                           
  1904                           ; BSR set to: 0
  1905  00177C  0100               	movlb	0	; () banked
  1906  00177E  90D8               	bcf	status,0,c
  1907  001780  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1908  001782  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  1909                           
  1910                           ; BSR set to: 0
  1911  001784  0100               	movlb	0	; () banked
  1912  001786  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  1913  001788  D7E7               	goto	l3698
  1914  00178A                     l1117:
  1915                           
  1916                           ; BSR set to: 0
  1917  00178A  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  1918  00178E  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  1919                           
  1920                           ; BSR set to: 0
  1921  001792  0012               	return	
  1922  001794                     __end_of___lwmod:
  1923                           	opt stack 0
  1924                           tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           prodh	equ	0xFF4
  1929                           prodl	equ	0xFF3
  1930                           intcon	equ	0xFF2
  1931                           intcon2	equ	0xFF1
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           indf2	equ	0xFDF
  1935                           postinc2	equ	0xFDE
  1936                           postdec2	equ	0xFDD
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _FromMainHigh_sendmsg *****************
  1942 ;; Defined at:
  1943 ;;		line 174 in file "../src/messages.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  length          1    wreg     unsigned char 
  1946 ;;  msgtype         1   11[BANK1 ] unsigned char 
  1947 ;;  data            2   12[BANK1 ] PTR void 
  1948 ;;		 -> main@motor_data(14), main@t1thread_data(6), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  length          1   67[BANK0 ] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      char 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1960 ;;      Params:         0       0       3       0       0
  1961 ;;      Locals:         0       1       0       0       0
  1962 ;;      Temps:          0       0       0       0       0
  1963 ;;      Totals:         0       1       3       0       0
  1964 ;;Total ram usage:        4 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:   12
  1967 ;; This function calls:
  1968 ;;		_send_msg
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;;		_timer1_lthread
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text5
  1976  001B0C                     __ptext5:
  1977                           	opt stack 0
  1978  001B0C                     _FromMainHigh_sendmsg:
  1979                           	opt stack 17
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;incstack = 0
  1983                           ;FromMainHigh_sendmsg@length stored from wreg
  1984  001B0C  0100               	movlb	0	; () banked
  1985  001B0E  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1989  001B10  0103               	movlb	3	; () banked
  1990  001B12  0E03               	movlw	high _FromMainHigh_MQ
  1991  001B14  0101               	movlb	1	; () banked
  1992  001B16  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  1993  001B18  0103               	movlb	3	; () banked
  1994  001B1A  0E00               	movlw	low _FromMainHigh_MQ
  1995  001B1C  0101               	movlb	1	; () banked
  1996  001B1E  6F00               	movwf	send_msg@qptr& (0+255),b
  1997  001B20  C0C3  F102         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1998  001B24  C10B  F103         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1999  001B28  0101               	movlb	1	; () banked
  2000  001B2A  C10D  F105         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2001  001B2E  0101               	movlb	1	; () banked
  2002  001B30  C10C  F104         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2003  001B34  ECD7  F006         	call	_send_msg	;wreg free
  2004  001B38  0012               	return	
  2005  001B3A                     __end_of_FromMainHigh_sendmsg:
  2006                           	opt stack 0
  2007                           tblptru	equ	0xFF8
  2008                           tblptrh	equ	0xFF7
  2009                           tblptrl	equ	0xFF6
  2010                           tablat	equ	0xFF5
  2011                           prodh	equ	0xFF4
  2012                           prodl	equ	0xFF3
  2013                           intcon	equ	0xFF2
  2014                           intcon2	equ	0xFF1
  2015                           postinc0	equ	0xFEE
  2016                           wreg	equ	0xFE8
  2017                           indf2	equ	0xFDF
  2018                           postinc2	equ	0xFDE
  2019                           postdec2	equ	0xFDD
  2020                           fsr2h	equ	0xFDA
  2021                           fsr2l	equ	0xFD9
  2022                           status	equ	0xFD8
  2023                           
  2024 ;; *************** function _timer0_lthread *****************
  2025 ;; Defined at:
  2026 ;;		line 9 in file "../src/timer0_thread.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2029 ;;		 -> main@t0thread_data(2), 
  2030 ;;  msgtype         2   58[BANK0 ] int 
  2031 ;;  length          2   60[BANK0 ] int 
  2032 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2033 ;;		 -> main@msgbuffer(15), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  2036 ;;		 -> main@msgbuffer(15), 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2   56[BANK0 ] int 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2046 ;;      Params:         0       8       0       0       0
  2047 ;;      Locals:         0       2       0       0       0
  2048 ;;      Temps:          0       0       0       0       0
  2049 ;;      Totals:         0      10       0       0       0
  2050 ;;Total ram usage:       10 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:   10
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text6
  2061  001CCE                     __ptext6:
  2062                           	opt stack 0
  2063  001CCE                     _timer0_lthread:
  2064                           	opt stack 20
  2065                           
  2066                           ;timer0_thread.c: 10: unsigned int *msgval;
  2067                           ;timer0_thread.c: 14: msgval = (unsigned int *) msgbuffer;
  2068                           
  2069                           ;incstack = 0
  2070  001CCE  0100               	movlb	0	; () banked
  2071  001CD0  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2072  001CD4  0100               	movlb	0	; () banked
  2073  001CD6  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2074                           
  2075                           ; BSR set to: 0
  2076  001CDA  0012               	return	
  2077  001CDC                     __end_of_timer0_lthread:
  2078                           	opt stack 0
  2079                           tblptru	equ	0xFF8
  2080                           tblptrh	equ	0xFF7
  2081                           tblptrl	equ	0xFF6
  2082                           tablat	equ	0xFF5
  2083                           prodh	equ	0xFF4
  2084                           prodl	equ	0xFF3
  2085                           intcon	equ	0xFF2
  2086                           intcon2	equ	0xFF1
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           indf2	equ	0xFDF
  2090                           postinc2	equ	0xFDE
  2091                           postdec2	equ	0xFDD
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _init_timer1_lthread *****************
  2097 ;; Defined at:
  2098 ;;		line 7 in file "../src/timer1_thread.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2101 ;;		 -> main@t1thread_data(6), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;		None               void
  2106 ;; Registers used:
  2107 ;;		wreg, fsr2l, fsr2h
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2113 ;;      Params:         0       2       0       0       0
  2114 ;;      Locals:         0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0
  2116 ;;      Totals:         0       2       0       0       0
  2117 ;;Total ram usage:        2 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:   10
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text7
  2128  001C76                     __ptext7:
  2129                           	opt stack 0
  2130  001C76                     _init_timer1_lthread:
  2131                           	opt stack 20
  2132                           
  2133                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;incstack = 0
  2137  001C76  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2138  001C7A  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2139  001C7E  0E00               	movlw	0
  2140  001C80  6EDE               	movwf	postinc2,c
  2141  001C82  0E00               	movlw	0
  2142  001C84  6EDD               	movwf	postdec2,c
  2143  001C86  0012               	return	
  2144  001C88                     __end_of_init_timer1_lthread:
  2145                           	opt stack 0
  2146                           tblptru	equ	0xFF8
  2147                           tblptrh	equ	0xFF7
  2148                           tblptrl	equ	0xFF6
  2149                           tablat	equ	0xFF5
  2150                           prodh	equ	0xFF4
  2151                           prodl	equ	0xFF3
  2152                           intcon	equ	0xFF2
  2153                           intcon2	equ	0xFF1
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           indf2	equ	0xFDF
  2157                           postinc2	equ	0xFDE
  2158                           postdec2	equ	0xFDD
  2159                           fsr2h	equ	0xFDA
  2160                           fsr2l	equ	0xFD9
  2161                           status	equ	0xFD8
  2162                           
  2163 ;; *************** function _init_queues *****************
  2164 ;; Defined at:
  2165 ;;		line 194 in file "../src/messages.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;		None               void
  2172 ;; Registers used:
  2173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2179 ;;      Params:         0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0
  2182 ;;      Totals:         0       0       0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:   11
  2186 ;; This function calls:
  2187 ;;		_init_queue
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text8
  2194  0017F4                     __ptext8:
  2195                           	opt stack 0
  2196  0017F4                     _init_queues:
  2197                           	opt stack 19
  2198                           
  2199                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2200                           
  2201                           ;incstack = 0
  2202  0017F4  0E00               	movlw	0
  2203  0017F6  0100               	movlb	0	; () banked
  2204  0017F8  6FC7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2208  0017FA  0101               	movlb	1	; () banked
  2209  0017FC  0E01               	movlw	high _ToMainLow_MQ
  2210  0017FE  0100               	movlb	0	; () banked
  2211  001800  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2212  001802  0101               	movlb	1	; () banked
  2213  001804  0E66               	movlw	low _ToMainLow_MQ
  2214  001806  0100               	movlb	0	; () banked
  2215  001808  6FB8               	movwf	init_queue@qptr& (0+255),b
  2216  00180A  EC37  F00B         	call	_init_queue	;wreg free
  2217                           
  2218                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2219  00180E  0102               	movlb	2	; () banked
  2220  001810  0E02               	movlw	high _ToMainHigh_MQ
  2221  001812  0100               	movlb	0	; () banked
  2222  001814  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2223  001816  0102               	movlb	2	; () banked
  2224  001818  0E57               	movlw	low _ToMainHigh_MQ
  2225  00181A  0100               	movlb	0	; () banked
  2226  00181C  6FB8               	movwf	init_queue@qptr& (0+255),b
  2227  00181E  EC37  F00B         	call	_init_queue	;wreg free
  2228                           
  2229                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2230  001822  0102               	movlb	2	; () banked
  2231  001824  0E02               	movlw	high _FromMainLow_MQ
  2232  001826  0100               	movlb	0	; () banked
  2233  001828  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2234  00182A  0102               	movlb	2	; () banked
  2235  00182C  0E00               	movlw	low _FromMainLow_MQ
  2236  00182E  0100               	movlb	0	; () banked
  2237  001830  6FB8               	movwf	init_queue@qptr& (0+255),b
  2238  001832  EC37  F00B         	call	_init_queue	;wreg free
  2239                           
  2240                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2241  001836  0103               	movlb	3	; () banked
  2242  001838  0E03               	movlw	high _FromMainHigh_MQ
  2243  00183A  0100               	movlb	0	; () banked
  2244  00183C  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2245  00183E  0103               	movlb	3	; () banked
  2246  001840  0E00               	movlw	low _FromMainHigh_MQ
  2247  001842  0100               	movlb	0	; () banked
  2248  001844  6FB8               	movwf	init_queue@qptr& (0+255),b
  2249  001846  EC37  F00B         	call	_init_queue	;wreg free
  2250  00184A  0012               	return	
  2251  00184C                     __end_of_init_queues:
  2252                           	opt stack 0
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           prodh	equ	0xFF4
  2258                           prodl	equ	0xFF3
  2259                           intcon	equ	0xFF2
  2260                           intcon2	equ	0xFF1
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           indf2	equ	0xFDF
  2264                           postinc2	equ	0xFDE
  2265                           postdec2	equ	0xFDD
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _init_queue *****************
  2271 ;; Defined at:
  2272 ;;		line 14 in file "../src/messages.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2275 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  i               1   58[BANK0 ] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;		None               void
  2280 ;; Registers used:
  2281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2287 ;;      Params:         0       2       0       0       0
  2288 ;;      Locals:         0       1       0       0       0
  2289 ;;      Temps:          0       0       0       0       0
  2290 ;;      Totals:         0       3       0       0       0
  2291 ;;Total ram usage:        3 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:   10
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_init_queues
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text9
  2302  00166E                     __ptext9:
  2303                           	opt stack 0
  2304  00166E                     _init_queue:
  2305                           	opt stack 19
  2306                           
  2307                           ;messages.c: 15: unsigned char i;
  2308                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2309                           
  2310                           ;incstack = 0
  2311  00166E  0100               	movlb	0	; () banked
  2312  001670  EE20 F055          	lfsr	2,85
  2313  001674  0100               	movlb	0	; () banked
  2314  001676  51B8               	movf	init_queue@qptr& (0+255),w,b
  2315  001678  26D9               	addwf	fsr2l,f,c
  2316  00167A  0100               	movlb	0	; () banked
  2317  00167C  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2318  00167E  22DA               	addwfc	fsr2h,f,c
  2319  001680  0E00               	movlw	0
  2320  001682  6EDF               	movwf	indf2,c
  2321                           
  2322                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2323  001684  0100               	movlb	0	; () banked
  2324  001686  EE20 F056          	lfsr	2,86
  2325  00168A  0100               	movlb	0	; () banked
  2326  00168C  51B8               	movf	init_queue@qptr& (0+255),w,b
  2327  00168E  26D9               	addwf	fsr2l,f,c
  2328  001690  0100               	movlb	0	; () banked
  2329  001692  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2330  001694  22DA               	addwfc	fsr2h,f,c
  2331  001696  0E00               	movlw	0
  2332  001698  6EDF               	movwf	indf2,c
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2336  00169A  0E00               	movlw	0
  2337  00169C  0100               	movlb	0	; () banked
  2338  00169E  6FBA               	movwf	init_queue@i& (0+255),b
  2339                           
  2340                           ; BSR set to: 0
  2341  0016A0  0E04               	movlw	4
  2342  0016A2  0100               	movlb	0	; () banked
  2343  0016A4  65BA               	cpfsgt	init_queue@i& (0+255),b
  2344  0016A6  D001               	goto	l2656
  2345  0016A8  0012               	return	
  2346  0016AA                     l2656:
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;messages.c: 20: qptr->queue[i].full = 0;
  2350  0016AA  0100               	movlb	0	; () banked
  2351  0016AC  51BA               	movf	init_queue@i& (0+255),w,b
  2352  0016AE  0D11               	mullw	17
  2353  0016B0  50F3               	movf	prodl,w,c
  2354  0016B2  0100               	movlb	0	; () banked
  2355  0016B4  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2356  0016B6  6ED9               	movwf	fsr2l,c
  2357  0016B8  50F4               	movf	prodh,w,c
  2358  0016BA  0100               	movlb	0	; () banked
  2359  0016BC  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2360  0016BE  6EDA               	movwf	fsr2h,c
  2361  0016C0  0E00               	movlw	0
  2362  0016C2  6EDF               	movwf	indf2,c
  2363                           
  2364                           ; BSR set to: 0
  2365  0016C4  0100               	movlb	0	; () banked
  2366  0016C6  2BBA               	incf	init_queue@i& (0+255),f,b
  2367                           
  2368                           ; BSR set to: 0
  2369  0016C8  0E04               	movlw	4
  2370  0016CA  0100               	movlb	0	; () banked
  2371  0016CC  65BA               	cpfsgt	init_queue@i& (0+255),b
  2372  0016CE  D7ED               	goto	l2656
  2373  0016D0  0012               	return	
  2374  0016D2                     __end_of_init_queue:
  2375                           	opt stack 0
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           prodh	equ	0xFF4
  2381                           prodl	equ	0xFF3
  2382                           intcon	equ	0xFF2
  2383                           intcon2	equ	0xFF1
  2384                           postinc0	equ	0xFEE
  2385                           wreg	equ	0xFE8
  2386                           indf2	equ	0xFDF
  2387                           postinc2	equ	0xFDE
  2388                           postdec2	equ	0xFDD
  2389                           fsr2h	equ	0xFDA
  2390                           fsr2l	equ	0xFD9
  2391                           status	equ	0xFD8
  2392                           
  2393 ;; *************** function _init_i2c *****************
  2394 ;; Defined at:
  2395 ;;		line 367 in file "../src/my_i2c.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2398 ;;		 -> main@ic(38), 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;		None               void
  2403 ;; Registers used:
  2404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2410 ;;      Params:         0       2       0       0       0
  2411 ;;      Locals:         0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0
  2413 ;;      Totals:         0       2       0       0       0
  2414 ;;Total ram usage:        2 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:   10
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text10
  2425  001608                     __ptext10:
  2426                           	opt stack 0
  2427  001608                     _init_i2c:
  2428                           	opt stack 20
  2429                           
  2430                           ;my_i2c.c: 368: ic_ptr = ic;
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;incstack = 0
  2434  001608  0100               	movlb	0	; () banked
  2435  00160A  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2436  00160E  0100               	movlb	0	; () banked
  2437  001610  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;my_i2c.c: 369: ic_ptr->buflen = 0;
  2441  001614  0100               	movlb	0	; () banked
  2442  001616  EE20 F00E          	lfsr	2,14
  2443  00161A  0100               	movlb	0	; () banked
  2444  00161C  51C5               	movf	_ic_ptr& (0+255),w,b
  2445  00161E  26D9               	addwf	fsr2l,f,c
  2446  001620  0100               	movlb	0	; () banked
  2447  001622  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2448  001624  22DA               	addwfc	fsr2h,f,c
  2449  001626  0E00               	movlw	0
  2450  001628  6EDF               	movwf	indf2,c
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;my_i2c.c: 370: ic_ptr->event_count = 0;
  2454  00162A  0100               	movlb	0	; () banked
  2455  00162C  EE20 F020          	lfsr	2,32
  2456  001630  0100               	movlb	0	; () banked
  2457  001632  51C5               	movf	_ic_ptr& (0+255),w,b
  2458  001634  26D9               	addwf	fsr2l,f,c
  2459  001636  0100               	movlb	0	; () banked
  2460  001638  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2461  00163A  22DA               	addwfc	fsr2h,f,c
  2462  00163C  0E00               	movlw	0
  2463  00163E  6EDF               	movwf	indf2,c
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  2467  001640  0100               	movlb	0	; () banked
  2468  001642  EE20 F021          	lfsr	2,33
  2469  001646  0100               	movlb	0	; () banked
  2470  001648  51C5               	movf	_ic_ptr& (0+255),w,b
  2471  00164A  26D9               	addwf	fsr2l,f,c
  2472  00164C  0100               	movlb	0	; () banked
  2473  00164E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2474  001650  22DA               	addwfc	fsr2h,f,c
  2475  001652  0E05               	movlw	5
  2476  001654  6EDF               	movwf	indf2,c
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;my_i2c.c: 372: ic_ptr->error_count = 0;
  2480  001656  0100               	movlb	0	; () banked
  2481  001658  EE20 F023          	lfsr	2,35
  2482  00165C  0100               	movlb	0	; () banked
  2483  00165E  51C5               	movf	_ic_ptr& (0+255),w,b
  2484  001660  26D9               	addwf	fsr2l,f,c
  2485  001662  0100               	movlb	0	; () banked
  2486  001664  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2487  001666  22DA               	addwfc	fsr2h,f,c
  2488  001668  0E00               	movlw	0
  2489  00166A  6EDF               	movwf	indf2,c
  2490                           
  2491                           ; BSR set to: 0
  2492  00166C  0012               	return	
  2493  00166E                     __end_of_init_i2c:
  2494                           	opt stack 0
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           prodh	equ	0xFF4
  2500                           prodl	equ	0xFF3
  2501                           intcon	equ	0xFF2
  2502                           intcon2	equ	0xFF1
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           indf2	equ	0xFDF
  2506                           postinc2	equ	0xFDE
  2507                           postdec2	equ	0xFDD
  2508                           fsr2h	equ	0xFDA
  2509                           fsr2l	equ	0xFD9
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _i_like_to_moveit_moveit *****************
  2513 ;; Defined at:
  2514 ;;		line 3 in file "C:/Users/alex/Documents/VI/School/Embedded/code/pic_motor/src/src/motor.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  left_side_sp    1    wreg     char 
  2517 ;;  right_side_s    1   16[BANK1 ] char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  left_side_sp    1   17[BANK1 ] char 
  2520 ;;  moves           4   18[BANK1 ] unsigned char [4]
  2521 ;; Return value:  Size  Location     Type
  2522 ;;		None               void
  2523 ;; Registers used:
  2524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2530 ;;      Params:         0       0       1       0       0
  2531 ;;      Locals:         0       0       5       0       0
  2532 ;;      Temps:          0       0       0       0       0
  2533 ;;      Totals:         0       0       6       0       0
  2534 ;;Total ram usage:        6 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:   14
  2537 ;; This function calls:
  2538 ;;		_send_uart_message
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text11
  2545  0013C4                     __ptext11:
  2546                           	opt stack 0
  2547  0013C4                     _i_like_to_moveit_moveit:
  2548                           	opt stack 16
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;incstack = 0
  2552                           ;i_like_to_moveit_moveit@left_side_speed stored from wreg
  2553  0013C4  0101               	movlb	1	; () banked
  2554  0013C6  6F11               	movwf	i_like_to_moveit_moveit@left_side_speed& (0+255),b
  2555                           
  2556                           ; BSR set to: 1
  2557                           ;motor.c: 5: unsigned char moves[4];
  2558                           ;motor.c: 11: moves[0] = 128;
  2559  0013C8  0E80               	movlw	128
  2560  0013CA  0101               	movlb	1	; () banked
  2561  0013CC  6F12               	movwf	i_like_to_moveit_moveit@moves& (0+255),b
  2562                           
  2563                           ; BSR set to: 1
  2564                           ;motor.c: 13: if( left_side_speed >=0 )
  2565  0013CE  0101               	movlb	1	; () banked
  2566  0013D0  BF11               	btfsc	i_like_to_moveit_moveit@left_side_speed& (0+255),7,b
  2567  0013D2  D006               	goto	l4032
  2568                           
  2569                           ; BSR set to: 1
  2570                           ;motor.c: 14: {
  2571                           ;motor.c: 15: moves[1] = 0;
  2572  0013D4  0E00               	movlw	0
  2573  0013D6  0101               	movlb	1	; () banked
  2574  0013D8  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;motor.c: 16: moves[2] = left_side_speed;
  2578  0013DA  C111  F114         	movff	i_like_to_moveit_moveit@left_side_speed,i_like_to_moveit_moveit@moves+2
  2579                           
  2580                           ;motor.c: 17: }
  2581  0013DE  D010               	goto	l538
  2582  0013E0                     l4032:
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;motor.c: 18: else
  2586                           ;motor.c: 19: {
  2587                           ;motor.c: 20: moves[1] = 1;
  2588  0013E0  0E01               	movlw	1
  2589  0013E2  0101               	movlb	1	; () banked
  2590  0013E4  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2591                           
  2592                           ; BSR set to: 1
  2593                           ;motor.c: 22: if(left_side_speed == -128)
  2594  0013E6  0101               	movlb	1	; () banked
  2595  0013E8  5111               	movf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2596  0013EA  0A80               	xorlw	128
  2597  0013EC  A4D8               	btfss	status,2,c
  2598  0013EE  D003               	goto	l4038
  2599                           
  2600                           ; BSR set to: 1
  2601                           ;motor.c: 23: {
  2602                           ;motor.c: 24: moves[2] = (unsigned char)((-left_side_speed)-1);
  2603  0013F0  0101               	movlb	1	; () banked
  2604  0013F2  2911               	incf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2605  0013F4  D002               	goto	L3
  2606  0013F6                     l4038:
  2607                           
  2608                           ; BSR set to: 1
  2609                           ;motor.c: 26: else
  2610                           ;motor.c: 27: {
  2611                           ;motor.c: 28: moves[2] = (unsigned char)(-left_side_speed);
  2612  0013F6  0101               	movlb	1	; () banked
  2613  0013F8  5111               	movf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2614  0013FA                     L3:
  2615  0013FA  0800               	sublw	0
  2616  0013FC  0101               	movlb	1	; () banked
  2617  0013FE  6F14               	movwf	(i_like_to_moveit_moveit@moves+2)& (0+255),b
  2618  001400                     l538:
  2619                           
  2620                           ; BSR set to: 1
  2621                           ;motor.c: 29: }
  2622                           ;motor.c: 30: }
  2623                           ;motor.c: 32: moves[3] = (moves[0] + moves[1] + moves[2])&127;
  2624  001400  0101               	movlb	1	; () banked
  2625  001402  5113               	movf	(i_like_to_moveit_moveit@moves+1)& (0+255),w,b
  2626  001404  0101               	movlb	1	; () banked
  2627  001406  2514               	addwf	(i_like_to_moveit_moveit@moves+2)& (0+255),w,b
  2628  001408  0101               	movlb	1	; () banked
  2629  00140A  2512               	addwf	i_like_to_moveit_moveit@moves& (0+255),w,b
  2630  00140C  0B7F               	andlw	127
  2631  00140E  0101               	movlb	1	; () banked
  2632  001410  6F15               	movwf	(i_like_to_moveit_moveit@moves+3)& (0+255),b
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;motor.c: 34: send_uart_message(moves);
  2636  001412  0101               	movlb	1	; () banked
  2637  001414  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2638  001416  0101               	movlb	1	; () banked
  2639  001418  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2640  00141A  0101               	movlb	1	; () banked
  2641  00141C  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2642  00141E  0101               	movlb	1	; () banked
  2643  001420  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2644  001422  EC2B  F00E         	call	_send_uart_message	;wreg free
  2645                           
  2646                           ;motor.c: 36: if( right_side_speed >=0 )
  2647  001426  0101               	movlb	1	; () banked
  2648  001428  BF10               	btfsc	i_like_to_moveit_moveit@right_side_speed& (0+255),7,b
  2649  00142A  D006               	goto	l4048
  2650                           
  2651                           ; BSR set to: 1
  2652                           ;motor.c: 37: {
  2653                           ;motor.c: 38: moves[1] = 4;
  2654  00142C  0E04               	movlw	4
  2655  00142E  0101               	movlb	1	; () banked
  2656  001430  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;motor.c: 39: moves[2] = right_side_speed;
  2660  001432  C110  F114         	movff	i_like_to_moveit_moveit@right_side_speed,i_like_to_moveit_moveit@moves+2
  2661                           
  2662                           ;motor.c: 40: }
  2663  001436  D010               	goto	l542
  2664  001438                     l4048:
  2665                           
  2666                           ; BSR set to: 1
  2667                           ;motor.c: 41: else
  2668                           ;motor.c: 42: {
  2669                           ;motor.c: 43: moves[1] = 5;
  2670  001438  0E05               	movlw	5
  2671  00143A  0101               	movlb	1	; () banked
  2672  00143C  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;motor.c: 45: if(right_side_speed == -128)
  2676  00143E  0101               	movlb	1	; () banked
  2677  001440  5110               	movf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2678  001442  0A80               	xorlw	128
  2679  001444  A4D8               	btfss	status,2,c
  2680  001446  D003               	goto	l4054
  2681                           
  2682                           ; BSR set to: 1
  2683                           ;motor.c: 46: {
  2684                           ;motor.c: 47: moves[2] = (unsigned char)((-right_side_speed)-1);
  2685  001448  0101               	movlb	1	; () banked
  2686  00144A  2910               	incf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2687  00144C  D002               	goto	L4
  2688  00144E                     l4054:
  2689                           
  2690                           ; BSR set to: 1
  2691                           ;motor.c: 49: else
  2692                           ;motor.c: 50: {
  2693                           ;motor.c: 51: moves[2] = (unsigned char)(-right_side_speed);
  2694  00144E  0101               	movlb	1	; () banked
  2695  001450  5110               	movf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2696  001452                     L4:
  2697  001452  0800               	sublw	0
  2698  001454  0101               	movlb	1	; () banked
  2699  001456  6F14               	movwf	(i_like_to_moveit_moveit@moves+2)& (0+255),b
  2700  001458                     l542:
  2701                           
  2702                           ; BSR set to: 1
  2703                           ;motor.c: 52: }
  2704                           ;motor.c: 53: }
  2705                           ;motor.c: 55: moves[3] = (moves[0] + moves[1] + moves[2])&127;
  2706  001458  0101               	movlb	1	; () banked
  2707  00145A  5113               	movf	(i_like_to_moveit_moveit@moves+1)& (0+255),w,b
  2708  00145C  0101               	movlb	1	; () banked
  2709  00145E  2514               	addwf	(i_like_to_moveit_moveit@moves+2)& (0+255),w,b
  2710  001460  0101               	movlb	1	; () banked
  2711  001462  2512               	addwf	i_like_to_moveit_moveit@moves& (0+255),w,b
  2712  001464  0B7F               	andlw	127
  2713  001466  0101               	movlb	1	; () banked
  2714  001468  6F15               	movwf	(i_like_to_moveit_moveit@moves+3)& (0+255),b
  2715                           
  2716                           ; BSR set to: 1
  2717                           ;motor.c: 57: send_uart_message(moves);
  2718  00146A  0101               	movlb	1	; () banked
  2719  00146C  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2720  00146E  0101               	movlb	1	; () banked
  2721  001470  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2722  001472  0101               	movlb	1	; () banked
  2723  001474  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2724  001476  0101               	movlb	1	; () banked
  2725  001478  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2726  00147A  EC2B  F00E         	call	_send_uart_message	;wreg free
  2727  00147E  0012               	return	
  2728  001480                     __end_of_i_like_to_moveit_moveit:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           prodh	equ	0xFF4
  2735                           prodl	equ	0xFF3
  2736                           intcon	equ	0xFF2
  2737                           intcon2	equ	0xFF1
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           indf2	equ	0xFDF
  2741                           postinc2	equ	0xFDE
  2742                           postdec2	equ	0xFDD
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8
  2746                           
  2747 ;; *************** function _send_uart_message *****************
  2748 ;; Defined at:
  2749 ;;		line 186 in file "../src/my_uart.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  message_ptr     2   14[BANK1 ] PTR unsigned char 
  2752 ;;		 -> i_like_to_moveit_moveit@moves(4), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  message_q_co    1   68[BANK0 ] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      unsigned char 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2764 ;;      Params:         0       0       2       0       0
  2765 ;;      Locals:         0       1       0       0       0
  2766 ;;      Temps:          0       0       0       0       0
  2767 ;;      Totals:         0       1       2       0       0
  2768 ;;Total ram usage:        3 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:   13
  2771 ;; This function calls:
  2772 ;;		_FromMainLow_sendmsg
  2773 ;; This function is called by:
  2774 ;;		_i_like_to_moveit_moveit
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text12
  2779  001C56                     __ptext12:
  2780                           	opt stack 0
  2781  001C56                     _send_uart_message:
  2782                           	opt stack 16
  2783                           
  2784                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(4,31,(void *) messag
      +                          e_ptr );
  2785                           
  2786                           ;incstack = 0
  2787  001C56  0E1F               	movlw	31
  2788  001C58  0101               	movlb	1	; () banked
  2789  001C5A  6F0B               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2790  001C5C  0101               	movlb	1	; () banked
  2791  001C5E  C10F  F10D         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2792  001C62  0101               	movlb	1	; () banked
  2793  001C64  C10E  F10C         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2794  001C68  0E04               	movlw	4
  2795  001C6A  EC9D  F00D         	call	_FromMainLow_sendmsg
  2796  001C6E  0100               	movlb	0	; () banked
  2797  001C70  6FC4               	movwf	send_uart_message@message_q_code& (0+255),b
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;my_uart.c: 193: }
  2801                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;my_uart.c: 191: {
  2805                           ;my_uart.c: 192: return 0x02;
  2806                           ;	Return value of _send_uart_message is never used
  2807                           
  2808                           ;my_uart.c: 190: if( message_q_code == -1)
  2809  001C72  889D               	bsf	3997,4,c	;volatile
  2810                           
  2811                           ; BSR set to: 0
  2812                           
  2813                           ;my_uart.c: 196: return 0x00;
  2814                           ;	Return value of _send_uart_message is never used
  2815  001C74  0012               	return	
  2816  001C76                     __end_of_send_uart_message:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           intcon	equ	0xFF2
  2825                           intcon2	equ	0xFF1
  2826                           postinc0	equ	0xFEE
  2827                           wreg	equ	0xFE8
  2828                           indf2	equ	0xFDF
  2829                           postinc2	equ	0xFDE
  2830                           postdec2	equ	0xFDD
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _FromMainLow_sendmsg *****************
  2836 ;; Defined at:
  2837 ;;		line 150 in file "../src/messages.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  length          1    wreg     unsigned char 
  2840 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2841 ;;  data            2   12[BANK1 ] PTR void 
  2842 ;;		 -> i_like_to_moveit_moveit@moves(4), 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  length          1   67[BANK0 ] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      char 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2854 ;;      Params:         0       0       3       0       0
  2855 ;;      Locals:         0       1       0       0       0
  2856 ;;      Temps:          0       0       0       0       0
  2857 ;;      Totals:         0       1       3       0       0
  2858 ;;Total ram usage:        4 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:   12
  2861 ;; This function calls:
  2862 ;;		_send_msg
  2863 ;; This function is called by:
  2864 ;;		_send_uart_message
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text13
  2869  001B3A                     __ptext13:
  2870                           	opt stack 0
  2871  001B3A                     _FromMainLow_sendmsg:
  2872                           	opt stack 16
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;incstack = 0
  2876                           ;FromMainLow_sendmsg@length stored from wreg
  2877  001B3A  0100               	movlb	0	; () banked
  2878  001B3C  6FC3               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2882  001B3E  0102               	movlb	2	; () banked
  2883  001B40  0E02               	movlw	high _FromMainLow_MQ
  2884  001B42  0101               	movlb	1	; () banked
  2885  001B44  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2886  001B46  0102               	movlb	2	; () banked
  2887  001B48  0E00               	movlw	low _FromMainLow_MQ
  2888  001B4A  0101               	movlb	1	; () banked
  2889  001B4C  6F00               	movwf	send_msg@qptr& (0+255),b
  2890  001B4E  C0C3  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  2891  001B52  C10B  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2892  001B56  0101               	movlb	1	; () banked
  2893  001B58  C10D  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2894  001B5C  0101               	movlb	1	; () banked
  2895  001B5E  C10C  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  2896  001B62  ECD7  F006         	call	_send_msg	;wreg free
  2897  001B66  0012               	return	
  2898  001B68                     __end_of_FromMainLow_sendmsg:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           intcon2	equ	0xFF1
  2908                           postinc0	equ	0xFEE
  2909                           wreg	equ	0xFE8
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _send_msg *****************
  2918 ;; Defined at:
  2919 ;;		line 24 in file "../src/messages.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2922 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2923 ;;  length          1    2[BANK1 ] unsigned char 
  2924 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2925 ;;  data            2    4[BANK1 ] PTR void 
  2926 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  2927 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  2928 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  2929 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2932 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  2933 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2934 ;;  tlength         2    6[BANK1 ] unsigned int 
  2935 ;;  slot            1    8[BANK1 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      char 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2945 ;;      Params:         0       0       6       0       0
  2946 ;;      Locals:         0       0       5       0       0
  2947 ;;      Temps:          0       1       0       0       0
  2948 ;;      Totals:         0       1      11       0       0
  2949 ;;Total ram usage:       12 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:   11
  2952 ;; This function calls:
  2953 ;;		___awmod
  2954 ;;		_memcpy
  2955 ;; This function is called by:
  2956 ;;		_FromMainLow_sendmsg
  2957 ;;		_FromMainHigh_sendmsg
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text14
  2962  000DAE                     __ptext14:
  2963                           	opt stack 0
  2964  000DAE                     _send_msg:
  2965                           	opt stack 17
  2966                           
  2967                           ;messages.c: 25: unsigned char slot;
  2968                           ;messages.c: 27: msg *qmsg;
  2969                           ;messages.c: 28: size_t tlength = length;
  2970                           
  2971                           ;incstack = 0
  2972  000DAE  0101               	movlb	1	; () banked
  2973  000DB0  C102  F106         	movff	send_msg@length,send_msg@tlength
  2974  000DB4  0101               	movlb	1	; () banked
  2975  000DB6  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  2976                           
  2977                           ; BSR set to: 1
  2978                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2979  000DB8  0101               	movlb	1	; () banked
  2980  000DBA  EE20 F055          	lfsr	2,85
  2981  000DBE  0101               	movlb	1	; () banked
  2982  000DC0  5100               	movf	send_msg@qptr& (0+255),w,b
  2983  000DC2  26D9               	addwf	fsr2l,f,c
  2984  000DC4  0101               	movlb	1	; () banked
  2985  000DC6  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2986  000DC8  22DA               	addwfc	fsr2h,f,c
  2987  000DCA  50DF               	movf	indf2,w,c
  2988  000DCC  0101               	movlb	1	; () banked
  2989  000DCE  6F08               	movwf	send_msg@slot& (0+255),b
  2990                           
  2991                           ; BSR set to: 1
  2992                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2993  000DD0  0101               	movlb	1	; () banked
  2994  000DD2  5108               	movf	send_msg@slot& (0+255),w,b
  2995  000DD4  0D11               	mullw	17
  2996  000DD6  50F3               	movf	prodl,w,c
  2997  000DD8  0101               	movlb	1	; () banked
  2998  000DDA  2500               	addwf	send_msg@qptr& (0+255),w,b
  2999  000DDC  0101               	movlb	1	; () banked
  3000  000DDE  6F09               	movwf	send_msg@qmsg& (0+255),b
  3001  000DE0  50F4               	movf	prodh,w,c
  3002  000DE2  0101               	movlb	1	; () banked
  3003  000DE4  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3004  000DE6  0101               	movlb	1	; () banked
  3005  000DE8  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  3006                           
  3007                           ; BSR set to: 1
  3008                           ;messages.c: 41: if (qmsg->full != 0) {
  3009  000DEA  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3010  000DEE  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3011  000DF2  50DF               	movf	indf2,w,c
  3012  000DF4  B4D8               	btfsc	status,2,c
  3013  000DF6  D002               	goto	l3504
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;messages.c: 42: return (-1);
  3017  000DF8  0EFF               	movlw	255
  3018  000DFA  0012               	return	
  3019  000DFC                     l3504:
  3020                           
  3021                           ; BSR set to: 1
  3022                           ;messages.c: 43: }
  3023                           ;messages.c: 46: qmsg->length = length;
  3024  000DFC  0101               	movlb	1	; () banked
  3025  000DFE  EE20 F001          	lfsr	2,1
  3026  000E02  0101               	movlb	1	; () banked
  3027  000E04  5109               	movf	send_msg@qmsg& (0+255),w,b
  3028  000E06  26D9               	addwf	fsr2l,f,c
  3029  000E08  0101               	movlb	1	; () banked
  3030  000E0A  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3031  000E0C  22DA               	addwfc	fsr2h,f,c
  3032  000E0E  0101               	movlb	1	; () banked
  3033  000E10  C102  FFDF         	movff	send_msg@length,indf2
  3034                           
  3035                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3036  000E14  0101               	movlb	1	; () banked
  3037  000E16  EE20 F002          	lfsr	2,2
  3038  000E1A  0101               	movlb	1	; () banked
  3039  000E1C  5109               	movf	send_msg@qmsg& (0+255),w,b
  3040  000E1E  26D9               	addwf	fsr2l,f,c
  3041  000E20  0101               	movlb	1	; () banked
  3042  000E22  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3043  000E24  22DA               	addwfc	fsr2h,f,c
  3044  000E26  0101               	movlb	1	; () banked
  3045  000E28  C103  FFDF         	movff	send_msg@msgtype,indf2
  3046                           
  3047                           ; BSR set to: 1
  3048                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3049  000E2C  0E03               	movlw	3
  3050  000E2E  0101               	movlb	1	; () banked
  3051  000E30  2509               	addwf	send_msg@qmsg& (0+255),w,b
  3052  000E32  0100               	movlb	0	; () banked
  3053  000E34  6FB8               	movwf	memcpy@d1& (0+255),b
  3054  000E36  0E00               	movlw	0
  3055  000E38  0101               	movlb	1	; () banked
  3056  000E3A  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3057  000E3C  0100               	movlb	0	; () banked
  3058  000E3E  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  3059  000E40  0101               	movlb	1	; () banked
  3060  000E42  0100               	movlb	0	; () banked
  3061  000E44  C105  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  3062  000E48  0101               	movlb	1	; () banked
  3063  000E4A  0100               	movlb	0	; () banked
  3064  000E4C  C104  F0BA         	movff	send_msg@data,memcpy@s1
  3065  000E50  C106  F0BC         	movff	send_msg@tlength,memcpy@n
  3066  000E54  C107  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  3067  000E58  EC4E  F00C         	call	_memcpy	;wreg free
  3068                           
  3069                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  3070  000E5C  0101               	movlb	1	; () banked
  3071  000E5E  EE20 F055          	lfsr	2,85
  3072  000E62  0101               	movlb	1	; () banked
  3073  000E64  5100               	movf	send_msg@qptr& (0+255),w,b
  3074  000E66  26D9               	addwf	fsr2l,f,c
  3075  000E68  0101               	movlb	1	; () banked
  3076  000E6A  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3077  000E6C  22DA               	addwfc	fsr2h,f,c
  3078  000E6E  0101               	movlb	1	; () banked
  3079  000E70  EE10 F055          	lfsr	1,85
  3080  000E74  0101               	movlb	1	; () banked
  3081  000E76  5100               	movf	send_msg@qptr& (0+255),w,b
  3082  000E78  26E1               	addwf	fsr1l,f,c
  3083  000E7A  0101               	movlb	1	; () banked
  3084  000E7C  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3085  000E7E  22E2               	addwfc	fsr1h,f,c
  3086  000E80  50E7               	movf	indf1,w,c
  3087  000E82  0100               	movlb	0	; () banked
  3088  000E84  6FC2               	movwf	??_send_msg& (0+255),b
  3089  000E86  0E01               	movlw	1
  3090  000E88  0100               	movlb	0	; () banked
  3091  000E8A  25C2               	addwf	??_send_msg& (0+255),w,b
  3092  000E8C  0100               	movlb	0	; () banked
  3093  000E8E  6FB8               	movwf	___awmod@dividend& (0+255),b
  3094  000E90  0100               	movlb	0	; () banked
  3095  000E92  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3096  000E94  0E00               	movlw	0
  3097  000E96  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3098  000E98  0E00               	movlw	0
  3099  000E9A  0100               	movlb	0	; () banked
  3100  000E9C  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3101  000E9E  0E05               	movlw	5
  3102  000EA0  0100               	movlb	0	; () banked
  3103  000EA2  6FBA               	movwf	___awmod@divisor& (0+255),b
  3104  000EA4  ECBE  F008         	call	___awmod	;wreg free
  3105  000EA8  0100               	movlb	0	; () banked
  3106  000EAA  51B8               	movf	?___awmod& (0+255),w,b
  3107  000EAC  6EDF               	movwf	indf2,c
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;messages.c: 59: qmsg->full = 1;
  3111  000EAE  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3112  000EB2  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3113  000EB6  0E01               	movlw	1
  3114  000EB8  6EDF               	movwf	indf2,c
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;messages.c: 60: return (1);
  3118  000EBA  0E01               	movlw	1
  3119  000EBC  0012               	return	
  3120  000EBE                     __end_of_send_msg:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           intcon	equ	0xFF2
  3129                           intcon2	equ	0xFF1
  3130                           postinc0	equ	0xFEE
  3131                           wreg	equ	0xFE8
  3132                           indf1	equ	0xFE7
  3133                           fsr1h	equ	0xFE2
  3134                           fsr1l	equ	0xFE1
  3135                           indf2	equ	0xFDF
  3136                           postinc2	equ	0xFDE
  3137                           postdec2	equ	0xFDD
  3138                           fsr2h	equ	0xFDA
  3139                           fsr2l	equ	0xFD9
  3140                           status	equ	0xFD8
  3141                           
  3142 ;; *************** function _i2c_configure_slave *****************
  3143 ;; Defined at:
  3144 ;;		line 378 in file "../src/my_i2c.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  addr            1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  addr            1   56[BANK0 ] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;		None               void
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3158 ;;      Params:         0       0       0       0       0
  3159 ;;      Locals:         0       1       0       0       0
  3160 ;;      Temps:          0       0       0       0       0
  3161 ;;      Totals:         0       1       0       0       0
  3162 ;;Total ram usage:        1 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:   10
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text15
  3173  001BC2                     __ptext15:
  3174                           	opt stack 0
  3175  001BC2                     _i2c_configure_slave:
  3176                           	opt stack 20
  3177                           
  3178                           ;incstack = 0
  3179                           ;i2c_configure_slave@addr stored from wreg
  3180  001BC2  0100               	movlb	0	; () banked
  3181  001BC4  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;my_i2c.c: 390: TRISCbits.TRISC3 = 1;
  3185  001BC6  8694               	bsf	3988,3,c	;volatile
  3186                           
  3187                           ;my_i2c.c: 391: TRISCbits.TRISC4 = 1;
  3188  001BC8  8894               	bsf	3988,4,c	;volatile
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;my_i2c.c: 396: SSPADD = addr;
  3192  001BCA  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;my_i2c.c: 398: SSPSTAT = 0x0;
  3196  001BCE  0E00               	movlw	0
  3197  001BD0  6EC7               	movwf	4039,c	;volatile
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;my_i2c.c: 399: SSPCON1 = 0x0;
  3201  001BD2  0E00               	movlw	0
  3202  001BD4  6EC6               	movwf	4038,c	;volatile
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;my_i2c.c: 400: SSPCON2 = 0x0;
  3206  001BD6  0E00               	movlw	0
  3207  001BD8  6EC5               	movwf	4037,c	;volatile
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;my_i2c.c: 401: SSPCON1 |= 0x0E;
  3211  001BDA  0E0E               	movlw	14
  3212  001BDC  12C6               	iorwf	4038,f,c	;volatile
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;my_i2c.c: 402: SSPSTAT |= 0b10000000;
  3216  001BDE  8EC7               	bsf	4039,7,c	;volatile
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;my_i2c.c: 405: TRISCbits.TRISC3 = 1;
  3220  001BE0  8694               	bsf	3988,3,c	;volatile
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;my_i2c.c: 406: TRISCbits.TRISC4 = 1;
  3224  001BE2  8894               	bsf	3988,4,c	;volatile
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;my_i2c.c: 427: SSPCON2bits.SEN = 1;
  3228  001BE4  80C5               	bsf	4037,0,c	;volatile
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;my_i2c.c: 428: SSPCON1 |= 0b00100000;
  3232  001BE6  8AC6               	bsf	4038,5,c	;volatile
  3233                           
  3234                           ; BSR set to: 0
  3235  001BE8  0012               	return	
  3236  001BEA                     __end_of_i2c_configure_slave:
  3237                           	opt stack 0
  3238                           tblptru	equ	0xFF8
  3239                           tblptrh	equ	0xFF7
  3240                           tblptrl	equ	0xFF6
  3241                           tablat	equ	0xFF5
  3242                           prodh	equ	0xFF4
  3243                           prodl	equ	0xFF3
  3244                           intcon	equ	0xFF2
  3245                           intcon2	equ	0xFF1
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           indf1	equ	0xFE7
  3249                           fsr1h	equ	0xFE2
  3250                           fsr1l	equ	0xFE1
  3251                           indf2	equ	0xFDF
  3252                           postinc2	equ	0xFDE
  3253                           postdec2	equ	0xFDD
  3254                           fsr2h	equ	0xFDA
  3255                           fsr2l	equ	0xFD9
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function _enable_interrupts *****************
  3259 ;; Defined at:
  3260 ;;		line 14 in file "../src/interrupts.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;		None               void
  3267 ;; Registers used:
  3268 ;;		None
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3274 ;;      Params:         0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:   10
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text16
  3289  001CF4                     __ptext16:
  3290                           	opt stack 0
  3291  001CF4                     _enable_interrupts:
  3292                           	opt stack 20
  3293                           
  3294                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;incstack = 0
  3298  001CF4  8ED0               	bsf	4048,7,c	;volatile
  3299                           
  3300                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3301  001CF6  8EF2               	bsf	intcon,7,c	;volatile
  3302                           
  3303                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3304  001CF8  8CF2               	bsf	intcon,6,c	;volatile
  3305  001CFA  0012               	return	
  3306  001CFC                     __end_of_enable_interrupts:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           intcon2	equ	0xFF1
  3316                           postinc0	equ	0xFEE
  3317                           wreg	equ	0xFE8
  3318                           indf1	equ	0xFE7
  3319                           fsr1h	equ	0xFE2
  3320                           fsr1l	equ	0xFE1
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           fsr2h	equ	0xFDA
  3325                           fsr2l	equ	0xFD9
  3326                           status	equ	0xFD8
  3327                           
  3328 ;; *************** function _debug_configure *****************
  3329 ;; Defined at:
  3330 ;;		line 3 in file "../src/debug.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;		None               void
  3337 ;; Registers used:
  3338 ;;		wreg, status,2
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3344 ;;      Params:         0       0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0
  3347 ;;      Totals:         0       0       0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:   10
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text17
  3359  001CEA                     __ptext17:
  3360                           	opt stack 0
  3361  001CEA                     _debug_configure:
  3362                           	opt stack 20
  3363                           
  3364                           ;debug.c: 5: TRISD = 0x00;
  3365                           
  3366                           ;incstack = 0
  3367  001CEA  0E00               	movlw	0
  3368  001CEC  6E95               	movwf	3989,c	;volatile
  3369                           
  3370                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3371  001CEE  9093               	bcf	3987,0,c	;volatile
  3372                           
  3373                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3374  001CF0  9293               	bcf	3987,1,c	;volatile
  3375  001CF2  0012               	return	
  3376  001CF4                     __end_of_debug_configure:
  3377                           	opt stack 0
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           intcon	equ	0xFF2
  3385                           intcon2	equ	0xFF1
  3386                           postinc0	equ	0xFEE
  3387                           wreg	equ	0xFE8
  3388                           indf1	equ	0xFE7
  3389                           fsr1h	equ	0xFE2
  3390                           fsr1l	equ	0xFE1
  3391                           indf2	equ	0xFDF
  3392                           postinc2	equ	0xFDE
  3393                           postdec2	equ	0xFDD
  3394                           fsr2h	equ	0xFDA
  3395                           fsr2l	equ	0xFD9
  3396                           status	equ	0xFD8
  3397                           
  3398 ;; *************** function _blip3 *****************
  3399 ;; Defined at:
  3400 ;;		line 32 in file "../src/debug.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;		None               void
  3407 ;; Registers used:
  3408 ;;		None
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3414 ;;      Params:         0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0
  3417 ;;      Totals:         0       0       0       0       0
  3418 ;;Total ram usage:        0 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:   10
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text18
  3429  001CFC                     __ptext18:
  3430                           	opt stack 0
  3431  001CFC                     _blip3:
  3432                           	opt stack 20
  3433                           
  3434                           ;debug.c: 34: LATDbits.LD6 = 0;
  3435                           
  3436                           ;incstack = 0
  3437  001CFC  9C8C               	bcf	3980,6,c	;volatile
  3438                           
  3439                           ;debug.c: 35: LATDbits.LD6 = 1;
  3440  001CFE  8C8C               	bsf	3980,6,c	;volatile
  3441                           
  3442                           ;debug.c: 36: LATDbits.LD6 = 0;
  3443  001D00  9C8C               	bcf	3980,6,c	;volatile
  3444  001D02  0012               	return	
  3445  001D04                     __end_of_blip3:
  3446                           	opt stack 0
  3447                           tblptru	equ	0xFF8
  3448                           tblptrh	equ	0xFF7
  3449                           tblptrl	equ	0xFF6
  3450                           tablat	equ	0xFF5
  3451                           prodh	equ	0xFF4
  3452                           prodl	equ	0xFF3
  3453                           intcon	equ	0xFF2
  3454                           intcon2	equ	0xFF1
  3455                           postinc0	equ	0xFEE
  3456                           wreg	equ	0xFE8
  3457                           indf1	equ	0xFE7
  3458                           fsr1h	equ	0xFE2
  3459                           fsr1l	equ	0xFE1
  3460                           indf2	equ	0xFDF
  3461                           postinc2	equ	0xFDE
  3462                           postdec2	equ	0xFDD
  3463                           fsr2h	equ	0xFDA
  3464                           fsr2l	equ	0xFD9
  3465                           status	equ	0xFD8
  3466                           
  3467 ;; *************** function _blip2 *****************
  3468 ;; Defined at:
  3469 ;;		line 25 in file "../src/debug.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;		None               void
  3476 ;; Registers used:
  3477 ;;		None
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:   10
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text19
  3498  001D04                     __ptext19:
  3499                           	opt stack 0
  3500  001D04                     _blip2:
  3501                           	opt stack 20
  3502                           
  3503                           ;debug.c: 27: LATDbits.LD5 = 0;
  3504                           
  3505                           ;incstack = 0
  3506  001D04  9A8C               	bcf	3980,5,c	;volatile
  3507                           
  3508                           ;debug.c: 28: LATDbits.LD5 = 1;
  3509  001D06  8A8C               	bsf	3980,5,c	;volatile
  3510                           
  3511                           ;debug.c: 29: LATDbits.LD5 = 0;
  3512  001D08  9A8C               	bcf	3980,5,c	;volatile
  3513  001D0A  0012               	return	
  3514  001D0C                     __end_of_blip2:
  3515                           	opt stack 0
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           prodh	equ	0xFF4
  3521                           prodl	equ	0xFF3
  3522                           intcon	equ	0xFF2
  3523                           intcon2	equ	0xFF1
  3524                           postinc0	equ	0xFEE
  3525                           wreg	equ	0xFE8
  3526                           indf1	equ	0xFE7
  3527                           fsr1h	equ	0xFE2
  3528                           fsr1l	equ	0xFE1
  3529                           indf2	equ	0xFDF
  3530                           postinc2	equ	0xFDE
  3531                           postdec2	equ	0xFDD
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8
  3535                           
  3536 ;; *************** function _blip1 *****************
  3537 ;; Defined at:
  3538 ;;		line 18 in file "../src/debug.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;		None               void
  3545 ;; Registers used:
  3546 ;;		None
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3552 ;;      Params:         0       0       0       0       0
  3553 ;;      Locals:         0       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0
  3555 ;;      Totals:         0       0       0       0       0
  3556 ;;Total ram usage:        0 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:   10
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text20
  3567  001D0C                     __ptext20:
  3568                           	opt stack 0
  3569  001D0C                     _blip1:
  3570                           	opt stack 20
  3571                           
  3572                           ;debug.c: 20: LATDbits.LD4 = 0;
  3573                           
  3574                           ;incstack = 0
  3575  001D0C  988C               	bcf	3980,4,c	;volatile
  3576                           
  3577                           ;debug.c: 21: LATDbits.LD4 = 1;
  3578  001D0E  888C               	bsf	3980,4,c	;volatile
  3579                           
  3580                           ;debug.c: 22: LATDbits.LD4 = 0;
  3581  001D10  988C               	bcf	3980,4,c	;volatile
  3582  001D12  0012               	return	
  3583  001D14                     __end_of_blip1:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           intcon2	equ	0xFF1
  3593                           postinc0	equ	0xFEE
  3594                           wreg	equ	0xFE8
  3595                           indf1	equ	0xFE7
  3596                           fsr1h	equ	0xFE2
  3597                           fsr1l	equ	0xFE1
  3598                           indf2	equ	0xFDF
  3599                           postinc2	equ	0xFDE
  3600                           postdec2	equ	0xFDD
  3601                           fsr2h	equ	0xFDA
  3602                           fsr2l	equ	0xFD9
  3603                           status	equ	0xFD8
  3604                           
  3605 ;; *************** function _blip *****************
  3606 ;; Defined at:
  3607 ;;		line 11 in file "../src/debug.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;		None               void
  3614 ;; Registers used:
  3615 ;;		None
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3621 ;;      Params:         0       0       0       0       0
  3622 ;;      Locals:         0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0
  3624 ;;      Totals:         0       0       0       0       0
  3625 ;;Total ram usage:        0 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:   10
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text21
  3636  001D14                     __ptext21:
  3637                           	opt stack 0
  3638  001D14                     _blip:
  3639                           	opt stack 20
  3640                           
  3641                           ;debug.c: 13: LATDbits.LD2 = 0;
  3642                           
  3643                           ;incstack = 0
  3644  001D14  948C               	bcf	3980,2,c	;volatile
  3645                           
  3646                           ;debug.c: 14: LATDbits.LD2 = 1;
  3647  001D16  848C               	bsf	3980,2,c	;volatile
  3648                           
  3649                           ;debug.c: 15: LATDbits.LD2 = 0;
  3650  001D18  948C               	bcf	3980,2,c	;volatile
  3651  001D1A  0012               	return	
  3652  001D1C                     __end_of_blip:
  3653                           	opt stack 0
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           prodh	equ	0xFF4
  3659                           prodl	equ	0xFF3
  3660                           intcon	equ	0xFF2
  3661                           intcon2	equ	0xFF1
  3662                           postinc0	equ	0xFEE
  3663                           wreg	equ	0xFE8
  3664                           indf1	equ	0xFE7
  3665                           fsr1h	equ	0xFE2
  3666                           fsr1l	equ	0xFE1
  3667                           indf2	equ	0xFDF
  3668                           postinc2	equ	0xFDE
  3669                           postdec2	equ	0xFDD
  3670                           fsr2h	equ	0xFDA
  3671                           fsr2l	equ	0xFD9
  3672                           status	equ	0xFD8
  3673                           
  3674 ;; *************** function _ToMainLow_recvmsg *****************
  3675 ;; Defined at:
  3676 ;;		line 112 in file "../src/messages.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  maxlength       1    wreg     unsigned char 
  3679 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3680 ;;		 -> main@msgtype(1), 
  3681 ;;  data            2   14[BANK1 ] PTR void 
  3682 ;;		 -> main@msgbuffer(15), 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      char 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3694 ;;      Params:         0       0       4       0       0
  3695 ;;      Locals:         0       1       0       0       0
  3696 ;;      Temps:          0       0       0       0       0
  3697 ;;      Totals:         0       1       4       0       0
  3698 ;;Total ram usage:        5 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:   12
  3701 ;; This function calls:
  3702 ;;		_recv_msg
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text22
  3709  001A06                     __ptext22:
  3710                           	opt stack 0
  3711  001A06                     _ToMainLow_recvmsg:
  3712                           	opt stack 18
  3713                           
  3714                           ;incstack = 0
  3715                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3716  001A06  0100               	movlb	0	; () banked
  3717  001A08  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3721  001A0A  0101               	movlb	1	; () banked
  3722  001A0C  0E01               	movlw	high _ToMainLow_MQ
  3723  001A0E  0101               	movlb	1	; () banked
  3724  001A10  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3725  001A12  0101               	movlb	1	; () banked
  3726  001A14  0E66               	movlw	low _ToMainLow_MQ
  3727  001A16  0101               	movlb	1	; () banked
  3728  001A18  6F00               	movwf	recv_msg@qptr& (0+255),b
  3729  001A1A  C0C4  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3730  001A1E  0101               	movlb	1	; () banked
  3731  001A20  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3732  001A24  0101               	movlb	1	; () banked
  3733  001A26  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3734  001A2A  0101               	movlb	1	; () banked
  3735  001A2C  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3736  001A30  0101               	movlb	1	; () banked
  3737  001A32  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3738  001A36  EC97  F005         	call	_recv_msg	;wreg free
  3739  001A3A  0012               	return	
  3740  001A3C                     __end_of_ToMainLow_recvmsg:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           intcon2	equ	0xFF1
  3750                           postinc0	equ	0xFEE
  3751                           wreg	equ	0xFE8
  3752                           indf1	equ	0xFE7
  3753                           fsr1h	equ	0xFE2
  3754                           fsr1l	equ	0xFE1
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _ToMainHigh_recvmsg *****************
  3763 ;; Defined at:
  3764 ;;		line 135 in file "../src/messages.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  maxlength       1    wreg     unsigned char 
  3767 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3768 ;;		 -> main@msgtype(1), 
  3769 ;;  data            2   14[BANK1 ] PTR void 
  3770 ;;		 -> main@msgbuffer(15), 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      char 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3782 ;;      Params:         0       0       4       0       0
  3783 ;;      Locals:         0       1       0       0       0
  3784 ;;      Temps:          0       0       0       0       0
  3785 ;;      Totals:         0       1       4       0       0
  3786 ;;Total ram usage:        5 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:   12
  3789 ;; This function calls:
  3790 ;;		_recv_msg
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text23
  3797  001A3C                     __ptext23:
  3798                           	opt stack 0
  3799  001A3C                     _ToMainHigh_recvmsg:
  3800                           	opt stack 18
  3801                           
  3802                           ;incstack = 0
  3803                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3804  001A3C  0100               	movlb	0	; () banked
  3805  001A3E  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3809  001A40  0102               	movlb	2	; () banked
  3810  001A42  0E02               	movlw	high _ToMainHigh_MQ
  3811  001A44  0101               	movlb	1	; () banked
  3812  001A46  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3813  001A48  0102               	movlb	2	; () banked
  3814  001A4A  0E57               	movlw	low _ToMainHigh_MQ
  3815  001A4C  0101               	movlb	1	; () banked
  3816  001A4E  6F00               	movwf	recv_msg@qptr& (0+255),b
  3817  001A50  C0C4  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3818  001A54  0101               	movlb	1	; () banked
  3819  001A56  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3820  001A5A  0101               	movlb	1	; () banked
  3821  001A5C  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3822  001A60  0101               	movlb	1	; () banked
  3823  001A62  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3824  001A66  0101               	movlb	1	; () banked
  3825  001A68  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3826  001A6C  EC97  F005         	call	_recv_msg	;wreg free
  3827  001A70  0012               	return	
  3828  001A72                     __end_of_ToMainHigh_recvmsg:
  3829                           	opt stack 0
  3830                           tblptru	equ	0xFF8
  3831                           tblptrh	equ	0xFF7
  3832                           tblptrl	equ	0xFF6
  3833                           tablat	equ	0xFF5
  3834                           prodh	equ	0xFF4
  3835                           prodl	equ	0xFF3
  3836                           intcon	equ	0xFF2
  3837                           intcon2	equ	0xFF1
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           indf1	equ	0xFE7
  3841                           fsr1h	equ	0xFE2
  3842                           fsr1l	equ	0xFE1
  3843                           indf2	equ	0xFDF
  3844                           postinc2	equ	0xFDE
  3845                           postdec2	equ	0xFDD
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _recv_msg *****************
  3851 ;; Defined at:
  3852 ;;		line 63 in file "../src/messages.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3855 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3856 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3857 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3858 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  3859 ;;  data            2    5[BANK1 ] PTR void 
  3860 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3863 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3864 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3865 ;;  tlength         2    8[BANK1 ] unsigned int 
  3866 ;;  slot            1    7[BANK1 ] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      char 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3876 ;;      Params:         0       0       7       0       0
  3877 ;;      Locals:         0       0       5       0       0
  3878 ;;      Temps:          0       2       0       0       0
  3879 ;;      Totals:         0       2      12       0       0
  3880 ;;Total ram usage:       14 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:   11
  3883 ;; This function calls:
  3884 ;;		___awmod
  3885 ;;		_memcpy
  3886 ;; This function is called by:
  3887 ;;		_ToMainLow_recvmsg
  3888 ;;		_ToMainHigh_recvmsg
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text24
  3893  000B2E                     __ptext24:
  3894                           	opt stack 0
  3895  000B2E                     _recv_msg:
  3896                           	opt stack 18
  3897                           
  3898                           ;messages.c: 64: unsigned char slot;
  3899                           ;messages.c: 68: msg *qmsg;
  3900                           ;messages.c: 69: size_t tlength;
  3901                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3902                           
  3903                           ;incstack = 0
  3904  000B2E  0101               	movlb	1	; () banked
  3905  000B30  EE20 F056          	lfsr	2,86
  3906  000B34  0101               	movlb	1	; () banked
  3907  000B36  5100               	movf	recv_msg@qptr& (0+255),w,b
  3908  000B38  26D9               	addwf	fsr2l,f,c
  3909  000B3A  0101               	movlb	1	; () banked
  3910  000B3C  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3911  000B3E  22DA               	addwfc	fsr2h,f,c
  3912  000B40  50DF               	movf	indf2,w,c
  3913  000B42  0101               	movlb	1	; () banked
  3914  000B44  6F07               	movwf	recv_msg@slot& (0+255),b
  3915                           
  3916                           ; BSR set to: 1
  3917                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3918  000B46  0101               	movlb	1	; () banked
  3919  000B48  5107               	movf	recv_msg@slot& (0+255),w,b
  3920  000B4A  0D11               	mullw	17
  3921  000B4C  50F3               	movf	prodl,w,c
  3922  000B4E  0101               	movlb	1	; () banked
  3923  000B50  2500               	addwf	recv_msg@qptr& (0+255),w,b
  3924  000B52  0101               	movlb	1	; () banked
  3925  000B54  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  3926  000B56  50F4               	movf	prodh,w,c
  3927  000B58  0101               	movlb	1	; () banked
  3928  000B5A  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3929  000B5C  0101               	movlb	1	; () banked
  3930  000B5E  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3931                           
  3932                           ; BSR set to: 1
  3933                           ;messages.c: 74: if (qmsg->full == 1) {
  3934  000B60  0E01               	movlw	1
  3935  000B62  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  3936  000B66  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3937  000B6A  62DF               	cpfseq	indf2,c
  3938  000B6C  D07F               	goto	l3668
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3942  000B6E  0101               	movlb	1	; () banked
  3943  000B70  EE20 F001          	lfsr	2,1
  3944  000B74  0101               	movlb	1	; () banked
  3945  000B76  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3946  000B78  26D9               	addwf	fsr2l,f,c
  3947  000B7A  0101               	movlb	1	; () banked
  3948  000B7C  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3949  000B7E  22DA               	addwfc	fsr2h,f,c
  3950  000B80  50DF               	movf	indf2,w,c
  3951  000B82  0101               	movlb	1	; () banked
  3952  000B84  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  3953  000B86  B0D8               	btfsc	status,0,c
  3954  000B88  D002               	goto	l3652
  3955                           
  3956                           ; BSR set to: 1
  3957                           ;messages.c: 77: return (-3);
  3958  000B8A  0EFD               	movlw	253
  3959  000B8C  0012               	return	
  3960  000B8E                     l3652:
  3961                           
  3962                           ; BSR set to: 1
  3963                           ;messages.c: 78: }
  3964                           ;messages.c: 80: tlength = qmsg->length;
  3965  000B8E  0101               	movlb	1	; () banked
  3966  000B90  EE20 F001          	lfsr	2,1
  3967  000B94  0101               	movlb	1	; () banked
  3968  000B96  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3969  000B98  26D9               	addwf	fsr2l,f,c
  3970  000B9A  0101               	movlb	1	; () banked
  3971  000B9C  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3972  000B9E  22DA               	addwfc	fsr2h,f,c
  3973  000BA0  50DF               	movf	indf2,w,c
  3974  000BA2  0100               	movlb	0	; () banked
  3975  000BA4  6FC2               	movwf	??_recv_msg& (0+255),b
  3976  000BA6  0100               	movlb	0	; () banked
  3977  000BA8  51C2               	movf	??_recv_msg& (0+255),w,b
  3978  000BAA  0101               	movlb	1	; () banked
  3979  000BAC  6F08               	movwf	recv_msg@tlength& (0+255),b
  3980  000BAE  0101               	movlb	1	; () banked
  3981  000BB0  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3985  000BB2  0101               	movlb	1	; () banked
  3986  000BB4  0100               	movlb	0	; () banked
  3987  000BB6  C106  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  3988  000BBA  0101               	movlb	1	; () banked
  3989  000BBC  0100               	movlb	0	; () banked
  3990  000BBE  C105  F0B8         	movff	recv_msg@data,memcpy@d1
  3991  000BC2  0E03               	movlw	3
  3992  000BC4  0101               	movlb	1	; () banked
  3993  000BC6  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  3994  000BC8  0100               	movlb	0	; () banked
  3995  000BCA  6FC2               	movwf	??_recv_msg& (0+255),b
  3996  000BCC  0E00               	movlw	0
  3997  000BCE  0101               	movlb	1	; () banked
  3998  000BD0  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3999  000BD2  0100               	movlb	0	; () banked
  4000  000BD4  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  4001  000BD6  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  4002  000BDA  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  4003  000BDE  C108  F0BC         	movff	recv_msg@tlength,memcpy@n
  4004  000BE2  C109  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  4005  000BE6  EC4E  F00C         	call	_memcpy	;wreg free
  4006                           
  4007                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4008  000BEA  0101               	movlb	1	; () banked
  4009  000BEC  EE20 F056          	lfsr	2,86
  4010  000BF0  0101               	movlb	1	; () banked
  4011  000BF2  5100               	movf	recv_msg@qptr& (0+255),w,b
  4012  000BF4  26D9               	addwf	fsr2l,f,c
  4013  000BF6  0101               	movlb	1	; () banked
  4014  000BF8  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4015  000BFA  22DA               	addwfc	fsr2h,f,c
  4016  000BFC  0101               	movlb	1	; () banked
  4017  000BFE  EE10 F056          	lfsr	1,86
  4018  000C02  0101               	movlb	1	; () banked
  4019  000C04  5100               	movf	recv_msg@qptr& (0+255),w,b
  4020  000C06  26E1               	addwf	fsr1l,f,c
  4021  000C08  0101               	movlb	1	; () banked
  4022  000C0A  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4023  000C0C  22E2               	addwfc	fsr1h,f,c
  4024  000C0E  50E7               	movf	indf1,w,c
  4025  000C10  0100               	movlb	0	; () banked
  4026  000C12  6FC2               	movwf	??_recv_msg& (0+255),b
  4027  000C14  0E01               	movlw	1
  4028  000C16  0100               	movlb	0	; () banked
  4029  000C18  25C2               	addwf	??_recv_msg& (0+255),w,b
  4030  000C1A  0100               	movlb	0	; () banked
  4031  000C1C  6FB8               	movwf	___awmod@dividend& (0+255),b
  4032  000C1E  0100               	movlb	0	; () banked
  4033  000C20  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  4034  000C22  0E00               	movlw	0
  4035  000C24  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4036  000C26  0E00               	movlw	0
  4037  000C28  0100               	movlb	0	; () banked
  4038  000C2A  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  4039  000C2C  0E05               	movlw	5
  4040  000C2E  0100               	movlb	0	; () banked
  4041  000C30  6FBA               	movwf	___awmod@divisor& (0+255),b
  4042  000C32  ECBE  F008         	call	___awmod	;wreg free
  4043  000C36  0100               	movlb	0	; () banked
  4044  000C38  51B8               	movf	?___awmod& (0+255),w,b
  4045  000C3A  6EDF               	movwf	indf2,c
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4049  000C3C  0101               	movlb	1	; () banked
  4050  000C3E  EE20 F002          	lfsr	2,2
  4051  000C42  0101               	movlb	1	; () banked
  4052  000C44  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4053  000C46  26D9               	addwf	fsr2l,f,c
  4054  000C48  0101               	movlb	1	; () banked
  4055  000C4A  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4056  000C4C  22DA               	addwfc	fsr2h,f,c
  4057  000C4E  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  4058  000C52  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4059  000C56  CFDF FFE7          	movff	indf2,indf1
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;messages.c: 91: qmsg->full = 0;
  4063  000C5A  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4064  000C5E  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4065  000C62  0E00               	movlw	0
  4066  000C64  6EDF               	movwf	indf2,c
  4067                           
  4068                           ; BSR set to: 1
  4069                           ;messages.c: 92: return (tlength);
  4070  000C66  0101               	movlb	1	; () banked
  4071  000C68  5108               	movf	recv_msg@tlength& (0+255),w,b
  4072  000C6A  0012               	return	
  4073  000C6C                     l3668:
  4074                           
  4075                           ; BSR set to: 1
  4076                           ;messages.c: 94: return (-4);
  4077  000C6C  0EFC               	movlw	252
  4078  000C6E  0012               	return	
  4079  000C70                     __end_of_recv_msg:
  4080                           	opt stack 0
  4081                           tblptru	equ	0xFF8
  4082                           tblptrh	equ	0xFF7
  4083                           tblptrl	equ	0xFF6
  4084                           tablat	equ	0xFF5
  4085                           prodh	equ	0xFF4
  4086                           prodl	equ	0xFF3
  4087                           intcon	equ	0xFF2
  4088                           intcon2	equ	0xFF1
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           indf1	equ	0xFE7
  4092                           fsr1h	equ	0xFE2
  4093                           fsr1l	equ	0xFE1
  4094                           indf2	equ	0xFDF
  4095                           postinc2	equ	0xFDE
  4096                           postdec2	equ	0xFDD
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _memcpy *****************
  4102 ;; Defined at:
  4103 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  d1              2   56[BANK0 ] PTR void 
  4106 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4107 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  4108 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  4109 ;;  s1              2   58[BANK0 ] PTR const void 
  4110 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4111 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4112 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  4113 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4114 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4115 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  4116 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  4117 ;;  n               2   60[BANK0 ] unsigned int 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  4120 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4121 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4122 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  4123 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4124 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4125 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  4126 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  4127 ;;  d               2   62[BANK0 ] PTR unsigned char 
  4128 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4129 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  4130 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  2   56[BANK0 ] PTR void 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4140 ;;      Params:         0       6       0       0       0
  4141 ;;      Locals:         0       4       0       0       0
  4142 ;;      Temps:          0       0       0       0       0
  4143 ;;      Totals:         0      10       0       0       0
  4144 ;;Total ram usage:       10 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:   10
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_send_msg
  4151 ;;		_recv_msg
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text25
  4156  00189C                     __ptext25:
  4157                           	opt stack 0
  4158  00189C                     _memcpy:
  4159                           	opt stack 17
  4160                           
  4161                           ; BSR set to: 1
  4162                           ;incstack = 0
  4163  00189C  0100               	movlb	0	; () banked
  4164  00189E  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4165  0018A2  0100               	movlb	0	; () banked
  4166  0018A4  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4167  0018A8  0100               	movlb	0	; () banked
  4168  0018AA  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4169  0018AE  0100               	movlb	0	; () banked
  4170  0018B0  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4171  0018B4  D010               	goto	l3454
  4172  0018B6                     l3448:
  4173                           
  4174                           ; BSR set to: 0
  4175  0018B6  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4176  0018BA  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4177  0018BE  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4178  0018C2  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4179  0018C6  CFDF FFE7          	movff	indf2,indf1
  4180                           
  4181                           ; BSR set to: 0
  4182  0018CA  0100               	movlb	0	; () banked
  4183  0018CC  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4184  0018CE  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4185                           
  4186                           ; BSR set to: 0
  4187  0018D0  0100               	movlb	0	; () banked
  4188  0018D2  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4189  0018D4  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4190  0018D6                     l3454:
  4191                           
  4192                           ; BSR set to: 0
  4193  0018D6  0100               	movlb	0	; () banked
  4194  0018D8  07BC               	decf	memcpy@n& (0+255),f,b
  4195  0018DA  A0D8               	btfss	status,0,c
  4196  0018DC  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4197  0018DE  0100               	movlb	0	; () banked
  4198  0018E0  29BC               	incf	memcpy@n& (0+255),w,b
  4199  0018E2  B4D8               	btfsc	status,2,c
  4200  0018E4  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4201  0018E6  B4D8               	btfsc	status,2,c
  4202                           
  4203                           ; BSR set to: 0
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;	Return value of _memcpy is never used
  4207  0018E8  0012               	return	
  4208  0018EA  D7E5               	goto	l3448
  4209  0018EC                     __end_of_memcpy:
  4210                           	opt stack 0
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           prodh	equ	0xFF4
  4216                           prodl	equ	0xFF3
  4217                           intcon	equ	0xFF2
  4218                           intcon2	equ	0xFF1
  4219                           postinc0	equ	0xFEE
  4220                           wreg	equ	0xFE8
  4221                           indf1	equ	0xFE7
  4222                           fsr1h	equ	0xFE2
  4223                           fsr1l	equ	0xFE1
  4224                           indf2	equ	0xFDF
  4225                           postinc2	equ	0xFDE
  4226                           postdec2	equ	0xFDD
  4227                           fsr2h	equ	0xFDA
  4228                           fsr2l	equ	0xFD9
  4229                           status	equ	0xFD8
  4230                           
  4231 ;; *************** function ___awmod *****************
  4232 ;; Defined at:
  4233 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  dividend        2   56[BANK0 ] int 
  4236 ;;  divisor         2   58[BANK0 ] int 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  sign            1   61[BANK0 ] unsigned char 
  4239 ;;  counter         1   60[BANK0 ] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2   56[BANK0 ] int 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0, prodl
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4249 ;;      Params:         0       4       0       0       0
  4250 ;;      Locals:         0       2       0       0       0
  4251 ;;      Temps:          0       0       0       0       0
  4252 ;;      Totals:         0       6       0       0       0
  4253 ;;Total ram usage:        6 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:   10
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_send_msg
  4260 ;;		_recv_msg
  4261 ;;		i1_send_msg
  4262 ;;		i2_send_msg
  4263 ;;		i1_recv_msg
  4264 ;;		i2_recv_msg
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text26
  4269  00117C                     __ptext26:
  4270                           	opt stack 0
  4271  00117C                     ___awmod:
  4272                           	opt stack 17
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;incstack = 0
  4276  00117C  0E00               	movlw	0
  4277  00117E  0100               	movlb	0	; () banked
  4278  001180  6FBD               	movwf	___awmod@sign& (0+255),b
  4279                           
  4280                           ; BSR set to: 0
  4281  001182  0100               	movlb	0	; () banked
  4282  001184  51B9               	movf	(___awmod@dividend+1)& (0+255),w,b
  4283  001186  0A80               	xorlw	128
  4284  001188  6EF3               	movwf	prodl,c
  4285  00118A  0E80               	movlw	128
  4286  00118C  5CF3               	subwf	prodl,w,c
  4287  00118E  0E00               	movlw	0
  4288  001190  B4D8               	btfsc	status,2,c
  4289  001192  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4290  001194  B0D8               	btfsc	status,0,c
  4291  001196  D009               	goto	l3464
  4292                           
  4293                           ; BSR set to: 0
  4294  001198  0100               	movlb	0	; () banked
  4295  00119A  6DB8               	negf	___awmod@dividend& (0+255),b
  4296  00119C  0100               	movlb	0	; () banked
  4297  00119E  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4298  0011A0  B0D8               	btfsc	status,0,c
  4299  0011A2  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4300                           
  4301                           ; BSR set to: 0
  4302  0011A4  0E01               	movlw	1
  4303  0011A6  0100               	movlb	0	; () banked
  4304  0011A8  6FBD               	movwf	___awmod@sign& (0+255),b
  4305  0011AA                     l3464:
  4306                           
  4307                           ; BSR set to: 0
  4308  0011AA  0100               	movlb	0	; () banked
  4309  0011AC  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4310  0011AE  0A80               	xorlw	128
  4311  0011B0  6EF3               	movwf	prodl,c
  4312  0011B2  0E80               	movlw	128
  4313  0011B4  5CF3               	subwf	prodl,w,c
  4314  0011B6  0E00               	movlw	0
  4315  0011B8  B4D8               	btfsc	status,2,c
  4316  0011BA  5DBA               	subwf	___awmod@divisor& (0+255),w,b
  4317  0011BC  B0D8               	btfsc	status,0,c
  4318  0011BE  D006               	goto	l3468
  4319                           
  4320                           ; BSR set to: 0
  4321  0011C0  0100               	movlb	0	; () banked
  4322  0011C2  6DBA               	negf	___awmod@divisor& (0+255),b
  4323  0011C4  0100               	movlb	0	; () banked
  4324  0011C6  1FBB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4325  0011C8  B0D8               	btfsc	status,0,c
  4326  0011CA  2BBB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4327  0011CC                     l3468:
  4328                           
  4329                           ; BSR set to: 0
  4330  0011CC  0100               	movlb	0	; () banked
  4331  0011CE  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4332  0011D0  11BA               	iorwf	___awmod@divisor& (0+255),w,b
  4333  0011D2  B4D8               	btfsc	status,2,c
  4334  0011D4  D026               	goto	l3484
  4335                           
  4336                           ; BSR set to: 0
  4337  0011D6  0E01               	movlw	1
  4338  0011D8  0100               	movlb	0	; () banked
  4339  0011DA  6FBC               	movwf	___awmod@counter& (0+255),b
  4340  0011DC  D006               	goto	l3474
  4341  0011DE                     l3472:
  4342                           
  4343                           ; BSR set to: 0
  4344  0011DE  0100               	movlb	0	; () banked
  4345  0011E0  90D8               	bcf	status,0,c
  4346  0011E2  37BA               	rlcf	___awmod@divisor& (0+255),f,b
  4347  0011E4  37BB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4348  0011E6  0100               	movlb	0	; () banked
  4349  0011E8  2BBC               	incf	___awmod@counter& (0+255),f,b
  4350  0011EA                     l3474:
  4351                           
  4352                           ; BSR set to: 0
  4353  0011EA  0100               	movlb	0	; () banked
  4354  0011EC  AFBB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4355  0011EE  D7F7               	goto	l3472
  4356  0011F0                     l3476:
  4357                           
  4358                           ; BSR set to: 0
  4359  0011F0  0100               	movlb	0	; () banked
  4360  0011F2  51BA               	movf	___awmod@divisor& (0+255),w,b
  4361  0011F4  0100               	movlb	0	; () banked
  4362  0011F6  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4363  0011F8  0100               	movlb	0	; () banked
  4364  0011FA  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4365  0011FC  0100               	movlb	0	; () banked
  4366  0011FE  59B9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4367  001200  A0D8               	btfss	status,0,c
  4368  001202  D008               	goto	l3480
  4369                           
  4370                           ; BSR set to: 0
  4371  001204  0100               	movlb	0	; () banked
  4372  001206  51BA               	movf	___awmod@divisor& (0+255),w,b
  4373  001208  0100               	movlb	0	; () banked
  4374  00120A  5FB8               	subwf	___awmod@dividend& (0+255),f,b
  4375  00120C  0100               	movlb	0	; () banked
  4376  00120E  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4377  001210  0100               	movlb	0	; () banked
  4378  001212  5BB9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4379  001214                     l3480:
  4380                           
  4381                           ; BSR set to: 0
  4382  001214  0100               	movlb	0	; () banked
  4383  001216  90D8               	bcf	status,0,c
  4384  001218  33BB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4385  00121A  33BA               	rrcf	___awmod@divisor& (0+255),f,b
  4386                           
  4387                           ; BSR set to: 0
  4388  00121C  0100               	movlb	0	; () banked
  4389  00121E  2FBC               	decfsz	___awmod@counter& (0+255),f,b
  4390  001220  D7E7               	goto	l3476
  4391  001222                     l3484:
  4392                           
  4393                           ; BSR set to: 0
  4394  001222  0100               	movlb	0	; () banked
  4395  001224  51BD               	movf	___awmod@sign& (0+255),w,b
  4396  001226  B4D8               	btfsc	status,2,c
  4397  001228  D006               	goto	l3488
  4398                           
  4399                           ; BSR set to: 0
  4400  00122A  0100               	movlb	0	; () banked
  4401  00122C  6DB8               	negf	___awmod@dividend& (0+255),b
  4402  00122E  0100               	movlb	0	; () banked
  4403  001230  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4404  001232  B0D8               	btfsc	status,0,c
  4405  001234  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4406  001236                     l3488:
  4407                           
  4408                           ; BSR set to: 0
  4409  001236  C0B8  F0B8         	movff	___awmod@dividend,?___awmod
  4410  00123A  C0B9  F0B9         	movff	___awmod@dividend+1,?___awmod+1
  4411  00123E  0012               	return	
  4412  001240                     __end_of___awmod:
  4413                           	opt stack 0
  4414                           tblptru	equ	0xFF8
  4415                           tblptrh	equ	0xFF7
  4416                           tblptrl	equ	0xFF6
  4417                           tablat	equ	0xFF5
  4418                           prodh	equ	0xFF4
  4419                           prodl	equ	0xFF3
  4420                           intcon	equ	0xFF2
  4421                           intcon2	equ	0xFF1
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           indf1	equ	0xFE7
  4425                           fsr1h	equ	0xFE2
  4426                           fsr1l	equ	0xFE1
  4427                           indf2	equ	0xFDF
  4428                           postinc2	equ	0xFDE
  4429                           postdec2	equ	0xFDD
  4430                           fsr2h	equ	0xFDA
  4431                           fsr2l	equ	0xFD9
  4432                           status	equ	0xFD8
  4433                           
  4434 ;; *************** function _OpenTimer1 *****************
  4435 ;; Defined at:
  4436 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  config          1    wreg     unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  config          1   56[BANK0 ] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;		None               void
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4450 ;;      Params:         0       0       0       0       0
  4451 ;;      Locals:         0       1       0       0       0
  4452 ;;      Temps:          0       0       0       0       0
  4453 ;;      Totals:         0       1       0       0       0
  4454 ;;Total ram usage:        1 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:   10
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text27
  4465  001AA8                     __ptext27:
  4466                           	opt stack 0
  4467  001AA8                     _OpenTimer1:
  4468                           	opt stack 20
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;incstack = 0
  4472                           ;OpenTimer1@config stored from wreg
  4473  001AA8  0100               	movlb	0	; () banked
  4474  001AAA  6FB8               	movwf	OpenTimer1@config& (0+255),b
  4475                           
  4476                           ; BSR set to: 0
  4477  001AAC  0100               	movlb	0	; () banked
  4478  001AAE  51B8               	movf	OpenTimer1@config& (0+255),w,b
  4479  001AB0  0B7E               	andlw	126
  4480  001AB2  6ECD               	movwf	4045,c	;volatile
  4481                           
  4482                           ; BSR set to: 0
  4483  001AB4  0100               	movlb	0	; () banked
  4484  001AB6  ADB8               	btfss	OpenTimer1@config& (0+255),6,b
  4485  001AB8  D002               	goto	l567
  4486                           
  4487                           ; BSR set to: 0
  4488  001ABA  8ECD               	bsf	4045,7,c	;volatile
  4489  001ABC  D001               	goto	l3138
  4490  001ABE                     l567:
  4491                           
  4492                           ; BSR set to: 0
  4493  001ABE  9ECD               	bcf	4045,7,c	;volatile
  4494  001AC0                     l3138:
  4495                           
  4496                           ; BSR set to: 0
  4497  001AC0  0E00               	movlw	0
  4498  001AC2  6ECF               	movwf	4047,c	;volatile
  4499  001AC4  0E00               	movlw	0
  4500  001AC6  6ECE               	movwf	4046,c	;volatile
  4501                           
  4502                           ; BSR set to: 0
  4503  001AC8  909E               	bcf	3998,0,c	;volatile
  4504                           
  4505                           ; BSR set to: 0
  4506  001ACA  0100               	movlb	0	; () banked
  4507  001ACC  AFB8               	btfss	OpenTimer1@config& (0+255),7,b
  4508  001ACE  D002               	goto	l569
  4509                           
  4510                           ; BSR set to: 0
  4511  001AD0  809D               	bsf	3997,0,c	;volatile
  4512  001AD2  D001               	goto	l570
  4513  001AD4                     l569:
  4514                           
  4515                           ; BSR set to: 0
  4516  001AD4  909D               	bcf	3997,0,c	;volatile
  4517  001AD6                     l570:
  4518                           
  4519                           ; BSR set to: 0
  4520  001AD6  80CD               	bsf	4045,0,c	;volatile
  4521                           
  4522                           ; BSR set to: 0
  4523  001AD8  0012               	return	
  4524  001ADA                     __end_of_OpenTimer1:
  4525                           	opt stack 0
  4526                           tblptru	equ	0xFF8
  4527                           tblptrh	equ	0xFF7
  4528                           tblptrl	equ	0xFF6
  4529                           tablat	equ	0xFF5
  4530                           prodh	equ	0xFF4
  4531                           prodl	equ	0xFF3
  4532                           intcon	equ	0xFF2
  4533                           intcon2	equ	0xFF1
  4534                           postinc0	equ	0xFEE
  4535                           wreg	equ	0xFE8
  4536                           indf1	equ	0xFE7
  4537                           fsr1h	equ	0xFE2
  4538                           fsr1l	equ	0xFE1
  4539                           indf2	equ	0xFDF
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _InterruptHandlerLow *****************
  4547 ;; Defined at:
  4548 ;;		line 133 in file "../src/interrupts.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  sendy_stuff     1   71[COMRAM] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;		None               void
  4555 ;; Registers used:
  4556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4562 ;;      Params:         0       0       0       0       0
  4563 ;;      Locals:         1       0       0       0       0
  4564 ;;      Temps:         17       0       0       0       0
  4565 ;;      Totals:        18       0       0       0       0
  4566 ;;Total ram usage:       18 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    9
  4569 ;; This function calls:
  4570 ;;		_ToMainLow_sendmsg
  4571 ;;		_timer0_int_handler
  4572 ;;		_timer1_int_handler
  4573 ;;		_uart_receive_interrupt_handler
  4574 ;;		_uart_transmit_interrupt_handler
  4575 ;;		i1_blip1
  4576 ;;		i1_blip2
  4577 ;;		i1_blip3
  4578 ;; This function is called by:
  4579 ;;		Interrupt level 1
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	intcodelo
  4584  000018                     __pintcodelo:
  4585                           	opt stack 0
  4586  000018                     _InterruptHandlerLow:
  4587                           	opt stack 16
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;incstack = 0
  4591  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4592  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4593  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4594  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4595  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4596  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4597  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4598  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4599  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4600  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4601  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4602  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4603  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4604  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4605  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4606  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4607  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4608                           
  4609                           ;interrupts.c: 134: static unsigned char encoder_ticks=0;
  4610                           ;interrupts.c: 137: if (PIR1bits.TMR1IF) {
  4611  00005C  A09E               	btfss	3998,0,c	;volatile
  4612  00005E  D005               	goto	i1l4088
  4613                           
  4614                           ;interrupts.c: 138: PIR1bits.TMR1IF = 0;
  4615  000060  909E               	bcf	3998,0,c	;volatile
  4616                           
  4617                           ;interrupts.c: 140: blip1();
  4618  000062  EC96  F00E         	call	i1_blip1	;wreg free
  4619                           
  4620                           ;interrupts.c: 142: timer1_int_handler();
  4621  000066  ECCB  F00D         	call	_timer1_int_handler	;wreg free
  4622  00006A                     i1l4088:
  4623                           
  4624                           ;interrupts.c: 143: }
  4625                           ;interrupts.c: 146: if (INTCONbits.TMR0IF) {
  4626  00006A  A4F2               	btfss	intcon,2,c	;volatile
  4627  00006C  D006               	goto	i1l4098
  4628                           
  4629                           ;interrupts.c: 147: INTCONbits.TMR0IF = 0;
  4630  00006E  94F2               	bcf	intcon,2,c	;volatile
  4631                           
  4632                           ;interrupts.c: 149: blip2();
  4633  000070  EC92  F00E         	call	i1_blip2	;wreg free
  4634                           
  4635                           ;interrupts.c: 151: encoder_ticks++;
  4636  000074  2A5D               	incf	InterruptHandlerLow@encoder_ticks,f,c
  4637                           
  4638                           ;interrupts.c: 153: timer0_int_handler();
  4639  000076  EC6E  F00E         	call	_timer0_int_handler	;wreg free
  4640  00007A                     i1l4098:
  4641                           
  4642                           ;interrupts.c: 154: }
  4643                           ;interrupts.c: 157: if (PIR1bits.RCIF) {
  4644  00007A  AA9E               	btfss	3998,5,c	;volatile
  4645  00007C  D003               	goto	i1l4104
  4646                           
  4647                           ;interrupts.c: 158: PIR1bits.RCIF = 0;
  4648  00007E  9A9E               	bcf	3998,5,c	;volatile
  4649                           
  4650                           ;interrupts.c: 162: uart_receive_interrupt_handler();
  4651  000080  ECD2  F004         	call	_uart_receive_interrupt_handler	;wreg free
  4652  000084                     i1l4104:
  4653                           
  4654                           ;interrupts.c: 163: }
  4655                           ;interrupts.c: 167: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4656  000084  B89E               	btfsc	3998,4,c	;volatile
  4657  000086  A89D               	btfss	3997,4,c	;volatile
  4658  000088  D002               	goto	i1l4110
  4659                           
  4660                           ;interrupts.c: 168: {
  4661                           ;interrupts.c: 172: uart_transmit_interrupt_handler();
  4662  00008A  EC88  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4663  00008E                     i1l4110:
  4664                           
  4665                           ;interrupts.c: 176: }
  4666                           ;interrupts.c: 179: if( PIR1bits.ADIF )
  4667  00008E  AC9E               	btfss	3998,6,c	;volatile
  4668  000090  D012               	goto	i1l65
  4669                           
  4670                           ;interrupts.c: 180: {
  4671                           ;interrupts.c: 181: PIR1bits.ADIF = 0;
  4672  000092  9C9E               	bcf	3998,6,c	;volatile
  4673                           
  4674                           ;interrupts.c: 183: unsigned char sendy_stuff = TMR0L;
  4675  000094  CFD6 F048          	movff	4054,InterruptHandlerLow@sendy_stuff	;volatile
  4676                           
  4677                           ;interrupts.c: 185: TMR0L = 0;
  4678  000098  0E00               	movlw	0
  4679  00009A  6ED6               	movwf	4054,c	;volatile
  4680                           
  4681                           ;interrupts.c: 187: encoder_ticks = 0;
  4682  00009C  0E00               	movlw	0
  4683  00009E  6E5D               	movwf	InterruptHandlerLow@encoder_ticks,c
  4684                           
  4685                           ;interrupts.c: 189: ToMainLow_sendmsg(1,47,(void *) &sendy_stuff );
  4686  0000A0  0E2F               	movlw	47
  4687  0000A2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4688  0000A4  0E00               	movlw	high InterruptHandlerLow@sendy_stuff
  4689  0000A6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4690  0000A8  0E48               	movlw	low InterruptHandlerLow@sendy_stuff
  4691  0000AA  6E18               	movwf	ToMainLow_sendmsg@data,c
  4692  0000AC  0E01               	movlw	1
  4693  0000AE  EC09  F00E         	call	_ToMainLow_sendmsg
  4694                           
  4695                           ;interrupts.c: 191: blip3();
  4696  0000B2  EC8E  F00E         	call	i1_blip3	;wreg free
  4697  0000B6                     i1l65:
  4698  0000B6  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4699  0000BA  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4700  0000BE  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4701  0000C2  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4702  0000C6  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4703  0000CA  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4704  0000CE  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4705  0000D2  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4706  0000D6  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4707  0000DA  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4708  0000DE  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4709  0000E2  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4710  0000E6  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4711  0000EA  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4712  0000EE  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4713  0000F2  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4714  0000F6  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4715  0000FA  0010               	retfie	
  4716  0000FC                     __end_of_InterruptHandlerLow:
  4717                           	opt stack 0
  4718                           pclatu	equ	0xFFB
  4719                           pclath	equ	0xFFA
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           prodh	equ	0xFF4
  4725                           prodl	equ	0xFF3
  4726                           intcon	equ	0xFF2
  4727                           intcon2	equ	0xFF1
  4728                           postinc0	equ	0xFEE
  4729                           fsr0h	equ	0xFEA
  4730                           fsr0l	equ	0xFE9
  4731                           wreg	equ	0xFE8
  4732                           indf1	equ	0xFE7
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           bsr	equ	0xFE0
  4736                           indf2	equ	0xFDF
  4737                           postinc2	equ	0xFDE
  4738                           postdec2	equ	0xFDD
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           status	equ	0xFD8
  4742                           
  4743 ;; *************** function i1_blip3 *****************
  4744 ;; Defined at:
  4745 ;;		line 32 in file "../src/debug.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;		None
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;		None               void
  4752 ;; Registers used:
  4753 ;;		None
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4759 ;;      Params:         0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0
  4762 ;;      Totals:         0       0       0       0       0
  4763 ;;Total ram usage:        0 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    5
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_InterruptHandlerLow
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text29
  4774  001D1C                     __ptext29:
  4775                           	opt stack 0
  4776  001D1C                     i1_blip3:
  4777                           	opt stack 19
  4778                           
  4779                           ;debug.c: 34: LATDbits.LD6 = 0;
  4780                           
  4781                           ;incstack = 0
  4782  001D1C  9C8C               	bcf	3980,6,c	;volatile
  4783                           
  4784                           ;debug.c: 35: LATDbits.LD6 = 1;
  4785  001D1E  8C8C               	bsf	3980,6,c	;volatile
  4786                           
  4787                           ;debug.c: 36: LATDbits.LD6 = 0;
  4788  001D20  9C8C               	bcf	3980,6,c	;volatile
  4789  001D22  0012               	return	
  4790  001D24                     __end_ofi1_blip3:
  4791                           	opt stack 0
  4792                           pclatu	equ	0xFFB
  4793                           pclath	equ	0xFFA
  4794                           tblptru	equ	0xFF8
  4795                           tblptrh	equ	0xFF7
  4796                           tblptrl	equ	0xFF6
  4797                           tablat	equ	0xFF5
  4798                           prodh	equ	0xFF4
  4799                           prodl	equ	0xFF3
  4800                           intcon	equ	0xFF2
  4801                           intcon2	equ	0xFF1
  4802                           postinc0	equ	0xFEE
  4803                           fsr0h	equ	0xFEA
  4804                           fsr0l	equ	0xFE9
  4805                           wreg	equ	0xFE8
  4806                           indf1	equ	0xFE7
  4807                           fsr1h	equ	0xFE2
  4808                           fsr1l	equ	0xFE1
  4809                           bsr	equ	0xFE0
  4810                           indf2	equ	0xFDF
  4811                           postinc2	equ	0xFDE
  4812                           postdec2	equ	0xFDD
  4813                           fsr2h	equ	0xFDA
  4814                           fsr2l	equ	0xFD9
  4815                           status	equ	0xFD8
  4816                           
  4817 ;; *************** function i1_blip2 *****************
  4818 ;; Defined at:
  4819 ;;		line 25 in file "../src/debug.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		None
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4833 ;;      Params:         0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0
  4836 ;;      Totals:         0       0       0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    5
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_InterruptHandlerLow
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text30
  4848  001D24                     __ptext30:
  4849                           	opt stack 0
  4850  001D24                     i1_blip2:
  4851                           	opt stack 19
  4852                           
  4853                           ;debug.c: 27: LATDbits.LD5 = 0;
  4854                           
  4855                           ;incstack = 0
  4856  001D24  9A8C               	bcf	3980,5,c	;volatile
  4857                           
  4858                           ;debug.c: 28: LATDbits.LD5 = 1;
  4859  001D26  8A8C               	bsf	3980,5,c	;volatile
  4860                           
  4861                           ;debug.c: 29: LATDbits.LD5 = 0;
  4862  001D28  9A8C               	bcf	3980,5,c	;volatile
  4863  001D2A  0012               	return	
  4864  001D2C                     __end_ofi1_blip2:
  4865                           	opt stack 0
  4866                           pclatu	equ	0xFFB
  4867                           pclath	equ	0xFFA
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           prodh	equ	0xFF4
  4873                           prodl	equ	0xFF3
  4874                           intcon	equ	0xFF2
  4875                           intcon2	equ	0xFF1
  4876                           postinc0	equ	0xFEE
  4877                           fsr0h	equ	0xFEA
  4878                           fsr0l	equ	0xFE9
  4879                           wreg	equ	0xFE8
  4880                           indf1	equ	0xFE7
  4881                           fsr1h	equ	0xFE2
  4882                           fsr1l	equ	0xFE1
  4883                           bsr	equ	0xFE0
  4884                           indf2	equ	0xFDF
  4885                           postinc2	equ	0xFDE
  4886                           postdec2	equ	0xFDD
  4887                           fsr2h	equ	0xFDA
  4888                           fsr2l	equ	0xFD9
  4889                           status	equ	0xFD8
  4890                           
  4891 ;; *************** function i1_blip1 *****************
  4892 ;; Defined at:
  4893 ;;		line 18 in file "../src/debug.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;		None               void
  4900 ;; Registers used:
  4901 ;;		None
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4907 ;;      Params:         0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0
  4910 ;;      Totals:         0       0       0       0       0
  4911 ;;Total ram usage:        0 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    5
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_InterruptHandlerLow
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text31
  4922  001D2C                     __ptext31:
  4923                           	opt stack 0
  4924  001D2C                     i1_blip1:
  4925                           	opt stack 19
  4926                           
  4927                           ;debug.c: 20: LATDbits.LD4 = 0;
  4928                           
  4929                           ;incstack = 0
  4930  001D2C  988C               	bcf	3980,4,c	;volatile
  4931                           
  4932                           ;debug.c: 21: LATDbits.LD4 = 1;
  4933  001D2E  888C               	bsf	3980,4,c	;volatile
  4934                           
  4935                           ;debug.c: 22: LATDbits.LD4 = 0;
  4936  001D30  988C               	bcf	3980,4,c	;volatile
  4937  001D32  0012               	return	
  4938  001D34                     __end_ofi1_blip1:
  4939                           	opt stack 0
  4940                           pclatu	equ	0xFFB
  4941                           pclath	equ	0xFFA
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           prodh	equ	0xFF4
  4947                           prodl	equ	0xFF3
  4948                           intcon	equ	0xFF2
  4949                           intcon2	equ	0xFF1
  4950                           postinc0	equ	0xFEE
  4951                           fsr0h	equ	0xFEA
  4952                           fsr0l	equ	0xFE9
  4953                           wreg	equ	0xFE8
  4954                           indf1	equ	0xFE7
  4955                           fsr1h	equ	0xFE2
  4956                           fsr1l	equ	0xFE1
  4957                           bsr	equ	0xFE0
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _uart_transmit_interrupt_handler *****************
  4966 ;; Defined at:
  4967 ;;		line 200 in file "../src/my_uart.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  message_stat    1   34[COMRAM] char 
  4972 ;;  data            4   29[COMRAM] unsigned char [4]
  4973 ;;  msgtype         1   33[COMRAM] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;		None               void
  4976 ;; Registers used:
  4977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4983 ;;      Params:         0       0       0       0       0
  4984 ;;      Locals:         6       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0
  4986 ;;      Totals:         6       0       0       0       0
  4987 ;;Total ram usage:        6 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    8
  4990 ;; This function calls:
  4991 ;;		_FromMainLow_recvmsg
  4992 ;; This function is called by:
  4993 ;;		_InterruptHandlerLow
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text32
  4998  001510                     __ptext32:
  4999                           	opt stack 0
  5000  001510                     _uart_transmit_interrupt_handler:
  5001                           	opt stack 16
  5002                           
  5003                           ;my_uart.c: 203: static unsigned char done = 1;
  5004                           ;my_uart.c: 204: static unsigned char index = 0;
  5005                           ;my_uart.c: 206: unsigned char data[4];
  5006                           ;my_uart.c: 209: unsigned char msgtype = 31;
  5007                           
  5008                           ;incstack = 0
  5009  001510  0E1F               	movlw	31
  5010  001512  6E22               	movwf	uart_transmit_interrupt_handler@msgtype,c
  5011                           
  5012                           ;my_uart.c: 211: if( done )
  5013  001514  5065               	movf	uart_transmit_interrupt_handler@done,w,c
  5014  001516  B4D8               	btfsc	status,2,c
  5015  001518  D02C               	goto	i1l4012
  5016                           
  5017                           ;my_uart.c: 212: {
  5018                           ;my_uart.c: 213: signed char message_status = FromMainLow_recvmsg(4,&msgtype, (void*)dat
      +                          a );
  5019  00151A  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  5020  00151C  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5021  00151E  0E22               	movlw	low uart_transmit_interrupt_handler@msgtype
  5022  001520  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5023  001522  0E00               	movlw	high uart_transmit_interrupt_handler@data
  5024  001524  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  5025  001526  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  5026  001528  6E1B               	movwf	FromMainLow_recvmsg@data,c
  5027  00152A  0E04               	movlw	4
  5028  00152C  ECF5  F00D         	call	_FromMainLow_recvmsg
  5029  001530  6E23               	movwf	uart_transmit_interrupt_handler@message_status,c
  5030                           
  5031                           ;my_uart.c: 215: if( message_status == -4)
  5032  001532  5023               	movf	uart_transmit_interrupt_handler@message_status,w,c
  5033  001534  0AFC               	xorlw	252
  5034  001536  A4D8               	btfss	status,2,c
  5035  001538  D002               	goto	i1l3988
  5036                           
  5037                           ;my_uart.c: 216: {
  5038                           ;my_uart.c: 218: PIE1bits.TX1IE = 0;
  5039  00153A  989D               	bcf	3997,4,c	;volatile
  5040                           
  5041                           ;my_uart.c: 219: }
  5042  00153C  0012               	return	
  5043  00153E                     i1l3988:
  5044                           
  5045                           ;my_uart.c: 220: else if( message_status > 0 )
  5046  00153E  5023               	movf	uart_transmit_interrupt_handler@message_status,w,c
  5047  001540  0A80               	xorlw	128
  5048  001542  0F7F               	addlw	-129
  5049  001544  A0D8               	btfss	status,0,c
  5050  001546  0012               	return	
  5051                           
  5052                           ;my_uart.c: 221: {
  5053                           ;my_uart.c: 223: index = 0;
  5054  001548  0E00               	movlw	0
  5055  00154A  6E64               	movwf	uart_transmit_interrupt_handler@index,c
  5056                           
  5057                           ;my_uart.c: 224: done = 0;
  5058  00154C  0E00               	movlw	0
  5059  00154E  6E65               	movwf	uart_transmit_interrupt_handler@done,c
  5060                           
  5061                           ;my_uart.c: 226: TXREG1 = data[index];
  5062  001550  5064               	movf	uart_transmit_interrupt_handler@index,w,c
  5063  001552  0D01               	mullw	1
  5064  001554  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  5065  001556  24F3               	addwf	prodl,w,c
  5066  001558  6ED9               	movwf	fsr2l,c
  5067  00155A  0E00               	movlw	high uart_transmit_interrupt_handler@data
  5068  00155C  20F4               	addwfc	prodh,w,c
  5069  00155E  6EDA               	movwf	fsr2h,c
  5070  001560  50DF               	movf	indf2,w,c
  5071  001562  6EAD               	movwf	4013,c	;volatile
  5072                           
  5073                           ;my_uart.c: 227: index++;
  5074  001564  2A64               	incf	uart_transmit_interrupt_handler@index,f,c
  5075                           
  5076                           ;my_uart.c: 228: if( index >= 4 )
  5077  001566  0E03               	movlw	3
  5078  001568  6464               	cpfsgt	uart_transmit_interrupt_handler@index,c
  5079  00156A  0012               	return	
  5080                           
  5081                           ;my_uart.c: 229: {
  5082                           ;my_uart.c: 230: done = 1;
  5083  00156C  0E01               	movlw	1
  5084  00156E  6E65               	movwf	uart_transmit_interrupt_handler@done,c
  5085  001570  0012               	return	
  5086  001572                     i1l4012:
  5087                           
  5088                           ;my_uart.c: 247: else
  5089                           ;my_uart.c: 248: {
  5090                           ;my_uart.c: 250: TXREG1 = data[index];
  5091  001572  5064               	movf	uart_transmit_interrupt_handler@index,w,c
  5092  001574  0D01               	mullw	1
  5093  001576  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  5094  001578  24F3               	addwf	prodl,w,c
  5095  00157A  6ED9               	movwf	fsr2l,c
  5096  00157C  0E00               	movlw	high uart_transmit_interrupt_handler@data
  5097  00157E  20F4               	addwfc	prodh,w,c
  5098  001580  6EDA               	movwf	fsr2h,c
  5099  001582  50DF               	movf	indf2,w,c
  5100  001584  6EAD               	movwf	4013,c	;volatile
  5101                           
  5102                           ;my_uart.c: 251: index++;
  5103  001586  2A64               	incf	uart_transmit_interrupt_handler@index,f,c
  5104                           
  5105                           ;my_uart.c: 252: if( index >= 4 )
  5106  001588  0E03               	movlw	3
  5107  00158A  6464               	cpfsgt	uart_transmit_interrupt_handler@index,c
  5108  00158C  0012               	return	
  5109                           
  5110                           ;my_uart.c: 253: {
  5111                           ;my_uart.c: 254: done = 1;
  5112  00158E  0E01               	movlw	1
  5113  001590  6E65               	movwf	uart_transmit_interrupt_handler@done,c
  5114  001592  0012               	return	
  5115  001594                     __end_of_uart_transmit_interrupt_handler:
  5116                           	opt stack 0
  5117                           pclatu	equ	0xFFB
  5118                           pclath	equ	0xFFA
  5119                           tblptru	equ	0xFF8
  5120                           tblptrh	equ	0xFF7
  5121                           tblptrl	equ	0xFF6
  5122                           tablat	equ	0xFF5
  5123                           prodh	equ	0xFF4
  5124                           prodl	equ	0xFF3
  5125                           intcon	equ	0xFF2
  5126                           intcon2	equ	0xFF1
  5127                           postinc0	equ	0xFEE
  5128                           fsr0h	equ	0xFEA
  5129                           fsr0l	equ	0xFE9
  5130                           wreg	equ	0xFE8
  5131                           indf1	equ	0xFE7
  5132                           fsr1h	equ	0xFE2
  5133                           fsr1l	equ	0xFE1
  5134                           bsr	equ	0xFE0
  5135                           indf2	equ	0xFDF
  5136                           postinc2	equ	0xFDE
  5137                           postdec2	equ	0xFDD
  5138                           fsr2h	equ	0xFDA
  5139                           fsr2l	equ	0xFD9
  5140                           status	equ	0xFD8
  5141                           
  5142 ;; *************** function _FromMainLow_recvmsg *****************
  5143 ;; Defined at:
  5144 ;;		line 159 in file "../src/messages.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  maxlength       1    wreg     unsigned char 
  5147 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5148 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5149 ;;  data            2   26[COMRAM] PTR void 
  5150 ;;		 -> uart_transmit_interrupt_handler@data(4), 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  maxlength       1   28[COMRAM] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      char 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5162 ;;      Params:         4       0       0       0       0
  5163 ;;      Locals:         1       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0
  5165 ;;      Totals:         5       0       0       0       0
  5166 ;;Total ram usage:        5 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    7
  5169 ;; This function calls:
  5170 ;;		i1_recv_msg
  5171 ;; This function is called by:
  5172 ;;		_uart_transmit_interrupt_handler
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text33
  5177  001BEA                     __ptext33:
  5178                           	opt stack 0
  5179  001BEA                     _FromMainLow_recvmsg:
  5180                           	opt stack 16
  5181                           
  5182                           ;incstack = 0
  5183                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5184  001BEA  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5185                           
  5186                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5187  001BEC  0102               	movlb	2	; () banked
  5188  001BEE  0E02               	movlw	high _FromMainLow_MQ
  5189  001BF0  6E0C               	movwf	i1recv_msg@qptr+1,c
  5190  001BF2  0102               	movlb	2	; () banked
  5191  001BF4  0E00               	movlw	low _FromMainLow_MQ
  5192  001BF6  6E0B               	movwf	i1recv_msg@qptr,c
  5193  001BF8  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5194  001BFC  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5195  001C00  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5196  001C04  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5197  001C08  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5198  001C0C  ECE5  F007         	call	i1_recv_msg	;wreg free
  5199  001C10  0012               	return	
  5200  001C12                     __end_of_FromMainLow_recvmsg:
  5201                           	opt stack 0
  5202                           pclatu	equ	0xFFB
  5203                           pclath	equ	0xFFA
  5204                           tblptru	equ	0xFF8
  5205                           tblptrh	equ	0xFF7
  5206                           tblptrl	equ	0xFF6
  5207                           tablat	equ	0xFF5
  5208                           prodh	equ	0xFF4
  5209                           prodl	equ	0xFF3
  5210                           intcon	equ	0xFF2
  5211                           intcon2	equ	0xFF1
  5212                           postinc0	equ	0xFEE
  5213                           fsr0h	equ	0xFEA
  5214                           fsr0l	equ	0xFE9
  5215                           wreg	equ	0xFE8
  5216                           indf1	equ	0xFE7
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           bsr	equ	0xFE0
  5220                           indf2	equ	0xFDF
  5221                           postinc2	equ	0xFDE
  5222                           postdec2	equ	0xFDD
  5223                           fsr2h	equ	0xFDA
  5224                           fsr2l	equ	0xFD9
  5225                           status	equ	0xFD8
  5226                           
  5227 ;; *************** function i1_recv_msg *****************
  5228 ;; Defined at:
  5229 ;;		line 63 in file "../src/messages.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5232 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5233 ;;  maxlength       1   12[COMRAM] unsigned char 
  5234 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5235 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  5236 ;;  data            2   15[COMRAM] PTR void 
  5237 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5240 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5241 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5242 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5243 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      char 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5253 ;;      Params:         7       0       0       0       0
  5254 ;;      Locals:         5       0       0       0       0
  5255 ;;      Temps:          2       0       0       0       0
  5256 ;;      Totals:        14       0       0       0       0
  5257 ;;Total ram usage:       14 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    6
  5260 ;; This function calls:
  5261 ;;		i1___awmod
  5262 ;;		i1_memcpy
  5263 ;; This function is called by:
  5264 ;;		_FromMainLow_recvmsg
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text34
  5269  000FCA                     __ptext34:
  5270                           	opt stack 0
  5271  000FCA                     i1_recv_msg:
  5272                           	opt stack 16
  5273                           
  5274                           ;messages.c: 64: unsigned char slot;
  5275                           ;messages.c: 68: msg *qmsg;
  5276                           ;messages.c: 69: size_t tlength;
  5277                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5278                           
  5279                           ;incstack = 0
  5280  000FCA  EE20 F056          	lfsr	2,86
  5281  000FCE  500B               	movf	i1recv_msg@qptr,w,c
  5282  000FD0  26D9               	addwf	fsr2l,f,c
  5283  000FD2  500C               	movf	i1recv_msg@qptr+1,w,c
  5284  000FD4  22DA               	addwfc	fsr2h,f,c
  5285  000FD6  50DF               	movf	indf2,w,c
  5286  000FD8  6E14               	movwf	i1recv_msg@slot,c
  5287                           
  5288                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5289  000FDA  5014               	movf	i1recv_msg@slot,w,c
  5290  000FDC  0D11               	mullw	17
  5291  000FDE  50F3               	movf	prodl,w,c
  5292  000FE0  240B               	addwf	i1recv_msg@qptr,w,c
  5293  000FE2  6E17               	movwf	i1recv_msg@qmsg,c
  5294  000FE4  50F4               	movf	prodh,w,c
  5295  000FE6  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5296  000FE8  6E18               	movwf	i1recv_msg@qmsg+1,c
  5297                           
  5298                           ;messages.c: 74: if (qmsg->full == 1) {
  5299  000FEA  0E01               	movlw	1
  5300  000FEC  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5301  000FF0  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5302  000FF4  62DF               	cpfseq	indf2,c
  5303  000FF6  D05B               	goto	i1l3596
  5304                           
  5305                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5306  000FF8  EE20 F001          	lfsr	2,1
  5307  000FFC  5017               	movf	i1recv_msg@qmsg,w,c
  5308  000FFE  26D9               	addwf	fsr2l,f,c
  5309  001000  5018               	movf	i1recv_msg@qmsg+1,w,c
  5310  001002  22DA               	addwfc	fsr2h,f,c
  5311  001004  50DF               	movf	indf2,w,c
  5312  001006  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5313  001008  B0D8               	btfsc	status,0,c
  5314  00100A  D002               	goto	i1l3580
  5315                           
  5316                           ;messages.c: 77: return (-3);
  5317  00100C  0EFD               	movlw	253
  5318  00100E  0012               	return	
  5319  001010                     i1l3580:
  5320                           
  5321                           ;messages.c: 78: }
  5322                           ;messages.c: 80: tlength = qmsg->length;
  5323  001010  EE20 F001          	lfsr	2,1
  5324  001014  5017               	movf	i1recv_msg@qmsg,w,c
  5325  001016  26D9               	addwf	fsr2l,f,c
  5326  001018  5018               	movf	i1recv_msg@qmsg+1,w,c
  5327  00101A  22DA               	addwfc	fsr2h,f,c
  5328  00101C  50DF               	movf	indf2,w,c
  5329  00101E  6E12               	movwf	??i1_recv_msg& (0+255),c
  5330  001020  5012               	movf	??i1_recv_msg,w,c
  5331  001022  6E15               	movwf	i1recv_msg@tlength,c
  5332  001024  6A16               	clrf	i1recv_msg@tlength+1,c
  5333                           
  5334                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5335  001026  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5336  00102A  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5337  00102E  0E03               	movlw	3
  5338  001030  2417               	addwf	i1recv_msg@qmsg,w,c
  5339  001032  6E12               	movwf	??i1_recv_msg& (0+255),c
  5340  001034  0E00               	movlw	0
  5341  001036  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5342  001038  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5343  00103A  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5344  00103E  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5345  001042  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5346  001046  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5347  00104A  ECC4  F00C         	call	i1_memcpy	;wreg free
  5348                           
  5349                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5350  00104E  EE20 F056          	lfsr	2,86
  5351  001052  500B               	movf	i1recv_msg@qptr,w,c
  5352  001054  26D9               	addwf	fsr2l,f,c
  5353  001056  500C               	movf	i1recv_msg@qptr+1,w,c
  5354  001058  22DA               	addwfc	fsr2h,f,c
  5355  00105A  EE10 F056          	lfsr	1,86
  5356  00105E  500B               	movf	i1recv_msg@qptr,w,c
  5357  001060  26E1               	addwf	fsr1l,f,c
  5358  001062  500C               	movf	i1recv_msg@qptr+1,w,c
  5359  001064  22E2               	addwfc	fsr1h,f,c
  5360  001066  50E7               	movf	indf1,w,c
  5361  001068  6E12               	movwf	??i1_recv_msg& (0+255),c
  5362  00106A  0E01               	movlw	1
  5363  00106C  2412               	addwf	??i1_recv_msg,w,c
  5364  00106E  6E01               	movwf	i1___awmod@dividend,c
  5365  001070  6A02               	clrf	i1___awmod@dividend+1,c
  5366  001072  0E00               	movlw	0
  5367  001074  2202               	addwfc	i1___awmod@dividend+1,f,c
  5368  001076  0E00               	movlw	0
  5369  001078  6E04               	movwf	i1___awmod@divisor+1,c
  5370  00107A  0E05               	movlw	5
  5371  00107C  6E03               	movwf	i1___awmod@divisor,c
  5372  00107E  EC40  F00A         	call	i1___awmod	;wreg free
  5373  001082  5001               	movf	?i1___awmod,w,c
  5374  001084  6EDF               	movwf	indf2,c
  5375                           
  5376                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5377  001086  EE20 F002          	lfsr	2,2
  5378  00108A  5017               	movf	i1recv_msg@qmsg,w,c
  5379  00108C  26D9               	addwf	fsr2l,f,c
  5380  00108E  5018               	movf	i1recv_msg@qmsg+1,w,c
  5381  001090  22DA               	addwfc	fsr2h,f,c
  5382  001092  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5383  001096  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5384  00109A  CFDF FFE7          	movff	indf2,indf1
  5385                           
  5386                           ;messages.c: 91: qmsg->full = 0;
  5387  00109E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5388  0010A2  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5389  0010A6  0E00               	movlw	0
  5390  0010A8  6EDF               	movwf	indf2,c
  5391                           
  5392                           ;messages.c: 92: return (tlength);
  5393  0010AA  5015               	movf	i1recv_msg@tlength,w,c
  5394  0010AC  0012               	return	
  5395  0010AE                     i1l3596:
  5396                           
  5397                           ;messages.c: 94: return (-4);
  5398  0010AE  0EFC               	movlw	252
  5399  0010B0  0012               	return	
  5400  0010B2                     __end_ofi1_recv_msg:
  5401                           	opt stack 0
  5402                           pclatu	equ	0xFFB
  5403                           pclath	equ	0xFFA
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           intcon2	equ	0xFF1
  5412                           postinc0	equ	0xFEE
  5413                           fsr0h	equ	0xFEA
  5414                           fsr0l	equ	0xFE9
  5415                           wreg	equ	0xFE8
  5416                           indf1	equ	0xFE7
  5417                           fsr1h	equ	0xFE2
  5418                           fsr1l	equ	0xFE1
  5419                           bsr	equ	0xFE0
  5420                           indf2	equ	0xFDF
  5421                           postinc2	equ	0xFDE
  5422                           postdec2	equ	0xFDD
  5423                           fsr2h	equ	0xFDA
  5424                           fsr2l	equ	0xFD9
  5425                           status	equ	0xFD8
  5426                           
  5427 ;; *************** function _uart_receive_interrupt_handler *****************
  5428 ;; Defined at:
  5429 ;;		line 61 in file "../src/my_uart.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5434 ;;  message_coun    1   50[COMRAM] unsigned char 
  5435 ;;  status          1   42[COMRAM] unsigned char 
  5436 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5437 ;;  msg_id          1   51[COMRAM] unsigned char 
  5438 ;;  status          1   43[COMRAM] unsigned char 
  5439 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5440 ;;  bad_counter_    2   44[COMRAM] unsigned char [2]
  5441 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5442 ;;  i               2   52[COMRAM] int 
  5443 ;;  checksum        1   46[COMRAM] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;		None               void
  5446 ;; Registers used:
  5447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5453 ;;      Params:         0       0       0       0       0
  5454 ;;      Locals:        26       0       0       0       0
  5455 ;;      Temps:          2       0       0       0       0
  5456 ;;      Totals:        28       0       0       0       0
  5457 ;;Total ram usage:       28 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    8
  5460 ;; This function calls:
  5461 ;;		_ToMainLow_sendmsg
  5462 ;; This function is called by:
  5463 ;;		_InterruptHandlerLow
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text35
  5468  0009A4                     __ptext35:
  5469                           	opt stack 0
  5470  0009A4                     _uart_receive_interrupt_handler:
  5471                           	opt stack 16
  5472                           
  5473                           ;my_uart.c: 64: static unsigned char frame[(14 + 2 + 2)];
  5474                           ;my_uart.c: 65: static unsigned char index = 0;
  5475                           ;my_uart.c: 66: static unsigned char done = 0;
  5476                           ;my_uart.c: 67: static unsigned char received_counter = 0;
  5477                           ;my_uart.c: 69: static unsigned char start_byte_bad = 0;
  5478                           ;my_uart.c: 70: static unsigned char error = 0;
  5479                           ;my_uart.c: 72: if(!done)
  5480                           
  5481                           ;incstack = 0
  5482  0009A4  665F               	tstfsz	uart_receive_interrupt_handler@done,c
  5483  0009A6  D03B               	goto	i1l3922
  5484                           
  5485                           ;my_uart.c: 73: {
  5486                           ;my_uart.c: 74: frame[index] = RCREG1;
  5487  0009A8  5061               	movf	uart_receive_interrupt_handler@index,w,c
  5488  0009AA  0D01               	mullw	1
  5489  0009AC  0E49               	movlw	low uart_receive_interrupt_handler@frame
  5490  0009AE  24F3               	addwf	prodl,w,c
  5491  0009B0  6ED9               	movwf	fsr2l,c
  5492  0009B2  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5493  0009B4  20F4               	addwfc	prodh,w,c
  5494  0009B6  6EDA               	movwf	fsr2h,c
  5495  0009B8  CFAE FFDF          	movff	4014,indf2	;volatile
  5496                           
  5497                           ;my_uart.c: 78: }
  5498                           ;my_uart.c: 79: if( index == 0 )
  5499                           
  5500                           ;my_uart.c: 76: {
  5501  0009BC  6661               	tstfsz	uart_receive_interrupt_handler@index,c
  5502  0009BE  D018               	goto	i1l3908
  5503                           
  5504                           ;my_uart.c: 80: {
  5505                           ;my_uart.c: 81: if( frame[0] != 0xff )
  5506  0009C0  2849               	incf	uart_receive_interrupt_handler@frame,w,c
  5507  0009C2  B4D8               	btfsc	status,2,c
  5508  0009C4  D012               	goto	i1l3906
  5509                           
  5510                           ;my_uart.c: 82: {
  5511                           ;my_uart.c: 83: if( !start_byte_bad )
  5512  0009C6  6663               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5513  0009C8  D00D               	goto	i1l3900
  5514                           
  5515                           ;my_uart.c: 84: {
  5516                           ;my_uart.c: 85: start_byte_bad = 1;
  5517  0009CA  0E01               	movlw	1
  5518  0009CC  6E63               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5519                           
  5520                           ;my_uart.c: 86: unsigned char bad_start_id = received_counter;
  5521  0009CE  C062  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5522                           
  5523                           ;my_uart.c: 87: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5524  0009D2  0E22               	movlw	34
  5525  0009D4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5526  0009D6  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5527  0009D8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5528  0009DA  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5529  0009DC  6E18               	movwf	ToMainLow_sendmsg@data,c
  5530  0009DE  0E01               	movlw	1
  5531  0009E0  EC09  F00E         	call	_ToMainLow_sendmsg
  5532  0009E4                     i1l3900:
  5533                           
  5534                           ;my_uart.c: 89: }
  5535                           ;my_uart.c: 90: index = 0;
  5536  0009E4  0E00               	movlw	0
  5537  0009E6  6E61               	movwf	uart_receive_interrupt_handler@index,c
  5538  0009E8  0012               	return	
  5539  0009EA                     i1l3906:
  5540                           
  5541                           ;my_uart.c: 93: else
  5542                           ;my_uart.c: 94: {
  5543                           ;my_uart.c: 95: start_byte_bad = 0;
  5544  0009EA  0E00               	movlw	0
  5545  0009EC  6E63               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5546  0009EE  D016               	goto	i1l3920
  5547  0009F0                     i1l3908:
  5548                           
  5549                           ;my_uart.c: 98: else if( index >= (14 + 2 + 2) - 1 )
  5550  0009F0  0E10               	movlw	16
  5551  0009F2  6461               	cpfsgt	uart_receive_interrupt_handler@index,c
  5552  0009F4  D013               	goto	i1l3920
  5553                           
  5554                           ;my_uart.c: 99: {
  5555                           ;my_uart.c: 100: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5556  0009F6  505A               	movf	uart_receive_interrupt_handler@frame+17,w,c
  5557  0009F8  0AFE               	xorlw	254
  5558  0009FA  B4D8               	btfsc	status,2,c
  5559  0009FC  D00F               	goto	i1l3920
  5560                           
  5561                           ;my_uart.c: 101: {
  5562                           ;my_uart.c: 103: index = 0;
  5563  0009FE  0E00               	movlw	0
  5564  000A00  6E61               	movwf	uart_receive_interrupt_handler@index,c
  5565                           
  5566                           ;my_uart.c: 106: unsigned char bad_end_id = received_counter;
  5567  000A02  C062  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5568                           
  5569                           ;my_uart.c: 107: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5570  000A06  0E23               	movlw	35
  5571  000A08  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5572  000A0A  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5573  000A0C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5574  000A0E  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5575  000A10  6E18               	movwf	ToMainLow_sendmsg@data,c
  5576  000A12  0E01               	movlw	1
  5577  000A14  EC09  F00E         	call	_ToMainLow_sendmsg
  5578                           
  5579                           ;my_uart.c: 108: error = 1;
  5580  000A18  0E01               	movlw	1
  5581  000A1A  6E60               	movwf	uart_receive_interrupt_handler@error,c
  5582  000A1C                     i1l3920:
  5583                           
  5584                           ;my_uart.c: 109: }
  5585                           ;my_uart.c: 110: }
  5586                           ;my_uart.c: 111: index++;
  5587  000A1C  2A61               	incf	uart_receive_interrupt_handler@index,f,c
  5588  000A1E                     i1l3922:
  5589                           
  5590                           ;my_uart.c: 112: }
  5591                           ;my_uart.c: 114: if( index >= (14 + 2 + 2) )
  5592  000A1E  0E11               	movlw	17
  5593  000A20  6461               	cpfsgt	uart_receive_interrupt_handler@index,c
  5594  000A22  0012               	return	
  5595                           
  5596                           ;my_uart.c: 115: {
  5597                           ;my_uart.c: 116: index = 0;
  5598  000A24  0E00               	movlw	0
  5599  000A26  6E61               	movwf	uart_receive_interrupt_handler@index,c
  5600                           
  5601                           ;my_uart.c: 118: if( received_counter != frame[1] )
  5602  000A28  504A               	movf	uart_receive_interrupt_handler@frame+1,w,c
  5603  000A2A  1862               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5604  000A2C  B4D8               	btfsc	status,2,c
  5605  000A2E  D00F               	goto	i1l3932
  5606                           
  5607                           ;my_uart.c: 119: {
  5608                           ;my_uart.c: 121: unsigned char bad_counter_id[2];
  5609                           ;my_uart.c: 122: bad_counter_id[0] = received_counter;
  5610  000A30  C062  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5611                           
  5612                           ;my_uart.c: 123: bad_counter_id[1] = frame[1];
  5613  000A34  C04A  F02E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5614                           
  5615                           ;my_uart.c: 124: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5616  000A38  0E21               	movlw	33
  5617  000A3A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5618  000A3C  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5619  000A3E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5620  000A40  0E2D               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5621  000A42  6E18               	movwf	ToMainLow_sendmsg@data,c
  5622  000A44  0E02               	movlw	2
  5623  000A46  EC09  F00E         	call	_ToMainLow_sendmsg
  5624                           
  5625                           ;my_uart.c: 125: error = 1;
  5626  000A4A  0E01               	movlw	1
  5627  000A4C  6E60               	movwf	uart_receive_interrupt_handler@error,c
  5628  000A4E                     i1l3932:
  5629                           
  5630                           ;my_uart.c: 126: }
  5631                           ;my_uart.c: 129: unsigned char gooey_uart_center[14];
  5632                           ;my_uart.c: 130: unsigned char checksum = 0;
  5633  000A4E  0E00               	movlw	0
  5634  000A50  6E2F               	movwf	uart_receive_interrupt_handler@checksum,c
  5635                           
  5636                           ;my_uart.c: 131: int i;
  5637                           ;my_uart.c: 132: for(i = 0; i < 14; i++)
  5638  000A52  0E00               	movlw	0
  5639  000A54  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5640  000A56  0E00               	movlw	0
  5641  000A58  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5642  000A5A  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5643  000A5C  0A80               	xorlw	128
  5644  000A5E  0F80               	addlw	-128
  5645  000A60  0E0E               	movlw	14
  5646  000A62  B4D8               	btfsc	status,2,c
  5647  000A64  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5648  000A66  B0D8               	btfsc	status,0,c
  5649  000A68  D01F               	goto	i1l3948
  5650                           
  5651                           ;my_uart.c: 133: {
  5652                           ;my_uart.c: 134: gooey_uart_center[i] = frame[i+2];
  5653  000A6A  0E02               	movlw	2
  5654  000A6C  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5655  000A6E  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5656  000A70  0E00               	movlw	0
  5657  000A72  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5658  000A74  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5659  000A76  0E49               	movlw	low uart_receive_interrupt_handler@frame
  5660  000A78  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5661  000A7A  6ED9               	movwf	fsr2l,c
  5662  000A7C  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5663  000A7E  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5664  000A80  6EDA               	movwf	fsr2h,c
  5665  000A82  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5666  000A84  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5667  000A86  6EE1               	movwf	fsr1l,c
  5668  000A88  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5669  000A8A  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5670  000A8C  6EE2               	movwf	fsr1h,c
  5671  000A8E  CFDF FFE7          	movff	indf2,indf1
  5672                           
  5673                           ;my_uart.c: 135: checksum ^= gooey_uart_center[i];
  5674  000A92  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5675  000A94  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5676  000A96  6ED9               	movwf	fsr2l,c
  5677  000A98  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5678  000A9A  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5679  000A9C  6EDA               	movwf	fsr2h,c
  5680  000A9E  50DF               	movf	indf2,w,c
  5681  000AA0  1A2F               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5682  000AA2  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5683  000AA4  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5684  000AA6  D7D9               	goto	L5
  5685  000AA8                     i1l3948:
  5686                           
  5687                           ;my_uart.c: 136: }
  5688                           ;my_uart.c: 138: if( checksum != frame[(14 + 2 + 2) - 2] )
  5689  000AA8  5059               	movf	uart_receive_interrupt_handler@frame+16,w,c
  5690  000AAA  182F               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5691  000AAC  B4D8               	btfsc	status,2,c
  5692  000AAE  D00D               	goto	i1l3956
  5693                           
  5694                           ;my_uart.c: 139: {
  5695                           ;my_uart.c: 141: unsigned char bad_checksum_id = received_counter;
  5696  000AB0  C062  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5697                           
  5698                           ;my_uart.c: 142: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5699  000AB4  0E20               	movlw	32
  5700  000AB6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5701  000AB8  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5702  000ABA  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5703  000ABC  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5704  000ABE  6E18               	movwf	ToMainLow_sendmsg@data,c
  5705  000AC0  0E01               	movlw	1
  5706  000AC2  EC09  F00E         	call	_ToMainLow_sendmsg
  5707                           
  5708                           ;my_uart.c: 143: error = 1;
  5709  000AC6  0E01               	movlw	1
  5710  000AC8  6E60               	movwf	uart_receive_interrupt_handler@error,c
  5711  000ACA                     i1l3956:
  5712                           
  5713                           ;my_uart.c: 144: }
  5714                           ;my_uart.c: 149: if( !error )
  5715  000ACA  6660               	tstfsz	uart_receive_interrupt_handler@error,c
  5716  000ACC  D02C               	goto	i1l3976
  5717                           
  5718                           ;my_uart.c: 150: {
  5719                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5720  000ACE  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5721                           
  5722                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5723  000AD2  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5724  000AD4  0A11               	xorlw	17
  5725  000AD6  B4D8               	btfsc	status,2,c
  5726  000AD8  D01C               	goto	i1l427
  5727  000ADA  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5728  000ADC  0AF1               	xorlw	241
  5729  000ADE  B4D8               	btfsc	status,2,c
  5730  000AE0  D018               	goto	i1l427
  5731  000AE2  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5732  000AE4  0AF2               	xorlw	242
  5733  000AE6  B4D8               	btfsc	status,2,c
  5734  000AE8  D014               	goto	i1l427
  5735  000AEA  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5736  000AEC  0AF3               	xorlw	243
  5737  000AEE  B4D8               	btfsc	status,2,c
  5738  000AF0  D010               	goto	i1l427
  5739  000AF2  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5740  000AF4  0AF4               	xorlw	244
  5741  000AF6  B4D8               	btfsc	status,2,c
  5742  000AF8  D00C               	goto	i1l427
  5743                           
  5744                           ;my_uart.c: 155: {
  5745                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5746  000AFA  C062  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5747                           
  5748                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5749  000AFE  0E24               	movlw	36
  5750  000B00  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5751  000B02  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5752  000B04  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5753  000B06  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5754  000B08  6E18               	movwf	ToMainLow_sendmsg@data,c
  5755  000B0A  0E01               	movlw	1
  5756  000B0C  EC09  F00E         	call	_ToMainLow_sendmsg
  5757  000B10  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5758  000B12                     i1l427:
  5759                           
  5760                           ;my_uart.c: 158: }
  5761                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5762  000B12  0E1F               	movlw	31
  5763  000B14  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5764  000B16  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5765  000B18  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5766  000B1A  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5767  000B1C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5768  000B1E  0E0E               	movlw	14
  5769  000B20  EC09  F00E         	call	_ToMainLow_sendmsg
  5770  000B24  6E2C               	movwf	uart_receive_interrupt_handler@status_2014,c
  5771  000B26                     i1l3976:
  5772                           
  5773                           ;my_uart.c: 171: }
  5774                           ;my_uart.c: 172: }
  5775                           ;my_uart.c: 174: received_counter++;
  5776  000B26  2A62               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5777                           
  5778                           ;my_uart.c: 175: error = 0;
  5779  000B28  0E00               	movlw	0
  5780  000B2A  6E60               	movwf	uart_receive_interrupt_handler@error,c
  5781  000B2C  0012               	return	
  5782  000B2E                     __end_of_uart_receive_interrupt_handler:
  5783                           	opt stack 0
  5784                           pclatu	equ	0xFFB
  5785                           pclath	equ	0xFFA
  5786                           tblptru	equ	0xFF8
  5787                           tblptrh	equ	0xFF7
  5788                           tblptrl	equ	0xFF6
  5789                           tablat	equ	0xFF5
  5790                           prodh	equ	0xFF4
  5791                           prodl	equ	0xFF3
  5792                           intcon	equ	0xFF2
  5793                           intcon2	equ	0xFF1
  5794                           postinc0	equ	0xFEE
  5795                           fsr0h	equ	0xFEA
  5796                           fsr0l	equ	0xFE9
  5797                           wreg	equ	0xFE8
  5798                           indf1	equ	0xFE7
  5799                           fsr1h	equ	0xFE2
  5800                           fsr1l	equ	0xFE1
  5801                           bsr	equ	0xFE0
  5802                           indf2	equ	0xFDF
  5803                           postinc2	equ	0xFDE
  5804                           postdec2	equ	0xFDD
  5805                           fsr2h	equ	0xFDA
  5806                           fsr2l	equ	0xFD9
  5807                           status	equ	0xFD8
  5808                           
  5809 ;; *************** function _timer1_int_handler *****************
  5810 ;; Defined at:
  5811 ;;		line 41 in file "../src/user_interrupts.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  result          2   26[COMRAM] unsigned int 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;		None               void
  5818 ;; Registers used:
  5819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5825 ;;      Params:         0       0       0       0       0
  5826 ;;      Locals:         2       0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0
  5828 ;;      Totals:         2       0       0       0       0
  5829 ;;Total ram usage:        2 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    8
  5832 ;; This function calls:
  5833 ;;		_ReadTimer1
  5834 ;;		_ToMainLow_sendmsg
  5835 ;;		_WriteTimer1
  5836 ;; This function is called by:
  5837 ;;		_InterruptHandlerLow
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text36
  5842  001B96                     __ptext36:
  5843                           	opt stack 0
  5844  001B96                     _timer1_int_handler:
  5845                           	opt stack 16
  5846                           
  5847                           ;user_interrupts.c: 45: unsigned int result;
  5848                           ;user_interrupts.c: 52: result = ReadTimer1();
  5849                           
  5850                           ;incstack = 0
  5851  001B96  EC4D  F00E         	call	_ReadTimer1	;wreg free
  5852  001B9A  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5853  001B9E  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5854                           
  5855                           ;user_interrupts.c: 53: ToMainLow_sendmsg(0, 11, (void *) 0);
  5856  001BA2  0E0B               	movlw	11
  5857  001BA4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5858  001BA6  0E00               	movlw	0
  5859  001BA8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5860  001BAA  0E00               	movlw	0
  5861  001BAC  6E18               	movwf	ToMainLow_sendmsg@data,c
  5862  001BAE  0E00               	movlw	0
  5863  001BB0  EC09  F00E         	call	_ToMainLow_sendmsg
  5864                           
  5865                           ;user_interrupts.c: 56: WriteTimer1(0);
  5866  001BB4  0E00               	movlw	0
  5867  001BB6  6E02               	movwf	WriteTimer1@timer1+1,c
  5868  001BB8  0E00               	movlw	0
  5869  001BBA  6E01               	movwf	WriteTimer1@timer1,c
  5870  001BBC  EC44  F00E         	call	_WriteTimer1	;wreg free
  5871  001BC0  0012               	return	
  5872  001BC2                     __end_of_timer1_int_handler:
  5873                           	opt stack 0
  5874                           pclatu	equ	0xFFB
  5875                           pclath	equ	0xFFA
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           intcon2	equ	0xFF1
  5884                           postinc0	equ	0xFEE
  5885                           fsr0h	equ	0xFEA
  5886                           fsr0l	equ	0xFE9
  5887                           wreg	equ	0xFE8
  5888                           indf1	equ	0xFE7
  5889                           fsr1h	equ	0xFE2
  5890                           fsr1l	equ	0xFE1
  5891                           bsr	equ	0xFE0
  5892                           indf2	equ	0xFDF
  5893                           postinc2	equ	0xFDE
  5894                           postdec2	equ	0xFDD
  5895                           fsr2h	equ	0xFDA
  5896                           fsr2l	equ	0xFD9
  5897                           status	equ	0xFD8
  5898                           
  5899 ;; *************** function _WriteTimer1 *****************
  5900 ;; Defined at:
  5901 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  timer1          2    0[COMRAM] unsigned int 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  timer           2    2[COMRAM] struct Timers
  5906 ;; Return value:  Size  Location     Type
  5907 ;;		None               void
  5908 ;; Registers used:
  5909 ;;		None
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5915 ;;      Params:         2       0       0       0       0
  5916 ;;      Locals:         2       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0
  5918 ;;      Totals:         4       0       0       0       0
  5919 ;;Total ram usage:        4 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    5
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_timer1_int_handler
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text37
  5930  001C88                     __ptext37:
  5931                           	opt stack 0
  5932  001C88                     _WriteTimer1:
  5933                           	opt stack 18
  5934                           
  5935                           ;incstack = 0
  5936  001C88  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5937  001C8C  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5938  001C90  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5939  001C94  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5940  001C98  0012               	return	
  5941  001C9A                     __end_of_WriteTimer1:
  5942                           	opt stack 0
  5943                           pclatu	equ	0xFFB
  5944                           pclath	equ	0xFFA
  5945                           tblptru	equ	0xFF8
  5946                           tblptrh	equ	0xFF7
  5947                           tblptrl	equ	0xFF6
  5948                           tablat	equ	0xFF5
  5949                           prodh	equ	0xFF4
  5950                           prodl	equ	0xFF3
  5951                           intcon	equ	0xFF2
  5952                           intcon2	equ	0xFF1
  5953                           postinc0	equ	0xFEE
  5954                           fsr0h	equ	0xFEA
  5955                           fsr0l	equ	0xFE9
  5956                           wreg	equ	0xFE8
  5957                           indf1	equ	0xFE7
  5958                           fsr1h	equ	0xFE2
  5959                           fsr1l	equ	0xFE1
  5960                           bsr	equ	0xFE0
  5961                           indf2	equ	0xFDF
  5962                           postinc2	equ	0xFDE
  5963                           postdec2	equ	0xFDD
  5964                           fsr2h	equ	0xFDA
  5965                           fsr2l	equ	0xFD9
  5966                           status	equ	0xFD8
  5967                           
  5968 ;; *************** function _ToMainLow_sendmsg *****************
  5969 ;; Defined at:
  5970 ;;		line 103 in file "../src/messages.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  length          1    wreg     unsigned char 
  5973 ;;  msgtype         1   22[COMRAM] unsigned char 
  5974 ;;  data            2   23[COMRAM] PTR void 
  5975 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5976 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), InterruptHandlerLow@sendy_stuff(1), 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  length          1   25[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      char 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5988 ;;      Params:         3       0       0       0       0
  5989 ;;      Locals:         1       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0
  5991 ;;      Totals:         4       0       0       0       0
  5992 ;;Total ram usage:        4 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    7
  5995 ;; This function calls:
  5996 ;;		i1_send_msg
  5997 ;; This function is called by:
  5998 ;;		_InterruptHandlerLow
  5999 ;;		_uart_receive_interrupt_handler
  6000 ;;		_timer1_int_handler
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text38
  6005  001C12                     __ptext38:
  6006                           	opt stack 0
  6007  001C12                     _ToMainLow_sendmsg:
  6008                           	opt stack 16
  6009                           
  6010                           ;incstack = 0
  6011                           ;ToMainLow_sendmsg@length stored from wreg
  6012  001C12  6E1A               	movwf	ToMainLow_sendmsg@length,c
  6013                           
  6014                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6015  001C14  0101               	movlb	1	; () banked
  6016  001C16  0E01               	movlw	high _ToMainLow_MQ
  6017  001C18  6E0C               	movwf	i1send_msg@qptr+1,c
  6018  001C1A  0101               	movlb	1	; () banked
  6019  001C1C  0E66               	movlw	low _ToMainLow_MQ
  6020  001C1E  6E0B               	movwf	i1send_msg@qptr,c
  6021  001C20  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6022  001C24  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6023  001C28  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6024  001C2C  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6025  001C30  EC82  F009         	call	i1_send_msg	;wreg free
  6026  001C34  0012               	return	
  6027  001C36                     __end_of_ToMainLow_sendmsg:
  6028                           	opt stack 0
  6029                           pclatu	equ	0xFFB
  6030                           pclath	equ	0xFFA
  6031                           tblptru	equ	0xFF8
  6032                           tblptrh	equ	0xFF7
  6033                           tblptrl	equ	0xFF6
  6034                           tablat	equ	0xFF5
  6035                           prodh	equ	0xFF4
  6036                           prodl	equ	0xFF3
  6037                           intcon	equ	0xFF2
  6038                           intcon2	equ	0xFF1
  6039                           postinc0	equ	0xFEE
  6040                           fsr0h	equ	0xFEA
  6041                           fsr0l	equ	0xFE9
  6042                           wreg	equ	0xFE8
  6043                           indf1	equ	0xFE7
  6044                           fsr1h	equ	0xFE2
  6045                           fsr1l	equ	0xFE1
  6046                           bsr	equ	0xFE0
  6047                           indf2	equ	0xFDF
  6048                           postinc2	equ	0xFDE
  6049                           postdec2	equ	0xFDD
  6050                           fsr2h	equ	0xFDA
  6051                           fsr2l	equ	0xFD9
  6052                           status	equ	0xFD8
  6053                           
  6054 ;; *************** function i1_send_msg *****************
  6055 ;; Defined at:
  6056 ;;		line 24 in file "../src/messages.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6059 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  6060 ;;  length          1   12[COMRAM] unsigned char 
  6061 ;;  msgtype         1   13[COMRAM] unsigned char 
  6062 ;;  data            2   14[COMRAM] PTR void 
  6063 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  6064 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6065 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  6066 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6069 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6070 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  6071 ;;  send_msg        2   17[COMRAM] unsigned int 
  6072 ;;  send_msg        1   19[COMRAM] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      char 
  6075 ;; Registers used:
  6076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6082 ;;      Params:         6       0       0       0       0
  6083 ;;      Locals:         5       0       0       0       0
  6084 ;;      Temps:          1       0       0       0       0
  6085 ;;      Totals:        12       0       0       0       0
  6086 ;;Total ram usage:       12 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    6
  6089 ;; This function calls:
  6090 ;;		i1___awmod
  6091 ;;		i1_memcpy
  6092 ;; This function is called by:
  6093 ;;		_ToMainLow_sendmsg
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text39
  6098  001304                     __ptext39:
  6099                           	opt stack 0
  6100  001304                     i1_send_msg:
  6101                           	opt stack 16
  6102                           
  6103                           ;messages.c: 25: unsigned char slot;
  6104                           ;messages.c: 27: msg *qmsg;
  6105                           ;messages.c: 28: size_t tlength = length;
  6106                           
  6107                           ;incstack = 0
  6108  001304  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6109  001308  6A13               	clrf	i1send_msg@tlength+1,c
  6110                           
  6111                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6112  00130A  EE20 F055          	lfsr	2,85
  6113  00130E  500B               	movf	i1send_msg@qptr,w,c
  6114  001310  26D9               	addwf	fsr2l,f,c
  6115  001312  500C               	movf	i1send_msg@qptr+1,w,c
  6116  001314  22DA               	addwfc	fsr2h,f,c
  6117  001316  50DF               	movf	indf2,w,c
  6118  001318  6E14               	movwf	i1send_msg@slot,c
  6119                           
  6120                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6121  00131A  5014               	movf	i1send_msg@slot,w,c
  6122  00131C  0D11               	mullw	17
  6123  00131E  50F3               	movf	prodl,w,c
  6124  001320  240B               	addwf	i1send_msg@qptr,w,c
  6125  001322  6E15               	movwf	i1send_msg@qmsg,c
  6126  001324  50F4               	movf	prodh,w,c
  6127  001326  200C               	addwfc	i1send_msg@qptr+1,w,c
  6128  001328  6E16               	movwf	i1send_msg@qmsg+1,c
  6129                           
  6130                           ;messages.c: 41: if (qmsg->full != 0) {
  6131  00132A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6132  00132E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6133  001332  50DF               	movf	indf2,w,c
  6134  001334  B4D8               	btfsc	status,2,c
  6135  001336  D002               	goto	i1l3532
  6136                           
  6137                           ;messages.c: 42: return (-1);
  6138  001338  0EFF               	movlw	255
  6139  00133A  0012               	return	
  6140  00133C                     i1l3532:
  6141                           
  6142                           ;messages.c: 43: }
  6143                           ;messages.c: 46: qmsg->length = length;
  6144  00133C  EE20 F001          	lfsr	2,1
  6145  001340  5015               	movf	i1send_msg@qmsg,w,c
  6146  001342  26D9               	addwf	fsr2l,f,c
  6147  001344  5016               	movf	i1send_msg@qmsg+1,w,c
  6148  001346  22DA               	addwfc	fsr2h,f,c
  6149  001348  C00D  FFDF         	movff	i1send_msg@length,indf2
  6150                           
  6151                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6152  00134C  EE20 F002          	lfsr	2,2
  6153  001350  5015               	movf	i1send_msg@qmsg,w,c
  6154  001352  26D9               	addwf	fsr2l,f,c
  6155  001354  5016               	movf	i1send_msg@qmsg+1,w,c
  6156  001356  22DA               	addwfc	fsr2h,f,c
  6157  001358  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6158                           
  6159                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6160  00135C  0E03               	movlw	3
  6161  00135E  2415               	addwf	i1send_msg@qmsg,w,c
  6162  001360  6E01               	movwf	i1memcpy@d1,c
  6163  001362  0E00               	movlw	0
  6164  001364  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6165  001366  6E02               	movwf	i1memcpy@d1+1,c
  6166  001368  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6167  00136C  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6168  001370  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6169  001374  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6170  001378  ECC4  F00C         	call	i1_memcpy	;wreg free
  6171                           
  6172                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6173  00137C  EE20 F055          	lfsr	2,85
  6174  001380  500B               	movf	i1send_msg@qptr,w,c
  6175  001382  26D9               	addwf	fsr2l,f,c
  6176  001384  500C               	movf	i1send_msg@qptr+1,w,c
  6177  001386  22DA               	addwfc	fsr2h,f,c
  6178  001388  EE10 F055          	lfsr	1,85
  6179  00138C  500B               	movf	i1send_msg@qptr,w,c
  6180  00138E  26E1               	addwf	fsr1l,f,c
  6181  001390  500C               	movf	i1send_msg@qptr+1,w,c
  6182  001392  22E2               	addwfc	fsr1h,f,c
  6183  001394  50E7               	movf	indf1,w,c
  6184  001396  6E11               	movwf	??i1_send_msg& (0+255),c
  6185  001398  0E01               	movlw	1
  6186  00139A  2411               	addwf	??i1_send_msg,w,c
  6187  00139C  6E01               	movwf	i1___awmod@dividend,c
  6188  00139E  6A02               	clrf	i1___awmod@dividend+1,c
  6189  0013A0  0E00               	movlw	0
  6190  0013A2  2202               	addwfc	i1___awmod@dividend+1,f,c
  6191  0013A4  0E00               	movlw	0
  6192  0013A6  6E04               	movwf	i1___awmod@divisor+1,c
  6193  0013A8  0E05               	movlw	5
  6194  0013AA  6E03               	movwf	i1___awmod@divisor,c
  6195  0013AC  EC40  F00A         	call	i1___awmod	;wreg free
  6196  0013B0  5001               	movf	?i1___awmod,w,c
  6197  0013B2  6EDF               	movwf	indf2,c
  6198                           
  6199                           ;messages.c: 59: qmsg->full = 1;
  6200  0013B4  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6201  0013B8  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6202  0013BC  0E01               	movlw	1
  6203  0013BE  6EDF               	movwf	indf2,c
  6204                           
  6205                           ;messages.c: 60: return (1);
  6206  0013C0  0E01               	movlw	1
  6207  0013C2  0012               	return	
  6208  0013C4                     __end_ofi1_send_msg:
  6209                           	opt stack 0
  6210                           pclatu	equ	0xFFB
  6211                           pclath	equ	0xFFA
  6212                           tblptru	equ	0xFF8
  6213                           tblptrh	equ	0xFF7
  6214                           tblptrl	equ	0xFF6
  6215                           tablat	equ	0xFF5
  6216                           prodh	equ	0xFF4
  6217                           prodl	equ	0xFF3
  6218                           intcon	equ	0xFF2
  6219                           intcon2	equ	0xFF1
  6220                           postinc0	equ	0xFEE
  6221                           fsr0h	equ	0xFEA
  6222                           fsr0l	equ	0xFE9
  6223                           wreg	equ	0xFE8
  6224                           indf1	equ	0xFE7
  6225                           fsr1h	equ	0xFE2
  6226                           fsr1l	equ	0xFE1
  6227                           bsr	equ	0xFE0
  6228                           indf2	equ	0xFDF
  6229                           postinc2	equ	0xFDE
  6230                           postdec2	equ	0xFDD
  6231                           fsr2h	equ	0xFDA
  6232                           fsr2l	equ	0xFD9
  6233                           status	equ	0xFD8
  6234                           
  6235 ;; *************** function i1_memcpy *****************
  6236 ;; Defined at:
  6237 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  d1              2    0[COMRAM] PTR void 
  6240 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6241 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  6242 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  6243 ;;  s1              2    2[COMRAM] PTR const void 
  6244 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6245 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6246 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  6247 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6248 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  6249 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  6250 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  6251 ;;  n               2    4[COMRAM] unsigned int 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6254 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6255 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6256 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  6257 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  6258 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  6259 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  6260 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  6261 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6262 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6263 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  6264 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  2    0[COMRAM] PTR void 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6274 ;;      Params:         6       0       0       0       0
  6275 ;;      Locals:         4       0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0
  6277 ;;      Totals:        10       0       0       0       0
  6278 ;;Total ram usage:       10 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    5
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		i1_send_msg
  6285 ;;		i1_recv_msg
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text40
  6290  001988                     __ptext40:
  6291                           	opt stack 0
  6292  001988                     i1_memcpy:
  6293                           	opt stack 16
  6294                           
  6295                           ;incstack = 0
  6296  001988  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6297  00198C  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6298  001990  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6299  001994  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6300  001998  D00E               	goto	i1l2416
  6301  00199A                     i1l2410:
  6302  00199A  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6303  00199E  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6304  0019A2  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6305  0019A6  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6306  0019AA  CFDF FFE7          	movff	indf2,indf1
  6307  0019AE  4A09               	infsnz	i1memcpy@s,f,c
  6308  0019B0  2A0A               	incf	i1memcpy@s+1,f,c
  6309  0019B2  4A07               	infsnz	i1memcpy@d,f,c
  6310  0019B4  2A08               	incf	i1memcpy@d+1,f,c
  6311  0019B6                     i1l2416:
  6312  0019B6  0605               	decf	i1memcpy@n,f,c
  6313  0019B8  A0D8               	btfss	status,0,c
  6314  0019BA  0606               	decf	i1memcpy@n+1,f,c
  6315  0019BC  2805               	incf	i1memcpy@n& (0+255),w,c
  6316  0019BE  B4D8               	btfsc	status,2,c
  6317  0019C0  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6318  0019C2  B4D8               	btfsc	status,2,c
  6319                           
  6320                           ;	Return value of i1_memcpy is never used
  6321  0019C4  0012               	return	
  6322  0019C6  D7E9               	goto	i1l2410
  6323  0019C8                     __end_ofi1_memcpy:
  6324                           	opt stack 0
  6325                           pclatu	equ	0xFFB
  6326                           pclath	equ	0xFFA
  6327                           tblptru	equ	0xFF8
  6328                           tblptrh	equ	0xFF7
  6329                           tblptrl	equ	0xFF6
  6330                           tablat	equ	0xFF5
  6331                           prodh	equ	0xFF4
  6332                           prodl	equ	0xFF3
  6333                           intcon	equ	0xFF2
  6334                           intcon2	equ	0xFF1
  6335                           postinc0	equ	0xFEE
  6336                           fsr0h	equ	0xFEA
  6337                           fsr0l	equ	0xFE9
  6338                           wreg	equ	0xFE8
  6339                           indf1	equ	0xFE7
  6340                           fsr1h	equ	0xFE2
  6341                           fsr1l	equ	0xFE1
  6342                           bsr	equ	0xFE0
  6343                           indf2	equ	0xFDF
  6344                           postinc2	equ	0xFDE
  6345                           postdec2	equ	0xFDD
  6346                           fsr2h	equ	0xFDA
  6347                           fsr2l	equ	0xFD9
  6348                           status	equ	0xFD8
  6349                           
  6350 ;; *************** function i1___awmod *****************
  6351 ;; Defined at:
  6352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  dividend        2    0[COMRAM] int 
  6355 ;;  divisor         2    2[COMRAM] int 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  __awmod         1    5[COMRAM] unsigned char 
  6358 ;;  __awmod         1    4[COMRAM] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  2    0[COMRAM] int 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, prodl
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6368 ;;      Params:         4       0       0       0       0
  6369 ;;      Locals:         2       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0
  6371 ;;      Totals:         6       0       0       0       0
  6372 ;;Total ram usage:        6 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    5
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		i1_send_msg
  6379 ;;		i1_recv_msg
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text41
  6384  001480                     __ptext41:
  6385                           	opt stack 0
  6386  001480                     i1___awmod:
  6387                           	opt stack 16
  6388                           
  6389                           ;incstack = 0
  6390  001480  0E00               	movlw	0
  6391  001482  6E06               	movwf	i1___awmod@sign,c
  6392  001484  5002               	movf	i1___awmod@dividend+1,w,c
  6393  001486  0A80               	xorlw	128
  6394  001488  6EF3               	movwf	prodl,c
  6395  00148A  0E80               	movlw	128
  6396  00148C  5CF3               	subwf	prodl,w,c
  6397  00148E  0E00               	movlw	0
  6398  001490  B4D8               	btfsc	status,2,c
  6399  001492  5C01               	subwf	i1___awmod@dividend,w,c
  6400  001494  B0D8               	btfsc	status,0,c
  6401  001496  D006               	goto	i1l2436
  6402  001498  6C01               	negf	i1___awmod@dividend,c
  6403  00149A  1E02               	comf	i1___awmod@dividend+1,f,c
  6404  00149C  B0D8               	btfsc	status,0,c
  6405  00149E  2A02               	incf	i1___awmod@dividend+1,f,c
  6406  0014A0  0E01               	movlw	1
  6407  0014A2  6E06               	movwf	i1___awmod@sign,c
  6408  0014A4                     i1l2436:
  6409  0014A4  5004               	movf	i1___awmod@divisor+1,w,c
  6410  0014A6  0A80               	xorlw	128
  6411  0014A8  6EF3               	movwf	prodl,c
  6412  0014AA  0E80               	movlw	128
  6413  0014AC  5CF3               	subwf	prodl,w,c
  6414  0014AE  0E00               	movlw	0
  6415  0014B0  B4D8               	btfsc	status,2,c
  6416  0014B2  5C03               	subwf	i1___awmod@divisor,w,c
  6417  0014B4  B0D8               	btfsc	status,0,c
  6418  0014B6  D004               	goto	i1l2440
  6419  0014B8  6C03               	negf	i1___awmod@divisor,c
  6420  0014BA  1E04               	comf	i1___awmod@divisor+1,f,c
  6421  0014BC  B0D8               	btfsc	status,0,c
  6422  0014BE  2A04               	incf	i1___awmod@divisor+1,f,c
  6423  0014C0                     i1l2440:
  6424  0014C0  5004               	movf	i1___awmod@divisor+1,w,c
  6425  0014C2  1003               	iorwf	i1___awmod@divisor,w,c
  6426  0014C4  B4D8               	btfsc	status,2,c
  6427  0014C6  D018               	goto	i1l2456
  6428  0014C8  0E01               	movlw	1
  6429  0014CA  6E05               	movwf	i1___awmod@counter,c
  6430  0014CC  D004               	goto	i1l2446
  6431  0014CE                     i1l2444:
  6432  0014CE  90D8               	bcf	status,0,c
  6433  0014D0  3603               	rlcf	i1___awmod@divisor,f,c
  6434  0014D2  3604               	rlcf	i1___awmod@divisor+1,f,c
  6435  0014D4  2A05               	incf	i1___awmod@counter,f,c
  6436  0014D6                     i1l2446:
  6437  0014D6  AE04               	btfss	i1___awmod@divisor+1,7,c
  6438  0014D8  D7FA               	goto	i1l2444
  6439  0014DA                     i1l2448:
  6440  0014DA  5003               	movf	i1___awmod@divisor,w,c
  6441  0014DC  5C01               	subwf	i1___awmod@dividend,w,c
  6442  0014DE  5004               	movf	i1___awmod@divisor+1,w,c
  6443  0014E0  5802               	subwfb	i1___awmod@dividend+1,w,c
  6444  0014E2  A0D8               	btfss	status,0,c
  6445  0014E4  D004               	goto	i1l2452
  6446  0014E6  5003               	movf	i1___awmod@divisor,w,c
  6447  0014E8  5E01               	subwf	i1___awmod@dividend,f,c
  6448  0014EA  5004               	movf	i1___awmod@divisor+1,w,c
  6449  0014EC  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6450  0014EE                     i1l2452:
  6451  0014EE  90D8               	bcf	status,0,c
  6452  0014F0  3204               	rrcf	i1___awmod@divisor+1,f,c
  6453  0014F2  3203               	rrcf	i1___awmod@divisor,f,c
  6454  0014F4  2E05               	decfsz	i1___awmod@counter,f,c
  6455  0014F6  D7F1               	goto	i1l2448
  6456  0014F8                     i1l2456:
  6457  0014F8  5006               	movf	i1___awmod@sign,w,c
  6458  0014FA  B4D8               	btfsc	status,2,c
  6459  0014FC  D004               	goto	i1l2460
  6460  0014FE  6C01               	negf	i1___awmod@dividend,c
  6461  001500  1E02               	comf	i1___awmod@dividend+1,f,c
  6462  001502  B0D8               	btfsc	status,0,c
  6463  001504  2A02               	incf	i1___awmod@dividend+1,f,c
  6464  001506                     i1l2460:
  6465  001506  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6466  00150A  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6467  00150E  0012               	return	
  6468  001510                     __end_ofi1___awmod:
  6469                           	opt stack 0
  6470                           pclatu	equ	0xFFB
  6471                           pclath	equ	0xFFA
  6472                           tblptru	equ	0xFF8
  6473                           tblptrh	equ	0xFF7
  6474                           tblptrl	equ	0xFF6
  6475                           tablat	equ	0xFF5
  6476                           prodh	equ	0xFF4
  6477                           prodl	equ	0xFF3
  6478                           intcon	equ	0xFF2
  6479                           intcon2	equ	0xFF1
  6480                           postinc0	equ	0xFEE
  6481                           fsr0h	equ	0xFEA
  6482                           fsr0l	equ	0xFE9
  6483                           wreg	equ	0xFE8
  6484                           indf1	equ	0xFE7
  6485                           fsr1h	equ	0xFE2
  6486                           fsr1l	equ	0xFE1
  6487                           bsr	equ	0xFE0
  6488                           indf2	equ	0xFDF
  6489                           postinc2	equ	0xFDE
  6490                           postdec2	equ	0xFDD
  6491                           fsr2h	equ	0xFDA
  6492                           fsr2l	equ	0xFD9
  6493                           status	equ	0xFD8
  6494                           
  6495 ;; *************** function _ReadTimer1 *****************
  6496 ;; Defined at:
  6497 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  timer           2    2[COMRAM] struct Timers
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  2    0[COMRAM] unsigned int 
  6504 ;; Registers used:
  6505 ;;		None
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6511 ;;      Params:         2       0       0       0       0
  6512 ;;      Locals:         2       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0
  6514 ;;      Totals:         4       0       0       0       0
  6515 ;;Total ram usage:        4 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    5
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_timer1_int_handler
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text42
  6526  001C9A                     __ptext42:
  6527                           	opt stack 0
  6528  001C9A                     _ReadTimer1:
  6529                           	opt stack 18
  6530                           
  6531                           ;incstack = 0
  6532  001C9A  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6533  001C9E  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6534  001CA2  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6535  001CA6  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6536  001CAA  0012               	return	
  6537  001CAC                     __end_of_ReadTimer1:
  6538                           	opt stack 0
  6539                           pclatu	equ	0xFFB
  6540                           pclath	equ	0xFFA
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           intcon2	equ	0xFF1
  6549                           postinc0	equ	0xFEE
  6550                           fsr0h	equ	0xFEA
  6551                           fsr0l	equ	0xFE9
  6552                           wreg	equ	0xFE8
  6553                           indf1	equ	0xFE7
  6554                           fsr1h	equ	0xFE2
  6555                           fsr1l	equ	0xFE1
  6556                           bsr	equ	0xFE0
  6557                           indf2	equ	0xFDF
  6558                           postinc2	equ	0xFDE
  6559                           postdec2	equ	0xFDD
  6560                           fsr2h	equ	0xFDA
  6561                           fsr2l	equ	0xFD9
  6562                           status	equ	0xFD8
  6563                           
  6564 ;; *************** function _timer0_int_handler *****************
  6565 ;; Defined at:
  6566 ;;		line 16 in file "../src/user_interrupts.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;		None
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;		None
  6571 ;; Return value:  Size  Location     Type
  6572 ;;		None               void
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6580 ;;      Params:         0       0       0       0       0
  6581 ;;      Locals:         0       0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0
  6583 ;;      Totals:         0       0       0       0       0
  6584 ;;Total ram usage:        0 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    6
  6587 ;; This function calls:
  6588 ;;		_WriteTimer0
  6589 ;; This function is called by:
  6590 ;;		_InterruptHandlerLow
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text43
  6595  001CDC                     __ptext43:
  6596                           	opt stack 0
  6597  001CDC                     _timer0_int_handler:
  6598                           	opt stack 18
  6599                           
  6600                           ;user_interrupts.c: 24: WriteTimer0(0);
  6601                           
  6602                           ;incstack = 0
  6603  001CDC  0E00               	movlw	0
  6604  001CDE  6E02               	movwf	WriteTimer0@timer0+1,c
  6605  001CE0  0E00               	movlw	0
  6606  001CE2  6E01               	movwf	WriteTimer0@timer0,c
  6607  001CE4  EC56  F00E         	call	_WriteTimer0	;wreg free
  6608  001CE8  0012               	return	
  6609  001CEA                     __end_of_timer0_int_handler:
  6610                           	opt stack 0
  6611                           pclatu	equ	0xFFB
  6612                           pclath	equ	0xFFA
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           intcon	equ	0xFF2
  6620                           intcon2	equ	0xFF1
  6621                           postinc0	equ	0xFEE
  6622                           fsr0h	equ	0xFEA
  6623                           fsr0l	equ	0xFE9
  6624                           wreg	equ	0xFE8
  6625                           indf1	equ	0xFE7
  6626                           fsr1h	equ	0xFE2
  6627                           fsr1l	equ	0xFE1
  6628                           bsr	equ	0xFE0
  6629                           indf2	equ	0xFDF
  6630                           postinc2	equ	0xFDE
  6631                           postdec2	equ	0xFDD
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _WriteTimer0 *****************
  6637 ;; Defined at:
  6638 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  timer0          2    0[COMRAM] unsigned int 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  timer           2    2[COMRAM] struct Timers
  6643 ;; Return value:  Size  Location     Type
  6644 ;;		None               void
  6645 ;; Registers used:
  6646 ;;		None
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6652 ;;      Params:         2       0       0       0       0
  6653 ;;      Locals:         2       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0
  6655 ;;      Totals:         4       0       0       0       0
  6656 ;;Total ram usage:        4 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    5
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_timer0_int_handler
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text44
  6667  001CAC                     __ptext44:
  6668                           	opt stack 0
  6669  001CAC                     _WriteTimer0:
  6670                           	opt stack 18
  6671                           
  6672                           ;incstack = 0
  6673  001CAC  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6674  001CB0  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6675  001CB4  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6676  001CB8  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6677  001CBC  0012               	return	
  6678  001CBE                     __end_of_WriteTimer0:
  6679                           	opt stack 0
  6680                           pclatu	equ	0xFFB
  6681                           pclath	equ	0xFFA
  6682                           tblptru	equ	0xFF8
  6683                           tblptrh	equ	0xFF7
  6684                           tblptrl	equ	0xFF6
  6685                           tablat	equ	0xFF5
  6686                           prodh	equ	0xFF4
  6687                           prodl	equ	0xFF3
  6688                           intcon	equ	0xFF2
  6689                           intcon2	equ	0xFF1
  6690                           postinc0	equ	0xFEE
  6691                           fsr0h	equ	0xFEA
  6692                           fsr0l	equ	0xFE9
  6693                           wreg	equ	0xFE8
  6694                           indf1	equ	0xFE7
  6695                           fsr1h	equ	0xFE2
  6696                           fsr1l	equ	0xFE1
  6697                           bsr	equ	0xFE0
  6698                           indf2	equ	0xFDF
  6699                           postinc2	equ	0xFDE
  6700                           postdec2	equ	0xFDD
  6701                           fsr2h	equ	0xFDA
  6702                           fsr2l	equ	0xFD9
  6703                           status	equ	0xFD8
  6704                           
  6705 ;; *************** function _InterruptHandlerHigh *****************
  6706 ;; Defined at:
  6707 ;;		line 86 in file "../src/interrupts.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;		None               void
  6714 ;; Registers used:
  6715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6721 ;;      Params:         0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0
  6723 ;;      Temps:          0      14       0       0       0
  6724 ;;      Totals:         0      14       0       0       0
  6725 ;;Total ram usage:       14 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    4
  6728 ;; This function calls:
  6729 ;;		_SleepIfOkay
  6730 ;;		_i2c_int_handler
  6731 ;; This function is called by:
  6732 ;;		Interrupt level 2
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	intcode
  6737  000008                     __pintcode:
  6738                           	opt stack 0
  6739  000008                     _InterruptHandlerHigh:
  6740                           	opt stack 16
  6741                           
  6742                           ;incstack = 0
  6743  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh
  6744  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+1
  6745  000010  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6746  000014  EFCA  F00A         	goto	int_func
  6747                           pclatu	equ	0xFFB
  6748                           pclath	equ	0xFFA
  6749                           tblptru	equ	0xFF8
  6750                           tblptrh	equ	0xFF7
  6751                           tblptrl	equ	0xFF6
  6752                           tablat	equ	0xFF5
  6753                           prodh	equ	0xFF4
  6754                           prodl	equ	0xFF3
  6755                           intcon	equ	0xFF2
  6756                           intcon2	equ	0xFF1
  6757                           postinc0	equ	0xFEE
  6758                           fsr0h	equ	0xFEA
  6759                           fsr0l	equ	0xFE9
  6760                           wreg	equ	0xFE8
  6761                           indf1	equ	0xFE7
  6762                           fsr1h	equ	0xFE2
  6763                           fsr1l	equ	0xFE1
  6764                           bsr	equ	0xFE0
  6765                           indf2	equ	0xFDF
  6766                           postinc2	equ	0xFDE
  6767                           postdec2	equ	0xFDD
  6768                           fsr2h	equ	0xFDA
  6769                           fsr2l	equ	0xFD9
  6770                           status	equ	0xFD8
  6771                           
  6772                           	psect	intcode_body
  6773  001594                     __pintcode_body:
  6774                           	opt stack 16
  6775  001594                     int_func:
  6776                           	opt stack 16
  6777  001594  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6778  001598  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6779  00159C  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6780  0015A0  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6781  0015A4  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6782  0015A8  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+8
  6783  0015AC  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+9
  6784  0015B0  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6785  0015B4  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6786  0015B8  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+12
  6787  0015BC  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+13
  6788                           
  6789                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6790  0015C0  A69E               	btfss	3998,3,c	;volatile
  6791  0015C2  D003               	goto	i2l4078
  6792                           
  6793                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6794  0015C4  969E               	bcf	3998,3,c	;volatile
  6795                           
  6796                           ;interrupts.c: 98: i2c_int_handler();
  6797  0015C6  EC80  F000         	call	_i2c_int_handler	;wreg free
  6798  0015CA                     i2l4078:
  6799                           
  6800                           ;interrupts.c: 99: }
  6801                           ;interrupts.c: 120: SleepIfOkay();
  6802  0015CA  ECCA  F00B         	call	_SleepIfOkay	;wreg free
  6803  0015CE  C0B7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6804  0015D2  C0B6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6805  0015D6  C0B5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6806  0015DA  C0B4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6807  0015DE  C0B3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6808  0015E2  C0B2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6809  0015E6  C0B1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6810  0015EA  C0B0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6811  0015EE  C0AF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6812  0015F2  C0AE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6813  0015F6  C0AD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6814  0015FA  C0AC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6815  0015FE  C0AB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6816  001602  C0AA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6817  001606  0011               	retfie		f
  6818  001608                     __end_of_InterruptHandlerHigh:
  6819                           	opt stack 0
  6820                           pclatu	equ	0xFFB
  6821                           pclath	equ	0xFFA
  6822                           tblptru	equ	0xFF8
  6823                           tblptrh	equ	0xFF7
  6824                           tblptrl	equ	0xFF6
  6825                           tablat	equ	0xFF5
  6826                           prodh	equ	0xFF4
  6827                           prodl	equ	0xFF3
  6828                           intcon	equ	0xFF2
  6829                           intcon2	equ	0xFF1
  6830                           postinc0	equ	0xFEE
  6831                           fsr0h	equ	0xFEA
  6832                           fsr0l	equ	0xFE9
  6833                           wreg	equ	0xFE8
  6834                           indf1	equ	0xFE7
  6835                           fsr1h	equ	0xFE2
  6836                           fsr1l	equ	0xFE1
  6837                           bsr	equ	0xFE0
  6838                           indf2	equ	0xFDF
  6839                           postinc2	equ	0xFDE
  6840                           postdec2	equ	0xFDD
  6841                           fsr2h	equ	0xFDA
  6842                           fsr2l	equ	0xFD9
  6843                           status	equ	0xFD8
  6844                           
  6845 ;; *************** function _i2c_int_handler *****************
  6846 ;; Defined at:
  6847 ;;		line 108 in file "../src/my_i2c.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  msg_type        1   39[BANK0 ] unsigned char 
  6852 ;;  length          1   30[BANK0 ] unsigned char 
  6853 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  6854 ;;  data_read       1   41[BANK0 ] unsigned char 
  6855 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  6856 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  6857 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  6858 ;;  need_data       1   36[BANK0 ] unsigned char 
  6859 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6860 ;;  data_written    1   34[BANK0 ] unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;		None               void
  6863 ;; Registers used:
  6864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6870 ;;      Params:         0       0       0       0       0
  6871 ;;      Locals:         0      12       0       0       0
  6872 ;;      Temps:          0       1       0       0       0
  6873 ;;      Totals:         0      13       0       0       0
  6874 ;;Total ram usage:       13 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:    3
  6877 ;; This function calls:
  6878 ;;		_FromMainHigh_recvmsg
  6879 ;;		_ToMainHigh_sendmsg
  6880 ;;		_handle_start
  6881 ;;		_start_i2c_slave_reply
  6882 ;; This function is called by:
  6883 ;;		_InterruptHandlerHigh
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text46
  6888  000100                     __ptext46:
  6889                           	opt stack 0
  6890  000100                     _i2c_int_handler:
  6891                           	opt stack 16
  6892                           
  6893                           ;my_i2c.c: 112: unsigned char i2c_data;
  6894                           ;my_i2c.c: 113: unsigned char data_read = 0;
  6895                           
  6896                           ;incstack = 0
  6897  000100  0E00               	movlw	0
  6898  000102  0100               	movlb	0	; () banked
  6899  000104  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6900                           
  6901                           ;my_i2c.c: 114: unsigned char data_written = 0;
  6902  000106  0E00               	movlw	0
  6903  000108  0100               	movlb	0	; () banked
  6904  00010A  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6905                           
  6906                           ;my_i2c.c: 115: unsigned char msg_ready = 0;
  6907  00010C  0E00               	movlw	0
  6908  00010E  0100               	movlb	0	; () banked
  6909  000110  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6910                           
  6911                           ;my_i2c.c: 116: unsigned char msg_to_send = 0;
  6912  000112  0E00               	movlw	0
  6913  000114  0100               	movlb	0	; () banked
  6914  000116  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6915                           
  6916                           ;my_i2c.c: 117: unsigned char overrun_error = 0;
  6917  000118  0E00               	movlw	0
  6918  00011A  0100               	movlb	0	; () banked
  6919  00011C  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6920                           
  6921                           ;my_i2c.c: 118: unsigned char error_buf[3];
  6922                           ;my_i2c.c: 119: unsigned char need_data = 1;
  6923  00011E  0E01               	movlw	1
  6924  000120  0100               	movlb	0	; () banked
  6925  000122  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;my_i2c.c: 122: if (SSPCON1bits.SSPOV == 1) {
  6929  000124  ACC6               	btfss	4038,6,c	;volatile
  6930  000126  D024               	goto	i2l3720
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;my_i2c.c: 123: SSPCON1bits.SSPOV = 0;
  6934  000128  9CC6               	bcf	4038,6,c	;volatile
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;my_i2c.c: 127: ic_ptr->status = 0x5;
  6938  00012A  0100               	movlb	0	; () banked
  6939  00012C  EE20 F021          	lfsr	2,33
  6940  000130  0100               	movlb	0	; () banked
  6941  000132  51C5               	movf	_ic_ptr& (0+255),w,b
  6942  000134  26D9               	addwf	fsr2l,f,c
  6943  000136  0100               	movlb	0	; () banked
  6944  000138  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6945  00013A  22DA               	addwfc	fsr2h,f,c
  6946  00013C  0E05               	movlw	5
  6947  00013E  6EDF               	movwf	indf2,c
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;my_i2c.c: 128: overrun_error = 1;
  6951  000140  0E01               	movlw	1
  6952  000142  0100               	movlb	0	; () banked
  6953  000144  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;my_i2c.c: 129: ic_ptr->error_count++;
  6957  000146  0100               	movlb	0	; () banked
  6958  000148  EE20 F023          	lfsr	2,35
  6959  00014C  0100               	movlb	0	; () banked
  6960  00014E  51C5               	movf	_ic_ptr& (0+255),w,b
  6961  000150  26D9               	addwf	fsr2l,f,c
  6962  000152  0100               	movlb	0	; () banked
  6963  000154  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6964  000156  22DA               	addwfc	fsr2h,f,c
  6965  000158  2ADF               	incf	indf2,f,c
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;my_i2c.c: 130: ic_ptr->error_code = 0x4;
  6969  00015A  0100               	movlb	0	; () banked
  6970  00015C  EE20 F022          	lfsr	2,34
  6971  000160  0100               	movlb	0	; () banked
  6972  000162  51C5               	movf	_ic_ptr& (0+255),w,b
  6973  000164  26D9               	addwf	fsr2l,f,c
  6974  000166  0100               	movlb	0	; () banked
  6975  000168  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6976  00016A  22DA               	addwfc	fsr2h,f,c
  6977  00016C  0E04               	movlw	4
  6978  00016E  6EDF               	movwf	indf2,c
  6979  000170                     i2l3720:
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;my_i2c.c: 131: }
  6983                           ;my_i2c.c: 133: if (SSPSTATbits.BF == 1) {
  6984  000170  A0C7               	btfss	4039,0,c	;volatile
  6985  000172  D005               	goto	i2l3726
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;my_i2c.c: 134: i2c_data = SSPBUF;
  6989  000174  CFC9 F0A5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;my_i2c.c: 135: data_read = 1;
  6993  000178  0E01               	movlw	1
  6994  00017A  0100               	movlb	0	; () banked
  6995  00017C  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6996  00017E                     i2l3726:
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;my_i2c.c: 136: }
  7000                           ;my_i2c.c: 139: if (!overrun_error) {
  7001  00017E  0100               	movlb	0	; () banked
  7002  000180  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7003  000182  D1EF               	goto	i2l305
  7004  000184  D1D8               	goto	i2l3830
  7005  000186                     i2l307:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;my_i2c.c: 142: {
  7009                           ;my_i2c.c: 144: if (SSPSTATbits.S == 1) {
  7010  000186  A6C7               	btfss	4039,3,c	;volatile
  7011  000188  D1EC               	goto	i2l305
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;my_i2c.c: 145: handle_start(data_read);
  7015  00018A  0100               	movlb	0	; () banked
  7016  00018C  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7017  00018E  EC59  F008         	call	_handle_start
  7018                           
  7019                           ;my_i2c.c: 147: if (ic_ptr->status == 0x8) {
  7020  000192  0100               	movlb	0	; () banked
  7021  000194  EE20 F021          	lfsr	2,33
  7022  000198  0100               	movlb	0	; () banked
  7023  00019A  51C5               	movf	_ic_ptr& (0+255),w,b
  7024  00019C  26D9               	addwf	fsr2l,f,c
  7025  00019E  0100               	movlb	0	; () banked
  7026  0001A0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7027  0001A2  22DA               	addwfc	fsr2h,f,c
  7028  0001A4  0E08               	movlw	8
  7029  0001A6  62DF               	cpfseq	indf2,c
  7030  0001A8  D1DC               	goto	i2l305
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;my_i2c.c: 148: data_read = 0;
  7034  0001AA  0E00               	movlw	0
  7035  0001AC  0100               	movlb	0	; () banked
  7036  0001AE  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7037                           
  7038                           ;my_i2c.c: 149: msg_to_send = 1;
  7039  0001B0  0E01               	movlw	1
  7040  0001B2  0100               	movlb	0	; () banked
  7041  0001B4  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7042  0001B6  D1D5               	goto	i2l305
  7043  0001B8                     i2l311:
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;my_i2c.c: 155: {
  7047                           ;my_i2c.c: 158: if (SSPSTATbits.P == 1) {
  7048  0001B8  A8C7               	btfss	4039,4,c	;volatile
  7049  0001BA  D034               	goto	i2l3746
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;my_i2c.c: 161: ic_ptr->event_count++;
  7053  0001BC  0100               	movlb	0	; () banked
  7054  0001BE  EE20 F020          	lfsr	2,32
  7055  0001C2  0100               	movlb	0	; () banked
  7056  0001C4  51C5               	movf	_ic_ptr& (0+255),w,b
  7057  0001C6  26D9               	addwf	fsr2l,f,c
  7058  0001C8  0100               	movlb	0	; () banked
  7059  0001CA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7060  0001CC  22DA               	addwfc	fsr2h,f,c
  7061  0001CE  2ADF               	incf	indf2,f,c
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;my_i2c.c: 162: if (data_read) {
  7065  0001D0  0100               	movlb	0	; () banked
  7066  0001D2  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7067  0001D4  B4D8               	btfsc	status,2,c
  7068  0001D6  D01B               	goto	i2l313
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;my_i2c.c: 163: if (SSPSTATbits.D_A == 0) {
  7072  0001D8  BAC7               	btfsc	4039,5,c	;volatile
  7073  0001DA  D004               	goto	i2l3744
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;my_i2c.c: 164: msg_ready = 1;
  7077  0001DC  0E01               	movlw	1
  7078  0001DE  0100               	movlb	0	; () banked
  7079  0001E0  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7080                           
  7081                           ;my_i2c.c: 165: } else {
  7082  0001E2  D015               	goto	i2l313
  7083  0001E4                     i2l3744:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;my_i2c.c: 166: ic_ptr->error_count++;
  7087  0001E4  0100               	movlb	0	; () banked
  7088  0001E6  EE20 F023          	lfsr	2,35
  7089  0001EA  0100               	movlb	0	; () banked
  7090  0001EC  51C5               	movf	_ic_ptr& (0+255),w,b
  7091  0001EE  26D9               	addwf	fsr2l,f,c
  7092  0001F0  0100               	movlb	0	; () banked
  7093  0001F2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7094  0001F4  22DA               	addwfc	fsr2h,f,c
  7095  0001F6  2ADF               	incf	indf2,f,c
  7096                           
  7097                           ;my_i2c.c: 167: ic_ptr->error_code = 0x6;
  7098  0001F8  0100               	movlb	0	; () banked
  7099  0001FA  EE20 F022          	lfsr	2,34
  7100  0001FE  0100               	movlb	0	; () banked
  7101  000200  51C5               	movf	_ic_ptr& (0+255),w,b
  7102  000202  26D9               	addwf	fsr2l,f,c
  7103  000204  0100               	movlb	0	; () banked
  7104  000206  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7105  000208  22DA               	addwfc	fsr2h,f,c
  7106  00020A  0E06               	movlw	6
  7107  00020C                     L13:
  7108  00020C  6EDF               	movwf	indf2,c
  7109  00020E                     i2l313:
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;my_i2c.c: 168: }
  7113                           ;my_i2c.c: 169: }
  7114                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7115  00020E  0100               	movlb	0	; () banked
  7116  000210  EE20 F021          	lfsr	2,33
  7117  000214  0100               	movlb	0	; () banked
  7118  000216  51C5               	movf	_ic_ptr& (0+255),w,b
  7119  000218  26D9               	addwf	fsr2l,f,c
  7120  00021A  0100               	movlb	0	; () banked
  7121  00021C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7122  00021E  22DA               	addwfc	fsr2h,f,c
  7123  000220  0E05               	movlw	5
  7124  000222  D096               	goto	L8
  7125  000224                     i2l3746:
  7126                           
  7127                           ; BSR set to: 0
  7128  000224  0100               	movlb	0	; () banked
  7129  000226  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7130  000228  B4D8               	btfsc	status,2,c
  7131  00022A  D19B               	goto	i2l305
  7132                           
  7133                           ; BSR set to: 0
  7134                           ;my_i2c.c: 172: ic_ptr->event_count++;
  7135  00022C  0100               	movlb	0	; () banked
  7136  00022E  EE20 F020          	lfsr	2,32
  7137  000232  0100               	movlb	0	; () banked
  7138  000234  51C5               	movf	_ic_ptr& (0+255),w,b
  7139  000236  26D9               	addwf	fsr2l,f,c
  7140  000238  0100               	movlb	0	; () banked
  7141  00023A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7142  00023C  22DA               	addwfc	fsr2h,f,c
  7143  00023E  2ADF               	incf	indf2,f,c
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;my_i2c.c: 173: if (SSPSTATbits.D_A == 0)
  7147  000240  BAC7               	btfsc	4039,5,c	;volatile
  7148  000242  D02A               	goto	i2l3762
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;my_i2c.c: 174: {
  7152                           ;my_i2c.c: 175: if (SSPSTATbits.R_W == 0)
  7153  000244  B4C7               	btfsc	4039,2,c	;volatile
  7154  000246  D00B               	goto	i2l3756
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;my_i2c.c: 176: {
  7158                           ;my_i2c.c: 177: ic_ptr->status = 0x7;
  7159  000248  0100               	movlb	0	; () banked
  7160  00024A  EE20 F021          	lfsr	2,33
  7161  00024E  0100               	movlb	0	; () banked
  7162  000250  51C5               	movf	_ic_ptr& (0+255),w,b
  7163  000252  26D9               	addwf	fsr2l,f,c
  7164  000254  0100               	movlb	0	; () banked
  7165  000256  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7166  000258  22DA               	addwfc	fsr2h,f,c
  7167  00025A  0E07               	movlw	7
  7168  00025C  D079               	goto	L8
  7169  00025E                     i2l3756:
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 179: else
  7173                           ;my_i2c.c: 180: {
  7174                           ;my_i2c.c: 181: ic_ptr->status = 0x8;
  7175  00025E  0100               	movlb	0	; () banked
  7176  000260  EE20 F021          	lfsr	2,33
  7177  000264  0100               	movlb	0	; () banked
  7178  000266  51C5               	movf	_ic_ptr& (0+255),w,b
  7179  000268  26D9               	addwf	fsr2l,f,c
  7180  00026A  0100               	movlb	0	; () banked
  7181  00026C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7182  00026E  22DA               	addwfc	fsr2h,f,c
  7183  000270  0E08               	movlw	8
  7184  000272  6EDF               	movwf	indf2,c
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;my_i2c.c: 182: msg_to_send = 1;
  7188  000274  0E01               	movlw	1
  7189  000276  0100               	movlb	0	; () banked
  7190  000278  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;my_i2c.c: 184: data_read = 0;
  7194  00027A  0E00               	movlw	0
  7195  00027C  0100               	movlb	0	; () banked
  7196  00027E  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7197                           
  7198                           ;my_i2c.c: 185: ic_ptr->outbufind = 0;
  7199  000280  0100               	movlb	0	; () banked
  7200  000282  EE20 F01E          	lfsr	2,30
  7201  000286  0100               	movlb	0	; () banked
  7202  000288  51C5               	movf	_ic_ptr& (0+255),w,b
  7203  00028A  26D9               	addwf	fsr2l,f,c
  7204  00028C  0100               	movlb	0	; () banked
  7205  00028E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7206  000290  22DA               	addwfc	fsr2h,f,c
  7207  000292  0E00               	movlw	0
  7208  000294  6EDF               	movwf	indf2,c
  7209                           
  7210                           ;my_i2c.c: 186: goto l;
  7211  000296  D020               	goto	i2l3764
  7212  000298                     i2l3762:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;my_i2c.c: 189: else
  7216                           ;my_i2c.c: 190: {
  7217                           ;my_i2c.c: 191: ic_ptr->error_count++;
  7218  000298  0100               	movlb	0	; () banked
  7219  00029A  EE20 F023          	lfsr	2,35
  7220  00029E  0100               	movlb	0	; () banked
  7221  0002A0  51C5               	movf	_ic_ptr& (0+255),w,b
  7222  0002A2  26D9               	addwf	fsr2l,f,c
  7223  0002A4  0100               	movlb	0	; () banked
  7224  0002A6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7225  0002A8  22DA               	addwfc	fsr2h,f,c
  7226  0002AA  2ADF               	incf	indf2,f,c
  7227                           
  7228                           ;my_i2c.c: 192: ic_ptr->status = 0x5;
  7229  0002AC  0100               	movlb	0	; () banked
  7230  0002AE  EE20 F021          	lfsr	2,33
  7231  0002B2  0100               	movlb	0	; () banked
  7232  0002B4  51C5               	movf	_ic_ptr& (0+255),w,b
  7233  0002B6  26D9               	addwf	fsr2l,f,c
  7234  0002B8  0100               	movlb	0	; () banked
  7235  0002BA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7236  0002BC  22DA               	addwfc	fsr2h,f,c
  7237  0002BE  0E05               	movlw	5
  7238  0002C0  6EDF               	movwf	indf2,c
  7239                           
  7240                           ;my_i2c.c: 193: ic_ptr->error_code = 0x6;
  7241  0002C2  0100               	movlb	0	; () banked
  7242  0002C4  EE20 F022          	lfsr	2,34
  7243  0002C8  0100               	movlb	0	; () banked
  7244  0002CA  51C5               	movf	_ic_ptr& (0+255),w,b
  7245  0002CC  26D9               	addwf	fsr2l,f,c
  7246  0002CE  0100               	movlb	0	; () banked
  7247  0002D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7248  0002D2  22DA               	addwfc	fsr2h,f,c
  7249  0002D4  0E06               	movlw	6
  7250  0002D6  D03C               	goto	L8
  7251  0002D8                     i2l3764:
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;my_i2c.c: 200: {
  7255                           ;my_i2c.c: 201: if (ic_ptr->outbufind < 14)
  7256  0002D8  0100               	movlb	0	; () banked
  7257  0002DA  EE20 F01E          	lfsr	2,30
  7258  0002DE  0100               	movlb	0	; () banked
  7259  0002E0  51C5               	movf	_ic_ptr& (0+255),w,b
  7260  0002E2  26D9               	addwf	fsr2l,f,c
  7261  0002E4  0100               	movlb	0	; () banked
  7262  0002E6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7263  0002E8  22DA               	addwfc	fsr2h,f,c
  7264  0002EA  50DF               	movf	indf2,w,c
  7265  0002EC  0100               	movlb	0	; () banked
  7266  0002EE  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7267  0002F0  0E0E               	movlw	14
  7268  0002F2  0100               	movlb	0	; () banked
  7269  0002F4  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7270  0002F6  B0D8               	btfsc	status,0,c
  7271  0002F8  D78A               	goto	i2l313
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;my_i2c.c: 202: {
  7275                           ;my_i2c.c: 203: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7276  0002FA  0100               	movlb	0	; () banked
  7277  0002FC  EE20 F01E          	lfsr	2,30
  7278  000300  0100               	movlb	0	; () banked
  7279  000302  51C5               	movf	_ic_ptr& (0+255),w,b
  7280  000304  26D9               	addwf	fsr2l,f,c
  7281  000306  0100               	movlb	0	; () banked
  7282  000308  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7283  00030A  22DA               	addwfc	fsr2h,f,c
  7284  00030C  50DF               	movf	indf2,w,c
  7285  00030E  0100               	movlb	0	; () banked
  7286  000310  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7287  000312  0100               	movlb	0	; () banked
  7288  000314  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7289  000316  0D01               	mullw	1
  7290  000318  0E10               	movlw	16
  7291  00031A  26F3               	addwf	prodl,f,c
  7292  00031C  0E00               	movlw	0
  7293  00031E  22F4               	addwfc	prodh,f,c
  7294  000320  50F3               	movf	prodl,w,c
  7295  000322  0100               	movlb	0	; () banked
  7296  000324  25C5               	addwf	_ic_ptr& (0+255),w,b
  7297  000326  6ED9               	movwf	fsr2l,c
  7298  000328  50F4               	movf	prodh,w,c
  7299  00032A  0100               	movlb	0	; () banked
  7300  00032C  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7301  00032E  6EDA               	movwf	fsr2h,c
  7302  000330  50DF               	movf	indf2,w,c
  7303  000332  6EC9               	movwf	4041,c	;volatile
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;my_i2c.c: 204: ic_ptr->outbufind++;
  7307  000334  0100               	movlb	0	; () banked
  7308  000336  EE20 F01E          	lfsr	2,30
  7309  00033A  0100               	movlb	0	; () banked
  7310  00033C  51C5               	movf	_ic_ptr& (0+255),w,b
  7311  00033E  26D9               	addwf	fsr2l,f,c
  7312  000340  0100               	movlb	0	; () banked
  7313  000342  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7314  000344  22DA               	addwfc	fsr2h,f,c
  7315  000346  2ADF               	incf	indf2,f,c
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;my_i2c.c: 205: data_written = 1;
  7319  000348  0E01               	movlw	1
  7320  00034A  0100               	movlb	0	; () banked
  7321  00034C  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  7322                           
  7323                           ;my_i2c.c: 206: }
  7324  00034E  D109               	goto	i2l305
  7325  000350                     L8:
  7326  000350  6EDF               	movwf	indf2,c
  7327  000352  D107               	goto	i2l305
  7328  000354                     i2l326:
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;my_i2c.c: 215: {
  7332                           ;my_i2c.c: 217: if (SSPSTATbits.P == 1)
  7333  000354  A8C7               	btfss	4039,4,c	;volatile
  7334  000356  D059               	goto	i2l3792
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;my_i2c.c: 218: {
  7338                           ;my_i2c.c: 221: ic_ptr->event_count++;
  7339  000358  0100               	movlb	0	; () banked
  7340  00035A  EE20 F020          	lfsr	2,32
  7341  00035E  0100               	movlb	0	; () banked
  7342  000360  51C5               	movf	_ic_ptr& (0+255),w,b
  7343  000362  26D9               	addwf	fsr2l,f,c
  7344  000364  0100               	movlb	0	; () banked
  7345  000366  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7346  000368  22DA               	addwfc	fsr2h,f,c
  7347  00036A  2ADF               	incf	indf2,f,c
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;my_i2c.c: 222: if (data_read)
  7351  00036C  0100               	movlb	0	; () banked
  7352  00036E  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7353  000370  B4D8               	btfsc	status,2,c
  7354  000372  D047               	goto	i2l3788
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;my_i2c.c: 223: {
  7358                           ;my_i2c.c: 224: if (SSPSTATbits.D_A == 1)
  7359  000374  AAC7               	btfss	4039,5,c	;volatile
  7360  000376  D025               	goto	i2l3786
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;my_i2c.c: 225: {
  7364                           ;my_i2c.c: 227: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7365  000378  0100               	movlb	0	; () banked
  7366  00037A  EE20 F00E          	lfsr	2,14
  7367  00037E  0100               	movlb	0	; () banked
  7368  000380  51C5               	movf	_ic_ptr& (0+255),w,b
  7369  000382  26D9               	addwf	fsr2l,f,c
  7370  000384  0100               	movlb	0	; () banked
  7371  000386  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7372  000388  22DA               	addwfc	fsr2h,f,c
  7373  00038A  50DF               	movf	indf2,w,c
  7374  00038C  0100               	movlb	0	; () banked
  7375  00038E  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7376  000390  0100               	movlb	0	; () banked
  7377  000392  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7378  000394  0D01               	mullw	1
  7379  000396  50F3               	movf	prodl,w,c
  7380  000398  0100               	movlb	0	; () banked
  7381  00039A  25C5               	addwf	_ic_ptr& (0+255),w,b
  7382  00039C  6ED9               	movwf	fsr2l,c
  7383  00039E  50F4               	movf	prodh,w,c
  7384  0003A0  0100               	movlb	0	; () banked
  7385  0003A2  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7386  0003A4  6EDA               	movwf	fsr2h,c
  7387  0003A6  0100               	movlb	0	; () banked
  7388  0003A8  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;my_i2c.c: 228: ic_ptr->buflen++;
  7392  0003AC  0100               	movlb	0	; () banked
  7393  0003AE  EE20 F00E          	lfsr	2,14
  7394  0003B2  0100               	movlb	0	; () banked
  7395  0003B4  51C5               	movf	_ic_ptr& (0+255),w,b
  7396  0003B6  26D9               	addwf	fsr2l,f,c
  7397  0003B8  0100               	movlb	0	; () banked
  7398  0003BA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7399  0003BC  22DA               	addwfc	fsr2h,f,c
  7400  0003BE  2ADF               	incf	indf2,f,c
  7401  0003C0  D020               	goto	i2l3788
  7402  0003C2                     i2l3786:
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;my_i2c.c: 231: else
  7406                           ;my_i2c.c: 232: {
  7407                           ;my_i2c.c: 234: ic_ptr->error_count++;
  7408  0003C2  0100               	movlb	0	; () banked
  7409  0003C4  EE20 F023          	lfsr	2,35
  7410  0003C8  0100               	movlb	0	; () banked
  7411  0003CA  51C5               	movf	_ic_ptr& (0+255),w,b
  7412  0003CC  26D9               	addwf	fsr2l,f,c
  7413  0003CE  0100               	movlb	0	; () banked
  7414  0003D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7415  0003D2  22DA               	addwfc	fsr2h,f,c
  7416  0003D4  2ADF               	incf	indf2,f,c
  7417                           
  7418                           ;my_i2c.c: 235: ic_ptr->error_code = 0x6;
  7419  0003D6  0100               	movlb	0	; () banked
  7420  0003D8  EE20 F022          	lfsr	2,34
  7421  0003DC  0100               	movlb	0	; () banked
  7422  0003DE  51C5               	movf	_ic_ptr& (0+255),w,b
  7423  0003E0  26D9               	addwf	fsr2l,f,c
  7424  0003E2  0100               	movlb	0	; () banked
  7425  0003E4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7426  0003E6  22DA               	addwfc	fsr2h,f,c
  7427  0003E8  0E06               	movlw	6
  7428  0003EA  6EDF               	movwf	indf2,c
  7429                           
  7430                           ;my_i2c.c: 236: ic_ptr->status = 0x5;
  7431  0003EC  0100               	movlb	0	; () banked
  7432  0003EE  EE20 F021          	lfsr	2,33
  7433  0003F2  0100               	movlb	0	; () banked
  7434  0003F4  51C5               	movf	_ic_ptr& (0+255),w,b
  7435  0003F6  26D9               	addwf	fsr2l,f,c
  7436  0003F8  0100               	movlb	0	; () banked
  7437  0003FA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7438  0003FC  22DA               	addwfc	fsr2h,f,c
  7439  0003FE  0E05               	movlw	5
  7440  000400  D705               	goto	L13
  7441  000402                     i2l3788:
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;my_i2c.c: 239: else
  7445                           ;my_i2c.c: 240: {
  7446                           ;my_i2c.c: 242: msg_ready = 1;
  7447  000402  0E01               	movlw	1
  7448  000404  0100               	movlb	0	; () banked
  7449  000406  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7450                           
  7451                           ; BSR set to: 0
  7452  000408  D702               	goto	i2l313
  7453  00040A                     i2l3792:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;my_i2c.c: 246: else if (data_read)
  7457  00040A  0100               	movlb	0	; () banked
  7458  00040C  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7459  00040E  B4D8               	btfsc	status,2,c
  7460  000410  D0A8               	goto	i2l305
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;my_i2c.c: 247: {
  7464                           ;my_i2c.c: 248: ic_ptr->event_count++;
  7465  000412  0100               	movlb	0	; () banked
  7466  000414  EE20 F020          	lfsr	2,32
  7467  000418  0100               	movlb	0	; () banked
  7468  00041A  51C5               	movf	_ic_ptr& (0+255),w,b
  7469  00041C  26D9               	addwf	fsr2l,f,c
  7470  00041E  0100               	movlb	0	; () banked
  7471  000420  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7472  000422  22DA               	addwfc	fsr2h,f,c
  7473  000424  2ADF               	incf	indf2,f,c
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;my_i2c.c: 249: if (SSP1STATbits.D_A == 1)
  7477  000426  AAC7               	btfss	4039,5,c	;volatile
  7478  000428  D01E               	goto	i2l334
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;my_i2c.c: 250: {
  7482                           ;my_i2c.c: 252: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7483  00042A  0100               	movlb	0	; () banked
  7484  00042C  EE20 F00E          	lfsr	2,14
  7485  000430  0100               	movlb	0	; () banked
  7486  000432  51C5               	movf	_ic_ptr& (0+255),w,b
  7487  000434  26D9               	addwf	fsr2l,f,c
  7488  000436  0100               	movlb	0	; () banked
  7489  000438  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7490  00043A  22DA               	addwfc	fsr2h,f,c
  7491  00043C  50DF               	movf	indf2,w,c
  7492  00043E  0100               	movlb	0	; () banked
  7493  000440  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7494  000442  0100               	movlb	0	; () banked
  7495  000444  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7496  000446  0D01               	mullw	1
  7497  000448  50F3               	movf	prodl,w,c
  7498  00044A  0100               	movlb	0	; () banked
  7499  00044C  25C5               	addwf	_ic_ptr& (0+255),w,b
  7500  00044E  6ED9               	movwf	fsr2l,c
  7501  000450  50F4               	movf	prodh,w,c
  7502  000452  0100               	movlb	0	; () banked
  7503  000454  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7504  000456  6EDA               	movwf	fsr2h,c
  7505  000458  0100               	movlb	0	; () banked
  7506  00045A  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;my_i2c.c: 253: ic_ptr->buflen++;
  7510  00045E  0100               	movlb	0	; () banked
  7511  000460  EE20 F00E          	lfsr	2,14
  7512  000464  D036               	goto	L9
  7513  000466                     i2l334:
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;my_i2c.c: 255: else
  7517                           ;my_i2c.c: 256: {
  7518                           ;my_i2c.c: 257: if (SSPSTATbits.R_W == 1)
  7519  000466  A4C7               	btfss	4039,2,c	;volatile
  7520  000468  D6BD               	goto	i2l3744
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;my_i2c.c: 258: {
  7524                           ;my_i2c.c: 259: if( ic_ptr->buffer[0] == 0x06 )
  7525  00046A  0E06               	movlw	6
  7526  00046C  C0C5  FFD9         	movff	_ic_ptr,fsr2l
  7527  000470  C0C6  FFDA         	movff	_ic_ptr+1,fsr2h
  7528  000474  62DF               	cpfseq	indf2,c
  7529  000476  D035               	goto	i2l3818
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;my_i2c.c: 260: {
  7533                           ;my_i2c.c: 261: ic_ptr->status = 0x8;
  7534  000478  0100               	movlb	0	; () banked
  7535  00047A  EE20 F021          	lfsr	2,33
  7536  00047E  0100               	movlb	0	; () banked
  7537  000480  51C5               	movf	_ic_ptr& (0+255),w,b
  7538  000482  26D9               	addwf	fsr2l,f,c
  7539  000484  0100               	movlb	0	; () banked
  7540  000486  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7541  000488  22DA               	addwfc	fsr2h,f,c
  7542  00048A  0E08               	movlw	8
  7543  00048C  6EDF               	movwf	indf2,c
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;my_i2c.c: 262: msg_ready = 1;
  7547  00048E  0E01               	movlw	1
  7548  000490  0100               	movlb	0	; () banked
  7549  000492  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;my_i2c.c: 263: msg_to_send = 1;
  7553  000494  0E01               	movlw	1
  7554  000496  0100               	movlb	0	; () banked
  7555  000498  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;my_i2c.c: 265: data_read = 0;
  7559  00049A  0E00               	movlw	0
  7560  00049C  0100               	movlb	0	; () banked
  7561  00049E  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;my_i2c.c: 266: ic_ptr->outbufind = 0;
  7565  0004A0  0100               	movlb	0	; () banked
  7566  0004A2  EE20 F01E          	lfsr	2,30
  7567  0004A6  0100               	movlb	0	; () banked
  7568  0004A8  51C5               	movf	_ic_ptr& (0+255),w,b
  7569  0004AA  26D9               	addwf	fsr2l,f,c
  7570  0004AC  0100               	movlb	0	; () banked
  7571  0004AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7572  0004B0  22DA               	addwfc	fsr2h,f,c
  7573  0004B2  0E00               	movlw	0
  7574  0004B4  6EDF               	movwf	indf2,c
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;my_i2c.c: 267: SSPBUF = ic_ptr->outbuffer[0];
  7578  0004B6  0100               	movlb	0	; () banked
  7579  0004B8  EE20 F010          	lfsr	2,16
  7580  0004BC  0100               	movlb	0	; () banked
  7581  0004BE  51C5               	movf	_ic_ptr& (0+255),w,b
  7582  0004C0  26D9               	addwf	fsr2l,f,c
  7583  0004C2  0100               	movlb	0	; () banked
  7584  0004C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7585  0004C6  22DA               	addwfc	fsr2h,f,c
  7586  0004C8  50DF               	movf	indf2,w,c
  7587  0004CA  6EC9               	movwf	4041,c	;volatile
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;my_i2c.c: 268: ic_ptr->outbufind++;
  7591  0004CC  0100               	movlb	0	; () banked
  7592  0004CE  EE20 F01E          	lfsr	2,30
  7593  0004D2                     L9:
  7594  0004D2  0100               	movlb	0	; () banked
  7595  0004D4  51C5               	movf	_ic_ptr& (0+255),w,b
  7596  0004D6  26D9               	addwf	fsr2l,f,c
  7597  0004D8  0100               	movlb	0	; () banked
  7598  0004DA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7599  0004DC  22DA               	addwfc	fsr2h,f,c
  7600  0004DE  2ADF               	incf	indf2,f,c
  7601                           
  7602                           ;my_i2c.c: 270: }
  7603  0004E0  D040               	goto	i2l305
  7604  0004E2                     i2l3818:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;my_i2c.c: 271: else
  7608                           ;my_i2c.c: 272: {
  7609                           ;my_i2c.c: 273: if( ic_ptr->outbufind < 14 )
  7610  0004E2  0100               	movlb	0	; () banked
  7611  0004E4  EE20 F01E          	lfsr	2,30
  7612  0004E8  0100               	movlb	0	; () banked
  7613  0004EA  51C5               	movf	_ic_ptr& (0+255),w,b
  7614  0004EC  26D9               	addwf	fsr2l,f,c
  7615  0004EE  0100               	movlb	0	; () banked
  7616  0004F0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7617  0004F2  22DA               	addwfc	fsr2h,f,c
  7618  0004F4  50DF               	movf	indf2,w,c
  7619  0004F6  0100               	movlb	0	; () banked
  7620  0004F8  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7621  0004FA  0E0E               	movlw	14
  7622  0004FC  0100               	movlb	0	; () banked
  7623  0004FE  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7624  000500  B0D8               	btfsc	status,0,c
  7625  000502  D00E               	goto	i2l3824
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;my_i2c.c: 274: {
  7629                           ;my_i2c.c: 275: ic_ptr->outbufind++;
  7630  000504  0100               	movlb	0	; () banked
  7631  000506  EE20 F01E          	lfsr	2,30
  7632  00050A  0100               	movlb	0	; () banked
  7633  00050C  51C5               	movf	_ic_ptr& (0+255),w,b
  7634  00050E  26D9               	addwf	fsr2l,f,c
  7635  000510  0100               	movlb	0	; () banked
  7636  000512  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7637  000514  22DA               	addwfc	fsr2h,f,c
  7638  000516  2ADF               	incf	indf2,f,c
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;my_i2c.c: 276: data_read = 0;
  7642  000518  0E00               	movlw	0
  7643  00051A  0100               	movlb	0	; () banked
  7644  00051C  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7645                           
  7646                           ;my_i2c.c: 277: }
  7647  00051E  D021               	goto	i2l305
  7648  000520                     i2l3824:
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;my_i2c.c: 278: else
  7652                           ;my_i2c.c: 279: {
  7653                           ;my_i2c.c: 280: ic_ptr->outbufind = 0;
  7654  000520  0100               	movlb	0	; () banked
  7655  000522  EE20 F01E          	lfsr	2,30
  7656  000526  0100               	movlb	0	; () banked
  7657  000528  51C5               	movf	_ic_ptr& (0+255),w,b
  7658  00052A  26D9               	addwf	fsr2l,f,c
  7659  00052C  0100               	movlb	0	; () banked
  7660  00052E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7661  000530  22DA               	addwfc	fsr2h,f,c
  7662  000532  0E00               	movlw	0
  7663  000534  D66B               	goto	L13
  7664  000536                     i2l3830:
  7665                           
  7666                           ; BSR set to: 0
  7667  000536  0100               	movlb	0	; () banked
  7668  000538  EE20 F021          	lfsr	2,33
  7669  00053C  0100               	movlb	0	; () banked
  7670  00053E  51C5               	movf	_ic_ptr& (0+255),w,b
  7671  000540  26D9               	addwf	fsr2l,f,c
  7672  000542  0100               	movlb	0	; () banked
  7673  000544  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7674  000546  22DA               	addwfc	fsr2h,f,c
  7675  000548  50DF               	movf	indf2,w,c
  7676                           
  7677                           ; Switch size 1, requested type "space"
  7678                           ; Number of cases is 4, Range of values is 5 to 8
  7679                           ; switch strategies available:
  7680                           ; Name         Instructions Cycles
  7681                           ; simple_byte           13     7 (average)
  7682                           ;	Chosen strategy is simple_byte
  7683  00054A  0A05               	xorlw	5	; case 5
  7684  00054C  B4D8               	btfsc	status,2,c
  7685  00054E  D61B               	goto	i2l307
  7686  000550  0A03               	xorlw	3	; case 6
  7687  000552  B4D8               	btfsc	status,2,c
  7688  000554  D631               	goto	i2l311
  7689  000556  0A01               	xorlw	1	; case 7
  7690  000558  B4D8               	btfsc	status,2,c
  7691  00055A  D6FC               	goto	i2l326
  7692  00055C  0A0F               	xorlw	15	; case 8
  7693  00055E  B4D8               	btfsc	status,2,c
  7694  000560  D6BB               	goto	i2l3764
  7695  000562                     i2l305:
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;my_i2c.c: 298: }
  7699                           ;my_i2c.c: 301: if (data_read || data_written) {
  7700  000562  0100               	movlb	0	; () banked
  7701  000564  67A9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7702  000566  D004               	goto	i2l344
  7703                           
  7704                           ; BSR set to: 0
  7705  000568  0100               	movlb	0	; () banked
  7706  00056A  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7707  00056C  B4D8               	btfsc	status,2,c
  7708  00056E  D002               	goto	i2l3836
  7709  000570                     i2l344:
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;my_i2c.c: 303: if (SSPCON1bits.CKP == 0) {
  7713  000570  A8C6               	btfss	4038,4,c	;volatile
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;my_i2c.c: 304: SSPCON1bits.CKP = 1;
  7717  000572  88C6               	bsf	4038,4,c	;volatile
  7718  000574                     i2l3836:
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;my_i2c.c: 306: }
  7722                           ;my_i2c.c: 307: }
  7723                           ;my_i2c.c: 312: if ((ic_ptr->buflen > 14) && (!msg_ready))
  7724  000574  0100               	movlb	0	; () banked
  7725  000576  EE20 F00E          	lfsr	2,14
  7726  00057A  0100               	movlb	0	; () banked
  7727  00057C  51C5               	movf	_ic_ptr& (0+255),w,b
  7728  00057E  26D9               	addwf	fsr2l,f,c
  7729  000580  0100               	movlb	0	; () banked
  7730  000582  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7731  000584  22DA               	addwfc	fsr2h,f,c
  7732  000586  0E0E               	movlw	14
  7733  000588  64DF               	cpfsgt	indf2,c
  7734  00058A  D023               	goto	i2l3842
  7735                           
  7736                           ; BSR set to: 0
  7737  00058C  0100               	movlb	0	; () banked
  7738  00058E  67A8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7739  000590  D020               	goto	i2l3842
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;my_i2c.c: 313: {
  7743                           ;my_i2c.c: 315: ic_ptr->status = 0x5;
  7744  000592  0100               	movlb	0	; () banked
  7745  000594  EE20 F021          	lfsr	2,33
  7746  000598  0100               	movlb	0	; () banked
  7747  00059A  51C5               	movf	_ic_ptr& (0+255),w,b
  7748  00059C  26D9               	addwf	fsr2l,f,c
  7749  00059E  0100               	movlb	0	; () banked
  7750  0005A0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7751  0005A2  22DA               	addwfc	fsr2h,f,c
  7752  0005A4  0E05               	movlw	5
  7753  0005A6  6EDF               	movwf	indf2,c
  7754                           
  7755                           ;my_i2c.c: 316: ic_ptr->error_count++;
  7756  0005A8  0100               	movlb	0	; () banked
  7757  0005AA  EE20 F023          	lfsr	2,35
  7758  0005AE  0100               	movlb	0	; () banked
  7759  0005B0  51C5               	movf	_ic_ptr& (0+255),w,b
  7760  0005B2  26D9               	addwf	fsr2l,f,c
  7761  0005B4  0100               	movlb	0	; () banked
  7762  0005B6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7763  0005B8  22DA               	addwfc	fsr2h,f,c
  7764  0005BA  2ADF               	incf	indf2,f,c
  7765                           
  7766                           ;my_i2c.c: 317: ic_ptr->error_code = 0x7;
  7767  0005BC  0100               	movlb	0	; () banked
  7768  0005BE  EE20 F022          	lfsr	2,34
  7769  0005C2  0100               	movlb	0	; () banked
  7770  0005C4  51C5               	movf	_ic_ptr& (0+255),w,b
  7771  0005C6  26D9               	addwf	fsr2l,f,c
  7772  0005C8  0100               	movlb	0	; () banked
  7773  0005CA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7774  0005CC  22DA               	addwfc	fsr2h,f,c
  7775  0005CE  0E07               	movlw	7
  7776  0005D0  6EDF               	movwf	indf2,c
  7777  0005D2                     i2l3842:
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;my_i2c.c: 318: }
  7781                           ;my_i2c.c: 320: if (msg_ready)
  7782  0005D2  0100               	movlb	0	; () banked
  7783  0005D4  51A8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7784  0005D6  B4D8               	btfsc	status,2,c
  7785  0005D8  D032               	goto	i2l3850
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;my_i2c.c: 321: {
  7789                           ;my_i2c.c: 322: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7790  0005DA  0100               	movlb	0	; () banked
  7791  0005DC  EE20 F020          	lfsr	2,32
  7792  0005E0  0100               	movlb	0	; () banked
  7793  0005E2  51C5               	movf	_ic_ptr& (0+255),w,b
  7794  0005E4  26D9               	addwf	fsr2l,f,c
  7795  0005E6  0100               	movlb	0	; () banked
  7796  0005E8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7797  0005EA  22DA               	addwfc	fsr2h,f,c
  7798  0005EC  0100               	movlb	0	; () banked
  7799  0005EE  EE10 F00E          	lfsr	1,14
  7800  0005F2  0100               	movlb	0	; () banked
  7801  0005F4  51C5               	movf	_ic_ptr& (0+255),w,b
  7802  0005F6  26E1               	addwf	fsr1l,f,c
  7803  0005F8  0100               	movlb	0	; () banked
  7804  0005FA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7805  0005FC  22E2               	addwfc	fsr1h,f,c
  7806  0005FE  50E7               	movf	indf1,w,c
  7807  000600  0100               	movlb	0	; () banked
  7808  000602  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7809  000604  0100               	movlb	0	; () banked
  7810  000606  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7811  000608  0D01               	mullw	1
  7812  00060A  50F3               	movf	prodl,w,c
  7813  00060C  0100               	movlb	0	; () banked
  7814  00060E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7815  000610  6EE1               	movwf	fsr1l,c
  7816  000612  50F4               	movf	prodh,w,c
  7817  000614  0100               	movlb	0	; () banked
  7818  000616  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7819  000618  6EE2               	movwf	fsr1h,c
  7820  00061A  CFDF FFE7          	movff	indf2,indf1
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;my_i2c.c: 323: ToMainHigh_sendmsg(14, 40, (void *) ic_ptr->buffer);
  7824  00061E  0E28               	movlw	40
  7825  000620  0100               	movlb	0	; () banked
  7826  000622  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7827  000624  0100               	movlb	0	; () banked
  7828  000626  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7829  00062A  0100               	movlb	0	; () banked
  7830  00062C  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7831  000630  0E0E               	movlw	14
  7832  000632  ECB4  F00D         	call	_ToMainHigh_sendmsg
  7833                           
  7834                           ;my_i2c.c: 324: ic_ptr->buflen = 0;
  7835  000636  0100               	movlb	0	; () banked
  7836  000638  EE20 F00E          	lfsr	2,14
  7837  00063C  D041               	goto	L10
  7838  00063E                     i2l3850:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;my_i2c.c: 326: else if (ic_ptr->error_count >= 1)
  7842  00063E  0100               	movlb	0	; () banked
  7843  000640  EE20 F023          	lfsr	2,35
  7844  000644  0100               	movlb	0	; () banked
  7845  000646  51C5               	movf	_ic_ptr& (0+255),w,b
  7846  000648  26D9               	addwf	fsr2l,f,c
  7847  00064A  0100               	movlb	0	; () banked
  7848  00064C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7849  00064E  22DA               	addwfc	fsr2h,f,c
  7850  000650  50DF               	movf	indf2,w,c
  7851  000652  B4D8               	btfsc	status,2,c
  7852  000654  D03D               	goto	i2l3858
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;my_i2c.c: 327: {
  7856                           ;my_i2c.c: 328: error_buf[0] = ic_ptr->error_count;
  7857  000656  0100               	movlb	0	; () banked
  7858  000658  EE20 F023          	lfsr	2,35
  7859  00065C  0100               	movlb	0	; () banked
  7860  00065E  51C5               	movf	_ic_ptr& (0+255),w,b
  7861  000660  26D9               	addwf	fsr2l,f,c
  7862  000662  0100               	movlb	0	; () banked
  7863  000664  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7864  000666  22DA               	addwfc	fsr2h,f,c
  7865  000668  50DF               	movf	indf2,w,c
  7866  00066A  0100               	movlb	0	; () banked
  7867  00066C  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  7868                           
  7869                           ;my_i2c.c: 329: error_buf[1] = ic_ptr->error_code;
  7870  00066E  0100               	movlb	0	; () banked
  7871  000670  EE20 F022          	lfsr	2,34
  7872  000674  0100               	movlb	0	; () banked
  7873  000676  51C5               	movf	_ic_ptr& (0+255),w,b
  7874  000678  26D9               	addwf	fsr2l,f,c
  7875  00067A  0100               	movlb	0	; () banked
  7876  00067C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7877  00067E  22DA               	addwfc	fsr2h,f,c
  7878  000680  50DF               	movf	indf2,w,c
  7879  000682  0100               	movlb	0	; () banked
  7880  000684  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7881                           
  7882                           ;my_i2c.c: 330: error_buf[2] = ic_ptr->event_count;
  7883  000686  0100               	movlb	0	; () banked
  7884  000688  EE20 F020          	lfsr	2,32
  7885  00068C  0100               	movlb	0	; () banked
  7886  00068E  51C5               	movf	_ic_ptr& (0+255),w,b
  7887  000690  26D9               	addwf	fsr2l,f,c
  7888  000692  0100               	movlb	0	; () banked
  7889  000694  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7890  000696  22DA               	addwfc	fsr2h,f,c
  7891  000698  50DF               	movf	indf2,w,c
  7892  00069A  0100               	movlb	0	; () banked
  7893  00069C  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;my_i2c.c: 331: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7897  00069E  0E29               	movlw	41
  7898  0006A0  0100               	movlb	0	; () banked
  7899  0006A2  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7900  0006A4  0100               	movlb	0	; () banked
  7901  0006A6  0E00               	movlw	high i2c_int_handler@error_buf
  7902  0006A8  0100               	movlb	0	; () banked
  7903  0006AA  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7904  0006AC  0100               	movlb	0	; () banked
  7905  0006AE  0E9F               	movlw	low i2c_int_handler@error_buf
  7906  0006B0  0100               	movlb	0	; () banked
  7907  0006B2  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7908  0006B4  0E03               	movlw	3
  7909  0006B6  ECB4  F00D         	call	_ToMainHigh_sendmsg
  7910                           
  7911                           ;my_i2c.c: 332: ic_ptr->error_count = 0;
  7912  0006BA  0100               	movlb	0	; () banked
  7913  0006BC  EE20 F023          	lfsr	2,35
  7914  0006C0                     L10:
  7915  0006C0  0100               	movlb	0	; () banked
  7916  0006C2  51C5               	movf	_ic_ptr& (0+255),w,b
  7917  0006C4  26D9               	addwf	fsr2l,f,c
  7918  0006C6  0100               	movlb	0	; () banked
  7919  0006C8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7920  0006CA  22DA               	addwfc	fsr2h,f,c
  7921  0006CC  0E00               	movlw	0
  7922  0006CE  6EDF               	movwf	indf2,c
  7923  0006D0                     i2l3858:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;my_i2c.c: 333: }
  7927                           ;my_i2c.c: 334: if (msg_to_send) {
  7928  0006D0  0100               	movlb	0	; () banked
  7929  0006D2  51A6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7930  0006D4  B4D8               	btfsc	status,2,c
  7931  0006D6  D01F               	goto	i2l3868
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;my_i2c.c: 336: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  7935  0006D8  0E10               	movlw	16
  7936  0006DA  0100               	movlb	0	; () banked
  7937  0006DC  25C5               	addwf	_ic_ptr& (0+255),w,b
  7938  0006DE  0100               	movlb	0	; () banked
  7939  0006E0  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7940  0006E2  0E00               	movlw	0
  7941  0006E4  0100               	movlb	0	; () banked
  7942  0006E6  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7943  0006E8  0100               	movlb	0	; () banked
  7944  0006EA  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7945  0006EC  0E0E               	movlw	14
  7946  0006EE  EC9E  F00C         	call	_start_i2c_slave_reply
  7947                           
  7948                           ;my_i2c.c: 338: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7949  0006F2  0E2A               	movlw	42
  7950  0006F4  0100               	movlb	0	; () banked
  7951  0006F6  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7952  0006F8  0100               	movlb	0	; () banked
  7953  0006FA  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7954  0006FE  0100               	movlb	0	; () banked
  7955  000700  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7956  000704  0E00               	movlw	0
  7957  000706  ECB4  F00D         	call	_ToMainHigh_sendmsg
  7958                           
  7959                           ;my_i2c.c: 339: need_data = 1;
  7960  00070A  0E01               	movlw	1
  7961  00070C  0100               	movlb	0	; () banked
  7962  00070E  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;my_i2c.c: 340: msg_to_send = 0;
  7966  000710  0E00               	movlw	0
  7967  000712  0100               	movlb	0	; () banked
  7968  000714  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7969  000716                     i2l3868:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;my_i2c.c: 341: }
  7973                           ;my_i2c.c: 344: if(need_data)
  7974  000716  0100               	movlb	0	; () banked
  7975  000718  51A4               	movf	i2c_int_handler@need_data& (0+255),w,b
  7976  00071A  B4D8               	btfsc	status,2,c
  7977  00071C  0012               	return	
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;my_i2c.c: 345: {
  7981                           ;my_i2c.c: 346: unsigned char msg_type;
  7982                           ;my_i2c.c: 347: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  7983  00071E  0100               	movlb	0	; () banked
  7984  000720  0E00               	movlw	high i2c_int_handler@msg_type
  7985  000722  0100               	movlb	0	; () banked
  7986  000724  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7987  000726  0100               	movlb	0	; () banked
  7988  000728  0EA7               	movlw	low i2c_int_handler@msg_type
  7989  00072A  0100               	movlb	0	; () banked
  7990  00072C  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7991  00072E  0E10               	movlw	16
  7992  000730  0100               	movlb	0	; () banked
  7993  000732  25C5               	addwf	_ic_ptr& (0+255),w,b
  7994  000734  0100               	movlb	0	; () banked
  7995  000736  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7996  000738  0E00               	movlw	0
  7997  00073A  0100               	movlb	0	; () banked
  7998  00073C  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7999  00073E  0100               	movlb	0	; () banked
  8000  000740  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  8001  000742  0E0E               	movlw	14
  8002  000744  EC39  F00D         	call	_FromMainHigh_recvmsg
  8003  000748  0100               	movlb	0	; () banked
  8004  00074A  6F9E               	movwf	i2c_int_handler@length& (0+255),b
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;my_i2c.c: 356: else
  8008                           ;my_i2c.c: 357: {
  8009                           ;my_i2c.c: 358: need_data = 0;
  8010                           
  8011                           ; BSR set to: 0
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;my_i2c.c: 353: {
  8015                           ;my_i2c.c: 355: }
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;my_i2c.c: 352: else if( length < 0 )
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;my_i2c.c: 349: {
  8022                           ;my_i2c.c: 351: }
  8023                           
  8024                           ;my_i2c.c: 348: if( length == -4 )
  8025  00074C  0E00               	movlw	0
  8026  00074E  0100               	movlb	0	; () banked
  8027  000750  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  8028  000752  0012               	return	
  8029  000754                     __end_of_i2c_int_handler:
  8030                           	opt stack 0
  8031                           pclatu	equ	0xFFB
  8032                           pclath	equ	0xFFA
  8033                           tblptru	equ	0xFF8
  8034                           tblptrh	equ	0xFF7
  8035                           tblptrl	equ	0xFF6
  8036                           tablat	equ	0xFF5
  8037                           prodh	equ	0xFF4
  8038                           prodl	equ	0xFF3
  8039                           intcon	equ	0xFF2
  8040                           intcon2	equ	0xFF1
  8041                           postinc0	equ	0xFEE
  8042                           fsr0h	equ	0xFEA
  8043                           fsr0l	equ	0xFE9
  8044                           wreg	equ	0xFE8
  8045                           indf1	equ	0xFE7
  8046                           fsr1h	equ	0xFE2
  8047                           fsr1l	equ	0xFE1
  8048                           bsr	equ	0xFE0
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           fsr2h	equ	0xFDA
  8053                           fsr2l	equ	0xFD9
  8054                           status	equ	0xFD8
  8055                           
  8056 ;; *************** function _start_i2c_slave_reply *****************
  8057 ;; Defined at:
  8058 ;;		line 57 in file "../src/my_i2c.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  length          1    wreg     unsigned char 
  8061 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8062 ;;		 -> NULL(0), main@ic(38), 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  length          1    2[BANK0 ] unsigned char 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;		None               void
  8067 ;; Registers used:
  8068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8074 ;;      Params:         0       2       0       0       0
  8075 ;;      Locals:         0       1       0       0       0
  8076 ;;      Temps:          0       0       0       0       0
  8077 ;;      Totals:         0       3       0       0       0
  8078 ;;Total ram usage:        3 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_i2c_int_handler
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text47
  8088  00193C                     __ptext47:
  8089                           	opt stack 0
  8090  00193C                     _start_i2c_slave_reply:
  8091                           	opt stack 18
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;incstack = 0
  8095                           ;start_i2c_slave_reply@length stored from wreg
  8096  00193C  0100               	movlb	0	; () banked
  8097  00193E  6F82               	movwf	start_i2c_slave_reply@length& (0+255),b
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;my_i2c.c: 64: ic_ptr->outbuflen = length;
  8101  001940  0100               	movlb	0	; () banked
  8102  001942  EE20 F01F          	lfsr	2,31
  8103  001946  0100               	movlb	0	; () banked
  8104  001948  51C5               	movf	_ic_ptr& (0+255),w,b
  8105  00194A  26D9               	addwf	fsr2l,f,c
  8106  00194C  0100               	movlb	0	; () banked
  8107  00194E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8108  001950  22DA               	addwfc	fsr2h,f,c
  8109  001952  0100               	movlb	0	; () banked
  8110  001954  C082  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8111                           
  8112                           ;my_i2c.c: 65: ic_ptr->outbufind = 1;
  8113  001958  0100               	movlb	0	; () banked
  8114  00195A  EE20 F01E          	lfsr	2,30
  8115  00195E  0100               	movlb	0	; () banked
  8116  001960  51C5               	movf	_ic_ptr& (0+255),w,b
  8117  001962  26D9               	addwf	fsr2l,f,c
  8118  001964  0100               	movlb	0	; () banked
  8119  001966  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8120  001968  22DA               	addwfc	fsr2h,f,c
  8121  00196A  0E01               	movlw	1
  8122  00196C  6EDF               	movwf	indf2,c
  8123                           
  8124                           ;my_i2c.c: 68: SSPBUF = ic_ptr->outbuffer[0];
  8125  00196E  0100               	movlb	0	; () banked
  8126  001970  EE20 F010          	lfsr	2,16
  8127  001974  0100               	movlb	0	; () banked
  8128  001976  51C5               	movf	_ic_ptr& (0+255),w,b
  8129  001978  26D9               	addwf	fsr2l,f,c
  8130  00197A  0100               	movlb	0	; () banked
  8131  00197C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8132  00197E  22DA               	addwfc	fsr2h,f,c
  8133  001980  50DF               	movf	indf2,w,c
  8134  001982  6EC9               	movwf	4041,c	;volatile
  8135                           
  8136                           ; BSR set to: 0
  8137                           ;my_i2c.c: 71: SSPCON1bits.CKP = 1;
  8138  001984  88C6               	bsf	4038,4,c	;volatile
  8139                           
  8140                           ; BSR set to: 0
  8141  001986  0012               	return	
  8142  001988                     __end_of_start_i2c_slave_reply:
  8143                           	opt stack 0
  8144                           pclatu	equ	0xFFB
  8145                           pclath	equ	0xFFA
  8146                           tblptru	equ	0xFF8
  8147                           tblptrh	equ	0xFF7
  8148                           tblptrl	equ	0xFF6
  8149                           tablat	equ	0xFF5
  8150                           prodh	equ	0xFF4
  8151                           prodl	equ	0xFF3
  8152                           intcon	equ	0xFF2
  8153                           intcon2	equ	0xFF1
  8154                           postinc0	equ	0xFEE
  8155                           fsr0h	equ	0xFEA
  8156                           fsr0l	equ	0xFE9
  8157                           wreg	equ	0xFE8
  8158                           indf1	equ	0xFE7
  8159                           fsr1h	equ	0xFE2
  8160                           fsr1l	equ	0xFE1
  8161                           bsr	equ	0xFE0
  8162                           indf2	equ	0xFDF
  8163                           postinc2	equ	0xFDE
  8164                           postdec2	equ	0xFDD
  8165                           fsr2h	equ	0xFDA
  8166                           fsr2l	equ	0xFD9
  8167                           status	equ	0xFD8
  8168                           
  8169 ;; *************** function _handle_start *****************
  8170 ;; Defined at:
  8171 ;;		line 77 in file "../src/my_i2c.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  data_read       1    wreg     unsigned char 
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;  data_read       1    0[BANK0 ] unsigned char 
  8176 ;; Return value:  Size  Location     Type
  8177 ;;		None               void
  8178 ;; Registers used:
  8179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8185 ;;      Params:         0       0       0       0       0
  8186 ;;      Locals:         0       1       0       0       0
  8187 ;;      Temps:          0       0       0       0       0
  8188 ;;      Totals:         0       1       0       0       0
  8189 ;;Total ram usage:        1 bytes
  8190 ;; Hardware stack levels used:    1
  8191 ;; This function calls:
  8192 ;;		Nothing
  8193 ;; This function is called by:
  8194 ;;		_i2c_int_handler
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text48
  8199  0010B2                     __ptext48:
  8200                           	opt stack 0
  8201  0010B2                     _handle_start:
  8202                           	opt stack 18
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;incstack = 0
  8206                           ;handle_start@data_read stored from wreg
  8207  0010B2  0100               	movlb	0	; () banked
  8208  0010B4  6F80               	movwf	handle_start@data_read& (0+255),b
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;my_i2c.c: 78: ic_ptr->event_count = 1;
  8212  0010B6  0100               	movlb	0	; () banked
  8213  0010B8  EE20 F020          	lfsr	2,32
  8214  0010BC  0100               	movlb	0	; () banked
  8215  0010BE  51C5               	movf	_ic_ptr& (0+255),w,b
  8216  0010C0  26D9               	addwf	fsr2l,f,c
  8217  0010C2  0100               	movlb	0	; () banked
  8218  0010C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8219  0010C6  22DA               	addwfc	fsr2h,f,c
  8220  0010C8  0E01               	movlw	1
  8221  0010CA  6EDF               	movwf	indf2,c
  8222                           
  8223                           ;my_i2c.c: 79: ic_ptr->buflen = 0;
  8224  0010CC  0100               	movlb	0	; () banked
  8225  0010CE  EE20 F00E          	lfsr	2,14
  8226  0010D2  0100               	movlb	0	; () banked
  8227  0010D4  51C5               	movf	_ic_ptr& (0+255),w,b
  8228  0010D6  26D9               	addwf	fsr2l,f,c
  8229  0010D8  0100               	movlb	0	; () banked
  8230  0010DA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8231  0010DC  22DA               	addwfc	fsr2h,f,c
  8232  0010DE  0E00               	movlw	0
  8233  0010E0  6EDF               	movwf	indf2,c
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;my_i2c.c: 81: if (data_read) {
  8237  0010E2  0100               	movlb	0	; () banked
  8238  0010E4  5180               	movf	handle_start@data_read& (0+255),w,b
  8239  0010E6  B4D8               	btfsc	status,2,c
  8240  0010E8  D03D               	goto	i2l2728
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;my_i2c.c: 82: if (SSPSTATbits.D_A == 1) {
  8244  0010EA  AAC7               	btfss	4039,5,c	;volatile
  8245  0010EC  D021               	goto	i2l295
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;my_i2c.c: 85: ic_ptr->status = 0x5;
  8249  0010EE  0100               	movlb	0	; () banked
  8250  0010F0  EE20 F021          	lfsr	2,33
  8251  0010F4  0100               	movlb	0	; () banked
  8252  0010F6  51C5               	movf	_ic_ptr& (0+255),w,b
  8253  0010F8  26D9               	addwf	fsr2l,f,c
  8254  0010FA  0100               	movlb	0	; () banked
  8255  0010FC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8256  0010FE  22DA               	addwfc	fsr2h,f,c
  8257  001100  0E05               	movlw	5
  8258  001102  6EDF               	movwf	indf2,c
  8259                           
  8260                           ;my_i2c.c: 86: ic_ptr->error_count++;
  8261  001104  0100               	movlb	0	; () banked
  8262  001106  EE20 F023          	lfsr	2,35
  8263  00110A  0100               	movlb	0	; () banked
  8264  00110C  51C5               	movf	_ic_ptr& (0+255),w,b
  8265  00110E  26D9               	addwf	fsr2l,f,c
  8266  001110  0100               	movlb	0	; () banked
  8267  001112  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8268  001114  22DA               	addwfc	fsr2h,f,c
  8269  001116  2ADF               	incf	indf2,f,c
  8270                           
  8271                           ;my_i2c.c: 87: ic_ptr->error_code = 0x5;
  8272  001118  0100               	movlb	0	; () banked
  8273  00111A  EE20 F022          	lfsr	2,34
  8274  00111E  0100               	movlb	0	; () banked
  8275  001120  51C5               	movf	_ic_ptr& (0+255),w,b
  8276  001122  26D9               	addwf	fsr2l,f,c
  8277  001124  0100               	movlb	0	; () banked
  8278  001126  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8279  001128  22DA               	addwfc	fsr2h,f,c
  8280  00112A  0E05               	movlw	5
  8281  00112C  6EDF               	movwf	indf2,c
  8282                           
  8283                           ;my_i2c.c: 88: } else {
  8284  00112E  0012               	return	
  8285  001130                     i2l295:
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;my_i2c.c: 89: if (SSPSTATbits.R_W == 1) {
  8289  001130  A4C7               	btfss	4039,2,c	;volatile
  8290  001132  D00C               	goto	i2l2726
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;my_i2c.c: 90: ic_ptr->status = 0x8;
  8294  001134  0100               	movlb	0	; () banked
  8295  001136  EE20 F021          	lfsr	2,33
  8296  00113A  0100               	movlb	0	; () banked
  8297  00113C  51C5               	movf	_ic_ptr& (0+255),w,b
  8298  00113E  26D9               	addwf	fsr2l,f,c
  8299  001140  0100               	movlb	0	; () banked
  8300  001142  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8301  001144  22DA               	addwfc	fsr2h,f,c
  8302  001146  0E08               	movlw	8
  8303  001148  6EDF               	movwf	indf2,c
  8304                           
  8305                           ;my_i2c.c: 92: } else {
  8306  00114A  0012               	return	
  8307  00114C                     i2l2726:
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;my_i2c.c: 93: ic_ptr->status = 0x7;
  8311  00114C  0100               	movlb	0	; () banked
  8312  00114E  EE20 F021          	lfsr	2,33
  8313  001152  0100               	movlb	0	; () banked
  8314  001154  51C5               	movf	_ic_ptr& (0+255),w,b
  8315  001156  26D9               	addwf	fsr2l,f,c
  8316  001158  0100               	movlb	0	; () banked
  8317  00115A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8318  00115C  22DA               	addwfc	fsr2h,f,c
  8319  00115E  0E07               	movlw	7
  8320  001160  6EDF               	movwf	indf2,c
  8321  001162  0012               	return	
  8322  001164                     i2l2728:
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;my_i2c.c: 98: ic_ptr->status = 0x6;
  8326  001164  0100               	movlb	0	; () banked
  8327  001166  EE20 F021          	lfsr	2,33
  8328  00116A  0100               	movlb	0	; () banked
  8329  00116C  51C5               	movf	_ic_ptr& (0+255),w,b
  8330  00116E  26D9               	addwf	fsr2l,f,c
  8331  001170  0100               	movlb	0	; () banked
  8332  001172  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8333  001174  22DA               	addwfc	fsr2h,f,c
  8334  001176  0E06               	movlw	6
  8335  001178  6EDF               	movwf	indf2,c
  8336  00117A  0012               	return	
  8337  00117C                     __end_of_handle_start:
  8338                           	opt stack 0
  8339                           pclatu	equ	0xFFB
  8340                           pclath	equ	0xFFA
  8341                           tblptru	equ	0xFF8
  8342                           tblptrh	equ	0xFF7
  8343                           tblptrl	equ	0xFF6
  8344                           tablat	equ	0xFF5
  8345                           prodh	equ	0xFF4
  8346                           prodl	equ	0xFF3
  8347                           intcon	equ	0xFF2
  8348                           intcon2	equ	0xFF1
  8349                           postinc0	equ	0xFEE
  8350                           fsr0h	equ	0xFEA
  8351                           fsr0l	equ	0xFE9
  8352                           wreg	equ	0xFE8
  8353                           indf1	equ	0xFE7
  8354                           fsr1h	equ	0xFE2
  8355                           fsr1l	equ	0xFE1
  8356                           bsr	equ	0xFE0
  8357                           indf2	equ	0xFDF
  8358                           postinc2	equ	0xFDE
  8359                           postdec2	equ	0xFDD
  8360                           fsr2h	equ	0xFDA
  8361                           fsr2l	equ	0xFD9
  8362                           status	equ	0xFD8
  8363                           
  8364 ;; *************** function _ToMainHigh_sendmsg *****************
  8365 ;; Defined at:
  8366 ;;		line 126 in file "../src/messages.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  length          1    wreg     unsigned char 
  8369 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8370 ;;  data            2   23[BANK0 ] PTR void 
  8371 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(38), 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  length          1   25[BANK0 ] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      char 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8383 ;;      Params:         0       3       0       0       0
  8384 ;;      Locals:         0       1       0       0       0
  8385 ;;      Temps:          0       0       0       0       0
  8386 ;;      Totals:         0       4       0       0       0
  8387 ;;Total ram usage:        4 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    2
  8390 ;; This function calls:
  8391 ;;		i2_send_msg
  8392 ;; This function is called by:
  8393 ;;		_i2c_int_handler
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text49
  8398  001B68                     __ptext49:
  8399                           	opt stack 0
  8400  001B68                     _ToMainHigh_sendmsg:
  8401                           	opt stack 16
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;incstack = 0
  8405                           ;ToMainHigh_sendmsg@length stored from wreg
  8406  001B68  0100               	movlb	0	; () banked
  8407  001B6A  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8411                           ;	Return value of _ToMainHigh_sendmsg is never used
  8412  001B6C  0102               	movlb	2	; () banked
  8413  001B6E  0E02               	movlw	high _ToMainHigh_MQ
  8414  001B70  0100               	movlb	0	; () banked
  8415  001B72  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8416  001B74  0102               	movlb	2	; () banked
  8417  001B76  0E57               	movlw	low _ToMainHigh_MQ
  8418  001B78  0100               	movlb	0	; () banked
  8419  001B7A  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8420  001B7C  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8421  001B80  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8422  001B84  0100               	movlb	0	; () banked
  8423  001B86  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8424  001B8A  0100               	movlb	0	; () banked
  8425  001B8C  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8426  001B90  EC5F  F007         	call	i2_send_msg	;wreg free
  8427  001B94  0012               	return	
  8428  001B96                     __end_of_ToMainHigh_sendmsg:
  8429                           	opt stack 0
  8430                           pclatu	equ	0xFFB
  8431                           pclath	equ	0xFFA
  8432                           tblptru	equ	0xFF8
  8433                           tblptrh	equ	0xFF7
  8434                           tblptrl	equ	0xFF6
  8435                           tablat	equ	0xFF5
  8436                           prodh	equ	0xFF4
  8437                           prodl	equ	0xFF3
  8438                           intcon	equ	0xFF2
  8439                           intcon2	equ	0xFF1
  8440                           postinc0	equ	0xFEE
  8441                           fsr0h	equ	0xFEA
  8442                           fsr0l	equ	0xFE9
  8443                           wreg	equ	0xFE8
  8444                           indf1	equ	0xFE7
  8445                           fsr1h	equ	0xFE2
  8446                           fsr1l	equ	0xFE1
  8447                           bsr	equ	0xFE0
  8448                           indf2	equ	0xFDF
  8449                           postinc2	equ	0xFDE
  8450                           postdec2	equ	0xFDD
  8451                           fsr2h	equ	0xFDA
  8452                           fsr2l	equ	0xFD9
  8453                           status	equ	0xFD8
  8454                           
  8455 ;; *************** function i2_send_msg *****************
  8456 ;; Defined at:
  8457 ;;		line 24 in file "../src/messages.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8460 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8461 ;;  length          1   12[BANK0 ] unsigned char 
  8462 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8463 ;;  data            2   14[BANK0 ] PTR void 
  8464 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  8465 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8466 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  8467 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8470 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8471 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8472 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8473 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      char 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8483 ;;      Params:         0       6       0       0       0
  8484 ;;      Locals:         0       5       0       0       0
  8485 ;;      Temps:          0       1       0       0       0
  8486 ;;      Totals:         0      12       0       0       0
  8487 ;;Total ram usage:       12 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    1
  8490 ;; This function calls:
  8491 ;;		i2___awmod
  8492 ;;		i2_memcpy
  8493 ;; This function is called by:
  8494 ;;		_ToMainHigh_sendmsg
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text50
  8499  000EBE                     __ptext50:
  8500                           	opt stack 0
  8501  000EBE                     i2_send_msg:
  8502                           	opt stack 16
  8503                           
  8504                           ;messages.c: 25: unsigned char slot;
  8505                           ;messages.c: 27: msg *qmsg;
  8506                           ;messages.c: 28: size_t tlength = length;
  8507                           
  8508                           ;incstack = 0
  8509  000EBE  0100               	movlb	0	; () banked
  8510  000EC0  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8511  000EC4  0100               	movlb	0	; () banked
  8512  000EC6  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8516  000EC8  0100               	movlb	0	; () banked
  8517  000ECA  EE20 F055          	lfsr	2,85
  8518  000ECE  0100               	movlb	0	; () banked
  8519  000ED0  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8520  000ED2  26D9               	addwf	fsr2l,f,c
  8521  000ED4  0100               	movlb	0	; () banked
  8522  000ED6  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8523  000ED8  22DA               	addwfc	fsr2h,f,c
  8524  000EDA  50DF               	movf	indf2,w,c
  8525  000EDC  0100               	movlb	0	; () banked
  8526  000EDE  6F93               	movwf	i2send_msg@slot& (0+255),b
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8530  000EE0  0100               	movlb	0	; () banked
  8531  000EE2  5193               	movf	i2send_msg@slot& (0+255),w,b
  8532  000EE4  0D11               	mullw	17
  8533  000EE6  50F3               	movf	prodl,w,c
  8534  000EE8  0100               	movlb	0	; () banked
  8535  000EEA  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8536  000EEC  0100               	movlb	0	; () banked
  8537  000EEE  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8538  000EF0  50F4               	movf	prodh,w,c
  8539  000EF2  0100               	movlb	0	; () banked
  8540  000EF4  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8541  000EF6  0100               	movlb	0	; () banked
  8542  000EF8  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;messages.c: 41: if (qmsg->full != 0) {
  8546  000EFA  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8547  000EFE  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8548  000F02  50DF               	movf	indf2,w,c
  8549  000F04  B4D8               	btfsc	status,2,c
  8550  000F06  D002               	goto	i2l3556
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;messages.c: 42: return (-1);
  8554  000F08  0EFF               	movlw	255
  8555  000F0A  0012               	return	
  8556  000F0C                     i2l3556:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;messages.c: 43: }
  8560                           ;messages.c: 46: qmsg->length = length;
  8561  000F0C  0100               	movlb	0	; () banked
  8562  000F0E  EE20 F001          	lfsr	2,1
  8563  000F12  0100               	movlb	0	; () banked
  8564  000F14  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8565  000F16  26D9               	addwf	fsr2l,f,c
  8566  000F18  0100               	movlb	0	; () banked
  8567  000F1A  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8568  000F1C  22DA               	addwfc	fsr2h,f,c
  8569  000F1E  0100               	movlb	0	; () banked
  8570  000F20  C08C  FFDF         	movff	i2send_msg@length,indf2
  8571                           
  8572                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8573  000F24  0100               	movlb	0	; () banked
  8574  000F26  EE20 F002          	lfsr	2,2
  8575  000F2A  0100               	movlb	0	; () banked
  8576  000F2C  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8577  000F2E  26D9               	addwf	fsr2l,f,c
  8578  000F30  0100               	movlb	0	; () banked
  8579  000F32  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8580  000F34  22DA               	addwfc	fsr2h,f,c
  8581  000F36  0100               	movlb	0	; () banked
  8582  000F38  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8586  000F3C  0E03               	movlw	3
  8587  000F3E  0100               	movlb	0	; () banked
  8588  000F40  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8589  000F42  0100               	movlb	0	; () banked
  8590  000F44  6F80               	movwf	i2memcpy@d1& (0+255),b
  8591  000F46  0E00               	movlw	0
  8592  000F48  0100               	movlb	0	; () banked
  8593  000F4A  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8594  000F4C  0100               	movlb	0	; () banked
  8595  000F4E  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8596  000F50  0100               	movlb	0	; () banked
  8597  000F52  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8598  000F56  0100               	movlb	0	; () banked
  8599  000F58  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8600  000F5C  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8601  000F60  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8602  000F64  EC76  F00C         	call	i2_memcpy	;wreg free
  8603                           
  8604                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8605  000F68  0100               	movlb	0	; () banked
  8606  000F6A  EE20 F055          	lfsr	2,85
  8607  000F6E  0100               	movlb	0	; () banked
  8608  000F70  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8609  000F72  26D9               	addwf	fsr2l,f,c
  8610  000F74  0100               	movlb	0	; () banked
  8611  000F76  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8612  000F78  22DA               	addwfc	fsr2h,f,c
  8613  000F7A  0100               	movlb	0	; () banked
  8614  000F7C  EE10 F055          	lfsr	1,85
  8615  000F80  0100               	movlb	0	; () banked
  8616  000F82  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8617  000F84  26E1               	addwf	fsr1l,f,c
  8618  000F86  0100               	movlb	0	; () banked
  8619  000F88  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8620  000F8A  22E2               	addwfc	fsr1h,f,c
  8621  000F8C  50E7               	movf	indf1,w,c
  8622  000F8E  0100               	movlb	0	; () banked
  8623  000F90  6F90               	movwf	??i2_send_msg& (0+255),b
  8624  000F92  0E01               	movlw	1
  8625  000F94  0100               	movlb	0	; () banked
  8626  000F96  2590               	addwf	??i2_send_msg& (0+255),w,b
  8627  000F98  0100               	movlb	0	; () banked
  8628  000F9A  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8629  000F9C  0100               	movlb	0	; () banked
  8630  000F9E  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8631  000FA0  0E00               	movlw	0
  8632  000FA2  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8633  000FA4  0E00               	movlw	0
  8634  000FA6  0100               	movlb	0	; () banked
  8635  000FA8  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8636  000FAA  0E05               	movlw	5
  8637  000FAC  0100               	movlb	0	; () banked
  8638  000FAE  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8639  000FB0  EC20  F009         	call	i2___awmod	;wreg free
  8640  000FB4  0100               	movlb	0	; () banked
  8641  000FB6  5180               	movf	?i2___awmod& (0+255),w,b
  8642  000FB8  6EDF               	movwf	indf2,c
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;messages.c: 59: qmsg->full = 1;
  8646  000FBA  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8647  000FBE  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8648  000FC2  0E01               	movlw	1
  8649  000FC4  6EDF               	movwf	indf2,c
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;messages.c: 60: return (1);
  8653  000FC6  0E01               	movlw	1
  8654  000FC8  0012               	return	
  8655  000FCA                     __end_ofi2_send_msg:
  8656                           	opt stack 0
  8657                           pclatu	equ	0xFFB
  8658                           pclath	equ	0xFFA
  8659                           tblptru	equ	0xFF8
  8660                           tblptrh	equ	0xFF7
  8661                           tblptrl	equ	0xFF6
  8662                           tablat	equ	0xFF5
  8663                           prodh	equ	0xFF4
  8664                           prodl	equ	0xFF3
  8665                           intcon	equ	0xFF2
  8666                           intcon2	equ	0xFF1
  8667                           postinc0	equ	0xFEE
  8668                           fsr0h	equ	0xFEA
  8669                           fsr0l	equ	0xFE9
  8670                           wreg	equ	0xFE8
  8671                           indf1	equ	0xFE7
  8672                           fsr1h	equ	0xFE2
  8673                           fsr1l	equ	0xFE1
  8674                           bsr	equ	0xFE0
  8675                           indf2	equ	0xFDF
  8676                           postinc2	equ	0xFDE
  8677                           postdec2	equ	0xFDD
  8678                           fsr2h	equ	0xFDA
  8679                           fsr2l	equ	0xFD9
  8680                           status	equ	0xFD8
  8681                           
  8682 ;; *************** function _FromMainHigh_recvmsg *****************
  8683 ;; Defined at:
  8684 ;;		line 183 in file "../src/messages.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  maxlength       1    wreg     unsigned char 
  8687 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8688 ;;		 -> retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  8689 ;;  data            2   26[BANK0 ] PTR void 
  8690 ;;		 -> NULL(0), main@ic(38), 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      char 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8702 ;;      Params:         0       4       0       0       0
  8703 ;;      Locals:         0       1       0       0       0
  8704 ;;      Temps:          0       0       0       0       0
  8705 ;;      Totals:         0       5       0       0       0
  8706 ;;Total ram usage:        5 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:    2
  8709 ;; This function calls:
  8710 ;;		i2_recv_msg
  8711 ;; This function is called by:
  8712 ;;		_i2c_int_handler
  8713 ;;		_retrieve_sensor_values
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text51
  8718  001A72                     __ptext51:
  8719                           	opt stack 0
  8720  001A72                     _FromMainHigh_recvmsg:
  8721                           	opt stack 16
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;incstack = 0
  8725                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8726  001A72  0100               	movlb	0	; () banked
  8727  001A74  6F9C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8731  001A76  0103               	movlb	3	; () banked
  8732  001A78  0E03               	movlw	high _FromMainHigh_MQ
  8733  001A7A  0100               	movlb	0	; () banked
  8734  001A7C  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8735  001A7E  0103               	movlb	3	; () banked
  8736  001A80  0E00               	movlw	low _FromMainHigh_MQ
  8737  001A82  0100               	movlb	0	; () banked
  8738  001A84  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8739  001A86  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8740  001A8A  0100               	movlb	0	; () banked
  8741  001A8C  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8742  001A90  0100               	movlb	0	; () banked
  8743  001A92  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8744  001A96  0100               	movlb	0	; () banked
  8745  001A98  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8746  001A9C  0100               	movlb	0	; () banked
  8747  001A9E  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8748  001AA2  EC38  F006         	call	i2_recv_msg	;wreg free
  8749  001AA6  0012               	return	
  8750  001AA8                     __end_of_FromMainHigh_recvmsg:
  8751                           	opt stack 0
  8752                           pclatu	equ	0xFFB
  8753                           pclath	equ	0xFFA
  8754                           tblptru	equ	0xFF8
  8755                           tblptrh	equ	0xFF7
  8756                           tblptrl	equ	0xFF6
  8757                           tablat	equ	0xFF5
  8758                           prodh	equ	0xFF4
  8759                           prodl	equ	0xFF3
  8760                           intcon	equ	0xFF2
  8761                           intcon2	equ	0xFF1
  8762                           postinc0	equ	0xFEE
  8763                           fsr0h	equ	0xFEA
  8764                           fsr0l	equ	0xFE9
  8765                           wreg	equ	0xFE8
  8766                           indf1	equ	0xFE7
  8767                           fsr1h	equ	0xFE2
  8768                           fsr1l	equ	0xFE1
  8769                           bsr	equ	0xFE0
  8770                           indf2	equ	0xFDF
  8771                           postinc2	equ	0xFDE
  8772                           postdec2	equ	0xFDD
  8773                           fsr2h	equ	0xFDA
  8774                           fsr2l	equ	0xFD9
  8775                           status	equ	0xFD8
  8776                           
  8777 ;; *************** function i2_recv_msg *****************
  8778 ;; Defined at:
  8779 ;;		line 63 in file "../src/messages.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8782 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8783 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8784 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8785 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  8786 ;;  data            2   15[BANK0 ] PTR void 
  8787 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8790 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8791 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8792 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8793 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      char 
  8796 ;; Registers used:
  8797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8803 ;;      Params:         0       7       0       0       0
  8804 ;;      Locals:         0       5       0       0       0
  8805 ;;      Temps:          0       2       0       0       0
  8806 ;;      Totals:         0      14       0       0       0
  8807 ;;Total ram usage:       14 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    1
  8810 ;; This function calls:
  8811 ;;		i2___awmod
  8812 ;;		i2_memcpy
  8813 ;; This function is called by:
  8814 ;;		_FromMainHigh_recvmsg
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           	psect	text52
  8819  000C70                     __ptext52:
  8820                           	opt stack 0
  8821  000C70                     i2_recv_msg:
  8822                           	opt stack 16
  8823                           
  8824                           ;messages.c: 64: unsigned char slot;
  8825                           ;messages.c: 68: msg *qmsg;
  8826                           ;messages.c: 69: size_t tlength;
  8827                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8828                           
  8829                           ;incstack = 0
  8830  000C70  0100               	movlb	0	; () banked
  8831  000C72  EE20 F056          	lfsr	2,86
  8832  000C76  0100               	movlb	0	; () banked
  8833  000C78  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8834  000C7A  26D9               	addwf	fsr2l,f,c
  8835  000C7C  0100               	movlb	0	; () banked
  8836  000C7E  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8837  000C80  22DA               	addwfc	fsr2h,f,c
  8838  000C82  50DF               	movf	indf2,w,c
  8839  000C84  0100               	movlb	0	; () banked
  8840  000C86  6F93               	movwf	i2recv_msg@slot& (0+255),b
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8844  000C88  0100               	movlb	0	; () banked
  8845  000C8A  5193               	movf	i2recv_msg@slot& (0+255),w,b
  8846  000C8C  0D11               	mullw	17
  8847  000C8E  50F3               	movf	prodl,w,c
  8848  000C90  0100               	movlb	0	; () banked
  8849  000C92  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8850  000C94  0100               	movlb	0	; () banked
  8851  000C96  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  8852  000C98  50F4               	movf	prodh,w,c
  8853  000C9A  0100               	movlb	0	; () banked
  8854  000C9C  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8855  000C9E  0100               	movlb	0	; () banked
  8856  000CA0  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;messages.c: 74: if (qmsg->full == 1) {
  8860  000CA2  0E01               	movlw	1
  8861  000CA4  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8862  000CA8  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8863  000CAC  62DF               	cpfseq	indf2,c
  8864  000CAE  D07D               	goto	i2l3628
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8868  000CB0  0100               	movlb	0	; () banked
  8869  000CB2  EE20 F001          	lfsr	2,1
  8870  000CB6  0100               	movlb	0	; () banked
  8871  000CB8  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8872  000CBA  26D9               	addwf	fsr2l,f,c
  8873  000CBC  0100               	movlb	0	; () banked
  8874  000CBE  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8875  000CC0  22DA               	addwfc	fsr2h,f,c
  8876  000CC2  50DF               	movf	indf2,w,c
  8877  000CC4  0100               	movlb	0	; () banked
  8878  000CC6  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8879  000CC8  B0D8               	btfsc	status,0,c
  8880  000CCA  D002               	goto	i2l3612
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;messages.c: 77: return (-3);
  8884  000CCC  0EFD               	movlw	253
  8885  000CCE  0012               	return	
  8886  000CD0                     i2l3612:
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;messages.c: 78: }
  8890                           ;messages.c: 80: tlength = qmsg->length;
  8891  000CD0  0100               	movlb	0	; () banked
  8892  000CD2  EE20 F001          	lfsr	2,1
  8893  000CD6  0100               	movlb	0	; () banked
  8894  000CD8  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8895  000CDA  26D9               	addwf	fsr2l,f,c
  8896  000CDC  0100               	movlb	0	; () banked
  8897  000CDE  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8898  000CE0  22DA               	addwfc	fsr2h,f,c
  8899  000CE2  50DF               	movf	indf2,w,c
  8900  000CE4  0100               	movlb	0	; () banked
  8901  000CE6  6F91               	movwf	??i2_recv_msg& (0+255),b
  8902  000CE8  0100               	movlb	0	; () banked
  8903  000CEA  5191               	movf	??i2_recv_msg& (0+255),w,b
  8904  000CEC  0100               	movlb	0	; () banked
  8905  000CEE  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  8906  000CF0  0100               	movlb	0	; () banked
  8907  000CF2  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8911  000CF4  0100               	movlb	0	; () banked
  8912  000CF6  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8913  000CFA  0100               	movlb	0	; () banked
  8914  000CFC  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  8915  000D00  0E03               	movlw	3
  8916  000D02  0100               	movlb	0	; () banked
  8917  000D04  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8918  000D06  0100               	movlb	0	; () banked
  8919  000D08  6F91               	movwf	??i2_recv_msg& (0+255),b
  8920  000D0A  0E00               	movlw	0
  8921  000D0C  0100               	movlb	0	; () banked
  8922  000D0E  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8923  000D10  0100               	movlb	0	; () banked
  8924  000D12  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  8925  000D14  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  8926  000D18  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8927  000D1C  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  8928  000D20  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8929  000D24  EC76  F00C         	call	i2_memcpy	;wreg free
  8930                           
  8931                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  8932  000D28  0100               	movlb	0	; () banked
  8933  000D2A  EE20 F056          	lfsr	2,86
  8934  000D2E  0100               	movlb	0	; () banked
  8935  000D30  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8936  000D32  26D9               	addwf	fsr2l,f,c
  8937  000D34  0100               	movlb	0	; () banked
  8938  000D36  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8939  000D38  22DA               	addwfc	fsr2h,f,c
  8940  000D3A  0100               	movlb	0	; () banked
  8941  000D3C  EE10 F056          	lfsr	1,86
  8942  000D40  0100               	movlb	0	; () banked
  8943  000D42  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8944  000D44  26E1               	addwf	fsr1l,f,c
  8945  000D46  0100               	movlb	0	; () banked
  8946  000D48  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8947  000D4A  22E2               	addwfc	fsr1h,f,c
  8948  000D4C  50E7               	movf	indf1,w,c
  8949  000D4E  0100               	movlb	0	; () banked
  8950  000D50  6F91               	movwf	??i2_recv_msg& (0+255),b
  8951  000D52  0E01               	movlw	1
  8952  000D54  0100               	movlb	0	; () banked
  8953  000D56  2591               	addwf	??i2_recv_msg& (0+255),w,b
  8954  000D58  0100               	movlb	0	; () banked
  8955  000D5A  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8956  000D5C  0100               	movlb	0	; () banked
  8957  000D5E  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8958  000D60  0E00               	movlw	0
  8959  000D62  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8960  000D64  0E00               	movlw	0
  8961  000D66  0100               	movlb	0	; () banked
  8962  000D68  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8963  000D6A  0E05               	movlw	5
  8964  000D6C  0100               	movlb	0	; () banked
  8965  000D6E  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8966  000D70  EC20  F009         	call	i2___awmod	;wreg free
  8967  000D74  0100               	movlb	0	; () banked
  8968  000D76  5180               	movf	?i2___awmod& (0+255),w,b
  8969  000D78  6EDF               	movwf	indf2,c
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8973  000D7A  0100               	movlb	0	; () banked
  8974  000D7C  EE20 F002          	lfsr	2,2
  8975  000D80  0100               	movlb	0	; () banked
  8976  000D82  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8977  000D84  26D9               	addwf	fsr2l,f,c
  8978  000D86  0100               	movlb	0	; () banked
  8979  000D88  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8980  000D8A  22DA               	addwfc	fsr2h,f,c
  8981  000D8C  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8982  000D90  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8983  000D94  CFDF FFE7          	movff	indf2,indf1
  8984                           
  8985                           ; BSR set to: 0
  8986                           ;messages.c: 91: qmsg->full = 0;
  8987  000D98  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8988  000D9C  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8989  000DA0  0E00               	movlw	0
  8990  000DA2  6EDF               	movwf	indf2,c
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;messages.c: 92: return (tlength);
  8994  000DA4  0100               	movlb	0	; () banked
  8995  000DA6  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  8996  000DA8  0012               	return	
  8997  000DAA                     i2l3628:
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;messages.c: 94: return (-4);
  9001  000DAA  0EFC               	movlw	252
  9002  000DAC  0012               	return	
  9003  000DAE                     __end_ofi2_recv_msg:
  9004                           	opt stack 0
  9005                           pclatu	equ	0xFFB
  9006                           pclath	equ	0xFFA
  9007                           tblptru	equ	0xFF8
  9008                           tblptrh	equ	0xFF7
  9009                           tblptrl	equ	0xFF6
  9010                           tablat	equ	0xFF5
  9011                           prodh	equ	0xFF4
  9012                           prodl	equ	0xFF3
  9013                           intcon	equ	0xFF2
  9014                           intcon2	equ	0xFF1
  9015                           postinc0	equ	0xFEE
  9016                           fsr0h	equ	0xFEA
  9017                           fsr0l	equ	0xFE9
  9018                           wreg	equ	0xFE8
  9019                           indf1	equ	0xFE7
  9020                           fsr1h	equ	0xFE2
  9021                           fsr1l	equ	0xFE1
  9022                           bsr	equ	0xFE0
  9023                           indf2	equ	0xFDF
  9024                           postinc2	equ	0xFDE
  9025                           postdec2	equ	0xFDD
  9026                           fsr2h	equ	0xFDA
  9027                           fsr2l	equ	0xFD9
  9028                           status	equ	0xFD8
  9029                           
  9030 ;; *************** function i2_memcpy *****************
  9031 ;; Defined at:
  9032 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;  d1              2    0[BANK0 ] PTR void 
  9035 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9036 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  9037 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  9038 ;;  s1              2    2[BANK0 ] PTR const void 
  9039 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9040 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9041 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  9042 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  9043 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  9044 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  9045 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  9046 ;;  n               2    4[BANK0 ] unsigned int 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9049 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9050 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9051 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  9052 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  9053 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  9054 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  9055 ;;		 -> InterruptHandlerLow@sendy_stuff(1), 
  9056 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9057 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9058 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  9059 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  2    0[BANK0 ] PTR void 
  9062 ;; Registers used:
  9063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9069 ;;      Params:         0       6       0       0       0
  9070 ;;      Locals:         0       4       0       0       0
  9071 ;;      Temps:          0       0       0       0       0
  9072 ;;      Totals:         0      10       0       0       0
  9073 ;;Total ram usage:       10 bytes
  9074 ;; Hardware stack levels used:    1
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		i2_send_msg
  9079 ;;		i2_recv_msg
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text53
  9084  0018EC                     __ptext53:
  9085                           	opt stack 0
  9086  0018EC                     i2_memcpy:
  9087                           	opt stack 16
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;incstack = 0
  9091  0018EC  0100               	movlb	0	; () banked
  9092  0018EE  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9093  0018F2  0100               	movlb	0	; () banked
  9094  0018F4  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9095  0018F8  0100               	movlb	0	; () banked
  9096  0018FA  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9097  0018FE  0100               	movlb	0	; () banked
  9098  001900  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9099  001904  D010               	goto	i2l2426
  9100  001906                     i2l2420:
  9101                           
  9102                           ; BSR set to: 0
  9103  001906  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9104  00190A  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9105  00190E  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9106  001912  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9107  001916  CFDF FFE7          	movff	indf2,indf1
  9108                           
  9109                           ; BSR set to: 0
  9110  00191A  0100               	movlb	0	; () banked
  9111  00191C  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9112  00191E  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9113                           
  9114                           ; BSR set to: 0
  9115  001920  0100               	movlb	0	; () banked
  9116  001922  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9117  001924  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9118  001926                     i2l2426:
  9119                           
  9120                           ; BSR set to: 0
  9121  001926  0100               	movlb	0	; () banked
  9122  001928  0784               	decf	i2memcpy@n& (0+255),f,b
  9123  00192A  A0D8               	btfss	status,0,c
  9124  00192C  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9125  00192E  0100               	movlb	0	; () banked
  9126  001930  2984               	incf	i2memcpy@n& (0+255),w,b
  9127  001932  B4D8               	btfsc	status,2,c
  9128  001934  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9129  001936  B4D8               	btfsc	status,2,c
  9130                           
  9131                           ; BSR set to: 0
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;	Return value of i2_memcpy is never used
  9135  001938  0012               	return	
  9136  00193A  D7E5               	goto	i2l2420
  9137  00193C                     __end_ofi2_memcpy:
  9138                           	opt stack 0
  9139                           pclatu	equ	0xFFB
  9140                           pclath	equ	0xFFA
  9141                           tblptru	equ	0xFF8
  9142                           tblptrh	equ	0xFF7
  9143                           tblptrl	equ	0xFF6
  9144                           tablat	equ	0xFF5
  9145                           prodh	equ	0xFF4
  9146                           prodl	equ	0xFF3
  9147                           intcon	equ	0xFF2
  9148                           intcon2	equ	0xFF1
  9149                           postinc0	equ	0xFEE
  9150                           fsr0h	equ	0xFEA
  9151                           fsr0l	equ	0xFE9
  9152                           wreg	equ	0xFE8
  9153                           indf1	equ	0xFE7
  9154                           fsr1h	equ	0xFE2
  9155                           fsr1l	equ	0xFE1
  9156                           bsr	equ	0xFE0
  9157                           indf2	equ	0xFDF
  9158                           postinc2	equ	0xFDE
  9159                           postdec2	equ	0xFDD
  9160                           fsr2h	equ	0xFDA
  9161                           fsr2l	equ	0xFD9
  9162                           status	equ	0xFD8
  9163                           
  9164 ;; *************** function i2___awmod *****************
  9165 ;; Defined at:
  9166 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  dividend        2    0[BANK0 ] int 
  9169 ;;  divisor         2    2[BANK0 ] int 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9172 ;;  __awmod         1    4[BANK0 ] unsigned char 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  2    0[BANK0 ] int 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0, prodl
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9182 ;;      Params:         0       4       0       0       0
  9183 ;;      Locals:         0       2       0       0       0
  9184 ;;      Temps:          0       0       0       0       0
  9185 ;;      Totals:         0       6       0       0       0
  9186 ;;Total ram usage:        6 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; This function calls:
  9189 ;;		Nothing
  9190 ;; This function is called by:
  9191 ;;		i2_send_msg
  9192 ;;		i2_recv_msg
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           	psect	text54
  9197  001240                     __ptext54:
  9198                           	opt stack 0
  9199  001240                     i2___awmod:
  9200                           	opt stack 16
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;incstack = 0
  9204  001240  0E00               	movlw	0
  9205  001242  0100               	movlb	0	; () banked
  9206  001244  6F85               	movwf	i2___awmod@sign& (0+255),b
  9207                           
  9208                           ; BSR set to: 0
  9209  001246  0100               	movlb	0	; () banked
  9210  001248  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9211  00124A  0A80               	xorlw	128
  9212  00124C  6EF3               	movwf	prodl,c
  9213  00124E  0E80               	movlw	128
  9214  001250  5CF3               	subwf	prodl,w,c
  9215  001252  0E00               	movlw	0
  9216  001254  B4D8               	btfsc	status,2,c
  9217  001256  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9218  001258  B0D8               	btfsc	status,0,c
  9219  00125A  D009               	goto	i2l2472
  9220                           
  9221                           ; BSR set to: 0
  9222  00125C  0100               	movlb	0	; () banked
  9223  00125E  6D80               	negf	i2___awmod@dividend& (0+255),b
  9224  001260  0100               	movlb	0	; () banked
  9225  001262  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9226  001264  B0D8               	btfsc	status,0,c
  9227  001266  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9228                           
  9229                           ; BSR set to: 0
  9230  001268  0E01               	movlw	1
  9231  00126A  0100               	movlb	0	; () banked
  9232  00126C  6F85               	movwf	i2___awmod@sign& (0+255),b
  9233  00126E                     i2l2472:
  9234                           
  9235                           ; BSR set to: 0
  9236  00126E  0100               	movlb	0	; () banked
  9237  001270  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9238  001272  0A80               	xorlw	128
  9239  001274  6EF3               	movwf	prodl,c
  9240  001276  0E80               	movlw	128
  9241  001278  5CF3               	subwf	prodl,w,c
  9242  00127A  0E00               	movlw	0
  9243  00127C  B4D8               	btfsc	status,2,c
  9244  00127E  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9245  001280  B0D8               	btfsc	status,0,c
  9246  001282  D006               	goto	i2l2476
  9247                           
  9248                           ; BSR set to: 0
  9249  001284  0100               	movlb	0	; () banked
  9250  001286  6D82               	negf	i2___awmod@divisor& (0+255),b
  9251  001288  0100               	movlb	0	; () banked
  9252  00128A  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9253  00128C  B0D8               	btfsc	status,0,c
  9254  00128E  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9255  001290                     i2l2476:
  9256                           
  9257                           ; BSR set to: 0
  9258  001290  0100               	movlb	0	; () banked
  9259  001292  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9260  001294  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9261  001296  B4D8               	btfsc	status,2,c
  9262  001298  D026               	goto	i2l2492
  9263                           
  9264                           ; BSR set to: 0
  9265  00129A  0E01               	movlw	1
  9266  00129C  0100               	movlb	0	; () banked
  9267  00129E  6F84               	movwf	i2___awmod@counter& (0+255),b
  9268  0012A0  D006               	goto	i2l2482
  9269  0012A2                     i2l2480:
  9270                           
  9271                           ; BSR set to: 0
  9272  0012A2  0100               	movlb	0	; () banked
  9273  0012A4  90D8               	bcf	status,0,c
  9274  0012A6  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9275  0012A8  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9276  0012AA  0100               	movlb	0	; () banked
  9277  0012AC  2B84               	incf	i2___awmod@counter& (0+255),f,b
  9278  0012AE                     i2l2482:
  9279                           
  9280                           ; BSR set to: 0
  9281  0012AE  0100               	movlb	0	; () banked
  9282  0012B0  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9283  0012B2  D7F7               	goto	i2l2480
  9284  0012B4                     i2l2484:
  9285                           
  9286                           ; BSR set to: 0
  9287  0012B4  0100               	movlb	0	; () banked
  9288  0012B6  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9289  0012B8  0100               	movlb	0	; () banked
  9290  0012BA  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9291  0012BC  0100               	movlb	0	; () banked
  9292  0012BE  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9293  0012C0  0100               	movlb	0	; () banked
  9294  0012C2  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9295  0012C4  A0D8               	btfss	status,0,c
  9296  0012C6  D008               	goto	i2l2488
  9297                           
  9298                           ; BSR set to: 0
  9299  0012C8  0100               	movlb	0	; () banked
  9300  0012CA  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9301  0012CC  0100               	movlb	0	; () banked
  9302  0012CE  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9303  0012D0  0100               	movlb	0	; () banked
  9304  0012D2  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9305  0012D4  0100               	movlb	0	; () banked
  9306  0012D6  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9307  0012D8                     i2l2488:
  9308                           
  9309                           ; BSR set to: 0
  9310  0012D8  0100               	movlb	0	; () banked
  9311  0012DA  90D8               	bcf	status,0,c
  9312  0012DC  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9313  0012DE  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9314                           
  9315                           ; BSR set to: 0
  9316  0012E0  0100               	movlb	0	; () banked
  9317  0012E2  2F84               	decfsz	i2___awmod@counter& (0+255),f,b
  9318  0012E4  D7E7               	goto	i2l2484
  9319  0012E6                     i2l2492:
  9320                           
  9321                           ; BSR set to: 0
  9322  0012E6  0100               	movlb	0	; () banked
  9323  0012E8  5185               	movf	i2___awmod@sign& (0+255),w,b
  9324  0012EA  B4D8               	btfsc	status,2,c
  9325  0012EC  D006               	goto	i2l2496
  9326                           
  9327                           ; BSR set to: 0
  9328  0012EE  0100               	movlb	0	; () banked
  9329  0012F0  6D80               	negf	i2___awmod@dividend& (0+255),b
  9330  0012F2  0100               	movlb	0	; () banked
  9331  0012F4  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9332  0012F6  B0D8               	btfsc	status,0,c
  9333  0012F8  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9334  0012FA                     i2l2496:
  9335                           
  9336                           ; BSR set to: 0
  9337  0012FA  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9338  0012FE  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9339  001302  0012               	return	
  9340  001304                     __end_ofi2___awmod:
  9341                           	opt stack 0
  9342                           pclatu	equ	0xFFB
  9343                           pclath	equ	0xFFA
  9344                           tblptru	equ	0xFF8
  9345                           tblptrh	equ	0xFF7
  9346                           tblptrl	equ	0xFF6
  9347                           tablat	equ	0xFF5
  9348                           prodh	equ	0xFF4
  9349                           prodl	equ	0xFF3
  9350                           intcon	equ	0xFF2
  9351                           intcon2	equ	0xFF1
  9352                           postinc0	equ	0xFEE
  9353                           fsr0h	equ	0xFEA
  9354                           fsr0l	equ	0xFE9
  9355                           wreg	equ	0xFE8
  9356                           indf1	equ	0xFE7
  9357                           fsr1h	equ	0xFE2
  9358                           fsr1l	equ	0xFE1
  9359                           bsr	equ	0xFE0
  9360                           indf2	equ	0xFDF
  9361                           postinc2	equ	0xFDE
  9362                           postdec2	equ	0xFDD
  9363                           fsr2h	equ	0xFDA
  9364                           fsr2l	equ	0xFD9
  9365                           status	equ	0xFD8
  9366                           
  9367 ;; *************** function _SleepIfOkay *****************
  9368 ;; Defined at:
  9369 ;;		line 226 in file "../src/messages.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;		None               void
  9376 ;; Registers used:
  9377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9383 ;;      Params:         0       0       0       0       0
  9384 ;;      Locals:         0       0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0
  9386 ;;      Totals:         0       0       0       0       0
  9387 ;;Total ram usage:        0 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:    2
  9390 ;; This function calls:
  9391 ;;		_check_msg
  9392 ;;		_enter_sleep_mode
  9393 ;;		_in_high_int
  9394 ;;		_in_low_int
  9395 ;; This function is called by:
  9396 ;;		_InterruptHandlerHigh
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           	psect	text55
  9401  001794                     __ptext55:
  9402                           	opt stack 0
  9403  001794                     _SleepIfOkay:
  9404                           	opt stack 17
  9405                           
  9406                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;incstack = 0
  9410  001794  0100               	movlb	0	; () banked
  9411  001796  67C7               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9412  001798  D001               	goto	i2l2944
  9413  00179A  0012               	return	
  9414  00179C                     i2l2944:
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;messages.c: 230: }
  9418                           ;messages.c: 233: if (in_low_int()) {
  9419  00179C  ECE4  F00C         	call	_in_low_int	;wreg free
  9420  0017A0  0100               	movlb	0	; () banked
  9421  0017A2  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  9422  0017A4  0100               	movlb	0	; () banked
  9423  0017A6  1182               	iorwf	?_in_low_int& (0+255),w,b
  9424  0017A8  A4D8               	btfss	status,2,c
  9425  0017AA  0012               	return	
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;messages.c: 235: }
  9429                           ;messages.c: 238: if (!in_high_int()) {
  9430                           
  9431                           ; BSR set to: 0
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;messages.c: 234: return;
  9435  0017AC  EC5F  F00E         	call	_in_high_int	;wreg free
  9436  0017B0  0100               	movlb	0	; () banked
  9437  0017B2  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9438  0017B4  0100               	movlb	0	; () banked
  9439  0017B6  1180               	iorwf	?_in_high_int& (0+255),w,b
  9440  0017B8  B4D8               	btfsc	status,2,c
  9441  0017BA  0012               	return	
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;messages.c: 240: }
  9445                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9446                           
  9447                           ; BSR set to: 0
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;messages.c: 239: return;
  9451  0017BC  0102               	movlb	2	; () banked
  9452  0017BE  0E02               	movlw	high _ToMainHigh_MQ
  9453  0017C0  0100               	movlb	0	; () banked
  9454  0017C2  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9455  0017C4  0102               	movlb	2	; () banked
  9456  0017C6  0E57               	movlw	low _ToMainHigh_MQ
  9457  0017C8  0100               	movlb	0	; () banked
  9458  0017CA  6F80               	movwf	check_msg@qptr& (0+255),b
  9459  0017CC  EC6D  F00D         	call	_check_msg	;wreg free
  9460  0017D0  0900               	iorlw	0
  9461  0017D2  A4D8               	btfss	status,2,c
  9462  0017D4  0012               	return	
  9463                           
  9464                           ;messages.c: 247: }
  9465                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9466                           
  9467                           ;messages.c: 246: return;
  9468  0017D6  0101               	movlb	1	; () banked
  9469  0017D8  0E01               	movlw	high _ToMainLow_MQ
  9470  0017DA  0100               	movlb	0	; () banked
  9471  0017DC  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9472  0017DE  0101               	movlb	1	; () banked
  9473  0017E0  0E66               	movlw	low _ToMainLow_MQ
  9474  0017E2  0100               	movlb	0	; () banked
  9475  0017E4  6F80               	movwf	check_msg@qptr& (0+255),b
  9476  0017E6  EC6D  F00D         	call	_check_msg	;wreg free
  9477  0017EA  0900               	iorlw	0
  9478  0017EC  B4D8               	btfsc	status,2,c
  9479                           
  9480                           ;messages.c: 250: }
  9481                           ;messages.c: 251: enter_sleep_mode();
  9482                           
  9483                           ;messages.c: 249: return;
  9484  0017EE  EC9A  F00E         	call	_enter_sleep_mode	;wreg free
  9485  0017F2  0012               	return	
  9486  0017F4                     __end_of_SleepIfOkay:
  9487                           	opt stack 0
  9488                           pclatu	equ	0xFFB
  9489                           pclath	equ	0xFFA
  9490                           tblptru	equ	0xFF8
  9491                           tblptrh	equ	0xFF7
  9492                           tblptrl	equ	0xFF6
  9493                           tablat	equ	0xFF5
  9494                           prodh	equ	0xFF4
  9495                           prodl	equ	0xFF3
  9496                           intcon	equ	0xFF2
  9497                           intcon2	equ	0xFF1
  9498                           postinc0	equ	0xFEE
  9499                           fsr0h	equ	0xFEA
  9500                           fsr0l	equ	0xFE9
  9501                           wreg	equ	0xFE8
  9502                           indf1	equ	0xFE7
  9503                           fsr1h	equ	0xFE2
  9504                           fsr1l	equ	0xFE1
  9505                           bsr	equ	0xFE0
  9506                           indf2	equ	0xFDF
  9507                           postinc2	equ	0xFDE
  9508                           postdec2	equ	0xFDD
  9509                           fsr2h	equ	0xFDA
  9510                           fsr2l	equ	0xFD9
  9511                           status	equ	0xFD8
  9512                           
  9513 ;; *************** function _in_low_int *****************
  9514 ;; Defined at:
  9515 ;;		line 33 in file "../src/interrupts.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  2    2[BANK0 ] int 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9529 ;;      Params:         0       2       0       0       0
  9530 ;;      Locals:         0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0
  9532 ;;      Totals:         0       2       0       0       0
  9533 ;;Total ram usage:        2 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    1
  9536 ;; This function calls:
  9537 ;;		_in_high_int
  9538 ;; This function is called by:
  9539 ;;		_SleepIfOkay
  9540 ;;		_in_main
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           	psect	text56
  9545  0019C8                     __ptext56:
  9546                           	opt stack 0
  9547  0019C8                     _in_low_int:
  9548                           	opt stack 17
  9549                           
  9550                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9551                           
  9552                           ;incstack = 0
  9553  0019C8  ACF2               	btfss	intcon,6,c	;volatile
  9554  0019CA  D007               	goto	i2l2628
  9555                           
  9556                           ;interrupts.c: 35: return (0);
  9557  0019CC  0E00               	movlw	0
  9558  0019CE  0100               	movlb	0	; () banked
  9559  0019D0  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9560  0019D2  0E00               	movlw	0
  9561  0019D4  0100               	movlb	0	; () banked
  9562  0019D6  6F82               	movwf	?_in_low_int& (0+255),b
  9563  0019D8  0012               	return	
  9564  0019DA                     i2l2628:
  9565  0019DA  EC5F  F00E         	call	_in_high_int	;wreg free
  9566  0019DE  0100               	movlb	0	; () banked
  9567  0019E0  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9568  0019E2  0100               	movlb	0	; () banked
  9569  0019E4  1180               	iorwf	?_in_high_int& (0+255),w,b
  9570  0019E6  B4D8               	btfsc	status,2,c
  9571  0019E8  D007               	goto	i2l2636
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;interrupts.c: 37: return (0);
  9575  0019EA  0E00               	movlw	0
  9576  0019EC  0100               	movlb	0	; () banked
  9577  0019EE  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9578  0019F0  0E00               	movlw	0
  9579  0019F2  0100               	movlb	0	; () banked
  9580  0019F4  6F82               	movwf	?_in_low_int& (0+255),b
  9581  0019F6  0012               	return	
  9582  0019F8                     i2l2636:
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;interrupts.c: 39: return (1);
  9586  0019F8  0E00               	movlw	0
  9587  0019FA  0100               	movlb	0	; () banked
  9588  0019FC  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9589  0019FE  0E01               	movlw	1
  9590  001A00  0100               	movlb	0	; () banked
  9591  001A02  6F82               	movwf	?_in_low_int& (0+255),b
  9592  001A04  0012               	return	
  9593  001A06                     __end_of_in_low_int:
  9594                           	opt stack 0
  9595                           pclatu	equ	0xFFB
  9596                           pclath	equ	0xFFA
  9597                           tblptru	equ	0xFF8
  9598                           tblptrh	equ	0xFF7
  9599                           tblptrl	equ	0xFF6
  9600                           tablat	equ	0xFF5
  9601                           prodh	equ	0xFF4
  9602                           prodl	equ	0xFF3
  9603                           intcon	equ	0xFF2
  9604                           intcon2	equ	0xFF1
  9605                           postinc0	equ	0xFEE
  9606                           fsr0h	equ	0xFEA
  9607                           fsr0l	equ	0xFE9
  9608                           wreg	equ	0xFE8
  9609                           indf1	equ	0xFE7
  9610                           fsr1h	equ	0xFE2
  9611                           fsr1l	equ	0xFE1
  9612                           bsr	equ	0xFE0
  9613                           indf2	equ	0xFDF
  9614                           postinc2	equ	0xFDE
  9615                           postdec2	equ	0xFDD
  9616                           fsr2h	equ	0xFDA
  9617                           fsr2l	equ	0xFD9
  9618                           status	equ	0xFD8
  9619                           
  9620 ;; *************** function _in_high_int *****************
  9621 ;; Defined at:
  9622 ;;		line 25 in file "../src/interrupts.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;		None
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;		None
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  2    0[BANK0 ] int 
  9629 ;; Registers used:
  9630 ;;		wreg, status,2
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9636 ;;      Params:         0       2       0       0       0
  9637 ;;      Locals:         0       0       0       0       0
  9638 ;;      Temps:          0       0       0       0       0
  9639 ;;      Totals:         0       2       0       0       0
  9640 ;;Total ram usage:        2 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; This function calls:
  9643 ;;		Nothing
  9644 ;; This function is called by:
  9645 ;;		_in_low_int
  9646 ;;		_SleepIfOkay
  9647 ;;		_in_main
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text57
  9652  001CBE                     __ptext57:
  9653                           	opt stack 0
  9654  001CBE                     _in_high_int:
  9655                           	opt stack 17
  9656                           
  9657                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;incstack = 0
  9661  001CBE  0E00               	movlw	0
  9662  001CC0  AEF2               	btfss	intcon,7,c	;volatile
  9663  001CC2  0E01               	movlw	1
  9664  001CC4  0100               	movlb	0	; () banked
  9665  001CC6  6F80               	movwf	?_in_high_int& (0+255),b
  9666  001CC8  0100               	movlb	0	; () banked
  9667  001CCA  6B81               	clrf	(?_in_high_int+1)& (0+255),b
  9668  001CCC  0012               	return	
  9669  001CCE                     __end_of_in_high_int:
  9670                           	opt stack 0
  9671                           pclatu	equ	0xFFB
  9672                           pclath	equ	0xFFA
  9673                           tblptru	equ	0xFF8
  9674                           tblptrh	equ	0xFF7
  9675                           tblptrl	equ	0xFF6
  9676                           tablat	equ	0xFF5
  9677                           prodh	equ	0xFF4
  9678                           prodl	equ	0xFF3
  9679                           intcon	equ	0xFF2
  9680                           intcon2	equ	0xFF1
  9681                           postinc0	equ	0xFEE
  9682                           fsr0h	equ	0xFEA
  9683                           fsr0l	equ	0xFE9
  9684                           wreg	equ	0xFE8
  9685                           indf1	equ	0xFE7
  9686                           fsr1h	equ	0xFE2
  9687                           fsr1l	equ	0xFE1
  9688                           bsr	equ	0xFE0
  9689                           indf2	equ	0xFDF
  9690                           postinc2	equ	0xFDE
  9691                           postdec2	equ	0xFDD
  9692                           fsr2h	equ	0xFDA
  9693                           fsr2l	equ	0xFD9
  9694                           status	equ	0xFD8
  9695                           
  9696 ;; *************** function _enter_sleep_mode *****************
  9697 ;; Defined at:
  9698 ;;		line 202 in file "../src/messages.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;		None
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;		None
  9703 ;; Return value:  Size  Location     Type
  9704 ;;		None               void
  9705 ;; Registers used:
  9706 ;;		None
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9712 ;;      Params:         0       0       0       0       0
  9713 ;;      Locals:         0       0       0       0       0
  9714 ;;      Temps:          0       0       0       0       0
  9715 ;;      Totals:         0       0       0       0       0
  9716 ;;Total ram usage:        0 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_SleepIfOkay
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text58
  9726  001D34                     __ptext58:
  9727                           	opt stack 0
  9728  001D34                     _enter_sleep_mode:
  9729                           	opt stack 18
  9730                           
  9731                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;incstack = 0
  9735  001D34  8ED3               	bsf	4051,7,c	;volatile
  9736  001D36  0003               	sleep		;# 
  9737  001D38  0012               	return	
  9738  001D3A                     __end_of_enter_sleep_mode:
  9739                           	opt stack 0
  9740                           pclatu	equ	0xFFB
  9741                           pclath	equ	0xFFA
  9742                           tblptru	equ	0xFF8
  9743                           tblptrh	equ	0xFF7
  9744                           tblptrl	equ	0xFF6
  9745                           tablat	equ	0xFF5
  9746                           prodh	equ	0xFF4
  9747                           prodl	equ	0xFF3
  9748                           intcon	equ	0xFF2
  9749                           intcon2	equ	0xFF1
  9750                           postinc0	equ	0xFEE
  9751                           fsr0h	equ	0xFEA
  9752                           fsr0l	equ	0xFE9
  9753                           wreg	equ	0xFE8
  9754                           indf1	equ	0xFE7
  9755                           fsr1h	equ	0xFE2
  9756                           fsr1l	equ	0xFE1
  9757                           bsr	equ	0xFE0
  9758                           indf2	equ	0xFDF
  9759                           postinc2	equ	0xFDE
  9760                           postdec2	equ	0xFDD
  9761                           fsr2h	equ	0xFDA
  9762                           fsr2l	equ	0xFD9
  9763                           status	equ	0xFD8
  9764                           
  9765 ;; *************** function _check_msg *****************
  9766 ;; Defined at:
  9767 ;;		line 220 in file "../src/messages.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9770 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;		None
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      unsigned char 
  9775 ;; Registers used:
  9776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9782 ;;      Params:         0       2       0       0       0
  9783 ;;      Locals:         0       0       0       0       0
  9784 ;;      Temps:          0       1       0       0       0
  9785 ;;      Totals:         0       3       0       0       0
  9786 ;;Total ram usage:        3 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; This function calls:
  9789 ;;		Nothing
  9790 ;; This function is called by:
  9791 ;;		_SleepIfOkay
  9792 ;;		_block_on_To_msgqueues
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           	psect	text59
  9797  001ADA                     __ptext59:
  9798                           	opt stack 0
  9799  001ADA                     _check_msg:
  9800                           	opt stack 18
  9801                           
  9802                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9803                           
  9804                           ;incstack = 0
  9805  001ADA  0100               	movlb	0	; () banked
  9806  001ADC  EE20 F056          	lfsr	2,86
  9807  001AE0  0100               	movlb	0	; () banked
  9808  001AE2  5180               	movf	check_msg@qptr& (0+255),w,b
  9809  001AE4  26D9               	addwf	fsr2l,f,c
  9810  001AE6  0100               	movlb	0	; () banked
  9811  001AE8  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
  9812  001AEA  22DA               	addwfc	fsr2h,f,c
  9813  001AEC  50DF               	movf	indf2,w,c
  9814  001AEE  0100               	movlb	0	; () banked
  9815  001AF0  6F82               	movwf	??_check_msg& (0+255),b
  9816  001AF2  0100               	movlb	0	; () banked
  9817  001AF4  5182               	movf	??_check_msg& (0+255),w,b
  9818  001AF6  0D11               	mullw	17
  9819  001AF8  50F3               	movf	prodl,w,c
  9820  001AFA  0100               	movlb	0	; () banked
  9821  001AFC  2580               	addwf	check_msg@qptr& (0+255),w,b
  9822  001AFE  6ED9               	movwf	fsr2l,c
  9823  001B00  50F4               	movf	prodh,w,c
  9824  001B02  0100               	movlb	0	; () banked
  9825  001B04  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9826  001B06  6EDA               	movwf	fsr2h,c
  9827  001B08  50DF               	movf	indf2,w,c
  9828  001B0A  0012               	return	
  9829  001B0C                     __end_of_check_msg:
  9830                           	opt stack 0
  9831  0000                     pclatu	equ	0xFFB
  9832                           pclath	equ	0xFFA
  9833                           tblptru	equ	0xFF8
  9834                           tblptrh	equ	0xFF7
  9835                           tblptrl	equ	0xFF6
  9836                           tablat	equ	0xFF5
  9837                           prodh	equ	0xFF4
  9838                           prodl	equ	0xFF3
  9839                           intcon	equ	0xFF2
  9840                           intcon2	equ	0xFF1
  9841                           postinc0	equ	0xFEE
  9842                           fsr0h	equ	0xFEA
  9843                           fsr0l	equ	0xFE9
  9844                           wreg	equ	0xFE8
  9845                           indf1	equ	0xFE7
  9846                           fsr1h	equ	0xFE2
  9847                           fsr1l	equ	0xFE1
  9848                           bsr	equ	0xFE0
  9849                           indf2	equ	0xFDF
  9850                           postinc2	equ	0xFDE
  9851                           postdec2	equ	0xFDD
  9852                           fsr2h	equ	0xFDA
  9853                           fsr2l	equ	0xFD9
  9854                           status	equ	0xFD8
  9855                           pclatu	equ	0xFFB
  9856                           pclath	equ	0xFFA
  9857                           tblptru	equ	0xFF8
  9858                           tblptrh	equ	0xFF7
  9859                           tblptrl	equ	0xFF6
  9860                           tablat	equ	0xFF5
  9861                           prodh	equ	0xFF4
  9862                           prodl	equ	0xFF3
  9863                           intcon	equ	0xFF2
  9864                           intcon2	equ	0xFF1
  9865                           postinc0	equ	0xFEE
  9866                           fsr0h	equ	0xFEA
  9867                           fsr0l	equ	0xFE9
  9868                           wreg	equ	0xFE8
  9869                           indf1	equ	0xFE7
  9870                           fsr1h	equ	0xFE2
  9871                           fsr1l	equ	0xFE1
  9872                           bsr	equ	0xFE0
  9873                           indf2	equ	0xFDF
  9874                           postinc2	equ	0xFDE
  9875                           postdec2	equ	0xFDD
  9876                           fsr2h	equ	0xFDA
  9877                           fsr2l	equ	0xFD9
  9878                           status	equ	0xFD8
  9879                           
  9880                           	psect	param0
  9881  0000                     pclatu	equ	0xFFB
  9882                           pclath	equ	0xFFA
  9883                           tblptru	equ	0xFF8
  9884                           tblptrh	equ	0xFF7
  9885                           tblptrl	equ	0xFF6
  9886                           tablat	equ	0xFF5
  9887                           prodh	equ	0xFF4
  9888                           prodl	equ	0xFF3
  9889                           intcon	equ	0xFF2
  9890                           intcon2	equ	0xFF1
  9891                           postinc0	equ	0xFEE
  9892                           fsr0h	equ	0xFEA
  9893                           fsr0l	equ	0xFE9
  9894                           wreg	equ	0xFE8
  9895                           indf1	equ	0xFE7
  9896                           fsr1h	equ	0xFE2
  9897                           fsr1l	equ	0xFE1
  9898                           bsr	equ	0xFE0
  9899                           indf2	equ	0xFDF
  9900                           postinc2	equ	0xFDE
  9901                           postdec2	equ	0xFDD
  9902                           fsr2h	equ	0xFDA
  9903                           fsr2l	equ	0xFD9
  9904                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         377
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72     101
    BANK0           128     69      72
    BANK1           256    102     189
    BANK2           256      0     174
    BANK3           256      0      87

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[1]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[1]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 6
		 -> main@t1thread_data(BANK1[6]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 6
		 -> main@t1thread_data(BANK1[6]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 4
		 -> uart_transmit_interrupt_handler@data(COMRAM[4]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 4
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), InterruptHandlerLow@sendy_stuff(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[1]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer0_int_handler->_WriteTimer0

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_i_like_to_moveit_moveit
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                84    84      0   17880
                                             22 BANK1     80    80      0
               _FromMainHigh_sendmsg
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
            _i_like_to_moveit_moveit
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3477
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2788
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i_like_to_moveit_moveit                              6     5      1    3913
                                             16 BANK1      6     5      1
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (2) _send_uart_message                                    3     1      2    2822
                                             68 BANK0      1     1      0
                                             14 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _FromMainLow_sendmsg                                  4     1      3    2658
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 18    18      0    9724
                                             54 COMRAM    18    18      0
                  _ToMainLow_sendmsg
                 _timer0_int_handler
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
                            i1_blip1
                            i1_blip2
                            i1_blip3
 ---------------------------------------------------------------------------------
 (7) i1_blip3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_blip2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_blip1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                      6     6      0    1765
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      28    28      0    3073
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    2438
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2317
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _timer0_int_handler                                   0     0      0      88
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (8) _WriteTimer0                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    4263
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    13    13      0    4007
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               3     1      2      75
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1667
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1568
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainHigh_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _i_like_to_moveit_moveit
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           ___awmod
           _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _ToMainLow_sendmsg
     i1_send_msg
       i1___awmod
       i1_memcpy
   _timer0_int_handler
     _WriteTimer0
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
   i1_blip1
   i1_blip2
   i1_blip3

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      57      10       34.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      AE       8       68.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     66      BD       6       73.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      48       4       56.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      65       1       79.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26F      11        0.0%
DATA                 0      0     26F      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Nov 03 18:52:46 2014

                              ??_debug_configure 00B8                         _MQ_Main_Willing_to_block 00C7  
                                    _SSPSTATbits 000FC7               uart_receive_interrupt_handler@done 005F  
                      __end_of_ToMainLow_recvmsg 1A3C                                               bsr 000FE0  
                      __end_of_ToMainLow_sendmsg 1C36                                     __CFG_CP0$OFF 000000  
                              i2recv_msg@msgtype 008D                                i2recv_msg@tlength 0094  
                           ?_FromMainLow_recvmsg 0019                                              l140 08A2  
                                            l141 08A8                                              l542 1458  
                                            l570 1AD6                                              l538 1400  
                                            l567 1ABE                                              l569 1AD4  
                           ?_FromMainLow_sendmsg 010B                             __size_of_WriteTimer0 0012  
                           __size_of_WriteTimer1 0012                                 ??_uart_configure 00B8  
                                   ___awmod@sign 00BD                                   _FromMainLow_MQ 0200  
                                            prod 000FF3                                              wreg 000FE8  
                                     _TXSTA1bits 000FAC                                     __CFG_IESO$ON 000000  
                                   ?_in_high_int 0080                                  ReadTimer1@timer 0003  
                            i2recv_msg@maxlength 008C                                             l1117 178A  
                                           l4032 13E0                                             l3138 1AC0  
                                           l4202 0846                                             l4204 088A  
                                           l4054 144E                                             l4038 13F6  
                                           l4222 0916                                             l4214 08C8  
                                           l3504 0DFC                                             l4048 1438  
                                           l4208 0898                                             l4216 08E4  
                                           l4226 0958                                             l4234 0968  
                                           l3454 18D6                                             l3702 177C  
                                           l3480 1214                                             l3472 11DE  
                                           l3464 11AA                                             l3448 18B6  
                                           l2656 16AA                                             l3474 11EA  
                                           l4194 080E                                             l3476 11F0  
                                           l3484 1222                                             l3468 11CC  
                                           l3652 0B8E                                             l4188 07E8  
                                           l3488 1236                                             l3668 0C6C  
                                           l3694 1746                                             l3696 1752  
                                           l3698 1758                                             _LATB 000F8A  
                                           i1l65 00B6                                  _FromMainHigh_MQ 0300  
                                  __CFG_FCMEN$ON 000000                                             _blip 1D14  
                                     i1_recv_msg 0FCA                                             _main 0754  
                       ?_i_like_to_moveit_moveit 0110                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             fsr0l 000FE9  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           fsr1l 000FE1                                             indf2 000FDF  
                                           fsr2l 000FD9                                      main@msgtype 013F  
                                     i1_send_msg 1304                                             pclat 000FFA  
                                __end_ofi1_blip1 1D34                                  __end_ofi1_blip2 1D2C  
                                __end_ofi1_blip3 1D24                                             prodh 000FF4  
                                           prodl 000FF3                            handle_start@data_read 0080  
                                           start 00FC                                       i2_recv_msg 0C70  
                                  __CFG_FOSC2$ON 000000                                       i2_send_msg 0EBE  
                      ToMainHigh_recvmsg@msgtype 010C                                   send_msg@length 0102  
                    __size_of_timer0_int_handler 000E           uart_receive_interrupt_handler@checksum 002F  
                          ??_FromMainLow_recvmsg 001D                                            ?_blip 0001  
                          ??_FromMainLow_sendmsg 00C3                                            ?_main 0001  
                                __end_of___awmod 1240                                            _T1CON 000FCD  
                                __end_of___lwmod 1794                                       i1memcpy@d1 0001  
                                          i1l427 0B12                                            i2l311 01B8  
                                          i2l313 020E                                            i2l305 0562  
                                          i2l307 0186                                            i2l334 0466  
                                          i2l326 0354                                            i2l344 0570  
                                          i2l295 1130                                       i1memcpy@s1 0003  
                    FromMainHigh_recvmsg@msgtype 0098                                            _TMR0H 000FD7  
                                          _TMR1H 000FCF                                            _TMR0L 000FD6  
                                          _TMR1L 000FCE                                            _SPBRG 000FAF  
                                          _TRISB 000F93                                            _TRISD 000F95  
                                     i2memcpy@d1 0080                                       i2memcpy@s1 0082  
                                   ?_init_queues 0001                        __size_of_enter_sleep_mode 0006  
                                 i1___awmod@sign 0006                                            _blip1 1D0C  
                                          _blip2 1D04                                            _blip3 1CFC  
    uart_receive_interrupt_handler@message_count 0033                       ToMainLow_recvmsg@maxlength 00C4  
                        timer0_lthread@msgbuffer 00BE                          i2c_configure_slave@addr 00B8  
                           main@need_sensor_data 0125                                            tablat 000FF5  
        i_like_to_moveit_moveit@right_side_speed 0110                                            status 000FD8  
                               __end_ofi1_memcpy 19C8                               __size_ofi1___awmod 0090  
                               __end_ofi2_memcpy 193C                               __size_ofi2___awmod 00C4  
                                __initialization 184C                                     __end_of_blip 1D1C  
                                   __end_of_main 09A4                                       _ReadTimer1 1C9A  
                    __size_of_timer1_int_handler 002C                       __size_of_ToMainLow_recvmsg 0036  
                     __size_of_ToMainLow_sendmsg 0024                    __size_of_FromMainHigh_recvmsg 0036  
                  __size_of_FromMainHigh_sendmsg 002E                                           ??_blip 00B8  
                                         ??_main 00C5                                  send_msg@msgtype 0103  
                                  __activetblptr 000002                                  send_msg@tlength 0106  
                     FromMainLow_sendmsg@msgtype 010B                             __end_of_handle_start 117C  
                                         ?_blip1 0001                                           ?_blip2 0001  
                                         ?_blip3 0001                                        ??i1_blip1 0001  
                                      ??i1_blip2 0001                                        ??i1_blip3 0001  
                                         i1l2410 199A                                           i1l4012 1572  
                                         i1l4110 008E                                           i1l2440 14C0  
                                         i1l2416 19B6                                           i1l4104 0084  
                                         i1l2460 1506                                           i1l2452 14EE  
                                         i1l2444 14CE                                           i1l2436 14A4  
                                         i1l2446 14D6                                           i1l2448 14DA  
                                         i1l2456 14F8                                           i1l3532 133C  
                                         i1l4088 006A                                           i1l4098 007A  
                                         i1l3900 09E4                                           i1l3580 1010  
                                         i1l3920 0A1C                                           i1l3906 09EA  
                                         i1l3922 0A1E                                           i2l2420 1906  
                                         i1l3932 0A4E                                           i1l3908 09F0  
                                         i1l3596 10AE                                           i2l2426 1926  
                                     _OpenTimer1 1AA8                                           i1l3956 0ACA  
                                         i1l3948 0AA8                                   __CFG_WDTEN$OFF 000000  
                                         i2l2480 12A2                                           i2l2472 126E  
                                         i1l3976 0B26                                           i2l2482 12AE  
                                         i2l2636 19F8                                           i2l2628 19DA  
                                         i2l2484 12B4                                           i2l2492 12E6  
                                         i2l2476 1290                                           i2l3612 0CD0  
                                         i1l3988 153E                                           i2l2726 114C  
                                         i2l4078 15CA                                           i2l2496 12FA  
                                         i2l2488 12D8                                           i2l2728 1164  
                                         i2l3720 0170                                           i2l3628 0DAA  
                                         i2l3556 0F0C                                           i2l3830 0536  
                                         i2l3726 017E                                           i2l2944 179C  
                                         i2l3824 0520                                           i2l3744 01E4  
                                         i2l3850 063E                                           i2l3842 05D2  
                                         i2l3818 04E2                                           i2l3762 0298  
                                         i2l3746 0224                                           i2l3836 0574  
                                         i2l3764 02D8                                           i2l3756 025E  
                                         i2l3792 040A                                           i2l3858 06D0  
                                         i2l3786 03C2                                           i2l3868 0716  
                                         i2l3788 0402                                           _RCREG1 000FAE  
                    __end_of_i2c_configure_slave 1BEA                                    ??_SleepIfOkay 0084  
                                         _OSCCON 000FD3                                           _SPBRGH 000FB0  
                                    ?i1_recv_msg 000B                                           _SSPADD 000FC8  
                                         _SSPBUF 000FC9                   __size_of_start_i2c_slave_reply 004C  
                                         _TXREG1 000FAD                                      ?i1_send_msg 000B  
                  __end_of_start_i2c_slave_reply 1988                               timer0_lthread@tptr 00B8  
                        FromMainLow_recvmsg@data 001B                                      ?i2_recv_msg 008A  
                                    ?i2_send_msg 008A                                   __CFG_XINST$OFF 000000  
               ??_uart_receive_interrupt_handler 001B                  ?_uart_receive_interrupt_handler 0001  
                                _i2c_int_handler 0100                                        ??___awmod 00BC  
                                         _blink0 1D3A                                           _ic_ptr 00C5  
                                      ??___lwmod 00BC                                    main@msgbuffer 0126  
                               __end_of_init_i2c 166E                                 OpenTimer1@config 00B8  
                                         _memcpy 189C                                           clear_0 1852  
                                         clear_1 185E                                           clear_2 186A  
                                         clear_3 187A                                  ___awmod@divisor 00BA  
                                ___awmod@counter 00BC                                           main@ic 0140  
                               __end_of_recv_msg 0C70                      start_i2c_slave_reply@length 0082  
  uart_transmit_interrupt_handler@message_status 0023                                __end_ofi1___awmod 1510  
                               __end_of_send_msg 0EBE                                     __pdataCOMRAM 0065  
                              __end_ofi2___awmod 1304                          i2c_int_handler@i2c_data 00A5  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8             uart_receive_interrupt_handler@msg_id 0034  
                                    init_queue@i 00BA                                   i2___awmod@sign 0085  
           uart_receive_interrupt_handler@status 002B                         ToMainLow_recvmsg@msgtype 010C  
                           __size_of_in_high_int 0010                          FromMainLow_sendmsg@data 010C  
                                _debug_configure 1CEA                                  __CFG_FOSC$HSPLL 000000  
           uart_transmit_interrupt_handler@index 0064                                       __accesstop 0080  
                        __end_of__initialization 1892                       __end_of_ToMainHigh_recvmsg 1A72  
                     __end_of_ToMainHigh_sendmsg 1B96                                 _need_sensor_data 005B  
                    __end_of_init_timer1_lthread 1C88                              __end_of_SleepIfOkay 17F4  
                                 __pcstackCOMRAM 0001                                      ?_ReadTimer1 0001  
                                  __end_of_blip1 1D14                                    __end_of_blip2 1D0C  
                                  __end_of_blip3 1D04                  send_uart_message@message_q_code 00C4  
                             __size_of_check_msg 0032                              __size_ofi1_recv_msg 00E8  
                            __size_ofi1_send_msg 00C0                                        ?i1_memcpy 0001  
                  __size_of_InterruptHandlerHigh 1600                      __end_of_InterruptHandlerLow 00FC  
                                      ?i2_memcpy 0080                                    _ToMainHigh_MQ 0257  
                            __size_ofi2_recv_msg 013E                                 _enter_sleep_mode 1D34  
                            __size_ofi2_send_msg 010C                             timer1_lthread@length 0112  
                                        ??_blip1 00B8                                          ??_blip2 00B8  
                                        ??_blip3 00B8                                    check_msg@qptr 0080  
                           timer1_lthread@retval 00C4                             __size_of_init_queues 0058  
                                     __pbssBANK0 00C7                                       __pbssBANK1 0166  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                                    ?_OpenTimer1 0001                          i2c_int_handler@msg_type 00A7  
                        __end_of_i2c_int_handler 0754                               timer1_lthread@tptr 010E  
                                        ?_blink0 0001                                recv_msg@maxlength 0102  
                                recv_msg@msgtype 0103                                  recv_msg@tlength 0108  
                          __size_of_handle_start 00CA                                 WriteTimer0@timer 0003  
                                        ?_memcpy 00B8                                 WriteTimer1@timer 0003  
                                  ??_WriteTimer0 0003                                    ??_WriteTimer1 0003  
               __size_of_i_like_to_moveit_moveit 00BC                          __size_of_timer0_lthread 000E  
                        __size_of_timer1_lthread 0062                                       ??i1_memcpy 0007  
                                     ??i2_memcpy 0086                          __end_of_debug_configure 1CF4  
                               i1send_msg@length 000D                                          _SSPCON1 000FC6  
                                        _SSPCON2 000FC5                                          _SSPSTAT 000FC7  
                                        i1_blip1 1D2C                                          i1_blip2 1D24  
                                        i1_blip3 1D1C                              __size_of_ReadTimer1 0012  
                              __end_of_check_msg 1B0C                                        ?_init_i2c 00B8  
                                    _SleepIfOkay 1794                                _send_uart_message 1C56  
                                      ?_recv_msg 0100                                       _in_low_int 19C8  
                                   _handle_start 10B2                                          __Hparam 0000  
                                      ?_send_msg 0100                                          __Lparam 0000  
                             ?_send_uart_message 010E        uart_receive_interrupt_handler@status_2014 002C  
                     __end_of_timer0_int_handler 1CEA                      __end_of_FromMainLow_recvmsg 1C12  
                    __end_of_FromMainLow_sendmsg 1B68                                          ___awmod 117C  
                                        ___lwmod 1734                                  __size_of_blink0 0004  
                                __CFG_STVREN$OFF 000000                              ??_send_uart_message 00C4  
                                        __pcinit 184C                                  __size_of_memcpy 0050  
                                     _init_queue 166E                                          __ramtop 0400  
                            __size_of_OpenTimer1 0032                                          __ptext0 0754  
                                        __ptext1 1C36                                          __ptext2 16D2  
                                        __ptext3 1D3A                                          __ptext4 1734  
                                        __ptext5 1B0C                                          __ptext6 1CCE  
                                        __ptext7 1C76                                          __ptext8 17F4  
                                        __ptext9 166E                                        _T0CONbits 000FD5  
                                      _T1CONbits 000FCD                                 ___awmod@dividend 00B8  
                            __end_of_WriteTimer0 1CBE                              __end_of_WriteTimer1 1C9A  
                                 main@motor_data 0116                                   __pintcode_body 1594  
                   __end_of_FromMainHigh_recvmsg 1AA8                             end_of_initialization 1892  
                        timer1_lthread@msgbuffer 0114                     __end_of_FromMainHigh_sendmsg 1B3A  
                     FromMainHigh_sendmsg@length 00C3                        __end_of_send_uart_message 1C76  
                                        memcpy@d 00BE                                          memcpy@n 00BC  
                                        memcpy@s 00C0                                       ??_init_i2c 00BA  
                                   ??i1_recv_msg 0012                          __size_of_uart_configure 0020  
                    i2c_int_handler@data_written 00A2                                    __Lmediumconst 0000  
                                        int_func 1594                                     ??i1_send_msg 0011  
       uart_receive_interrupt_handler@bad_end_id 0031       uart_receive_interrupt_handler@bad_start_id 0030  
                               ?_i2c_int_handler 0001                                     ??i2_recv_msg 0091  
                                     ??_recv_msg 00C2                                     ??i2_send_msg 0090  
                                     ??_send_msg 00C2  uart_receive_interrupt_handler@gooey_uart_center 001D  
                     __end_of_timer1_int_handler 1BC2                                          postdec2 000FDD  
                                        postinc0 000FEE                                          postinc2 000FDE  
                      ToMainHigh_sendmsg@msgtype 0096           i_like_to_moveit_moveit@left_side_speed 0111  
                             __end_ofi1_recv_msg 10B2                               __end_ofi1_send_msg 13C4  
                    FromMainHigh_sendmsg@msgtype 010B           __end_of_uart_receive_interrupt_handler 0B2E  
        __size_of_uart_receive_interrupt_handler 018A                   _uart_receive_interrupt_handler 09A4  
                               ?_debug_configure 0001                                        _TRISBbits 000F93  
                                      _TRISCbits 000F94                               __end_ofi2_recv_msg 0DAE  
                                      i1___awmod 1480                               __end_ofi2_send_msg 0FCA  
                                      i2___awmod 1240                    FromMainHigh_recvmsg@maxlength 009C  
                       timer1_int_handler@result 001B                                       main@length 013E  
                                    ?_in_low_int 0082                            timer0_lthread@msgtype 00BA  
                          _start_i2c_slave_reply 193C                     __size_of_i2c_configure_slave 0028  
                       __end_of_enter_sleep_mode 1D3A                                     ??_ReadTimer1 0003  
                        _i_like_to_moveit_moveit 13C4                               _ToMainHigh_recvmsg 1A3C  
                                      i1memcpy@d 0007                               _ToMainHigh_sendmsg 1B68  
                                      i1memcpy@n 0005                                        i1memcpy@s 0009  
                                    _BAUDCONbits 000FB8                                   __end_of_blink0 1D3E  
                                  __pidataCOMRAM 1D3E                                   _timer0_lthread 1CCE  
                                    ?_init_queue 00B8                                        i2memcpy@d 0086  
                                    _WriteTimer0 1CAC                                      _WriteTimer1 1C88  
                                      i2memcpy@n 0084                                        i2memcpy@s 0088  
                                 _timer1_lthread 16D2                                   __end_of_memcpy 18EC  
                              _enable_interrupts 1CF4                              ?_ToMainHigh_recvmsg 010C  
                       i2c_int_handler@data_read 00A9                              ?_ToMainHigh_sendmsg 0096  
                             ?_enable_interrupts 0001                              start_initialization 184C  
                                  ??_in_high_int 0082     uart_receive_interrupt_handler@start_byte_bad 0063  
                                     ?i1___awmod 0001                                __size_ofi1_memcpy 0040  
                              __size_ofi2_memcpy 0050                                       ?i2___awmod 0080  
                      FromMainLow_sendmsg@length 00C3                            i2c_int_handler@length 009E  
                            ??_enable_interrupts 00B8                                     ??_OpenTimer1 00B8  
                             __end_of_ReadTimer1 1CAC                  uart_receive_interrupt_handler@i 0035  
                     __size_of_send_uart_message 0020                     __end_of_InterruptHandlerHigh 1608  
                                     init_i2c@ic 00B8                             ??_ToMainHigh_recvmsg 00C4  
                           ??_ToMainHigh_sendmsg 0099           uart_transmit_interrupt_handler@msgtype 0022  
                       i2c_int_handler@need_data 00A4                           __end_of_timer0_lthread 1CDC  
                                       ??_blink0 00B8                         i2c_int_handler@error_buf 009F  
                         __end_of_timer1_lthread 1734                               i1___awmod@dividend 0001  
                      __end_of_enable_interrupts 1CFC                                         ??_memcpy 00BE  
                          timer1_lthread@msgtype 0110                             _FromMainHigh_recvmsg 1A72  
            uart_receive_interrupt_handler@frame 0049              uart_receive_interrupt_handler@index 0061  
                           _FromMainHigh_sendmsg 1B0C              uart_receive_interrupt_handler@error 0060  
                   __size_of_init_timer1_lthread 0012                               __end_of_OpenTimer1 1ADA  
                       i2c_int_handler@msg_ready 00A8                                      __pbssCOMRAM 0049  
                                  ??_init_queues 00BB                                    __pcstackBANK0 0080  
                                  __pcstackBANK1 0100                              __size_of_in_low_int 003E  
                       start_i2c_slave_reply@msg 0080                              __CFG_CCP2MX$DEFAULT 000000  
                                       ?i1_blip1 0001                                         ?i1_blip2 0001  
                                       ?i1_blip3 0001                         ToMainLow_sendmsg@msgtype 0017  
                   __size_of_InterruptHandlerLow 00E4                              __end_of_in_high_int 1CCE  
                                 _uart_configure 1C36                                     ?_SleepIfOkay 0001  
                          ToMainLow_recvmsg@data 010E                                     _ToMainLow_MQ 0166  
                            __size_of_init_queue 0064                                        _check_msg 1ADA  
                                      __pnvBANK0 00C5                           ?_start_i2c_slave_reply 0080  
                              __size_of_init_i2c 0066                                     recv_msg@data 0105  
                      ??_i_like_to_moveit_moveit 00C5                                     recv_msg@qmsg 010A  
                                   recv_msg@slot 0107                                     recv_msg@qptr 0100  
                              __size_of_recv_msg 0142                                        __pintcode 0008  
                              __size_of_send_msg 0110                                         ?___awmod 00B8  
                                ?_timer0_lthread 00B8                                         ?___lwmod 00B8  
                          ?_FromMainHigh_recvmsg 0098                                  ?_timer1_lthread 010E  
                          ?_FromMainHigh_sendmsg 010B                                      __pintcodelo 0018  
                         ToMainHigh_recvmsg@data 010E                       i2c_int_handler@msg_to_send 00A6  
                              WriteTimer0@timer0 0001                               _timer0_int_handler 1CDC  
                              WriteTimer1@timer1 0001                   InterruptHandlerLow@sendy_stuff 0048  
                                    ??i1___awmod 0005                            ToMainLow_sendmsg@data 0018  
                                 __size_of_blip1 0008                                   __size_of_blip2 0008  
                                 __size_of_blip3 0008                                      ??i2___awmod 0084  
                         __end_of_uart_configure 1C56                              i1recv_msg@maxlength 000D  
                            ?_timer0_int_handler 0001     uart_receive_interrupt_handler@bad_counter_id 002D  
                            __end_of_init_queues 184C                                         _LATBbits 000F8A  
                                       _LATDbits 000F8C                                       ?_check_msg 0080  
                                       _IPR1bits 000F9F                                         _PIE1bits 000F9D  
                                       _PIR1bits 000F9E                           ToMainHigh_sendmsg@data 0097  
                                       _RCONbits 000FD0                                 __CFG_WDTPS$32768 000000  
                                 i1recv_msg@data 0010                             ??_timer0_int_handler 0005  
                                 i1recv_msg@qmsg 0017                 InterruptHandlerLow@encoder_ticks 005D  
                                 i1recv_msg@slot 0014                                   i1recv_msg@qptr 000B  
 uart_receive_interrupt_handler@received_counter 0062                     FromMainLow_recvmsg@maxlength 001D  
                     __size_of_enable_interrupts 0008                                i1send_msg@msgtype 000E  
                              i1send_msg@tlength 0012                       FromMainLow_recvmsg@msgtype 0019  
                   __size_of_FromMainLow_recvmsg 0028                     __size_of_FromMainLow_sendmsg 002E  
                           timer0_lthread@length 00BC                               _timer1_int_handler 1B96  
                                       i1_memcpy 1988                             _InterruptHandlerHigh 0008  
                                       i2_memcpy 18EC                  __end_of_i_like_to_moveit_moveit 1480  
                           timer0_lthread@msgval 00C0                         FromMainHigh_recvmsg@data 009A  
                                    _in_high_int 1CBE                                     send_msg@data 0104  
                            _i2c_configure_slave 1BC2                                     send_msg@qmsg 0109  
                                   send_msg@slot 0108                                     send_msg@qptr 0100  
                                    _INTCON2bits 000FF1                                  ?_uart_configure 0001  
                            ?_timer1_int_handler 0001                               i2___awmod@dividend 0080  
                               __size_ofi1_blip1 0008                                 __size_ofi1_blip2 0008  
                               __size_ofi1_blip3 0008                                         __Hparam0 0000  
                                   ??_in_low_int 0084                                         __Lparam0 0000  
                           ?_i2c_configure_slave 0001                                ?_enter_sleep_mode 0001  
                         ??_FromMainHigh_recvmsg 009C                           ??_FromMainHigh_sendmsg 00C3  
                              i1___awmod@divisor 0003                             ??_timer1_int_handler 001B  
        __end_of_uart_transmit_interrupt_handler 1594         __size_of_uart_transmit_interrupt_handler 0084  
              ??_uart_transmit_interrupt_handler 001E                 ?_uart_transmit_interrupt_handler 0001  
                _uart_transmit_interrupt_handler 1510                                i1___awmod@counter 0005  
                       __size_of_i2c_int_handler 0654                                 __size_of___awmod 00C4  
                             ??_enter_sleep_mode 0080                                 __size_of___lwmod 0060  
                                   ??_init_queue 00BA                                     ?_WriteTimer0 0001  
                                   ?_WriteTimer1 0001                         FromMainHigh_sendmsg@data 010C  
                        ToMainLow_sendmsg@length 001A                                main@t0thread_data 0135  
                 uart_frame_message@sent_counter 005E                            ?_InterruptHandlerHigh 0001  
            uart_transmit_interrupt_handler@data 001E              uart_transmit_interrupt_handler@done 0065  
                   i_like_to_moveit_moveit@moves 0112                                i2send_msg@msgtype 008D  
                    ToMainHigh_recvmsg@maxlength 00C4                                i2send_msg@tlength 0091  
                        init_timer1_lthread@tptr 00B8                                      _init_queues 17F4  
                             __end_of_in_low_int 1A06                                         __ptext10 1608  
                                       __ptext11 13C4                                         __ptext20 1D0C  
                                       __ptext12 1C56                                         __ptext21 1D14  
                                       __ptext13 1B3A                                         __ptext30 1D24  
                                       __ptext22 1A06                                         __ptext14 0DAE  
                                       __ptext31 1D2C                                         __ptext23 1A3C  
                                       __ptext15 1BC2                                         __ptext40 1988  
                                       __ptext32 1510                                         __ptext24 0B2E  
                                       __ptext16 1CF4                                         __ptext41 1480  
                                       __ptext33 1BEA                                         __ptext25 189C  
                                       __ptext17 1CEA                                         __ptext50 0EBE  
                                       __ptext42 1C9A                                         __ptext34 0FCA  
                                       __ptext26 117C                                         __ptext18 1CFC  
                                       __ptext51 1A72                                         __ptext43 1CDC  
                                       __ptext35 09A4                                         __ptext27 1AA8  
                                       __ptext19 1D04                                         __ptext52 0C70  
                                       __ptext44 1CAC                                         __ptext36 1B96  
                                       __ptext53 18EC                                         __ptext37 1C88  
                                       __ptext29 1D1C                                         __ptext54 1240  
                                       __ptext46 0100                                         __ptext38 1C12  
                                       __ptext55 1794                                         __ptext47 193C  
                                       __ptext39 1304                                         __ptext56 19C8  
                                       __ptext48 10B2                                         __ptext57 1CBE  
                                       __ptext49 1B68                                         __ptext58 1D34  
                                       __ptext59 1ADA                                   i1send_msg@data 000F  
                                 i1send_msg@qmsg 0015                                   i1send_msg@slot 0014  
                                 i1send_msg@qptr 000B                                         _init_i2c 1608  
                       __size_of_debug_configure 000A                              _init_timer1_lthread 1C76  
                                  __size_of_blip 0008                                    __size_of_main 0250  
                              main@t1thread_data 0137                                      ??_check_msg 0082  
                             __end_of_init_queue 16D2                             __size_of_SleepIfOkay 0060  
                                       _recv_msg 0B2E                            ??_i2c_configure_slave 00B8  
                                       _send_msg 0DAE    uart_receive_interrupt_handler@bad_checksum_id 0032  
                                 init_queue@qptr 00B8                                   i2recv_msg@data 008F  
                                 i2recv_msg@qmsg 0096                                   i2recv_msg@slot 0093  
                                 i2recv_msg@qptr 008A                                     _SSP1STATbits 000FC7  
                            _InterruptHandlerLow 0018                                         main@poop 013D  
                           ?_init_timer1_lthread 00B8                                i2___awmod@divisor 0082  
                              i2___awmod@counter 0084                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                                         memcpy@d1 00B8  
                                       memcpy@s1 00BA                     i2c_int_handler@overrun_error 00A3  
                               i2send_msg@length 008C                                         intlevel1 0000  
                                       intlevel2 0000                             ?_InterruptHandlerLow 0001  
                        ??_start_i2c_slave_reply 0082                     send_uart_message@message_ptr 010E  
                               ___lwmod@dividend 00B8                                       _RCSTA1bits 000FAB  
                                  ?_handle_start 0001                                 ??_timer0_lthread 00C0  
                    __size_of_ToMainHigh_recvmsg 0036                      __size_of_ToMainHigh_sendmsg 002E  
                                     _OSCCONbits 000FD3                                 ??_timer1_lthread 00C4  
                              i1recv_msg@msgtype 000E                                i1recv_msg@tlength 0015  
                       ToMainHigh_sendmsg@length 0099                            ??_init_timer1_lthread 00BA  
                         ??_InterruptHandlerHigh 00AA                                _ToMainLow_recvmsg 1A06  
                              _ToMainLow_sendmsg 1C12                               main@last_reg_recvd 0124  
                                ___lwmod@divisor 00BA                               ?_ToMainLow_recvmsg 010C  
                              ??_i2c_int_handler 009D                                  ___lwmod@counter 00BC  
                             ?_ToMainLow_sendmsg 0017                                      _SSPCON1bits 000FC6  
                                    _SSPCON2bits 000FC5                                   i2send_msg@data 008E  
                          ??_InterruptHandlerLow 0037                              ??_ToMainLow_recvmsg 00C4  
                                 i2send_msg@qmsg 0094                                   i2send_msg@slot 0093  
                                 i2send_msg@qptr 008A                              ??_ToMainLow_sendmsg 001A  
                            _FromMainLow_recvmsg 1BEA                                   ??_handle_start 0080  
                            _FromMainLow_sendmsg 1B3A  
