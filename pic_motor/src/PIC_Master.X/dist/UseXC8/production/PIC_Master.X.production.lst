

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Nov 09 19:19:54 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	param0,global,class=BANK0,space=1,delta=1
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001CF6                     __pidataCOMRAM:
    77                           	opt stack 0
    78                           
    79                           ;initializer for uart_transmit_interrupt_handler@done
    80  001CF6  01                 	db	1
    81  0000                     _BAUDCONbits	set	4024
    82  0000                     _INTCON2bits	set	4081
    83  0000                     _INTCONbits	set	4082
    84  0000                     _IPR1bits	set	3999
    85  0000                     _LATB	set	3978
    86  0000                     _LATBbits	set	3978
    87  0000                     _LATDbits	set	3980
    88  0000                     _OSCCON	set	4051
    89  0000                     _OSCCONbits	set	4051
    90  0000                     _OSCTUNEbits	set	3995
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIR1bits	set	3998
    93  0000                     _RCONbits	set	4048
    94  0000                     _RCREG1	set	4014
    95  0000                     _RCSTA1bits	set	4011
    96  0000                     _SPBRG	set	4015
    97  0000                     _SPBRGH	set	4016
    98  0000                     _SSP1STATbits	set	4039
    99  0000                     _SSPADD	set	4040
   100  0000                     _SSPBUF	set	4041
   101  0000                     _SSPCON1	set	4038
   102  0000                     _SSPCON1bits	set	4038
   103  0000                     _SSPCON2	set	4037
   104  0000                     _SSPCON2bits	set	4037
   105  0000                     _SSPSTAT	set	4039
   106  0000                     _SSPSTATbits	set	4039
   107  0000                     _T0CONbits	set	4053
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TMR1H	set	4047
   111  0000                     _TMR1L	set	4046
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISBbits	set	3987
   114  0000                     _TRISCbits	set	3988
   115  0000                     _TRISD	set	3989
   116  0000                     _TXREG1	set	4013
   117  0000                     _TXSTA1bits	set	4012
   118                           
   119                           	psect	nvBANK0
   120  0000C5                     __pnvBANK0:
   121                           	opt stack 0
   122  0000C5                     _ic_ptr:
   123                           	opt stack 0
   124  0000C5                     	ds	2
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  0018AA                     __pcinit:
   130                           	opt stack 0
   131  0018AA                     start_initialization:
   132                           	opt stack 0
   133  0018AA                     __initialization:
   134                           	opt stack 0
   135                           
   136                           ; Clear objects allocated to BANK3 (87 bytes)
   137  0018AA  EE03  F000         	lfsr	0,__pbssBANK3
   138  0018AE  0E57               	movlw	87
   139  0018B0                     clear_0:
   140  0018B0  6AEE               	clrf	postinc0,c
   141  0018B2  06E8               	decf	wreg,f,c
   142  0018B4  E1FD               	bnz	clear_0
   143                           
   144                           ; Clear objects allocated to BANK2 (174 bytes)
   145  0018B6  EE02  F000         	lfsr	0,__pbssBANK2
   146  0018BA  0EAE               	movlw	174
   147  0018BC                     clear_1:
   148  0018BC  6AEE               	clrf	postinc0,c
   149  0018BE  06E8               	decf	wreg,f,c
   150  0018C0  E1FD               	bnz	clear_1
   151                           
   152                           ; Clear objects allocated to BANK1 (87 bytes)
   153  0018C2  EE01  F066         	lfsr	0,__pbssBANK1
   154  0018C6  0E57               	movlw	87
   155  0018C8                     clear_2:
   156  0018C8  6AEE               	clrf	postinc0,c
   157  0018CA  06E8               	decf	wreg,f,c
   158  0018CC  E1FD               	bnz	clear_2
   159                           
   160                           ; Clear objects allocated to BANK0 (1 bytes)
   161  0018CE  0100               	movlb	0
   162  0018D0  6BC7               	clrf	__pbssBANK0& (0+255),b
   163                           
   164                           ; Clear objects allocated to COMRAM (35 bytes)
   165  0018D2  EE00  F056         	lfsr	0,__pbssCOMRAM
   166  0018D6  0E23               	movlw	35
   167  0018D8                     clear_3:
   168  0018D8  6AEE               	clrf	postinc0,c
   169  0018DA  06E8               	decf	wreg,f,c
   170  0018DC  E1FD               	bnz	clear_3
   171                           
   172                           ; Initialize objects allocated to COMRAM (1 bytes)
   173                           ; load TBLPTR registers with __pidataCOMRAM
   174  0018DE  0EF6               	movlw	low __pidataCOMRAM
   175  0018E0  6EF6               	movwf	tblptrl,c
   176  0018E2  0E1C               	movlw	high __pidataCOMRAM
   177  0018E4  6EF7               	movwf	tblptrh,c
   178  0018E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   179  0018E8  6EF8               	movwf	tblptru,c
   180  0018EA  0009               	tblrd		*+	;fetch initializer
   181  0018EC  CFF5 F079          	movff	tablat,__pdataCOMRAM
   182  0018F0                     end_of_initialization:
   183                           	opt stack 0
   184  0018F0                     __end_of__initialization:
   185                           	opt stack 0
   186  0018F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  0018F2  6EF8               	movwf	tblptru,c
   188  0018F4  0100               	movlb	0
   189  0018F6  EFBB  F003         	goto	_main	;jump to C main() function
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           
   197                           	psect	bssCOMRAM
   198  000056                     __pbssCOMRAM:
   199                           	opt stack 0
   200  000056                     uart_receive_interrupt_handler@frame:
   201                           	opt stack 0
   202  000056                     	ds	18
   203  000068                     InterruptHandlerLow@encoder_left:
   204                           	opt stack 0
   205  000068                     	ds	4
   206  00006C                     InterruptHandlerLow@encoder_right:
   207                           	opt stack 0
   208  00006C                     	ds	4
   209  000070                     _need_sensor_data:
   210                           	opt stack 0
   211  000070                     	ds	2
   212  000072                     uart_frame_message@sent_counter:
   213                           	opt stack 0
   214  000072                     	ds	1
   215  000073                     uart_receive_interrupt_handler@done:
   216                           	opt stack 0
   217  000073                     	ds	1
   218  000074                     uart_receive_interrupt_handler@error:
   219                           	opt stack 0
   220  000074                     	ds	1
   221  000075                     uart_receive_interrupt_handler@index:
   222                           	opt stack 0
   223  000075                     	ds	1
   224  000076                     uart_receive_interrupt_handler@received_counter:
   225                           	opt stack 0
   226  000076                     	ds	1
   227  000077                     uart_receive_interrupt_handler@start_byte_bad:
   228                           	opt stack 0
   229  000077                     	ds	1
   230  000078                     uart_transmit_interrupt_handler@index:
   231                           	opt stack 0
   232  000078                     	ds	1
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	dataCOMRAM
   241  000079                     __pdataCOMRAM:
   242                           	opt stack 0
   243  000079                     uart_transmit_interrupt_handler@done:
   244                           	opt stack 0
   245  000079                     	ds	1
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	bssBANK0
   254  0000C7                     __pbssBANK0:
   255                           	opt stack 0
   256  0000C7                     _MQ_Main_Willing_to_block:
   257                           	opt stack 0
   258  0000C7                     	ds	1
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           
   266                           	psect	bssBANK1
   267  000166                     __pbssBANK1:
   268                           	opt stack 0
   269  000166                     _ToMainLow_MQ:
   270                           	opt stack 0
   271  000166                     	ds	87
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           
   279                           	psect	bssBANK2
   280  000200                     __pbssBANK2:
   281                           	opt stack 0
   282  000200                     _FromMainLow_MQ:
   283                           	opt stack 0
   284  000200                     	ds	87
   285  000257                     _ToMainHigh_MQ:
   286                           	opt stack 0
   287  000257                     	ds	87
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	bssBANK3
   296  000300                     __pbssBANK3:
   297                           	opt stack 0
   298  000300                     _FromMainHigh_MQ:
   299                           	opt stack 0
   300  000300                     	ds	87
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308                           	psect	cstackBANK1
   309  000100                     __pcstackBANK1:
   310                           	opt stack 0
   311  000100                     send_msg@qptr:
   312                           	opt stack 0
   313  000100                     recv_msg@qptr:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x0
   317  000100                     	ds	2
   318  000102                     send_msg@length:
   319                           	opt stack 0
   320  000102                     recv_msg@maxlength:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x2
   324  000102                     	ds	1
   325  000103                     send_msg@msgtype:
   326                           	opt stack 0
   327  000103                     recv_msg@msgtype:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x3
   331  000103                     	ds	1
   332  000104                     send_msg@data:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x4
   336  000104                     	ds	1
   337  000105                     recv_msg@data:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x5
   341  000105                     	ds	1
   342  000106                     send_msg@tlength:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x6
   346  000106                     	ds	1
   347  000107                     recv_msg@slot:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x7
   351  000107                     	ds	1
   352  000108                     send_msg@slot:
   353                           	opt stack 0
   354  000108                     recv_msg@tlength:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x8
   358  000108                     	ds	1
   359  000109                     send_msg@qmsg:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x9
   363  000109                     	ds	1
   364  00010A                     recv_msg@qmsg:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0xA
   368  00010A                     	ds	1
   369  00010B                     FromMainLow_sendmsg@msgtype:
   370                           	opt stack 0
   371  00010B                     FromMainHigh_sendmsg@msgtype:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0xB
   375  00010B                     	ds	1
   376  00010C                     ToMainLow_recvmsg@msgtype:
   377                           	opt stack 0
   378  00010C                     ToMainHigh_recvmsg@msgtype:
   379                           	opt stack 0
   380  00010C                     FromMainLow_sendmsg@data:
   381                           	opt stack 0
   382  00010C                     FromMainHigh_sendmsg@data:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0xC
   386  00010C                     	ds	2
   387  00010E                     ToMainLow_recvmsg@data:
   388                           	opt stack 0
   389  00010E                     ToMainHigh_recvmsg@data:
   390                           	opt stack 0
   391  00010E                     send_uart_message@message_ptr:
   392                           	opt stack 0
   393  00010E                     timer1_lthread@tptr:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0xE
   397  00010E                     	ds	2
   398  000110                     i_like_to_moveit_moveit@right_side_speed:
   399                           	opt stack 0
   400  000110                     timer1_lthread@msgtype:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x10
   404  000110                     	ds	1
   405  000111                     i_like_to_moveit_moveit@left_side_speed:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x11
   409  000111                     	ds	1
   410  000112                     timer1_lthread@length:
   411                           	opt stack 0
   412  000112                     i_like_to_moveit_moveit@moves:
   413                           	opt stack 0
   414                           
   415                           ; 4 bytes @ 0x12
   416  000112                     	ds	2
   417  000114                     timer1_lthread@msgbuffer:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x14
   421  000114                     	ds	2
   422  000116                     main@motor_data:
   423                           	opt stack 0
   424                           
   425                           ; 14 bytes @ 0x16
   426  000116                     	ds	14
   427  000124                     main@msgbuffer:
   428                           	opt stack 0
   429                           
   430                           ; 15 bytes @ 0x24
   431  000124                     	ds	15
   432  000133                     main@last_reg_recvd:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x33
   436  000133                     	ds	1
   437  000134                     main@need_sensor_data:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x34
   441  000134                     	ds	1
   442  000135                     main@t0thread_data:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x35
   446  000135                     	ds	2
   447  000137                     main@t1thread_data:
   448                           	opt stack 0
   449                           
   450                           ; 6 bytes @ 0x37
   451  000137                     	ds	6
   452  00013D                     main@length:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x3D
   456  00013D                     	ds	1
   457  00013E                     main@msgtype:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x3E
   461  00013E                     	ds	1
   462  00013F                     main@i:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x3F
   466  00013F                     	ds	1
   467  000140                     main@ic:
   468                           	opt stack 0
   469                           
   470                           ; 38 bytes @ 0x40
   471  000140                     	ds	38
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           
   479                           	psect	cstackBANK0
   480  000080                     __pcstackBANK0:
   481                           	opt stack 0
   482  000080                     ?_in_high_int:
   483                           	opt stack 0
   484  000080                     ?i2___awmod:
   485                           	opt stack 0
   486  000080                     handle_start@data_read:
   487                           	opt stack 0
   488  000080                     check_msg@qptr:
   489                           	opt stack 0
   490  000080                     start_i2c_slave_reply@msg:
   491                           	opt stack 0
   492  000080                     i2memcpy@d1:
   493                           	opt stack 0
   494  000080                     i2___awmod@dividend:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x0
   498  000080                     	ds	2
   499  000082                     ??_check_msg:
   500  000082                     ?_in_low_int:
   501                           	opt stack 0
   502  000082                     start_i2c_slave_reply@length:
   503                           	opt stack 0
   504  000082                     i2memcpy@s1:
   505                           	opt stack 0
   506  000082                     i2___awmod@divisor:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x2
   510  000082                     	ds	2
   511  000084                     i2___awmod@counter:
   512                           	opt stack 0
   513  000084                     i2memcpy@n:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x4
   517  000084                     	ds	1
   518  000085                     i2___awmod@sign:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x5
   522  000085                     	ds	1
   523  000086                     i2memcpy@d:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x6
   527  000086                     	ds	2
   528  000088                     i2memcpy@s:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x8
   532  000088                     	ds	2
   533  00008A                     i2send_msg@qptr:
   534                           	opt stack 0
   535  00008A                     i2recv_msg@qptr:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0xA
   539  00008A                     	ds	2
   540  00008C                     i2send_msg@length:
   541                           	opt stack 0
   542  00008C                     i2recv_msg@maxlength:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0xC
   546  00008C                     	ds	1
   547  00008D                     i2send_msg@msgtype:
   548                           	opt stack 0
   549  00008D                     i2recv_msg@msgtype:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0xD
   553  00008D                     	ds	1
   554  00008E                     i2send_msg@data:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0xE
   558  00008E                     	ds	1
   559  00008F                     i2recv_msg@data:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0xF
   563  00008F                     	ds	1
   564  000090                     ??i2_send_msg:
   565                           
   566                           ; 0 bytes @ 0x10
   567  000090                     	ds	1
   568  000091                     ??i2_recv_msg:
   569  000091                     i2send_msg@tlength:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x11
   573  000091                     	ds	2
   574  000093                     i2send_msg@slot:
   575                           	opt stack 0
   576  000093                     i2recv_msg@slot:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x13
   580  000093                     	ds	1
   581  000094                     i2send_msg@qmsg:
   582                           	opt stack 0
   583  000094                     i2recv_msg@tlength:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587  000094                     	ds	2
   588  000096                     ToMainHigh_sendmsg@msgtype:
   589                           	opt stack 0
   590  000096                     i2recv_msg@qmsg:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x16
   594  000096                     	ds	1
   595  000097                     ToMainHigh_sendmsg@data:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x17
   599  000097                     	ds	1
   600  000098                     FromMainHigh_recvmsg@msgtype:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x18
   604  000098                     	ds	1
   605  000099                     ToMainHigh_sendmsg@length:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x19
   609  000099                     	ds	1
   610  00009A                     FromMainHigh_recvmsg@data:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x1A
   614  00009A                     	ds	2
   615  00009C                     FromMainHigh_recvmsg@maxlength:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x1C
   619  00009C                     	ds	1
   620  00009D                     ??_i2c_int_handler:
   621                           
   622                           ; 0 bytes @ 0x1D
   623  00009D                     	ds	1
   624  00009E                     i2c_int_handler@length:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x1E
   628  00009E                     	ds	1
   629  00009F                     i2c_int_handler@error_buf:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x1F
   633  00009F                     	ds	3
   634  0000A2                     i2c_int_handler@data_written:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x22
   638  0000A2                     	ds	1
   639  0000A3                     i2c_int_handler@overrun_error:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x23
   643  0000A3                     	ds	1
   644  0000A4                     i2c_int_handler@need_data:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x24
   648  0000A4                     	ds	1
   649  0000A5                     i2c_int_handler@i2c_data:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x25
   653  0000A5                     	ds	1
   654  0000A6                     i2c_int_handler@msg_to_send:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x26
   658  0000A6                     	ds	1
   659  0000A7                     i2c_int_handler@msg_type:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x27
   663  0000A7                     	ds	1
   664  0000A8                     i2c_int_handler@msg_ready:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x28
   668  0000A8                     	ds	1
   669  0000A9                     i2c_int_handler@data_read:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x29
   673  0000A9                     	ds	1
   674  0000AA                     ??_InterruptHandlerHigh:
   675                           
   676                           ; 0 bytes @ 0x2A
   677  0000AA                     	ds	14
   678  0000B8                     ?___awmod:
   679                           	opt stack 0
   680  0000B8                     ?___lwmod:
   681                           	opt stack 0
   682  0000B8                     i2c_configure_slave@addr:
   683                           	opt stack 0
   684  0000B8                     init_queue@qptr:
   685                           	opt stack 0
   686  0000B8                     init_i2c@ic:
   687                           	opt stack 0
   688  0000B8                     timer0_lthread@tptr:
   689                           	opt stack 0
   690  0000B8                     init_timer1_lthread@tptr:
   691                           	opt stack 0
   692  0000B8                     ___awmod@dividend:
   693                           	opt stack 0
   694  0000B8                     ___lwmod@dividend:
   695                           	opt stack 0
   696  0000B8                     memcpy@d1:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x38
   700  0000B8                     	ds	2
   701  0000BA                     init_queue@i:
   702                           	opt stack 0
   703  0000BA                     timer0_lthread@msgtype:
   704                           	opt stack 0
   705  0000BA                     ___awmod@divisor:
   706                           	opt stack 0
   707  0000BA                     ___lwmod@divisor:
   708                           	opt stack 0
   709  0000BA                     memcpy@s1:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x3A
   713  0000BA                     	ds	1
   714  0000BB                     
   715                           ; 0 bytes @ 0x3B
   716  0000BB                     	ds	1
   717  0000BC                     ___awmod@counter:
   718                           	opt stack 0
   719  0000BC                     ___lwmod@counter:
   720                           	opt stack 0
   721  0000BC                     timer0_lthread@length:
   722                           	opt stack 0
   723  0000BC                     memcpy@n:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x3C
   727  0000BC                     	ds	1
   728  0000BD                     ___awmod@sign:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x3D
   732  0000BD                     	ds	1
   733  0000BE                     timer0_lthread@msgbuffer:
   734                           	opt stack 0
   735  0000BE                     memcpy@d:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x3E
   739  0000BE                     	ds	2
   740  0000C0                     timer0_lthread@msgval:
   741                           	opt stack 0
   742  0000C0                     memcpy@s:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x40
   746  0000C0                     	ds	2
   747  0000C2                     ??_send_msg:
   748  0000C2                     ??_recv_msg:
   749                           
   750                           ; 0 bytes @ 0x42
   751  0000C2                     	ds	1
   752  0000C3                     FromMainLow_sendmsg@length:
   753                           	opt stack 0
   754  0000C3                     FromMainHigh_sendmsg@length:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x43
   758  0000C3                     	ds	1
   759  0000C4                     ToMainLow_recvmsg@maxlength:
   760                           	opt stack 0
   761  0000C4                     ToMainHigh_recvmsg@maxlength:
   762                           	opt stack 0
   763  0000C4                     send_uart_message@message_q_code:
   764                           	opt stack 0
   765  0000C4                     timer1_lthread@retval:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x44
   769  0000C4                     	ds	1
   770  0000C5                     tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           
   777                           ; 0 bytes @ 0x45
   778                           
   779                           	psect	cstackCOMRAM
   780  000001                     __pcstackCOMRAM:
   781                           	opt stack 0
   782  000001                     ?i1___awmod:
   783                           	opt stack 0
   784  000001                     i1memcpy@d1:
   785                           	opt stack 0
   786  000001                     i1___awmod@dividend:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x0
   790  000001                     	ds	2
   791  000003                     i1memcpy@s1:
   792                           	opt stack 0
   793  000003                     i1___awmod@divisor:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x2
   797  000003                     	ds	2
   798  000005                     i1___awmod@counter:
   799                           	opt stack 0
   800  000005                     i1memcpy@n:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x4
   804  000005                     	ds	1
   805  000006                     i1___awmod@sign:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x5
   809  000006                     	ds	1
   810  000007                     i1memcpy@d:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x6
   814  000007                     	ds	2
   815  000009                     i1memcpy@s:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x8
   819  000009                     	ds	2
   820  00000B                     i1send_msg@qptr:
   821                           	opt stack 0
   822  00000B                     i1recv_msg@qptr:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0xA
   826  00000B                     	ds	2
   827  00000D                     i1send_msg@length:
   828                           	opt stack 0
   829  00000D                     i1recv_msg@maxlength:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0xC
   833  00000D                     	ds	1
   834  00000E                     i1send_msg@msgtype:
   835                           	opt stack 0
   836  00000E                     i1recv_msg@msgtype:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0xD
   840  00000E                     	ds	1
   841  00000F                     i1send_msg@data:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0xE
   845  00000F                     	ds	1
   846  000010                     i1recv_msg@data:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0xF
   850  000010                     	ds	1
   851  000011                     ??i1_send_msg:
   852                           
   853                           ; 0 bytes @ 0x10
   854  000011                     	ds	1
   855  000012                     ??i1_recv_msg:
   856  000012                     i1send_msg@tlength:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x11
   860  000012                     	ds	2
   861  000014                     i1send_msg@slot:
   862                           	opt stack 0
   863  000014                     i1recv_msg@slot:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x13
   867  000014                     	ds	1
   868  000015                     i1send_msg@qmsg:
   869                           	opt stack 0
   870  000015                     i1recv_msg@tlength:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x14
   874  000015                     	ds	2
   875  000017                     ToMainLow_sendmsg@msgtype:
   876                           	opt stack 0
   877  000017                     i1recv_msg@qmsg:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x16
   881  000017                     	ds	1
   882  000018                     ToMainLow_sendmsg@data:
   883                           	opt stack 0
   884                           
   885                           ; 2 bytes @ 0x17
   886  000018                     	ds	1
   887  000019                     FromMainLow_recvmsg@msgtype:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x18
   891  000019                     	ds	1
   892  00001A                     ToMainLow_sendmsg@length:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x19
   896  00001A                     	ds	1
   897  00001B                     ??_uart_receive_interrupt_handler:
   898  00001B                     FromMainLow_recvmsg@data:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x1A
   902  00001B                     	ds	2
   903  00001D                     FromMainLow_recvmsg@maxlength:
   904                           	opt stack 0
   905  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   906                           	opt stack 0
   907                           
   908                           ; 14 bytes @ 0x1C
   909  00001D                     	ds	1
   910  00001E                     uart_transmit_interrupt_handler@data:
   911                           	opt stack 0
   912                           
   913                           ; 4 bytes @ 0x1D
   914  00001E                     	ds	4
   915  000022                     uart_transmit_interrupt_handler@msgtype:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x21
   919  000022                     	ds	1
   920  000023                     uart_transmit_interrupt_handler@message_status:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x22
   924  000023                     	ds	8
   925  00002B                     uart_receive_interrupt_handler@status:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x2A
   929  00002B                     	ds	1
   930  00002C                     uart_receive_interrupt_handler@status_2003:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x2B
   934  00002C                     	ds	1
   935  00002D                     uart_receive_interrupt_handler@bad_counter_id:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x2C
   939  00002D                     	ds	2
   940  00002F                     uart_receive_interrupt_handler@checksum:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x2E
   944  00002F                     	ds	1
   945  000030                     uart_receive_interrupt_handler@bad_start_id:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x2F
   949  000030                     	ds	1
   950  000031                     uart_receive_interrupt_handler@bad_end_id:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x30
   954  000031                     	ds	1
   955  000032                     uart_receive_interrupt_handler@bad_checksum_id:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x31
   959  000032                     	ds	1
   960  000033                     uart_receive_interrupt_handler@message_count:
   961                           	opt stack 0
   962                           
   963                           ; 1 bytes @ 0x32
   964  000033                     	ds	1
   965  000034                     uart_receive_interrupt_handler@msg_id:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x33
   969  000034                     	ds	1
   970  000035                     uart_receive_interrupt_handler@i:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0x34
   974  000035                     	ds	2
   975  000037                     ??_InterruptHandlerLow:
   976                           
   977                           ; 0 bytes @ 0x36
   978  000037                     	ds	17
   979  000048                     InterruptHandlerLow@sendy_stuff:
   980                           	opt stack 0
   981                           
   982                           ; 14 bytes @ 0x47
   983  000048                     	ds	14
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           
   991 ;;
   992 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   993 ;;
   994 ;; *************** function _main *****************
   995 ;; Defined at:
   996 ;;		line 189 in file "../src/main.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  ic             38   64[BANK1 ] struct __i2c_comm
  1001 ;;  msgbuffer      15   36[BANK1 ] unsigned char [15]
  1002 ;;  motor_data     14   22[BANK1 ] unsigned char [14]
  1003 ;;  t1thread_dat    6   55[BANK1 ] struct __timer1_thread_s
  1004 ;;  t0thread_dat    2   53[BANK1 ] struct __timer0_thread_s
  1005 ;;  uthread_data    2    0        struct __uart_thread_str
  1006 ;;  i               1   63[BANK1 ] unsigned char 
  1007 ;;  msgtype         1   62[BANK1 ] unsigned char 
  1008 ;;  length          1   61[BANK1 ] char 
  1009 ;;  need_sensor_    1   52[BANK1 ] unsigned char 
  1010 ;;  last_reg_rec    1   51[BANK1 ] unsigned char 
  1011 ;;  c               1    0        unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;		None               void
  1014 ;; Registers used:
  1015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         0       0      80       0       0
  1023 ;;      Temps:          0       0       0       0       0
  1024 ;;      Totals:         0       0      80       0       0
  1025 ;;Total ram usage:       80 bytes
  1026 ;; Hardware stack levels required when called:   15
  1027 ;; This function calls:
  1028 ;;		_FromMainHigh_sendmsg
  1029 ;;		_ToMainHigh_recvmsg
  1030 ;;		_ToMainLow_recvmsg
  1031 ;;		_blip
  1032 ;;		_blip1
  1033 ;;		_blip2
  1034 ;;		_blip3
  1035 ;;		_debug_configure
  1036 ;;		_enable_interrupts
  1037 ;;		_i2c_configure_slave
  1038 ;;		_i_like_to_moveit_moveit
  1039 ;;		_init_i2c
  1040 ;;		_init_queues
  1041 ;;		_init_timer1_lthread
  1042 ;;		_timer0_lthread
  1043 ;;		_timer1_lthread
  1044 ;;		_uart_configure
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text0
  1051  000776                     __ptext0:
  1052                           	opt stack 0
  1053  000776                     _main:
  1054                           	opt stack 16
  1055                           
  1056                           ;main.c: 190: char c;
  1057                           ;main.c: 191: signed char length;
  1058                           ;main.c: 192: unsigned char msgtype;
  1059                           ;main.c: 193: unsigned char last_reg_recvd;
  1060                           ;main.c: 194: i2c_comm ic;
  1061                           ;main.c: 195: unsigned char msgbuffer[14 + 1];
  1062                           ;main.c: 196: unsigned char i;
  1063                           ;main.c: 197: uart_thread_struct uthread_data;
  1064                           ;main.c: 198: timer1_thread_struct t1thread_data;
  1065                           ;main.c: 199: timer0_thread_struct t0thread_data;
  1066                           ;main.c: 200: unsigned char need_sensor_data = 1;
  1067                           
  1068                           ;incstack = 0
  1069  000776  0E01               	movlw	1
  1070  000778  0101               	movlb	1	; () banked
  1071  00077A  6F34               	movwf	main@need_sensor_data& (0+255),b
  1072                           
  1073                           ;main.c: 208: OSCCON = 0x82;
  1074  00077C  0E82               	movlw	130
  1075  00077E  6ED3               	movwf	4051,c	;volatile
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;main.c: 209: OSCTUNEbits.PLLEN = 1;
  1079  000780  8C9B               	bsf	3995,6,c	;volatile
  1080                           
  1081                           ; BSR set to: 1
  1082                           ;main.c: 239: init_i2c(&ic);
  1083  000782  0101               	movlb	1	; () banked
  1084  000784  0E01               	movlw	high main@ic
  1085  000786  0100               	movlb	0	; () banked
  1086  000788  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
  1087  00078A  0101               	movlb	1	; () banked
  1088  00078C  0E40               	movlw	low main@ic
  1089  00078E  0100               	movlb	0	; () banked
  1090  000790  6FB8               	movwf	init_i2c@ic& (0+255),b
  1091  000792  EC33  F00B         	call	_init_i2c	;wreg free
  1092                           
  1093                           ;main.c: 242: init_timer1_lthread(&t1thread_data);
  1094  000796  0101               	movlb	1	; () banked
  1095  000798  0E01               	movlw	high main@t1thread_data
  1096  00079A  0100               	movlb	0	; () banked
  1097  00079C  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1098  00079E  0101               	movlb	1	; () banked
  1099  0007A0  0E37               	movlw	low main@t1thread_data
  1100  0007A2  0100               	movlb	0	; () banked
  1101  0007A4  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1102  0007A6  EC3B  F00E         	call	_init_timer1_lthread	;wreg free
  1103                           
  1104                           ;main.c: 245: init_queues();
  1105  0007AA  EC29  F00C         	call	_init_queues	;wreg free
  1106                           
  1107                           ;main.c: 249: TRISB = 0x0;
  1108  0007AE  0E00               	movlw	0
  1109  0007B0  6E93               	movwf	3987,c	;volatile
  1110                           
  1111                           ;main.c: 250: LATB = 0x0;
  1112  0007B2  0E00               	movlw	0
  1113  0007B4  6E8A               	movwf	3978,c	;volatile
  1114                           
  1115                           ;main.c: 267: INTCONbits.TMR0IE = 1;
  1116  0007B6  8AF2               	bsf	intcon,5,c	;volatile
  1117                           
  1118                           ;main.c: 268: TRISBbits.TRISB5 = 1;
  1119  0007B8  8A93               	bsf	3987,5,c	;volatile
  1120                           
  1121                           ;main.c: 269: T0CONbits.T08BIT = 1;
  1122  0007BA  8CD5               	bsf	4053,6,c	;volatile
  1123                           
  1124                           ;main.c: 270: T0CONbits.T0CS = 1;
  1125  0007BC  8AD5               	bsf	4053,5,c	;volatile
  1126                           
  1127                           ;main.c: 271: T0CONbits.T0SE = 1;
  1128  0007BE  88D5               	bsf	4053,4,c	;volatile
  1129                           
  1130                           ;main.c: 272: T0CONbits.PSA = 1;
  1131  0007C0  86D5               	bsf	4053,3,c	;volatile
  1132                           
  1133                           ;main.c: 273: T0CONbits.T0PS = 0x1;
  1134  0007C2  50D5               	movf	4053,w,c	;volatile
  1135  0007C4  0BF8               	andlw	-8
  1136  0007C6  0901               	iorlw	1
  1137  0007C8  6ED5               	movwf	4053,c	;volatile
  1138                           
  1139                           ;main.c: 274: T0CONbits.TMR0ON = 1;
  1140  0007CA  8ED5               	bsf	4053,7,c	;volatile
  1141                           
  1142                           ;main.c: 307: IPR1bits.TMR1IP = 0;
  1143  0007CC  909F               	bcf	3999,0,c	;volatile
  1144                           
  1145                           ;main.c: 309: IPR1bits.RCIP = 0;
  1146  0007CE  9A9F               	bcf	3999,5,c	;volatile
  1147                           
  1148                           ;main.c: 312: IPR1bits.SSPIP = 1;
  1149  0007D0  869F               	bsf	3999,3,c	;volatile
  1150                           
  1151                           ;main.c: 315: INTCON2bits.TMR0IP = 0;
  1152  0007D2  94F1               	bcf	intcon2,2,c	;volatile
  1153                           
  1154                           ;main.c: 324: i2c_configure_slave(0x9C);
  1155  0007D4  0E9C               	movlw	156
  1156  0007D6  ECE1  F00D         	call	_i2c_configure_slave
  1157                           
  1158                           ;main.c: 339: PIE1bits.SSPIE = 1;
  1159  0007DA  869D               	bsf	3997,3,c	;volatile
  1160                           
  1161                           ;main.c: 343: IPR1bits.ADIP = 0;
  1162  0007DC  9C9F               	bcf	3999,6,c	;volatile
  1163                           
  1164                           ;main.c: 344: PIE1bits.ADIE = 1;
  1165  0007DE  8C9D               	bsf	3997,6,c	;volatile
  1166                           
  1167                           ;main.c: 368: debug_configure();
  1168  0007E0  EC53  F00E         	call	_debug_configure	;wreg free
  1169                           
  1170                           ;main.c: 369: blip();
  1171  0007E4  EC68  F00E         	call	_blip	;wreg free
  1172                           
  1173                           ;main.c: 370: blip1();
  1174  0007E8  EC64  F00E         	call	_blip1	;wreg free
  1175                           
  1176                           ;main.c: 371: blip2();
  1177  0007EC  EC60  F00E         	call	_blip2	;wreg free
  1178                           
  1179                           ;main.c: 372: blip3();
  1180  0007F0  EC5C  F00E         	call	_blip3	;wreg free
  1181                           
  1182                           ;main.c: 381: enable_interrupts();
  1183  0007F4  EC58  F00E         	call	_enable_interrupts	;wreg free
  1184                           
  1185                           ;main.c: 394: uart_configure();
  1186  0007F8  EC1B  F00E         	call	_uart_configure	;wreg free
  1187                           
  1188                           ;main.c: 412: unsigned char motor_data[14];
  1189                           ;main.c: 413: motor_data[0] = 0x07;
  1190  0007FC  0E07               	movlw	7
  1191  0007FE  0101               	movlb	1	; () banked
  1192  000800  6F16               	movwf	main@motor_data& (0+255),b
  1193                           
  1194                           ; BSR set to: 1
  1195                           ;main.c: 415: for(i=1;i<14;i++)
  1196  000802  0E01               	movlw	1
  1197  000804  0101               	movlb	1	; () banked
  1198  000806  6F3F               	movwf	main@i& (0+255),b
  1199  000808  D00F               	goto	L2
  1200  00080A                     l4120:
  1201                           
  1202                           ; BSR set to: 1
  1203                           ;main.c: 416: {
  1204                           ;main.c: 417: motor_data[i]=0x44;
  1205  00080A  0101               	movlb	1	; () banked
  1206  00080C  513F               	movf	main@i& (0+255),w,b
  1207  00080E  0D01               	mullw	1
  1208  000810  0101               	movlb	1	; () banked
  1209  000812  0E16               	movlw	low main@motor_data
  1210  000814  24F3               	addwf	prodl,w,c
  1211  000816  6ED9               	movwf	fsr2l,c
  1212  000818  0101               	movlb	1	; () banked
  1213  00081A  0E01               	movlw	high main@motor_data
  1214  00081C  20F4               	addwfc	prodh,w,c
  1215  00081E  6EDA               	movwf	fsr2h,c
  1216  000820  0E44               	movlw	68
  1217  000822  6EDF               	movwf	indf2,c
  1218                           
  1219                           ; BSR set to: 1
  1220  000824  0101               	movlb	1	; () banked
  1221  000826  2B3F               	incf	main@i& (0+255),f,b
  1222  000828                     L2:
  1223                           
  1224                           ; BSR set to: 1
  1225  000828  0E0D               	movlw	13
  1226  00082A  0101               	movlb	1	; () banked
  1227  00082C  653F               	cpfsgt	main@i& (0+255),b
  1228  00082E  D7ED               	goto	l4120
  1229  000830                     l4126:
  1230                           
  1231                           ;main.c: 443: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1232  000830  0101               	movlb	1	; () banked
  1233  000832  0E01               	movlw	high main@msgtype
  1234  000834  0101               	movlb	1	; () banked
  1235  000836  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1236  000838  0101               	movlb	1	; () banked
  1237  00083A  0E3E               	movlw	low main@msgtype
  1238  00083C  0101               	movlb	1	; () banked
  1239  00083E  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1240  000840  0101               	movlb	1	; () banked
  1241  000842  0E01               	movlw	high main@msgbuffer
  1242  000844  0101               	movlb	1	; () banked
  1243  000846  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1244  000848  0101               	movlb	1	; () banked
  1245  00084A  0E24               	movlw	low main@msgbuffer
  1246  00084C  0101               	movlb	1	; () banked
  1247  00084E  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1248  000850  0E0E               	movlw	14
  1249  000852  EC4D  F00D         	call	_ToMainHigh_recvmsg
  1250  000856  0101               	movlb	1	; () banked
  1251  000858  6F3D               	movwf	main@length& (0+255),b
  1252                           
  1253                           ; BSR set to: 1
  1254                           ;main.c: 444: if (length < 0) {
  1255  00085A  0101               	movlb	1	; () banked
  1256  00085C  BF3D               	btfsc	main@length& (0+255),7,b
  1257  00085E  D053               	goto	l4148
  1258  000860  D044               	goto	l4146
  1259  000862                     l4132:
  1260                           
  1261                           ; BSR set to: 1
  1262                           ;main.c: 454: {
  1263                           ;main.c: 455: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1264  000862  0101               	movlb	1	; () banked
  1265  000864  0E01               	movlw	high main@t0thread_data
  1266  000866  0100               	movlb	0	; () banked
  1267  000868  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1268  00086A  0101               	movlb	1	; () banked
  1269  00086C  0E35               	movlw	low main@t0thread_data
  1270  00086E  0100               	movlb	0	; () banked
  1271  000870  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1272  000872  0101               	movlb	1	; () banked
  1273  000874  0100               	movlb	0	; () banked
  1274  000876  C13E  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1275  00087A  0100               	movlb	0	; () banked
  1276  00087C  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1277  00087E  0101               	movlb	1	; () banked
  1278  000880  513D               	movf	main@length& (0+255),w,b
  1279  000882  0100               	movlb	0	; () banked
  1280  000884  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1281  000886  0100               	movlb	0	; () banked
  1282  000888  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1283  00088A  0100               	movlb	0	; () banked
  1284  00088C  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1285  00088E  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1286  000890  0101               	movlb	1	; () banked
  1287  000892  0E01               	movlw	high main@msgbuffer
  1288  000894  0100               	movlb	0	; () banked
  1289  000896  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1290  000898  0101               	movlb	1	; () banked
  1291  00089A  0E24               	movlw	low main@msgbuffer
  1292  00089C  0100               	movlb	0	; () banked
  1293  00089E  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1294  0008A0  EC4C  F00E         	call	_timer0_lthread	;wreg free
  1295                           
  1296                           ;main.c: 456: break;
  1297  0008A4  D030               	goto	l4148
  1298  0008A6                     l4134:
  1299                           
  1300                           ;main.c: 463: {
  1301                           ;main.c: 464: i_like_to_moveit_moveit( (signed char)msgbuffer[1] , (signed char)msgbuffe
      +                          r[2] );
  1302  0008A6  C126  F110         	movff	main@msgbuffer+2,i_like_to_moveit_moveit@right_side_speed
  1303  0008AA  0101               	movlb	1	; () banked
  1304  0008AC  5125               	movf	(main@msgbuffer+1)& (0+255),w,b
  1305  0008AE  EC11  F00A         	call	_i_like_to_moveit_moveit
  1306                           
  1307                           ;main.c: 466: break;
  1308  0008B2  D005               	goto	l134
  1309  0008B4                     l4138:
  1310  0008B4  0101               	movlb	1	; () banked
  1311  0008B6  5124               	movf	main@msgbuffer& (0+255),w,b
  1312                           
  1313                           ; Switch size 1, requested type "space"
  1314                           ; Number of cases is 1, Range of values is 1 to 1
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte            4     3 (average)
  1318                           ;	Chosen strategy is simple_byte
  1319  0008B8  0A01               	xorlw	1	; case 1
  1320  0008BA  B4D8               	btfsc	status,2,c
  1321  0008BC  D7F4               	goto	l4134
  1322  0008BE                     l134:
  1323                           
  1324                           ;main.c: 476: {
  1325                           ;main.c: 479: last_reg_recvd = msgbuffer[0];
  1326  0008BE  C124  F133         	movff	main@msgbuffer,main@last_reg_recvd
  1327                           
  1328                           ;main.c: 480: break;
  1329  0008C2  D021               	goto	l4148
  1330  0008C4                     l135:
  1331                           
  1332                           ; BSR set to: 1
  1333                           ;main.c: 483: {
  1334                           ;main.c: 485: PIR1bits.ADIF = 1;
  1335  0008C4  8C9E               	bsf	3998,6,c	;volatile
  1336                           
  1337                           ; BSR set to: 1
  1338                           ;main.c: 487: FromMainHigh_sendmsg(14,40,(void *) motor_data );
  1339  0008C6  0E28               	movlw	40
  1340  0008C8  0101               	movlb	1	; () banked
  1341  0008CA  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1342  0008CC  0101               	movlb	1	; () banked
  1343  0008CE  0E01               	movlw	high main@motor_data
  1344  0008D0  0101               	movlb	1	; () banked
  1345  0008D2  6F0D               	movwf	(FromMainHigh_sendmsg@data+1)& (0+255),b
  1346  0008D4  0101               	movlb	1	; () banked
  1347  0008D6  0E16               	movlw	low main@motor_data
  1348  0008D8  0101               	movlb	1	; () banked
  1349  0008DA  6F0C               	movwf	FromMainHigh_sendmsg@data& (0+255),b
  1350  0008DC  0E0E               	movlw	14
  1351  0008DE  EC9C  F00D         	call	_FromMainHigh_sendmsg
  1352                           
  1353                           ;main.c: 489: motor_data[1] = 0;
  1354  0008E2  0E00               	movlw	0
  1355  0008E4  0101               	movlb	1	; () banked
  1356  0008E6  6F17               	movwf	(main@motor_data+1)& (0+255),b
  1357                           
  1358                           ;main.c: 491: break;
  1359  0008E8  D00E               	goto	l4148
  1360  0008EA                     l4146:
  1361                           
  1362                           ; BSR set to: 1
  1363  0008EA  0101               	movlb	1	; () banked
  1364  0008EC  513E               	movf	main@msgtype& (0+255),w,b
  1365                           
  1366                           ; Switch size 1, requested type "space"
  1367                           ; Number of cases is 4, Range of values is 10 to 42
  1368                           ; switch strategies available:
  1369                           ; Name         Instructions Cycles
  1370                           ; simple_byte           13     7 (average)
  1371                           ;	Chosen strategy is simple_byte
  1372  0008EE  0A0A               	xorlw	10	; case 10
  1373  0008F0  B4D8               	btfsc	status,2,c
  1374  0008F2  D7B7               	goto	l4132
  1375  0008F4  0A22               	xorlw	34	; case 40
  1376  0008F6  B4D8               	btfsc	status,2,c
  1377  0008F8  D7DD               	goto	l4138
  1378  0008FA  0A01               	xorlw	1	; case 41
  1379  0008FC  B4D8               	btfsc	status,2,c
  1380  0008FE  D7DF               	goto	l134
  1381  000900  0A03               	xorlw	3	; case 42
  1382  000902  B4D8               	btfsc	status,2,c
  1383  000904  D7DF               	goto	l135
  1384  000906                     l4148:
  1385                           
  1386                           ;main.c: 499: }
  1387                           ;main.c: 502: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1388  000906  0101               	movlb	1	; () banked
  1389  000908  0E01               	movlw	high main@msgtype
  1390  00090A  0101               	movlb	1	; () banked
  1391  00090C  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1392  00090E  0101               	movlb	1	; () banked
  1393  000910  0E3E               	movlw	low main@msgtype
  1394  000912  0101               	movlb	1	; () banked
  1395  000914  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1396  000916  0101               	movlb	1	; () banked
  1397  000918  0E01               	movlw	high main@msgbuffer
  1398  00091A  0101               	movlb	1	; () banked
  1399  00091C  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1400  00091E  0101               	movlb	1	; () banked
  1401  000920  0E24               	movlw	low main@msgbuffer
  1402  000922  0101               	movlb	1	; () banked
  1403  000924  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1404  000926  0E0E               	movlw	14
  1405  000928  EC32  F00D         	call	_ToMainLow_recvmsg
  1406  00092C  0101               	movlb	1	; () banked
  1407  00092E  6F3D               	movwf	main@length& (0+255),b
  1408                           
  1409                           ; BSR set to: 1
  1410                           ;main.c: 503: if (length < 0) {
  1411  000930  0101               	movlb	1	; () banked
  1412  000932  BF3D               	btfsc	main@length& (0+255),7,b
  1413  000934  D77D               	goto	l4126
  1414  000936  D047               	goto	l4174
  1415  000938                     l4154:
  1416                           
  1417                           ; BSR set to: 1
  1418                           ;main.c: 522: {
  1419                           ;main.c: 523: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1420  000938  0101               	movlb	1	; () banked
  1421  00093A  0E01               	movlw	high main@t1thread_data
  1422  00093C  0101               	movlb	1	; () banked
  1423  00093E  6F0F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1424  000940  0101               	movlb	1	; () banked
  1425  000942  0E37               	movlw	low main@t1thread_data
  1426  000944  0101               	movlb	1	; () banked
  1427  000946  6F0E               	movwf	timer1_lthread@tptr& (0+255),b
  1428  000948  0101               	movlb	1	; () banked
  1429  00094A  C13E  F110         	movff	main@msgtype,timer1_lthread@msgtype
  1430  00094E  0101               	movlb	1	; () banked
  1431  000950  6B11               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1432  000952  0101               	movlb	1	; () banked
  1433  000954  513D               	movf	main@length& (0+255),w,b
  1434  000956  0101               	movlb	1	; () banked
  1435  000958  6F12               	movwf	timer1_lthread@length& (0+255),b
  1436  00095A  0101               	movlb	1	; () banked
  1437  00095C  6B13               	clrf	(timer1_lthread@length+1)& (0+255),b
  1438  00095E  0101               	movlb	1	; () banked
  1439  000960  BF12               	btfsc	timer1_lthread@length& (0+255),7,b
  1440  000962  0713               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1441  000964  0101               	movlb	1	; () banked
  1442  000966  0E01               	movlw	high main@msgbuffer
  1443  000968  0101               	movlb	1	; () banked
  1444  00096A  6F15               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1445  00096C  0101               	movlb	1	; () banked
  1446  00096E  0E24               	movlw	low main@msgbuffer
  1447  000970  0101               	movlb	1	; () banked
  1448  000972  6F14               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1449  000974  EC98  F00B         	call	_timer1_lthread	;wreg free
  1450                           
  1451                           ;main.c: 524: break;
  1452  000978  D75B               	goto	l4126
  1453  00097A                     l4158:
  1454                           
  1455                           ;main.c: 594: {
  1456                           ;main.c: 595: for(i=2;i<14;i++)
  1457  00097A  0E02               	movlw	2
  1458  00097C  0101               	movlb	1	; () banked
  1459  00097E  6F3F               	movwf	main@i& (0+255),b
  1460  000980  D01A               	goto	L3
  1461  000982                     l4164:
  1462                           
  1463                           ; BSR set to: 1
  1464                           ;main.c: 596: {
  1465                           ;main.c: 597: motor_data[i] = msgbuffer[i];
  1466  000982  0101               	movlb	1	; () banked
  1467  000984  513F               	movf	main@i& (0+255),w,b
  1468  000986  0D01               	mullw	1
  1469  000988  0101               	movlb	1	; () banked
  1470  00098A  0E24               	movlw	low main@msgbuffer
  1471  00098C  24F3               	addwf	prodl,w,c
  1472  00098E  6ED9               	movwf	fsr2l,c
  1473  000990  0101               	movlb	1	; () banked
  1474  000992  0E01               	movlw	high main@msgbuffer
  1475  000994  20F4               	addwfc	prodh,w,c
  1476  000996  6EDA               	movwf	fsr2h,c
  1477  000998  0101               	movlb	1	; () banked
  1478  00099A  513F               	movf	main@i& (0+255),w,b
  1479  00099C  0D01               	mullw	1
  1480  00099E  0101               	movlb	1	; () banked
  1481  0009A0  0E16               	movlw	low main@motor_data
  1482  0009A2  24F3               	addwf	prodl,w,c
  1483  0009A4  6EE1               	movwf	fsr1l,c
  1484  0009A6  0101               	movlb	1	; () banked
  1485  0009A8  0E01               	movlw	high main@motor_data
  1486  0009AA  20F4               	addwfc	prodh,w,c
  1487  0009AC  6EE2               	movwf	fsr1h,c
  1488  0009AE  CFDF FFE7          	movff	indf2,indf1
  1489                           
  1490                           ; BSR set to: 1
  1491  0009B2  0101               	movlb	1	; () banked
  1492  0009B4  2B3F               	incf	main@i& (0+255),f,b
  1493  0009B6                     L3:
  1494                           
  1495                           ; BSR set to: 1
  1496  0009B6  0E0D               	movlw	13
  1497  0009B8  0101               	movlb	1	; () banked
  1498  0009BA  653F               	cpfsgt	main@i& (0+255),b
  1499  0009BC  D7E2               	goto	l4164
  1500                           
  1501                           ; BSR set to: 1
  1502                           ;main.c: 598: }
  1503                           ;main.c: 599: motor_data[1] = 3;
  1504                           
  1505                           ; BSR set to: 1
  1506  0009BE  0E03               	movlw	3
  1507  0009C0  0101               	movlb	1	; () banked
  1508  0009C2  6F17               	movwf	(main@motor_data+1)& (0+255),b
  1509                           
  1510                           ;main.c: 600: break;
  1511  0009C4  D735               	goto	l4126
  1512  0009C6                     l4174:
  1513                           
  1514                           ; BSR set to: 1
  1515  0009C6  0101               	movlb	1	; () banked
  1516  0009C8  513E               	movf	main@msgtype& (0+255),w,b
  1517                           
  1518                           ; Switch size 1, requested type "space"
  1519                           ; Number of cases is 9, Range of values is 11 to 47
  1520                           ; switch strategies available:
  1521                           ; Name         Instructions Cycles
  1522                           ; simple_byte           28    15 (average)
  1523                           ;	Chosen strategy is simple_byte
  1524  0009CA  0A0B               	xorlw	11	; case 11
  1525  0009CC  B4D8               	btfsc	status,2,c
  1526  0009CE  D7B4               	goto	l4154
  1527  0009D0  0A15               	xorlw	21	; case 30
  1528  0009D2  B4D8               	btfsc	status,2,c
  1529  0009D4  D72D               	goto	l4126
  1530  0009D6  0A01               	xorlw	1	; case 31
  1531  0009D8  B4D8               	btfsc	status,2,c
  1532  0009DA  D72A               	goto	l4126
  1533  0009DC  0A3F               	xorlw	63	; case 32
  1534  0009DE  B4D8               	btfsc	status,2,c
  1535  0009E0  D727               	goto	l4126
  1536  0009E2  0A01               	xorlw	1	; case 33
  1537  0009E4  B4D8               	btfsc	status,2,c
  1538  0009E6  D724               	goto	l4126
  1539  0009E8  0A03               	xorlw	3	; case 34
  1540  0009EA  B4D8               	btfsc	status,2,c
  1541  0009EC  D721               	goto	l4126
  1542  0009EE  0A01               	xorlw	1	; case 35
  1543  0009F0  B4D8               	btfsc	status,2,c
  1544  0009F2  D71E               	goto	l4126
  1545  0009F4  0A07               	xorlw	7	; case 36
  1546  0009F6  B4D8               	btfsc	status,2,c
  1547  0009F8  D71B               	goto	l4126
  1548  0009FA  0A0B               	xorlw	11	; case 47
  1549  0009FC  B4D8               	btfsc	status,2,c
  1550  0009FE  D7BD               	goto	l4158
  1551  000A00  D717               	goto	l4126
  1552  000A02                     __end_of_main:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           prodh	equ	0xFF4
  1559                           prodl	equ	0xFF3
  1560                           intcon	equ	0xFF2
  1561                           intcon2	equ	0xFF1
  1562                           postinc0	equ	0xFEE
  1563                           wreg	equ	0xFE8
  1564                           indf1	equ	0xFE7
  1565                           fsr1h	equ	0xFE2
  1566                           fsr1l	equ	0xFE1
  1567                           indf2	equ	0xFDF
  1568                           fsr2h	equ	0xFDA
  1569                           fsr2l	equ	0xFD9
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function _uart_configure *****************
  1573 ;; Defined at:
  1574 ;;		line 22 in file "../src/my_uart.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;		None               void
  1581 ;; Registers used:
  1582 ;;		wreg, status,2
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1588 ;;      Params:         0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:   10
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text1
  1603  001C36                     __ptext1:
  1604                           	opt stack 0
  1605  001C36                     _uart_configure:
  1606                           	opt stack 20
  1607                           
  1608                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1609                           
  1610                           ; BSR set to: 1
  1611                           ;incstack = 0
  1612  001C36  8E94               	bsf	3988,7,c	;volatile
  1613                           
  1614                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1615  001C38  9C94               	bcf	3988,6,c	;volatile
  1616                           
  1617                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1618  001C3A  86B8               	bsf	4024,3,c	;volatile
  1619                           
  1620                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1621  001C3C  84AC               	bsf	4012,2,c	;volatile
  1622                           
  1623                           ;my_uart.c: 36: SPBRGH = 0x04;
  1624  001C3E  0E04               	movlw	4
  1625  001C40  6EB0               	movwf	4016,c	;volatile
  1626                           
  1627                           ;my_uart.c: 37: SPBRG = 0xe1;
  1628  001C42  0EE1               	movlw	225
  1629  001C44  6EAF               	movwf	4015,c	;volatile
  1630                           
  1631                           ;my_uart.c: 41: TXSTA1bits.SYNC = 0;
  1632  001C46  98AC               	bcf	4012,4,c	;volatile
  1633                           
  1634                           ;my_uart.c: 42: RCSTA1bits.SPEN = 1;
  1635  001C48  8EAB               	bsf	4011,7,c	;volatile
  1636                           
  1637                           ;my_uart.c: 45: IPR1bits.TX1IP = 0;
  1638  001C4A  989F               	bcf	3999,4,c	;volatile
  1639                           
  1640                           ;my_uart.c: 47: PIE1bits.TX1IE = 0;
  1641  001C4C  989D               	bcf	3997,4,c	;volatile
  1642                           
  1643                           ;my_uart.c: 48: PIE1bits.RC1IE = 1;
  1644  001C4E  8A9D               	bsf	3997,5,c	;volatile
  1645                           
  1646                           ;my_uart.c: 50: TXSTA1bits.TXEN = 1;
  1647  001C50  8AAC               	bsf	4012,5,c	;volatile
  1648                           
  1649                           ;my_uart.c: 51: RCSTA1bits.CREN = 1;
  1650  001C52  88AB               	bsf	4011,4,c	;volatile
  1651  001C54  0012               	return	
  1652  001C56                     __end_of_uart_configure:
  1653                           	opt stack 0
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           prodh	equ	0xFF4
  1659                           prodl	equ	0xFF3
  1660                           intcon	equ	0xFF2
  1661                           intcon2	equ	0xFF1
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           indf1	equ	0xFE7
  1665                           fsr1h	equ	0xFE2
  1666                           fsr1l	equ	0xFE1
  1667                           indf2	equ	0xFDF
  1668                           fsr2h	equ	0xFDA
  1669                           fsr2l	equ	0xFD9
  1670                           status	equ	0xFD8
  1671                           
  1672 ;; *************** function _timer1_lthread *****************
  1673 ;; Defined at:
  1674 ;;		line 15 in file "../src/timer1_thread.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1677 ;;		 -> main@t1thread_data(6), 
  1678 ;;  msgtype         2   16[BANK1 ] int 
  1679 ;;  length          2   18[BANK1 ] int 
  1680 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1681 ;;		 -> main@msgbuffer(15), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  retval          1   68[BANK0 ] char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2   14[BANK1 ] int 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1693 ;;      Params:         0       0       8       0       0
  1694 ;;      Locals:         0       1       0       0       0
  1695 ;;      Temps:          0       0       0       0       0
  1696 ;;      Totals:         0       1       8       0       0
  1697 ;;Total ram usage:        9 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:   13
  1700 ;; This function calls:
  1701 ;;		_FromMainHigh_sendmsg
  1702 ;;		___lwmod
  1703 ;;		_blink0
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text2
  1710  001730                     __ptext2:
  1711                           	opt stack 0
  1712  001730                     _timer1_lthread:
  1713                           	opt stack 17
  1714                           
  1715                           ;timer1_thread.c: 16: signed char retval;
  1716                           ;timer1_thread.c: 18: blink0();
  1717                           
  1718                           ;incstack = 0
  1719  001730  EC77  F00E         	call	_blink0	;wreg free
  1720                           
  1721                           ;timer1_thread.c: 22: tptr->msgcount++;
  1722  001734  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1723  001738  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1724  00173C  2ADE               	incf	postinc2,f,c
  1725  00173E  0E00               	movlw	0
  1726  001740  22DD               	addwfc	postdec2,f,c
  1727                           
  1728                           ;timer1_thread.c: 25: if ((tptr->msgcount % 10) == 9) {
  1729  001742  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1730  001746  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1731  00174A  0100               	movlb	0	; () banked
  1732  00174C  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1733  001750  0100               	movlb	0	; () banked
  1734  001752  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1735  001756  0E00               	movlw	0
  1736  001758  0100               	movlb	0	; () banked
  1737  00175A  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1738  00175C  0E0A               	movlw	10
  1739  00175E  0100               	movlb	0	; () banked
  1740  001760  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1741  001762  ECC9  F00B         	call	___lwmod	;wreg free
  1742  001766  0100               	movlb	0	; () banked
  1743  001768  51B8               	movf	?___lwmod& (0+255),w,b
  1744  00176A  0A09               	xorlw	9
  1745  00176C  0100               	movlb	0	; () banked
  1746  00176E  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1747  001770  A4D8               	btfss	status,2,c
  1748  001772  0012               	return	
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;timer1_thread.c: 26: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1752  001774  0E14               	movlw	20
  1753  001776  0101               	movlb	1	; () banked
  1754  001778  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1755  00177A  0101               	movlb	1	; () banked
  1756  00177C  C10F  F10D         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1757  001780  0101               	movlb	1	; () banked
  1758  001782  C10E  F10C         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1759  001786  0E02               	movlw	2
  1760  001788  EC9C  F00D         	call	_FromMainHigh_sendmsg
  1761  00178C  0100               	movlb	0	; () banked
  1762  00178E  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1763  001790  0012               	return	
  1764  001792                     __end_of_timer1_lthread:
  1765                           	opt stack 0
  1766                           tblptru	equ	0xFF8
  1767                           tblptrh	equ	0xFF7
  1768                           tblptrl	equ	0xFF6
  1769                           tablat	equ	0xFF5
  1770                           prodh	equ	0xFF4
  1771                           prodl	equ	0xFF3
  1772                           intcon	equ	0xFF2
  1773                           intcon2	equ	0xFF1
  1774                           postinc0	equ	0xFEE
  1775                           wreg	equ	0xFE8
  1776                           indf1	equ	0xFE7
  1777                           fsr1h	equ	0xFE2
  1778                           fsr1l	equ	0xFE1
  1779                           indf2	equ	0xFDF
  1780                           postinc2	equ	0xFDE
  1781                           postdec2	equ	0xFDD
  1782                           fsr2h	equ	0xFDA
  1783                           fsr2l	equ	0xFD9
  1784                           status	equ	0xFD8
  1785                           
  1786 ;; *************** function _blink0 *****************
  1787 ;; Defined at:
  1788 ;;		line 46 in file "../src/debug.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;		None               void
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1802 ;;      Params:         0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0
  1805 ;;      Totals:         0       0       0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:   10
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_timer1_lthread
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text3
  1817  001CEE                     __ptext3:
  1818                           	opt stack 0
  1819  001CEE                     _blink0:
  1820                           	opt stack 19
  1821                           
  1822                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;incstack = 0
  1826  001CEE  708A               	btg	3978,0,c	;volatile
  1827  001CF0  0012               	return	
  1828  001CF2                     __end_of_blink0:
  1829                           	opt stack 0
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           prodh	equ	0xFF4
  1835                           prodl	equ	0xFF3
  1836                           intcon	equ	0xFF2
  1837                           intcon2	equ	0xFF1
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           indf1	equ	0xFE7
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           indf2	equ	0xFDF
  1844                           postinc2	equ	0xFDE
  1845                           postdec2	equ	0xFDD
  1846                           fsr2h	equ	0xFDA
  1847                           fsr2l	equ	0xFD9
  1848                           status	equ	0xFD8
  1849                           
  1850 ;; *************** function ___lwmod *****************
  1851 ;; Defined at:
  1852 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  dividend        2   56[BANK0 ] unsigned int 
  1855 ;;  divisor         2   58[BANK0 ] unsigned int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  counter         1   60[BANK0 ] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   56[BANK0 ] unsigned int 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1867 ;;      Params:         0       4       0       0       0
  1868 ;;      Locals:         0       1       0       0       0
  1869 ;;      Temps:          0       0       0       0       0
  1870 ;;      Totals:         0       5       0       0       0
  1871 ;;Total ram usage:        5 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:   10
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_timer1_lthread
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text4
  1882  001792                     __ptext4:
  1883                           	opt stack 0
  1884  001792                     ___lwmod:
  1885                           	opt stack 19
  1886                           
  1887                           ;incstack = 0
  1888  001792  0100               	movlb	0	; () banked
  1889  001794  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1890  001796  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  1891  001798  B4D8               	btfsc	status,2,c
  1892  00179A  D026               	goto	l1093
  1893                           
  1894                           ; BSR set to: 0
  1895  00179C  0E01               	movlw	1
  1896  00179E  0100               	movlb	0	; () banked
  1897  0017A0  6FBC               	movwf	___lwmod@counter& (0+255),b
  1898  0017A2  D006               	goto	l3640
  1899  0017A4                     l3638:
  1900                           
  1901                           ; BSR set to: 0
  1902  0017A4  0100               	movlb	0	; () banked
  1903  0017A6  90D8               	bcf	status,0,c
  1904  0017A8  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  1905  0017AA  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1906  0017AC  0100               	movlb	0	; () banked
  1907  0017AE  2BBC               	incf	___lwmod@counter& (0+255),f,b
  1908  0017B0                     l3640:
  1909                           
  1910                           ; BSR set to: 0
  1911  0017B0  0100               	movlb	0	; () banked
  1912  0017B2  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1913  0017B4  D7F7               	goto	l3638
  1914  0017B6                     l3642:
  1915                           
  1916                           ; BSR set to: 0
  1917  0017B6  0100               	movlb	0	; () banked
  1918  0017B8  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1919  0017BA  0100               	movlb	0	; () banked
  1920  0017BC  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  1921  0017BE  0100               	movlb	0	; () banked
  1922  0017C0  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1923  0017C2  0100               	movlb	0	; () banked
  1924  0017C4  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1925  0017C6  A0D8               	btfss	status,0,c
  1926  0017C8  D008               	goto	l3646
  1927                           
  1928                           ; BSR set to: 0
  1929  0017CA  0100               	movlb	0	; () banked
  1930  0017CC  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1931  0017CE  0100               	movlb	0	; () banked
  1932  0017D0  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  1933  0017D2  0100               	movlb	0	; () banked
  1934  0017D4  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1935  0017D6  0100               	movlb	0	; () banked
  1936  0017D8  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1937  0017DA                     l3646:
  1938                           
  1939                           ; BSR set to: 0
  1940  0017DA  0100               	movlb	0	; () banked
  1941  0017DC  90D8               	bcf	status,0,c
  1942  0017DE  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1943  0017E0  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  1944                           
  1945                           ; BSR set to: 0
  1946  0017E2  0100               	movlb	0	; () banked
  1947  0017E4  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  1948  0017E6  D7E7               	goto	l3642
  1949  0017E8                     l1093:
  1950                           
  1951                           ; BSR set to: 0
  1952  0017E8  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  1953  0017EC  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  1954                           
  1955                           ; BSR set to: 0
  1956  0017F0  0012               	return	
  1957  0017F2                     __end_of___lwmod:
  1958                           	opt stack 0
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           prodh	equ	0xFF4
  1964                           prodl	equ	0xFF3
  1965                           intcon	equ	0xFF2
  1966                           intcon2	equ	0xFF1
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           indf1	equ	0xFE7
  1970                           fsr1h	equ	0xFE2
  1971                           fsr1l	equ	0xFE1
  1972                           indf2	equ	0xFDF
  1973                           postinc2	equ	0xFDE
  1974                           postdec2	equ	0xFDD
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _FromMainHigh_sendmsg *****************
  1980 ;; Defined at:
  1981 ;;		line 174 in file "../src/messages.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  length          1    wreg     unsigned char 
  1984 ;;  msgtype         1   11[BANK1 ] unsigned char 
  1985 ;;  data            2   12[BANK1 ] PTR void 
  1986 ;;		 -> main@motor_data(14), main@t1thread_data(6), 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  length          1   67[BANK0 ] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      char 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1998 ;;      Params:         0       0       3       0       0
  1999 ;;      Locals:         0       1       0       0       0
  2000 ;;      Temps:          0       0       0       0       0
  2001 ;;      Totals:         0       1       3       0       0
  2002 ;;Total ram usage:        4 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:   12
  2005 ;; This function calls:
  2006 ;;		_send_msg
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;;		_timer1_lthread
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text5
  2014  001B38                     __ptext5:
  2015                           	opt stack 0
  2016  001B38                     _FromMainHigh_sendmsg:
  2017                           	opt stack 17
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;incstack = 0
  2021                           ;FromMainHigh_sendmsg@length stored from wreg
  2022  001B38  0100               	movlb	0	; () banked
  2023  001B3A  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2027  001B3C  0103               	movlb	3	; () banked
  2028  001B3E  0E03               	movlw	high _FromMainHigh_MQ
  2029  001B40  0101               	movlb	1	; () banked
  2030  001B42  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2031  001B44  0103               	movlb	3	; () banked
  2032  001B46  0E00               	movlw	low _FromMainHigh_MQ
  2033  001B48  0101               	movlb	1	; () banked
  2034  001B4A  6F00               	movwf	send_msg@qptr& (0+255),b
  2035  001B4C  C0C3  F102         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2036  001B50  C10B  F103         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2037  001B54  0101               	movlb	1	; () banked
  2038  001B56  C10D  F105         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2039  001B5A  0101               	movlb	1	; () banked
  2040  001B5C  C10C  F104         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2041  001B60  EC06  F007         	call	_send_msg	;wreg free
  2042  001B64  0012               	return	
  2043  001B66                     __end_of_FromMainHigh_sendmsg:
  2044                           	opt stack 0
  2045                           tblptru	equ	0xFF8
  2046                           tblptrh	equ	0xFF7
  2047                           tblptrl	equ	0xFF6
  2048                           tablat	equ	0xFF5
  2049                           prodh	equ	0xFF4
  2050                           prodl	equ	0xFF3
  2051                           intcon	equ	0xFF2
  2052                           intcon2	equ	0xFF1
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           indf1	equ	0xFE7
  2056                           fsr1h	equ	0xFE2
  2057                           fsr1l	equ	0xFE1
  2058                           indf2	equ	0xFDF
  2059                           postinc2	equ	0xFDE
  2060                           postdec2	equ	0xFDD
  2061                           fsr2h	equ	0xFDA
  2062                           fsr2l	equ	0xFD9
  2063                           status	equ	0xFD8
  2064                           
  2065 ;; *************** function _timer0_lthread *****************
  2066 ;; Defined at:
  2067 ;;		line 9 in file "../src/timer0_thread.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2070 ;;		 -> main@t0thread_data(2), 
  2071 ;;  msgtype         2   58[BANK0 ] int 
  2072 ;;  length          2   60[BANK0 ] int 
  2073 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2074 ;;		 -> main@msgbuffer(15), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  2077 ;;		 -> main@msgbuffer(15), 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  2   56[BANK0 ] int 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2087 ;;      Params:         0       8       0       0       0
  2088 ;;      Locals:         0       2       0       0       0
  2089 ;;      Temps:          0       0       0       0       0
  2090 ;;      Totals:         0      10       0       0       0
  2091 ;;Total ram usage:       10 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:   10
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text6
  2102  001C98                     __ptext6:
  2103                           	opt stack 0
  2104  001C98                     _timer0_lthread:
  2105                           	opt stack 20
  2106                           
  2107                           ;timer0_thread.c: 10: unsigned int *msgval;
  2108                           ;timer0_thread.c: 14: msgval = (unsigned int *) msgbuffer;
  2109                           
  2110                           ;incstack = 0
  2111  001C98  0100               	movlb	0	; () banked
  2112  001C9A  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2113  001C9E  0100               	movlb	0	; () banked
  2114  001CA0  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2115                           
  2116                           ; BSR set to: 0
  2117  001CA4  0012               	return	
  2118  001CA6                     __end_of_timer0_lthread:
  2119                           	opt stack 0
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           prodh	equ	0xFF4
  2125                           prodl	equ	0xFF3
  2126                           intcon	equ	0xFF2
  2127                           intcon2	equ	0xFF1
  2128                           postinc0	equ	0xFEE
  2129                           wreg	equ	0xFE8
  2130                           indf1	equ	0xFE7
  2131                           fsr1h	equ	0xFE2
  2132                           fsr1l	equ	0xFE1
  2133                           indf2	equ	0xFDF
  2134                           postinc2	equ	0xFDE
  2135                           postdec2	equ	0xFDD
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140 ;; *************** function _init_timer1_lthread *****************
  2141 ;; Defined at:
  2142 ;;		line 7 in file "../src/timer1_thread.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2145 ;;		 -> main@t1thread_data(6), 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;		None               void
  2150 ;; Registers used:
  2151 ;;		wreg, fsr2l, fsr2h
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2157 ;;      Params:         0       2       0       0       0
  2158 ;;      Locals:         0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0
  2160 ;;      Totals:         0       2       0       0       0
  2161 ;;Total ram usage:        2 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:   10
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text7
  2172  001C76                     __ptext7:
  2173                           	opt stack 0
  2174  001C76                     _init_timer1_lthread:
  2175                           	opt stack 20
  2176                           
  2177                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;incstack = 0
  2181  001C76  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2182  001C7A  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2183  001C7E  0E00               	movlw	0
  2184  001C80  6EDE               	movwf	postinc2,c
  2185  001C82  0E00               	movlw	0
  2186  001C84  6EDD               	movwf	postdec2,c
  2187  001C86  0012               	return	
  2188  001C88                     __end_of_init_timer1_lthread:
  2189                           	opt stack 0
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           prodh	equ	0xFF4
  2195                           prodl	equ	0xFF3
  2196                           intcon	equ	0xFF2
  2197                           intcon2	equ	0xFF1
  2198                           postinc0	equ	0xFEE
  2199                           wreg	equ	0xFE8
  2200                           indf1	equ	0xFE7
  2201                           fsr1h	equ	0xFE2
  2202                           fsr1l	equ	0xFE1
  2203                           indf2	equ	0xFDF
  2204                           postinc2	equ	0xFDE
  2205                           postdec2	equ	0xFDD
  2206                           fsr2h	equ	0xFDA
  2207                           fsr2l	equ	0xFD9
  2208                           status	equ	0xFD8
  2209                           
  2210 ;; *************** function _init_queues *****************
  2211 ;; Defined at:
  2212 ;;		line 194 in file "../src/messages.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;		None               void
  2219 ;; Registers used:
  2220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:   11
  2233 ;; This function calls:
  2234 ;;		_init_queue
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text8
  2241  001852                     __ptext8:
  2242                           	opt stack 0
  2243  001852                     _init_queues:
  2244                           	opt stack 19
  2245                           
  2246                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2247                           
  2248                           ;incstack = 0
  2249  001852  0E00               	movlw	0
  2250  001854  0100               	movlb	0	; () banked
  2251  001856  6FC7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2255  001858  0101               	movlb	1	; () banked
  2256  00185A  0E01               	movlw	high _ToMainLow_MQ
  2257  00185C  0100               	movlb	0	; () banked
  2258  00185E  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2259  001860  0101               	movlb	1	; () banked
  2260  001862  0E66               	movlw	low _ToMainLow_MQ
  2261  001864  0100               	movlb	0	; () banked
  2262  001866  6FB8               	movwf	init_queue@qptr& (0+255),b
  2263  001868  EC66  F00B         	call	_init_queue	;wreg free
  2264                           
  2265                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2266  00186C  0102               	movlb	2	; () banked
  2267  00186E  0E02               	movlw	high _ToMainHigh_MQ
  2268  001870  0100               	movlb	0	; () banked
  2269  001872  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2270  001874  0102               	movlb	2	; () banked
  2271  001876  0E57               	movlw	low _ToMainHigh_MQ
  2272  001878  0100               	movlb	0	; () banked
  2273  00187A  6FB8               	movwf	init_queue@qptr& (0+255),b
  2274  00187C  EC66  F00B         	call	_init_queue	;wreg free
  2275                           
  2276                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2277  001880  0102               	movlb	2	; () banked
  2278  001882  0E02               	movlw	high _FromMainLow_MQ
  2279  001884  0100               	movlb	0	; () banked
  2280  001886  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2281  001888  0102               	movlb	2	; () banked
  2282  00188A  0E00               	movlw	low _FromMainLow_MQ
  2283  00188C  0100               	movlb	0	; () banked
  2284  00188E  6FB8               	movwf	init_queue@qptr& (0+255),b
  2285  001890  EC66  F00B         	call	_init_queue	;wreg free
  2286                           
  2287                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2288  001894  0103               	movlb	3	; () banked
  2289  001896  0E03               	movlw	high _FromMainHigh_MQ
  2290  001898  0100               	movlb	0	; () banked
  2291  00189A  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2292  00189C  0103               	movlb	3	; () banked
  2293  00189E  0E00               	movlw	low _FromMainHigh_MQ
  2294  0018A0  0100               	movlb	0	; () banked
  2295  0018A2  6FB8               	movwf	init_queue@qptr& (0+255),b
  2296  0018A4  EC66  F00B         	call	_init_queue	;wreg free
  2297  0018A8  0012               	return	
  2298  0018AA                     __end_of_init_queues:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           intcon	equ	0xFF2
  2307                           intcon2	equ	0xFF1
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           indf1	equ	0xFE7
  2311                           fsr1h	equ	0xFE2
  2312                           fsr1l	equ	0xFE1
  2313                           indf2	equ	0xFDF
  2314                           postinc2	equ	0xFDE
  2315                           postdec2	equ	0xFDD
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _init_queue *****************
  2321 ;; Defined at:
  2322 ;;		line 14 in file "../src/messages.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2325 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  i               1   58[BANK0 ] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;		None               void
  2330 ;; Registers used:
  2331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2337 ;;      Params:         0       2       0       0       0
  2338 ;;      Locals:         0       1       0       0       0
  2339 ;;      Temps:          0       0       0       0       0
  2340 ;;      Totals:         0       3       0       0       0
  2341 ;;Total ram usage:        3 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:   10
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_init_queues
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text9
  2352  0016CC                     __ptext9:
  2353                           	opt stack 0
  2354  0016CC                     _init_queue:
  2355                           	opt stack 19
  2356                           
  2357                           ;messages.c: 15: unsigned char i;
  2358                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2359                           
  2360                           ;incstack = 0
  2361  0016CC  0100               	movlb	0	; () banked
  2362  0016CE  EE20 F055          	lfsr	2,85
  2363  0016D2  0100               	movlb	0	; () banked
  2364  0016D4  51B8               	movf	init_queue@qptr& (0+255),w,b
  2365  0016D6  26D9               	addwf	fsr2l,f,c
  2366  0016D8  0100               	movlb	0	; () banked
  2367  0016DA  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2368  0016DC  22DA               	addwfc	fsr2h,f,c
  2369  0016DE  0E00               	movlw	0
  2370  0016E0  6EDF               	movwf	indf2,c
  2371                           
  2372                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2373  0016E2  0100               	movlb	0	; () banked
  2374  0016E4  EE20 F056          	lfsr	2,86
  2375  0016E8  0100               	movlb	0	; () banked
  2376  0016EA  51B8               	movf	init_queue@qptr& (0+255),w,b
  2377  0016EC  26D9               	addwf	fsr2l,f,c
  2378  0016EE  0100               	movlb	0	; () banked
  2379  0016F0  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2380  0016F2  22DA               	addwfc	fsr2h,f,c
  2381  0016F4  0E00               	movlw	0
  2382  0016F6  6EDF               	movwf	indf2,c
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2386  0016F8  0E00               	movlw	0
  2387  0016FA  0100               	movlb	0	; () banked
  2388  0016FC  6FBA               	movwf	init_queue@i& (0+255),b
  2389                           
  2390                           ; BSR set to: 0
  2391  0016FE  0E04               	movlw	4
  2392  001700  0100               	movlb	0	; () banked
  2393  001702  65BA               	cpfsgt	init_queue@i& (0+255),b
  2394  001704  D001               	goto	l2612
  2395  001706  0012               	return	
  2396  001708                     l2612:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;messages.c: 20: qptr->queue[i].full = 0;
  2400  001708  0100               	movlb	0	; () banked
  2401  00170A  51BA               	movf	init_queue@i& (0+255),w,b
  2402  00170C  0D11               	mullw	17
  2403  00170E  50F3               	movf	prodl,w,c
  2404  001710  0100               	movlb	0	; () banked
  2405  001712  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2406  001714  6ED9               	movwf	fsr2l,c
  2407  001716  50F4               	movf	prodh,w,c
  2408  001718  0100               	movlb	0	; () banked
  2409  00171A  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2410  00171C  6EDA               	movwf	fsr2h,c
  2411  00171E  0E00               	movlw	0
  2412  001720  6EDF               	movwf	indf2,c
  2413                           
  2414                           ; BSR set to: 0
  2415  001722  0100               	movlb	0	; () banked
  2416  001724  2BBA               	incf	init_queue@i& (0+255),f,b
  2417                           
  2418                           ; BSR set to: 0
  2419  001726  0E04               	movlw	4
  2420  001728  0100               	movlb	0	; () banked
  2421  00172A  65BA               	cpfsgt	init_queue@i& (0+255),b
  2422  00172C  D7ED               	goto	l2612
  2423  00172E  0012               	return	
  2424  001730                     __end_of_init_queue:
  2425                           	opt stack 0
  2426                           tblptru	equ	0xFF8
  2427                           tblptrh	equ	0xFF7
  2428                           tblptrl	equ	0xFF6
  2429                           tablat	equ	0xFF5
  2430                           prodh	equ	0xFF4
  2431                           prodl	equ	0xFF3
  2432                           intcon	equ	0xFF2
  2433                           intcon2	equ	0xFF1
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           indf1	equ	0xFE7
  2437                           fsr1h	equ	0xFE2
  2438                           fsr1l	equ	0xFE1
  2439                           indf2	equ	0xFDF
  2440                           postinc2	equ	0xFDE
  2441                           postdec2	equ	0xFDD
  2442                           fsr2h	equ	0xFDA
  2443                           fsr2l	equ	0xFD9
  2444                           status	equ	0xFD8
  2445                           
  2446 ;; *************** function _init_i2c *****************
  2447 ;; Defined at:
  2448 ;;		line 367 in file "../src/my_i2c.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2451 ;;		 -> main@ic(38), 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;		None               void
  2456 ;; Registers used:
  2457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2463 ;;      Params:         0       2       0       0       0
  2464 ;;      Locals:         0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0
  2466 ;;      Totals:         0       2       0       0       0
  2467 ;;Total ram usage:        2 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:   10
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text10
  2478  001666                     __ptext10:
  2479                           	opt stack 0
  2480  001666                     _init_i2c:
  2481                           	opt stack 20
  2482                           
  2483                           ;my_i2c.c: 368: ic_ptr = ic;
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;incstack = 0
  2487  001666  0100               	movlb	0	; () banked
  2488  001668  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2489  00166C  0100               	movlb	0	; () banked
  2490  00166E  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;my_i2c.c: 369: ic_ptr->buflen = 0;
  2494  001672  0100               	movlb	0	; () banked
  2495  001674  EE20 F00E          	lfsr	2,14
  2496  001678  0100               	movlb	0	; () banked
  2497  00167A  51C5               	movf	_ic_ptr& (0+255),w,b
  2498  00167C  26D9               	addwf	fsr2l,f,c
  2499  00167E  0100               	movlb	0	; () banked
  2500  001680  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2501  001682  22DA               	addwfc	fsr2h,f,c
  2502  001684  0E00               	movlw	0
  2503  001686  6EDF               	movwf	indf2,c
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;my_i2c.c: 370: ic_ptr->event_count = 0;
  2507  001688  0100               	movlb	0	; () banked
  2508  00168A  EE20 F020          	lfsr	2,32
  2509  00168E  0100               	movlb	0	; () banked
  2510  001690  51C5               	movf	_ic_ptr& (0+255),w,b
  2511  001692  26D9               	addwf	fsr2l,f,c
  2512  001694  0100               	movlb	0	; () banked
  2513  001696  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2514  001698  22DA               	addwfc	fsr2h,f,c
  2515  00169A  0E00               	movlw	0
  2516  00169C  6EDF               	movwf	indf2,c
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  2520  00169E  0100               	movlb	0	; () banked
  2521  0016A0  EE20 F021          	lfsr	2,33
  2522  0016A4  0100               	movlb	0	; () banked
  2523  0016A6  51C5               	movf	_ic_ptr& (0+255),w,b
  2524  0016A8  26D9               	addwf	fsr2l,f,c
  2525  0016AA  0100               	movlb	0	; () banked
  2526  0016AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2527  0016AE  22DA               	addwfc	fsr2h,f,c
  2528  0016B0  0E05               	movlw	5
  2529  0016B2  6EDF               	movwf	indf2,c
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;my_i2c.c: 372: ic_ptr->error_count = 0;
  2533  0016B4  0100               	movlb	0	; () banked
  2534  0016B6  EE20 F023          	lfsr	2,35
  2535  0016BA  0100               	movlb	0	; () banked
  2536  0016BC  51C5               	movf	_ic_ptr& (0+255),w,b
  2537  0016BE  26D9               	addwf	fsr2l,f,c
  2538  0016C0  0100               	movlb	0	; () banked
  2539  0016C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2540  0016C4  22DA               	addwfc	fsr2h,f,c
  2541  0016C6  0E00               	movlw	0
  2542  0016C8  6EDF               	movwf	indf2,c
  2543                           
  2544                           ; BSR set to: 0
  2545  0016CA  0012               	return	
  2546  0016CC                     __end_of_init_i2c:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           intcon	equ	0xFF2
  2555                           intcon2	equ	0xFF1
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           indf1	equ	0xFE7
  2559                           fsr1h	equ	0xFE2
  2560                           fsr1l	equ	0xFE1
  2561                           indf2	equ	0xFDF
  2562                           postinc2	equ	0xFDE
  2563                           postdec2	equ	0xFDD
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _i_like_to_moveit_moveit *****************
  2569 ;; Defined at:
  2570 ;;		line 3 in file "C:/Users/alex/Documents/VI/School/Embedded/code/pic_motor/src/src/motor.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  left_side_sp    1    wreg     char 
  2573 ;;  right_side_s    1   16[BANK1 ] char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  left_side_sp    1   17[BANK1 ] char 
  2576 ;;  moves           4   18[BANK1 ] unsigned char [4]
  2577 ;; Return value:  Size  Location     Type
  2578 ;;		None               void
  2579 ;; Registers used:
  2580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2586 ;;      Params:         0       0       1       0       0
  2587 ;;      Locals:         0       0       5       0       0
  2588 ;;      Temps:          0       0       0       0       0
  2589 ;;      Totals:         0       0       6       0       0
  2590 ;;Total ram usage:        6 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:   14
  2593 ;; This function calls:
  2594 ;;		_send_uart_message
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text11
  2601  001422                     __ptext11:
  2602                           	opt stack 0
  2603  001422                     _i_like_to_moveit_moveit:
  2604                           	opt stack 16
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;incstack = 0
  2608                           ;i_like_to_moveit_moveit@left_side_speed stored from wreg
  2609  001422  0101               	movlb	1	; () banked
  2610  001424  6F11               	movwf	i_like_to_moveit_moveit@left_side_speed& (0+255),b
  2611                           
  2612                           ; BSR set to: 1
  2613                           ;motor.c: 5: unsigned char moves[4];
  2614                           ;motor.c: 11: moves[0] = 128;
  2615  001426  0E80               	movlw	128
  2616  001428  0101               	movlb	1	; () banked
  2617  00142A  6F12               	movwf	i_like_to_moveit_moveit@moves& (0+255),b
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;motor.c: 13: if( left_side_speed >=0 )
  2621  00142C  0101               	movlb	1	; () banked
  2622  00142E  BF11               	btfsc	i_like_to_moveit_moveit@left_side_speed& (0+255),7,b
  2623  001430  D006               	goto	l3970
  2624                           
  2625                           ; BSR set to: 1
  2626                           ;motor.c: 14: {
  2627                           ;motor.c: 15: moves[1] = 0;
  2628  001432  0E00               	movlw	0
  2629  001434  0101               	movlb	1	; () banked
  2630  001436  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2631                           
  2632                           ; BSR set to: 1
  2633                           ;motor.c: 16: moves[2] = left_side_speed;
  2634  001438  C111  F114         	movff	i_like_to_moveit_moveit@left_side_speed,i_like_to_moveit_moveit@moves+2
  2635                           
  2636                           ;motor.c: 17: }
  2637  00143C  D010               	goto	l533
  2638  00143E                     l3970:
  2639                           
  2640                           ; BSR set to: 1
  2641                           ;motor.c: 18: else
  2642                           ;motor.c: 19: {
  2643                           ;motor.c: 20: moves[1] = 1;
  2644  00143E  0E01               	movlw	1
  2645  001440  0101               	movlb	1	; () banked
  2646  001442  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;motor.c: 22: if(left_side_speed == -128)
  2650  001444  0101               	movlb	1	; () banked
  2651  001446  5111               	movf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2652  001448  0A80               	xorlw	128
  2653  00144A  A4D8               	btfss	status,2,c
  2654  00144C  D003               	goto	l3976
  2655                           
  2656                           ; BSR set to: 1
  2657                           ;motor.c: 23: {
  2658                           ;motor.c: 24: moves[2] = (unsigned char)((-left_side_speed)-1);
  2659  00144E  0101               	movlb	1	; () banked
  2660  001450  2911               	incf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2661  001452  D002               	goto	L4
  2662  001454                     l3976:
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;motor.c: 26: else
  2666                           ;motor.c: 27: {
  2667                           ;motor.c: 28: moves[2] = (unsigned char)(-left_side_speed);
  2668  001454  0101               	movlb	1	; () banked
  2669  001456  5111               	movf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2670  001458                     L4:
  2671  001458  0800               	sublw	0
  2672  00145A  0101               	movlb	1	; () banked
  2673  00145C  6F14               	movwf	(i_like_to_moveit_moveit@moves+2)& (0+255),b
  2674  00145E                     l533:
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;motor.c: 29: }
  2678                           ;motor.c: 30: }
  2679                           ;motor.c: 32: moves[3] = (moves[0] + moves[1] + moves[2])&127;
  2680  00145E  0101               	movlb	1	; () banked
  2681  001460  5113               	movf	(i_like_to_moveit_moveit@moves+1)& (0+255),w,b
  2682  001462  0101               	movlb	1	; () banked
  2683  001464  2514               	addwf	(i_like_to_moveit_moveit@moves+2)& (0+255),w,b
  2684  001466  0101               	movlb	1	; () banked
  2685  001468  2512               	addwf	i_like_to_moveit_moveit@moves& (0+255),w,b
  2686  00146A  0B7F               	andlw	127
  2687  00146C  0101               	movlb	1	; () banked
  2688  00146E  6F15               	movwf	(i_like_to_moveit_moveit@moves+3)& (0+255),b
  2689                           
  2690                           ; BSR set to: 1
  2691                           ;motor.c: 34: send_uart_message(moves);
  2692  001470  0101               	movlb	1	; () banked
  2693  001472  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2694  001474  0101               	movlb	1	; () banked
  2695  001476  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2696  001478  0101               	movlb	1	; () banked
  2697  00147A  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2698  00147C  0101               	movlb	1	; () banked
  2699  00147E  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2700  001480  EC2B  F00E         	call	_send_uart_message	;wreg free
  2701                           
  2702                           ;motor.c: 36: if( right_side_speed >=0 )
  2703  001484  0101               	movlb	1	; () banked
  2704  001486  BF10               	btfsc	i_like_to_moveit_moveit@right_side_speed& (0+255),7,b
  2705  001488  D006               	goto	l3986
  2706                           
  2707                           ; BSR set to: 1
  2708                           ;motor.c: 37: {
  2709                           ;motor.c: 38: moves[1] = 4;
  2710  00148A  0E04               	movlw	4
  2711  00148C  0101               	movlb	1	; () banked
  2712  00148E  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2713                           
  2714                           ; BSR set to: 1
  2715                           ;motor.c: 39: moves[2] = right_side_speed;
  2716  001490  C110  F114         	movff	i_like_to_moveit_moveit@right_side_speed,i_like_to_moveit_moveit@moves+2
  2717                           
  2718                           ;motor.c: 40: }
  2719  001494  D010               	goto	l537
  2720  001496                     l3986:
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;motor.c: 41: else
  2724                           ;motor.c: 42: {
  2725                           ;motor.c: 43: moves[1] = 5;
  2726  001496  0E05               	movlw	5
  2727  001498  0101               	movlb	1	; () banked
  2728  00149A  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2729                           
  2730                           ; BSR set to: 1
  2731                           ;motor.c: 45: if(right_side_speed == -128)
  2732  00149C  0101               	movlb	1	; () banked
  2733  00149E  5110               	movf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2734  0014A0  0A80               	xorlw	128
  2735  0014A2  A4D8               	btfss	status,2,c
  2736  0014A4  D003               	goto	l3992
  2737                           
  2738                           ; BSR set to: 1
  2739                           ;motor.c: 46: {
  2740                           ;motor.c: 47: moves[2] = (unsigned char)((-right_side_speed)-1);
  2741  0014A6  0101               	movlb	1	; () banked
  2742  0014A8  2910               	incf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2743  0014AA  D002               	goto	L5
  2744  0014AC                     l3992:
  2745                           
  2746                           ; BSR set to: 1
  2747                           ;motor.c: 49: else
  2748                           ;motor.c: 50: {
  2749                           ;motor.c: 51: moves[2] = (unsigned char)(-right_side_speed);
  2750  0014AC  0101               	movlb	1	; () banked
  2751  0014AE  5110               	movf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2752  0014B0                     L5:
  2753  0014B0  0800               	sublw	0
  2754  0014B2  0101               	movlb	1	; () banked
  2755  0014B4  6F14               	movwf	(i_like_to_moveit_moveit@moves+2)& (0+255),b
  2756  0014B6                     l537:
  2757                           
  2758                           ; BSR set to: 1
  2759                           ;motor.c: 52: }
  2760                           ;motor.c: 53: }
  2761                           ;motor.c: 55: moves[3] = (moves[0] + moves[1] + moves[2])&127;
  2762  0014B6  0101               	movlb	1	; () banked
  2763  0014B8  5113               	movf	(i_like_to_moveit_moveit@moves+1)& (0+255),w,b
  2764  0014BA  0101               	movlb	1	; () banked
  2765  0014BC  2514               	addwf	(i_like_to_moveit_moveit@moves+2)& (0+255),w,b
  2766  0014BE  0101               	movlb	1	; () banked
  2767  0014C0  2512               	addwf	i_like_to_moveit_moveit@moves& (0+255),w,b
  2768  0014C2  0B7F               	andlw	127
  2769  0014C4  0101               	movlb	1	; () banked
  2770  0014C6  6F15               	movwf	(i_like_to_moveit_moveit@moves+3)& (0+255),b
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;motor.c: 57: send_uart_message(moves);
  2774  0014C8  0101               	movlb	1	; () banked
  2775  0014CA  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2776  0014CC  0101               	movlb	1	; () banked
  2777  0014CE  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2778  0014D0  0101               	movlb	1	; () banked
  2779  0014D2  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2780  0014D4  0101               	movlb	1	; () banked
  2781  0014D6  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2782  0014D8  EC2B  F00E         	call	_send_uart_message	;wreg free
  2783  0014DC  0012               	return	
  2784  0014DE                     __end_of_i_like_to_moveit_moveit:
  2785                           	opt stack 0
  2786                           tblptru	equ	0xFF8
  2787                           tblptrh	equ	0xFF7
  2788                           tblptrl	equ	0xFF6
  2789                           tablat	equ	0xFF5
  2790                           prodh	equ	0xFF4
  2791                           prodl	equ	0xFF3
  2792                           intcon	equ	0xFF2
  2793                           intcon2	equ	0xFF1
  2794                           postinc0	equ	0xFEE
  2795                           wreg	equ	0xFE8
  2796                           indf1	equ	0xFE7
  2797                           fsr1h	equ	0xFE2
  2798                           fsr1l	equ	0xFE1
  2799                           indf2	equ	0xFDF
  2800                           postinc2	equ	0xFDE
  2801                           postdec2	equ	0xFDD
  2802                           fsr2h	equ	0xFDA
  2803                           fsr2l	equ	0xFD9
  2804                           status	equ	0xFD8
  2805                           
  2806 ;; *************** function _send_uart_message *****************
  2807 ;; Defined at:
  2808 ;;		line 186 in file "../src/my_uart.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  message_ptr     2   14[BANK1 ] PTR unsigned char 
  2811 ;;		 -> i_like_to_moveit_moveit@moves(4), 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  message_q_co    1   68[BANK0 ] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      unsigned char 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2823 ;;      Params:         0       0       2       0       0
  2824 ;;      Locals:         0       1       0       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         0       1       2       0       0
  2827 ;;Total ram usage:        3 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:   13
  2830 ;; This function calls:
  2831 ;;		_FromMainLow_sendmsg
  2832 ;; This function is called by:
  2833 ;;		_i_like_to_moveit_moveit
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text12
  2838  001C56                     __ptext12:
  2839                           	opt stack 0
  2840  001C56                     _send_uart_message:
  2841                           	opt stack 16
  2842                           
  2843                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(4,31,(void *) messag
      +                          e_ptr );
  2844                           
  2845                           ;incstack = 0
  2846  001C56  0E1F               	movlw	31
  2847  001C58  0101               	movlb	1	; () banked
  2848  001C5A  6F0B               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2849  001C5C  0101               	movlb	1	; () banked
  2850  001C5E  C10F  F10D         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2851  001C62  0101               	movlb	1	; () banked
  2852  001C64  C10E  F10C         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2853  001C68  0E04               	movlw	4
  2854  001C6A  ECB3  F00D         	call	_FromMainLow_sendmsg
  2855  001C6E  0100               	movlb	0	; () banked
  2856  001C70  6FC4               	movwf	send_uart_message@message_q_code& (0+255),b
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;my_uart.c: 193: }
  2860                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;my_uart.c: 191: {
  2864                           ;my_uart.c: 192: return 0x02;
  2865                           ;	Return value of _send_uart_message is never used
  2866                           
  2867                           ;my_uart.c: 190: if( message_q_code == -1)
  2868  001C72  889D               	bsf	3997,4,c	;volatile
  2869                           
  2870                           ; BSR set to: 0
  2871                           
  2872                           ;my_uart.c: 196: return 0x00;
  2873                           ;	Return value of _send_uart_message is never used
  2874  001C74  0012               	return	
  2875  001C76                     __end_of_send_uart_message:
  2876                           	opt stack 0
  2877                           tblptru	equ	0xFF8
  2878                           tblptrh	equ	0xFF7
  2879                           tblptrl	equ	0xFF6
  2880                           tablat	equ	0xFF5
  2881                           prodh	equ	0xFF4
  2882                           prodl	equ	0xFF3
  2883                           intcon	equ	0xFF2
  2884                           intcon2	equ	0xFF1
  2885                           postinc0	equ	0xFEE
  2886                           wreg	equ	0xFE8
  2887                           indf1	equ	0xFE7
  2888                           fsr1h	equ	0xFE2
  2889                           fsr1l	equ	0xFE1
  2890                           indf2	equ	0xFDF
  2891                           postinc2	equ	0xFDE
  2892                           postdec2	equ	0xFDD
  2893                           fsr2h	equ	0xFDA
  2894                           fsr2l	equ	0xFD9
  2895                           status	equ	0xFD8
  2896                           
  2897 ;; *************** function _FromMainLow_sendmsg *****************
  2898 ;; Defined at:
  2899 ;;		line 150 in file "../src/messages.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  length          1    wreg     unsigned char 
  2902 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2903 ;;  data            2   12[BANK1 ] PTR void 
  2904 ;;		 -> i_like_to_moveit_moveit@moves(4), 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  length          1   67[BANK0 ] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      char 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2916 ;;      Params:         0       0       3       0       0
  2917 ;;      Locals:         0       1       0       0       0
  2918 ;;      Temps:          0       0       0       0       0
  2919 ;;      Totals:         0       1       3       0       0
  2920 ;;Total ram usage:        4 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:   12
  2923 ;; This function calls:
  2924 ;;		_send_msg
  2925 ;; This function is called by:
  2926 ;;		_send_uart_message
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text13
  2931  001B66                     __ptext13:
  2932                           	opt stack 0
  2933  001B66                     _FromMainLow_sendmsg:
  2934                           	opt stack 16
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;incstack = 0
  2938                           ;FromMainLow_sendmsg@length stored from wreg
  2939  001B66  0100               	movlb	0	; () banked
  2940  001B68  6FC3               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2944  001B6A  0102               	movlb	2	; () banked
  2945  001B6C  0E02               	movlw	high _FromMainLow_MQ
  2946  001B6E  0101               	movlb	1	; () banked
  2947  001B70  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2948  001B72  0102               	movlb	2	; () banked
  2949  001B74  0E00               	movlw	low _FromMainLow_MQ
  2950  001B76  0101               	movlb	1	; () banked
  2951  001B78  6F00               	movwf	send_msg@qptr& (0+255),b
  2952  001B7A  C0C3  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  2953  001B7E  C10B  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2954  001B82  0101               	movlb	1	; () banked
  2955  001B84  C10D  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2956  001B88  0101               	movlb	1	; () banked
  2957  001B8A  C10C  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  2958  001B8E  EC06  F007         	call	_send_msg	;wreg free
  2959  001B92  0012               	return	
  2960  001B94                     __end_of_FromMainLow_sendmsg:
  2961                           	opt stack 0
  2962                           tblptru	equ	0xFF8
  2963                           tblptrh	equ	0xFF7
  2964                           tblptrl	equ	0xFF6
  2965                           tablat	equ	0xFF5
  2966                           prodh	equ	0xFF4
  2967                           prodl	equ	0xFF3
  2968                           intcon	equ	0xFF2
  2969                           intcon2	equ	0xFF1
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           indf1	equ	0xFE7
  2973                           fsr1h	equ	0xFE2
  2974                           fsr1l	equ	0xFE1
  2975                           indf2	equ	0xFDF
  2976                           postinc2	equ	0xFDE
  2977                           postdec2	equ	0xFDD
  2978                           fsr2h	equ	0xFDA
  2979                           fsr2l	equ	0xFD9
  2980                           status	equ	0xFD8
  2981                           
  2982 ;; *************** function _send_msg *****************
  2983 ;; Defined at:
  2984 ;;		line 24 in file "../src/messages.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2987 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2988 ;;  length          1    2[BANK1 ] unsigned char 
  2989 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2990 ;;  data            2    4[BANK1 ] PTR void 
  2991 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  2992 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  2993 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  2994 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2997 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  2998 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2999 ;;  tlength         2    6[BANK1 ] unsigned int 
  3000 ;;  slot            1    8[BANK1 ] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      char 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3010 ;;      Params:         0       0       6       0       0
  3011 ;;      Locals:         0       0       5       0       0
  3012 ;;      Temps:          0       1       0       0       0
  3013 ;;      Totals:         0       1      11       0       0
  3014 ;;Total ram usage:       12 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:   11
  3017 ;; This function calls:
  3018 ;;		___awmod
  3019 ;;		_memcpy
  3020 ;; This function is called by:
  3021 ;;		_FromMainLow_sendmsg
  3022 ;;		_FromMainHigh_sendmsg
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text14
  3027  000E0C                     __ptext14:
  3028                           	opt stack 0
  3029  000E0C                     _send_msg:
  3030                           	opt stack 17
  3031                           
  3032                           ;messages.c: 25: unsigned char slot;
  3033                           ;messages.c: 27: msg *qmsg;
  3034                           ;messages.c: 28: size_t tlength = length;
  3035                           
  3036                           ;incstack = 0
  3037  000E0C  0101               	movlb	1	; () banked
  3038  000E0E  C102  F106         	movff	send_msg@length,send_msg@tlength
  3039  000E12  0101               	movlb	1	; () banked
  3040  000E14  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  3041                           
  3042                           ; BSR set to: 1
  3043                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3044  000E16  0101               	movlb	1	; () banked
  3045  000E18  EE20 F055          	lfsr	2,85
  3046  000E1C  0101               	movlb	1	; () banked
  3047  000E1E  5100               	movf	send_msg@qptr& (0+255),w,b
  3048  000E20  26D9               	addwf	fsr2l,f,c
  3049  000E22  0101               	movlb	1	; () banked
  3050  000E24  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3051  000E26  22DA               	addwfc	fsr2h,f,c
  3052  000E28  50DF               	movf	indf2,w,c
  3053  000E2A  0101               	movlb	1	; () banked
  3054  000E2C  6F08               	movwf	send_msg@slot& (0+255),b
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3058  000E2E  0101               	movlb	1	; () banked
  3059  000E30  5108               	movf	send_msg@slot& (0+255),w,b
  3060  000E32  0D11               	mullw	17
  3061  000E34  50F3               	movf	prodl,w,c
  3062  000E36  0101               	movlb	1	; () banked
  3063  000E38  2500               	addwf	send_msg@qptr& (0+255),w,b
  3064  000E3A  0101               	movlb	1	; () banked
  3065  000E3C  6F09               	movwf	send_msg@qmsg& (0+255),b
  3066  000E3E  50F4               	movf	prodh,w,c
  3067  000E40  0101               	movlb	1	; () banked
  3068  000E42  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3069  000E44  0101               	movlb	1	; () banked
  3070  000E46  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  3071                           
  3072                           ; BSR set to: 1
  3073                           ;messages.c: 41: if (qmsg->full != 0) {
  3074  000E48  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3075  000E4C  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3076  000E50  50DF               	movf	indf2,w,c
  3077  000E52  B4D8               	btfsc	status,2,c
  3078  000E54  D002               	goto	l3448
  3079                           
  3080                           ; BSR set to: 1
  3081                           ;messages.c: 42: return (-1);
  3082  000E56  0EFF               	movlw	255
  3083  000E58  0012               	return	
  3084  000E5A                     l3448:
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;messages.c: 43: }
  3088                           ;messages.c: 46: qmsg->length = length;
  3089  000E5A  0101               	movlb	1	; () banked
  3090  000E5C  EE20 F001          	lfsr	2,1
  3091  000E60  0101               	movlb	1	; () banked
  3092  000E62  5109               	movf	send_msg@qmsg& (0+255),w,b
  3093  000E64  26D9               	addwf	fsr2l,f,c
  3094  000E66  0101               	movlb	1	; () banked
  3095  000E68  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3096  000E6A  22DA               	addwfc	fsr2h,f,c
  3097  000E6C  0101               	movlb	1	; () banked
  3098  000E6E  C102  FFDF         	movff	send_msg@length,indf2
  3099                           
  3100                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3101  000E72  0101               	movlb	1	; () banked
  3102  000E74  EE20 F002          	lfsr	2,2
  3103  000E78  0101               	movlb	1	; () banked
  3104  000E7A  5109               	movf	send_msg@qmsg& (0+255),w,b
  3105  000E7C  26D9               	addwf	fsr2l,f,c
  3106  000E7E  0101               	movlb	1	; () banked
  3107  000E80  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3108  000E82  22DA               	addwfc	fsr2h,f,c
  3109  000E84  0101               	movlb	1	; () banked
  3110  000E86  C103  FFDF         	movff	send_msg@msgtype,indf2
  3111                           
  3112                           ; BSR set to: 1
  3113                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3114  000E8A  0E03               	movlw	3
  3115  000E8C  0101               	movlb	1	; () banked
  3116  000E8E  2509               	addwf	send_msg@qmsg& (0+255),w,b
  3117  000E90  0100               	movlb	0	; () banked
  3118  000E92  6FB8               	movwf	memcpy@d1& (0+255),b
  3119  000E94  0E00               	movlw	0
  3120  000E96  0101               	movlb	1	; () banked
  3121  000E98  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3122  000E9A  0100               	movlb	0	; () banked
  3123  000E9C  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  3124  000E9E  0101               	movlb	1	; () banked
  3125  000EA0  0100               	movlb	0	; () banked
  3126  000EA2  C105  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  3127  000EA6  0101               	movlb	1	; () banked
  3128  000EA8  0100               	movlb	0	; () banked
  3129  000EAA  C104  F0BA         	movff	send_msg@data,memcpy@s1
  3130  000EAE  C106  F0BC         	movff	send_msg@tlength,memcpy@n
  3131  000EB2  C107  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  3132  000EB6  EC7D  F00C         	call	_memcpy	;wreg free
  3133                           
  3134                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  3135  000EBA  0101               	movlb	1	; () banked
  3136  000EBC  EE20 F055          	lfsr	2,85
  3137  000EC0  0101               	movlb	1	; () banked
  3138  000EC2  5100               	movf	send_msg@qptr& (0+255),w,b
  3139  000EC4  26D9               	addwf	fsr2l,f,c
  3140  000EC6  0101               	movlb	1	; () banked
  3141  000EC8  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3142  000ECA  22DA               	addwfc	fsr2h,f,c
  3143  000ECC  0101               	movlb	1	; () banked
  3144  000ECE  EE10 F055          	lfsr	1,85
  3145  000ED2  0101               	movlb	1	; () banked
  3146  000ED4  5100               	movf	send_msg@qptr& (0+255),w,b
  3147  000ED6  26E1               	addwf	fsr1l,f,c
  3148  000ED8  0101               	movlb	1	; () banked
  3149  000EDA  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3150  000EDC  22E2               	addwfc	fsr1h,f,c
  3151  000EDE  50E7               	movf	indf1,w,c
  3152  000EE0  0100               	movlb	0	; () banked
  3153  000EE2  6FC2               	movwf	??_send_msg& (0+255),b
  3154  000EE4  0E01               	movlw	1
  3155  000EE6  0100               	movlb	0	; () banked
  3156  000EE8  25C2               	addwf	??_send_msg& (0+255),w,b
  3157  000EEA  0100               	movlb	0	; () banked
  3158  000EEC  6FB8               	movwf	___awmod@dividend& (0+255),b
  3159  000EEE  0100               	movlb	0	; () banked
  3160  000EF0  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3161  000EF2  0E00               	movlw	0
  3162  000EF4  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3163  000EF6  0E00               	movlw	0
  3164  000EF8  0100               	movlb	0	; () banked
  3165  000EFA  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3166  000EFC  0E05               	movlw	5
  3167  000EFE  0100               	movlb	0	; () banked
  3168  000F00  6FBA               	movwf	___awmod@divisor& (0+255),b
  3169  000F02  ECED  F008         	call	___awmod	;wreg free
  3170  000F06  0100               	movlb	0	; () banked
  3171  000F08  51B8               	movf	?___awmod& (0+255),w,b
  3172  000F0A  6EDF               	movwf	indf2,c
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;messages.c: 59: qmsg->full = 1;
  3176  000F0C  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3177  000F10  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3178  000F14  0E01               	movlw	1
  3179  000F16  6EDF               	movwf	indf2,c
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;messages.c: 60: return (1);
  3183  000F18  0E01               	movlw	1
  3184  000F1A  0012               	return	
  3185  000F1C                     __end_of_send_msg:
  3186                           	opt stack 0
  3187                           tblptru	equ	0xFF8
  3188                           tblptrh	equ	0xFF7
  3189                           tblptrl	equ	0xFF6
  3190                           tablat	equ	0xFF5
  3191                           prodh	equ	0xFF4
  3192                           prodl	equ	0xFF3
  3193                           intcon	equ	0xFF2
  3194                           intcon2	equ	0xFF1
  3195                           postinc0	equ	0xFEE
  3196                           wreg	equ	0xFE8
  3197                           indf1	equ	0xFE7
  3198                           fsr1h	equ	0xFE2
  3199                           fsr1l	equ	0xFE1
  3200                           indf2	equ	0xFDF
  3201                           postinc2	equ	0xFDE
  3202                           postdec2	equ	0xFDD
  3203                           fsr2h	equ	0xFDA
  3204                           fsr2l	equ	0xFD9
  3205                           status	equ	0xFD8
  3206                           
  3207 ;; *************** function _i2c_configure_slave *****************
  3208 ;; Defined at:
  3209 ;;		line 378 in file "../src/my_i2c.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  addr            1    wreg     unsigned char 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  addr            1   56[BANK0 ] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;		None               void
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3223 ;;      Params:         0       0       0       0       0
  3224 ;;      Locals:         0       1       0       0       0
  3225 ;;      Temps:          0       0       0       0       0
  3226 ;;      Totals:         0       1       0       0       0
  3227 ;;Total ram usage:        1 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:   10
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_main
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text15
  3238  001BC2                     __ptext15:
  3239                           	opt stack 0
  3240  001BC2                     _i2c_configure_slave:
  3241                           	opt stack 20
  3242                           
  3243                           ;incstack = 0
  3244                           ;i2c_configure_slave@addr stored from wreg
  3245  001BC2  0100               	movlb	0	; () banked
  3246  001BC4  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;my_i2c.c: 390: TRISCbits.TRISC3 = 1;
  3250  001BC6  8694               	bsf	3988,3,c	;volatile
  3251                           
  3252                           ;my_i2c.c: 391: TRISCbits.TRISC4 = 1;
  3253  001BC8  8894               	bsf	3988,4,c	;volatile
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;my_i2c.c: 396: SSPADD = addr;
  3257  001BCA  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;my_i2c.c: 398: SSPSTAT = 0x0;
  3261  001BCE  0E00               	movlw	0
  3262  001BD0  6EC7               	movwf	4039,c	;volatile
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;my_i2c.c: 399: SSPCON1 = 0x0;
  3266  001BD2  0E00               	movlw	0
  3267  001BD4  6EC6               	movwf	4038,c	;volatile
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;my_i2c.c: 400: SSPCON2 = 0x0;
  3271  001BD6  0E00               	movlw	0
  3272  001BD8  6EC5               	movwf	4037,c	;volatile
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;my_i2c.c: 401: SSPCON1 |= 0x0E;
  3276  001BDA  0E0E               	movlw	14
  3277  001BDC  12C6               	iorwf	4038,f,c	;volatile
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;my_i2c.c: 402: SSPSTAT |= 0b10000000;
  3281  001BDE  8EC7               	bsf	4039,7,c	;volatile
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;my_i2c.c: 405: TRISCbits.TRISC3 = 1;
  3285  001BE0  8694               	bsf	3988,3,c	;volatile
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;my_i2c.c: 406: TRISCbits.TRISC4 = 1;
  3289  001BE2  8894               	bsf	3988,4,c	;volatile
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;my_i2c.c: 427: SSPCON2bits.SEN = 1;
  3293  001BE4  80C5               	bsf	4037,0,c	;volatile
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;my_i2c.c: 428: SSPCON1 |= 0b00100000;
  3297  001BE6  8AC6               	bsf	4038,5,c	;volatile
  3298                           
  3299                           ; BSR set to: 0
  3300  001BE8  0012               	return	
  3301  001BEA                     __end_of_i2c_configure_slave:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           intcon2	equ	0xFF1
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           indf1	equ	0xFE7
  3314                           fsr1h	equ	0xFE2
  3315                           fsr1l	equ	0xFE1
  3316                           indf2	equ	0xFDF
  3317                           postinc2	equ	0xFDE
  3318                           postdec2	equ	0xFDD
  3319                           fsr2h	equ	0xFDA
  3320                           fsr2l	equ	0xFD9
  3321                           status	equ	0xFD8
  3322                           
  3323 ;; *************** function _enable_interrupts *****************
  3324 ;; Defined at:
  3325 ;;		line 14 in file "../src/interrupts.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;		None               void
  3332 ;; Registers used:
  3333 ;;		None
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3339 ;;      Params:         0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0
  3342 ;;      Totals:         0       0       0       0       0
  3343 ;;Total ram usage:        0 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:   10
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text16
  3354  001CB0                     __ptext16:
  3355                           	opt stack 0
  3356  001CB0                     _enable_interrupts:
  3357                           	opt stack 20
  3358                           
  3359                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;incstack = 0
  3363  001CB0  8ED0               	bsf	4048,7,c	;volatile
  3364                           
  3365                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3366  001CB2  8EF2               	bsf	intcon,7,c	;volatile
  3367                           
  3368                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3369  001CB4  8CF2               	bsf	intcon,6,c	;volatile
  3370  001CB6  0012               	return	
  3371  001CB8                     __end_of_enable_interrupts:
  3372                           	opt stack 0
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           prodh	equ	0xFF4
  3378                           prodl	equ	0xFF3
  3379                           intcon	equ	0xFF2
  3380                           intcon2	equ	0xFF1
  3381                           postinc0	equ	0xFEE
  3382                           wreg	equ	0xFE8
  3383                           indf1	equ	0xFE7
  3384                           fsr1h	equ	0xFE2
  3385                           fsr1l	equ	0xFE1
  3386                           indf2	equ	0xFDF
  3387                           postinc2	equ	0xFDE
  3388                           postdec2	equ	0xFDD
  3389                           fsr2h	equ	0xFDA
  3390                           fsr2l	equ	0xFD9
  3391                           status	equ	0xFD8
  3392                           
  3393 ;; *************** function _debug_configure *****************
  3394 ;; Defined at:
  3395 ;;		line 3 in file "../src/debug.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;		None               void
  3402 ;; Registers used:
  3403 ;;		wreg, status,2
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:   10
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text17
  3424  001CA6                     __ptext17:
  3425                           	opt stack 0
  3426  001CA6                     _debug_configure:
  3427                           	opt stack 20
  3428                           
  3429                           ;debug.c: 5: TRISD = 0x00;
  3430                           
  3431                           ;incstack = 0
  3432  001CA6  0E00               	movlw	0
  3433  001CA8  6E95               	movwf	3989,c	;volatile
  3434                           
  3435                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3436  001CAA  9093               	bcf	3987,0,c	;volatile
  3437                           
  3438                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3439  001CAC  9293               	bcf	3987,1,c	;volatile
  3440  001CAE  0012               	return	
  3441  001CB0                     __end_of_debug_configure:
  3442                           	opt stack 0
  3443                           tblptru	equ	0xFF8
  3444                           tblptrh	equ	0xFF7
  3445                           tblptrl	equ	0xFF6
  3446                           tablat	equ	0xFF5
  3447                           prodh	equ	0xFF4
  3448                           prodl	equ	0xFF3
  3449                           intcon	equ	0xFF2
  3450                           intcon2	equ	0xFF1
  3451                           postinc0	equ	0xFEE
  3452                           wreg	equ	0xFE8
  3453                           indf1	equ	0xFE7
  3454                           fsr1h	equ	0xFE2
  3455                           fsr1l	equ	0xFE1
  3456                           indf2	equ	0xFDF
  3457                           postinc2	equ	0xFDE
  3458                           postdec2	equ	0xFDD
  3459                           fsr2h	equ	0xFDA
  3460                           fsr2l	equ	0xFD9
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function _blip3 *****************
  3464 ;; Defined at:
  3465 ;;		line 32 in file "../src/debug.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;		None               void
  3472 ;; Registers used:
  3473 ;;		None
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3479 ;;      Params:         0       0       0       0       0
  3480 ;;      Locals:         0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0
  3482 ;;      Totals:         0       0       0       0       0
  3483 ;;Total ram usage:        0 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:   10
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text18
  3494  001CB8                     __ptext18:
  3495                           	opt stack 0
  3496  001CB8                     _blip3:
  3497                           	opt stack 20
  3498                           
  3499                           ;debug.c: 34: LATDbits.LD6 = 0;
  3500                           
  3501                           ;incstack = 0
  3502  001CB8  9C8C               	bcf	3980,6,c	;volatile
  3503                           
  3504                           ;debug.c: 35: LATDbits.LD6 = 1;
  3505  001CBA  8C8C               	bsf	3980,6,c	;volatile
  3506                           
  3507                           ;debug.c: 36: LATDbits.LD6 = 0;
  3508  001CBC  9C8C               	bcf	3980,6,c	;volatile
  3509  001CBE  0012               	return	
  3510  001CC0                     __end_of_blip3:
  3511                           	opt stack 0
  3512                           tblptru	equ	0xFF8
  3513                           tblptrh	equ	0xFF7
  3514                           tblptrl	equ	0xFF6
  3515                           tablat	equ	0xFF5
  3516                           prodh	equ	0xFF4
  3517                           prodl	equ	0xFF3
  3518                           intcon	equ	0xFF2
  3519                           intcon2	equ	0xFF1
  3520                           postinc0	equ	0xFEE
  3521                           wreg	equ	0xFE8
  3522                           indf1	equ	0xFE7
  3523                           fsr1h	equ	0xFE2
  3524                           fsr1l	equ	0xFE1
  3525                           indf2	equ	0xFDF
  3526                           postinc2	equ	0xFDE
  3527                           postdec2	equ	0xFDD
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function _blip2 *****************
  3533 ;; Defined at:
  3534 ;;		line 25 in file "../src/debug.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		None
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:   10
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text19
  3563  001CC0                     __ptext19:
  3564                           	opt stack 0
  3565  001CC0                     _blip2:
  3566                           	opt stack 20
  3567                           
  3568                           ;debug.c: 27: LATDbits.LD5 = 0;
  3569                           
  3570                           ;incstack = 0
  3571  001CC0  9A8C               	bcf	3980,5,c	;volatile
  3572                           
  3573                           ;debug.c: 28: LATDbits.LD5 = 1;
  3574  001CC2  8A8C               	bsf	3980,5,c	;volatile
  3575                           
  3576                           ;debug.c: 29: LATDbits.LD5 = 0;
  3577  001CC4  9A8C               	bcf	3980,5,c	;volatile
  3578  001CC6  0012               	return	
  3579  001CC8                     __end_of_blip2:
  3580                           	opt stack 0
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           intcon	equ	0xFF2
  3588                           intcon2	equ	0xFF1
  3589                           postinc0	equ	0xFEE
  3590                           wreg	equ	0xFE8
  3591                           indf1	equ	0xFE7
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           indf2	equ	0xFDF
  3595                           postinc2	equ	0xFDE
  3596                           postdec2	equ	0xFDD
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _blip1 *****************
  3602 ;; Defined at:
  3603 ;;		line 18 in file "../src/debug.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;		None               void
  3610 ;; Registers used:
  3611 ;;		None
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3617 ;;      Params:         0       0       0       0       0
  3618 ;;      Locals:         0       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0
  3620 ;;      Totals:         0       0       0       0       0
  3621 ;;Total ram usage:        0 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:   10
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text20
  3632  001CC8                     __ptext20:
  3633                           	opt stack 0
  3634  001CC8                     _blip1:
  3635                           	opt stack 20
  3636                           
  3637                           ;debug.c: 20: LATDbits.LD4 = 0;
  3638                           
  3639                           ;incstack = 0
  3640  001CC8  988C               	bcf	3980,4,c	;volatile
  3641                           
  3642                           ;debug.c: 21: LATDbits.LD4 = 1;
  3643  001CCA  888C               	bsf	3980,4,c	;volatile
  3644                           
  3645                           ;debug.c: 22: LATDbits.LD4 = 0;
  3646  001CCC  988C               	bcf	3980,4,c	;volatile
  3647  001CCE  0012               	return	
  3648  001CD0                     __end_of_blip1:
  3649                           	opt stack 0
  3650                           tblptru	equ	0xFF8
  3651                           tblptrh	equ	0xFF7
  3652                           tblptrl	equ	0xFF6
  3653                           tablat	equ	0xFF5
  3654                           prodh	equ	0xFF4
  3655                           prodl	equ	0xFF3
  3656                           intcon	equ	0xFF2
  3657                           intcon2	equ	0xFF1
  3658                           postinc0	equ	0xFEE
  3659                           wreg	equ	0xFE8
  3660                           indf1	equ	0xFE7
  3661                           fsr1h	equ	0xFE2
  3662                           fsr1l	equ	0xFE1
  3663                           indf2	equ	0xFDF
  3664                           postinc2	equ	0xFDE
  3665                           postdec2	equ	0xFDD
  3666                           fsr2h	equ	0xFDA
  3667                           fsr2l	equ	0xFD9
  3668                           status	equ	0xFD8
  3669                           
  3670 ;; *************** function _blip *****************
  3671 ;; Defined at:
  3672 ;;		line 11 in file "../src/debug.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;		None               void
  3679 ;; Registers used:
  3680 ;;		None
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3686 ;;      Params:         0       0       0       0       0
  3687 ;;      Locals:         0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0
  3689 ;;      Totals:         0       0       0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:   10
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_main
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text21
  3701  001CD0                     __ptext21:
  3702                           	opt stack 0
  3703  001CD0                     _blip:
  3704                           	opt stack 20
  3705                           
  3706                           ;debug.c: 13: LATDbits.LD2 = 0;
  3707                           
  3708                           ;incstack = 0
  3709  001CD0  948C               	bcf	3980,2,c	;volatile
  3710                           
  3711                           ;debug.c: 14: LATDbits.LD2 = 1;
  3712  001CD2  848C               	bsf	3980,2,c	;volatile
  3713                           
  3714                           ;debug.c: 15: LATDbits.LD2 = 0;
  3715  001CD4  948C               	bcf	3980,2,c	;volatile
  3716  001CD6  0012               	return	
  3717  001CD8                     __end_of_blip:
  3718                           	opt stack 0
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           prodh	equ	0xFF4
  3724                           prodl	equ	0xFF3
  3725                           intcon	equ	0xFF2
  3726                           intcon2	equ	0xFF1
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           indf1	equ	0xFE7
  3730                           fsr1h	equ	0xFE2
  3731                           fsr1l	equ	0xFE1
  3732                           indf2	equ	0xFDF
  3733                           postinc2	equ	0xFDE
  3734                           postdec2	equ	0xFDD
  3735                           fsr2h	equ	0xFDA
  3736                           fsr2l	equ	0xFD9
  3737                           status	equ	0xFD8
  3738                           
  3739 ;; *************** function _ToMainLow_recvmsg *****************
  3740 ;; Defined at:
  3741 ;;		line 112 in file "../src/messages.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  maxlength       1    wreg     unsigned char 
  3744 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3745 ;;		 -> main@msgtype(1), 
  3746 ;;  data            2   14[BANK1 ] PTR void 
  3747 ;;		 -> main@msgbuffer(15), 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      char 
  3752 ;; Registers used:
  3753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3759 ;;      Params:         0       0       4       0       0
  3760 ;;      Locals:         0       1       0       0       0
  3761 ;;      Temps:          0       0       0       0       0
  3762 ;;      Totals:         0       1       4       0       0
  3763 ;;Total ram usage:        5 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:   12
  3766 ;; This function calls:
  3767 ;;		_recv_msg
  3768 ;; This function is called by:
  3769 ;;		_main
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text22
  3774  001A64                     __ptext22:
  3775                           	opt stack 0
  3776  001A64                     _ToMainLow_recvmsg:
  3777                           	opt stack 18
  3778                           
  3779                           ;incstack = 0
  3780                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3781  001A64  0100               	movlb	0	; () banked
  3782  001A66  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3786  001A68  0101               	movlb	1	; () banked
  3787  001A6A  0E01               	movlw	high _ToMainLow_MQ
  3788  001A6C  0101               	movlb	1	; () banked
  3789  001A6E  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3790  001A70  0101               	movlb	1	; () banked
  3791  001A72  0E66               	movlw	low _ToMainLow_MQ
  3792  001A74  0101               	movlb	1	; () banked
  3793  001A76  6F00               	movwf	recv_msg@qptr& (0+255),b
  3794  001A78  C0C4  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3795  001A7C  0101               	movlb	1	; () banked
  3796  001A7E  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3797  001A82  0101               	movlb	1	; () banked
  3798  001A84  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3799  001A88  0101               	movlb	1	; () banked
  3800  001A8A  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3801  001A8E  0101               	movlb	1	; () banked
  3802  001A90  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3803  001A94  ECC6  F005         	call	_recv_msg	;wreg free
  3804  001A98  0012               	return	
  3805  001A9A                     __end_of_ToMainLow_recvmsg:
  3806                           	opt stack 0
  3807                           tblptru	equ	0xFF8
  3808                           tblptrh	equ	0xFF7
  3809                           tblptrl	equ	0xFF6
  3810                           tablat	equ	0xFF5
  3811                           prodh	equ	0xFF4
  3812                           prodl	equ	0xFF3
  3813                           intcon	equ	0xFF2
  3814                           intcon2	equ	0xFF1
  3815                           postinc0	equ	0xFEE
  3816                           wreg	equ	0xFE8
  3817                           indf1	equ	0xFE7
  3818                           fsr1h	equ	0xFE2
  3819                           fsr1l	equ	0xFE1
  3820                           indf2	equ	0xFDF
  3821                           postinc2	equ	0xFDE
  3822                           postdec2	equ	0xFDD
  3823                           fsr2h	equ	0xFDA
  3824                           fsr2l	equ	0xFD9
  3825                           status	equ	0xFD8
  3826                           
  3827 ;; *************** function _ToMainHigh_recvmsg *****************
  3828 ;; Defined at:
  3829 ;;		line 135 in file "../src/messages.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  maxlength       1    wreg     unsigned char 
  3832 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3833 ;;		 -> main@msgtype(1), 
  3834 ;;  data            2   14[BANK1 ] PTR void 
  3835 ;;		 -> main@msgbuffer(15), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      char 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3847 ;;      Params:         0       0       4       0       0
  3848 ;;      Locals:         0       1       0       0       0
  3849 ;;      Temps:          0       0       0       0       0
  3850 ;;      Totals:         0       1       4       0       0
  3851 ;;Total ram usage:        5 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:   12
  3854 ;; This function calls:
  3855 ;;		_recv_msg
  3856 ;; This function is called by:
  3857 ;;		_main
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text23
  3862  001A9A                     __ptext23:
  3863                           	opt stack 0
  3864  001A9A                     _ToMainHigh_recvmsg:
  3865                           	opt stack 18
  3866                           
  3867                           ;incstack = 0
  3868                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3869  001A9A  0100               	movlb	0	; () banked
  3870  001A9C  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3874  001A9E  0102               	movlb	2	; () banked
  3875  001AA0  0E02               	movlw	high _ToMainHigh_MQ
  3876  001AA2  0101               	movlb	1	; () banked
  3877  001AA4  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3878  001AA6  0102               	movlb	2	; () banked
  3879  001AA8  0E57               	movlw	low _ToMainHigh_MQ
  3880  001AAA  0101               	movlb	1	; () banked
  3881  001AAC  6F00               	movwf	recv_msg@qptr& (0+255),b
  3882  001AAE  C0C4  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3883  001AB2  0101               	movlb	1	; () banked
  3884  001AB4  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3885  001AB8  0101               	movlb	1	; () banked
  3886  001ABA  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3887  001ABE  0101               	movlb	1	; () banked
  3888  001AC0  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3889  001AC4  0101               	movlb	1	; () banked
  3890  001AC6  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3891  001ACA  ECC6  F005         	call	_recv_msg	;wreg free
  3892  001ACE  0012               	return	
  3893  001AD0                     __end_of_ToMainHigh_recvmsg:
  3894                           	opt stack 0
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           prodh	equ	0xFF4
  3900                           prodl	equ	0xFF3
  3901                           intcon	equ	0xFF2
  3902                           intcon2	equ	0xFF1
  3903                           postinc0	equ	0xFEE
  3904                           wreg	equ	0xFE8
  3905                           indf1	equ	0xFE7
  3906                           fsr1h	equ	0xFE2
  3907                           fsr1l	equ	0xFE1
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           postdec2	equ	0xFDD
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function _recv_msg *****************
  3916 ;; Defined at:
  3917 ;;		line 63 in file "../src/messages.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3920 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3921 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3922 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3923 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  3924 ;;  data            2    5[BANK1 ] PTR void 
  3925 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3928 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3929 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3930 ;;  tlength         2    8[BANK1 ] unsigned int 
  3931 ;;  slot            1    7[BANK1 ] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      char 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3941 ;;      Params:         0       0       7       0       0
  3942 ;;      Locals:         0       0       5       0       0
  3943 ;;      Temps:          0       2       0       0       0
  3944 ;;      Totals:         0       2      12       0       0
  3945 ;;Total ram usage:       14 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:   11
  3948 ;; This function calls:
  3949 ;;		___awmod
  3950 ;;		_memcpy
  3951 ;; This function is called by:
  3952 ;;		_ToMainLow_recvmsg
  3953 ;;		_ToMainHigh_recvmsg
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text24
  3958  000B8C                     __ptext24:
  3959                           	opt stack 0
  3960  000B8C                     _recv_msg:
  3961                           	opt stack 18
  3962                           
  3963                           ;messages.c: 64: unsigned char slot;
  3964                           ;messages.c: 68: msg *qmsg;
  3965                           ;messages.c: 69: size_t tlength;
  3966                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3967                           
  3968                           ;incstack = 0
  3969  000B8C  0101               	movlb	1	; () banked
  3970  000B8E  EE20 F056          	lfsr	2,86
  3971  000B92  0101               	movlb	1	; () banked
  3972  000B94  5100               	movf	recv_msg@qptr& (0+255),w,b
  3973  000B96  26D9               	addwf	fsr2l,f,c
  3974  000B98  0101               	movlb	1	; () banked
  3975  000B9A  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3976  000B9C  22DA               	addwfc	fsr2h,f,c
  3977  000B9E  50DF               	movf	indf2,w,c
  3978  000BA0  0101               	movlb	1	; () banked
  3979  000BA2  6F07               	movwf	recv_msg@slot& (0+255),b
  3980                           
  3981                           ; BSR set to: 1
  3982                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3983  000BA4  0101               	movlb	1	; () banked
  3984  000BA6  5107               	movf	recv_msg@slot& (0+255),w,b
  3985  000BA8  0D11               	mullw	17
  3986  000BAA  50F3               	movf	prodl,w,c
  3987  000BAC  0101               	movlb	1	; () banked
  3988  000BAE  2500               	addwf	recv_msg@qptr& (0+255),w,b
  3989  000BB0  0101               	movlb	1	; () banked
  3990  000BB2  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  3991  000BB4  50F4               	movf	prodh,w,c
  3992  000BB6  0101               	movlb	1	; () banked
  3993  000BB8  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3994  000BBA  0101               	movlb	1	; () banked
  3995  000BBC  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3996                           
  3997                           ; BSR set to: 1
  3998                           ;messages.c: 74: if (qmsg->full == 1) {
  3999  000BBE  0E01               	movlw	1
  4000  000BC0  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4001  000BC4  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4002  000BC8  62DF               	cpfseq	indf2,c
  4003  000BCA  D07F               	goto	l3612
  4004                           
  4005                           ; BSR set to: 1
  4006                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4007  000BCC  0101               	movlb	1	; () banked
  4008  000BCE  EE20 F001          	lfsr	2,1
  4009  000BD2  0101               	movlb	1	; () banked
  4010  000BD4  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4011  000BD6  26D9               	addwf	fsr2l,f,c
  4012  000BD8  0101               	movlb	1	; () banked
  4013  000BDA  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4014  000BDC  22DA               	addwfc	fsr2h,f,c
  4015  000BDE  50DF               	movf	indf2,w,c
  4016  000BE0  0101               	movlb	1	; () banked
  4017  000BE2  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  4018  000BE4  B0D8               	btfsc	status,0,c
  4019  000BE6  D002               	goto	l3596
  4020                           
  4021                           ; BSR set to: 1
  4022                           ;messages.c: 77: return (-3);
  4023  000BE8  0EFD               	movlw	253
  4024  000BEA  0012               	return	
  4025  000BEC                     l3596:
  4026                           
  4027                           ; BSR set to: 1
  4028                           ;messages.c: 78: }
  4029                           ;messages.c: 80: tlength = qmsg->length;
  4030  000BEC  0101               	movlb	1	; () banked
  4031  000BEE  EE20 F001          	lfsr	2,1
  4032  000BF2  0101               	movlb	1	; () banked
  4033  000BF4  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4034  000BF6  26D9               	addwf	fsr2l,f,c
  4035  000BF8  0101               	movlb	1	; () banked
  4036  000BFA  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4037  000BFC  22DA               	addwfc	fsr2h,f,c
  4038  000BFE  50DF               	movf	indf2,w,c
  4039  000C00  0100               	movlb	0	; () banked
  4040  000C02  6FC2               	movwf	??_recv_msg& (0+255),b
  4041  000C04  0100               	movlb	0	; () banked
  4042  000C06  51C2               	movf	??_recv_msg& (0+255),w,b
  4043  000C08  0101               	movlb	1	; () banked
  4044  000C0A  6F08               	movwf	recv_msg@tlength& (0+255),b
  4045  000C0C  0101               	movlb	1	; () banked
  4046  000C0E  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4050  000C10  0101               	movlb	1	; () banked
  4051  000C12  0100               	movlb	0	; () banked
  4052  000C14  C106  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  4053  000C18  0101               	movlb	1	; () banked
  4054  000C1A  0100               	movlb	0	; () banked
  4055  000C1C  C105  F0B8         	movff	recv_msg@data,memcpy@d1
  4056  000C20  0E03               	movlw	3
  4057  000C22  0101               	movlb	1	; () banked
  4058  000C24  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  4059  000C26  0100               	movlb	0	; () banked
  4060  000C28  6FC2               	movwf	??_recv_msg& (0+255),b
  4061  000C2A  0E00               	movlw	0
  4062  000C2C  0101               	movlb	1	; () banked
  4063  000C2E  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4064  000C30  0100               	movlb	0	; () banked
  4065  000C32  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  4066  000C34  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  4067  000C38  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  4068  000C3C  C108  F0BC         	movff	recv_msg@tlength,memcpy@n
  4069  000C40  C109  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  4070  000C44  EC7D  F00C         	call	_memcpy	;wreg free
  4071                           
  4072                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4073  000C48  0101               	movlb	1	; () banked
  4074  000C4A  EE20 F056          	lfsr	2,86
  4075  000C4E  0101               	movlb	1	; () banked
  4076  000C50  5100               	movf	recv_msg@qptr& (0+255),w,b
  4077  000C52  26D9               	addwf	fsr2l,f,c
  4078  000C54  0101               	movlb	1	; () banked
  4079  000C56  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4080  000C58  22DA               	addwfc	fsr2h,f,c
  4081  000C5A  0101               	movlb	1	; () banked
  4082  000C5C  EE10 F056          	lfsr	1,86
  4083  000C60  0101               	movlb	1	; () banked
  4084  000C62  5100               	movf	recv_msg@qptr& (0+255),w,b
  4085  000C64  26E1               	addwf	fsr1l,f,c
  4086  000C66  0101               	movlb	1	; () banked
  4087  000C68  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4088  000C6A  22E2               	addwfc	fsr1h,f,c
  4089  000C6C  50E7               	movf	indf1,w,c
  4090  000C6E  0100               	movlb	0	; () banked
  4091  000C70  6FC2               	movwf	??_recv_msg& (0+255),b
  4092  000C72  0E01               	movlw	1
  4093  000C74  0100               	movlb	0	; () banked
  4094  000C76  25C2               	addwf	??_recv_msg& (0+255),w,b
  4095  000C78  0100               	movlb	0	; () banked
  4096  000C7A  6FB8               	movwf	___awmod@dividend& (0+255),b
  4097  000C7C  0100               	movlb	0	; () banked
  4098  000C7E  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  4099  000C80  0E00               	movlw	0
  4100  000C82  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4101  000C84  0E00               	movlw	0
  4102  000C86  0100               	movlb	0	; () banked
  4103  000C88  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  4104  000C8A  0E05               	movlw	5
  4105  000C8C  0100               	movlb	0	; () banked
  4106  000C8E  6FBA               	movwf	___awmod@divisor& (0+255),b
  4107  000C90  ECED  F008         	call	___awmod	;wreg free
  4108  000C94  0100               	movlb	0	; () banked
  4109  000C96  51B8               	movf	?___awmod& (0+255),w,b
  4110  000C98  6EDF               	movwf	indf2,c
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4114  000C9A  0101               	movlb	1	; () banked
  4115  000C9C  EE20 F002          	lfsr	2,2
  4116  000CA0  0101               	movlb	1	; () banked
  4117  000CA2  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4118  000CA4  26D9               	addwf	fsr2l,f,c
  4119  000CA6  0101               	movlb	1	; () banked
  4120  000CA8  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4121  000CAA  22DA               	addwfc	fsr2h,f,c
  4122  000CAC  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  4123  000CB0  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4124  000CB4  CFDF FFE7          	movff	indf2,indf1
  4125                           
  4126                           ; BSR set to: 1
  4127                           ;messages.c: 91: qmsg->full = 0;
  4128  000CB8  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4129  000CBC  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4130  000CC0  0E00               	movlw	0
  4131  000CC2  6EDF               	movwf	indf2,c
  4132                           
  4133                           ; BSR set to: 1
  4134                           ;messages.c: 92: return (tlength);
  4135  000CC4  0101               	movlb	1	; () banked
  4136  000CC6  5108               	movf	recv_msg@tlength& (0+255),w,b
  4137  000CC8  0012               	return	
  4138  000CCA                     l3612:
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;messages.c: 94: return (-4);
  4142  000CCA  0EFC               	movlw	252
  4143  000CCC  0012               	return	
  4144  000CCE                     __end_of_recv_msg:
  4145                           	opt stack 0
  4146                           tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           prodh	equ	0xFF4
  4151                           prodl	equ	0xFF3
  4152                           intcon	equ	0xFF2
  4153                           intcon2	equ	0xFF1
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           indf1	equ	0xFE7
  4157                           fsr1h	equ	0xFE2
  4158                           fsr1l	equ	0xFE1
  4159                           indf2	equ	0xFDF
  4160                           postinc2	equ	0xFDE
  4161                           postdec2	equ	0xFDD
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8
  4165                           
  4166 ;; *************** function _memcpy *****************
  4167 ;; Defined at:
  4168 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  d1              2   56[BANK0 ] PTR void 
  4171 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4172 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  4173 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  4174 ;;  s1              2   58[BANK0 ] PTR const void 
  4175 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4176 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4177 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  4178 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4179 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4180 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  4181 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  4182 ;;  n               2   60[BANK0 ] unsigned int 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  4185 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4186 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4187 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  4188 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  4189 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  4190 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  4191 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  4192 ;;  d               2   62[BANK0 ] PTR unsigned char 
  4193 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4194 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  4195 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  2   56[BANK0 ] PTR void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4205 ;;      Params:         0       6       0       0       0
  4206 ;;      Locals:         0       4       0       0       0
  4207 ;;      Temps:          0       0       0       0       0
  4208 ;;      Totals:         0      10       0       0       0
  4209 ;;Total ram usage:       10 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:   10
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_send_msg
  4216 ;;		_recv_msg
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text25
  4221  0018FA                     __ptext25:
  4222                           	opt stack 0
  4223  0018FA                     _memcpy:
  4224                           	opt stack 17
  4225                           
  4226                           ; BSR set to: 1
  4227                           ;incstack = 0
  4228  0018FA  0100               	movlb	0	; () banked
  4229  0018FC  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4230  001900  0100               	movlb	0	; () banked
  4231  001902  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4232  001906  0100               	movlb	0	; () banked
  4233  001908  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4234  00190C  0100               	movlb	0	; () banked
  4235  00190E  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4236  001912  D010               	goto	l3398
  4237  001914                     l3392:
  4238                           
  4239                           ; BSR set to: 0
  4240  001914  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4241  001918  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4242  00191C  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4243  001920  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4244  001924  CFDF FFE7          	movff	indf2,indf1
  4245                           
  4246                           ; BSR set to: 0
  4247  001928  0100               	movlb	0	; () banked
  4248  00192A  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4249  00192C  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4250                           
  4251                           ; BSR set to: 0
  4252  00192E  0100               	movlb	0	; () banked
  4253  001930  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4254  001932  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4255  001934                     l3398:
  4256                           
  4257                           ; BSR set to: 0
  4258  001934  0100               	movlb	0	; () banked
  4259  001936  07BC               	decf	memcpy@n& (0+255),f,b
  4260  001938  A0D8               	btfss	status,0,c
  4261  00193A  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4262  00193C  0100               	movlb	0	; () banked
  4263  00193E  29BC               	incf	memcpy@n& (0+255),w,b
  4264  001940  B4D8               	btfsc	status,2,c
  4265  001942  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4266  001944  B4D8               	btfsc	status,2,c
  4267                           
  4268                           ; BSR set to: 0
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;	Return value of _memcpy is never used
  4272  001946  0012               	return	
  4273  001948  D7E5               	goto	l3392
  4274  00194A                     __end_of_memcpy:
  4275                           	opt stack 0
  4276                           tblptru	equ	0xFF8
  4277                           tblptrh	equ	0xFF7
  4278                           tblptrl	equ	0xFF6
  4279                           tablat	equ	0xFF5
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           intcon	equ	0xFF2
  4283                           intcon2	equ	0xFF1
  4284                           postinc0	equ	0xFEE
  4285                           wreg	equ	0xFE8
  4286                           indf1	equ	0xFE7
  4287                           fsr1h	equ	0xFE2
  4288                           fsr1l	equ	0xFE1
  4289                           indf2	equ	0xFDF
  4290                           postinc2	equ	0xFDE
  4291                           postdec2	equ	0xFDD
  4292                           fsr2h	equ	0xFDA
  4293                           fsr2l	equ	0xFD9
  4294                           status	equ	0xFD8
  4295                           
  4296 ;; *************** function ___awmod *****************
  4297 ;; Defined at:
  4298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  dividend        2   56[BANK0 ] int 
  4301 ;;  divisor         2   58[BANK0 ] int 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  sign            1   61[BANK0 ] unsigned char 
  4304 ;;  counter         1   60[BANK0 ] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  2   56[BANK0 ] int 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, prodl
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4314 ;;      Params:         0       4       0       0       0
  4315 ;;      Locals:         0       2       0       0       0
  4316 ;;      Temps:          0       0       0       0       0
  4317 ;;      Totals:         0       6       0       0       0
  4318 ;;Total ram usage:        6 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:   10
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_send_msg
  4325 ;;		_recv_msg
  4326 ;;		i1_send_msg
  4327 ;;		i2_send_msg
  4328 ;;		i1_recv_msg
  4329 ;;		i2_recv_msg
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text26
  4334  0011DA                     __ptext26:
  4335                           	opt stack 0
  4336  0011DA                     ___awmod:
  4337                           	opt stack 17
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;incstack = 0
  4341  0011DA  0E00               	movlw	0
  4342  0011DC  0100               	movlb	0	; () banked
  4343  0011DE  6FBD               	movwf	___awmod@sign& (0+255),b
  4344                           
  4345                           ; BSR set to: 0
  4346  0011E0  0100               	movlb	0	; () banked
  4347  0011E2  51B9               	movf	(___awmod@dividend+1)& (0+255),w,b
  4348  0011E4  0A80               	xorlw	128
  4349  0011E6  6EF3               	movwf	prodl,c
  4350  0011E8  0E80               	movlw	128
  4351  0011EA  5CF3               	subwf	prodl,w,c
  4352  0011EC  0E00               	movlw	0
  4353  0011EE  B4D8               	btfsc	status,2,c
  4354  0011F0  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4355  0011F2  B0D8               	btfsc	status,0,c
  4356  0011F4  D009               	goto	l3408
  4357                           
  4358                           ; BSR set to: 0
  4359  0011F6  0100               	movlb	0	; () banked
  4360  0011F8  6DB8               	negf	___awmod@dividend& (0+255),b
  4361  0011FA  0100               	movlb	0	; () banked
  4362  0011FC  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4363  0011FE  B0D8               	btfsc	status,0,c
  4364  001200  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4365                           
  4366                           ; BSR set to: 0
  4367  001202  0E01               	movlw	1
  4368  001204  0100               	movlb	0	; () banked
  4369  001206  6FBD               	movwf	___awmod@sign& (0+255),b
  4370  001208                     l3408:
  4371                           
  4372                           ; BSR set to: 0
  4373  001208  0100               	movlb	0	; () banked
  4374  00120A  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4375  00120C  0A80               	xorlw	128
  4376  00120E  6EF3               	movwf	prodl,c
  4377  001210  0E80               	movlw	128
  4378  001212  5CF3               	subwf	prodl,w,c
  4379  001214  0E00               	movlw	0
  4380  001216  B4D8               	btfsc	status,2,c
  4381  001218  5DBA               	subwf	___awmod@divisor& (0+255),w,b
  4382  00121A  B0D8               	btfsc	status,0,c
  4383  00121C  D006               	goto	l3412
  4384                           
  4385                           ; BSR set to: 0
  4386  00121E  0100               	movlb	0	; () banked
  4387  001220  6DBA               	negf	___awmod@divisor& (0+255),b
  4388  001222  0100               	movlb	0	; () banked
  4389  001224  1FBB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4390  001226  B0D8               	btfsc	status,0,c
  4391  001228  2BBB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4392  00122A                     l3412:
  4393                           
  4394                           ; BSR set to: 0
  4395  00122A  0100               	movlb	0	; () banked
  4396  00122C  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4397  00122E  11BA               	iorwf	___awmod@divisor& (0+255),w,b
  4398  001230  B4D8               	btfsc	status,2,c
  4399  001232  D026               	goto	l3428
  4400                           
  4401                           ; BSR set to: 0
  4402  001234  0E01               	movlw	1
  4403  001236  0100               	movlb	0	; () banked
  4404  001238  6FBC               	movwf	___awmod@counter& (0+255),b
  4405  00123A  D006               	goto	l3418
  4406  00123C                     l3416:
  4407                           
  4408                           ; BSR set to: 0
  4409  00123C  0100               	movlb	0	; () banked
  4410  00123E  90D8               	bcf	status,0,c
  4411  001240  37BA               	rlcf	___awmod@divisor& (0+255),f,b
  4412  001242  37BB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4413  001244  0100               	movlb	0	; () banked
  4414  001246  2BBC               	incf	___awmod@counter& (0+255),f,b
  4415  001248                     l3418:
  4416                           
  4417                           ; BSR set to: 0
  4418  001248  0100               	movlb	0	; () banked
  4419  00124A  AFBB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4420  00124C  D7F7               	goto	l3416
  4421  00124E                     l3420:
  4422                           
  4423                           ; BSR set to: 0
  4424  00124E  0100               	movlb	0	; () banked
  4425  001250  51BA               	movf	___awmod@divisor& (0+255),w,b
  4426  001252  0100               	movlb	0	; () banked
  4427  001254  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4428  001256  0100               	movlb	0	; () banked
  4429  001258  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4430  00125A  0100               	movlb	0	; () banked
  4431  00125C  59B9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4432  00125E  A0D8               	btfss	status,0,c
  4433  001260  D008               	goto	l3424
  4434                           
  4435                           ; BSR set to: 0
  4436  001262  0100               	movlb	0	; () banked
  4437  001264  51BA               	movf	___awmod@divisor& (0+255),w,b
  4438  001266  0100               	movlb	0	; () banked
  4439  001268  5FB8               	subwf	___awmod@dividend& (0+255),f,b
  4440  00126A  0100               	movlb	0	; () banked
  4441  00126C  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4442  00126E  0100               	movlb	0	; () banked
  4443  001270  5BB9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4444  001272                     l3424:
  4445                           
  4446                           ; BSR set to: 0
  4447  001272  0100               	movlb	0	; () banked
  4448  001274  90D8               	bcf	status,0,c
  4449  001276  33BB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4450  001278  33BA               	rrcf	___awmod@divisor& (0+255),f,b
  4451                           
  4452                           ; BSR set to: 0
  4453  00127A  0100               	movlb	0	; () banked
  4454  00127C  2FBC               	decfsz	___awmod@counter& (0+255),f,b
  4455  00127E  D7E7               	goto	l3420
  4456  001280                     l3428:
  4457                           
  4458                           ; BSR set to: 0
  4459  001280  0100               	movlb	0	; () banked
  4460  001282  51BD               	movf	___awmod@sign& (0+255),w,b
  4461  001284  B4D8               	btfsc	status,2,c
  4462  001286  D006               	goto	l3432
  4463                           
  4464                           ; BSR set to: 0
  4465  001288  0100               	movlb	0	; () banked
  4466  00128A  6DB8               	negf	___awmod@dividend& (0+255),b
  4467  00128C  0100               	movlb	0	; () banked
  4468  00128E  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4469  001290  B0D8               	btfsc	status,0,c
  4470  001292  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4471  001294                     l3432:
  4472                           
  4473                           ; BSR set to: 0
  4474  001294  C0B8  F0B8         	movff	___awmod@dividend,?___awmod
  4475  001298  C0B9  F0B9         	movff	___awmod@dividend+1,?___awmod+1
  4476  00129C  0012               	return	
  4477  00129E                     __end_of___awmod:
  4478                           	opt stack 0
  4479                           tblptru	equ	0xFF8
  4480                           tblptrh	equ	0xFF7
  4481                           tblptrl	equ	0xFF6
  4482                           tablat	equ	0xFF5
  4483                           prodh	equ	0xFF4
  4484                           prodl	equ	0xFF3
  4485                           intcon	equ	0xFF2
  4486                           intcon2	equ	0xFF1
  4487                           postinc0	equ	0xFEE
  4488                           wreg	equ	0xFE8
  4489                           indf1	equ	0xFE7
  4490                           fsr1h	equ	0xFE2
  4491                           fsr1l	equ	0xFE1
  4492                           indf2	equ	0xFDF
  4493                           postinc2	equ	0xFDE
  4494                           postdec2	equ	0xFDD
  4495                           fsr2h	equ	0xFDA
  4496                           fsr2l	equ	0xFD9
  4497                           status	equ	0xFD8
  4498                           
  4499 ;; *************** function _InterruptHandlerLow *****************
  4500 ;; Defined at:
  4501 ;;		line 133 in file "../src/interrupts.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  sendy_stuff    14   71[COMRAM] unsigned char [14]
  4506 ;; Return value:  Size  Location     Type
  4507 ;;		None               void
  4508 ;; Registers used:
  4509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4515 ;;      Params:         0       0       0       0       0
  4516 ;;      Locals:        14       0       0       0       0
  4517 ;;      Temps:         17       0       0       0       0
  4518 ;;      Totals:        31       0       0       0       0
  4519 ;;Total ram usage:       31 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    9
  4522 ;; This function calls:
  4523 ;;		_ToMainLow_sendmsg
  4524 ;;		_blink1
  4525 ;;		_uart_receive_interrupt_handler
  4526 ;;		_uart_transmit_interrupt_handler
  4527 ;;		i1_blip2
  4528 ;;		i1_blip3
  4529 ;; This function is called by:
  4530 ;;		Interrupt level 1
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	intcodelo
  4535  000018                     __pintcodelo:
  4536                           	opt stack 0
  4537  000018                     _InterruptHandlerLow:
  4538                           	opt stack 16
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;incstack = 0
  4542  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4543  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4544  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4545  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4546  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4547  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4548  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4549  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4550  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4551  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4552  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4553  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4554  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4555  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4556  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4557  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4558  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4559                           
  4560                           ;interrupts.c: 134: static unsigned long encoder_left=0;
  4561                           ;interrupts.c: 135: static unsigned long encoder_right=0;
  4562                           ;interrupts.c: 138: if (PIR1bits.TMR1IF) {
  4563  00005C  A09E               	btfss	3998,0,c	;volatile
  4564  00005E  D007               	goto	i1l4024
  4565                           
  4566                           ;interrupts.c: 139: PIR1bits.TMR1IF = 0;
  4567  000060  909E               	bcf	3998,0,c	;volatile
  4568                           
  4569                           ;interrupts.c: 143: encoder_right++;
  4570  000062  0E01               	movlw	1
  4571  000064  266C               	addwf	InterruptHandlerLow@encoder_right,f,c
  4572  000066  0E00               	movlw	0
  4573  000068  226D               	addwfc	InterruptHandlerLow@encoder_right+1,f,c
  4574  00006A  226E               	addwfc	InterruptHandlerLow@encoder_right+2,f,c
  4575  00006C  226F               	addwfc	InterruptHandlerLow@encoder_right+3,f,c
  4576  00006E                     i1l4024:
  4577                           
  4578                           ;interrupts.c: 146: }
  4579                           ;interrupts.c: 149: if (INTCONbits.TMR0IF) {
  4580  00006E  A4F2               	btfss	intcon,2,c	;volatile
  4581  000070  D00B               	goto	i1l4032
  4582                           
  4583                           ;interrupts.c: 150: INTCONbits.TMR0IF = 0;
  4584  000072  94F2               	bcf	intcon,2,c	;volatile
  4585                           
  4586                           ;interrupts.c: 152: blip2();
  4587  000074  EC70  F00E         	call	i1_blip2	;wreg free
  4588                           
  4589                           ;interrupts.c: 154: encoder_left++;
  4590  000078  0E01               	movlw	1
  4591  00007A  2668               	addwf	InterruptHandlerLow@encoder_left,f,c
  4592  00007C  0E00               	movlw	0
  4593  00007E  2269               	addwfc	InterruptHandlerLow@encoder_left+1,f,c
  4594  000080  226A               	addwfc	InterruptHandlerLow@encoder_left+2,f,c
  4595  000082  226B               	addwfc	InterruptHandlerLow@encoder_left+3,f,c
  4596                           
  4597                           ;interrupts.c: 156: blink1();
  4598  000084  EC79  F00E         	call	_blink1	;wreg free
  4599  000088                     i1l4032:
  4600                           
  4601                           ;interrupts.c: 159: }
  4602                           ;interrupts.c: 162: if (PIR1bits.RCIF) {
  4603  000088  AA9E               	btfss	3998,5,c	;volatile
  4604  00008A  D003               	goto	i1l4038
  4605                           
  4606                           ;interrupts.c: 163: PIR1bits.RCIF = 0;
  4607  00008C  9A9E               	bcf	3998,5,c	;volatile
  4608                           
  4609                           ;interrupts.c: 167: uart_receive_interrupt_handler();
  4610  00008E  EC01  F005         	call	_uart_receive_interrupt_handler	;wreg free
  4611  000092                     i1l4038:
  4612                           
  4613                           ;interrupts.c: 168: }
  4614                           ;interrupts.c: 172: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4615  000092  B89E               	btfsc	3998,4,c	;volatile
  4616  000094  A89D               	btfss	3997,4,c	;volatile
  4617  000096  D002               	goto	i1l4044
  4618                           
  4619                           ;interrupts.c: 173: {
  4620                           ;interrupts.c: 177: uart_transmit_interrupt_handler();
  4621  000098  ECB7  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4622  00009C                     i1l4044:
  4623                           
  4624                           ;interrupts.c: 181: }
  4625                           ;interrupts.c: 184: if( PIR1bits.ADIF )
  4626  00009C  AC9E               	btfss	3998,6,c	;volatile
  4627  00009E  D01C               	goto	i1l61
  4628                           
  4629                           ;interrupts.c: 185: {
  4630                           ;interrupts.c: 186: PIR1bits.ADIF = 0;
  4631  0000A0  9C9E               	bcf	3998,6,c	;volatile
  4632                           
  4633                           ;interrupts.c: 188: unsigned char sendy_stuff[14];
  4634                           ;interrupts.c: 191: sendy_stuff[2] = encoder_left >> 24;
  4635  0000A2  C06B  F04A         	movff	InterruptHandlerLow@encoder_left+3,InterruptHandlerLow@sendy_stuff+2
  4636                           
  4637                           ;interrupts.c: 192: sendy_stuff[3] = encoder_left >> 16;
  4638  0000A6  C06A  F04B         	movff	InterruptHandlerLow@encoder_left+2,InterruptHandlerLow@sendy_stuff+3
  4639                           
  4640                           ;interrupts.c: 193: sendy_stuff[4] = encoder_left >> 8;
  4641  0000AA  C069  F04C         	movff	InterruptHandlerLow@encoder_left+1,InterruptHandlerLow@sendy_stuff+4
  4642                           
  4643                           ;interrupts.c: 194: sendy_stuff[5] = encoder_left;
  4644  0000AE  C068  F04D         	movff	InterruptHandlerLow@encoder_left,InterruptHandlerLow@sendy_stuff+5
  4645                           
  4646                           ;interrupts.c: 195: sendy_stuff[6] = encoder_right >> 24;
  4647  0000B2  C06F  F04E         	movff	InterruptHandlerLow@encoder_right+3,InterruptHandlerLow@sendy_stuff+6
  4648                           
  4649                           ;interrupts.c: 196: sendy_stuff[7] = encoder_right >> 16;
  4650  0000B6  C06E  F04F         	movff	InterruptHandlerLow@encoder_right+2,InterruptHandlerLow@sendy_stuff+7
  4651                           
  4652                           ;interrupts.c: 197: sendy_stuff[8] = encoder_right >> 8;
  4653  0000BA  C06D  F050         	movff	InterruptHandlerLow@encoder_right+1,InterruptHandlerLow@sendy_stuff+8
  4654                           
  4655                           ;interrupts.c: 198: sendy_stuff[9] = encoder_right;
  4656  0000BE  C06C  F051         	movff	InterruptHandlerLow@encoder_right,InterruptHandlerLow@sendy_stuff+9
  4657                           
  4658                           ;interrupts.c: 200: ToMainLow_sendmsg(14,47,(void *) &sendy_stuff );
  4659  0000C2  0E2F               	movlw	47
  4660  0000C4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4661  0000C6  0E00               	movlw	high InterruptHandlerLow@sendy_stuff
  4662  0000C8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4663  0000CA  0E48               	movlw	low InterruptHandlerLow@sendy_stuff
  4664  0000CC  6E18               	movwf	ToMainLow_sendmsg@data,c
  4665  0000CE  0E0E               	movlw	14
  4666  0000D0  EC09  F00E         	call	_ToMainLow_sendmsg
  4667                           
  4668                           ;interrupts.c: 202: blip3();
  4669  0000D4  EC6C  F00E         	call	i1_blip3	;wreg free
  4670  0000D8                     i1l61:
  4671  0000D8  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4672  0000DC  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4673  0000E0  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4674  0000E4  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4675  0000E8  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4676  0000EC  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4677  0000F0  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4678  0000F4  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4679  0000F8  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4680  0000FC  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4681  000100  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4682  000104  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4683  000108  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4684  00010C  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4685  000110  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4686  000114  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4687  000118  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4688  00011C  0010               	retfie	
  4689  00011E                     __end_of_InterruptHandlerLow:
  4690                           	opt stack 0
  4691                           pclatu	equ	0xFFB
  4692                           pclath	equ	0xFFA
  4693                           tblptru	equ	0xFF8
  4694                           tblptrh	equ	0xFF7
  4695                           tblptrl	equ	0xFF6
  4696                           tablat	equ	0xFF5
  4697                           prodh	equ	0xFF4
  4698                           prodl	equ	0xFF3
  4699                           intcon	equ	0xFF2
  4700                           intcon2	equ	0xFF1
  4701                           postinc0	equ	0xFEE
  4702                           fsr0h	equ	0xFEA
  4703                           fsr0l	equ	0xFE9
  4704                           wreg	equ	0xFE8
  4705                           indf1	equ	0xFE7
  4706                           fsr1h	equ	0xFE2
  4707                           fsr1l	equ	0xFE1
  4708                           bsr	equ	0xFE0
  4709                           indf2	equ	0xFDF
  4710                           postinc2	equ	0xFDE
  4711                           postdec2	equ	0xFDD
  4712                           fsr2h	equ	0xFDA
  4713                           fsr2l	equ	0xFD9
  4714                           status	equ	0xFD8
  4715                           
  4716 ;; *************** function i1_blip3 *****************
  4717 ;; Defined at:
  4718 ;;		line 32 in file "../src/debug.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;		None
  4723 ;; Return value:  Size  Location     Type
  4724 ;;		None               void
  4725 ;; Registers used:
  4726 ;;		None
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4732 ;;      Params:         0       0       0       0       0
  4733 ;;      Locals:         0       0       0       0       0
  4734 ;;      Temps:          0       0       0       0       0
  4735 ;;      Totals:         0       0       0       0       0
  4736 ;;Total ram usage:        0 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:    5
  4739 ;; This function calls:
  4740 ;;		Nothing
  4741 ;; This function is called by:
  4742 ;;		_InterruptHandlerLow
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           	psect	text28
  4747  001CD8                     __ptext28:
  4748                           	opt stack 0
  4749  001CD8                     i1_blip3:
  4750                           	opt stack 19
  4751                           
  4752                           ;debug.c: 34: LATDbits.LD6 = 0;
  4753                           
  4754                           ;incstack = 0
  4755  001CD8  9C8C               	bcf	3980,6,c	;volatile
  4756                           
  4757                           ;debug.c: 35: LATDbits.LD6 = 1;
  4758  001CDA  8C8C               	bsf	3980,6,c	;volatile
  4759                           
  4760                           ;debug.c: 36: LATDbits.LD6 = 0;
  4761  001CDC  9C8C               	bcf	3980,6,c	;volatile
  4762  001CDE  0012               	return	
  4763  001CE0                     __end_ofi1_blip3:
  4764                           	opt stack 0
  4765                           pclatu	equ	0xFFB
  4766                           pclath	equ	0xFFA
  4767                           tblptru	equ	0xFF8
  4768                           tblptrh	equ	0xFF7
  4769                           tblptrl	equ	0xFF6
  4770                           tablat	equ	0xFF5
  4771                           prodh	equ	0xFF4
  4772                           prodl	equ	0xFF3
  4773                           intcon	equ	0xFF2
  4774                           intcon2	equ	0xFF1
  4775                           postinc0	equ	0xFEE
  4776                           fsr0h	equ	0xFEA
  4777                           fsr0l	equ	0xFE9
  4778                           wreg	equ	0xFE8
  4779                           indf1	equ	0xFE7
  4780                           fsr1h	equ	0xFE2
  4781                           fsr1l	equ	0xFE1
  4782                           bsr	equ	0xFE0
  4783                           indf2	equ	0xFDF
  4784                           postinc2	equ	0xFDE
  4785                           postdec2	equ	0xFDD
  4786                           fsr2h	equ	0xFDA
  4787                           fsr2l	equ	0xFD9
  4788                           status	equ	0xFD8
  4789                           
  4790 ;; *************** function i1_blip2 *****************
  4791 ;; Defined at:
  4792 ;;		line 25 in file "../src/debug.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;		None               void
  4799 ;; Registers used:
  4800 ;;		None
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4806 ;;      Params:         0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    5
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_InterruptHandlerLow
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text29
  4821  001CE0                     __ptext29:
  4822                           	opt stack 0
  4823  001CE0                     i1_blip2:
  4824                           	opt stack 19
  4825                           
  4826                           ;debug.c: 27: LATDbits.LD5 = 0;
  4827                           
  4828                           ;incstack = 0
  4829  001CE0  9A8C               	bcf	3980,5,c	;volatile
  4830                           
  4831                           ;debug.c: 28: LATDbits.LD5 = 1;
  4832  001CE2  8A8C               	bsf	3980,5,c	;volatile
  4833                           
  4834                           ;debug.c: 29: LATDbits.LD5 = 0;
  4835  001CE4  9A8C               	bcf	3980,5,c	;volatile
  4836  001CE6  0012               	return	
  4837  001CE8                     __end_ofi1_blip2:
  4838                           	opt stack 0
  4839                           pclatu	equ	0xFFB
  4840                           pclath	equ	0xFFA
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           intcon2	equ	0xFF1
  4849                           postinc0	equ	0xFEE
  4850                           fsr0h	equ	0xFEA
  4851                           fsr0l	equ	0xFE9
  4852                           wreg	equ	0xFE8
  4853                           indf1	equ	0xFE7
  4854                           fsr1h	equ	0xFE2
  4855                           fsr1l	equ	0xFE1
  4856                           bsr	equ	0xFE0
  4857                           indf2	equ	0xFDF
  4858                           postinc2	equ	0xFDE
  4859                           postdec2	equ	0xFDD
  4860                           fsr2h	equ	0xFDA
  4861                           fsr2l	equ	0xFD9
  4862                           status	equ	0xFD8
  4863                           
  4864 ;; *************** function _uart_transmit_interrupt_handler *****************
  4865 ;; Defined at:
  4866 ;;		line 200 in file "../src/my_uart.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  message_stat    1   34[COMRAM] char 
  4871 ;;  data            4   29[COMRAM] unsigned char [4]
  4872 ;;  msgtype         1   33[COMRAM] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;		None               void
  4875 ;; Registers used:
  4876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4882 ;;      Params:         0       0       0       0       0
  4883 ;;      Locals:         6       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0
  4885 ;;      Totals:         6       0       0       0       0
  4886 ;;Total ram usage:        6 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    8
  4889 ;; This function calls:
  4890 ;;		_FromMainLow_recvmsg
  4891 ;; This function is called by:
  4892 ;;		_InterruptHandlerLow
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text30
  4897  00156E                     __ptext30:
  4898                           	opt stack 0
  4899  00156E                     _uart_transmit_interrupt_handler:
  4900                           	opt stack 16
  4901                           
  4902                           ;my_uart.c: 203: static unsigned char done = 1;
  4903                           ;my_uart.c: 204: static unsigned char index = 0;
  4904                           ;my_uart.c: 206: unsigned char data[4];
  4905                           ;my_uart.c: 209: unsigned char msgtype = 31;
  4906                           
  4907                           ;incstack = 0
  4908  00156E  0E1F               	movlw	31
  4909  001570  6E22               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4910                           
  4911                           ;my_uart.c: 211: if( done )
  4912  001572  5079               	movf	uart_transmit_interrupt_handler@done,w,c
  4913  001574  B4D8               	btfsc	status,2,c
  4914  001576  D02C               	goto	i1l3950
  4915                           
  4916                           ;my_uart.c: 212: {
  4917                           ;my_uart.c: 213: signed char message_status = FromMainLow_recvmsg(4,&msgtype, (void*)dat
      +                          a );
  4918  001578  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4919  00157A  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4920  00157C  0E22               	movlw	low uart_transmit_interrupt_handler@msgtype
  4921  00157E  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4922  001580  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4923  001582  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4924  001584  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4925  001586  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4926  001588  0E04               	movlw	4
  4927  00158A  ECF5  F00D         	call	_FromMainLow_recvmsg
  4928  00158E  6E23               	movwf	uart_transmit_interrupt_handler@message_status,c
  4929                           
  4930                           ;my_uart.c: 215: if( message_status == -4)
  4931  001590  5023               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4932  001592  0AFC               	xorlw	252
  4933  001594  A4D8               	btfss	status,2,c
  4934  001596  D002               	goto	i1l3926
  4935                           
  4936                           ;my_uart.c: 216: {
  4937                           ;my_uart.c: 218: PIE1bits.TX1IE = 0;
  4938  001598  989D               	bcf	3997,4,c	;volatile
  4939                           
  4940                           ;my_uart.c: 219: }
  4941  00159A  0012               	return	
  4942  00159C                     i1l3926:
  4943                           
  4944                           ;my_uart.c: 220: else if( message_status > 0 )
  4945  00159C  5023               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4946  00159E  0A80               	xorlw	128
  4947  0015A0  0F7F               	addlw	-129
  4948  0015A2  A0D8               	btfss	status,0,c
  4949  0015A4  0012               	return	
  4950                           
  4951                           ;my_uart.c: 221: {
  4952                           ;my_uart.c: 223: index = 0;
  4953  0015A6  0E00               	movlw	0
  4954  0015A8  6E78               	movwf	uart_transmit_interrupt_handler@index,c
  4955                           
  4956                           ;my_uart.c: 224: done = 0;
  4957  0015AA  0E00               	movlw	0
  4958  0015AC  6E79               	movwf	uart_transmit_interrupt_handler@done,c
  4959                           
  4960                           ;my_uart.c: 226: TXREG1 = data[index];
  4961  0015AE  5078               	movf	uart_transmit_interrupt_handler@index,w,c
  4962  0015B0  0D01               	mullw	1
  4963  0015B2  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4964  0015B4  24F3               	addwf	prodl,w,c
  4965  0015B6  6ED9               	movwf	fsr2l,c
  4966  0015B8  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4967  0015BA  20F4               	addwfc	prodh,w,c
  4968  0015BC  6EDA               	movwf	fsr2h,c
  4969  0015BE  50DF               	movf	indf2,w,c
  4970  0015C0  6EAD               	movwf	4013,c	;volatile
  4971                           
  4972                           ;my_uart.c: 227: index++;
  4973  0015C2  2A78               	incf	uart_transmit_interrupt_handler@index,f,c
  4974                           
  4975                           ;my_uart.c: 228: if( index >= 4 )
  4976  0015C4  0E03               	movlw	3
  4977  0015C6  6478               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4978  0015C8  0012               	return	
  4979                           
  4980                           ;my_uart.c: 229: {
  4981                           ;my_uart.c: 230: done = 1;
  4982  0015CA  0E01               	movlw	1
  4983  0015CC  6E79               	movwf	uart_transmit_interrupt_handler@done,c
  4984  0015CE  0012               	return	
  4985  0015D0                     i1l3950:
  4986                           
  4987                           ;my_uart.c: 247: else
  4988                           ;my_uart.c: 248: {
  4989                           ;my_uart.c: 250: TXREG1 = data[index];
  4990  0015D0  5078               	movf	uart_transmit_interrupt_handler@index,w,c
  4991  0015D2  0D01               	mullw	1
  4992  0015D4  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4993  0015D6  24F3               	addwf	prodl,w,c
  4994  0015D8  6ED9               	movwf	fsr2l,c
  4995  0015DA  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4996  0015DC  20F4               	addwfc	prodh,w,c
  4997  0015DE  6EDA               	movwf	fsr2h,c
  4998  0015E0  50DF               	movf	indf2,w,c
  4999  0015E2  6EAD               	movwf	4013,c	;volatile
  5000                           
  5001                           ;my_uart.c: 251: index++;
  5002  0015E4  2A78               	incf	uart_transmit_interrupt_handler@index,f,c
  5003                           
  5004                           ;my_uart.c: 252: if( index >= 4 )
  5005  0015E6  0E03               	movlw	3
  5006  0015E8  6478               	cpfsgt	uart_transmit_interrupt_handler@index,c
  5007  0015EA  0012               	return	
  5008                           
  5009                           ;my_uart.c: 253: {
  5010                           ;my_uart.c: 254: done = 1;
  5011  0015EC  0E01               	movlw	1
  5012  0015EE  6E79               	movwf	uart_transmit_interrupt_handler@done,c
  5013  0015F0  0012               	return	
  5014  0015F2                     __end_of_uart_transmit_interrupt_handler:
  5015                           	opt stack 0
  5016                           pclatu	equ	0xFFB
  5017                           pclath	equ	0xFFA
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           prodh	equ	0xFF4
  5023                           prodl	equ	0xFF3
  5024                           intcon	equ	0xFF2
  5025                           intcon2	equ	0xFF1
  5026                           postinc0	equ	0xFEE
  5027                           fsr0h	equ	0xFEA
  5028                           fsr0l	equ	0xFE9
  5029                           wreg	equ	0xFE8
  5030                           indf1	equ	0xFE7
  5031                           fsr1h	equ	0xFE2
  5032                           fsr1l	equ	0xFE1
  5033                           bsr	equ	0xFE0
  5034                           indf2	equ	0xFDF
  5035                           postinc2	equ	0xFDE
  5036                           postdec2	equ	0xFDD
  5037                           fsr2h	equ	0xFDA
  5038                           fsr2l	equ	0xFD9
  5039                           status	equ	0xFD8
  5040                           
  5041 ;; *************** function _FromMainLow_recvmsg *****************
  5042 ;; Defined at:
  5043 ;;		line 159 in file "../src/messages.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  maxlength       1    wreg     unsigned char 
  5046 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5047 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5048 ;;  data            2   26[COMRAM] PTR void 
  5049 ;;		 -> uart_transmit_interrupt_handler@data(4), 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  maxlength       1   28[COMRAM] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      char 
  5054 ;; Registers used:
  5055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5061 ;;      Params:         4       0       0       0       0
  5062 ;;      Locals:         1       0       0       0       0
  5063 ;;      Temps:          0       0       0       0       0
  5064 ;;      Totals:         5       0       0       0       0
  5065 ;;Total ram usage:        5 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    7
  5068 ;; This function calls:
  5069 ;;		i1_recv_msg
  5070 ;; This function is called by:
  5071 ;;		_uart_transmit_interrupt_handler
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text31
  5076  001BEA                     __ptext31:
  5077                           	opt stack 0
  5078  001BEA                     _FromMainLow_recvmsg:
  5079                           	opt stack 16
  5080                           
  5081                           ;incstack = 0
  5082                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5083  001BEA  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5084                           
  5085                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5086  001BEC  0102               	movlb	2	; () banked
  5087  001BEE  0E02               	movlw	high _FromMainLow_MQ
  5088  001BF0  6E0C               	movwf	i1recv_msg@qptr+1,c
  5089  001BF2  0102               	movlb	2	; () banked
  5090  001BF4  0E00               	movlw	low _FromMainLow_MQ
  5091  001BF6  6E0B               	movwf	i1recv_msg@qptr,c
  5092  001BF8  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5093  001BFC  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5094  001C00  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5095  001C04  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5096  001C08  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5097  001C0C  EC14  F008         	call	i1_recv_msg	;wreg free
  5098  001C10  0012               	return	
  5099  001C12                     __end_of_FromMainLow_recvmsg:
  5100                           	opt stack 0
  5101                           pclatu	equ	0xFFB
  5102                           pclath	equ	0xFFA
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           intcon	equ	0xFF2
  5110                           intcon2	equ	0xFF1
  5111                           postinc0	equ	0xFEE
  5112                           fsr0h	equ	0xFEA
  5113                           fsr0l	equ	0xFE9
  5114                           wreg	equ	0xFE8
  5115                           indf1	equ	0xFE7
  5116                           fsr1h	equ	0xFE2
  5117                           fsr1l	equ	0xFE1
  5118                           bsr	equ	0xFE0
  5119                           indf2	equ	0xFDF
  5120                           postinc2	equ	0xFDE
  5121                           postdec2	equ	0xFDD
  5122                           fsr2h	equ	0xFDA
  5123                           fsr2l	equ	0xFD9
  5124                           status	equ	0xFD8
  5125                           
  5126 ;; *************** function i1_recv_msg *****************
  5127 ;; Defined at:
  5128 ;;		line 63 in file "../src/messages.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5131 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5132 ;;  maxlength       1   12[COMRAM] unsigned char 
  5133 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5134 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  5135 ;;  data            2   15[COMRAM] PTR void 
  5136 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5139 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5140 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5141 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5142 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      char 
  5145 ;; Registers used:
  5146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5152 ;;      Params:         7       0       0       0       0
  5153 ;;      Locals:         5       0       0       0       0
  5154 ;;      Temps:          2       0       0       0       0
  5155 ;;      Totals:        14       0       0       0       0
  5156 ;;Total ram usage:       14 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    6
  5159 ;; This function calls:
  5160 ;;		i1___awmod
  5161 ;;		i1_memcpy
  5162 ;; This function is called by:
  5163 ;;		_FromMainLow_recvmsg
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text32
  5168  001028                     __ptext32:
  5169                           	opt stack 0
  5170  001028                     i1_recv_msg:
  5171                           	opt stack 16
  5172                           
  5173                           ;messages.c: 64: unsigned char slot;
  5174                           ;messages.c: 68: msg *qmsg;
  5175                           ;messages.c: 69: size_t tlength;
  5176                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5177                           
  5178                           ;incstack = 0
  5179  001028  EE20 F056          	lfsr	2,86
  5180  00102C  500B               	movf	i1recv_msg@qptr,w,c
  5181  00102E  26D9               	addwf	fsr2l,f,c
  5182  001030  500C               	movf	i1recv_msg@qptr+1,w,c
  5183  001032  22DA               	addwfc	fsr2h,f,c
  5184  001034  50DF               	movf	indf2,w,c
  5185  001036  6E14               	movwf	i1recv_msg@slot,c
  5186                           
  5187                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5188  001038  5014               	movf	i1recv_msg@slot,w,c
  5189  00103A  0D11               	mullw	17
  5190  00103C  50F3               	movf	prodl,w,c
  5191  00103E  240B               	addwf	i1recv_msg@qptr,w,c
  5192  001040  6E17               	movwf	i1recv_msg@qmsg,c
  5193  001042  50F4               	movf	prodh,w,c
  5194  001044  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5195  001046  6E18               	movwf	i1recv_msg@qmsg+1,c
  5196                           
  5197                           ;messages.c: 74: if (qmsg->full == 1) {
  5198  001048  0E01               	movlw	1
  5199  00104A  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5200  00104E  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5201  001052  62DF               	cpfseq	indf2,c
  5202  001054  D05B               	goto	i1l3540
  5203                           
  5204                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5205  001056  EE20 F001          	lfsr	2,1
  5206  00105A  5017               	movf	i1recv_msg@qmsg,w,c
  5207  00105C  26D9               	addwf	fsr2l,f,c
  5208  00105E  5018               	movf	i1recv_msg@qmsg+1,w,c
  5209  001060  22DA               	addwfc	fsr2h,f,c
  5210  001062  50DF               	movf	indf2,w,c
  5211  001064  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5212  001066  B0D8               	btfsc	status,0,c
  5213  001068  D002               	goto	i1l3524
  5214                           
  5215                           ;messages.c: 77: return (-3);
  5216  00106A  0EFD               	movlw	253
  5217  00106C  0012               	return	
  5218  00106E                     i1l3524:
  5219                           
  5220                           ;messages.c: 78: }
  5221                           ;messages.c: 80: tlength = qmsg->length;
  5222  00106E  EE20 F001          	lfsr	2,1
  5223  001072  5017               	movf	i1recv_msg@qmsg,w,c
  5224  001074  26D9               	addwf	fsr2l,f,c
  5225  001076  5018               	movf	i1recv_msg@qmsg+1,w,c
  5226  001078  22DA               	addwfc	fsr2h,f,c
  5227  00107A  50DF               	movf	indf2,w,c
  5228  00107C  6E12               	movwf	??i1_recv_msg& (0+255),c
  5229  00107E  5012               	movf	??i1_recv_msg,w,c
  5230  001080  6E15               	movwf	i1recv_msg@tlength,c
  5231  001082  6A16               	clrf	i1recv_msg@tlength+1,c
  5232                           
  5233                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5234  001084  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5235  001088  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5236  00108C  0E03               	movlw	3
  5237  00108E  2417               	addwf	i1recv_msg@qmsg,w,c
  5238  001090  6E12               	movwf	??i1_recv_msg& (0+255),c
  5239  001092  0E00               	movlw	0
  5240  001094  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5241  001096  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5242  001098  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5243  00109C  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5244  0010A0  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5245  0010A4  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5246  0010A8  ECF3  F00C         	call	i1_memcpy	;wreg free
  5247                           
  5248                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5249  0010AC  EE20 F056          	lfsr	2,86
  5250  0010B0  500B               	movf	i1recv_msg@qptr,w,c
  5251  0010B2  26D9               	addwf	fsr2l,f,c
  5252  0010B4  500C               	movf	i1recv_msg@qptr+1,w,c
  5253  0010B6  22DA               	addwfc	fsr2h,f,c
  5254  0010B8  EE10 F056          	lfsr	1,86
  5255  0010BC  500B               	movf	i1recv_msg@qptr,w,c
  5256  0010BE  26E1               	addwf	fsr1l,f,c
  5257  0010C0  500C               	movf	i1recv_msg@qptr+1,w,c
  5258  0010C2  22E2               	addwfc	fsr1h,f,c
  5259  0010C4  50E7               	movf	indf1,w,c
  5260  0010C6  6E12               	movwf	??i1_recv_msg& (0+255),c
  5261  0010C8  0E01               	movlw	1
  5262  0010CA  2412               	addwf	??i1_recv_msg,w,c
  5263  0010CC  6E01               	movwf	i1___awmod@dividend,c
  5264  0010CE  6A02               	clrf	i1___awmod@dividend+1,c
  5265  0010D0  0E00               	movlw	0
  5266  0010D2  2202               	addwfc	i1___awmod@dividend+1,f,c
  5267  0010D4  0E00               	movlw	0
  5268  0010D6  6E04               	movwf	i1___awmod@divisor+1,c
  5269  0010D8  0E05               	movlw	5
  5270  0010DA  6E03               	movwf	i1___awmod@divisor,c
  5271  0010DC  EC6F  F00A         	call	i1___awmod	;wreg free
  5272  0010E0  5001               	movf	?i1___awmod,w,c
  5273  0010E2  6EDF               	movwf	indf2,c
  5274                           
  5275                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5276  0010E4  EE20 F002          	lfsr	2,2
  5277  0010E8  5017               	movf	i1recv_msg@qmsg,w,c
  5278  0010EA  26D9               	addwf	fsr2l,f,c
  5279  0010EC  5018               	movf	i1recv_msg@qmsg+1,w,c
  5280  0010EE  22DA               	addwfc	fsr2h,f,c
  5281  0010F0  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5282  0010F4  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5283  0010F8  CFDF FFE7          	movff	indf2,indf1
  5284                           
  5285                           ;messages.c: 91: qmsg->full = 0;
  5286  0010FC  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5287  001100  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5288  001104  0E00               	movlw	0
  5289  001106  6EDF               	movwf	indf2,c
  5290                           
  5291                           ;messages.c: 92: return (tlength);
  5292  001108  5015               	movf	i1recv_msg@tlength,w,c
  5293  00110A  0012               	return	
  5294  00110C                     i1l3540:
  5295                           
  5296                           ;messages.c: 94: return (-4);
  5297  00110C  0EFC               	movlw	252
  5298  00110E  0012               	return	
  5299  001110                     __end_ofi1_recv_msg:
  5300                           	opt stack 0
  5301                           pclatu	equ	0xFFB
  5302                           pclath	equ	0xFFA
  5303                           tblptru	equ	0xFF8
  5304                           tblptrh	equ	0xFF7
  5305                           tblptrl	equ	0xFF6
  5306                           tablat	equ	0xFF5
  5307                           prodh	equ	0xFF4
  5308                           prodl	equ	0xFF3
  5309                           intcon	equ	0xFF2
  5310                           intcon2	equ	0xFF1
  5311                           postinc0	equ	0xFEE
  5312                           fsr0h	equ	0xFEA
  5313                           fsr0l	equ	0xFE9
  5314                           wreg	equ	0xFE8
  5315                           indf1	equ	0xFE7
  5316                           fsr1h	equ	0xFE2
  5317                           fsr1l	equ	0xFE1
  5318                           bsr	equ	0xFE0
  5319                           indf2	equ	0xFDF
  5320                           postinc2	equ	0xFDE
  5321                           postdec2	equ	0xFDD
  5322                           fsr2h	equ	0xFDA
  5323                           fsr2l	equ	0xFD9
  5324                           status	equ	0xFD8
  5325                           
  5326 ;; *************** function _uart_receive_interrupt_handler *****************
  5327 ;; Defined at:
  5328 ;;		line 61 in file "../src/my_uart.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5333 ;;  message_coun    1   50[COMRAM] unsigned char 
  5334 ;;  status          1   42[COMRAM] unsigned char 
  5335 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5336 ;;  msg_id          1   51[COMRAM] unsigned char 
  5337 ;;  status          1   43[COMRAM] unsigned char 
  5338 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5339 ;;  bad_counter_    2   44[COMRAM] unsigned char [2]
  5340 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5341 ;;  i               2   52[COMRAM] int 
  5342 ;;  checksum        1   46[COMRAM] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;		None               void
  5345 ;; Registers used:
  5346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5352 ;;      Params:         0       0       0       0       0
  5353 ;;      Locals:        26       0       0       0       0
  5354 ;;      Temps:          2       0       0       0       0
  5355 ;;      Totals:        28       0       0       0       0
  5356 ;;Total ram usage:       28 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    8
  5359 ;; This function calls:
  5360 ;;		_ToMainLow_sendmsg
  5361 ;; This function is called by:
  5362 ;;		_InterruptHandlerLow
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text33
  5367  000A02                     __ptext33:
  5368                           	opt stack 0
  5369  000A02                     _uart_receive_interrupt_handler:
  5370                           	opt stack 16
  5371                           
  5372                           ;my_uart.c: 64: static unsigned char frame[(14 + 2 + 2)];
  5373                           ;my_uart.c: 65: static unsigned char index = 0;
  5374                           ;my_uart.c: 66: static unsigned char done = 0;
  5375                           ;my_uart.c: 67: static unsigned char received_counter = 0;
  5376                           ;my_uart.c: 69: static unsigned char start_byte_bad = 0;
  5377                           ;my_uart.c: 70: static unsigned char error = 0;
  5378                           ;my_uart.c: 72: if(!done)
  5379                           
  5380                           ;incstack = 0
  5381  000A02  6673               	tstfsz	uart_receive_interrupt_handler@done,c
  5382  000A04  D03B               	goto	i1l3860
  5383                           
  5384                           ;my_uart.c: 73: {
  5385                           ;my_uart.c: 74: frame[index] = RCREG1;
  5386  000A06  5075               	movf	uart_receive_interrupt_handler@index,w,c
  5387  000A08  0D01               	mullw	1
  5388  000A0A  0E56               	movlw	low uart_receive_interrupt_handler@frame
  5389  000A0C  24F3               	addwf	prodl,w,c
  5390  000A0E  6ED9               	movwf	fsr2l,c
  5391  000A10  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5392  000A12  20F4               	addwfc	prodh,w,c
  5393  000A14  6EDA               	movwf	fsr2h,c
  5394  000A16  CFAE FFDF          	movff	4014,indf2	;volatile
  5395                           
  5396                           ;my_uart.c: 78: }
  5397                           ;my_uart.c: 79: if( index == 0 )
  5398                           
  5399                           ;my_uart.c: 76: {
  5400  000A1A  6675               	tstfsz	uart_receive_interrupt_handler@index,c
  5401  000A1C  D018               	goto	i1l3846
  5402                           
  5403                           ;my_uart.c: 80: {
  5404                           ;my_uart.c: 81: if( frame[0] != 0xff )
  5405  000A1E  2856               	incf	uart_receive_interrupt_handler@frame,w,c
  5406  000A20  B4D8               	btfsc	status,2,c
  5407  000A22  D012               	goto	i1l3844
  5408                           
  5409                           ;my_uart.c: 82: {
  5410                           ;my_uart.c: 83: if( !start_byte_bad )
  5411  000A24  6677               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5412  000A26  D00D               	goto	i1l3838
  5413                           
  5414                           ;my_uart.c: 84: {
  5415                           ;my_uart.c: 85: start_byte_bad = 1;
  5416  000A28  0E01               	movlw	1
  5417  000A2A  6E77               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5418                           
  5419                           ;my_uart.c: 86: unsigned char bad_start_id = received_counter;
  5420  000A2C  C076  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5421                           
  5422                           ;my_uart.c: 87: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5423  000A30  0E22               	movlw	34
  5424  000A32  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5425  000A34  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5426  000A36  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5427  000A38  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5428  000A3A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5429  000A3C  0E01               	movlw	1
  5430  000A3E  EC09  F00E         	call	_ToMainLow_sendmsg
  5431  000A42                     i1l3838:
  5432                           
  5433                           ;my_uart.c: 89: }
  5434                           ;my_uart.c: 90: index = 0;
  5435  000A42  0E00               	movlw	0
  5436  000A44  6E75               	movwf	uart_receive_interrupt_handler@index,c
  5437  000A46  0012               	return	
  5438  000A48                     i1l3844:
  5439                           
  5440                           ;my_uart.c: 93: else
  5441                           ;my_uart.c: 94: {
  5442                           ;my_uart.c: 95: start_byte_bad = 0;
  5443  000A48  0E00               	movlw	0
  5444  000A4A  6E77               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5445  000A4C  D016               	goto	i1l3858
  5446  000A4E                     i1l3846:
  5447                           
  5448                           ;my_uart.c: 98: else if( index >= (14 + 2 + 2) - 1 )
  5449  000A4E  0E10               	movlw	16
  5450  000A50  6475               	cpfsgt	uart_receive_interrupt_handler@index,c
  5451  000A52  D013               	goto	i1l3858
  5452                           
  5453                           ;my_uart.c: 99: {
  5454                           ;my_uart.c: 100: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5455  000A54  5067               	movf	uart_receive_interrupt_handler@frame+17,w,c
  5456  000A56  0AFE               	xorlw	254
  5457  000A58  B4D8               	btfsc	status,2,c
  5458  000A5A  D00F               	goto	i1l3858
  5459                           
  5460                           ;my_uart.c: 101: {
  5461                           ;my_uart.c: 103: index = 0;
  5462  000A5C  0E00               	movlw	0
  5463  000A5E  6E75               	movwf	uart_receive_interrupt_handler@index,c
  5464                           
  5465                           ;my_uart.c: 106: unsigned char bad_end_id = received_counter;
  5466  000A60  C076  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5467                           
  5468                           ;my_uart.c: 107: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5469  000A64  0E23               	movlw	35
  5470  000A66  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5471  000A68  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5472  000A6A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5473  000A6C  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5474  000A6E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5475  000A70  0E01               	movlw	1
  5476  000A72  EC09  F00E         	call	_ToMainLow_sendmsg
  5477                           
  5478                           ;my_uart.c: 108: error = 1;
  5479  000A76  0E01               	movlw	1
  5480  000A78  6E74               	movwf	uart_receive_interrupt_handler@error,c
  5481  000A7A                     i1l3858:
  5482                           
  5483                           ;my_uart.c: 109: }
  5484                           ;my_uart.c: 110: }
  5485                           ;my_uart.c: 111: index++;
  5486  000A7A  2A75               	incf	uart_receive_interrupt_handler@index,f,c
  5487  000A7C                     i1l3860:
  5488                           
  5489                           ;my_uart.c: 112: }
  5490                           ;my_uart.c: 114: if( index >= (14 + 2 + 2) )
  5491  000A7C  0E11               	movlw	17
  5492  000A7E  6475               	cpfsgt	uart_receive_interrupt_handler@index,c
  5493  000A80  0012               	return	
  5494                           
  5495                           ;my_uart.c: 115: {
  5496                           ;my_uart.c: 116: index = 0;
  5497  000A82  0E00               	movlw	0
  5498  000A84  6E75               	movwf	uart_receive_interrupt_handler@index,c
  5499                           
  5500                           ;my_uart.c: 118: if( received_counter != frame[1] )
  5501  000A86  5057               	movf	uart_receive_interrupt_handler@frame+1,w,c
  5502  000A88  1876               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5503  000A8A  B4D8               	btfsc	status,2,c
  5504  000A8C  D00F               	goto	i1l3870
  5505                           
  5506                           ;my_uart.c: 119: {
  5507                           ;my_uart.c: 121: unsigned char bad_counter_id[2];
  5508                           ;my_uart.c: 122: bad_counter_id[0] = received_counter;
  5509  000A8E  C076  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5510                           
  5511                           ;my_uart.c: 123: bad_counter_id[1] = frame[1];
  5512  000A92  C057  F02E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5513                           
  5514                           ;my_uart.c: 124: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5515  000A96  0E21               	movlw	33
  5516  000A98  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5517  000A9A  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5518  000A9C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5519  000A9E  0E2D               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5520  000AA0  6E18               	movwf	ToMainLow_sendmsg@data,c
  5521  000AA2  0E02               	movlw	2
  5522  000AA4  EC09  F00E         	call	_ToMainLow_sendmsg
  5523                           
  5524                           ;my_uart.c: 125: error = 1;
  5525  000AA8  0E01               	movlw	1
  5526  000AAA  6E74               	movwf	uart_receive_interrupt_handler@error,c
  5527  000AAC                     i1l3870:
  5528                           
  5529                           ;my_uart.c: 126: }
  5530                           ;my_uart.c: 129: unsigned char gooey_uart_center[14];
  5531                           ;my_uart.c: 130: unsigned char checksum = 0;
  5532  000AAC  0E00               	movlw	0
  5533  000AAE  6E2F               	movwf	uart_receive_interrupt_handler@checksum,c
  5534                           
  5535                           ;my_uart.c: 131: int i;
  5536                           ;my_uart.c: 132: for(i = 0; i < 14; i++)
  5537  000AB0  0E00               	movlw	0
  5538  000AB2  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5539  000AB4  0E00               	movlw	0
  5540  000AB6  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5541  000AB8  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5542  000ABA  0A80               	xorlw	128
  5543  000ABC  0F80               	addlw	-128
  5544  000ABE  0E0E               	movlw	14
  5545  000AC0  B4D8               	btfsc	status,2,c
  5546  000AC2  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5547  000AC4  B0D8               	btfsc	status,0,c
  5548  000AC6  D01F               	goto	i1l3886
  5549                           
  5550                           ;my_uart.c: 133: {
  5551                           ;my_uart.c: 134: gooey_uart_center[i] = frame[i+2];
  5552  000AC8  0E02               	movlw	2
  5553  000ACA  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5554  000ACC  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5555  000ACE  0E00               	movlw	0
  5556  000AD0  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5557  000AD2  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5558  000AD4  0E56               	movlw	low uart_receive_interrupt_handler@frame
  5559  000AD6  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5560  000AD8  6ED9               	movwf	fsr2l,c
  5561  000ADA  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5562  000ADC  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5563  000ADE  6EDA               	movwf	fsr2h,c
  5564  000AE0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5565  000AE2  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5566  000AE4  6EE1               	movwf	fsr1l,c
  5567  000AE6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5568  000AE8  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5569  000AEA  6EE2               	movwf	fsr1h,c
  5570  000AEC  CFDF FFE7          	movff	indf2,indf1
  5571                           
  5572                           ;my_uart.c: 135: checksum ^= gooey_uart_center[i];
  5573  000AF0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5574  000AF2  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5575  000AF4  6ED9               	movwf	fsr2l,c
  5576  000AF6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5577  000AF8  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5578  000AFA  6EDA               	movwf	fsr2h,c
  5579  000AFC  50DF               	movf	indf2,w,c
  5580  000AFE  1A2F               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5581  000B00  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5582  000B02  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5583  000B04  D7D9               	goto	L6
  5584  000B06                     i1l3886:
  5585                           
  5586                           ;my_uart.c: 136: }
  5587                           ;my_uart.c: 138: if( checksum != frame[(14 + 2 + 2) - 2] )
  5588  000B06  5066               	movf	uart_receive_interrupt_handler@frame+16,w,c
  5589  000B08  182F               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5590  000B0A  B4D8               	btfsc	status,2,c
  5591  000B0C  D00D               	goto	i1l3894
  5592                           
  5593                           ;my_uart.c: 139: {
  5594                           ;my_uart.c: 141: unsigned char bad_checksum_id = received_counter;
  5595  000B0E  C076  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5596                           
  5597                           ;my_uart.c: 142: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5598  000B12  0E20               	movlw	32
  5599  000B14  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5600  000B16  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5601  000B18  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5602  000B1A  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5603  000B1C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5604  000B1E  0E01               	movlw	1
  5605  000B20  EC09  F00E         	call	_ToMainLow_sendmsg
  5606                           
  5607                           ;my_uart.c: 143: error = 1;
  5608  000B24  0E01               	movlw	1
  5609  000B26  6E74               	movwf	uart_receive_interrupt_handler@error,c
  5610  000B28                     i1l3894:
  5611                           
  5612                           ;my_uart.c: 144: }
  5613                           ;my_uart.c: 149: if( !error )
  5614  000B28  6674               	tstfsz	uart_receive_interrupt_handler@error,c
  5615  000B2A  D02C               	goto	i1l3914
  5616                           
  5617                           ;my_uart.c: 150: {
  5618                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5619  000B2C  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5620                           
  5621                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5622  000B30  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5623  000B32  0A11               	xorlw	17
  5624  000B34  B4D8               	btfsc	status,2,c
  5625  000B36  D01C               	goto	i1l422
  5626  000B38  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5627  000B3A  0AF1               	xorlw	241
  5628  000B3C  B4D8               	btfsc	status,2,c
  5629  000B3E  D018               	goto	i1l422
  5630  000B40  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5631  000B42  0AF2               	xorlw	242
  5632  000B44  B4D8               	btfsc	status,2,c
  5633  000B46  D014               	goto	i1l422
  5634  000B48  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5635  000B4A  0AF3               	xorlw	243
  5636  000B4C  B4D8               	btfsc	status,2,c
  5637  000B4E  D010               	goto	i1l422
  5638  000B50  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5639  000B52  0AF4               	xorlw	244
  5640  000B54  B4D8               	btfsc	status,2,c
  5641  000B56  D00C               	goto	i1l422
  5642                           
  5643                           ;my_uart.c: 155: {
  5644                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5645  000B58  C076  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5646                           
  5647                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5648  000B5C  0E24               	movlw	36
  5649  000B5E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5650  000B60  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5651  000B62  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5652  000B64  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5653  000B66  6E18               	movwf	ToMainLow_sendmsg@data,c
  5654  000B68  0E01               	movlw	1
  5655  000B6A  EC09  F00E         	call	_ToMainLow_sendmsg
  5656  000B6E  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5657  000B70                     i1l422:
  5658                           
  5659                           ;my_uart.c: 158: }
  5660                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5661  000B70  0E1F               	movlw	31
  5662  000B72  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5663  000B74  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5664  000B76  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5665  000B78  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5666  000B7A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5667  000B7C  0E0E               	movlw	14
  5668  000B7E  EC09  F00E         	call	_ToMainLow_sendmsg
  5669  000B82  6E2C               	movwf	uart_receive_interrupt_handler@status_2003,c
  5670  000B84                     i1l3914:
  5671                           
  5672                           ;my_uart.c: 171: }
  5673                           ;my_uart.c: 172: }
  5674                           ;my_uart.c: 174: received_counter++;
  5675  000B84  2A76               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5676                           
  5677                           ;my_uart.c: 175: error = 0;
  5678  000B86  0E00               	movlw	0
  5679  000B88  6E74               	movwf	uart_receive_interrupt_handler@error,c
  5680  000B8A  0012               	return	
  5681  000B8C                     __end_of_uart_receive_interrupt_handler:
  5682                           	opt stack 0
  5683                           pclatu	equ	0xFFB
  5684                           pclath	equ	0xFFA
  5685                           tblptru	equ	0xFF8
  5686                           tblptrh	equ	0xFF7
  5687                           tblptrl	equ	0xFF6
  5688                           tablat	equ	0xFF5
  5689                           prodh	equ	0xFF4
  5690                           prodl	equ	0xFF3
  5691                           intcon	equ	0xFF2
  5692                           intcon2	equ	0xFF1
  5693                           postinc0	equ	0xFEE
  5694                           fsr0h	equ	0xFEA
  5695                           fsr0l	equ	0xFE9
  5696                           wreg	equ	0xFE8
  5697                           indf1	equ	0xFE7
  5698                           fsr1h	equ	0xFE2
  5699                           fsr1l	equ	0xFE1
  5700                           bsr	equ	0xFE0
  5701                           indf2	equ	0xFDF
  5702                           postinc2	equ	0xFDE
  5703                           postdec2	equ	0xFDD
  5704                           fsr2h	equ	0xFDA
  5705                           fsr2l	equ	0xFD9
  5706                           status	equ	0xFD8
  5707                           
  5708 ;; *************** function _ToMainLow_sendmsg *****************
  5709 ;; Defined at:
  5710 ;;		line 103 in file "../src/messages.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  length          1    wreg     unsigned char 
  5713 ;;  msgtype         1   22[COMRAM] unsigned char 
  5714 ;;  data            2   23[COMRAM] PTR void 
  5715 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5716 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), InterruptHandlerLow@sendy_stuff(14), 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  length          1   25[COMRAM] unsigned char 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      char 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5728 ;;      Params:         3       0       0       0       0
  5729 ;;      Locals:         1       0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0
  5731 ;;      Totals:         4       0       0       0       0
  5732 ;;Total ram usage:        4 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    7
  5735 ;; This function calls:
  5736 ;;		i1_send_msg
  5737 ;; This function is called by:
  5738 ;;		_InterruptHandlerLow
  5739 ;;		_uart_receive_interrupt_handler
  5740 ;;		_timer1_int_handler
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text34
  5745  001C12                     __ptext34:
  5746                           	opt stack 0
  5747  001C12                     _ToMainLow_sendmsg:
  5748                           	opt stack 16
  5749                           
  5750                           ;incstack = 0
  5751                           ;ToMainLow_sendmsg@length stored from wreg
  5752  001C12  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5753                           
  5754                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5755  001C14  0101               	movlb	1	; () banked
  5756  001C16  0E01               	movlw	high _ToMainLow_MQ
  5757  001C18  6E0C               	movwf	i1send_msg@qptr+1,c
  5758  001C1A  0101               	movlb	1	; () banked
  5759  001C1C  0E66               	movlw	low _ToMainLow_MQ
  5760  001C1E  6E0B               	movwf	i1send_msg@qptr,c
  5761  001C20  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5762  001C24  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5763  001C28  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5764  001C2C  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5765  001C30  ECB1  F009         	call	i1_send_msg	;wreg free
  5766  001C34  0012               	return	
  5767  001C36                     __end_of_ToMainLow_sendmsg:
  5768                           	opt stack 0
  5769                           pclatu	equ	0xFFB
  5770                           pclath	equ	0xFFA
  5771                           tblptru	equ	0xFF8
  5772                           tblptrh	equ	0xFF7
  5773                           tblptrl	equ	0xFF6
  5774                           tablat	equ	0xFF5
  5775                           prodh	equ	0xFF4
  5776                           prodl	equ	0xFF3
  5777                           intcon	equ	0xFF2
  5778                           intcon2	equ	0xFF1
  5779                           postinc0	equ	0xFEE
  5780                           fsr0h	equ	0xFEA
  5781                           fsr0l	equ	0xFE9
  5782                           wreg	equ	0xFE8
  5783                           indf1	equ	0xFE7
  5784                           fsr1h	equ	0xFE2
  5785                           fsr1l	equ	0xFE1
  5786                           bsr	equ	0xFE0
  5787                           indf2	equ	0xFDF
  5788                           postinc2	equ	0xFDE
  5789                           postdec2	equ	0xFDD
  5790                           fsr2h	equ	0xFDA
  5791                           fsr2l	equ	0xFD9
  5792                           status	equ	0xFD8
  5793                           
  5794 ;; *************** function i1_send_msg *****************
  5795 ;; Defined at:
  5796 ;;		line 24 in file "../src/messages.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5799 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5800 ;;  length          1   12[COMRAM] unsigned char 
  5801 ;;  msgtype         1   13[COMRAM] unsigned char 
  5802 ;;  data            2   14[COMRAM] PTR void 
  5803 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  5804 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  5805 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  5806 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5809 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5810 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5811 ;;  send_msg        2   17[COMRAM] unsigned int 
  5812 ;;  send_msg        1   19[COMRAM] unsigned char 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      char 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5822 ;;      Params:         6       0       0       0       0
  5823 ;;      Locals:         5       0       0       0       0
  5824 ;;      Temps:          1       0       0       0       0
  5825 ;;      Totals:        12       0       0       0       0
  5826 ;;Total ram usage:       12 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    6
  5829 ;; This function calls:
  5830 ;;		i1___awmod
  5831 ;;		i1_memcpy
  5832 ;; This function is called by:
  5833 ;;		_ToMainLow_sendmsg
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text35
  5838  001362                     __ptext35:
  5839                           	opt stack 0
  5840  001362                     i1_send_msg:
  5841                           	opt stack 16
  5842                           
  5843                           ;messages.c: 25: unsigned char slot;
  5844                           ;messages.c: 27: msg *qmsg;
  5845                           ;messages.c: 28: size_t tlength = length;
  5846                           
  5847                           ;incstack = 0
  5848  001362  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5849  001366  6A13               	clrf	i1send_msg@tlength+1,c
  5850                           
  5851                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5852  001368  EE20 F055          	lfsr	2,85
  5853  00136C  500B               	movf	i1send_msg@qptr,w,c
  5854  00136E  26D9               	addwf	fsr2l,f,c
  5855  001370  500C               	movf	i1send_msg@qptr+1,w,c
  5856  001372  22DA               	addwfc	fsr2h,f,c
  5857  001374  50DF               	movf	indf2,w,c
  5858  001376  6E14               	movwf	i1send_msg@slot,c
  5859                           
  5860                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5861  001378  5014               	movf	i1send_msg@slot,w,c
  5862  00137A  0D11               	mullw	17
  5863  00137C  50F3               	movf	prodl,w,c
  5864  00137E  240B               	addwf	i1send_msg@qptr,w,c
  5865  001380  6E15               	movwf	i1send_msg@qmsg,c
  5866  001382  50F4               	movf	prodh,w,c
  5867  001384  200C               	addwfc	i1send_msg@qptr+1,w,c
  5868  001386  6E16               	movwf	i1send_msg@qmsg+1,c
  5869                           
  5870                           ;messages.c: 41: if (qmsg->full != 0) {
  5871  001388  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5872  00138C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5873  001390  50DF               	movf	indf2,w,c
  5874  001392  B4D8               	btfsc	status,2,c
  5875  001394  D002               	goto	i1l3476
  5876                           
  5877                           ;messages.c: 42: return (-1);
  5878  001396  0EFF               	movlw	255
  5879  001398  0012               	return	
  5880  00139A                     i1l3476:
  5881                           
  5882                           ;messages.c: 43: }
  5883                           ;messages.c: 46: qmsg->length = length;
  5884  00139A  EE20 F001          	lfsr	2,1
  5885  00139E  5015               	movf	i1send_msg@qmsg,w,c
  5886  0013A0  26D9               	addwf	fsr2l,f,c
  5887  0013A2  5016               	movf	i1send_msg@qmsg+1,w,c
  5888  0013A4  22DA               	addwfc	fsr2h,f,c
  5889  0013A6  C00D  FFDF         	movff	i1send_msg@length,indf2
  5890                           
  5891                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5892  0013AA  EE20 F002          	lfsr	2,2
  5893  0013AE  5015               	movf	i1send_msg@qmsg,w,c
  5894  0013B0  26D9               	addwf	fsr2l,f,c
  5895  0013B2  5016               	movf	i1send_msg@qmsg+1,w,c
  5896  0013B4  22DA               	addwfc	fsr2h,f,c
  5897  0013B6  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5898                           
  5899                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5900  0013BA  0E03               	movlw	3
  5901  0013BC  2415               	addwf	i1send_msg@qmsg,w,c
  5902  0013BE  6E01               	movwf	i1memcpy@d1,c
  5903  0013C0  0E00               	movlw	0
  5904  0013C2  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5905  0013C4  6E02               	movwf	i1memcpy@d1+1,c
  5906  0013C6  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5907  0013CA  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5908  0013CE  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5909  0013D2  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5910  0013D6  ECF3  F00C         	call	i1_memcpy	;wreg free
  5911                           
  5912                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  5913  0013DA  EE20 F055          	lfsr	2,85
  5914  0013DE  500B               	movf	i1send_msg@qptr,w,c
  5915  0013E0  26D9               	addwf	fsr2l,f,c
  5916  0013E2  500C               	movf	i1send_msg@qptr+1,w,c
  5917  0013E4  22DA               	addwfc	fsr2h,f,c
  5918  0013E6  EE10 F055          	lfsr	1,85
  5919  0013EA  500B               	movf	i1send_msg@qptr,w,c
  5920  0013EC  26E1               	addwf	fsr1l,f,c
  5921  0013EE  500C               	movf	i1send_msg@qptr+1,w,c
  5922  0013F0  22E2               	addwfc	fsr1h,f,c
  5923  0013F2  50E7               	movf	indf1,w,c
  5924  0013F4  6E11               	movwf	??i1_send_msg& (0+255),c
  5925  0013F6  0E01               	movlw	1
  5926  0013F8  2411               	addwf	??i1_send_msg,w,c
  5927  0013FA  6E01               	movwf	i1___awmod@dividend,c
  5928  0013FC  6A02               	clrf	i1___awmod@dividend+1,c
  5929  0013FE  0E00               	movlw	0
  5930  001400  2202               	addwfc	i1___awmod@dividend+1,f,c
  5931  001402  0E00               	movlw	0
  5932  001404  6E04               	movwf	i1___awmod@divisor+1,c
  5933  001406  0E05               	movlw	5
  5934  001408  6E03               	movwf	i1___awmod@divisor,c
  5935  00140A  EC6F  F00A         	call	i1___awmod	;wreg free
  5936  00140E  5001               	movf	?i1___awmod,w,c
  5937  001410  6EDF               	movwf	indf2,c
  5938                           
  5939                           ;messages.c: 59: qmsg->full = 1;
  5940  001412  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5941  001416  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5942  00141A  0E01               	movlw	1
  5943  00141C  6EDF               	movwf	indf2,c
  5944                           
  5945                           ;messages.c: 60: return (1);
  5946  00141E  0E01               	movlw	1
  5947  001420  0012               	return	
  5948  001422                     __end_ofi1_send_msg:
  5949                           	opt stack 0
  5950                           pclatu	equ	0xFFB
  5951                           pclath	equ	0xFFA
  5952                           tblptru	equ	0xFF8
  5953                           tblptrh	equ	0xFF7
  5954                           tblptrl	equ	0xFF6
  5955                           tablat	equ	0xFF5
  5956                           prodh	equ	0xFF4
  5957                           prodl	equ	0xFF3
  5958                           intcon	equ	0xFF2
  5959                           intcon2	equ	0xFF1
  5960                           postinc0	equ	0xFEE
  5961                           fsr0h	equ	0xFEA
  5962                           fsr0l	equ	0xFE9
  5963                           wreg	equ	0xFE8
  5964                           indf1	equ	0xFE7
  5965                           fsr1h	equ	0xFE2
  5966                           fsr1l	equ	0xFE1
  5967                           bsr	equ	0xFE0
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function i1_memcpy *****************
  5976 ;; Defined at:
  5977 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  d1              2    0[COMRAM] PTR void 
  5980 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5981 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  5982 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  5983 ;;  s1              2    2[COMRAM] PTR const void 
  5984 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  5985 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  5986 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  5987 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  5988 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  5989 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  5990 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  5991 ;;  n               2    4[COMRAM] unsigned int 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5994 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  5995 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  5996 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  5997 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  5998 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  5999 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  6000 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  6001 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6002 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6003 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  6004 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  2    0[COMRAM] PTR void 
  6007 ;; Registers used:
  6008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6014 ;;      Params:         6       0       0       0       0
  6015 ;;      Locals:         4       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0
  6017 ;;      Totals:        10       0       0       0       0
  6018 ;;Total ram usage:       10 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    5
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		i1_send_msg
  6025 ;;		i1_recv_msg
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text36
  6030  0019E6                     __ptext36:
  6031                           	opt stack 0
  6032  0019E6                     i1_memcpy:
  6033                           	opt stack 16
  6034                           
  6035                           ;incstack = 0
  6036  0019E6  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6037  0019EA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6038  0019EE  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6039  0019F2  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6040  0019F6  D00E               	goto	i1l2372
  6041  0019F8                     i1l2366:
  6042  0019F8  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6043  0019FC  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6044  001A00  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6045  001A04  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6046  001A08  CFDF FFE7          	movff	indf2,indf1
  6047  001A0C  4A09               	infsnz	i1memcpy@s,f,c
  6048  001A0E  2A0A               	incf	i1memcpy@s+1,f,c
  6049  001A10  4A07               	infsnz	i1memcpy@d,f,c
  6050  001A12  2A08               	incf	i1memcpy@d+1,f,c
  6051  001A14                     i1l2372:
  6052  001A14  0605               	decf	i1memcpy@n,f,c
  6053  001A16  A0D8               	btfss	status,0,c
  6054  001A18  0606               	decf	i1memcpy@n+1,f,c
  6055  001A1A  2805               	incf	i1memcpy@n& (0+255),w,c
  6056  001A1C  B4D8               	btfsc	status,2,c
  6057  001A1E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6058  001A20  B4D8               	btfsc	status,2,c
  6059                           
  6060                           ;	Return value of i1_memcpy is never used
  6061  001A22  0012               	return	
  6062  001A24  D7E9               	goto	i1l2366
  6063  001A26                     __end_ofi1_memcpy:
  6064                           	opt stack 0
  6065                           pclatu	equ	0xFFB
  6066                           pclath	equ	0xFFA
  6067                           tblptru	equ	0xFF8
  6068                           tblptrh	equ	0xFF7
  6069                           tblptrl	equ	0xFF6
  6070                           tablat	equ	0xFF5
  6071                           prodh	equ	0xFF4
  6072                           prodl	equ	0xFF3
  6073                           intcon	equ	0xFF2
  6074                           intcon2	equ	0xFF1
  6075                           postinc0	equ	0xFEE
  6076                           fsr0h	equ	0xFEA
  6077                           fsr0l	equ	0xFE9
  6078                           wreg	equ	0xFE8
  6079                           indf1	equ	0xFE7
  6080                           fsr1h	equ	0xFE2
  6081                           fsr1l	equ	0xFE1
  6082                           bsr	equ	0xFE0
  6083                           indf2	equ	0xFDF
  6084                           postinc2	equ	0xFDE
  6085                           postdec2	equ	0xFDD
  6086                           fsr2h	equ	0xFDA
  6087                           fsr2l	equ	0xFD9
  6088                           status	equ	0xFD8
  6089                           
  6090 ;; *************** function i1___awmod *****************
  6091 ;; Defined at:
  6092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  dividend        2    0[COMRAM] int 
  6095 ;;  divisor         2    2[COMRAM] int 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  __awmod         1    5[COMRAM] unsigned char 
  6098 ;;  __awmod         1    4[COMRAM] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  2    0[COMRAM] int 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0, prodl
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6108 ;;      Params:         4       0       0       0       0
  6109 ;;      Locals:         2       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0
  6111 ;;      Totals:         6       0       0       0       0
  6112 ;;Total ram usage:        6 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    5
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		i1_send_msg
  6119 ;;		i1_recv_msg
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text37
  6124  0014DE                     __ptext37:
  6125                           	opt stack 0
  6126  0014DE                     i1___awmod:
  6127                           	opt stack 16
  6128                           
  6129                           ;incstack = 0
  6130  0014DE  0E00               	movlw	0
  6131  0014E0  6E06               	movwf	i1___awmod@sign,c
  6132  0014E2  5002               	movf	i1___awmod@dividend+1,w,c
  6133  0014E4  0A80               	xorlw	128
  6134  0014E6  6EF3               	movwf	prodl,c
  6135  0014E8  0E80               	movlw	128
  6136  0014EA  5CF3               	subwf	prodl,w,c
  6137  0014EC  0E00               	movlw	0
  6138  0014EE  B4D8               	btfsc	status,2,c
  6139  0014F0  5C01               	subwf	i1___awmod@dividend,w,c
  6140  0014F2  B0D8               	btfsc	status,0,c
  6141  0014F4  D006               	goto	i1l2392
  6142  0014F6  6C01               	negf	i1___awmod@dividend,c
  6143  0014F8  1E02               	comf	i1___awmod@dividend+1,f,c
  6144  0014FA  B0D8               	btfsc	status,0,c
  6145  0014FC  2A02               	incf	i1___awmod@dividend+1,f,c
  6146  0014FE  0E01               	movlw	1
  6147  001500  6E06               	movwf	i1___awmod@sign,c
  6148  001502                     i1l2392:
  6149  001502  5004               	movf	i1___awmod@divisor+1,w,c
  6150  001504  0A80               	xorlw	128
  6151  001506  6EF3               	movwf	prodl,c
  6152  001508  0E80               	movlw	128
  6153  00150A  5CF3               	subwf	prodl,w,c
  6154  00150C  0E00               	movlw	0
  6155  00150E  B4D8               	btfsc	status,2,c
  6156  001510  5C03               	subwf	i1___awmod@divisor,w,c
  6157  001512  B0D8               	btfsc	status,0,c
  6158  001514  D004               	goto	i1l2396
  6159  001516  6C03               	negf	i1___awmod@divisor,c
  6160  001518  1E04               	comf	i1___awmod@divisor+1,f,c
  6161  00151A  B0D8               	btfsc	status,0,c
  6162  00151C  2A04               	incf	i1___awmod@divisor+1,f,c
  6163  00151E                     i1l2396:
  6164  00151E  5004               	movf	i1___awmod@divisor+1,w,c
  6165  001520  1003               	iorwf	i1___awmod@divisor,w,c
  6166  001522  B4D8               	btfsc	status,2,c
  6167  001524  D018               	goto	i1l2412
  6168  001526  0E01               	movlw	1
  6169  001528  6E05               	movwf	i1___awmod@counter,c
  6170  00152A  D004               	goto	i1l2402
  6171  00152C                     i1l2400:
  6172  00152C  90D8               	bcf	status,0,c
  6173  00152E  3603               	rlcf	i1___awmod@divisor,f,c
  6174  001530  3604               	rlcf	i1___awmod@divisor+1,f,c
  6175  001532  2A05               	incf	i1___awmod@counter,f,c
  6176  001534                     i1l2402:
  6177  001534  AE04               	btfss	i1___awmod@divisor+1,7,c
  6178  001536  D7FA               	goto	i1l2400
  6179  001538                     i1l2404:
  6180  001538  5003               	movf	i1___awmod@divisor,w,c
  6181  00153A  5C01               	subwf	i1___awmod@dividend,w,c
  6182  00153C  5004               	movf	i1___awmod@divisor+1,w,c
  6183  00153E  5802               	subwfb	i1___awmod@dividend+1,w,c
  6184  001540  A0D8               	btfss	status,0,c
  6185  001542  D004               	goto	i1l2408
  6186  001544  5003               	movf	i1___awmod@divisor,w,c
  6187  001546  5E01               	subwf	i1___awmod@dividend,f,c
  6188  001548  5004               	movf	i1___awmod@divisor+1,w,c
  6189  00154A  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6190  00154C                     i1l2408:
  6191  00154C  90D8               	bcf	status,0,c
  6192  00154E  3204               	rrcf	i1___awmod@divisor+1,f,c
  6193  001550  3203               	rrcf	i1___awmod@divisor,f,c
  6194  001552  2E05               	decfsz	i1___awmod@counter,f,c
  6195  001554  D7F1               	goto	i1l2404
  6196  001556                     i1l2412:
  6197  001556  5006               	movf	i1___awmod@sign,w,c
  6198  001558  B4D8               	btfsc	status,2,c
  6199  00155A  D004               	goto	i1l2416
  6200  00155C  6C01               	negf	i1___awmod@dividend,c
  6201  00155E  1E02               	comf	i1___awmod@dividend+1,f,c
  6202  001560  B0D8               	btfsc	status,0,c
  6203  001562  2A02               	incf	i1___awmod@dividend+1,f,c
  6204  001564                     i1l2416:
  6205  001564  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6206  001568  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6207  00156C  0012               	return	
  6208  00156E                     __end_ofi1___awmod:
  6209                           	opt stack 0
  6210                           pclatu	equ	0xFFB
  6211                           pclath	equ	0xFFA
  6212                           tblptru	equ	0xFF8
  6213                           tblptrh	equ	0xFF7
  6214                           tblptrl	equ	0xFF6
  6215                           tablat	equ	0xFF5
  6216                           prodh	equ	0xFF4
  6217                           prodl	equ	0xFF3
  6218                           intcon	equ	0xFF2
  6219                           intcon2	equ	0xFF1
  6220                           postinc0	equ	0xFEE
  6221                           fsr0h	equ	0xFEA
  6222                           fsr0l	equ	0xFE9
  6223                           wreg	equ	0xFE8
  6224                           indf1	equ	0xFE7
  6225                           fsr1h	equ	0xFE2
  6226                           fsr1l	equ	0xFE1
  6227                           bsr	equ	0xFE0
  6228                           indf2	equ	0xFDF
  6229                           postinc2	equ	0xFDE
  6230                           postdec2	equ	0xFDD
  6231                           fsr2h	equ	0xFDA
  6232                           fsr2l	equ	0xFD9
  6233                           status	equ	0xFD8
  6234                           
  6235 ;; *************** function _blink1 *****************
  6236 ;; Defined at:
  6237 ;;		line 51 in file "../src/debug.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;		None
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;		None               void
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6251 ;;      Params:         0       0       0       0       0
  6252 ;;      Locals:         0       0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0
  6254 ;;      Totals:         0       0       0       0       0
  6255 ;;Total ram usage:        0 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    5
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_InterruptHandlerLow
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text38
  6266  001CF2                     __ptext38:
  6267                           	opt stack 0
  6268  001CF2                     _blink1:
  6269                           	opt stack 19
  6270                           
  6271                           ;debug.c: 53: LATBbits.LB1 ^= 1;
  6272                           
  6273                           ;incstack = 0
  6274  001CF2  728A               	btg	3978,1,c	;volatile
  6275  001CF4  0012               	return	
  6276  001CF6                     __end_of_blink1:
  6277                           	opt stack 0
  6278                           pclatu	equ	0xFFB
  6279                           pclath	equ	0xFFA
  6280                           tblptru	equ	0xFF8
  6281                           tblptrh	equ	0xFF7
  6282                           tblptrl	equ	0xFF6
  6283                           tablat	equ	0xFF5
  6284                           prodh	equ	0xFF4
  6285                           prodl	equ	0xFF3
  6286                           intcon	equ	0xFF2
  6287                           intcon2	equ	0xFF1
  6288                           postinc0	equ	0xFEE
  6289                           fsr0h	equ	0xFEA
  6290                           fsr0l	equ	0xFE9
  6291                           wreg	equ	0xFE8
  6292                           indf1	equ	0xFE7
  6293                           fsr1h	equ	0xFE2
  6294                           fsr1l	equ	0xFE1
  6295                           bsr	equ	0xFE0
  6296                           indf2	equ	0xFDF
  6297                           postinc2	equ	0xFDE
  6298                           postdec2	equ	0xFDD
  6299                           fsr2h	equ	0xFDA
  6300                           fsr2l	equ	0xFD9
  6301                           status	equ	0xFD8
  6302                           
  6303 ;; *************** function _InterruptHandlerHigh *****************
  6304 ;; Defined at:
  6305 ;;		line 86 in file "../src/interrupts.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;		None
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;		None               void
  6312 ;; Registers used:
  6313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6319 ;;      Params:         0       0       0       0       0
  6320 ;;      Locals:         0       0       0       0       0
  6321 ;;      Temps:          0      14       0       0       0
  6322 ;;      Totals:         0      14       0       0       0
  6323 ;;Total ram usage:       14 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    4
  6326 ;; This function calls:
  6327 ;;		_SleepIfOkay
  6328 ;;		_i2c_int_handler
  6329 ;; This function is called by:
  6330 ;;		Interrupt level 2
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	intcode
  6335  000008                     __pintcode:
  6336                           	opt stack 0
  6337  000008                     _InterruptHandlerHigh:
  6338                           	opt stack 16
  6339                           
  6340                           ;incstack = 0
  6341  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh
  6342  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+1
  6343  000010  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6344  000014  EFF9  F00A         	goto	int_func
  6345                           pclatu	equ	0xFFB
  6346                           pclath	equ	0xFFA
  6347                           tblptru	equ	0xFF8
  6348                           tblptrh	equ	0xFF7
  6349                           tblptrl	equ	0xFF6
  6350                           tablat	equ	0xFF5
  6351                           prodh	equ	0xFF4
  6352                           prodl	equ	0xFF3
  6353                           intcon	equ	0xFF2
  6354                           intcon2	equ	0xFF1
  6355                           postinc0	equ	0xFEE
  6356                           fsr0h	equ	0xFEA
  6357                           fsr0l	equ	0xFE9
  6358                           wreg	equ	0xFE8
  6359                           indf1	equ	0xFE7
  6360                           fsr1h	equ	0xFE2
  6361                           fsr1l	equ	0xFE1
  6362                           bsr	equ	0xFE0
  6363                           indf2	equ	0xFDF
  6364                           postinc2	equ	0xFDE
  6365                           postdec2	equ	0xFDD
  6366                           fsr2h	equ	0xFDA
  6367                           fsr2l	equ	0xFD9
  6368                           status	equ	0xFD8
  6369                           
  6370                           	psect	intcode_body
  6371  0015F2                     __pintcode_body:
  6372                           	opt stack 16
  6373  0015F2                     int_func:
  6374                           	opt stack 16
  6375  0015F2  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6376  0015F6  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6377  0015FA  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6378  0015FE  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6379  001602  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6380  001606  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+8
  6381  00160A  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+9
  6382  00160E  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6383  001612  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6384  001616  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+12
  6385  00161A  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+13
  6386                           
  6387                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6388  00161E  A69E               	btfss	3998,3,c	;volatile
  6389  001620  D003               	goto	i2l4016
  6390                           
  6391                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6392  001622  969E               	bcf	3998,3,c	;volatile
  6393                           
  6394                           ;interrupts.c: 98: i2c_int_handler();
  6395  001624  EC91  F000         	call	_i2c_int_handler	;wreg free
  6396  001628                     i2l4016:
  6397                           
  6398                           ;interrupts.c: 99: }
  6399                           ;interrupts.c: 120: SleepIfOkay();
  6400  001628  ECF9  F00B         	call	_SleepIfOkay	;wreg free
  6401  00162C  C0B7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6402  001630  C0B6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6403  001634  C0B5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6404  001638  C0B4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6405  00163C  C0B3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6406  001640  C0B2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6407  001644  C0B1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6408  001648  C0B0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6409  00164C  C0AF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6410  001650  C0AE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6411  001654  C0AD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6412  001658  C0AC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6413  00165C  C0AB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6414  001660  C0AA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6415  001664  0011               	retfie		f
  6416  001666                     __end_of_InterruptHandlerHigh:
  6417                           	opt stack 0
  6418                           pclatu	equ	0xFFB
  6419                           pclath	equ	0xFFA
  6420                           tblptru	equ	0xFF8
  6421                           tblptrh	equ	0xFF7
  6422                           tblptrl	equ	0xFF6
  6423                           tablat	equ	0xFF5
  6424                           prodh	equ	0xFF4
  6425                           prodl	equ	0xFF3
  6426                           intcon	equ	0xFF2
  6427                           intcon2	equ	0xFF1
  6428                           postinc0	equ	0xFEE
  6429                           fsr0h	equ	0xFEA
  6430                           fsr0l	equ	0xFE9
  6431                           wreg	equ	0xFE8
  6432                           indf1	equ	0xFE7
  6433                           fsr1h	equ	0xFE2
  6434                           fsr1l	equ	0xFE1
  6435                           bsr	equ	0xFE0
  6436                           indf2	equ	0xFDF
  6437                           postinc2	equ	0xFDE
  6438                           postdec2	equ	0xFDD
  6439                           fsr2h	equ	0xFDA
  6440                           fsr2l	equ	0xFD9
  6441                           status	equ	0xFD8
  6442                           
  6443 ;; *************** function _i2c_int_handler *****************
  6444 ;; Defined at:
  6445 ;;		line 108 in file "../src/my_i2c.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;		None
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  msg_type        1   39[BANK0 ] unsigned char 
  6450 ;;  length          1   30[BANK0 ] unsigned char 
  6451 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  6452 ;;  data_read       1   41[BANK0 ] unsigned char 
  6453 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  6454 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  6455 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  6456 ;;  need_data       1   36[BANK0 ] unsigned char 
  6457 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6458 ;;  data_written    1   34[BANK0 ] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;		None               void
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6468 ;;      Params:         0       0       0       0       0
  6469 ;;      Locals:         0      12       0       0       0
  6470 ;;      Temps:          0       1       0       0       0
  6471 ;;      Totals:         0      13       0       0       0
  6472 ;;Total ram usage:       13 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    3
  6475 ;; This function calls:
  6476 ;;		_FromMainHigh_recvmsg
  6477 ;;		_ToMainHigh_sendmsg
  6478 ;;		_handle_start
  6479 ;;		_start_i2c_slave_reply
  6480 ;; This function is called by:
  6481 ;;		_InterruptHandlerHigh
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text40
  6486  000122                     __ptext40:
  6487                           	opt stack 0
  6488  000122                     _i2c_int_handler:
  6489                           	opt stack 16
  6490                           
  6491                           ;my_i2c.c: 112: unsigned char i2c_data;
  6492                           ;my_i2c.c: 113: unsigned char data_read = 0;
  6493                           
  6494                           ;incstack = 0
  6495  000122  0E00               	movlw	0
  6496  000124  0100               	movlb	0	; () banked
  6497  000126  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6498                           
  6499                           ;my_i2c.c: 114: unsigned char data_written = 0;
  6500  000128  0E00               	movlw	0
  6501  00012A  0100               	movlb	0	; () banked
  6502  00012C  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6503                           
  6504                           ;my_i2c.c: 115: unsigned char msg_ready = 0;
  6505  00012E  0E00               	movlw	0
  6506  000130  0100               	movlb	0	; () banked
  6507  000132  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6508                           
  6509                           ;my_i2c.c: 116: unsigned char msg_to_send = 0;
  6510  000134  0E00               	movlw	0
  6511  000136  0100               	movlb	0	; () banked
  6512  000138  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6513                           
  6514                           ;my_i2c.c: 117: unsigned char overrun_error = 0;
  6515  00013A  0E00               	movlw	0
  6516  00013C  0100               	movlb	0	; () banked
  6517  00013E  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6518                           
  6519                           ;my_i2c.c: 118: unsigned char error_buf[3];
  6520                           ;my_i2c.c: 119: unsigned char need_data = 1;
  6521  000140  0E01               	movlw	1
  6522  000142  0100               	movlb	0	; () banked
  6523  000144  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;my_i2c.c: 122: if (SSPCON1bits.SSPOV == 1) {
  6527  000146  ACC6               	btfss	4038,6,c	;volatile
  6528  000148  D024               	goto	i2l3664
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;my_i2c.c: 123: SSPCON1bits.SSPOV = 0;
  6532  00014A  9CC6               	bcf	4038,6,c	;volatile
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;my_i2c.c: 127: ic_ptr->status = 0x5;
  6536  00014C  0100               	movlb	0	; () banked
  6537  00014E  EE20 F021          	lfsr	2,33
  6538  000152  0100               	movlb	0	; () banked
  6539  000154  51C5               	movf	_ic_ptr& (0+255),w,b
  6540  000156  26D9               	addwf	fsr2l,f,c
  6541  000158  0100               	movlb	0	; () banked
  6542  00015A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6543  00015C  22DA               	addwfc	fsr2h,f,c
  6544  00015E  0E05               	movlw	5
  6545  000160  6EDF               	movwf	indf2,c
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;my_i2c.c: 128: overrun_error = 1;
  6549  000162  0E01               	movlw	1
  6550  000164  0100               	movlb	0	; () banked
  6551  000166  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;my_i2c.c: 129: ic_ptr->error_count++;
  6555  000168  0100               	movlb	0	; () banked
  6556  00016A  EE20 F023          	lfsr	2,35
  6557  00016E  0100               	movlb	0	; () banked
  6558  000170  51C5               	movf	_ic_ptr& (0+255),w,b
  6559  000172  26D9               	addwf	fsr2l,f,c
  6560  000174  0100               	movlb	0	; () banked
  6561  000176  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6562  000178  22DA               	addwfc	fsr2h,f,c
  6563  00017A  2ADF               	incf	indf2,f,c
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;my_i2c.c: 130: ic_ptr->error_code = 0x4;
  6567  00017C  0100               	movlb	0	; () banked
  6568  00017E  EE20 F022          	lfsr	2,34
  6569  000182  0100               	movlb	0	; () banked
  6570  000184  51C5               	movf	_ic_ptr& (0+255),w,b
  6571  000186  26D9               	addwf	fsr2l,f,c
  6572  000188  0100               	movlb	0	; () banked
  6573  00018A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6574  00018C  22DA               	addwfc	fsr2h,f,c
  6575  00018E  0E04               	movlw	4
  6576  000190  6EDF               	movwf	indf2,c
  6577  000192                     i2l3664:
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;my_i2c.c: 131: }
  6581                           ;my_i2c.c: 133: if (SSPSTATbits.BF == 1) {
  6582  000192  A0C7               	btfss	4039,0,c	;volatile
  6583  000194  D005               	goto	i2l3670
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;my_i2c.c: 134: i2c_data = SSPBUF;
  6587  000196  CFC9 F0A5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;my_i2c.c: 135: data_read = 1;
  6591  00019A  0E01               	movlw	1
  6592  00019C  0100               	movlb	0	; () banked
  6593  00019E  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6594  0001A0                     i2l3670:
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;my_i2c.c: 136: }
  6598                           ;my_i2c.c: 139: if (!overrun_error) {
  6599  0001A0  0100               	movlb	0	; () banked
  6600  0001A2  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6601  0001A4  D1EF               	goto	i2l300
  6602  0001A6  D1D8               	goto	i2l3774
  6603  0001A8                     i2l302:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;my_i2c.c: 142: {
  6607                           ;my_i2c.c: 144: if (SSPSTATbits.S == 1) {
  6608  0001A8  A6C7               	btfss	4039,3,c	;volatile
  6609  0001AA  D1EC               	goto	i2l300
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;my_i2c.c: 145: handle_start(data_read);
  6613  0001AC  0100               	movlb	0	; () banked
  6614  0001AE  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6615  0001B0  EC88  F008         	call	_handle_start
  6616                           
  6617                           ;my_i2c.c: 147: if (ic_ptr->status == 0x8) {
  6618  0001B4  0100               	movlb	0	; () banked
  6619  0001B6  EE20 F021          	lfsr	2,33
  6620  0001BA  0100               	movlb	0	; () banked
  6621  0001BC  51C5               	movf	_ic_ptr& (0+255),w,b
  6622  0001BE  26D9               	addwf	fsr2l,f,c
  6623  0001C0  0100               	movlb	0	; () banked
  6624  0001C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6625  0001C4  22DA               	addwfc	fsr2h,f,c
  6626  0001C6  0E08               	movlw	8
  6627  0001C8  62DF               	cpfseq	indf2,c
  6628  0001CA  D1DC               	goto	i2l300
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;my_i2c.c: 148: data_read = 0;
  6632  0001CC  0E00               	movlw	0
  6633  0001CE  0100               	movlb	0	; () banked
  6634  0001D0  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6635                           
  6636                           ;my_i2c.c: 149: msg_to_send = 1;
  6637  0001D2  0E01               	movlw	1
  6638  0001D4  0100               	movlb	0	; () banked
  6639  0001D6  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6640  0001D8  D1D5               	goto	i2l300
  6641  0001DA                     i2l306:
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;my_i2c.c: 155: {
  6645                           ;my_i2c.c: 158: if (SSPSTATbits.P == 1) {
  6646  0001DA  A8C7               	btfss	4039,4,c	;volatile
  6647  0001DC  D034               	goto	i2l3690
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;my_i2c.c: 161: ic_ptr->event_count++;
  6651  0001DE  0100               	movlb	0	; () banked
  6652  0001E0  EE20 F020          	lfsr	2,32
  6653  0001E4  0100               	movlb	0	; () banked
  6654  0001E6  51C5               	movf	_ic_ptr& (0+255),w,b
  6655  0001E8  26D9               	addwf	fsr2l,f,c
  6656  0001EA  0100               	movlb	0	; () banked
  6657  0001EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6658  0001EE  22DA               	addwfc	fsr2h,f,c
  6659  0001F0  2ADF               	incf	indf2,f,c
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;my_i2c.c: 162: if (data_read) {
  6663  0001F2  0100               	movlb	0	; () banked
  6664  0001F4  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6665  0001F6  B4D8               	btfsc	status,2,c
  6666  0001F8  D01B               	goto	i2l308
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;my_i2c.c: 163: if (SSPSTATbits.D_A == 0) {
  6670  0001FA  BAC7               	btfsc	4039,5,c	;volatile
  6671  0001FC  D004               	goto	i2l3688
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;my_i2c.c: 164: msg_ready = 1;
  6675  0001FE  0E01               	movlw	1
  6676  000200  0100               	movlb	0	; () banked
  6677  000202  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6678                           
  6679                           ;my_i2c.c: 165: } else {
  6680  000204  D015               	goto	i2l308
  6681  000206                     i2l3688:
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;my_i2c.c: 166: ic_ptr->error_count++;
  6685  000206  0100               	movlb	0	; () banked
  6686  000208  EE20 F023          	lfsr	2,35
  6687  00020C  0100               	movlb	0	; () banked
  6688  00020E  51C5               	movf	_ic_ptr& (0+255),w,b
  6689  000210  26D9               	addwf	fsr2l,f,c
  6690  000212  0100               	movlb	0	; () banked
  6691  000214  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6692  000216  22DA               	addwfc	fsr2h,f,c
  6693  000218  2ADF               	incf	indf2,f,c
  6694                           
  6695                           ;my_i2c.c: 167: ic_ptr->error_code = 0x6;
  6696  00021A  0100               	movlb	0	; () banked
  6697  00021C  EE20 F022          	lfsr	2,34
  6698  000220  0100               	movlb	0	; () banked
  6699  000222  51C5               	movf	_ic_ptr& (0+255),w,b
  6700  000224  26D9               	addwf	fsr2l,f,c
  6701  000226  0100               	movlb	0	; () banked
  6702  000228  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6703  00022A  22DA               	addwfc	fsr2h,f,c
  6704  00022C  0E06               	movlw	6
  6705  00022E                     L14:
  6706  00022E  6EDF               	movwf	indf2,c
  6707  000230                     i2l308:
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;my_i2c.c: 168: }
  6711                           ;my_i2c.c: 169: }
  6712                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6713  000230  0100               	movlb	0	; () banked
  6714  000232  EE20 F021          	lfsr	2,33
  6715  000236  0100               	movlb	0	; () banked
  6716  000238  51C5               	movf	_ic_ptr& (0+255),w,b
  6717  00023A  26D9               	addwf	fsr2l,f,c
  6718  00023C  0100               	movlb	0	; () banked
  6719  00023E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6720  000240  22DA               	addwfc	fsr2h,f,c
  6721  000242  0E05               	movlw	5
  6722  000244  D096               	goto	L9
  6723  000246                     i2l3690:
  6724                           
  6725                           ; BSR set to: 0
  6726  000246  0100               	movlb	0	; () banked
  6727  000248  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6728  00024A  B4D8               	btfsc	status,2,c
  6729  00024C  D19B               	goto	i2l300
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;my_i2c.c: 172: ic_ptr->event_count++;
  6733  00024E  0100               	movlb	0	; () banked
  6734  000250  EE20 F020          	lfsr	2,32
  6735  000254  0100               	movlb	0	; () banked
  6736  000256  51C5               	movf	_ic_ptr& (0+255),w,b
  6737  000258  26D9               	addwf	fsr2l,f,c
  6738  00025A  0100               	movlb	0	; () banked
  6739  00025C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6740  00025E  22DA               	addwfc	fsr2h,f,c
  6741  000260  2ADF               	incf	indf2,f,c
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;my_i2c.c: 173: if (SSPSTATbits.D_A == 0)
  6745  000262  BAC7               	btfsc	4039,5,c	;volatile
  6746  000264  D02A               	goto	i2l3706
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;my_i2c.c: 174: {
  6750                           ;my_i2c.c: 175: if (SSPSTATbits.R_W == 0)
  6751  000266  B4C7               	btfsc	4039,2,c	;volatile
  6752  000268  D00B               	goto	i2l3700
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;my_i2c.c: 176: {
  6756                           ;my_i2c.c: 177: ic_ptr->status = 0x7;
  6757  00026A  0100               	movlb	0	; () banked
  6758  00026C  EE20 F021          	lfsr	2,33
  6759  000270  0100               	movlb	0	; () banked
  6760  000272  51C5               	movf	_ic_ptr& (0+255),w,b
  6761  000274  26D9               	addwf	fsr2l,f,c
  6762  000276  0100               	movlb	0	; () banked
  6763  000278  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6764  00027A  22DA               	addwfc	fsr2h,f,c
  6765  00027C  0E07               	movlw	7
  6766  00027E  D079               	goto	L9
  6767  000280                     i2l3700:
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;my_i2c.c: 179: else
  6771                           ;my_i2c.c: 180: {
  6772                           ;my_i2c.c: 181: ic_ptr->status = 0x8;
  6773  000280  0100               	movlb	0	; () banked
  6774  000282  EE20 F021          	lfsr	2,33
  6775  000286  0100               	movlb	0	; () banked
  6776  000288  51C5               	movf	_ic_ptr& (0+255),w,b
  6777  00028A  26D9               	addwf	fsr2l,f,c
  6778  00028C  0100               	movlb	0	; () banked
  6779  00028E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6780  000290  22DA               	addwfc	fsr2h,f,c
  6781  000292  0E08               	movlw	8
  6782  000294  6EDF               	movwf	indf2,c
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;my_i2c.c: 182: msg_to_send = 1;
  6786  000296  0E01               	movlw	1
  6787  000298  0100               	movlb	0	; () banked
  6788  00029A  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;my_i2c.c: 184: data_read = 0;
  6792  00029C  0E00               	movlw	0
  6793  00029E  0100               	movlb	0	; () banked
  6794  0002A0  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6795                           
  6796                           ;my_i2c.c: 185: ic_ptr->outbufind = 0;
  6797  0002A2  0100               	movlb	0	; () banked
  6798  0002A4  EE20 F01E          	lfsr	2,30
  6799  0002A8  0100               	movlb	0	; () banked
  6800  0002AA  51C5               	movf	_ic_ptr& (0+255),w,b
  6801  0002AC  26D9               	addwf	fsr2l,f,c
  6802  0002AE  0100               	movlb	0	; () banked
  6803  0002B0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6804  0002B2  22DA               	addwfc	fsr2h,f,c
  6805  0002B4  0E00               	movlw	0
  6806  0002B6  6EDF               	movwf	indf2,c
  6807                           
  6808                           ;my_i2c.c: 186: goto l;
  6809  0002B8  D020               	goto	i2l3708
  6810  0002BA                     i2l3706:
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;my_i2c.c: 189: else
  6814                           ;my_i2c.c: 190: {
  6815                           ;my_i2c.c: 191: ic_ptr->error_count++;
  6816  0002BA  0100               	movlb	0	; () banked
  6817  0002BC  EE20 F023          	lfsr	2,35
  6818  0002C0  0100               	movlb	0	; () banked
  6819  0002C2  51C5               	movf	_ic_ptr& (0+255),w,b
  6820  0002C4  26D9               	addwf	fsr2l,f,c
  6821  0002C6  0100               	movlb	0	; () banked
  6822  0002C8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6823  0002CA  22DA               	addwfc	fsr2h,f,c
  6824  0002CC  2ADF               	incf	indf2,f,c
  6825                           
  6826                           ;my_i2c.c: 192: ic_ptr->status = 0x5;
  6827  0002CE  0100               	movlb	0	; () banked
  6828  0002D0  EE20 F021          	lfsr	2,33
  6829  0002D4  0100               	movlb	0	; () banked
  6830  0002D6  51C5               	movf	_ic_ptr& (0+255),w,b
  6831  0002D8  26D9               	addwf	fsr2l,f,c
  6832  0002DA  0100               	movlb	0	; () banked
  6833  0002DC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6834  0002DE  22DA               	addwfc	fsr2h,f,c
  6835  0002E0  0E05               	movlw	5
  6836  0002E2  6EDF               	movwf	indf2,c
  6837                           
  6838                           ;my_i2c.c: 193: ic_ptr->error_code = 0x6;
  6839  0002E4  0100               	movlb	0	; () banked
  6840  0002E6  EE20 F022          	lfsr	2,34
  6841  0002EA  0100               	movlb	0	; () banked
  6842  0002EC  51C5               	movf	_ic_ptr& (0+255),w,b
  6843  0002EE  26D9               	addwf	fsr2l,f,c
  6844  0002F0  0100               	movlb	0	; () banked
  6845  0002F2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6846  0002F4  22DA               	addwfc	fsr2h,f,c
  6847  0002F6  0E06               	movlw	6
  6848  0002F8  D03C               	goto	L9
  6849  0002FA                     i2l3708:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;my_i2c.c: 200: {
  6853                           ;my_i2c.c: 201: if (ic_ptr->outbufind < 14)
  6854  0002FA  0100               	movlb	0	; () banked
  6855  0002FC  EE20 F01E          	lfsr	2,30
  6856  000300  0100               	movlb	0	; () banked
  6857  000302  51C5               	movf	_ic_ptr& (0+255),w,b
  6858  000304  26D9               	addwf	fsr2l,f,c
  6859  000306  0100               	movlb	0	; () banked
  6860  000308  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6861  00030A  22DA               	addwfc	fsr2h,f,c
  6862  00030C  50DF               	movf	indf2,w,c
  6863  00030E  0100               	movlb	0	; () banked
  6864  000310  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  6865  000312  0E0E               	movlw	14
  6866  000314  0100               	movlb	0	; () banked
  6867  000316  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  6868  000318  B0D8               	btfsc	status,0,c
  6869  00031A  D78A               	goto	i2l308
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;my_i2c.c: 202: {
  6873                           ;my_i2c.c: 203: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6874  00031C  0100               	movlb	0	; () banked
  6875  00031E  EE20 F01E          	lfsr	2,30
  6876  000322  0100               	movlb	0	; () banked
  6877  000324  51C5               	movf	_ic_ptr& (0+255),w,b
  6878  000326  26D9               	addwf	fsr2l,f,c
  6879  000328  0100               	movlb	0	; () banked
  6880  00032A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6881  00032C  22DA               	addwfc	fsr2h,f,c
  6882  00032E  50DF               	movf	indf2,w,c
  6883  000330  0100               	movlb	0	; () banked
  6884  000332  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  6885  000334  0100               	movlb	0	; () banked
  6886  000336  519D               	movf	??_i2c_int_handler& (0+255),w,b
  6887  000338  0D01               	mullw	1
  6888  00033A  0E10               	movlw	16
  6889  00033C  26F3               	addwf	prodl,f,c
  6890  00033E  0E00               	movlw	0
  6891  000340  22F4               	addwfc	prodh,f,c
  6892  000342  50F3               	movf	prodl,w,c
  6893  000344  0100               	movlb	0	; () banked
  6894  000346  25C5               	addwf	_ic_ptr& (0+255),w,b
  6895  000348  6ED9               	movwf	fsr2l,c
  6896  00034A  50F4               	movf	prodh,w,c
  6897  00034C  0100               	movlb	0	; () banked
  6898  00034E  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6899  000350  6EDA               	movwf	fsr2h,c
  6900  000352  50DF               	movf	indf2,w,c
  6901  000354  6EC9               	movwf	4041,c	;volatile
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;my_i2c.c: 204: ic_ptr->outbufind++;
  6905  000356  0100               	movlb	0	; () banked
  6906  000358  EE20 F01E          	lfsr	2,30
  6907  00035C  0100               	movlb	0	; () banked
  6908  00035E  51C5               	movf	_ic_ptr& (0+255),w,b
  6909  000360  26D9               	addwf	fsr2l,f,c
  6910  000362  0100               	movlb	0	; () banked
  6911  000364  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6912  000366  22DA               	addwfc	fsr2h,f,c
  6913  000368  2ADF               	incf	indf2,f,c
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;my_i2c.c: 205: data_written = 1;
  6917  00036A  0E01               	movlw	1
  6918  00036C  0100               	movlb	0	; () banked
  6919  00036E  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6920                           
  6921                           ;my_i2c.c: 206: }
  6922  000370  D109               	goto	i2l300
  6923  000372                     L9:
  6924  000372  6EDF               	movwf	indf2,c
  6925  000374  D107               	goto	i2l300
  6926  000376                     i2l321:
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;my_i2c.c: 215: {
  6930                           ;my_i2c.c: 217: if (SSPSTATbits.P == 1)
  6931  000376  A8C7               	btfss	4039,4,c	;volatile
  6932  000378  D059               	goto	i2l3736
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;my_i2c.c: 218: {
  6936                           ;my_i2c.c: 221: ic_ptr->event_count++;
  6937  00037A  0100               	movlb	0	; () banked
  6938  00037C  EE20 F020          	lfsr	2,32
  6939  000380  0100               	movlb	0	; () banked
  6940  000382  51C5               	movf	_ic_ptr& (0+255),w,b
  6941  000384  26D9               	addwf	fsr2l,f,c
  6942  000386  0100               	movlb	0	; () banked
  6943  000388  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6944  00038A  22DA               	addwfc	fsr2h,f,c
  6945  00038C  2ADF               	incf	indf2,f,c
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;my_i2c.c: 222: if (data_read)
  6949  00038E  0100               	movlb	0	; () banked
  6950  000390  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6951  000392  B4D8               	btfsc	status,2,c
  6952  000394  D047               	goto	i2l3732
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;my_i2c.c: 223: {
  6956                           ;my_i2c.c: 224: if (SSPSTATbits.D_A == 1)
  6957  000396  AAC7               	btfss	4039,5,c	;volatile
  6958  000398  D025               	goto	i2l3730
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;my_i2c.c: 225: {
  6962                           ;my_i2c.c: 227: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6963  00039A  0100               	movlb	0	; () banked
  6964  00039C  EE20 F00E          	lfsr	2,14
  6965  0003A0  0100               	movlb	0	; () banked
  6966  0003A2  51C5               	movf	_ic_ptr& (0+255),w,b
  6967  0003A4  26D9               	addwf	fsr2l,f,c
  6968  0003A6  0100               	movlb	0	; () banked
  6969  0003A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6970  0003AA  22DA               	addwfc	fsr2h,f,c
  6971  0003AC  50DF               	movf	indf2,w,c
  6972  0003AE  0100               	movlb	0	; () banked
  6973  0003B0  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  6974  0003B2  0100               	movlb	0	; () banked
  6975  0003B4  519D               	movf	??_i2c_int_handler& (0+255),w,b
  6976  0003B6  0D01               	mullw	1
  6977  0003B8  50F3               	movf	prodl,w,c
  6978  0003BA  0100               	movlb	0	; () banked
  6979  0003BC  25C5               	addwf	_ic_ptr& (0+255),w,b
  6980  0003BE  6ED9               	movwf	fsr2l,c
  6981  0003C0  50F4               	movf	prodh,w,c
  6982  0003C2  0100               	movlb	0	; () banked
  6983  0003C4  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6984  0003C6  6EDA               	movwf	fsr2h,c
  6985  0003C8  0100               	movlb	0	; () banked
  6986  0003CA  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;my_i2c.c: 228: ic_ptr->buflen++;
  6990  0003CE  0100               	movlb	0	; () banked
  6991  0003D0  EE20 F00E          	lfsr	2,14
  6992  0003D4  0100               	movlb	0	; () banked
  6993  0003D6  51C5               	movf	_ic_ptr& (0+255),w,b
  6994  0003D8  26D9               	addwf	fsr2l,f,c
  6995  0003DA  0100               	movlb	0	; () banked
  6996  0003DC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6997  0003DE  22DA               	addwfc	fsr2h,f,c
  6998  0003E0  2ADF               	incf	indf2,f,c
  6999  0003E2  D020               	goto	i2l3732
  7000  0003E4                     i2l3730:
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;my_i2c.c: 231: else
  7004                           ;my_i2c.c: 232: {
  7005                           ;my_i2c.c: 234: ic_ptr->error_count++;
  7006  0003E4  0100               	movlb	0	; () banked
  7007  0003E6  EE20 F023          	lfsr	2,35
  7008  0003EA  0100               	movlb	0	; () banked
  7009  0003EC  51C5               	movf	_ic_ptr& (0+255),w,b
  7010  0003EE  26D9               	addwf	fsr2l,f,c
  7011  0003F0  0100               	movlb	0	; () banked
  7012  0003F2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7013  0003F4  22DA               	addwfc	fsr2h,f,c
  7014  0003F6  2ADF               	incf	indf2,f,c
  7015                           
  7016                           ;my_i2c.c: 235: ic_ptr->error_code = 0x6;
  7017  0003F8  0100               	movlb	0	; () banked
  7018  0003FA  EE20 F022          	lfsr	2,34
  7019  0003FE  0100               	movlb	0	; () banked
  7020  000400  51C5               	movf	_ic_ptr& (0+255),w,b
  7021  000402  26D9               	addwf	fsr2l,f,c
  7022  000404  0100               	movlb	0	; () banked
  7023  000406  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7024  000408  22DA               	addwfc	fsr2h,f,c
  7025  00040A  0E06               	movlw	6
  7026  00040C  6EDF               	movwf	indf2,c
  7027                           
  7028                           ;my_i2c.c: 236: ic_ptr->status = 0x5;
  7029  00040E  0100               	movlb	0	; () banked
  7030  000410  EE20 F021          	lfsr	2,33
  7031  000414  0100               	movlb	0	; () banked
  7032  000416  51C5               	movf	_ic_ptr& (0+255),w,b
  7033  000418  26D9               	addwf	fsr2l,f,c
  7034  00041A  0100               	movlb	0	; () banked
  7035  00041C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7036  00041E  22DA               	addwfc	fsr2h,f,c
  7037  000420  0E05               	movlw	5
  7038  000422  D705               	goto	L14
  7039  000424                     i2l3732:
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;my_i2c.c: 239: else
  7043                           ;my_i2c.c: 240: {
  7044                           ;my_i2c.c: 242: msg_ready = 1;
  7045  000424  0E01               	movlw	1
  7046  000426  0100               	movlb	0	; () banked
  7047  000428  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7048                           
  7049                           ; BSR set to: 0
  7050  00042A  D702               	goto	i2l308
  7051  00042C                     i2l3736:
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;my_i2c.c: 246: else if (data_read)
  7055  00042C  0100               	movlb	0	; () banked
  7056  00042E  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7057  000430  B4D8               	btfsc	status,2,c
  7058  000432  D0A8               	goto	i2l300
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;my_i2c.c: 247: {
  7062                           ;my_i2c.c: 248: ic_ptr->event_count++;
  7063  000434  0100               	movlb	0	; () banked
  7064  000436  EE20 F020          	lfsr	2,32
  7065  00043A  0100               	movlb	0	; () banked
  7066  00043C  51C5               	movf	_ic_ptr& (0+255),w,b
  7067  00043E  26D9               	addwf	fsr2l,f,c
  7068  000440  0100               	movlb	0	; () banked
  7069  000442  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7070  000444  22DA               	addwfc	fsr2h,f,c
  7071  000446  2ADF               	incf	indf2,f,c
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;my_i2c.c: 249: if (SSP1STATbits.D_A == 1)
  7075  000448  AAC7               	btfss	4039,5,c	;volatile
  7076  00044A  D01E               	goto	i2l329
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;my_i2c.c: 250: {
  7080                           ;my_i2c.c: 252: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7081  00044C  0100               	movlb	0	; () banked
  7082  00044E  EE20 F00E          	lfsr	2,14
  7083  000452  0100               	movlb	0	; () banked
  7084  000454  51C5               	movf	_ic_ptr& (0+255),w,b
  7085  000456  26D9               	addwf	fsr2l,f,c
  7086  000458  0100               	movlb	0	; () banked
  7087  00045A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7088  00045C  22DA               	addwfc	fsr2h,f,c
  7089  00045E  50DF               	movf	indf2,w,c
  7090  000460  0100               	movlb	0	; () banked
  7091  000462  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7092  000464  0100               	movlb	0	; () banked
  7093  000466  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7094  000468  0D01               	mullw	1
  7095  00046A  50F3               	movf	prodl,w,c
  7096  00046C  0100               	movlb	0	; () banked
  7097  00046E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7098  000470  6ED9               	movwf	fsr2l,c
  7099  000472  50F4               	movf	prodh,w,c
  7100  000474  0100               	movlb	0	; () banked
  7101  000476  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7102  000478  6EDA               	movwf	fsr2h,c
  7103  00047A  0100               	movlb	0	; () banked
  7104  00047C  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;my_i2c.c: 253: ic_ptr->buflen++;
  7108  000480  0100               	movlb	0	; () banked
  7109  000482  EE20 F00E          	lfsr	2,14
  7110  000486  D036               	goto	L10
  7111  000488                     i2l329:
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;my_i2c.c: 255: else
  7115                           ;my_i2c.c: 256: {
  7116                           ;my_i2c.c: 257: if (SSPSTATbits.R_W == 1)
  7117  000488  A4C7               	btfss	4039,2,c	;volatile
  7118  00048A  D6BD               	goto	i2l3688
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;my_i2c.c: 258: {
  7122                           ;my_i2c.c: 259: if( ic_ptr->buffer[0] == 0x06 )
  7123  00048C  0E06               	movlw	6
  7124  00048E  C0C5  FFD9         	movff	_ic_ptr,fsr2l
  7125  000492  C0C6  FFDA         	movff	_ic_ptr+1,fsr2h
  7126  000496  62DF               	cpfseq	indf2,c
  7127  000498  D035               	goto	i2l3762
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;my_i2c.c: 260: {
  7131                           ;my_i2c.c: 261: ic_ptr->status = 0x8;
  7132  00049A  0100               	movlb	0	; () banked
  7133  00049C  EE20 F021          	lfsr	2,33
  7134  0004A0  0100               	movlb	0	; () banked
  7135  0004A2  51C5               	movf	_ic_ptr& (0+255),w,b
  7136  0004A4  26D9               	addwf	fsr2l,f,c
  7137  0004A6  0100               	movlb	0	; () banked
  7138  0004A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7139  0004AA  22DA               	addwfc	fsr2h,f,c
  7140  0004AC  0E08               	movlw	8
  7141  0004AE  6EDF               	movwf	indf2,c
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;my_i2c.c: 262: msg_ready = 1;
  7145  0004B0  0E01               	movlw	1
  7146  0004B2  0100               	movlb	0	; () banked
  7147  0004B4  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;my_i2c.c: 263: msg_to_send = 1;
  7151  0004B6  0E01               	movlw	1
  7152  0004B8  0100               	movlb	0	; () banked
  7153  0004BA  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;my_i2c.c: 265: data_read = 0;
  7157  0004BC  0E00               	movlw	0
  7158  0004BE  0100               	movlb	0	; () banked
  7159  0004C0  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;my_i2c.c: 266: ic_ptr->outbufind = 0;
  7163  0004C2  0100               	movlb	0	; () banked
  7164  0004C4  EE20 F01E          	lfsr	2,30
  7165  0004C8  0100               	movlb	0	; () banked
  7166  0004CA  51C5               	movf	_ic_ptr& (0+255),w,b
  7167  0004CC  26D9               	addwf	fsr2l,f,c
  7168  0004CE  0100               	movlb	0	; () banked
  7169  0004D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7170  0004D2  22DA               	addwfc	fsr2h,f,c
  7171  0004D4  0E00               	movlw	0
  7172  0004D6  6EDF               	movwf	indf2,c
  7173                           
  7174                           ; BSR set to: 0
  7175                           ;my_i2c.c: 267: SSPBUF = ic_ptr->outbuffer[0];
  7176  0004D8  0100               	movlb	0	; () banked
  7177  0004DA  EE20 F010          	lfsr	2,16
  7178  0004DE  0100               	movlb	0	; () banked
  7179  0004E0  51C5               	movf	_ic_ptr& (0+255),w,b
  7180  0004E2  26D9               	addwf	fsr2l,f,c
  7181  0004E4  0100               	movlb	0	; () banked
  7182  0004E6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7183  0004E8  22DA               	addwfc	fsr2h,f,c
  7184  0004EA  50DF               	movf	indf2,w,c
  7185  0004EC  6EC9               	movwf	4041,c	;volatile
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;my_i2c.c: 268: ic_ptr->outbufind++;
  7189  0004EE  0100               	movlb	0	; () banked
  7190  0004F0  EE20 F01E          	lfsr	2,30
  7191  0004F4                     L10:
  7192  0004F4  0100               	movlb	0	; () banked
  7193  0004F6  51C5               	movf	_ic_ptr& (0+255),w,b
  7194  0004F8  26D9               	addwf	fsr2l,f,c
  7195  0004FA  0100               	movlb	0	; () banked
  7196  0004FC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7197  0004FE  22DA               	addwfc	fsr2h,f,c
  7198  000500  2ADF               	incf	indf2,f,c
  7199                           
  7200                           ;my_i2c.c: 270: }
  7201  000502  D040               	goto	i2l300
  7202  000504                     i2l3762:
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;my_i2c.c: 271: else
  7206                           ;my_i2c.c: 272: {
  7207                           ;my_i2c.c: 273: if( ic_ptr->outbufind < 14 )
  7208  000504  0100               	movlb	0	; () banked
  7209  000506  EE20 F01E          	lfsr	2,30
  7210  00050A  0100               	movlb	0	; () banked
  7211  00050C  51C5               	movf	_ic_ptr& (0+255),w,b
  7212  00050E  26D9               	addwf	fsr2l,f,c
  7213  000510  0100               	movlb	0	; () banked
  7214  000512  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7215  000514  22DA               	addwfc	fsr2h,f,c
  7216  000516  50DF               	movf	indf2,w,c
  7217  000518  0100               	movlb	0	; () banked
  7218  00051A  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7219  00051C  0E0E               	movlw	14
  7220  00051E  0100               	movlb	0	; () banked
  7221  000520  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7222  000522  B0D8               	btfsc	status,0,c
  7223  000524  D00E               	goto	i2l3768
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;my_i2c.c: 274: {
  7227                           ;my_i2c.c: 275: ic_ptr->outbufind++;
  7228  000526  0100               	movlb	0	; () banked
  7229  000528  EE20 F01E          	lfsr	2,30
  7230  00052C  0100               	movlb	0	; () banked
  7231  00052E  51C5               	movf	_ic_ptr& (0+255),w,b
  7232  000530  26D9               	addwf	fsr2l,f,c
  7233  000532  0100               	movlb	0	; () banked
  7234  000534  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7235  000536  22DA               	addwfc	fsr2h,f,c
  7236  000538  2ADF               	incf	indf2,f,c
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;my_i2c.c: 276: data_read = 0;
  7240  00053A  0E00               	movlw	0
  7241  00053C  0100               	movlb	0	; () banked
  7242  00053E  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7243                           
  7244                           ;my_i2c.c: 277: }
  7245  000540  D021               	goto	i2l300
  7246  000542                     i2l3768:
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;my_i2c.c: 278: else
  7250                           ;my_i2c.c: 279: {
  7251                           ;my_i2c.c: 280: ic_ptr->outbufind = 0;
  7252  000542  0100               	movlb	0	; () banked
  7253  000544  EE20 F01E          	lfsr	2,30
  7254  000548  0100               	movlb	0	; () banked
  7255  00054A  51C5               	movf	_ic_ptr& (0+255),w,b
  7256  00054C  26D9               	addwf	fsr2l,f,c
  7257  00054E  0100               	movlb	0	; () banked
  7258  000550  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7259  000552  22DA               	addwfc	fsr2h,f,c
  7260  000554  0E00               	movlw	0
  7261  000556  D66B               	goto	L14
  7262  000558                     i2l3774:
  7263                           
  7264                           ; BSR set to: 0
  7265  000558  0100               	movlb	0	; () banked
  7266  00055A  EE20 F021          	lfsr	2,33
  7267  00055E  0100               	movlb	0	; () banked
  7268  000560  51C5               	movf	_ic_ptr& (0+255),w,b
  7269  000562  26D9               	addwf	fsr2l,f,c
  7270  000564  0100               	movlb	0	; () banked
  7271  000566  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7272  000568  22DA               	addwfc	fsr2h,f,c
  7273  00056A  50DF               	movf	indf2,w,c
  7274                           
  7275                           ; Switch size 1, requested type "space"
  7276                           ; Number of cases is 4, Range of values is 5 to 8
  7277                           ; switch strategies available:
  7278                           ; Name         Instructions Cycles
  7279                           ; simple_byte           13     7 (average)
  7280                           ;	Chosen strategy is simple_byte
  7281  00056C  0A05               	xorlw	5	; case 5
  7282  00056E  B4D8               	btfsc	status,2,c
  7283  000570  D61B               	goto	i2l302
  7284  000572  0A03               	xorlw	3	; case 6
  7285  000574  B4D8               	btfsc	status,2,c
  7286  000576  D631               	goto	i2l306
  7287  000578  0A01               	xorlw	1	; case 7
  7288  00057A  B4D8               	btfsc	status,2,c
  7289  00057C  D6FC               	goto	i2l321
  7290  00057E  0A0F               	xorlw	15	; case 8
  7291  000580  B4D8               	btfsc	status,2,c
  7292  000582  D6BB               	goto	i2l3708
  7293  000584                     i2l300:
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;my_i2c.c: 298: }
  7297                           ;my_i2c.c: 301: if (data_read || data_written) {
  7298  000584  0100               	movlb	0	; () banked
  7299  000586  67A9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7300  000588  D004               	goto	i2l339
  7301                           
  7302                           ; BSR set to: 0
  7303  00058A  0100               	movlb	0	; () banked
  7304  00058C  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7305  00058E  B4D8               	btfsc	status,2,c
  7306  000590  D002               	goto	i2l3780
  7307  000592                     i2l339:
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;my_i2c.c: 303: if (SSPCON1bits.CKP == 0) {
  7311  000592  A8C6               	btfss	4038,4,c	;volatile
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;my_i2c.c: 304: SSPCON1bits.CKP = 1;
  7315  000594  88C6               	bsf	4038,4,c	;volatile
  7316  000596                     i2l3780:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;my_i2c.c: 306: }
  7320                           ;my_i2c.c: 307: }
  7321                           ;my_i2c.c: 312: if ((ic_ptr->buflen > 14) && (!msg_ready))
  7322  000596  0100               	movlb	0	; () banked
  7323  000598  EE20 F00E          	lfsr	2,14
  7324  00059C  0100               	movlb	0	; () banked
  7325  00059E  51C5               	movf	_ic_ptr& (0+255),w,b
  7326  0005A0  26D9               	addwf	fsr2l,f,c
  7327  0005A2  0100               	movlb	0	; () banked
  7328  0005A4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7329  0005A6  22DA               	addwfc	fsr2h,f,c
  7330  0005A8  0E0E               	movlw	14
  7331  0005AA  64DF               	cpfsgt	indf2,c
  7332  0005AC  D023               	goto	i2l3786
  7333                           
  7334                           ; BSR set to: 0
  7335  0005AE  0100               	movlb	0	; () banked
  7336  0005B0  67A8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7337  0005B2  D020               	goto	i2l3786
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;my_i2c.c: 313: {
  7341                           ;my_i2c.c: 315: ic_ptr->status = 0x5;
  7342  0005B4  0100               	movlb	0	; () banked
  7343  0005B6  EE20 F021          	lfsr	2,33
  7344  0005BA  0100               	movlb	0	; () banked
  7345  0005BC  51C5               	movf	_ic_ptr& (0+255),w,b
  7346  0005BE  26D9               	addwf	fsr2l,f,c
  7347  0005C0  0100               	movlb	0	; () banked
  7348  0005C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7349  0005C4  22DA               	addwfc	fsr2h,f,c
  7350  0005C6  0E05               	movlw	5
  7351  0005C8  6EDF               	movwf	indf2,c
  7352                           
  7353                           ;my_i2c.c: 316: ic_ptr->error_count++;
  7354  0005CA  0100               	movlb	0	; () banked
  7355  0005CC  EE20 F023          	lfsr	2,35
  7356  0005D0  0100               	movlb	0	; () banked
  7357  0005D2  51C5               	movf	_ic_ptr& (0+255),w,b
  7358  0005D4  26D9               	addwf	fsr2l,f,c
  7359  0005D6  0100               	movlb	0	; () banked
  7360  0005D8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7361  0005DA  22DA               	addwfc	fsr2h,f,c
  7362  0005DC  2ADF               	incf	indf2,f,c
  7363                           
  7364                           ;my_i2c.c: 317: ic_ptr->error_code = 0x7;
  7365  0005DE  0100               	movlb	0	; () banked
  7366  0005E0  EE20 F022          	lfsr	2,34
  7367  0005E4  0100               	movlb	0	; () banked
  7368  0005E6  51C5               	movf	_ic_ptr& (0+255),w,b
  7369  0005E8  26D9               	addwf	fsr2l,f,c
  7370  0005EA  0100               	movlb	0	; () banked
  7371  0005EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7372  0005EE  22DA               	addwfc	fsr2h,f,c
  7373  0005F0  0E07               	movlw	7
  7374  0005F2  6EDF               	movwf	indf2,c
  7375  0005F4                     i2l3786:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;my_i2c.c: 318: }
  7379                           ;my_i2c.c: 320: if (msg_ready)
  7380  0005F4  0100               	movlb	0	; () banked
  7381  0005F6  51A8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7382  0005F8  B4D8               	btfsc	status,2,c
  7383  0005FA  D032               	goto	i2l3794
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;my_i2c.c: 321: {
  7387                           ;my_i2c.c: 322: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7388  0005FC  0100               	movlb	0	; () banked
  7389  0005FE  EE20 F020          	lfsr	2,32
  7390  000602  0100               	movlb	0	; () banked
  7391  000604  51C5               	movf	_ic_ptr& (0+255),w,b
  7392  000606  26D9               	addwf	fsr2l,f,c
  7393  000608  0100               	movlb	0	; () banked
  7394  00060A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7395  00060C  22DA               	addwfc	fsr2h,f,c
  7396  00060E  0100               	movlb	0	; () banked
  7397  000610  EE10 F00E          	lfsr	1,14
  7398  000614  0100               	movlb	0	; () banked
  7399  000616  51C5               	movf	_ic_ptr& (0+255),w,b
  7400  000618  26E1               	addwf	fsr1l,f,c
  7401  00061A  0100               	movlb	0	; () banked
  7402  00061C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7403  00061E  22E2               	addwfc	fsr1h,f,c
  7404  000620  50E7               	movf	indf1,w,c
  7405  000622  0100               	movlb	0	; () banked
  7406  000624  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7407  000626  0100               	movlb	0	; () banked
  7408  000628  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7409  00062A  0D01               	mullw	1
  7410  00062C  50F3               	movf	prodl,w,c
  7411  00062E  0100               	movlb	0	; () banked
  7412  000630  25C5               	addwf	_ic_ptr& (0+255),w,b
  7413  000632  6EE1               	movwf	fsr1l,c
  7414  000634  50F4               	movf	prodh,w,c
  7415  000636  0100               	movlb	0	; () banked
  7416  000638  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7417  00063A  6EE2               	movwf	fsr1h,c
  7418  00063C  CFDF FFE7          	movff	indf2,indf1
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;my_i2c.c: 323: ToMainHigh_sendmsg(14, 40, (void *) ic_ptr->buffer);
  7422  000640  0E28               	movlw	40
  7423  000642  0100               	movlb	0	; () banked
  7424  000644  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7425  000646  0100               	movlb	0	; () banked
  7426  000648  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7427  00064C  0100               	movlb	0	; () banked
  7428  00064E  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7429  000652  0E0E               	movlw	14
  7430  000654  ECCA  F00D         	call	_ToMainHigh_sendmsg
  7431                           
  7432                           ;my_i2c.c: 324: ic_ptr->buflen = 0;
  7433  000658  0100               	movlb	0	; () banked
  7434  00065A  EE20 F00E          	lfsr	2,14
  7435  00065E  D041               	goto	L11
  7436  000660                     i2l3794:
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;my_i2c.c: 326: else if (ic_ptr->error_count >= 1)
  7440  000660  0100               	movlb	0	; () banked
  7441  000662  EE20 F023          	lfsr	2,35
  7442  000666  0100               	movlb	0	; () banked
  7443  000668  51C5               	movf	_ic_ptr& (0+255),w,b
  7444  00066A  26D9               	addwf	fsr2l,f,c
  7445  00066C  0100               	movlb	0	; () banked
  7446  00066E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7447  000670  22DA               	addwfc	fsr2h,f,c
  7448  000672  50DF               	movf	indf2,w,c
  7449  000674  B4D8               	btfsc	status,2,c
  7450  000676  D03D               	goto	i2l3802
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;my_i2c.c: 327: {
  7454                           ;my_i2c.c: 328: error_buf[0] = ic_ptr->error_count;
  7455  000678  0100               	movlb	0	; () banked
  7456  00067A  EE20 F023          	lfsr	2,35
  7457  00067E  0100               	movlb	0	; () banked
  7458  000680  51C5               	movf	_ic_ptr& (0+255),w,b
  7459  000682  26D9               	addwf	fsr2l,f,c
  7460  000684  0100               	movlb	0	; () banked
  7461  000686  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7462  000688  22DA               	addwfc	fsr2h,f,c
  7463  00068A  50DF               	movf	indf2,w,c
  7464  00068C  0100               	movlb	0	; () banked
  7465  00068E  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  7466                           
  7467                           ;my_i2c.c: 329: error_buf[1] = ic_ptr->error_code;
  7468  000690  0100               	movlb	0	; () banked
  7469  000692  EE20 F022          	lfsr	2,34
  7470  000696  0100               	movlb	0	; () banked
  7471  000698  51C5               	movf	_ic_ptr& (0+255),w,b
  7472  00069A  26D9               	addwf	fsr2l,f,c
  7473  00069C  0100               	movlb	0	; () banked
  7474  00069E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7475  0006A0  22DA               	addwfc	fsr2h,f,c
  7476  0006A2  50DF               	movf	indf2,w,c
  7477  0006A4  0100               	movlb	0	; () banked
  7478  0006A6  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7479                           
  7480                           ;my_i2c.c: 330: error_buf[2] = ic_ptr->event_count;
  7481  0006A8  0100               	movlb	0	; () banked
  7482  0006AA  EE20 F020          	lfsr	2,32
  7483  0006AE  0100               	movlb	0	; () banked
  7484  0006B0  51C5               	movf	_ic_ptr& (0+255),w,b
  7485  0006B2  26D9               	addwf	fsr2l,f,c
  7486  0006B4  0100               	movlb	0	; () banked
  7487  0006B6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7488  0006B8  22DA               	addwfc	fsr2h,f,c
  7489  0006BA  50DF               	movf	indf2,w,c
  7490  0006BC  0100               	movlb	0	; () banked
  7491  0006BE  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;my_i2c.c: 331: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7495  0006C0  0E29               	movlw	41
  7496  0006C2  0100               	movlb	0	; () banked
  7497  0006C4  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7498  0006C6  0100               	movlb	0	; () banked
  7499  0006C8  0E00               	movlw	high i2c_int_handler@error_buf
  7500  0006CA  0100               	movlb	0	; () banked
  7501  0006CC  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7502  0006CE  0100               	movlb	0	; () banked
  7503  0006D0  0E9F               	movlw	low i2c_int_handler@error_buf
  7504  0006D2  0100               	movlb	0	; () banked
  7505  0006D4  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7506  0006D6  0E03               	movlw	3
  7507  0006D8  ECCA  F00D         	call	_ToMainHigh_sendmsg
  7508                           
  7509                           ;my_i2c.c: 332: ic_ptr->error_count = 0;
  7510  0006DC  0100               	movlb	0	; () banked
  7511  0006DE  EE20 F023          	lfsr	2,35
  7512  0006E2                     L11:
  7513  0006E2  0100               	movlb	0	; () banked
  7514  0006E4  51C5               	movf	_ic_ptr& (0+255),w,b
  7515  0006E6  26D9               	addwf	fsr2l,f,c
  7516  0006E8  0100               	movlb	0	; () banked
  7517  0006EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7518  0006EC  22DA               	addwfc	fsr2h,f,c
  7519  0006EE  0E00               	movlw	0
  7520  0006F0  6EDF               	movwf	indf2,c
  7521  0006F2                     i2l3802:
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;my_i2c.c: 333: }
  7525                           ;my_i2c.c: 334: if (msg_to_send) {
  7526  0006F2  0100               	movlb	0	; () banked
  7527  0006F4  51A6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7528  0006F6  B4D8               	btfsc	status,2,c
  7529  0006F8  D01F               	goto	i2l3812
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;my_i2c.c: 336: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  7533  0006FA  0E10               	movlw	16
  7534  0006FC  0100               	movlb	0	; () banked
  7535  0006FE  25C5               	addwf	_ic_ptr& (0+255),w,b
  7536  000700  0100               	movlb	0	; () banked
  7537  000702  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7538  000704  0E00               	movlw	0
  7539  000706  0100               	movlb	0	; () banked
  7540  000708  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7541  00070A  0100               	movlb	0	; () banked
  7542  00070C  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7543  00070E  0E0E               	movlw	14
  7544  000710  ECCD  F00C         	call	_start_i2c_slave_reply
  7545                           
  7546                           ;my_i2c.c: 338: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7547  000714  0E2A               	movlw	42
  7548  000716  0100               	movlb	0	; () banked
  7549  000718  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7550  00071A  0100               	movlb	0	; () banked
  7551  00071C  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7552  000720  0100               	movlb	0	; () banked
  7553  000722  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7554  000726  0E00               	movlw	0
  7555  000728  ECCA  F00D         	call	_ToMainHigh_sendmsg
  7556                           
  7557                           ;my_i2c.c: 339: need_data = 1;
  7558  00072C  0E01               	movlw	1
  7559  00072E  0100               	movlb	0	; () banked
  7560  000730  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;my_i2c.c: 340: msg_to_send = 0;
  7564  000732  0E00               	movlw	0
  7565  000734  0100               	movlb	0	; () banked
  7566  000736  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7567  000738                     i2l3812:
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;my_i2c.c: 341: }
  7571                           ;my_i2c.c: 344: if(need_data)
  7572  000738  0100               	movlb	0	; () banked
  7573  00073A  51A4               	movf	i2c_int_handler@need_data& (0+255),w,b
  7574  00073C  B4D8               	btfsc	status,2,c
  7575  00073E  0012               	return	
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;my_i2c.c: 345: {
  7579                           ;my_i2c.c: 346: unsigned char msg_type;
  7580                           ;my_i2c.c: 347: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  7581  000740  0100               	movlb	0	; () banked
  7582  000742  0E00               	movlw	high i2c_int_handler@msg_type
  7583  000744  0100               	movlb	0	; () banked
  7584  000746  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7585  000748  0100               	movlb	0	; () banked
  7586  00074A  0EA7               	movlw	low i2c_int_handler@msg_type
  7587  00074C  0100               	movlb	0	; () banked
  7588  00074E  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7589  000750  0E10               	movlw	16
  7590  000752  0100               	movlb	0	; () banked
  7591  000754  25C5               	addwf	_ic_ptr& (0+255),w,b
  7592  000756  0100               	movlb	0	; () banked
  7593  000758  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7594  00075A  0E00               	movlw	0
  7595  00075C  0100               	movlb	0	; () banked
  7596  00075E  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7597  000760  0100               	movlb	0	; () banked
  7598  000762  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7599  000764  0E0E               	movlw	14
  7600  000766  EC68  F00D         	call	_FromMainHigh_recvmsg
  7601  00076A  0100               	movlb	0	; () banked
  7602  00076C  6F9E               	movwf	i2c_int_handler@length& (0+255),b
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;my_i2c.c: 356: else
  7606                           ;my_i2c.c: 357: {
  7607                           ;my_i2c.c: 358: need_data = 0;
  7608                           
  7609                           ; BSR set to: 0
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;my_i2c.c: 353: {
  7613                           ;my_i2c.c: 355: }
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;my_i2c.c: 352: else if( length < 0 )
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;my_i2c.c: 349: {
  7620                           ;my_i2c.c: 351: }
  7621                           
  7622                           ;my_i2c.c: 348: if( length == -4 )
  7623  00076E  0E00               	movlw	0
  7624  000770  0100               	movlb	0	; () banked
  7625  000772  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7626  000774  0012               	return	
  7627  000776                     __end_of_i2c_int_handler:
  7628                           	opt stack 0
  7629                           pclatu	equ	0xFFB
  7630                           pclath	equ	0xFFA
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           intcon2	equ	0xFF1
  7639                           postinc0	equ	0xFEE
  7640                           fsr0h	equ	0xFEA
  7641                           fsr0l	equ	0xFE9
  7642                           wreg	equ	0xFE8
  7643                           indf1	equ	0xFE7
  7644                           fsr1h	equ	0xFE2
  7645                           fsr1l	equ	0xFE1
  7646                           bsr	equ	0xFE0
  7647                           indf2	equ	0xFDF
  7648                           postinc2	equ	0xFDE
  7649                           postdec2	equ	0xFDD
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function _start_i2c_slave_reply *****************
  7655 ;; Defined at:
  7656 ;;		line 57 in file "../src/my_i2c.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  length          1    wreg     unsigned char 
  7659 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  7660 ;;		 -> NULL(0), main@ic(38), 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  length          1    2[BANK0 ] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;		None               void
  7665 ;; Registers used:
  7666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7672 ;;      Params:         0       2       0       0       0
  7673 ;;      Locals:         0       1       0       0       0
  7674 ;;      Temps:          0       0       0       0       0
  7675 ;;      Totals:         0       3       0       0       0
  7676 ;;Total ram usage:        3 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_i2c_int_handler
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text41
  7686  00199A                     __ptext41:
  7687                           	opt stack 0
  7688  00199A                     _start_i2c_slave_reply:
  7689                           	opt stack 18
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;incstack = 0
  7693                           ;start_i2c_slave_reply@length stored from wreg
  7694  00199A  0100               	movlb	0	; () banked
  7695  00199C  6F82               	movwf	start_i2c_slave_reply@length& (0+255),b
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;my_i2c.c: 64: ic_ptr->outbuflen = length;
  7699  00199E  0100               	movlb	0	; () banked
  7700  0019A0  EE20 F01F          	lfsr	2,31
  7701  0019A4  0100               	movlb	0	; () banked
  7702  0019A6  51C5               	movf	_ic_ptr& (0+255),w,b
  7703  0019A8  26D9               	addwf	fsr2l,f,c
  7704  0019AA  0100               	movlb	0	; () banked
  7705  0019AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7706  0019AE  22DA               	addwfc	fsr2h,f,c
  7707  0019B0  0100               	movlb	0	; () banked
  7708  0019B2  C082  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7709                           
  7710                           ;my_i2c.c: 65: ic_ptr->outbufind = 1;
  7711  0019B6  0100               	movlb	0	; () banked
  7712  0019B8  EE20 F01E          	lfsr	2,30
  7713  0019BC  0100               	movlb	0	; () banked
  7714  0019BE  51C5               	movf	_ic_ptr& (0+255),w,b
  7715  0019C0  26D9               	addwf	fsr2l,f,c
  7716  0019C2  0100               	movlb	0	; () banked
  7717  0019C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7718  0019C6  22DA               	addwfc	fsr2h,f,c
  7719  0019C8  0E01               	movlw	1
  7720  0019CA  6EDF               	movwf	indf2,c
  7721                           
  7722                           ;my_i2c.c: 68: SSPBUF = ic_ptr->outbuffer[0];
  7723  0019CC  0100               	movlb	0	; () banked
  7724  0019CE  EE20 F010          	lfsr	2,16
  7725  0019D2  0100               	movlb	0	; () banked
  7726  0019D4  51C5               	movf	_ic_ptr& (0+255),w,b
  7727  0019D6  26D9               	addwf	fsr2l,f,c
  7728  0019D8  0100               	movlb	0	; () banked
  7729  0019DA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7730  0019DC  22DA               	addwfc	fsr2h,f,c
  7731  0019DE  50DF               	movf	indf2,w,c
  7732  0019E0  6EC9               	movwf	4041,c	;volatile
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;my_i2c.c: 71: SSPCON1bits.CKP = 1;
  7736  0019E2  88C6               	bsf	4038,4,c	;volatile
  7737                           
  7738                           ; BSR set to: 0
  7739  0019E4  0012               	return	
  7740  0019E6                     __end_of_start_i2c_slave_reply:
  7741                           	opt stack 0
  7742                           pclatu	equ	0xFFB
  7743                           pclath	equ	0xFFA
  7744                           tblptru	equ	0xFF8
  7745                           tblptrh	equ	0xFF7
  7746                           tblptrl	equ	0xFF6
  7747                           tablat	equ	0xFF5
  7748                           prodh	equ	0xFF4
  7749                           prodl	equ	0xFF3
  7750                           intcon	equ	0xFF2
  7751                           intcon2	equ	0xFF1
  7752                           postinc0	equ	0xFEE
  7753                           fsr0h	equ	0xFEA
  7754                           fsr0l	equ	0xFE9
  7755                           wreg	equ	0xFE8
  7756                           indf1	equ	0xFE7
  7757                           fsr1h	equ	0xFE2
  7758                           fsr1l	equ	0xFE1
  7759                           bsr	equ	0xFE0
  7760                           indf2	equ	0xFDF
  7761                           postinc2	equ	0xFDE
  7762                           postdec2	equ	0xFDD
  7763                           fsr2h	equ	0xFDA
  7764                           fsr2l	equ	0xFD9
  7765                           status	equ	0xFD8
  7766                           
  7767 ;; *************** function _handle_start *****************
  7768 ;; Defined at:
  7769 ;;		line 77 in file "../src/my_i2c.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;  data_read       1    wreg     unsigned char 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  data_read       1    0[BANK0 ] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;		None               void
  7776 ;; Registers used:
  7777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7783 ;;      Params:         0       0       0       0       0
  7784 ;;      Locals:         0       1       0       0       0
  7785 ;;      Temps:          0       0       0       0       0
  7786 ;;      Totals:         0       1       0       0       0
  7787 ;;Total ram usage:        1 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_i2c_int_handler
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text42
  7797  001110                     __ptext42:
  7798                           	opt stack 0
  7799  001110                     _handle_start:
  7800                           	opt stack 18
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;incstack = 0
  7804                           ;handle_start@data_read stored from wreg
  7805  001110  0100               	movlb	0	; () banked
  7806  001112  6F80               	movwf	handle_start@data_read& (0+255),b
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;my_i2c.c: 78: ic_ptr->event_count = 1;
  7810  001114  0100               	movlb	0	; () banked
  7811  001116  EE20 F020          	lfsr	2,32
  7812  00111A  0100               	movlb	0	; () banked
  7813  00111C  51C5               	movf	_ic_ptr& (0+255),w,b
  7814  00111E  26D9               	addwf	fsr2l,f,c
  7815  001120  0100               	movlb	0	; () banked
  7816  001122  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7817  001124  22DA               	addwfc	fsr2h,f,c
  7818  001126  0E01               	movlw	1
  7819  001128  6EDF               	movwf	indf2,c
  7820                           
  7821                           ;my_i2c.c: 79: ic_ptr->buflen = 0;
  7822  00112A  0100               	movlb	0	; () banked
  7823  00112C  EE20 F00E          	lfsr	2,14
  7824  001130  0100               	movlb	0	; () banked
  7825  001132  51C5               	movf	_ic_ptr& (0+255),w,b
  7826  001134  26D9               	addwf	fsr2l,f,c
  7827  001136  0100               	movlb	0	; () banked
  7828  001138  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7829  00113A  22DA               	addwfc	fsr2h,f,c
  7830  00113C  0E00               	movlw	0
  7831  00113E  6EDF               	movwf	indf2,c
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;my_i2c.c: 81: if (data_read) {
  7835  001140  0100               	movlb	0	; () banked
  7836  001142  5180               	movf	handle_start@data_read& (0+255),w,b
  7837  001144  B4D8               	btfsc	status,2,c
  7838  001146  D03D               	goto	i2l2684
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;my_i2c.c: 82: if (SSPSTATbits.D_A == 1) {
  7842  001148  AAC7               	btfss	4039,5,c	;volatile
  7843  00114A  D021               	goto	i2l290
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;my_i2c.c: 85: ic_ptr->status = 0x5;
  7847  00114C  0100               	movlb	0	; () banked
  7848  00114E  EE20 F021          	lfsr	2,33
  7849  001152  0100               	movlb	0	; () banked
  7850  001154  51C5               	movf	_ic_ptr& (0+255),w,b
  7851  001156  26D9               	addwf	fsr2l,f,c
  7852  001158  0100               	movlb	0	; () banked
  7853  00115A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7854  00115C  22DA               	addwfc	fsr2h,f,c
  7855  00115E  0E05               	movlw	5
  7856  001160  6EDF               	movwf	indf2,c
  7857                           
  7858                           ;my_i2c.c: 86: ic_ptr->error_count++;
  7859  001162  0100               	movlb	0	; () banked
  7860  001164  EE20 F023          	lfsr	2,35
  7861  001168  0100               	movlb	0	; () banked
  7862  00116A  51C5               	movf	_ic_ptr& (0+255),w,b
  7863  00116C  26D9               	addwf	fsr2l,f,c
  7864  00116E  0100               	movlb	0	; () banked
  7865  001170  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7866  001172  22DA               	addwfc	fsr2h,f,c
  7867  001174  2ADF               	incf	indf2,f,c
  7868                           
  7869                           ;my_i2c.c: 87: ic_ptr->error_code = 0x5;
  7870  001176  0100               	movlb	0	; () banked
  7871  001178  EE20 F022          	lfsr	2,34
  7872  00117C  0100               	movlb	0	; () banked
  7873  00117E  51C5               	movf	_ic_ptr& (0+255),w,b
  7874  001180  26D9               	addwf	fsr2l,f,c
  7875  001182  0100               	movlb	0	; () banked
  7876  001184  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7877  001186  22DA               	addwfc	fsr2h,f,c
  7878  001188  0E05               	movlw	5
  7879  00118A  6EDF               	movwf	indf2,c
  7880                           
  7881                           ;my_i2c.c: 88: } else {
  7882  00118C  0012               	return	
  7883  00118E                     i2l290:
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;my_i2c.c: 89: if (SSPSTATbits.R_W == 1) {
  7887  00118E  A4C7               	btfss	4039,2,c	;volatile
  7888  001190  D00C               	goto	i2l2682
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;my_i2c.c: 90: ic_ptr->status = 0x8;
  7892  001192  0100               	movlb	0	; () banked
  7893  001194  EE20 F021          	lfsr	2,33
  7894  001198  0100               	movlb	0	; () banked
  7895  00119A  51C5               	movf	_ic_ptr& (0+255),w,b
  7896  00119C  26D9               	addwf	fsr2l,f,c
  7897  00119E  0100               	movlb	0	; () banked
  7898  0011A0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7899  0011A2  22DA               	addwfc	fsr2h,f,c
  7900  0011A4  0E08               	movlw	8
  7901  0011A6  6EDF               	movwf	indf2,c
  7902                           
  7903                           ;my_i2c.c: 92: } else {
  7904  0011A8  0012               	return	
  7905  0011AA                     i2l2682:
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;my_i2c.c: 93: ic_ptr->status = 0x7;
  7909  0011AA  0100               	movlb	0	; () banked
  7910  0011AC  EE20 F021          	lfsr	2,33
  7911  0011B0  0100               	movlb	0	; () banked
  7912  0011B2  51C5               	movf	_ic_ptr& (0+255),w,b
  7913  0011B4  26D9               	addwf	fsr2l,f,c
  7914  0011B6  0100               	movlb	0	; () banked
  7915  0011B8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7916  0011BA  22DA               	addwfc	fsr2h,f,c
  7917  0011BC  0E07               	movlw	7
  7918  0011BE  6EDF               	movwf	indf2,c
  7919  0011C0  0012               	return	
  7920  0011C2                     i2l2684:
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;my_i2c.c: 98: ic_ptr->status = 0x6;
  7924  0011C2  0100               	movlb	0	; () banked
  7925  0011C4  EE20 F021          	lfsr	2,33
  7926  0011C8  0100               	movlb	0	; () banked
  7927  0011CA  51C5               	movf	_ic_ptr& (0+255),w,b
  7928  0011CC  26D9               	addwf	fsr2l,f,c
  7929  0011CE  0100               	movlb	0	; () banked
  7930  0011D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7931  0011D2  22DA               	addwfc	fsr2h,f,c
  7932  0011D4  0E06               	movlw	6
  7933  0011D6  6EDF               	movwf	indf2,c
  7934  0011D8  0012               	return	
  7935  0011DA                     __end_of_handle_start:
  7936                           	opt stack 0
  7937                           pclatu	equ	0xFFB
  7938                           pclath	equ	0xFFA
  7939                           tblptru	equ	0xFF8
  7940                           tblptrh	equ	0xFF7
  7941                           tblptrl	equ	0xFF6
  7942                           tablat	equ	0xFF5
  7943                           prodh	equ	0xFF4
  7944                           prodl	equ	0xFF3
  7945                           intcon	equ	0xFF2
  7946                           intcon2	equ	0xFF1
  7947                           postinc0	equ	0xFEE
  7948                           fsr0h	equ	0xFEA
  7949                           fsr0l	equ	0xFE9
  7950                           wreg	equ	0xFE8
  7951                           indf1	equ	0xFE7
  7952                           fsr1h	equ	0xFE2
  7953                           fsr1l	equ	0xFE1
  7954                           bsr	equ	0xFE0
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function _ToMainHigh_sendmsg *****************
  7963 ;; Defined at:
  7964 ;;		line 126 in file "../src/messages.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  length          1    wreg     unsigned char 
  7967 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7968 ;;  data            2   23[BANK0 ] PTR void 
  7969 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(38), 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  length          1   25[BANK0 ] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      char 
  7974 ;; Registers used:
  7975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7981 ;;      Params:         0       3       0       0       0
  7982 ;;      Locals:         0       1       0       0       0
  7983 ;;      Temps:          0       0       0       0       0
  7984 ;;      Totals:         0       4       0       0       0
  7985 ;;Total ram usage:        4 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    2
  7988 ;; This function calls:
  7989 ;;		i2_send_msg
  7990 ;; This function is called by:
  7991 ;;		_i2c_int_handler
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text43
  7996  001B94                     __ptext43:
  7997                           	opt stack 0
  7998  001B94                     _ToMainHigh_sendmsg:
  7999                           	opt stack 16
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;incstack = 0
  8003                           ;ToMainHigh_sendmsg@length stored from wreg
  8004  001B94  0100               	movlb	0	; () banked
  8005  001B96  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8009                           ;	Return value of _ToMainHigh_sendmsg is never used
  8010  001B98  0102               	movlb	2	; () banked
  8011  001B9A  0E02               	movlw	high _ToMainHigh_MQ
  8012  001B9C  0100               	movlb	0	; () banked
  8013  001B9E  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8014  001BA0  0102               	movlb	2	; () banked
  8015  001BA2  0E57               	movlw	low _ToMainHigh_MQ
  8016  001BA4  0100               	movlb	0	; () banked
  8017  001BA6  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8018  001BA8  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8019  001BAC  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8020  001BB0  0100               	movlb	0	; () banked
  8021  001BB2  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8022  001BB6  0100               	movlb	0	; () banked
  8023  001BB8  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8024  001BBC  EC8E  F007         	call	i2_send_msg	;wreg free
  8025  001BC0  0012               	return	
  8026  001BC2                     __end_of_ToMainHigh_sendmsg:
  8027                           	opt stack 0
  8028                           pclatu	equ	0xFFB
  8029                           pclath	equ	0xFFA
  8030                           tblptru	equ	0xFF8
  8031                           tblptrh	equ	0xFF7
  8032                           tblptrl	equ	0xFF6
  8033                           tablat	equ	0xFF5
  8034                           prodh	equ	0xFF4
  8035                           prodl	equ	0xFF3
  8036                           intcon	equ	0xFF2
  8037                           intcon2	equ	0xFF1
  8038                           postinc0	equ	0xFEE
  8039                           fsr0h	equ	0xFEA
  8040                           fsr0l	equ	0xFE9
  8041                           wreg	equ	0xFE8
  8042                           indf1	equ	0xFE7
  8043                           fsr1h	equ	0xFE2
  8044                           fsr1l	equ	0xFE1
  8045                           bsr	equ	0xFE0
  8046                           indf2	equ	0xFDF
  8047                           postinc2	equ	0xFDE
  8048                           postdec2	equ	0xFDD
  8049                           fsr2h	equ	0xFDA
  8050                           fsr2l	equ	0xFD9
  8051                           status	equ	0xFD8
  8052                           
  8053 ;; *************** function i2_send_msg *****************
  8054 ;; Defined at:
  8055 ;;		line 24 in file "../src/messages.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8058 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8059 ;;  length          1   12[BANK0 ] unsigned char 
  8060 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8061 ;;  data            2   14[BANK0 ] PTR void 
  8062 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  8063 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8064 ;;		 -> i2c_int_handler@error_buf(3), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  8065 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8068 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8069 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8070 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8071 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  1    wreg      char 
  8074 ;; Registers used:
  8075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8081 ;;      Params:         0       6       0       0       0
  8082 ;;      Locals:         0       5       0       0       0
  8083 ;;      Temps:          0       1       0       0       0
  8084 ;;      Totals:         0      12       0       0       0
  8085 ;;Total ram usage:       12 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; Hardware stack levels required when called:    1
  8088 ;; This function calls:
  8089 ;;		i2___awmod
  8090 ;;		i2_memcpy
  8091 ;; This function is called by:
  8092 ;;		_ToMainHigh_sendmsg
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text44
  8097  000F1C                     __ptext44:
  8098                           	opt stack 0
  8099  000F1C                     i2_send_msg:
  8100                           	opt stack 16
  8101                           
  8102                           ;messages.c: 25: unsigned char slot;
  8103                           ;messages.c: 27: msg *qmsg;
  8104                           ;messages.c: 28: size_t tlength = length;
  8105                           
  8106                           ;incstack = 0
  8107  000F1C  0100               	movlb	0	; () banked
  8108  000F1E  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8109  000F22  0100               	movlb	0	; () banked
  8110  000F24  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8114  000F26  0100               	movlb	0	; () banked
  8115  000F28  EE20 F055          	lfsr	2,85
  8116  000F2C  0100               	movlb	0	; () banked
  8117  000F2E  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8118  000F30  26D9               	addwf	fsr2l,f,c
  8119  000F32  0100               	movlb	0	; () banked
  8120  000F34  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8121  000F36  22DA               	addwfc	fsr2h,f,c
  8122  000F38  50DF               	movf	indf2,w,c
  8123  000F3A  0100               	movlb	0	; () banked
  8124  000F3C  6F93               	movwf	i2send_msg@slot& (0+255),b
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8128  000F3E  0100               	movlb	0	; () banked
  8129  000F40  5193               	movf	i2send_msg@slot& (0+255),w,b
  8130  000F42  0D11               	mullw	17
  8131  000F44  50F3               	movf	prodl,w,c
  8132  000F46  0100               	movlb	0	; () banked
  8133  000F48  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8134  000F4A  0100               	movlb	0	; () banked
  8135  000F4C  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8136  000F4E  50F4               	movf	prodh,w,c
  8137  000F50  0100               	movlb	0	; () banked
  8138  000F52  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8139  000F54  0100               	movlb	0	; () banked
  8140  000F56  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;messages.c: 41: if (qmsg->full != 0) {
  8144  000F58  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8145  000F5C  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8146  000F60  50DF               	movf	indf2,w,c
  8147  000F62  B4D8               	btfsc	status,2,c
  8148  000F64  D002               	goto	i2l3500
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;messages.c: 42: return (-1);
  8152  000F66  0EFF               	movlw	255
  8153  000F68  0012               	return	
  8154  000F6A                     i2l3500:
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;messages.c: 43: }
  8158                           ;messages.c: 46: qmsg->length = length;
  8159  000F6A  0100               	movlb	0	; () banked
  8160  000F6C  EE20 F001          	lfsr	2,1
  8161  000F70  0100               	movlb	0	; () banked
  8162  000F72  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8163  000F74  26D9               	addwf	fsr2l,f,c
  8164  000F76  0100               	movlb	0	; () banked
  8165  000F78  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8166  000F7A  22DA               	addwfc	fsr2h,f,c
  8167  000F7C  0100               	movlb	0	; () banked
  8168  000F7E  C08C  FFDF         	movff	i2send_msg@length,indf2
  8169                           
  8170                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8171  000F82  0100               	movlb	0	; () banked
  8172  000F84  EE20 F002          	lfsr	2,2
  8173  000F88  0100               	movlb	0	; () banked
  8174  000F8A  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8175  000F8C  26D9               	addwf	fsr2l,f,c
  8176  000F8E  0100               	movlb	0	; () banked
  8177  000F90  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8178  000F92  22DA               	addwfc	fsr2h,f,c
  8179  000F94  0100               	movlb	0	; () banked
  8180  000F96  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8184  000F9A  0E03               	movlw	3
  8185  000F9C  0100               	movlb	0	; () banked
  8186  000F9E  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8187  000FA0  0100               	movlb	0	; () banked
  8188  000FA2  6F80               	movwf	i2memcpy@d1& (0+255),b
  8189  000FA4  0E00               	movlw	0
  8190  000FA6  0100               	movlb	0	; () banked
  8191  000FA8  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8192  000FAA  0100               	movlb	0	; () banked
  8193  000FAC  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8194  000FAE  0100               	movlb	0	; () banked
  8195  000FB0  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8196  000FB4  0100               	movlb	0	; () banked
  8197  000FB6  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8198  000FBA  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8199  000FBE  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8200  000FC2  ECA5  F00C         	call	i2_memcpy	;wreg free
  8201                           
  8202                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8203  000FC6  0100               	movlb	0	; () banked
  8204  000FC8  EE20 F055          	lfsr	2,85
  8205  000FCC  0100               	movlb	0	; () banked
  8206  000FCE  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8207  000FD0  26D9               	addwf	fsr2l,f,c
  8208  000FD2  0100               	movlb	0	; () banked
  8209  000FD4  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8210  000FD6  22DA               	addwfc	fsr2h,f,c
  8211  000FD8  0100               	movlb	0	; () banked
  8212  000FDA  EE10 F055          	lfsr	1,85
  8213  000FDE  0100               	movlb	0	; () banked
  8214  000FE0  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8215  000FE2  26E1               	addwf	fsr1l,f,c
  8216  000FE4  0100               	movlb	0	; () banked
  8217  000FE6  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8218  000FE8  22E2               	addwfc	fsr1h,f,c
  8219  000FEA  50E7               	movf	indf1,w,c
  8220  000FEC  0100               	movlb	0	; () banked
  8221  000FEE  6F90               	movwf	??i2_send_msg& (0+255),b
  8222  000FF0  0E01               	movlw	1
  8223  000FF2  0100               	movlb	0	; () banked
  8224  000FF4  2590               	addwf	??i2_send_msg& (0+255),w,b
  8225  000FF6  0100               	movlb	0	; () banked
  8226  000FF8  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8227  000FFA  0100               	movlb	0	; () banked
  8228  000FFC  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8229  000FFE  0E00               	movlw	0
  8230  001000  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8231  001002  0E00               	movlw	0
  8232  001004  0100               	movlb	0	; () banked
  8233  001006  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8234  001008  0E05               	movlw	5
  8235  00100A  0100               	movlb	0	; () banked
  8236  00100C  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8237  00100E  EC4F  F009         	call	i2___awmod	;wreg free
  8238  001012  0100               	movlb	0	; () banked
  8239  001014  5180               	movf	?i2___awmod& (0+255),w,b
  8240  001016  6EDF               	movwf	indf2,c
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;messages.c: 59: qmsg->full = 1;
  8244  001018  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8245  00101C  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8246  001020  0E01               	movlw	1
  8247  001022  6EDF               	movwf	indf2,c
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;messages.c: 60: return (1);
  8251  001024  0E01               	movlw	1
  8252  001026  0012               	return	
  8253  001028                     __end_ofi2_send_msg:
  8254                           	opt stack 0
  8255                           pclatu	equ	0xFFB
  8256                           pclath	equ	0xFFA
  8257                           tblptru	equ	0xFF8
  8258                           tblptrh	equ	0xFF7
  8259                           tblptrl	equ	0xFF6
  8260                           tablat	equ	0xFF5
  8261                           prodh	equ	0xFF4
  8262                           prodl	equ	0xFF3
  8263                           intcon	equ	0xFF2
  8264                           intcon2	equ	0xFF1
  8265                           postinc0	equ	0xFEE
  8266                           fsr0h	equ	0xFEA
  8267                           fsr0l	equ	0xFE9
  8268                           wreg	equ	0xFE8
  8269                           indf1	equ	0xFE7
  8270                           fsr1h	equ	0xFE2
  8271                           fsr1l	equ	0xFE1
  8272                           bsr	equ	0xFE0
  8273                           indf2	equ	0xFDF
  8274                           postinc2	equ	0xFDE
  8275                           postdec2	equ	0xFDD
  8276                           fsr2h	equ	0xFDA
  8277                           fsr2l	equ	0xFD9
  8278                           status	equ	0xFD8
  8279                           
  8280 ;; *************** function _FromMainHigh_recvmsg *****************
  8281 ;; Defined at:
  8282 ;;		line 183 in file "../src/messages.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  maxlength       1    wreg     unsigned char 
  8285 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8286 ;;		 -> retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  8287 ;;  data            2   26[BANK0 ] PTR void 
  8288 ;;		 -> NULL(0), main@ic(38), 
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  1    wreg      char 
  8293 ;; Registers used:
  8294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8300 ;;      Params:         0       4       0       0       0
  8301 ;;      Locals:         0       1       0       0       0
  8302 ;;      Temps:          0       0       0       0       0
  8303 ;;      Totals:         0       5       0       0       0
  8304 ;;Total ram usage:        5 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:    2
  8307 ;; This function calls:
  8308 ;;		i2_recv_msg
  8309 ;; This function is called by:
  8310 ;;		_i2c_int_handler
  8311 ;;		_retrieve_sensor_values
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text45
  8316  001AD0                     __ptext45:
  8317                           	opt stack 0
  8318  001AD0                     _FromMainHigh_recvmsg:
  8319                           	opt stack 16
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;incstack = 0
  8323                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8324  001AD0  0100               	movlb	0	; () banked
  8325  001AD2  6F9C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8329  001AD4  0103               	movlb	3	; () banked
  8330  001AD6  0E03               	movlw	high _FromMainHigh_MQ
  8331  001AD8  0100               	movlb	0	; () banked
  8332  001ADA  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8333  001ADC  0103               	movlb	3	; () banked
  8334  001ADE  0E00               	movlw	low _FromMainHigh_MQ
  8335  001AE0  0100               	movlb	0	; () banked
  8336  001AE2  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8337  001AE4  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8338  001AE8  0100               	movlb	0	; () banked
  8339  001AEA  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8340  001AEE  0100               	movlb	0	; () banked
  8341  001AF0  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8342  001AF4  0100               	movlb	0	; () banked
  8343  001AF6  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8344  001AFA  0100               	movlb	0	; () banked
  8345  001AFC  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8346  001B00  EC67  F006         	call	i2_recv_msg	;wreg free
  8347  001B04  0012               	return	
  8348  001B06                     __end_of_FromMainHigh_recvmsg:
  8349                           	opt stack 0
  8350                           pclatu	equ	0xFFB
  8351                           pclath	equ	0xFFA
  8352                           tblptru	equ	0xFF8
  8353                           tblptrh	equ	0xFF7
  8354                           tblptrl	equ	0xFF6
  8355                           tablat	equ	0xFF5
  8356                           prodh	equ	0xFF4
  8357                           prodl	equ	0xFF3
  8358                           intcon	equ	0xFF2
  8359                           intcon2	equ	0xFF1
  8360                           postinc0	equ	0xFEE
  8361                           fsr0h	equ	0xFEA
  8362                           fsr0l	equ	0xFE9
  8363                           wreg	equ	0xFE8
  8364                           indf1	equ	0xFE7
  8365                           fsr1h	equ	0xFE2
  8366                           fsr1l	equ	0xFE1
  8367                           bsr	equ	0xFE0
  8368                           indf2	equ	0xFDF
  8369                           postinc2	equ	0xFDE
  8370                           postdec2	equ	0xFDD
  8371                           fsr2h	equ	0xFDA
  8372                           fsr2l	equ	0xFD9
  8373                           status	equ	0xFD8
  8374                           
  8375 ;; *************** function i2_recv_msg *****************
  8376 ;; Defined at:
  8377 ;;		line 63 in file "../src/messages.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8380 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8381 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8382 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8383 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), main
      +@msgtype(1), 
  8384 ;;  data            2   15[BANK0 ] PTR void 
  8385 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), main@msgbuffer(15), main@ic(38), 
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8388 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8389 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8390 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8391 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  1    wreg      char 
  8394 ;; Registers used:
  8395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8401 ;;      Params:         0       7       0       0       0
  8402 ;;      Locals:         0       5       0       0       0
  8403 ;;      Temps:          0       2       0       0       0
  8404 ;;      Totals:         0      14       0       0       0
  8405 ;;Total ram usage:       14 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:    1
  8408 ;; This function calls:
  8409 ;;		i2___awmod
  8410 ;;		i2_memcpy
  8411 ;; This function is called by:
  8412 ;;		_FromMainHigh_recvmsg
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text46
  8417  000CCE                     __ptext46:
  8418                           	opt stack 0
  8419  000CCE                     i2_recv_msg:
  8420                           	opt stack 16
  8421                           
  8422                           ;messages.c: 64: unsigned char slot;
  8423                           ;messages.c: 68: msg *qmsg;
  8424                           ;messages.c: 69: size_t tlength;
  8425                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8426                           
  8427                           ;incstack = 0
  8428  000CCE  0100               	movlb	0	; () banked
  8429  000CD0  EE20 F056          	lfsr	2,86
  8430  000CD4  0100               	movlb	0	; () banked
  8431  000CD6  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8432  000CD8  26D9               	addwf	fsr2l,f,c
  8433  000CDA  0100               	movlb	0	; () banked
  8434  000CDC  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8435  000CDE  22DA               	addwfc	fsr2h,f,c
  8436  000CE0  50DF               	movf	indf2,w,c
  8437  000CE2  0100               	movlb	0	; () banked
  8438  000CE4  6F93               	movwf	i2recv_msg@slot& (0+255),b
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8442  000CE6  0100               	movlb	0	; () banked
  8443  000CE8  5193               	movf	i2recv_msg@slot& (0+255),w,b
  8444  000CEA  0D11               	mullw	17
  8445  000CEC  50F3               	movf	prodl,w,c
  8446  000CEE  0100               	movlb	0	; () banked
  8447  000CF0  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8448  000CF2  0100               	movlb	0	; () banked
  8449  000CF4  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  8450  000CF6  50F4               	movf	prodh,w,c
  8451  000CF8  0100               	movlb	0	; () banked
  8452  000CFA  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8453  000CFC  0100               	movlb	0	; () banked
  8454  000CFE  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;messages.c: 74: if (qmsg->full == 1) {
  8458  000D00  0E01               	movlw	1
  8459  000D02  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8460  000D06  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8461  000D0A  62DF               	cpfseq	indf2,c
  8462  000D0C  D07D               	goto	i2l3572
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8466  000D0E  0100               	movlb	0	; () banked
  8467  000D10  EE20 F001          	lfsr	2,1
  8468  000D14  0100               	movlb	0	; () banked
  8469  000D16  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8470  000D18  26D9               	addwf	fsr2l,f,c
  8471  000D1A  0100               	movlb	0	; () banked
  8472  000D1C  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8473  000D1E  22DA               	addwfc	fsr2h,f,c
  8474  000D20  50DF               	movf	indf2,w,c
  8475  000D22  0100               	movlb	0	; () banked
  8476  000D24  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8477  000D26  B0D8               	btfsc	status,0,c
  8478  000D28  D002               	goto	i2l3556
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;messages.c: 77: return (-3);
  8482  000D2A  0EFD               	movlw	253
  8483  000D2C  0012               	return	
  8484  000D2E                     i2l3556:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;messages.c: 78: }
  8488                           ;messages.c: 80: tlength = qmsg->length;
  8489  000D2E  0100               	movlb	0	; () banked
  8490  000D30  EE20 F001          	lfsr	2,1
  8491  000D34  0100               	movlb	0	; () banked
  8492  000D36  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8493  000D38  26D9               	addwf	fsr2l,f,c
  8494  000D3A  0100               	movlb	0	; () banked
  8495  000D3C  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8496  000D3E  22DA               	addwfc	fsr2h,f,c
  8497  000D40  50DF               	movf	indf2,w,c
  8498  000D42  0100               	movlb	0	; () banked
  8499  000D44  6F91               	movwf	??i2_recv_msg& (0+255),b
  8500  000D46  0100               	movlb	0	; () banked
  8501  000D48  5191               	movf	??i2_recv_msg& (0+255),w,b
  8502  000D4A  0100               	movlb	0	; () banked
  8503  000D4C  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  8504  000D4E  0100               	movlb	0	; () banked
  8505  000D50  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8509  000D52  0100               	movlb	0	; () banked
  8510  000D54  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8511  000D58  0100               	movlb	0	; () banked
  8512  000D5A  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  8513  000D5E  0E03               	movlw	3
  8514  000D60  0100               	movlb	0	; () banked
  8515  000D62  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8516  000D64  0100               	movlb	0	; () banked
  8517  000D66  6F91               	movwf	??i2_recv_msg& (0+255),b
  8518  000D68  0E00               	movlw	0
  8519  000D6A  0100               	movlb	0	; () banked
  8520  000D6C  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8521  000D6E  0100               	movlb	0	; () banked
  8522  000D70  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  8523  000D72  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  8524  000D76  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8525  000D7A  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  8526  000D7E  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8527  000D82  ECA5  F00C         	call	i2_memcpy	;wreg free
  8528                           
  8529                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  8530  000D86  0100               	movlb	0	; () banked
  8531  000D88  EE20 F056          	lfsr	2,86
  8532  000D8C  0100               	movlb	0	; () banked
  8533  000D8E  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8534  000D90  26D9               	addwf	fsr2l,f,c
  8535  000D92  0100               	movlb	0	; () banked
  8536  000D94  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8537  000D96  22DA               	addwfc	fsr2h,f,c
  8538  000D98  0100               	movlb	0	; () banked
  8539  000D9A  EE10 F056          	lfsr	1,86
  8540  000D9E  0100               	movlb	0	; () banked
  8541  000DA0  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8542  000DA2  26E1               	addwf	fsr1l,f,c
  8543  000DA4  0100               	movlb	0	; () banked
  8544  000DA6  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8545  000DA8  22E2               	addwfc	fsr1h,f,c
  8546  000DAA  50E7               	movf	indf1,w,c
  8547  000DAC  0100               	movlb	0	; () banked
  8548  000DAE  6F91               	movwf	??i2_recv_msg& (0+255),b
  8549  000DB0  0E01               	movlw	1
  8550  000DB2  0100               	movlb	0	; () banked
  8551  000DB4  2591               	addwf	??i2_recv_msg& (0+255),w,b
  8552  000DB6  0100               	movlb	0	; () banked
  8553  000DB8  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8554  000DBA  0100               	movlb	0	; () banked
  8555  000DBC  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8556  000DBE  0E00               	movlw	0
  8557  000DC0  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8558  000DC2  0E00               	movlw	0
  8559  000DC4  0100               	movlb	0	; () banked
  8560  000DC6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8561  000DC8  0E05               	movlw	5
  8562  000DCA  0100               	movlb	0	; () banked
  8563  000DCC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8564  000DCE  EC4F  F009         	call	i2___awmod	;wreg free
  8565  000DD2  0100               	movlb	0	; () banked
  8566  000DD4  5180               	movf	?i2___awmod& (0+255),w,b
  8567  000DD6  6EDF               	movwf	indf2,c
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8571  000DD8  0100               	movlb	0	; () banked
  8572  000DDA  EE20 F002          	lfsr	2,2
  8573  000DDE  0100               	movlb	0	; () banked
  8574  000DE0  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8575  000DE2  26D9               	addwf	fsr2l,f,c
  8576  000DE4  0100               	movlb	0	; () banked
  8577  000DE6  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8578  000DE8  22DA               	addwfc	fsr2h,f,c
  8579  000DEA  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8580  000DEE  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8581  000DF2  CFDF FFE7          	movff	indf2,indf1
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;messages.c: 91: qmsg->full = 0;
  8585  000DF6  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8586  000DFA  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8587  000DFE  0E00               	movlw	0
  8588  000E00  6EDF               	movwf	indf2,c
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;messages.c: 92: return (tlength);
  8592  000E02  0100               	movlb	0	; () banked
  8593  000E04  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  8594  000E06  0012               	return	
  8595  000E08                     i2l3572:
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;messages.c: 94: return (-4);
  8599  000E08  0EFC               	movlw	252
  8600  000E0A  0012               	return	
  8601  000E0C                     __end_ofi2_recv_msg:
  8602                           	opt stack 0
  8603                           pclatu	equ	0xFFB
  8604                           pclath	equ	0xFFA
  8605                           tblptru	equ	0xFF8
  8606                           tblptrh	equ	0xFF7
  8607                           tblptrl	equ	0xFF6
  8608                           tablat	equ	0xFF5
  8609                           prodh	equ	0xFF4
  8610                           prodl	equ	0xFF3
  8611                           intcon	equ	0xFF2
  8612                           intcon2	equ	0xFF1
  8613                           postinc0	equ	0xFEE
  8614                           fsr0h	equ	0xFEA
  8615                           fsr0l	equ	0xFE9
  8616                           wreg	equ	0xFE8
  8617                           indf1	equ	0xFE7
  8618                           fsr1h	equ	0xFE2
  8619                           fsr1l	equ	0xFE1
  8620                           bsr	equ	0xFE0
  8621                           indf2	equ	0xFDF
  8622                           postinc2	equ	0xFDE
  8623                           postdec2	equ	0xFDD
  8624                           fsr2h	equ	0xFDA
  8625                           fsr2l	equ	0xFD9
  8626                           status	equ	0xFD8
  8627                           
  8628 ;; *************** function i2_memcpy *****************
  8629 ;; Defined at:
  8630 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  d1              2    0[BANK0 ] PTR void 
  8633 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8634 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  8635 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  8636 ;;  s1              2    2[BANK0 ] PTR const void 
  8637 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  8638 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  8639 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  8640 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8641 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  8642 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  8643 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  8644 ;;  n               2    4[BANK0 ] unsigned int 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8647 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  8648 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  8649 ;;		 -> i_like_to_moveit_moveit@moves(4), NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interru
      +pt_handler@bad_checksum_id(1), 
  8650 ;;		 -> uart_receive_interrupt_handler@gooey_uart_center(14), uart_receive_interrupt_handler@bad_counter_id(2), uart_rec
      +eive_interrupt_handler@bad_end_id(1), uart_receive_interrupt_handler@bad_start_id(1), 
  8651 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), 
  8652 ;;		 -> ToMainLow_MQ(87), main@motor_data(14), main@t1thread_data(6), main@ic(38), 
  8653 ;;		 -> InterruptHandlerLow@sendy_stuff(14), 
  8654 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8655 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8656 ;;		 -> NULL(0), uart_transmit_interrupt_handler@data(4), FromMainHigh_MQ(87), FromMainLow_MQ(87), 
  8657 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), main@ic(38), 
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  2    0[BANK0 ] PTR void 
  8660 ;; Registers used:
  8661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8667 ;;      Params:         0       6       0       0       0
  8668 ;;      Locals:         0       4       0       0       0
  8669 ;;      Temps:          0       0       0       0       0
  8670 ;;      Totals:         0      10       0       0       0
  8671 ;;Total ram usage:       10 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; This function calls:
  8674 ;;		Nothing
  8675 ;; This function is called by:
  8676 ;;		i2_send_msg
  8677 ;;		i2_recv_msg
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681                           	psect	text47
  8682  00194A                     __ptext47:
  8683                           	opt stack 0
  8684  00194A                     i2_memcpy:
  8685                           	opt stack 16
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;incstack = 0
  8689  00194A  0100               	movlb	0	; () banked
  8690  00194C  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8691  001950  0100               	movlb	0	; () banked
  8692  001952  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  8693  001956  0100               	movlb	0	; () banked
  8694  001958  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8695  00195C  0100               	movlb	0	; () banked
  8696  00195E  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  8697  001962  D010               	goto	i2l2382
  8698  001964                     i2l2376:
  8699                           
  8700                           ; BSR set to: 0
  8701  001964  C088  FFD9         	movff	i2memcpy@s,fsr2l
  8702  001968  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  8703  00196C  C086  FFE1         	movff	i2memcpy@d,fsr1l
  8704  001970  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  8705  001974  CFDF FFE7          	movff	indf2,indf1
  8706                           
  8707                           ; BSR set to: 0
  8708  001978  0100               	movlb	0	; () banked
  8709  00197A  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  8710  00197C  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  8711                           
  8712                           ; BSR set to: 0
  8713  00197E  0100               	movlb	0	; () banked
  8714  001980  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  8715  001982  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  8716  001984                     i2l2382:
  8717                           
  8718                           ; BSR set to: 0
  8719  001984  0100               	movlb	0	; () banked
  8720  001986  0784               	decf	i2memcpy@n& (0+255),f,b
  8721  001988  A0D8               	btfss	status,0,c
  8722  00198A  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  8723  00198C  0100               	movlb	0	; () banked
  8724  00198E  2984               	incf	i2memcpy@n& (0+255),w,b
  8725  001990  B4D8               	btfsc	status,2,c
  8726  001992  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  8727  001994  B4D8               	btfsc	status,2,c
  8728                           
  8729                           ; BSR set to: 0
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;	Return value of i2_memcpy is never used
  8733  001996  0012               	return	
  8734  001998  D7E5               	goto	i2l2376
  8735  00199A                     __end_ofi2_memcpy:
  8736                           	opt stack 0
  8737                           pclatu	equ	0xFFB
  8738                           pclath	equ	0xFFA
  8739                           tblptru	equ	0xFF8
  8740                           tblptrh	equ	0xFF7
  8741                           tblptrl	equ	0xFF6
  8742                           tablat	equ	0xFF5
  8743                           prodh	equ	0xFF4
  8744                           prodl	equ	0xFF3
  8745                           intcon	equ	0xFF2
  8746                           intcon2	equ	0xFF1
  8747                           postinc0	equ	0xFEE
  8748                           fsr0h	equ	0xFEA
  8749                           fsr0l	equ	0xFE9
  8750                           wreg	equ	0xFE8
  8751                           indf1	equ	0xFE7
  8752                           fsr1h	equ	0xFE2
  8753                           fsr1l	equ	0xFE1
  8754                           bsr	equ	0xFE0
  8755                           indf2	equ	0xFDF
  8756                           postinc2	equ	0xFDE
  8757                           postdec2	equ	0xFDD
  8758                           fsr2h	equ	0xFDA
  8759                           fsr2l	equ	0xFD9
  8760                           status	equ	0xFD8
  8761                           
  8762 ;; *************** function i2___awmod *****************
  8763 ;; Defined at:
  8764 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  dividend        2    0[BANK0 ] int 
  8767 ;;  divisor         2    2[BANK0 ] int 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  __awmod         1    5[BANK0 ] unsigned char 
  8770 ;;  __awmod         1    4[BANK0 ] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  2    0[BANK0 ] int 
  8773 ;; Registers used:
  8774 ;;		wreg, status,2, status,0, prodl
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8780 ;;      Params:         0       4       0       0       0
  8781 ;;      Locals:         0       2       0       0       0
  8782 ;;      Temps:          0       0       0       0       0
  8783 ;;      Totals:         0       6       0       0       0
  8784 ;;Total ram usage:        6 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		i2_send_msg
  8790 ;;		i2_recv_msg
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text48
  8795  00129E                     __ptext48:
  8796                           	opt stack 0
  8797  00129E                     i2___awmod:
  8798                           	opt stack 16
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;incstack = 0
  8802  00129E  0E00               	movlw	0
  8803  0012A0  0100               	movlb	0	; () banked
  8804  0012A2  6F85               	movwf	i2___awmod@sign& (0+255),b
  8805                           
  8806                           ; BSR set to: 0
  8807  0012A4  0100               	movlb	0	; () banked
  8808  0012A6  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  8809  0012A8  0A80               	xorlw	128
  8810  0012AA  6EF3               	movwf	prodl,c
  8811  0012AC  0E80               	movlw	128
  8812  0012AE  5CF3               	subwf	prodl,w,c
  8813  0012B0  0E00               	movlw	0
  8814  0012B2  B4D8               	btfsc	status,2,c
  8815  0012B4  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  8816  0012B6  B0D8               	btfsc	status,0,c
  8817  0012B8  D009               	goto	i2l2428
  8818                           
  8819                           ; BSR set to: 0
  8820  0012BA  0100               	movlb	0	; () banked
  8821  0012BC  6D80               	negf	i2___awmod@dividend& (0+255),b
  8822  0012BE  0100               	movlb	0	; () banked
  8823  0012C0  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8824  0012C2  B0D8               	btfsc	status,0,c
  8825  0012C4  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8826                           
  8827                           ; BSR set to: 0
  8828  0012C6  0E01               	movlw	1
  8829  0012C8  0100               	movlb	0	; () banked
  8830  0012CA  6F85               	movwf	i2___awmod@sign& (0+255),b
  8831  0012CC                     i2l2428:
  8832                           
  8833                           ; BSR set to: 0
  8834  0012CC  0100               	movlb	0	; () banked
  8835  0012CE  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8836  0012D0  0A80               	xorlw	128
  8837  0012D2  6EF3               	movwf	prodl,c
  8838  0012D4  0E80               	movlw	128
  8839  0012D6  5CF3               	subwf	prodl,w,c
  8840  0012D8  0E00               	movlw	0
  8841  0012DA  B4D8               	btfsc	status,2,c
  8842  0012DC  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  8843  0012DE  B0D8               	btfsc	status,0,c
  8844  0012E0  D006               	goto	i2l2432
  8845                           
  8846                           ; BSR set to: 0
  8847  0012E2  0100               	movlb	0	; () banked
  8848  0012E4  6D82               	negf	i2___awmod@divisor& (0+255),b
  8849  0012E6  0100               	movlb	0	; () banked
  8850  0012E8  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  8851  0012EA  B0D8               	btfsc	status,0,c
  8852  0012EC  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  8853  0012EE                     i2l2432:
  8854                           
  8855                           ; BSR set to: 0
  8856  0012EE  0100               	movlb	0	; () banked
  8857  0012F0  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8858  0012F2  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  8859  0012F4  B4D8               	btfsc	status,2,c
  8860  0012F6  D026               	goto	i2l2448
  8861                           
  8862                           ; BSR set to: 0
  8863  0012F8  0E01               	movlw	1
  8864  0012FA  0100               	movlb	0	; () banked
  8865  0012FC  6F84               	movwf	i2___awmod@counter& (0+255),b
  8866  0012FE  D006               	goto	i2l2438
  8867  001300                     i2l2436:
  8868                           
  8869                           ; BSR set to: 0
  8870  001300  0100               	movlb	0	; () banked
  8871  001302  90D8               	bcf	status,0,c
  8872  001304  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  8873  001306  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  8874  001308  0100               	movlb	0	; () banked
  8875  00130A  2B84               	incf	i2___awmod@counter& (0+255),f,b
  8876  00130C                     i2l2438:
  8877                           
  8878                           ; BSR set to: 0
  8879  00130C  0100               	movlb	0	; () banked
  8880  00130E  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  8881  001310  D7F7               	goto	i2l2436
  8882  001312                     i2l2440:
  8883                           
  8884                           ; BSR set to: 0
  8885  001312  0100               	movlb	0	; () banked
  8886  001314  5182               	movf	i2___awmod@divisor& (0+255),w,b
  8887  001316  0100               	movlb	0	; () banked
  8888  001318  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  8889  00131A  0100               	movlb	0	; () banked
  8890  00131C  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8891  00131E  0100               	movlb	0	; () banked
  8892  001320  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  8893  001322  A0D8               	btfss	status,0,c
  8894  001324  D008               	goto	i2l2444
  8895                           
  8896                           ; BSR set to: 0
  8897  001326  0100               	movlb	0	; () banked
  8898  001328  5182               	movf	i2___awmod@divisor& (0+255),w,b
  8899  00132A  0100               	movlb	0	; () banked
  8900  00132C  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  8901  00132E  0100               	movlb	0	; () banked
  8902  001330  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8903  001332  0100               	movlb	0	; () banked
  8904  001334  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  8905  001336                     i2l2444:
  8906                           
  8907                           ; BSR set to: 0
  8908  001336  0100               	movlb	0	; () banked
  8909  001338  90D8               	bcf	status,0,c
  8910  00133A  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  8911  00133C  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  8912                           
  8913                           ; BSR set to: 0
  8914  00133E  0100               	movlb	0	; () banked
  8915  001340  2F84               	decfsz	i2___awmod@counter& (0+255),f,b
  8916  001342  D7E7               	goto	i2l2440
  8917  001344                     i2l2448:
  8918                           
  8919                           ; BSR set to: 0
  8920  001344  0100               	movlb	0	; () banked
  8921  001346  5185               	movf	i2___awmod@sign& (0+255),w,b
  8922  001348  B4D8               	btfsc	status,2,c
  8923  00134A  D006               	goto	i2l2452
  8924                           
  8925                           ; BSR set to: 0
  8926  00134C  0100               	movlb	0	; () banked
  8927  00134E  6D80               	negf	i2___awmod@dividend& (0+255),b
  8928  001350  0100               	movlb	0	; () banked
  8929  001352  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8930  001354  B0D8               	btfsc	status,0,c
  8931  001356  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8932  001358                     i2l2452:
  8933                           
  8934                           ; BSR set to: 0
  8935  001358  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  8936  00135C  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  8937  001360  0012               	return	
  8938  001362                     __end_ofi2___awmod:
  8939                           	opt stack 0
  8940                           pclatu	equ	0xFFB
  8941                           pclath	equ	0xFFA
  8942                           tblptru	equ	0xFF8
  8943                           tblptrh	equ	0xFF7
  8944                           tblptrl	equ	0xFF6
  8945                           tablat	equ	0xFF5
  8946                           prodh	equ	0xFF4
  8947                           prodl	equ	0xFF3
  8948                           intcon	equ	0xFF2
  8949                           intcon2	equ	0xFF1
  8950                           postinc0	equ	0xFEE
  8951                           fsr0h	equ	0xFEA
  8952                           fsr0l	equ	0xFE9
  8953                           wreg	equ	0xFE8
  8954                           indf1	equ	0xFE7
  8955                           fsr1h	equ	0xFE2
  8956                           fsr1l	equ	0xFE1
  8957                           bsr	equ	0xFE0
  8958                           indf2	equ	0xFDF
  8959                           postinc2	equ	0xFDE
  8960                           postdec2	equ	0xFDD
  8961                           fsr2h	equ	0xFDA
  8962                           fsr2l	equ	0xFD9
  8963                           status	equ	0xFD8
  8964                           
  8965 ;; *************** function _SleepIfOkay *****************
  8966 ;; Defined at:
  8967 ;;		line 226 in file "../src/messages.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;		None
  8970 ;; Auto vars:     Size  Location     Type
  8971 ;;		None
  8972 ;; Return value:  Size  Location     Type
  8973 ;;		None               void
  8974 ;; Registers used:
  8975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8981 ;;      Params:         0       0       0       0       0
  8982 ;;      Locals:         0       0       0       0       0
  8983 ;;      Temps:          0       0       0       0       0
  8984 ;;      Totals:         0       0       0       0       0
  8985 ;;Total ram usage:        0 bytes
  8986 ;; Hardware stack levels used:    1
  8987 ;; Hardware stack levels required when called:    2
  8988 ;; This function calls:
  8989 ;;		_check_msg
  8990 ;;		_enter_sleep_mode
  8991 ;;		_in_high_int
  8992 ;;		_in_low_int
  8993 ;; This function is called by:
  8994 ;;		_InterruptHandlerHigh
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text49
  8999  0017F2                     __ptext49:
  9000                           	opt stack 0
  9001  0017F2                     _SleepIfOkay:
  9002                           	opt stack 17
  9003                           
  9004                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;incstack = 0
  9008  0017F2  0100               	movlb	0	; () banked
  9009  0017F4  67C7               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9010  0017F6  D001               	goto	i2l2900
  9011  0017F8  0012               	return	
  9012  0017FA                     i2l2900:
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;messages.c: 230: }
  9016                           ;messages.c: 233: if (in_low_int()) {
  9017  0017FA  EC13  F00D         	call	_in_low_int	;wreg free
  9018  0017FE  0100               	movlb	0	; () banked
  9019  001800  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  9020  001802  0100               	movlb	0	; () banked
  9021  001804  1182               	iorwf	?_in_low_int& (0+255),w,b
  9022  001806  A4D8               	btfss	status,2,c
  9023  001808  0012               	return	
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;messages.c: 235: }
  9027                           ;messages.c: 238: if (!in_high_int()) {
  9028                           
  9029                           ; BSR set to: 0
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;messages.c: 234: return;
  9033  00180A  EC44  F00E         	call	_in_high_int	;wreg free
  9034  00180E  0100               	movlb	0	; () banked
  9035  001810  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9036  001812  0100               	movlb	0	; () banked
  9037  001814  1180               	iorwf	?_in_high_int& (0+255),w,b
  9038  001816  B4D8               	btfsc	status,2,c
  9039  001818  0012               	return	
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;messages.c: 240: }
  9043                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9044                           
  9045                           ; BSR set to: 0
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;messages.c: 239: return;
  9049  00181A  0102               	movlb	2	; () banked
  9050  00181C  0E02               	movlw	high _ToMainHigh_MQ
  9051  00181E  0100               	movlb	0	; () banked
  9052  001820  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9053  001822  0102               	movlb	2	; () banked
  9054  001824  0E57               	movlw	low _ToMainHigh_MQ
  9055  001826  0100               	movlb	0	; () banked
  9056  001828  6F80               	movwf	check_msg@qptr& (0+255),b
  9057  00182A  EC83  F00D         	call	_check_msg	;wreg free
  9058  00182E  0900               	iorlw	0
  9059  001830  A4D8               	btfss	status,2,c
  9060  001832  0012               	return	
  9061                           
  9062                           ;messages.c: 247: }
  9063                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9064                           
  9065                           ;messages.c: 246: return;
  9066  001834  0101               	movlb	1	; () banked
  9067  001836  0E01               	movlw	high _ToMainLow_MQ
  9068  001838  0100               	movlb	0	; () banked
  9069  00183A  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9070  00183C  0101               	movlb	1	; () banked
  9071  00183E  0E66               	movlw	low _ToMainLow_MQ
  9072  001840  0100               	movlb	0	; () banked
  9073  001842  6F80               	movwf	check_msg@qptr& (0+255),b
  9074  001844  EC83  F00D         	call	_check_msg	;wreg free
  9075  001848  0900               	iorlw	0
  9076  00184A  B4D8               	btfsc	status,2,c
  9077                           
  9078                           ;messages.c: 250: }
  9079                           ;messages.c: 251: enter_sleep_mode();
  9080                           
  9081                           ;messages.c: 249: return;
  9082  00184C  EC74  F00E         	call	_enter_sleep_mode	;wreg free
  9083  001850  0012               	return	
  9084  001852                     __end_of_SleepIfOkay:
  9085                           	opt stack 0
  9086                           pclatu	equ	0xFFB
  9087                           pclath	equ	0xFFA
  9088                           tblptru	equ	0xFF8
  9089                           tblptrh	equ	0xFF7
  9090                           tblptrl	equ	0xFF6
  9091                           tablat	equ	0xFF5
  9092                           prodh	equ	0xFF4
  9093                           prodl	equ	0xFF3
  9094                           intcon	equ	0xFF2
  9095                           intcon2	equ	0xFF1
  9096                           postinc0	equ	0xFEE
  9097                           fsr0h	equ	0xFEA
  9098                           fsr0l	equ	0xFE9
  9099                           wreg	equ	0xFE8
  9100                           indf1	equ	0xFE7
  9101                           fsr1h	equ	0xFE2
  9102                           fsr1l	equ	0xFE1
  9103                           bsr	equ	0xFE0
  9104                           indf2	equ	0xFDF
  9105                           postinc2	equ	0xFDE
  9106                           postdec2	equ	0xFDD
  9107                           fsr2h	equ	0xFDA
  9108                           fsr2l	equ	0xFD9
  9109                           status	equ	0xFD8
  9110                           
  9111 ;; *************** function _in_low_int *****************
  9112 ;; Defined at:
  9113 ;;		line 33 in file "../src/interrupts.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;		None
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;		None
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  2    2[BANK0 ] int 
  9120 ;; Registers used:
  9121 ;;		wreg, status,2, status,0, cstack
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9127 ;;      Params:         0       2       0       0       0
  9128 ;;      Locals:         0       0       0       0       0
  9129 ;;      Temps:          0       0       0       0       0
  9130 ;;      Totals:         0       2       0       0       0
  9131 ;;Total ram usage:        2 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:    1
  9134 ;; This function calls:
  9135 ;;		_in_high_int
  9136 ;; This function is called by:
  9137 ;;		_SleepIfOkay
  9138 ;;		_in_main
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text50
  9143  001A26                     __ptext50:
  9144                           	opt stack 0
  9145  001A26                     _in_low_int:
  9146                           	opt stack 17
  9147                           
  9148                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9149                           
  9150                           ;incstack = 0
  9151  001A26  ACF2               	btfss	intcon,6,c	;volatile
  9152  001A28  D007               	goto	i2l2584
  9153                           
  9154                           ;interrupts.c: 35: return (0);
  9155  001A2A  0E00               	movlw	0
  9156  001A2C  0100               	movlb	0	; () banked
  9157  001A2E  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9158  001A30  0E00               	movlw	0
  9159  001A32  0100               	movlb	0	; () banked
  9160  001A34  6F82               	movwf	?_in_low_int& (0+255),b
  9161  001A36  0012               	return	
  9162  001A38                     i2l2584:
  9163  001A38  EC44  F00E         	call	_in_high_int	;wreg free
  9164  001A3C  0100               	movlb	0	; () banked
  9165  001A3E  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9166  001A40  0100               	movlb	0	; () banked
  9167  001A42  1180               	iorwf	?_in_high_int& (0+255),w,b
  9168  001A44  B4D8               	btfsc	status,2,c
  9169  001A46  D007               	goto	i2l2592
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;interrupts.c: 37: return (0);
  9173  001A48  0E00               	movlw	0
  9174  001A4A  0100               	movlb	0	; () banked
  9175  001A4C  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9176  001A4E  0E00               	movlw	0
  9177  001A50  0100               	movlb	0	; () banked
  9178  001A52  6F82               	movwf	?_in_low_int& (0+255),b
  9179  001A54  0012               	return	
  9180  001A56                     i2l2592:
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;interrupts.c: 39: return (1);
  9184  001A56  0E00               	movlw	0
  9185  001A58  0100               	movlb	0	; () banked
  9186  001A5A  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9187  001A5C  0E01               	movlw	1
  9188  001A5E  0100               	movlb	0	; () banked
  9189  001A60  6F82               	movwf	?_in_low_int& (0+255),b
  9190  001A62  0012               	return	
  9191  001A64                     __end_of_in_low_int:
  9192                           	opt stack 0
  9193                           pclatu	equ	0xFFB
  9194                           pclath	equ	0xFFA
  9195                           tblptru	equ	0xFF8
  9196                           tblptrh	equ	0xFF7
  9197                           tblptrl	equ	0xFF6
  9198                           tablat	equ	0xFF5
  9199                           prodh	equ	0xFF4
  9200                           prodl	equ	0xFF3
  9201                           intcon	equ	0xFF2
  9202                           intcon2	equ	0xFF1
  9203                           postinc0	equ	0xFEE
  9204                           fsr0h	equ	0xFEA
  9205                           fsr0l	equ	0xFE9
  9206                           wreg	equ	0xFE8
  9207                           indf1	equ	0xFE7
  9208                           fsr1h	equ	0xFE2
  9209                           fsr1l	equ	0xFE1
  9210                           bsr	equ	0xFE0
  9211                           indf2	equ	0xFDF
  9212                           postinc2	equ	0xFDE
  9213                           postdec2	equ	0xFDD
  9214                           fsr2h	equ	0xFDA
  9215                           fsr2l	equ	0xFD9
  9216                           status	equ	0xFD8
  9217                           
  9218 ;; *************** function _in_high_int *****************
  9219 ;; Defined at:
  9220 ;;		line 25 in file "../src/interrupts.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;		None
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  2    0[BANK0 ] int 
  9227 ;; Registers used:
  9228 ;;		wreg, status,2
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9234 ;;      Params:         0       2       0       0       0
  9235 ;;      Locals:         0       0       0       0       0
  9236 ;;      Temps:          0       0       0       0       0
  9237 ;;      Totals:         0       2       0       0       0
  9238 ;;Total ram usage:        2 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_in_low_int
  9244 ;;		_SleepIfOkay
  9245 ;;		_in_main
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           	psect	text51
  9250  001C88                     __ptext51:
  9251                           	opt stack 0
  9252  001C88                     _in_high_int:
  9253                           	opt stack 17
  9254                           
  9255                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;incstack = 0
  9259  001C88  0E00               	movlw	0
  9260  001C8A  AEF2               	btfss	intcon,7,c	;volatile
  9261  001C8C  0E01               	movlw	1
  9262  001C8E  0100               	movlb	0	; () banked
  9263  001C90  6F80               	movwf	?_in_high_int& (0+255),b
  9264  001C92  0100               	movlb	0	; () banked
  9265  001C94  6B81               	clrf	(?_in_high_int+1)& (0+255),b
  9266  001C96  0012               	return	
  9267  001C98                     __end_of_in_high_int:
  9268                           	opt stack 0
  9269                           pclatu	equ	0xFFB
  9270                           pclath	equ	0xFFA
  9271                           tblptru	equ	0xFF8
  9272                           tblptrh	equ	0xFF7
  9273                           tblptrl	equ	0xFF6
  9274                           tablat	equ	0xFF5
  9275                           prodh	equ	0xFF4
  9276                           prodl	equ	0xFF3
  9277                           intcon	equ	0xFF2
  9278                           intcon2	equ	0xFF1
  9279                           postinc0	equ	0xFEE
  9280                           fsr0h	equ	0xFEA
  9281                           fsr0l	equ	0xFE9
  9282                           wreg	equ	0xFE8
  9283                           indf1	equ	0xFE7
  9284                           fsr1h	equ	0xFE2
  9285                           fsr1l	equ	0xFE1
  9286                           bsr	equ	0xFE0
  9287                           indf2	equ	0xFDF
  9288                           postinc2	equ	0xFDE
  9289                           postdec2	equ	0xFDD
  9290                           fsr2h	equ	0xFDA
  9291                           fsr2l	equ	0xFD9
  9292                           status	equ	0xFD8
  9293                           
  9294 ;; *************** function _enter_sleep_mode *****************
  9295 ;; Defined at:
  9296 ;;		line 202 in file "../src/messages.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;		None               void
  9303 ;; Registers used:
  9304 ;;		None
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9310 ;;      Params:         0       0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0
  9312 ;;      Temps:          0       0       0       0       0
  9313 ;;      Totals:         0       0       0       0       0
  9314 ;;Total ram usage:        0 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; This function calls:
  9317 ;;		Nothing
  9318 ;; This function is called by:
  9319 ;;		_SleepIfOkay
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text52
  9324  001CE8                     __ptext52:
  9325                           	opt stack 0
  9326  001CE8                     _enter_sleep_mode:
  9327                           	opt stack 18
  9328                           
  9329                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;incstack = 0
  9333  001CE8  8ED3               	bsf	4051,7,c	;volatile
  9334  001CEA  0003               	sleep		;# 
  9335  001CEC  0012               	return	
  9336  001CEE                     __end_of_enter_sleep_mode:
  9337                           	opt stack 0
  9338                           pclatu	equ	0xFFB
  9339                           pclath	equ	0xFFA
  9340                           tblptru	equ	0xFF8
  9341                           tblptrh	equ	0xFF7
  9342                           tblptrl	equ	0xFF6
  9343                           tablat	equ	0xFF5
  9344                           prodh	equ	0xFF4
  9345                           prodl	equ	0xFF3
  9346                           intcon	equ	0xFF2
  9347                           intcon2	equ	0xFF1
  9348                           postinc0	equ	0xFEE
  9349                           fsr0h	equ	0xFEA
  9350                           fsr0l	equ	0xFE9
  9351                           wreg	equ	0xFE8
  9352                           indf1	equ	0xFE7
  9353                           fsr1h	equ	0xFE2
  9354                           fsr1l	equ	0xFE1
  9355                           bsr	equ	0xFE0
  9356                           indf2	equ	0xFDF
  9357                           postinc2	equ	0xFDE
  9358                           postdec2	equ	0xFDD
  9359                           fsr2h	equ	0xFDA
  9360                           fsr2l	equ	0xFD9
  9361                           status	equ	0xFD8
  9362                           
  9363 ;; *************** function _check_msg *****************
  9364 ;; Defined at:
  9365 ;;		line 220 in file "../src/messages.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9368 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      unsigned char 
  9373 ;; Registers used:
  9374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9380 ;;      Params:         0       2       0       0       0
  9381 ;;      Locals:         0       0       0       0       0
  9382 ;;      Temps:          0       1       0       0       0
  9383 ;;      Totals:         0       3       0       0       0
  9384 ;;Total ram usage:        3 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		_SleepIfOkay
  9390 ;;		_block_on_To_msgqueues
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text53
  9395  001B06                     __ptext53:
  9396                           	opt stack 0
  9397  001B06                     _check_msg:
  9398                           	opt stack 18
  9399                           
  9400                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9401                           
  9402                           ;incstack = 0
  9403  001B06  0100               	movlb	0	; () banked
  9404  001B08  EE20 F056          	lfsr	2,86
  9405  001B0C  0100               	movlb	0	; () banked
  9406  001B0E  5180               	movf	check_msg@qptr& (0+255),w,b
  9407  001B10  26D9               	addwf	fsr2l,f,c
  9408  001B12  0100               	movlb	0	; () banked
  9409  001B14  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
  9410  001B16  22DA               	addwfc	fsr2h,f,c
  9411  001B18  50DF               	movf	indf2,w,c
  9412  001B1A  0100               	movlb	0	; () banked
  9413  001B1C  6F82               	movwf	??_check_msg& (0+255),b
  9414  001B1E  0100               	movlb	0	; () banked
  9415  001B20  5182               	movf	??_check_msg& (0+255),w,b
  9416  001B22  0D11               	mullw	17
  9417  001B24  50F3               	movf	prodl,w,c
  9418  001B26  0100               	movlb	0	; () banked
  9419  001B28  2580               	addwf	check_msg@qptr& (0+255),w,b
  9420  001B2A  6ED9               	movwf	fsr2l,c
  9421  001B2C  50F4               	movf	prodh,w,c
  9422  001B2E  0100               	movlb	0	; () banked
  9423  001B30  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  9424  001B32  6EDA               	movwf	fsr2h,c
  9425  001B34  50DF               	movf	indf2,w,c
  9426  001B36  0012               	return	
  9427  001B38                     __end_of_check_msg:
  9428                           	opt stack 0
  9429  0000                     pclatu	equ	0xFFB
  9430                           pclath	equ	0xFFA
  9431                           tblptru	equ	0xFF8
  9432                           tblptrh	equ	0xFF7
  9433                           tblptrl	equ	0xFF6
  9434                           tablat	equ	0xFF5
  9435                           prodh	equ	0xFF4
  9436                           prodl	equ	0xFF3
  9437                           intcon	equ	0xFF2
  9438                           intcon2	equ	0xFF1
  9439                           postinc0	equ	0xFEE
  9440                           fsr0h	equ	0xFEA
  9441                           fsr0l	equ	0xFE9
  9442                           wreg	equ	0xFE8
  9443                           indf1	equ	0xFE7
  9444                           fsr1h	equ	0xFE2
  9445                           fsr1l	equ	0xFE1
  9446                           bsr	equ	0xFE0
  9447                           indf2	equ	0xFDF
  9448                           postinc2	equ	0xFDE
  9449                           postdec2	equ	0xFDD
  9450                           fsr2h	equ	0xFDA
  9451                           fsr2l	equ	0xFD9
  9452                           status	equ	0xFD8
  9453                           pclatu	equ	0xFFB
  9454                           pclath	equ	0xFFA
  9455                           tblptru	equ	0xFF8
  9456                           tblptrh	equ	0xFF7
  9457                           tblptrl	equ	0xFF6
  9458                           tablat	equ	0xFF5
  9459                           prodh	equ	0xFF4
  9460                           prodl	equ	0xFF3
  9461                           intcon	equ	0xFF2
  9462                           intcon2	equ	0xFF1
  9463                           postinc0	equ	0xFEE
  9464                           fsr0h	equ	0xFEA
  9465                           fsr0l	equ	0xFE9
  9466                           wreg	equ	0xFE8
  9467                           indf1	equ	0xFE7
  9468                           fsr1h	equ	0xFE2
  9469                           fsr1l	equ	0xFE1
  9470                           bsr	equ	0xFE0
  9471                           indf2	equ	0xFDF
  9472                           postinc2	equ	0xFDE
  9473                           postdec2	equ	0xFDD
  9474                           fsr2h	equ	0xFDA
  9475                           fsr2l	equ	0xFD9
  9476                           status	equ	0xFD8
  9477                           
  9478                           	psect	param0
  9479  0000                     pclatu	equ	0xFFB
  9480                           pclath	equ	0xFFA
  9481                           tblptru	equ	0xFF8
  9482                           tblptrh	equ	0xFF7
  9483                           tblptrl	equ	0xFF6
  9484                           tablat	equ	0xFF5
  9485                           prodh	equ	0xFF4
  9486                           prodl	equ	0xFF3
  9487                           intcon	equ	0xFF2
  9488                           intcon2	equ	0xFF1
  9489                           postinc0	equ	0xFEE
  9490                           fsr0h	equ	0xFEA
  9491                           fsr0l	equ	0xFE9
  9492                           wreg	equ	0xFE8
  9493                           indf1	equ	0xFE7
  9494                           fsr1h	equ	0xFE2
  9495                           fsr1l	equ	0xFE1
  9496                           bsr	equ	0xFE0
  9497                           indf2	equ	0xFDF
  9498                           postinc2	equ	0xFDE
  9499                           postdec2	equ	0xFDD
  9500                           fsr2h	equ	0xFDA
  9501                           fsr2l	equ	0xFD9
  9502                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         384
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     85     121
    BANK0           128     69      72
    BANK1           256    102     189
    BANK2           256      0     174
    BANK3           256      0      87

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[14]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), 
		 -> ToMainLow_MQ(BANK1[87]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[14]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 6
		 -> main@t1thread_data(BANK1[6]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 6
		 -> main@t1thread_data(BANK1[6]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 4
		 -> uart_transmit_interrupt_handler@data(COMRAM[4]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 4
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), InterruptHandlerLow@sendy_stuff(COMRAM[14]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), uart_transmit_interrupt_handler@data(COMRAM[4]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> i_like_to_moveit_moveit@moves(BANK1[4]), NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@motor_data(BANK1[14]), main@t1thread_data(BANK1[6]), main@ic(BANK1[38]), 
		 -> InterruptHandlerLow@sendy_stuff(COMRAM[14]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_i_like_to_moveit_moveit
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                83    83      0   17990
                                             22 BANK1     80    80      0
               _FromMainHigh_sendmsg
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
            _i_like_to_moveit_moveit
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3477
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2788
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i_like_to_moveit_moveit                              6     5      1    3913
                                             16 BANK1      6     5      1
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (2) _send_uart_message                                    3     1      2    2822
                                             68 BANK0      1     1      0
                                             14 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _FromMainLow_sendmsg                                  4     1      3    2658
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 31    31      0    7491
                                             54 COMRAM    31    31      0
                  _ToMainLow_sendmsg
                             _blink1
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
                            i1_blip2
                            i1_blip3
 ---------------------------------------------------------------------------------
 (7) i1_blip3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_blip2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                      6     6      0    1765
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      28    28      0    3073
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2317
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _blink1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    4263
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    13    13      0    4007
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               3     1      2      75
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1667
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1568
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainHigh_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _i_like_to_moveit_moveit
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           ___awmod
           _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _ToMainLow_sendmsg
     i1_send_msg
       i1___awmod
       i1_memcpy
   _blink1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
   i1_blip2
   i1_blip3

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      57      10       34.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      AE       8       68.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     66      BD       6       73.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      48       4       56.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     55      79       1       95.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     283      11        0.0%
DATA                 0      0     283      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Nov 09 19:19:54 2014

                              ??_debug_configure 00B8                         _MQ_Main_Willing_to_block 00C7  
                                    _SSPSTATbits 000FC7               uart_receive_interrupt_handler@done 0073  
                      __end_of_ToMainLow_recvmsg 1A9A                                               bsr 000FE0  
                      __end_of_ToMainLow_sendmsg 1C36                                     __CFG_CP0$OFF 000000  
                              i2recv_msg@msgtype 008D                                i2recv_msg@tlength 0094  
                           ?_FromMainLow_recvmsg 0019                                              l134 08BE  
                                            l135 08C4                                              l533 145E  
                                            l537 14B6                             ?_FromMainLow_sendmsg 010B  
                               ??_uart_configure 00B8                                     ___awmod@sign 00BD  
                                 _FromMainLow_MQ 0200                                              prod 000FF3  
                                            wreg 000FE8                                       _TXSTA1bits 000FAC  
                                   __CFG_IESO$ON 000000                                     ?_in_high_int 0080  
                            i2recv_msg@maxlength 008C                                             l1093 17E8  
                                           l4120 080A                                             l3420 124E  
                                           l3412 122A                                             l2612 1708  
                                           l4132 0862                                             l4134 08A6  
                                           l4126 0830                                             l3432 1294  
                                           l3424 1272                                             l3416 123C  
                                           l3408 1208                                             l3418 1248  
                                           l4154 0938                                             l4138 08B4  
                                           l4146 08EA                                             l3428 1280  
                                           l3612 0CCA                                             l4164 0982  
                                           l4148 0906                                             l4158 097A  
                                           l4174 09C6                                             l3392 1914  
                                           l3448 0E5A                                             l3640 17B0  
                                           l3642 17B6                                             l3398 1934  
                                           l3646 17DA                                             l3638 17A4  
                                           l3596 0BEC                                             l3970 143E  
                                           l3992 14AC                                             l3976 1454  
                                           l3986 1496                                             _LATB 000F8A  
                                           i1l61 00D8                                  _FromMainHigh_MQ 0300  
                                  __CFG_FCMEN$ON 000000                                             _blip 1CD0  
                                     i1_recv_msg 1028                                             _main 0776  
                       ?_i_like_to_moveit_moveit 0110                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             fsr0l 000FE9  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           fsr1l 000FE1                                             indf2 000FDF  
                                           fsr2l 000FD9                                      main@msgtype 013E  
                                     i1_send_msg 1362                                             pclat 000FFA  
                                __end_ofi1_blip2 1CE8                                  __end_ofi1_blip3 1CE0  
                                           prodh 000FF4                                             prodl 000FF3  
                          handle_start@data_read 0080                                             start 011E  
                                     i2_recv_msg 0CCE                                    __CFG_FOSC2$ON 000000  
                                     i2_send_msg 0F1C                        ToMainHigh_recvmsg@msgtype 010C  
                                 send_msg@length 0102           uart_receive_interrupt_handler@checksum 002F  
                          ??_FromMainLow_recvmsg 001D                                            ?_blip 0001  
                          ??_FromMainLow_sendmsg 00C3                                            ?_main 0001  
                                __end_of___awmod 129E                                            i1l422 0B70  
                                __end_of___lwmod 17F2                                       i1memcpy@d1 0001  
                                          i2l300 0584                                            i2l302 01A8  
                                          i2l321 0376                                            i2l306 01DA  
                                          i2l308 0230                                            i2l329 0488  
                                          i2l290 118E                                            i2l339 0592  
                                     i1memcpy@s1 0003                      FromMainHigh_recvmsg@msgtype 0098  
                                          _TMR0H 000FD7                                            _TMR1H 000FCF  
                                          _TMR0L 000FD6                                            _TMR1L 000FCE  
                                          _SPBRG 000FAF                                            _TRISB 000F93  
                                          _TRISD 000F95                                       i2memcpy@d1 0080  
                                     i2memcpy@s1 0082                                     ?_init_queues 0001  
                      __size_of_enter_sleep_mode 0006                                   i1___awmod@sign 0006  
                                          _blip1 1CC8                                            _blip2 1CC0  
                                          _blip3 1CB8      uart_receive_interrupt_handler@message_count 0033  
                     ToMainLow_recvmsg@maxlength 00C4                                            main@i 013F  
                        timer0_lthread@msgbuffer 00BE                          i2c_configure_slave@addr 00B8  
                           main@need_sensor_data 0134                                            tablat 000FF5  
        i_like_to_moveit_moveit@right_side_speed 0110                                            status 000FD8  
                               __end_ofi1_memcpy 1A26                               __size_ofi1___awmod 0090  
                               __end_ofi2_memcpy 199A                               __size_ofi2___awmod 00C4  
                                __initialization 18AA                                     __end_of_blip 1CD8  
                                   __end_of_main 0A02                       __size_of_ToMainLow_recvmsg 0036  
                     __size_of_ToMainLow_sendmsg 0024                    __size_of_FromMainHigh_recvmsg 0036  
                  __size_of_FromMainHigh_sendmsg 002E                                           ??_blip 00B8  
                                         ??_main 00C5                                  send_msg@msgtype 0103  
                                  __activetblptr 000002                                  send_msg@tlength 0106  
                     FromMainLow_sendmsg@msgtype 010B                             __end_of_handle_start 11DA  
                                         ?_blip1 0001                                           ?_blip2 0001  
                                         ?_blip3 0001                                        ??i1_blip2 0001  
                                      ??i1_blip3 0001                                           i1l2400 152C  
                                         i1l2402 1534                                           i1l2404 1538  
                                         i1l2412 1556                                           i1l2416 1564  
                                         i1l2408 154C                                           i1l4032 0088  
                                         i1l4024 006E                                           i1l2372 1A14  
                                         i1l4044 009C                                           i1l2366 19F8  
                                         i1l4038 0092                                           i1l2392 1502  
                                         i1l2396 151E                                           i1l3524 106E  
                                         i1l3540 110C                                           i1l3476 139A  
                                         i1l3914 0B84                                           i1l3844 0A48  
                                         i1l3860 0A7C                                           i1l3870 0AAC  
                                         i1l3838 0A42                                           i1l3846 0A4E  
                                         i1l3926 159C                                           i1l3950 15D0  
                                         i2l2440 1312                                           i2l2432 12EE  
                                         i2l4016 1628                                           i1l3858 0A7A  
                                         i2l2452 1358                                           i2l2444 1336  
                                         i2l2436 1300                                           i2l2428 12CC  
                                         i2l3500 0F6A                                           i2l2438 130C  
                                         i2l2382 1984                                           i1l3894 0B28  
                                         i1l3886 0B06                                   __CFG_WDTEN$OFF 000000  
                                         i2l2448 1344                                           i2l2376 1964  
                                         i2l2900 17FA                                           i2l3700 0280  
                                         i2l2592 1A56                                           i2l2584 1A38  
                                         i2l2682 11AA                                           i2l3802 06F2  
                                         i2l3730 03E4                                           i2l3706 02BA  
                                         i2l3556 0D2E                                           i2l3572 0E08  
                                         i2l2684 11C2                                           i2l3812 0738  
                                         i2l3732 0424                                           i2l3708 02FA  
                                         i2l3670 01A0                                           i2l3736 042C  
                                         i2l3664 0192                                           i2l3762 0504  
                                         i2l3690 0246                                           i2l3780 0596  
                                         i2l3774 0558                                           i2l3768 0542  
                                         i2l3688 0206                                           i2l3794 0660  
                                         i2l3786 05F4                                           _RCREG1 000FAE  
                    __end_of_i2c_configure_slave 1BEA                                    ??_SleepIfOkay 0084  
                                         _OSCCON 000FD3                                           _SPBRGH 000FB0  
                                    ?i1_recv_msg 000B                                           _SSPADD 000FC8  
                                         _SSPBUF 000FC9                   __size_of_start_i2c_slave_reply 004C  
                                         _TXREG1 000FAD                                      ?i1_send_msg 000B  
                  __end_of_start_i2c_slave_reply 19E6                               timer0_lthread@tptr 00B8  
                        FromMainLow_recvmsg@data 001B                                      ?i2_recv_msg 008A  
                                    ?i2_send_msg 008A                                   __CFG_XINST$OFF 000000  
               ??_uart_receive_interrupt_handler 001B                  ?_uart_receive_interrupt_handler 0001  
                                _i2c_int_handler 0122                                        ??___awmod 00BC  
                                         _blink0 1CEE                                           _blink1 1CF2  
                                         _ic_ptr 00C5                                        ??___lwmod 00BC  
                                  main@msgbuffer 0124                                 __end_of_init_i2c 16CC  
                                         _memcpy 18FA                                           clear_0 18B0  
                                         clear_1 18BC                                           clear_2 18C8  
                                         clear_3 18D8                                  ___awmod@divisor 00BA  
                                ___awmod@counter 00BC                                           main@ic 0140  
                               __end_of_recv_msg 0CCE                      start_i2c_slave_reply@length 0082  
  uart_transmit_interrupt_handler@message_status 0023                                __end_ofi1___awmod 156E  
                               __end_of_send_msg 0F1C                                     __pdataCOMRAM 0079  
                              __end_ofi2___awmod 1362                          i2c_int_handler@i2c_data 00A5  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8             uart_receive_interrupt_handler@msg_id 0034  
                                    init_queue@i 00BA                                   i2___awmod@sign 0085  
           uart_receive_interrupt_handler@status 002B                         ToMainLow_recvmsg@msgtype 010C  
                           __size_of_in_high_int 0010                          FromMainLow_sendmsg@data 010C  
                                _debug_configure 1CA6                                  __CFG_FOSC$HSPLL 000000  
           uart_transmit_interrupt_handler@index 0078                                       __accesstop 0080  
                        __end_of__initialization 18F0                       __end_of_ToMainHigh_recvmsg 1AD0  
                     __end_of_ToMainHigh_sendmsg 1BC2                                 _need_sensor_data 0070  
                    __end_of_init_timer1_lthread 1C88                              __end_of_SleepIfOkay 1852  
                                 __pcstackCOMRAM 0001                                    __end_of_blip1 1CD0  
                                  __end_of_blip2 1CC8                                    __end_of_blip3 1CC0  
                send_uart_message@message_q_code 00C4                               __size_of_check_msg 0032  
                            __size_ofi1_recv_msg 00E8                              __size_ofi1_send_msg 00C0  
                                      ?i1_memcpy 0001                    __size_of_InterruptHandlerHigh 165E  
                    __end_of_InterruptHandlerLow 011E                                        ?i2_memcpy 0080  
                                  _ToMainHigh_MQ 0257                              __size_ofi2_recv_msg 013E  
                               _enter_sleep_mode 1CE8                              __size_ofi2_send_msg 010C  
                           timer1_lthread@length 0112                                          ??_blip1 00B8  
                                        ??_blip2 00B8                                          ??_blip3 00B8  
                                  check_msg@qptr 0080                             timer1_lthread@retval 00C4  
                           __size_of_init_queues 0058                                       __pbssBANK0 00C7  
                                     __pbssBANK1 0166                                       __pbssBANK2 0200  
                                     __pbssBANK3 0300                          i2c_int_handler@msg_type 00A7  
                        __end_of_i2c_int_handler 0776                               timer1_lthread@tptr 010E  
                                        ?_blink0 0001                                          ?_blink1 0001  
                              recv_msg@maxlength 0102                                  recv_msg@msgtype 0103  
                                recv_msg@tlength 0108                            __size_of_handle_start 00CA  
                                        ?_memcpy 00B8                 __size_of_i_like_to_moveit_moveit 00BC  
                        __size_of_timer0_lthread 000E                          __size_of_timer1_lthread 0062  
                                     ??i1_memcpy 0007                                       ??i2_memcpy 0086  
                        __end_of_debug_configure 1CB0                                 i1send_msg@length 000D  
                                        _SSPCON1 000FC6                                          _SSPCON2 000FC5  
                                        _SSPSTAT 000FC7                                          i1_blip2 1CE0  
                                        i1_blip3 1CD8                                __end_of_check_msg 1B38  
                                      ?_init_i2c 00B8                                      _SleepIfOkay 17F2  
                              _send_uart_message 1C56                                        ?_recv_msg 0100  
                                     _in_low_int 1A26                                     _handle_start 1110  
                                        __Hparam 0000                                        ?_send_msg 0100  
                                        __Lparam 0000                               ?_send_uart_message 010E  
      uart_receive_interrupt_handler@status_2003 002C                      __end_of_FromMainLow_recvmsg 1C12  
                    __end_of_FromMainLow_sendmsg 1B94                                          ___awmod 11DA  
                                        ___lwmod 1792                                  __size_of_blink0 0004  
                                __size_of_blink1 0004                                  __CFG_STVREN$OFF 000000  
                            ??_send_uart_message 00C4                                          __pcinit 18AA  
                                __size_of_memcpy 0050                                       _init_queue 16CC  
                                        __ramtop 0400                                          __ptext0 0776  
                                        __ptext1 1C36                                          __ptext2 1730  
                                        __ptext3 1CEE                                          __ptext4 1792  
                                        __ptext5 1B38                                          __ptext6 1C98  
                                        __ptext7 1C76                                          __ptext8 1852  
                                        __ptext9 16CC                                        _T0CONbits 000FD5  
                               ___awmod@dividend 00B8                                   main@motor_data 0116  
                                 __pintcode_body 15F2                     __end_of_FromMainHigh_recvmsg 1B06  
                           end_of_initialization 18F0                          timer1_lthread@msgbuffer 0114  
                   __end_of_FromMainHigh_sendmsg 1B66                       FromMainHigh_sendmsg@length 00C3  
                      __end_of_send_uart_message 1C76                                          memcpy@d 00BE  
                                        memcpy@n 00BC                                          memcpy@s 00C0  
                                     ??_init_i2c 00BA                                     ??i1_recv_msg 0012  
                        __size_of_uart_configure 0020                      i2c_int_handler@data_written 00A2  
                                  __Lmediumconst 0000                                          int_func 15F2  
                                   ??i1_send_msg 0011         uart_receive_interrupt_handler@bad_end_id 0031  
     uart_receive_interrupt_handler@bad_start_id 0030                                 ?_i2c_int_handler 0001  
                                   ??i2_recv_msg 0091                                       ??_recv_msg 00C2  
                                   ??i2_send_msg 0090                                       ??_send_msg 00C2  
uart_receive_interrupt_handler@gooey_uart_center 001D                                          postdec2 000FDD  
                                        postinc0 000FEE                                          postinc2 000FDE  
                      ToMainHigh_sendmsg@msgtype 0096           i_like_to_moveit_moveit@left_side_speed 0111  
                             __end_ofi1_recv_msg 1110                               __end_ofi1_send_msg 1422  
                    FromMainHigh_sendmsg@msgtype 010B           __end_of_uart_receive_interrupt_handler 0B8C  
        __size_of_uart_receive_interrupt_handler 018A                   _uart_receive_interrupt_handler 0A02  
                               ?_debug_configure 0001                                        _TRISBbits 000F93  
                                      _TRISCbits 000F94                               __end_ofi2_recv_msg 0E0C  
                                      i1___awmod 14DE                               __end_ofi2_send_msg 1028  
                                      i2___awmod 129E                    FromMainHigh_recvmsg@maxlength 009C  
                                     main@length 013D                                      ?_in_low_int 0082  
                          timer0_lthread@msgtype 00BA                            _start_i2c_slave_reply 199A  
                   __size_of_i2c_configure_slave 0028                         __end_of_enter_sleep_mode 1CEE  
                        _i_like_to_moveit_moveit 1422                               _ToMainHigh_recvmsg 1A9A  
                                      i1memcpy@d 0007                               _ToMainHigh_sendmsg 1B94  
                                      i1memcpy@n 0005                                        i1memcpy@s 0009  
                                    _BAUDCONbits 000FB8                                   __end_of_blink0 1CF2  
                                 __end_of_blink1 1CF6                                    __pidataCOMRAM 1CF6  
                                 _timer0_lthread 1C98                                      ?_init_queue 00B8  
                                      i2memcpy@d 0086                                        i2memcpy@n 0084  
                                      i2memcpy@s 0088                                   _timer1_lthread 1730  
                                 __end_of_memcpy 194A                                _enable_interrupts 1CB0  
                            ?_ToMainHigh_recvmsg 010C                         i2c_int_handler@data_read 00A9  
                            ?_ToMainHigh_sendmsg 0096                               ?_enable_interrupts 0001  
                            start_initialization 18AA                                    ??_in_high_int 0082  
   uart_receive_interrupt_handler@start_byte_bad 0077                                       ?i1___awmod 0001  
                              __size_ofi1_memcpy 0040                                __size_ofi2_memcpy 0050  
                                     ?i2___awmod 0080                        FromMainLow_sendmsg@length 00C3  
                InterruptHandlerLow@encoder_left 0068                            i2c_int_handler@length 009E  
                            ??_enable_interrupts 00B8                  uart_receive_interrupt_handler@i 0035  
                     __size_of_send_uart_message 0020                     __end_of_InterruptHandlerHigh 1666  
                                     init_i2c@ic 00B8                             ??_ToMainHigh_recvmsg 00C4  
                           ??_ToMainHigh_sendmsg 0099           uart_transmit_interrupt_handler@msgtype 0022  
                       i2c_int_handler@need_data 00A4                           __end_of_timer0_lthread 1CA6  
                                       ??_blink0 00B8                                         ??_blink1 0001  
                       i2c_int_handler@error_buf 009F                           __end_of_timer1_lthread 1792  
                             i1___awmod@dividend 0001                        __end_of_enable_interrupts 1CB8  
                                       ??_memcpy 00BE                            timer1_lthread@msgtype 0110  
                           _FromMainHigh_recvmsg 1AD0              uart_receive_interrupt_handler@frame 0056  
            uart_receive_interrupt_handler@index 0075                             _FromMainHigh_sendmsg 1B38  
            uart_receive_interrupt_handler@error 0074                     __size_of_init_timer1_lthread 0012  
                       i2c_int_handler@msg_ready 00A8                                      __pbssCOMRAM 0056  
                                  ??_init_queues 00BB                                    __pcstackBANK0 0080  
                                  __pcstackBANK1 0100                              __size_of_in_low_int 003E  
                       start_i2c_slave_reply@msg 0080                              __CFG_CCP2MX$DEFAULT 000000  
                                       ?i1_blip2 0001                                         ?i1_blip3 0001  
                       ToMainLow_sendmsg@msgtype 0017                     __size_of_InterruptHandlerLow 0106  
                            __end_of_in_high_int 1C98                                   _uart_configure 1C36  
                                   ?_SleepIfOkay 0001                            ToMainLow_recvmsg@data 010E  
                                   _ToMainLow_MQ 0166                              __size_of_init_queue 0064  
                                      _check_msg 1B06                                        __pnvBANK0 00C5  
                         ?_start_i2c_slave_reply 0080                                __size_of_init_i2c 0066  
                                   recv_msg@data 0105                        ??_i_like_to_moveit_moveit 00C5  
                                   recv_msg@qmsg 010A                                     recv_msg@slot 0107  
                                   recv_msg@qptr 0100                                __size_of_recv_msg 0142  
                                      __pintcode 0008                                __size_of_send_msg 0110  
                                       ?___awmod 00B8                                  ?_timer0_lthread 00B8  
                                       ?___lwmod 00B8                            ?_FromMainHigh_recvmsg 0098  
                                ?_timer1_lthread 010E                            ?_FromMainHigh_sendmsg 010B  
                                    __pintcodelo 0018                           ToMainHigh_recvmsg@data 010E  
                     i2c_int_handler@msg_to_send 00A6                   InterruptHandlerLow@sendy_stuff 0048  
                                    ??i1___awmod 0005                            ToMainLow_sendmsg@data 0018  
                                 __size_of_blip1 0008                                   __size_of_blip2 0008  
                                 __size_of_blip3 0008                                      ??i2___awmod 0084  
                         __end_of_uart_configure 1C56                              i1recv_msg@maxlength 000D  
   uart_receive_interrupt_handler@bad_counter_id 002D                              __end_of_init_queues 18AA  
                                       _LATBbits 000F8A                                         _LATDbits 000F8C  
                                     ?_check_msg 0080                                         _IPR1bits 000F9F  
                                       _PIE1bits 000F9D                                         _PIR1bits 000F9E  
                         ToMainHigh_sendmsg@data 0097                                         _RCONbits 000FD0  
                               __CFG_WDTPS$32768 000000                                   i1recv_msg@data 0010  
               InterruptHandlerLow@encoder_right 006C                                   i1recv_msg@qmsg 0017  
                                 i1recv_msg@slot 0014                                   i1recv_msg@qptr 000B  
 uart_receive_interrupt_handler@received_counter 0076                     FromMainLow_recvmsg@maxlength 001D  
                     __size_of_enable_interrupts 0008                                i1send_msg@msgtype 000E  
                              i1send_msg@tlength 0012                       FromMainLow_recvmsg@msgtype 0019  
                   __size_of_FromMainLow_recvmsg 0028                     __size_of_FromMainLow_sendmsg 002E  
                           timer0_lthread@length 00BC                                         i1_memcpy 19E6  
                           _InterruptHandlerHigh 0008                                         i2_memcpy 194A  
                __end_of_i_like_to_moveit_moveit 14DE                             timer0_lthread@msgval 00C0  
                       FromMainHigh_recvmsg@data 009A                                      _in_high_int 1C88  
                                   send_msg@data 0104                              _i2c_configure_slave 1BC2  
                                   send_msg@qmsg 0109                                     send_msg@slot 0108  
                                   send_msg@qptr 0100                                      _INTCON2bits 000FF1  
                                ?_uart_configure 0001                               i2___awmod@dividend 0080  
                               __size_ofi1_blip2 0008                                 __size_ofi1_blip3 0008  
                                       __Hparam0 0000                                     ??_in_low_int 0084  
                                       __Lparam0 0000                             ?_i2c_configure_slave 0001  
                              ?_enter_sleep_mode 0001                           ??_FromMainHigh_recvmsg 009C  
                         ??_FromMainHigh_sendmsg 00C3                                i1___awmod@divisor 0003  
        __end_of_uart_transmit_interrupt_handler 15F2         __size_of_uart_transmit_interrupt_handler 0084  
              ??_uart_transmit_interrupt_handler 001E                 ?_uart_transmit_interrupt_handler 0001  
                _uart_transmit_interrupt_handler 156E                                i1___awmod@counter 0005  
                       __size_of_i2c_int_handler 0654                                 __size_of___awmod 00C4  
                             ??_enter_sleep_mode 0080                                 __size_of___lwmod 0060  
                                   ??_init_queue 00BA                         FromMainHigh_sendmsg@data 010C  
                        ToMainLow_sendmsg@length 001A                                main@t0thread_data 0135  
                 uart_frame_message@sent_counter 0072                            ?_InterruptHandlerHigh 0001  
            uart_transmit_interrupt_handler@data 001E              uart_transmit_interrupt_handler@done 0079  
                   i_like_to_moveit_moveit@moves 0112                                i2send_msg@msgtype 008D  
                    ToMainHigh_recvmsg@maxlength 00C4                                i2send_msg@tlength 0091  
                        init_timer1_lthread@tptr 00B8                                      _init_queues 1852  
                             __end_of_in_low_int 1A64                                         __ptext10 1666  
                                       __ptext11 1422                                         __ptext20 1CC8  
                                       __ptext12 1C56                                         __ptext21 1CD0  
                                       __ptext13 1B66                                         __ptext30 156E  
                                       __ptext22 1A64                                         __ptext14 0E0C  
                                       __ptext31 1BEA                                         __ptext23 1A9A  
                                       __ptext15 1BC2                                         __ptext40 0122  
                                       __ptext32 1028                                         __ptext24 0B8C  
                                       __ptext16 1CB0                                         __ptext41 199A  
                                       __ptext33 0A02                                         __ptext25 18FA  
                                       __ptext17 1CA6                                         __ptext50 1A26  
                                       __ptext42 1110                                         __ptext34 1C12  
                                       __ptext26 11DA                                         __ptext18 1CB8  
                                       __ptext51 1C88                                         __ptext43 1B94  
                                       __ptext35 1362                                         __ptext19 1CC0  
                                       __ptext52 1CE8                                         __ptext44 0F1C  
                                       __ptext36 19E6                                         __ptext28 1CD8  
                                       __ptext53 1B06                                         __ptext45 1AD0  
                                       __ptext37 14DE                                         __ptext29 1CE0  
                                       __ptext46 0CCE                                         __ptext38 1CF2  
                                       __ptext47 194A                                         __ptext48 129E  
                                       __ptext49 17F2                                   i1send_msg@data 000F  
                                 i1send_msg@qmsg 0015                                   i1send_msg@slot 0014  
                                 i1send_msg@qptr 000B                                         _init_i2c 1666  
                       __size_of_debug_configure 000A                              _init_timer1_lthread 1C76  
                                  __size_of_blip 0008                                    __size_of_main 028C  
                              main@t1thread_data 0137                                      ??_check_msg 0082  
                             __end_of_init_queue 1730                             __size_of_SleepIfOkay 0060  
                                       _recv_msg 0B8C                            ??_i2c_configure_slave 00B8  
                                       _send_msg 0E0C    uart_receive_interrupt_handler@bad_checksum_id 0032  
                                 init_queue@qptr 00B8                                   i2recv_msg@data 008F  
                                 i2recv_msg@qmsg 0096                                   i2recv_msg@slot 0093  
                                 i2recv_msg@qptr 008A                                     _SSP1STATbits 000FC7  
                            _InterruptHandlerLow 0018                             ?_init_timer1_lthread 00B8  
                              i2___awmod@divisor 0082                                i2___awmod@counter 0084  
                                    _OSCTUNEbits 000F9B                                       _INTCONbits 000FF2  
                                       memcpy@d1 00B8                                         memcpy@s1 00BA  
                   i2c_int_handler@overrun_error 00A3                                 i2send_msg@length 008C  
                                       intlevel1 0000                                         intlevel2 0000  
                           ?_InterruptHandlerLow 0001                          ??_start_i2c_slave_reply 0082  
                   send_uart_message@message_ptr 010E                                 ___lwmod@dividend 00B8  
                                     _RCSTA1bits 000FAB                                    ?_handle_start 0001  
                               ??_timer0_lthread 00C0                      __size_of_ToMainHigh_recvmsg 0036  
                    __size_of_ToMainHigh_sendmsg 002E                                       _OSCCONbits 000FD3  
                               ??_timer1_lthread 00C4                                i1recv_msg@msgtype 000E  
                              i1recv_msg@tlength 0015                         ToMainHigh_sendmsg@length 0099  
                          ??_init_timer1_lthread 00BA                           ??_InterruptHandlerHigh 00AA  
                              _ToMainLow_recvmsg 1A64                                _ToMainLow_sendmsg 1C12  
                             main@last_reg_recvd 0133                                  ___lwmod@divisor 00BA  
                             ?_ToMainLow_recvmsg 010C                                ??_i2c_int_handler 009D  
                                ___lwmod@counter 00BC                               ?_ToMainLow_sendmsg 0017  
                                    _SSPCON1bits 000FC6                                      _SSPCON2bits 000FC5  
                                 i2send_msg@data 008E                            ??_InterruptHandlerLow 0037  
                            ??_ToMainLow_recvmsg 00C4                                   i2send_msg@qmsg 0094  
                                 i2send_msg@slot 0093                                   i2send_msg@qptr 008A  
                            ??_ToMainLow_sendmsg 001A                              _FromMainLow_recvmsg 1BEA  
                                 ??_handle_start 0080                              _FromMainLow_sendmsg 1B66  
