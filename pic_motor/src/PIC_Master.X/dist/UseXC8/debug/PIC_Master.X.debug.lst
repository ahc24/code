

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Oct 14 20:38:16 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	param0,global,class=BANK0,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001E46                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for uart_transmit_interrupt_handler@done
    88  001E46  01                 	db	1
    89  0000                     _BAUDCONbits	set	4024
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATB	set	3978
    93  0000                     _LATBbits	set	3978
    94  0000                     _LATDbits	set	3980
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _OSCTUNEbits	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIR1bits	set	3998
   100  0000                     _RCONbits	set	4048
   101  0000                     _RCREG1	set	4014
   102  0000                     _RCSTA1bits	set	4011
   103  0000                     _SPBRG	set	4015
   104  0000                     _SPBRGH	set	4016
   105  0000                     _SSP1STATbits	set	4039
   106  0000                     _SSPADD	set	4040
   107  0000                     _SSPBUF	set	4041
   108  0000                     _SSPCON1	set	4038
   109  0000                     _SSPCON1bits	set	4038
   110  0000                     _SSPCON2	set	4037
   111  0000                     _SSPCON2bits	set	4037
   112  0000                     _SSPSTAT	set	4039
   113  0000                     _SSPSTATbits	set	4039
   114  0000                     _T0CON	set	4053
   115  0000                     _T0CONbits	set	4053
   116  0000                     _T1CON	set	4045
   117  0000                     _T1CONbits	set	4045
   118  0000                     _TMR0H	set	4055
   119  0000                     _TMR0L	set	4054
   120  0000                     _TMR1H	set	4047
   121  0000                     _TMR1L	set	4046
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISBbits	set	3987
   124  0000                     _TRISCbits	set	3988
   125  0000                     _TRISD	set	3989
   126  0000                     _TXREG1	set	4013
   127  0000                     _TXSTA1bits	set	4012
   128                           
   129                           	psect	nvBANK0
   130  0000C5                     __pnvBANK0:
   131                           	opt stack 0
   132  0000C5                     _ic_ptr:
   133                           	opt stack 0
   134  0000C5                     	ds	2
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  00194E                     __pcinit:
   140                           	opt stack 0
   141  00194E                     start_initialization:
   142                           	opt stack 0
   143  00194E                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to BANK3 (87 bytes)
   147  00194E  EE03  F000         	lfsr	0,__pbssBANK3
   148  001952  0E57               	movlw	87
   149  001954                     clear_0:
   150  001954  6AEE               	clrf	postinc0,c
   151  001956  06E8               	decf	wreg,f,c
   152  001958  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to BANK2 (174 bytes)
   155  00195A  EE02  F000         	lfsr	0,__pbssBANK2
   156  00195E  0EAE               	movlw	174
   157  001960                     clear_1:
   158  001960  6AEE               	clrf	postinc0,c
   159  001962  06E8               	decf	wreg,f,c
   160  001964  E1FD               	bnz	clear_1
   161                           
   162                           ; Clear objects allocated to BANK1 (87 bytes)
   163  001966  EE01  F072         	lfsr	0,__pbssBANK1
   164  00196A  0E57               	movlw	87
   165  00196C                     clear_2:
   166  00196C  6AEE               	clrf	postinc0,c
   167  00196E  06E8               	decf	wreg,f,c
   168  001970  E1FD               	bnz	clear_2
   169                           
   170                           ; Clear objects allocated to BANK0 (1 bytes)
   171  001972  0100               	movlb	0
   172  001974  6BC7               	clrf	__pbssBANK0& (0+255),b
   173                           
   174                           ; Clear objects allocated to COMRAM (27 bytes)
   175  001976  EE00  F048         	lfsr	0,__pbssCOMRAM
   176  00197A  0E1B               	movlw	27
   177  00197C                     clear_3:
   178  00197C  6AEE               	clrf	postinc0,c
   179  00197E  06E8               	decf	wreg,f,c
   180  001980  E1FD               	bnz	clear_3
   181                           
   182                           ; Initialize objects allocated to COMRAM (1 bytes)
   183                           ; load TBLPTR registers with __pidataCOMRAM
   184  001982  0E46               	movlw	low __pidataCOMRAM
   185  001984  6EF6               	movwf	tblptrl,c
   186  001986  0E1E               	movlw	high __pidataCOMRAM
   187  001988  6EF7               	movwf	tblptrh,c
   188  00198A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   189  00198C  6EF8               	movwf	tblptru,c
   190  00198E  0009               	tblrd		*+	;fetch initializer
   191  001990  CFF5 F063          	movff	tablat,__pdataCOMRAM
   192  001994                     end_of_initialization:
   193                           	opt stack 0
   194  001994                     __end_of__initialization:
   195                           	opt stack 0
   196  001994  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197  001996  6EF8               	movwf	tblptru,c
   198  001998  0100               	movlb	0
   199  00199A  EF71  F003         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	bssCOMRAM
   208  000048                     __pbssCOMRAM:
   209                           	opt stack 0
   210  000048                     uart_receive_interrupt_handler@frame:
   211                           	opt stack 0
   212  000048                     	ds	18
   213  00005A                     _need_sensor_data:
   214                           	opt stack 0
   215  00005A                     	ds	2
   216  00005C                     uart_frame_message@sent_counter:
   217                           	opt stack 0
   218  00005C                     	ds	1
   219  00005D                     uart_receive_interrupt_handler@done:
   220                           	opt stack 0
   221  00005D                     	ds	1
   222  00005E                     uart_receive_interrupt_handler@error:
   223                           	opt stack 0
   224  00005E                     	ds	1
   225  00005F                     uart_receive_interrupt_handler@index:
   226                           	opt stack 0
   227  00005F                     	ds	1
   228  000060                     uart_receive_interrupt_handler@received_counter:
   229                           	opt stack 0
   230  000060                     	ds	1
   231  000061                     uart_receive_interrupt_handler@start_byte_bad:
   232                           	opt stack 0
   233  000061                     	ds	1
   234  000062                     uart_transmit_interrupt_handler@index:
   235                           	opt stack 0
   236  000062                     	ds	1
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           
   244                           	psect	dataCOMRAM
   245  000063                     __pdataCOMRAM:
   246                           	opt stack 0
   247  000063                     uart_transmit_interrupt_handler@done:
   248                           	opt stack 0
   249  000063                     	ds	1
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           
   257                           	psect	bssBANK0
   258  0000C7                     __pbssBANK0:
   259                           	opt stack 0
   260  0000C7                     _MQ_Main_Willing_to_block:
   261                           	opt stack 0
   262  0000C7                     	ds	1
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           
   270                           	psect	bssBANK1
   271  000172                     __pbssBANK1:
   272                           	opt stack 0
   273  000172                     _ToMainLow_MQ:
   274                           	opt stack 0
   275  000172                     	ds	87
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           
   283                           	psect	bssBANK2
   284  000200                     __pbssBANK2:
   285                           	opt stack 0
   286  000200                     _FromMainLow_MQ:
   287                           	opt stack 0
   288  000200                     	ds	87
   289  000257                     _ToMainHigh_MQ:
   290                           	opt stack 0
   291  000257                     	ds	87
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           	psect	bssBANK3
   300  000300                     __pbssBANK3:
   301                           	opt stack 0
   302  000300                     _FromMainHigh_MQ:
   303                           	opt stack 0
   304  000300                     	ds	87
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	cstackBANK1
   313  000100                     __pcstackBANK1:
   314                           	opt stack 0
   315  000100                     send_msg@qptr:
   316                           	opt stack 0
   317  000100                     recv_msg@qptr:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x0
   321  000100                     	ds	2
   322  000102                     send_msg@length:
   323                           	opt stack 0
   324  000102                     recv_msg@maxlength:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x2
   328  000102                     	ds	1
   329  000103                     send_msg@msgtype:
   330                           	opt stack 0
   331  000103                     recv_msg@msgtype:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x3
   335  000103                     	ds	1
   336  000104                     send_msg@data:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x4
   340  000104                     	ds	1
   341  000105                     recv_msg@data:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x5
   345  000105                     	ds	1
   346  000106                     send_msg@tlength:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x6
   350  000106                     	ds	1
   351  000107                     recv_msg@slot:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x7
   355  000107                     	ds	1
   356  000108                     send_msg@slot:
   357                           	opt stack 0
   358  000108                     recv_msg@tlength:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x8
   362  000108                     	ds	1
   363  000109                     send_msg@qmsg:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x9
   367  000109                     	ds	1
   368  00010A                     recv_msg@qmsg:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0xA
   372  00010A                     	ds	1
   373  00010B                     FromMainLow_sendmsg@msgtype:
   374                           	opt stack 0
   375  00010B                     FromMainHigh_sendmsg@msgtype:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0xB
   379  00010B                     	ds	1
   380  00010C                     ToMainLow_recvmsg@msgtype:
   381                           	opt stack 0
   382  00010C                     ToMainHigh_recvmsg@msgtype:
   383                           	opt stack 0
   384  00010C                     FromMainLow_sendmsg@data:
   385                           	opt stack 0
   386  00010C                     FromMainHigh_sendmsg@data:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0xC
   390  00010C                     	ds	2
   391  00010E                     ToMainLow_recvmsg@data:
   392                           	opt stack 0
   393  00010E                     ToMainHigh_recvmsg@data:
   394                           	opt stack 0
   395  00010E                     send_uart_message@message_ptr:
   396                           	opt stack 0
   397  00010E                     timer1_lthread@tptr:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0xE
   401  00010E                     	ds	2
   402  000110                     i_like_to_moveit_moveit@right_side_speed:
   403                           	opt stack 0
   404  000110                     timer1_lthread@msgtype:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x10
   408  000110                     	ds	1
   409  000111                     i_like_to_moveit_moveit@left_side_speed:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x11
   413  000111                     	ds	1
   414  000112                     timer1_lthread@length:
   415                           	opt stack 0
   416  000112                     i_like_to_moveit_moveit@moves:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x12
   420  000112                     	ds	2
   421  000114                     timer1_lthread@msgbuffer:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x14
   425  000114                     	ds	2
   426  000116                     main@motor_data:
   427                           	opt stack 0
   428                           
   429                           ; 14 bytes @ 0x16
   430  000116                     	ds	14
   431  000124                     main@last_reg_recvd:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x24
   435  000124                     	ds	1
   436  000125                     main@need_sensor_data:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x25
   440  000125                     	ds	1
   441  000126                     main@msgbuffer:
   442                           	opt stack 0
   443                           
   444                           ; 15 bytes @ 0x26
   445  000126                     	ds	15
   446  000135                     main@t0thread_data:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x35
   450  000135                     	ds	2
   451  000137                     main@uart_response:
   452                           	opt stack 0
   453                           
   454                           ; 14 bytes @ 0x37
   455  000137                     	ds	14
   456  000145                     main@jjj:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x45
   460  000145                     	ds	2
   461  000147                     main@poop:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x47
   465  000147                     	ds	1
   466  000148                     main@t1thread_data:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x48
   470  000148                     	ds	2
   471  00014A                     main@length:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x4A
   475  00014A                     	ds	1
   476  00014B                     main@msgtype:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x4B
   480  00014B                     	ds	1
   481  00014C                     main@ic:
   482                           	opt stack 0
   483                           
   484                           ; 38 bytes @ 0x4C
   485  00014C                     	ds	38
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           
   493                           	psect	cstackBANK0
   494  000080                     __pcstackBANK0:
   495                           	opt stack 0
   496  000080                     ?_in_high_int:
   497                           	opt stack 0
   498  000080                     ?i2___awmod:
   499                           	opt stack 0
   500  000080                     handle_start@data_read:
   501                           	opt stack 0
   502  000080                     check_msg@qptr:
   503                           	opt stack 0
   504  000080                     start_i2c_slave_reply@msg:
   505                           	opt stack 0
   506  000080                     WriteTimer0@timer0:
   507                           	opt stack 0
   508  000080                     i2memcpy@d1:
   509                           	opt stack 0
   510  000080                     i2___awmod@dividend:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x0
   514  000080                     	ds	2
   515  000082                     ??_check_msg:
   516  000082                     ??_start_i2c_slave_reply:
   517  000082                     ?_in_low_int:
   518                           	opt stack 0
   519  000082                     WriteTimer0@timer:
   520                           	opt stack 0
   521  000082                     i2memcpy@s1:
   522                           	opt stack 0
   523  000082                     i2___awmod@divisor:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x2
   527  000082                     	ds	2
   528  000084                     start_i2c_slave_reply@length:
   529                           	opt stack 0
   530  000084                     i2___awmod@counter:
   531                           	opt stack 0
   532  000084                     i2memcpy@n:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x4
   536  000084                     	ds	1
   537  000085                     i2___awmod@sign:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x5
   541  000085                     	ds	1
   542  000086                     i2memcpy@d:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x6
   546  000086                     	ds	2
   547  000088                     i2memcpy@s:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x8
   551  000088                     	ds	2
   552  00008A                     i2send_msg@qptr:
   553                           	opt stack 0
   554  00008A                     i2recv_msg@qptr:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0xA
   558  00008A                     	ds	2
   559  00008C                     i2send_msg@length:
   560                           	opt stack 0
   561  00008C                     i2recv_msg@maxlength:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0xC
   565  00008C                     	ds	1
   566  00008D                     i2send_msg@msgtype:
   567                           	opt stack 0
   568  00008D                     i2recv_msg@msgtype:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0xD
   572  00008D                     	ds	1
   573  00008E                     i2send_msg@data:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0xE
   577  00008E                     	ds	1
   578  00008F                     i2recv_msg@data:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0xF
   582  00008F                     	ds	1
   583  000090                     ??i2_send_msg:
   584                           
   585                           ; 0 bytes @ 0x10
   586  000090                     	ds	1
   587  000091                     ??i2_recv_msg:
   588  000091                     i2send_msg@tlength:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x11
   592  000091                     	ds	2
   593  000093                     i2send_msg@slot:
   594                           	opt stack 0
   595  000093                     i2recv_msg@slot:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x13
   599  000093                     	ds	1
   600  000094                     i2send_msg@qmsg:
   601                           	opt stack 0
   602  000094                     i2recv_msg@tlength:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x14
   606  000094                     	ds	2
   607  000096                     ToMainHigh_sendmsg@msgtype:
   608                           	opt stack 0
   609  000096                     i2recv_msg@qmsg:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x16
   613  000096                     	ds	1
   614  000097                     ToMainHigh_sendmsg@data:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x17
   618  000097                     	ds	1
   619  000098                     FromMainHigh_recvmsg@msgtype:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x18
   623  000098                     	ds	1
   624  000099                     ToMainHigh_sendmsg@length:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x19
   628  000099                     	ds	1
   629  00009A                     FromMainHigh_recvmsg@data:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x1A
   633  00009A                     	ds	2
   634  00009C                     FromMainHigh_recvmsg@maxlength:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x1C
   638  00009C                     	ds	1
   639  00009D                     ??_i2c_int_handler:
   640  00009D                     timer0_int_handler@length:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x1D
   644  00009D                     	ds	1
   645  00009E                     i2c_int_handler@length:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x1E
   649  00009E                     	ds	1
   650  00009F                     timer0_int_handler@msgtype:
   651                           	opt stack 0
   652  00009F                     i2c_int_handler@error_buf:
   653                           	opt stack 0
   654                           
   655                           ; 3 bytes @ 0x1F
   656  00009F                     	ds	2
   657  0000A1                     timer0_int_handler@val:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x21
   661  0000A1                     	ds	1
   662  0000A2                     i2c_int_handler@data_written:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x22
   666  0000A2                     	ds	1
   667  0000A3                     i2c_int_handler@overrun_error:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x23
   671  0000A3                     	ds	1
   672  0000A4                     i2c_int_handler@need_data:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x24
   676  0000A4                     	ds	1
   677  0000A5                     i2c_int_handler@i2c_data:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x25
   681  0000A5                     	ds	1
   682  0000A6                     i2c_int_handler@msg_to_send:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x26
   686  0000A6                     	ds	1
   687  0000A7                     i2c_int_handler@msg_type:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x27
   691  0000A7                     	ds	1
   692  0000A8                     i2c_int_handler@msg_ready:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x28
   696  0000A8                     	ds	1
   697  0000A9                     i2c_int_handler@data_read:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x29
   701  0000A9                     	ds	1
   702  0000AA                     ??_InterruptHandlerHigh:
   703                           
   704                           ; 0 bytes @ 0x2A
   705  0000AA                     	ds	14
   706  0000B8                     ?___awmod:
   707                           	opt stack 0
   708  0000B8                     ?___lwmod:
   709                           	opt stack 0
   710  0000B8                     i2c_configure_slave@addr:
   711                           	opt stack 0
   712  0000B8                     OpenTimer0@config:
   713                           	opt stack 0
   714  0000B8                     OpenTimer1@config:
   715                           	opt stack 0
   716  0000B8                     init_queue@qptr:
   717                           	opt stack 0
   718  0000B8                     init_i2c@ic:
   719                           	opt stack 0
   720  0000B8                     timer0_lthread@tptr:
   721                           	opt stack 0
   722  0000B8                     init_timer1_lthread@tptr:
   723                           	opt stack 0
   724  0000B8                     ___awmod@dividend:
   725                           	opt stack 0
   726  0000B8                     ___lwmod@dividend:
   727                           	opt stack 0
   728  0000B8                     memcpy@d1:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x38
   732  0000B8                     	ds	2
   733  0000BA                     init_queue@i:
   734                           	opt stack 0
   735  0000BA                     timer0_lthread@msgtype:
   736                           	opt stack 0
   737  0000BA                     ___awmod@divisor:
   738                           	opt stack 0
   739  0000BA                     ___lwmod@divisor:
   740                           	opt stack 0
   741  0000BA                     memcpy@s1:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x3A
   745  0000BA                     	ds	1
   746  0000BB                     
   747                           ; 0 bytes @ 0x3B
   748  0000BB                     	ds	1
   749  0000BC                     ___awmod@counter:
   750                           	opt stack 0
   751  0000BC                     ___lwmod@counter:
   752                           	opt stack 0
   753  0000BC                     timer0_lthread@length:
   754                           	opt stack 0
   755  0000BC                     memcpy@n:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x3C
   759  0000BC                     	ds	1
   760  0000BD                     ___awmod@sign:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x3D
   764  0000BD                     	ds	1
   765  0000BE                     timer0_lthread@msgbuffer:
   766                           	opt stack 0
   767  0000BE                     memcpy@d:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x3E
   771  0000BE                     	ds	2
   772  0000C0                     timer0_lthread@msgval:
   773                           	opt stack 0
   774  0000C0                     memcpy@s:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x40
   778  0000C0                     	ds	2
   779  0000C2                     ??_send_msg:
   780  0000C2                     ??_recv_msg:
   781                           
   782                           ; 0 bytes @ 0x42
   783  0000C2                     	ds	1
   784  0000C3                     FromMainLow_sendmsg@length:
   785                           	opt stack 0
   786  0000C3                     FromMainHigh_sendmsg@length:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x43
   790  0000C3                     	ds	1
   791  0000C4                     ToMainLow_recvmsg@maxlength:
   792                           	opt stack 0
   793  0000C4                     ToMainHigh_recvmsg@maxlength:
   794                           	opt stack 0
   795  0000C4                     send_uart_message@message_q_code:
   796                           	opt stack 0
   797  0000C4                     timer1_lthread@retval:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x44
   801  0000C4                     	ds	1
   802  0000C5                     tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           
   809                           ; 0 bytes @ 0x45
   810                           
   811                           	psect	cstackCOMRAM
   812  000001                     __pcstackCOMRAM:
   813                           	opt stack 0
   814  000001                     ?_ReadTimer1:
   815                           	opt stack 0
   816  000001                     ?i1___awmod:
   817                           	opt stack 0
   818  000001                     WriteTimer1@timer1:
   819                           	opt stack 0
   820  000001                     i1memcpy@d1:
   821                           	opt stack 0
   822  000001                     i1___awmod@dividend:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x0
   826  000001                     	ds	2
   827  000003                     ReadTimer1@timer:
   828                           	opt stack 0
   829  000003                     WriteTimer1@timer:
   830                           	opt stack 0
   831  000003                     i1memcpy@s1:
   832                           	opt stack 0
   833  000003                     i1___awmod@divisor:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x2
   837  000003                     	ds	2
   838  000005                     i1___awmod@counter:
   839                           	opt stack 0
   840  000005                     i1memcpy@n:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x4
   844  000005                     	ds	1
   845  000006                     i1___awmod@sign:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x5
   849  000006                     	ds	1
   850  000007                     i1memcpy@d:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x6
   854  000007                     	ds	2
   855  000009                     i1memcpy@s:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x8
   859  000009                     	ds	2
   860  00000B                     i1send_msg@qptr:
   861                           	opt stack 0
   862  00000B                     i1recv_msg@qptr:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0xA
   866  00000B                     	ds	2
   867  00000D                     i1send_msg@length:
   868                           	opt stack 0
   869  00000D                     i1recv_msg@maxlength:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0xC
   873  00000D                     	ds	1
   874  00000E                     i1send_msg@msgtype:
   875                           	opt stack 0
   876  00000E                     i1recv_msg@msgtype:
   877                           	opt stack 0
   878                           
   879                           ; 2 bytes @ 0xD
   880  00000E                     	ds	1
   881  00000F                     i1send_msg@data:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0xE
   885  00000F                     	ds	1
   886  000010                     i1recv_msg@data:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0xF
   890  000010                     	ds	1
   891  000011                     ??i1_send_msg:
   892                           
   893                           ; 0 bytes @ 0x10
   894  000011                     	ds	1
   895  000012                     ??i1_recv_msg:
   896  000012                     i1send_msg@tlength:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x11
   900  000012                     	ds	2
   901  000014                     i1send_msg@slot:
   902                           	opt stack 0
   903  000014                     i1recv_msg@slot:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x13
   907  000014                     	ds	1
   908  000015                     i1send_msg@qmsg:
   909                           	opt stack 0
   910  000015                     i1recv_msg@tlength:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x14
   914  000015                     	ds	2
   915  000017                     ToMainLow_sendmsg@msgtype:
   916                           	opt stack 0
   917  000017                     i1recv_msg@qmsg:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x16
   921  000017                     	ds	1
   922  000018                     ToMainLow_sendmsg@data:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x17
   926  000018                     	ds	1
   927  000019                     FromMainLow_recvmsg@msgtype:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0x18
   931  000019                     	ds	1
   932  00001A                     ToMainLow_sendmsg@length:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x19
   936  00001A                     	ds	1
   937  00001B                     ??_uart_receive_interrupt_handler:
   938  00001B                     FromMainLow_recvmsg@data:
   939                           	opt stack 0
   940  00001B                     timer1_int_handler@result:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x1A
   944  00001B                     	ds	2
   945  00001D                     FromMainLow_recvmsg@maxlength:
   946                           	opt stack 0
   947  00001D                     uart_receive_interrupt_handler@gooey_uart_center:
   948                           	opt stack 0
   949                           
   950                           ; 14 bytes @ 0x1C
   951  00001D                     	ds	1
   952  00001E                     uart_transmit_interrupt_handler@data:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0x1D
   956  00001E                     	ds	2
   957  000020                     uart_transmit_interrupt_handler@msgtype:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0x1F
   961  000020                     	ds	1
   962  000021                     uart_transmit_interrupt_handler@message_status:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x20
   966  000021                     	ds	10
   967  00002B                     uart_receive_interrupt_handler@status:
   968                           	opt stack 0
   969                           
   970                           ; 1 bytes @ 0x2A
   971  00002B                     	ds	1
   972  00002C                     uart_receive_interrupt_handler@status_1819:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x2B
   976  00002C                     	ds	1
   977  00002D                     uart_receive_interrupt_handler@bad_counter_id:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x2C
   981  00002D                     	ds	2
   982  00002F                     uart_receive_interrupt_handler@checksum:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x2E
   986  00002F                     	ds	1
   987  000030                     uart_receive_interrupt_handler@bad_start_id:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x2F
   991  000030                     	ds	1
   992  000031                     uart_receive_interrupt_handler@bad_end_id:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x30
   996  000031                     	ds	1
   997  000032                     uart_receive_interrupt_handler@bad_checksum_id:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x31
  1001  000032                     	ds	1
  1002  000033                     uart_receive_interrupt_handler@message_count:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x32
  1006  000033                     	ds	1
  1007  000034                     uart_receive_interrupt_handler@msg_id:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x33
  1011  000034                     	ds	1
  1012  000035                     uart_receive_interrupt_handler@i:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x34
  1016  000035                     	ds	2
  1017  000037                     ??_InterruptHandlerLow:
  1018                           
  1019                           ; 0 bytes @ 0x36
  1020  000037                     	ds	17
  1021                           tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           
  1028 ;;
  1029 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1030 ;;
  1031 ;; *************** function _main *****************
  1032 ;; Defined at:
  1033 ;;		line 189 in file "../src/main.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  uart_respons   14   55[BANK1 ] unsigned char [14]
  1038 ;;  jjj             2   69[BANK1 ] int 
  1039 ;;  motor_data     14   22[BANK1 ] unsigned char [14]
  1040 ;;  poop            1   71[BANK1 ] unsigned char 
  1041 ;;  ic             38   76[BANK1 ] struct __i2c_comm
  1042 ;;  msgbuffer      15   38[BANK1 ] unsigned char [15]
  1043 ;;  t1thread_dat    2   72[BANK1 ] struct __timer1_thread_s
  1044 ;;  t0thread_dat    2   53[BANK1 ] struct __timer0_thread_s
  1045 ;;  uthread_data    2    0        struct __uart_thread_str
  1046 ;;  msgtype         1   75[BANK1 ] unsigned char 
  1047 ;;  length          1   74[BANK1 ] char 
  1048 ;;  need_sensor_    1   37[BANK1 ] unsigned char 
  1049 ;;  last_reg_rec    1   36[BANK1 ] unsigned char 
  1050 ;;  i               1    0        unsigned char 
  1051 ;;  c               1    0        unsigned char 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;		None               void
  1054 ;; Registers used:
  1055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1061 ;;      Params:         0       0       0       0       0
  1062 ;;      Locals:         0       0      92       0       0
  1063 ;;      Temps:          0       0       0       0       0
  1064 ;;      Totals:         0       0      92       0       0
  1065 ;;Total ram usage:       92 bytes
  1066 ;; Hardware stack levels required when called:   15
  1067 ;; This function calls:
  1068 ;;		_FromMainHigh_sendmsg
  1069 ;;		_OpenTimer0
  1070 ;;		_OpenTimer1
  1071 ;;		_ToMainHigh_recvmsg
  1072 ;;		_ToMainLow_recvmsg
  1073 ;;		_blip
  1074 ;;		_blip1
  1075 ;;		_blip2
  1076 ;;		_blip3
  1077 ;;		_debug_configure
  1078 ;;		_enable_interrupts
  1079 ;;		_i2c_configure_slave
  1080 ;;		_i_like_to_moveit_moveit
  1081 ;;		_init_i2c
  1082 ;;		_init_queues
  1083 ;;		_init_timer1_lthread
  1084 ;;		_send_uart_message
  1085 ;;		_timer0_lthread
  1086 ;;		_timer1_lthread
  1087 ;;		_uart_configure
  1088 ;; This function is called by:
  1089 ;;		Startup code after reset
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text0
  1094  0006E2                     __ptext0:
  1095                           	opt stack 0
  1096  0006E2                     _main:
  1097                           	opt stack 15
  1098                           
  1099                           ;main.c: 190: char c;
  1100                           ;main.c: 191: signed char length;
  1101                           ;main.c: 192: unsigned char msgtype;
  1102                           ;main.c: 193: unsigned char last_reg_recvd;
  1103                           ;main.c: 194: i2c_comm ic;
  1104                           ;main.c: 195: unsigned char msgbuffer[14 + 1];
  1105                           ;main.c: 196: unsigned char i;
  1106                           ;main.c: 197: uart_thread_struct uthread_data;
  1107                           ;main.c: 198: timer1_thread_struct t1thread_data;
  1108                           ;main.c: 199: timer0_thread_struct t0thread_data;
  1109                           ;main.c: 200: unsigned char need_sensor_data = 1;
  1110                           
  1111                           ;incstack = 0
  1112  0006E2  0E01               	movlw	1
  1113  0006E4  0101               	movlb	1	; () banked
  1114  0006E6  6F25               	movwf	main@need_sensor_data& (0+255),b
  1115                           
  1116                           ;main.c: 208: OSCCON = 0x82;
  1117  0006E8  0E82               	movlw	130
  1118  0006EA  6ED3               	movwf	4051,c	;volatile
  1119                           
  1120                           ; BSR set to: 1
  1121                           ;main.c: 209: OSCTUNEbits.PLLEN = 0;
  1122  0006EC  9C9B               	bcf	3995,6,c	;volatile
  1123                           
  1124                           ; BSR set to: 1
  1125                           ;main.c: 239: init_i2c(&ic);
  1126  0006EE  0101               	movlb	1	; () banked
  1127  0006F0  0E01               	movlw	high main@ic
  1128  0006F2  0100               	movlb	0	; () banked
  1129  0006F4  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
  1130  0006F6  0101               	movlb	1	; () banked
  1131  0006F8  0E4C               	movlw	low main@ic
  1132  0006FA  0100               	movlb	0	; () banked
  1133  0006FC  6FB8               	movwf	init_i2c@ic& (0+255),b
  1134  0006FE  EC85  F00B         	call	_init_i2c	;wreg free
  1135                           
  1136                           ;main.c: 242: init_timer1_lthread(&t1thread_data);
  1137  000702  0101               	movlb	1	; () banked
  1138  000704  0E01               	movlw	high main@t1thread_data
  1139  000706  0100               	movlb	0	; () banked
  1140  000708  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1141  00070A  0101               	movlb	1	; () banked
  1142  00070C  0E48               	movlw	low main@t1thread_data
  1143  00070E  0100               	movlb	0	; () banked
  1144  000710  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1145  000712  ECC2  F00E         	call	_init_timer1_lthread	;wreg free
  1146                           
  1147                           ;main.c: 245: init_queues();
  1148  000716  EC7B  F00C         	call	_init_queues	;wreg free
  1149                           
  1150                           ;main.c: 249: TRISB = 0x0;
  1151  00071A  0E00               	movlw	0
  1152  00071C  6E93               	movwf	3987,c	;volatile
  1153                           
  1154                           ;main.c: 250: LATB = 0x0;
  1155  00071E  0E00               	movlw	0
  1156  000720  6E8A               	movwf	3978,c	;volatile
  1157                           
  1158                           ;main.c: 263: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1159  000722  0E96               	movlw	150
  1160  000724  EC7D  F00E         	call	_OpenTimer0
  1161                           
  1162                           ;main.c: 272: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1163  000728  0EF5               	movlw	245
  1164  00072A  ECC8  F00D         	call	_OpenTimer1
  1165                           
  1166                           ;main.c: 279: IPR1bits.TMR1IP = 0;
  1167  00072E  909F               	bcf	3999,0,c	;volatile
  1168                           
  1169                           ;main.c: 281: IPR1bits.RCIP = 0;
  1170  000730  9A9F               	bcf	3999,5,c	;volatile
  1171                           
  1172                           ;main.c: 284: IPR1bits.SSPIP = 1;
  1173  000732  869F               	bsf	3999,3,c	;volatile
  1174                           
  1175                           ;main.c: 293: i2c_configure_slave(0x9E);
  1176  000734  0E9E               	movlw	158
  1177  000736  EC55  F00E         	call	_i2c_configure_slave
  1178                           
  1179                           ;main.c: 308: PIE1bits.SSPIE = 1;
  1180  00073A  869D               	bsf	3997,3,c	;volatile
  1181                           
  1182                           ;main.c: 333: debug_configure();
  1183  00073C  ECF5  F00E         	call	_debug_configure	;wreg free
  1184                           
  1185                           ;main.c: 334: blip();
  1186  000740  EC0A  F00F         	call	_blip	;wreg free
  1187                           
  1188                           ;main.c: 335: blip1();
  1189  000744  EC06  F00F         	call	_blip1	;wreg free
  1190                           
  1191                           ;main.c: 336: blip2();
  1192  000748  EC02  F00F         	call	_blip2	;wreg free
  1193                           
  1194                           ;main.c: 337: blip3();
  1195  00074C  ECFE  F00E         	call	_blip3	;wreg free
  1196                           
  1197                           ;main.c: 346: enable_interrupts();
  1198  000750  ECFA  F00E         	call	_enable_interrupts	;wreg free
  1199                           
  1200                           ;main.c: 359: uart_configure();
  1201  000754  ECA2  F00E         	call	_uart_configure	;wreg free
  1202  000758                     l4160:
  1203                           
  1204                           ;main.c: 388: unsigned char motor_data[14];
  1205                           ;main.c: 391: unsigned char poop;
  1206                           ;main.c: 392: for(poop=0;poop<14;poop++)
  1207  000758  0E00               	movlw	0
  1208  00075A  0101               	movlb	1	; () banked
  1209  00075C  6F47               	movwf	main@poop& (0+255),b
  1210  00075E  D00F               	goto	L2
  1211  000760                     l4166:
  1212                           
  1213                           ; BSR set to: 1
  1214                           ;main.c: 393: {
  1215                           ;main.c: 394: motor_data[poop]=0x55;
  1216  000760  0101               	movlb	1	; () banked
  1217  000762  5147               	movf	main@poop& (0+255),w,b
  1218  000764  0D01               	mullw	1
  1219  000766  0101               	movlb	1	; () banked
  1220  000768  0E16               	movlw	low main@motor_data
  1221  00076A  24F3               	addwf	prodl,w,c
  1222  00076C  6ED9               	movwf	fsr2l,c
  1223  00076E  0101               	movlb	1	; () banked
  1224  000770  0E01               	movlw	high main@motor_data
  1225  000772  20F4               	addwfc	prodh,w,c
  1226  000774  6EDA               	movwf	fsr2h,c
  1227  000776  0E55               	movlw	85
  1228  000778  6EDF               	movwf	indf2,c
  1229                           
  1230                           ; BSR set to: 1
  1231  00077A  0101               	movlb	1	; () banked
  1232  00077C  2B47               	incf	main@poop& (0+255),f,b
  1233  00077E                     L2:
  1234                           
  1235                           ; BSR set to: 1
  1236  00077E  0E0D               	movlw	13
  1237  000780  0101               	movlb	1	; () banked
  1238  000782  6547               	cpfsgt	main@poop& (0+255),b
  1239  000784  D7ED               	goto	l4166
  1240                           
  1241                           ; BSR set to: 1
  1242                           ;main.c: 395: }
  1243                           ;main.c: 402: length = ToMainHigh_recvmsg(14, &msgtype, (void *) msgbuffer);
  1244                           
  1245                           ; BSR set to: 1
  1246  000786  0101               	movlb	1	; () banked
  1247  000788  0E01               	movlw	high main@msgtype
  1248  00078A  0101               	movlb	1	; () banked
  1249  00078C  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1250  00078E  0101               	movlb	1	; () banked
  1251  000790  0E4B               	movlw	low main@msgtype
  1252  000792  0101               	movlb	1	; () banked
  1253  000794  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1254  000796  0101               	movlb	1	; () banked
  1255  000798  0E01               	movlw	high main@msgbuffer
  1256  00079A  0101               	movlb	1	; () banked
  1257  00079C  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1258  00079E  0101               	movlb	1	; () banked
  1259  0007A0  0E26               	movlw	low main@msgbuffer
  1260  0007A2  0101               	movlb	1	; () banked
  1261  0007A4  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1262  0007A6  0E0E               	movlw	14
  1263  0007A8  EC79  F00D         	call	_ToMainHigh_recvmsg
  1264  0007AC  0101               	movlb	1	; () banked
  1265  0007AE  6F4A               	movwf	main@length& (0+255),b
  1266                           
  1267                           ; BSR set to: 1
  1268                           ;main.c: 403: if (length < 0) {
  1269  0007B0  0101               	movlb	1	; () banked
  1270  0007B2  BF4A               	btfsc	main@length& (0+255),7,b
  1271  0007B4  D051               	goto	l4194
  1272  0007B6  D042               	goto	l4192
  1273  0007B8                     l4178:
  1274                           
  1275                           ; BSR set to: 1
  1276                           ;main.c: 413: {
  1277                           ;main.c: 414: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1278  0007B8  0101               	movlb	1	; () banked
  1279  0007BA  0E01               	movlw	high main@t0thread_data
  1280  0007BC  0100               	movlb	0	; () banked
  1281  0007BE  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1282  0007C0  0101               	movlb	1	; () banked
  1283  0007C2  0E35               	movlw	low main@t0thread_data
  1284  0007C4  0100               	movlb	0	; () banked
  1285  0007C6  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1286  0007C8  0101               	movlb	1	; () banked
  1287  0007CA  0100               	movlb	0	; () banked
  1288  0007CC  C14B  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1289  0007D0  0100               	movlb	0	; () banked
  1290  0007D2  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1291  0007D4  0101               	movlb	1	; () banked
  1292  0007D6  514A               	movf	main@length& (0+255),w,b
  1293  0007D8  0100               	movlb	0	; () banked
  1294  0007DA  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1295  0007DC  0100               	movlb	0	; () banked
  1296  0007DE  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1297  0007E0  0100               	movlb	0	; () banked
  1298  0007E2  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1299  0007E4  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1300  0007E6  0101               	movlb	1	; () banked
  1301  0007E8  0E01               	movlw	high main@msgbuffer
  1302  0007EA  0100               	movlb	0	; () banked
  1303  0007EC  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1304  0007EE  0101               	movlb	1	; () banked
  1305  0007F0  0E26               	movlw	low main@msgbuffer
  1306  0007F2  0100               	movlb	0	; () banked
  1307  0007F4  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1308  0007F6  ECEE  F00E         	call	_timer0_lthread	;wreg free
  1309                           
  1310                           ;main.c: 415: break;
  1311  0007FA  D02E               	goto	l4194
  1312  0007FC                     l4180:
  1313                           
  1314                           ;main.c: 422: {
  1315                           ;main.c: 423: i_like_to_moveit_moveit( msgbuffer[1] , msgbuffer[2] );
  1316  0007FC  C128  F110         	movff	main@msgbuffer+2,i_like_to_moveit_moveit@right_side_speed
  1317  000800  0101               	movlb	1	; () banked
  1318  000802  5127               	movf	(main@msgbuffer+1)& (0+255),w,b
  1319  000804  ECAF  F00D         	call	_i_like_to_moveit_moveit
  1320                           
  1321                           ;main.c: 424: blip();
  1322  000808  EC0A  F00F         	call	_blip	;wreg free
  1323                           
  1324                           ;main.c: 425: break;
  1325  00080C  D005               	goto	l121
  1326  00080E                     l4186:
  1327  00080E  0101               	movlb	1	; () banked
  1328  000810  5126               	movf	main@msgbuffer& (0+255),w,b
  1329                           
  1330                           ; Switch size 1, requested type "space"
  1331                           ; Number of cases is 1, Range of values is 1 to 1
  1332                           ; switch strategies available:
  1333                           ; Name         Instructions Cycles
  1334                           ; simple_byte            4     3 (average)
  1335                           ;	Chosen strategy is simple_byte
  1336  000812  0A01               	xorlw	1	; case 1
  1337  000814  B4D8               	btfsc	status,2,c
  1338  000816  D7F2               	goto	l4180
  1339  000818                     l121:
  1340                           
  1341                           ;main.c: 435: {
  1342                           ;main.c: 438: last_reg_recvd = msgbuffer[0];
  1343  000818  C126  F124         	movff	main@msgbuffer,main@last_reg_recvd
  1344                           
  1345                           ;main.c: 439: break;
  1346  00081C  D01D               	goto	l4194
  1347  00081E                     l4188:
  1348                           
  1349                           ;main.c: 442: {
  1350                           ;main.c: 443: FromMainHigh_sendmsg(14,40,(void *) motor_data);
  1351  00081E  0E28               	movlw	40
  1352  000820  0101               	movlb	1	; () banked
  1353  000822  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1354  000824  0101               	movlb	1	; () banked
  1355  000826  0E01               	movlw	high main@motor_data
  1356  000828  0101               	movlb	1	; () banked
  1357  00082A  6F0D               	movwf	(FromMainHigh_sendmsg@data+1)& (0+255),b
  1358  00082C  0101               	movlb	1	; () banked
  1359  00082E  0E16               	movlw	low main@motor_data
  1360  000830  0101               	movlb	1	; () banked
  1361  000832  6F0C               	movwf	FromMainHigh_sendmsg@data& (0+255),b
  1362  000834  0E0E               	movlw	14
  1363  000836  ECFA  F00D         	call	_FromMainHigh_sendmsg
  1364                           
  1365                           ;main.c: 445: break;
  1366  00083A  D00E               	goto	l4194
  1367  00083C                     l4192:
  1368  00083C  0101               	movlb	1	; () banked
  1369  00083E  514B               	movf	main@msgtype& (0+255),w,b
  1370                           
  1371                           ; Switch size 1, requested type "space"
  1372                           ; Number of cases is 4, Range of values is 10 to 42
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte           13     7 (average)
  1376                           ;	Chosen strategy is simple_byte
  1377  000840  0A0A               	xorlw	10	; case 10
  1378  000842  B4D8               	btfsc	status,2,c
  1379  000844  D7B9               	goto	l4178
  1380  000846  0A22               	xorlw	34	; case 40
  1381  000848  B4D8               	btfsc	status,2,c
  1382  00084A  D7E1               	goto	l4186
  1383  00084C  0A01               	xorlw	1	; case 41
  1384  00084E  B4D8               	btfsc	status,2,c
  1385  000850  D7E3               	goto	l121
  1386  000852  0A03               	xorlw	3	; case 42
  1387  000854  B4D8               	btfsc	status,2,c
  1388  000856  D7E3               	goto	l4188
  1389  000858                     l4194:
  1390                           
  1391                           ;main.c: 453: }
  1392                           ;main.c: 456: length = ToMainLow_recvmsg(14, &msgtype, (void *) msgbuffer);
  1393  000858  0101               	movlb	1	; () banked
  1394  00085A  0E01               	movlw	high main@msgtype
  1395  00085C  0101               	movlb	1	; () banked
  1396  00085E  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1397  000860  0101               	movlb	1	; () banked
  1398  000862  0E4B               	movlw	low main@msgtype
  1399  000864  0101               	movlb	1	; () banked
  1400  000866  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1401  000868  0101               	movlb	1	; () banked
  1402  00086A  0E01               	movlw	high main@msgbuffer
  1403  00086C  0101               	movlb	1	; () banked
  1404  00086E  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1405  000870  0101               	movlb	1	; () banked
  1406  000872  0E26               	movlw	low main@msgbuffer
  1407  000874  0101               	movlb	1	; () banked
  1408  000876  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1409  000878  0E0E               	movlw	14
  1410  00087A  EC5E  F00D         	call	_ToMainLow_recvmsg
  1411  00087E  0101               	movlb	1	; () banked
  1412  000880  6F4A               	movwf	main@length& (0+255),b
  1413                           
  1414                           ; BSR set to: 1
  1415                           ;main.c: 457: if (length < 0) {
  1416  000882  0101               	movlb	1	; () banked
  1417  000884  BF4A               	btfsc	main@length& (0+255),7,b
  1418  000886  D768               	goto	l4160
  1419                           
  1420                           ; BSR set to: 1
  1421                           ;main.c: 463: else
  1422                           ;main.c: 464: {
  1423                           ;main.c: 465: unsigned char uart_response[14];
  1424                           ;main.c: 466: int jjj;
  1425                           ;main.c: 467: for(jjj=0;jjj<14;jjj++)
  1426                           
  1427                           ; BSR set to: 1
  1428                           
  1429                           ; BSR set to: 1
  1430                           ;main.c: 461: }
  1431                           ;main.c: 462: }
  1432                           
  1433                           ; BSR set to: 1
  1434  000888  0E00               	movlw	0
  1435  00088A  0101               	movlb	1	; () banked
  1436  00088C  6F46               	movwf	(main@jjj+1)& (0+255),b
  1437  00088E  0E00               	movlw	0
  1438  000890  0101               	movlb	1	; () banked
  1439  000892  6F45               	movwf	main@jjj& (0+255),b
  1440  000894                     
  1441                           ; BSR set to: 1
  1442  000894  0101               	movlb	1	; () banked
  1443  000896  5146               	movf	(main@jjj+1)& (0+255),w,b
  1444  000898  0A80               	xorlw	128
  1445  00089A  0F80               	addlw	-128
  1446  00089C  0E0E               	movlw	14
  1447  00089E  B4D8               	btfsc	status,2,c
  1448  0008A0  5D45               	subwf	main@jjj& (0+255),w,b
  1449  0008A2  B0D8               	btfsc	status,0,c
  1450  0008A4  D083               	goto	l4250
  1451                           
  1452                           ; BSR set to: 1
  1453                           ;main.c: 468: {
  1454                           ;main.c: 469: uart_response[jjj] = 0;
  1455                           
  1456                           ; BSR set to: 1
  1457                           
  1458                           ; BSR set to: 1
  1459  0008A6  0101               	movlb	1	; () banked
  1460  0008A8  0E37               	movlw	low main@uart_response
  1461  0008AA  0101               	movlb	1	; () banked
  1462  0008AC  2545               	addwf	main@jjj& (0+255),w,b
  1463  0008AE  6ED9               	movwf	fsr2l,c
  1464  0008B0  0101               	movlb	1	; () banked
  1465  0008B2  0E01               	movlw	high main@uart_response
  1466  0008B4  0101               	movlb	1	; () banked
  1467  0008B6  2146               	addwfc	(main@jjj+1)& (0+255),w,b
  1468  0008B8  6EDA               	movwf	fsr2h,c
  1469  0008BA  0E00               	movlw	0
  1470  0008BC  6EDF               	movwf	indf2,c
  1471                           
  1472                           ; BSR set to: 1
  1473  0008BE  0101               	movlb	1	; () banked
  1474  0008C0  4B45               	infsnz	main@jjj& (0+255),f,b
  1475  0008C2  2B46               	incf	(main@jjj+1)& (0+255),f,b
  1476  0008C4  D7E7               	goto	L1
  1477  0008C6                     l4212:
  1478                           
  1479                           ; BSR set to: 1
  1480                           ;main.c: 474: {
  1481                           ;main.c: 475: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1482  0008C6  0101               	movlb	1	; () banked
  1483  0008C8  0E01               	movlw	high main@t1thread_data
  1484  0008CA  0101               	movlb	1	; () banked
  1485  0008CC  6F0F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1486  0008CE  0101               	movlb	1	; () banked
  1487  0008D0  0E48               	movlw	low main@t1thread_data
  1488  0008D2  0101               	movlb	1	; () banked
  1489  0008D4  6F0E               	movwf	timer1_lthread@tptr& (0+255),b
  1490  0008D6  0101               	movlb	1	; () banked
  1491  0008D8  C14B  F110         	movff	main@msgtype,timer1_lthread@msgtype
  1492  0008DC  0101               	movlb	1	; () banked
  1493  0008DE  6B11               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1494  0008E0  0101               	movlb	1	; () banked
  1495  0008E2  514A               	movf	main@length& (0+255),w,b
  1496  0008E4  0101               	movlb	1	; () banked
  1497  0008E6  6F12               	movwf	timer1_lthread@length& (0+255),b
  1498  0008E8  0101               	movlb	1	; () banked
  1499  0008EA  6B13               	clrf	(timer1_lthread@length+1)& (0+255),b
  1500  0008EC  0101               	movlb	1	; () banked
  1501  0008EE  BF12               	btfsc	timer1_lthread@length& (0+255),7,b
  1502  0008F0  0713               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1503  0008F2  0101               	movlb	1	; () banked
  1504  0008F4  0E01               	movlw	high main@msgbuffer
  1505  0008F6  0101               	movlb	1	; () banked
  1506  0008F8  6F15               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1507  0008FA  0101               	movlb	1	; () banked
  1508  0008FC  0E26               	movlw	low main@msgbuffer
  1509  0008FE  0101               	movlb	1	; () banked
  1510  000900  6F14               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1511  000902  ECEA  F00B         	call	_timer1_lthread	;wreg free
  1512                           
  1513                           ;main.c: 476: break;
  1514  000906  D728               	goto	l4160
  1515  000908                     l4214:
  1516                           
  1517                           ;main.c: 481: {
  1518                           ;main.c: 482: uart_response[0] = 0xf1;
  1519  000908  0EF1               	movlw	241
  1520  00090A  0101               	movlb	1	; () banked
  1521  00090C  6F37               	movwf	main@uart_response& (0+255),b
  1522                           
  1523                           ; BSR set to: 1
  1524                           ;main.c: 483: uart_response[1] = msgbuffer[0];
  1525  00090E  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1526                           
  1527                           ; BSR set to: 1
  1528                           ;main.c: 484: send_uart_message( uart_response );
  1529  000912  0101               	movlb	1	; () banked
  1530  000914  0E01               	movlw	high main@uart_response
  1531  000916  0101               	movlb	1	; () banked
  1532  000918  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1533  00091A  0101               	movlb	1	; () banked
  1534  00091C  0E37               	movlw	low main@uart_response
  1535  00091E  0101               	movlb	1	; () banked
  1536  000920  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1537  000922  ECB2  F00E         	call	_send_uart_message	;wreg free
  1538                           
  1539                           ;main.c: 485: break;
  1540  000926  D718               	goto	l4160
  1541  000928                     l4220:
  1542                           
  1543                           ;main.c: 488: {
  1544                           ;main.c: 489: uart_response[0] = 0xf2;
  1545  000928  0EF2               	movlw	242
  1546  00092A  0101               	movlb	1	; () banked
  1547  00092C  6F37               	movwf	main@uart_response& (0+255),b
  1548                           
  1549                           ; BSR set to: 1
  1550                           ;main.c: 490: uart_response[1] = msgbuffer[0];
  1551  00092E  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1552                           
  1553                           ; BSR set to: 1
  1554                           ;main.c: 491: uart_response[2] = msgbuffer[1];
  1555  000932  C127  F139         	movff	main@msgbuffer+1,main@uart_response+2
  1556                           
  1557                           ; BSR set to: 1
  1558                           ;main.c: 492: send_uart_message( uart_response );
  1559  000936  0101               	movlb	1	; () banked
  1560  000938  0E01               	movlw	high main@uart_response
  1561  00093A  0101               	movlb	1	; () banked
  1562  00093C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1563  00093E  0101               	movlb	1	; () banked
  1564  000940  0E37               	movlw	low main@uart_response
  1565  000942  0101               	movlb	1	; () banked
  1566  000944  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1567  000946  ECB2  F00E         	call	_send_uart_message	;wreg free
  1568                           
  1569                           ;main.c: 493: break;
  1570  00094A  D706               	goto	l4160
  1571  00094C                     l4228:
  1572                           
  1573                           ;main.c: 496: {
  1574                           ;main.c: 497: uart_response[0] = 0xf3;
  1575  00094C  0EF3               	movlw	243
  1576  00094E  0101               	movlb	1	; () banked
  1577  000950  6F37               	movwf	main@uart_response& (0+255),b
  1578                           
  1579                           ; BSR set to: 1
  1580                           ;main.c: 498: uart_response[1] = msgbuffer[0];
  1581  000952  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1582                           
  1583                           ; BSR set to: 1
  1584                           ;main.c: 499: send_uart_message( uart_response );
  1585  000956  0101               	movlb	1	; () banked
  1586  000958  0E01               	movlw	high main@uart_response
  1587  00095A  0101               	movlb	1	; () banked
  1588  00095C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1589  00095E  0101               	movlb	1	; () banked
  1590  000960  0E37               	movlw	low main@uart_response
  1591  000962  0101               	movlb	1	; () banked
  1592  000964  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1593  000966  ECB2  F00E         	call	_send_uart_message	;wreg free
  1594                           
  1595                           ;main.c: 500: break;
  1596  00096A  D6F6               	goto	l4160
  1597  00096C                     l4234:
  1598                           
  1599                           ;main.c: 503: {
  1600                           ;main.c: 504: uart_response[0] = 0xf4;
  1601  00096C  0EF4               	movlw	244
  1602  00096E  0101               	movlb	1	; () banked
  1603  000970  6F37               	movwf	main@uart_response& (0+255),b
  1604                           
  1605                           ; BSR set to: 1
  1606                           ;main.c: 505: uart_response[1] = msgbuffer[0];
  1607  000972  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1608                           
  1609                           ; BSR set to: 1
  1610                           ;main.c: 506: send_uart_message( uart_response );
  1611  000976  0101               	movlb	1	; () banked
  1612  000978  0E01               	movlw	high main@uart_response
  1613  00097A  0101               	movlb	1	; () banked
  1614  00097C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1615  00097E  0101               	movlb	1	; () banked
  1616  000980  0E37               	movlw	low main@uart_response
  1617  000982  0101               	movlb	1	; () banked
  1618  000984  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1619  000986  ECB2  F00E         	call	_send_uart_message	;wreg free
  1620                           
  1621                           ;main.c: 507: break;
  1622  00098A  D6E6               	goto	l4160
  1623  00098C                     l4240:
  1624                           
  1625                           ;main.c: 511: {
  1626                           ;main.c: 512: uart_response[0] = 0x11;
  1627  00098C  0E11               	movlw	17
  1628  00098E  0101               	movlb	1	; () banked
  1629  000990  6F37               	movwf	main@uart_response& (0+255),b
  1630                           
  1631                           ; BSR set to: 1
  1632                           ;main.c: 513: uart_response[1] = msgbuffer[0];
  1633  000992  C126  F138         	movff	main@msgbuffer,main@uart_response+1
  1634                           
  1635                           ; BSR set to: 1
  1636                           ;main.c: 514: send_uart_message( uart_response );
  1637  000996  0101               	movlb	1	; () banked
  1638  000998  0E01               	movlw	high main@uart_response
  1639  00099A  0101               	movlb	1	; () banked
  1640  00099C  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  1641  00099E  0101               	movlb	1	; () banked
  1642  0009A0  0E37               	movlw	low main@uart_response
  1643  0009A2  0101               	movlb	1	; () banked
  1644  0009A4  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  1645  0009A6  ECB2  F00E         	call	_send_uart_message	;wreg free
  1646                           
  1647                           ;main.c: 515: break;
  1648  0009AA  D6D6               	goto	l4160
  1649  0009AC                     l4250:
  1650  0009AC  0101               	movlb	1	; () banked
  1651  0009AE  514B               	movf	main@msgtype& (0+255),w,b
  1652                           
  1653                           ; Switch size 1, requested type "space"
  1654                           ; Number of cases is 8, Range of values is 11 to 36
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte           25    13 (average)
  1658                           ;	Chosen strategy is simple_byte
  1659  0009B0  0A0B               	xorlw	11	; case 11
  1660  0009B2  B4D8               	btfsc	status,2,c
  1661  0009B4  D788               	goto	l4212
  1662  0009B6  0A15               	xorlw	21	; case 30
  1663  0009B8  B4D8               	btfsc	status,2,c
  1664  0009BA  D7A6               	goto	l4214
  1665  0009BC  0A01               	xorlw	1	; case 31
  1666  0009BE  B4D8               	btfsc	status,2,c
  1667  0009C0  D6CB               	goto	l4160
  1668  0009C2  0A3F               	xorlw	63	; case 32
  1669  0009C4  B4D8               	btfsc	status,2,c
  1670  0009C6  D7A0               	goto	l4214
  1671  0009C8  0A01               	xorlw	1	; case 33
  1672  0009CA  B4D8               	btfsc	status,2,c
  1673  0009CC  D7AD               	goto	l4220
  1674  0009CE  0A03               	xorlw	3	; case 34
  1675  0009D0  B4D8               	btfsc	status,2,c
  1676  0009D2  D7BC               	goto	l4228
  1677  0009D4  0A01               	xorlw	1	; case 35
  1678  0009D6  B4D8               	btfsc	status,2,c
  1679  0009D8  D7C9               	goto	l4234
  1680  0009DA  0A07               	xorlw	7	; case 36
  1681  0009DC  B4D8               	btfsc	status,2,c
  1682  0009DE  D7D6               	goto	l4240
  1683  0009E0  D6BB               	goto	l4160
  1684  0009E2                     __end_of_main:
  1685                           	opt stack 0
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           prodh	equ	0xFF4
  1691                           prodl	equ	0xFF3
  1692                           postinc0	equ	0xFEE
  1693                           wreg	equ	0xFE8
  1694                           indf2	equ	0xFDF
  1695                           fsr2h	equ	0xFDA
  1696                           fsr2l	equ	0xFD9
  1697                           status	equ	0xFD8
  1698                           
  1699 ;; *************** function _uart_configure *****************
  1700 ;; Defined at:
  1701 ;;		line 22 in file "../src/my_uart.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;		None               void
  1708 ;; Registers used:
  1709 ;;		wreg, status,2
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1715 ;;      Params:         0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0
  1718 ;;      Totals:         0       0       0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:   10
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text1
  1730  001D44                     __ptext1:
  1731                           	opt stack 0
  1732  001D44                     _uart_configure:
  1733                           	opt stack 19
  1734                           
  1735                           ;my_uart.c: 24: TRISCbits.TRISC7 = 1;
  1736                           
  1737                           ; BSR set to: 1
  1738                           ;incstack = 0
  1739  001D44  8E94               	bsf	3988,7,c	;volatile
  1740                           
  1741                           ;my_uart.c: 25: TRISCbits.TRISC6 = 0;
  1742  001D46  9C94               	bcf	3988,6,c	;volatile
  1743                           
  1744                           ;my_uart.c: 27: BAUDCONbits.BRG16 = 1;
  1745  001D48  86B8               	bsf	4024,3,c	;volatile
  1746                           
  1747                           ;my_uart.c: 28: TXSTA1bits.BRGH = 1;
  1748  001D4A  84AC               	bsf	4012,2,c	;volatile
  1749                           
  1750                           ;my_uart.c: 36: SPBRGH = 0x01;
  1751  001D4C  0E01               	movlw	1
  1752  001D4E  6EB0               	movwf	4016,c	;volatile
  1753                           
  1754                           ;my_uart.c: 37: SPBRG = 0x38;
  1755  001D50  0E38               	movlw	56
  1756  001D52  6EAF               	movwf	4015,c	;volatile
  1757                           
  1758                           ;my_uart.c: 41: TXSTA1bits.SYNC = 0;
  1759  001D54  98AC               	bcf	4012,4,c	;volatile
  1760                           
  1761                           ;my_uart.c: 42: RCSTA1bits.SPEN = 1;
  1762  001D56  8EAB               	bsf	4011,7,c	;volatile
  1763                           
  1764                           ;my_uart.c: 45: IPR1bits.TX1IP = 0;
  1765  001D58  989F               	bcf	3999,4,c	;volatile
  1766                           
  1767                           ;my_uart.c: 47: PIE1bits.TX1IE = 0;
  1768  001D5A  989D               	bcf	3997,4,c	;volatile
  1769                           
  1770                           ;my_uart.c: 48: PIE1bits.RC1IE = 1;
  1771  001D5C  8A9D               	bsf	3997,5,c	;volatile
  1772                           
  1773                           ;my_uart.c: 50: TXSTA1bits.TXEN = 1;
  1774  001D5E  8AAC               	bsf	4012,5,c	;volatile
  1775                           
  1776                           ;my_uart.c: 51: RCSTA1bits.CREN = 1;
  1777  001D60  88AB               	bsf	4011,4,c	;volatile
  1778  001D62  0012               	return	
  1779  001D64                     __end_of_uart_configure:
  1780                           	opt stack 0
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           prodh	equ	0xFF4
  1786                           prodl	equ	0xFF3
  1787                           postinc0	equ	0xFEE
  1788                           wreg	equ	0xFE8
  1789                           indf2	equ	0xFDF
  1790                           fsr2h	equ	0xFDA
  1791                           fsr2l	equ	0xFD9
  1792                           status	equ	0xFD8
  1793                           
  1794 ;; *************** function _timer1_lthread *****************
  1795 ;; Defined at:
  1796 ;;		line 15 in file "../src/timer1_thread.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1799 ;;		 -> main@t1thread_data(2), 
  1800 ;;  msgtype         2   16[BANK1 ] int 
  1801 ;;  length          2   18[BANK1 ] int 
  1802 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1803 ;;		 -> main@msgbuffer(15), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  retval          1   68[BANK0 ] char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2   14[BANK1 ] int 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1815 ;;      Params:         0       0       8       0       0
  1816 ;;      Locals:         0       1       0       0       0
  1817 ;;      Temps:          0       0       0       0       0
  1818 ;;      Totals:         0       1       8       0       0
  1819 ;;Total ram usage:        9 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:   13
  1822 ;; This function calls:
  1823 ;;		_FromMainHigh_sendmsg
  1824 ;;		___lwmod
  1825 ;;		_blink0
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text2
  1832  0017D4                     __ptext2:
  1833                           	opt stack 0
  1834  0017D4                     _timer1_lthread:
  1835                           	opt stack 16
  1836                           
  1837                           ;timer1_thread.c: 16: signed char retval;
  1838                           ;timer1_thread.c: 18: blink0();
  1839                           
  1840                           ;incstack = 0
  1841  0017D4  EC21  F00F         	call	_blink0	;wreg free
  1842                           
  1843                           ;timer1_thread.c: 20: tptr->msgcount++;
  1844  0017D8  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1845  0017DC  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1846  0017E0  2ADE               	incf	postinc2,f,c
  1847  0017E2  0E00               	movlw	0
  1848  0017E4  22DD               	addwfc	postdec2,f,c
  1849                           
  1850                           ;timer1_thread.c: 23: if ((tptr->msgcount % 10) == 9) {
  1851  0017E6  C10E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1852  0017EA  C10F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1853  0017EE  0100               	movlb	0	; () banked
  1854  0017F0  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1855  0017F4  0100               	movlb	0	; () banked
  1856  0017F6  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1857  0017FA  0E00               	movlw	0
  1858  0017FC  0100               	movlb	0	; () banked
  1859  0017FE  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1860  001800  0E0A               	movlw	10
  1861  001802  0100               	movlb	0	; () banked
  1862  001804  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1863  001806  EC1B  F00C         	call	___lwmod	;wreg free
  1864  00180A  0100               	movlb	0	; () banked
  1865  00180C  51B8               	movf	?___lwmod& (0+255),w,b
  1866  00180E  0A09               	xorlw	9
  1867  001810  0100               	movlb	0	; () banked
  1868  001812  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1869  001814  A4D8               	btfss	status,2,c
  1870  001816  0012               	return	
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;timer1_thread.c: 24: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1874  001818  0E14               	movlw	20
  1875  00181A  0101               	movlb	1	; () banked
  1876  00181C  6F0B               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1877  00181E  0101               	movlb	1	; () banked
  1878  001820  C10F  F10D         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1879  001824  0101               	movlb	1	; () banked
  1880  001826  C10E  F10C         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1881  00182A  0E02               	movlw	2
  1882  00182C  ECFA  F00D         	call	_FromMainHigh_sendmsg
  1883  001830  0100               	movlb	0	; () banked
  1884  001832  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1885  001834  0012               	return	
  1886  001836                     __end_of_timer1_lthread:
  1887                           	opt stack 0
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           prodh	equ	0xFF4
  1893                           prodl	equ	0xFF3
  1894                           postinc0	equ	0xFEE
  1895                           wreg	equ	0xFE8
  1896                           indf2	equ	0xFDF
  1897                           postinc2	equ	0xFDE
  1898                           postdec2	equ	0xFDD
  1899                           fsr2h	equ	0xFDA
  1900                           fsr2l	equ	0xFD9
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function _blink0 *****************
  1904 ;; Defined at:
  1905 ;;		line 46 in file "../src/debug.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;		None               void
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1919 ;;      Params:         0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0
  1922 ;;      Totals:         0       0       0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:   10
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_timer1_lthread
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text3
  1934  001E42                     __ptext3:
  1935                           	opt stack 0
  1936  001E42                     _blink0:
  1937                           	opt stack 18
  1938                           
  1939                           ;debug.c: 48: LATBbits.LB0 ^= 1;
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;incstack = 0
  1943  001E42  708A               	btg	3978,0,c	;volatile
  1944  001E44  0012               	return	
  1945  001E46                     __end_of_blink0:
  1946                           	opt stack 0
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           prodh	equ	0xFF4
  1952                           prodl	equ	0xFF3
  1953                           postinc0	equ	0xFEE
  1954                           wreg	equ	0xFE8
  1955                           indf2	equ	0xFDF
  1956                           postinc2	equ	0xFDE
  1957                           postdec2	equ	0xFDD
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8
  1961                           
  1962 ;; *************** function ___lwmod *****************
  1963 ;; Defined at:
  1964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  dividend        2   56[BANK0 ] unsigned int 
  1967 ;;  divisor         2   58[BANK0 ] unsigned int 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  counter         1   60[BANK0 ] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2   56[BANK0 ] unsigned int 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1979 ;;      Params:         0       4       0       0       0
  1980 ;;      Locals:         0       1       0       0       0
  1981 ;;      Temps:          0       0       0       0       0
  1982 ;;      Totals:         0       5       0       0       0
  1983 ;;Total ram usage:        5 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:   10
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_timer1_lthread
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text4
  1994  001836                     __ptext4:
  1995                           	opt stack 0
  1996  001836                     ___lwmod:
  1997                           	opt stack 18
  1998                           
  1999                           ;incstack = 0
  2000  001836  0100               	movlb	0	; () banked
  2001  001838  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2002  00183A  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  2003  00183C  B4D8               	btfsc	status,2,c
  2004  00183E  D026               	goto	l1117
  2005                           
  2006                           ; BSR set to: 0
  2007  001840  0E01               	movlw	1
  2008  001842  0100               	movlb	0	; () banked
  2009  001844  6FBC               	movwf	___lwmod@counter& (0+255),b
  2010  001846  D006               	goto	l3722
  2011  001848                     l3720:
  2012                           
  2013                           ; BSR set to: 0
  2014  001848  0100               	movlb	0	; () banked
  2015  00184A  90D8               	bcf	status,0,c
  2016  00184C  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  2017  00184E  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2018  001850  0100               	movlb	0	; () banked
  2019  001852  2BBC               	incf	___lwmod@counter& (0+255),f,b
  2020  001854                     l3722:
  2021                           
  2022                           ; BSR set to: 0
  2023  001854  0100               	movlb	0	; () banked
  2024  001856  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2025  001858  D7F7               	goto	l3720
  2026  00185A                     l3724:
  2027                           
  2028                           ; BSR set to: 0
  2029  00185A  0100               	movlb	0	; () banked
  2030  00185C  51BA               	movf	___lwmod@divisor& (0+255),w,b
  2031  00185E  0100               	movlb	0	; () banked
  2032  001860  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  2033  001862  0100               	movlb	0	; () banked
  2034  001864  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2035  001866  0100               	movlb	0	; () banked
  2036  001868  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2037  00186A  A0D8               	btfss	status,0,c
  2038  00186C  D008               	goto	l3728
  2039                           
  2040                           ; BSR set to: 0
  2041  00186E  0100               	movlb	0	; () banked
  2042  001870  51BA               	movf	___lwmod@divisor& (0+255),w,b
  2043  001872  0100               	movlb	0	; () banked
  2044  001874  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  2045  001876  0100               	movlb	0	; () banked
  2046  001878  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2047  00187A  0100               	movlb	0	; () banked
  2048  00187C  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2049  00187E                     l3728:
  2050                           
  2051                           ; BSR set to: 0
  2052  00187E  0100               	movlb	0	; () banked
  2053  001880  90D8               	bcf	status,0,c
  2054  001882  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2055  001884  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  2056                           
  2057                           ; BSR set to: 0
  2058  001886  0100               	movlb	0	; () banked
  2059  001888  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  2060  00188A  D7E7               	goto	l3724
  2061  00188C                     l1117:
  2062                           
  2063                           ; BSR set to: 0
  2064  00188C  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  2065  001890  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  2066                           
  2067                           ; BSR set to: 0
  2068  001894  0012               	return	
  2069  001896                     __end_of___lwmod:
  2070                           	opt stack 0
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           prodh	equ	0xFF4
  2076                           prodl	equ	0xFF3
  2077                           postinc0	equ	0xFEE
  2078                           wreg	equ	0xFE8
  2079                           indf2	equ	0xFDF
  2080                           postinc2	equ	0xFDE
  2081                           postdec2	equ	0xFDD
  2082                           fsr2h	equ	0xFDA
  2083                           fsr2l	equ	0xFD9
  2084                           status	equ	0xFD8
  2085                           
  2086 ;; *************** function _FromMainHigh_sendmsg *****************
  2087 ;; Defined at:
  2088 ;;		line 174 in file "../src/messages.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  length          1    wreg     unsigned char 
  2091 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2092 ;;  data            2   12[BANK1 ] PTR void 
  2093 ;;		 -> main@motor_data(14), main@t1thread_data(2), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  length          1   67[BANK0 ] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      char 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2105 ;;      Params:         0       0       3       0       0
  2106 ;;      Locals:         0       1       0       0       0
  2107 ;;      Temps:          0       0       0       0       0
  2108 ;;      Totals:         0       1       3       0       0
  2109 ;;Total ram usage:        4 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:   12
  2112 ;; This function calls:
  2113 ;;		_send_msg
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;;		_timer1_lthread
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text5
  2121  001BF4                     __ptext5:
  2122                           	opt stack 0
  2123  001BF4                     _FromMainHigh_sendmsg:
  2124                           	opt stack 16
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;incstack = 0
  2128                           ;FromMainHigh_sendmsg@length stored from wreg
  2129  001BF4  0100               	movlb	0	; () banked
  2130  001BF6  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2134  001BF8  0103               	movlb	3	; () banked
  2135  001BFA  0E03               	movlw	high _FromMainHigh_MQ
  2136  001BFC  0101               	movlb	1	; () banked
  2137  001BFE  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2138  001C00  0103               	movlb	3	; () banked
  2139  001C02  0E00               	movlw	low _FromMainHigh_MQ
  2140  001C04  0101               	movlb	1	; () banked
  2141  001C06  6F00               	movwf	send_msg@qptr& (0+255),b
  2142  001C08  C0C3  F102         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2143  001C0C  C10B  F103         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2144  001C10  0101               	movlb	1	; () banked
  2145  001C12  C10D  F105         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2146  001C16  0101               	movlb	1	; () banked
  2147  001C18  C10C  F104         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2148  001C1C  ECF6  F006         	call	_send_msg	;wreg free
  2149  001C20  0012               	return	
  2150  001C22                     __end_of_FromMainHigh_sendmsg:
  2151                           	opt stack 0
  2152                           tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           prodh	equ	0xFF4
  2157                           prodl	equ	0xFF3
  2158                           postinc0	equ	0xFEE
  2159                           wreg	equ	0xFE8
  2160                           indf2	equ	0xFDF
  2161                           postinc2	equ	0xFDE
  2162                           postdec2	equ	0xFDD
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function _timer0_lthread *****************
  2168 ;; Defined at:
  2169 ;;		line 9 in file "../src/timer0_thread.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2172 ;;		 -> main@t0thread_data(2), 
  2173 ;;  msgtype         2   58[BANK0 ] int 
  2174 ;;  length          2   60[BANK0 ] int 
  2175 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2176 ;;		 -> main@msgbuffer(15), 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  2179 ;;		 -> main@msgbuffer(15), 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  2   56[BANK0 ] int 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2189 ;;      Params:         0       8       0       0       0
  2190 ;;      Locals:         0       2       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         0      10       0       0       0
  2193 ;;Total ram usage:       10 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:   10
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text6
  2204  001DDC                     __ptext6:
  2205                           	opt stack 0
  2206  001DDC                     _timer0_lthread:
  2207                           	opt stack 19
  2208                           
  2209                           ;timer0_thread.c: 10: unsigned int *msgval;
  2210                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2211                           
  2212                           ;incstack = 0
  2213  001DDC  0100               	movlb	0	; () banked
  2214  001DDE  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2215  001DE2  0100               	movlb	0	; () banked
  2216  001DE4  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2217                           
  2218                           ; BSR set to: 0
  2219  001DE8  0012               	return	
  2220  001DEA                     __end_of_timer0_lthread:
  2221                           	opt stack 0
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           prodh	equ	0xFF4
  2227                           prodl	equ	0xFF3
  2228                           postinc0	equ	0xFEE
  2229                           wreg	equ	0xFE8
  2230                           indf2	equ	0xFDF
  2231                           postinc2	equ	0xFDE
  2232                           postdec2	equ	0xFDD
  2233                           fsr2h	equ	0xFDA
  2234                           fsr2l	equ	0xFD9
  2235                           status	equ	0xFD8
  2236                           
  2237 ;; *************** function _init_timer1_lthread *****************
  2238 ;; Defined at:
  2239 ;;		line 7 in file "../src/timer1_thread.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2242 ;;		 -> main@t1thread_data(2), 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		wreg, fsr2l, fsr2h
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2254 ;;      Params:         0       2       0       0       0
  2255 ;;      Locals:         0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0
  2257 ;;      Totals:         0       2       0       0       0
  2258 ;;Total ram usage:        2 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:   10
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text7
  2269  001D84                     __ptext7:
  2270                           	opt stack 0
  2271  001D84                     _init_timer1_lthread:
  2272                           	opt stack 19
  2273                           
  2274                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;incstack = 0
  2278  001D84  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2279  001D88  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2280  001D8C  0E00               	movlw	0
  2281  001D8E  6EDE               	movwf	postinc2,c
  2282  001D90  0E00               	movlw	0
  2283  001D92  6EDD               	movwf	postdec2,c
  2284  001D94  0012               	return	
  2285  001D96                     __end_of_init_timer1_lthread:
  2286                           	opt stack 0
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           prodh	equ	0xFF4
  2292                           prodl	equ	0xFF3
  2293                           postinc0	equ	0xFEE
  2294                           wreg	equ	0xFE8
  2295                           indf2	equ	0xFDF
  2296                           postinc2	equ	0xFDE
  2297                           postdec2	equ	0xFDD
  2298                           fsr2h	equ	0xFDA
  2299                           fsr2l	equ	0xFD9
  2300                           status	equ	0xFD8
  2301                           
  2302 ;; *************** function _init_queues *****************
  2303 ;; Defined at:
  2304 ;;		line 194 in file "../src/messages.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;		None               void
  2311 ;; Registers used:
  2312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2318 ;;      Params:         0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:   11
  2325 ;; This function calls:
  2326 ;;		_init_queue
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text8
  2333  0018F6                     __ptext8:
  2334                           	opt stack 0
  2335  0018F6                     _init_queues:
  2336                           	opt stack 18
  2337                           
  2338                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2339                           
  2340                           ;incstack = 0
  2341  0018F6  0E00               	movlw	0
  2342  0018F8  0100               	movlb	0	; () banked
  2343  0018FA  6FC7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2347  0018FC  0101               	movlb	1	; () banked
  2348  0018FE  0E01               	movlw	high _ToMainLow_MQ
  2349  001900  0100               	movlb	0	; () banked
  2350  001902  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2351  001904  0101               	movlb	1	; () banked
  2352  001906  0E72               	movlw	low _ToMainLow_MQ
  2353  001908  0100               	movlb	0	; () banked
  2354  00190A  6FB8               	movwf	init_queue@qptr& (0+255),b
  2355  00190C  ECB8  F00B         	call	_init_queue	;wreg free
  2356                           
  2357                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2358  001910  0102               	movlb	2	; () banked
  2359  001912  0E02               	movlw	high _ToMainHigh_MQ
  2360  001914  0100               	movlb	0	; () banked
  2361  001916  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2362  001918  0102               	movlb	2	; () banked
  2363  00191A  0E57               	movlw	low _ToMainHigh_MQ
  2364  00191C  0100               	movlb	0	; () banked
  2365  00191E  6FB8               	movwf	init_queue@qptr& (0+255),b
  2366  001920  ECB8  F00B         	call	_init_queue	;wreg free
  2367                           
  2368                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2369  001924  0102               	movlb	2	; () banked
  2370  001926  0E02               	movlw	high _FromMainLow_MQ
  2371  001928  0100               	movlb	0	; () banked
  2372  00192A  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2373  00192C  0102               	movlb	2	; () banked
  2374  00192E  0E00               	movlw	low _FromMainLow_MQ
  2375  001930  0100               	movlb	0	; () banked
  2376  001932  6FB8               	movwf	init_queue@qptr& (0+255),b
  2377  001934  ECB8  F00B         	call	_init_queue	;wreg free
  2378                           
  2379                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2380  001938  0103               	movlb	3	; () banked
  2381  00193A  0E03               	movlw	high _FromMainHigh_MQ
  2382  00193C  0100               	movlb	0	; () banked
  2383  00193E  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2384  001940  0103               	movlb	3	; () banked
  2385  001942  0E00               	movlw	low _FromMainHigh_MQ
  2386  001944  0100               	movlb	0	; () banked
  2387  001946  6FB8               	movwf	init_queue@qptr& (0+255),b
  2388  001948  ECB8  F00B         	call	_init_queue	;wreg free
  2389  00194C  0012               	return	
  2390  00194E                     __end_of_init_queues:
  2391                           	opt stack 0
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           postinc0	equ	0xFEE
  2399                           wreg	equ	0xFE8
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           postdec2	equ	0xFDD
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _init_queue *****************
  2408 ;; Defined at:
  2409 ;;		line 14 in file "../src/messages.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2412 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  i               1   58[BANK0 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2424 ;;      Params:         0       2       0       0       0
  2425 ;;      Locals:         0       1       0       0       0
  2426 ;;      Temps:          0       0       0       0       0
  2427 ;;      Totals:         0       3       0       0       0
  2428 ;;Total ram usage:        3 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:   10
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_init_queues
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text9
  2439  001770                     __ptext9:
  2440                           	opt stack 0
  2441  001770                     _init_queue:
  2442                           	opt stack 18
  2443                           
  2444                           ;messages.c: 15: unsigned char i;
  2445                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2446                           
  2447                           ;incstack = 0
  2448  001770  0100               	movlb	0	; () banked
  2449  001772  EE20 F055          	lfsr	2,85
  2450  001776  0100               	movlb	0	; () banked
  2451  001778  51B8               	movf	init_queue@qptr& (0+255),w,b
  2452  00177A  26D9               	addwf	fsr2l,f,c
  2453  00177C  0100               	movlb	0	; () banked
  2454  00177E  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2455  001780  22DA               	addwfc	fsr2h,f,c
  2456  001782  0E00               	movlw	0
  2457  001784  6EDF               	movwf	indf2,c
  2458                           
  2459                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2460  001786  0100               	movlb	0	; () banked
  2461  001788  EE20 F056          	lfsr	2,86
  2462  00178C  0100               	movlb	0	; () banked
  2463  00178E  51B8               	movf	init_queue@qptr& (0+255),w,b
  2464  001790  26D9               	addwf	fsr2l,f,c
  2465  001792  0100               	movlb	0	; () banked
  2466  001794  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2467  001796  22DA               	addwfc	fsr2h,f,c
  2468  001798  0E00               	movlw	0
  2469  00179A  6EDF               	movwf	indf2,c
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2473  00179C  0E00               	movlw	0
  2474  00179E  0100               	movlb	0	; () banked
  2475  0017A0  6FBA               	movwf	init_queue@i& (0+255),b
  2476                           
  2477                           ; BSR set to: 0
  2478  0017A2  0E04               	movlw	4
  2479  0017A4  0100               	movlb	0	; () banked
  2480  0017A6  65BA               	cpfsgt	init_queue@i& (0+255),b
  2481  0017A8  D001               	goto	l2664
  2482  0017AA  0012               	return	
  2483  0017AC                     l2664:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;messages.c: 20: qptr->queue[i].full = 0;
  2487  0017AC  0100               	movlb	0	; () banked
  2488  0017AE  51BA               	movf	init_queue@i& (0+255),w,b
  2489  0017B0  0D11               	mullw	17
  2490  0017B2  50F3               	movf	prodl,w,c
  2491  0017B4  0100               	movlb	0	; () banked
  2492  0017B6  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2493  0017B8  6ED9               	movwf	fsr2l,c
  2494  0017BA  50F4               	movf	prodh,w,c
  2495  0017BC  0100               	movlb	0	; () banked
  2496  0017BE  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2497  0017C0  6EDA               	movwf	fsr2h,c
  2498  0017C2  0E00               	movlw	0
  2499  0017C4  6EDF               	movwf	indf2,c
  2500                           
  2501                           ; BSR set to: 0
  2502  0017C6  0100               	movlb	0	; () banked
  2503  0017C8  2BBA               	incf	init_queue@i& (0+255),f,b
  2504                           
  2505                           ; BSR set to: 0
  2506  0017CA  0E04               	movlw	4
  2507  0017CC  0100               	movlb	0	; () banked
  2508  0017CE  65BA               	cpfsgt	init_queue@i& (0+255),b
  2509  0017D0  D7ED               	goto	l2664
  2510  0017D2  0012               	return	
  2511  0017D4                     __end_of_init_queue:
  2512                           	opt stack 0
  2513                           tblptru	equ	0xFF8
  2514                           tblptrh	equ	0xFF7
  2515                           tblptrl	equ	0xFF6
  2516                           tablat	equ	0xFF5
  2517                           prodh	equ	0xFF4
  2518                           prodl	equ	0xFF3
  2519                           postinc0	equ	0xFEE
  2520                           wreg	equ	0xFE8
  2521                           indf2	equ	0xFDF
  2522                           postinc2	equ	0xFDE
  2523                           postdec2	equ	0xFDD
  2524                           fsr2h	equ	0xFDA
  2525                           fsr2l	equ	0xFD9
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _init_i2c *****************
  2529 ;; Defined at:
  2530 ;;		line 332 in file "../src/my_i2c.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2533 ;;		 -> main@ic(38), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;		None               void
  2538 ;; Registers used:
  2539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2545 ;;      Params:         0       2       0       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0
  2548 ;;      Totals:         0       2       0       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:   10
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text10
  2560  00170A                     __ptext10:
  2561                           	opt stack 0
  2562  00170A                     _init_i2c:
  2563                           	opt stack 19
  2564                           
  2565                           ;my_i2c.c: 333: ic_ptr = ic;
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;incstack = 0
  2569  00170A  0100               	movlb	0	; () banked
  2570  00170C  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2571  001710  0100               	movlb	0	; () banked
  2572  001712  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;my_i2c.c: 334: ic_ptr->buflen = 0;
  2576  001716  0100               	movlb	0	; () banked
  2577  001718  EE20 F00E          	lfsr	2,14
  2578  00171C  0100               	movlb	0	; () banked
  2579  00171E  51C5               	movf	_ic_ptr& (0+255),w,b
  2580  001720  26D9               	addwf	fsr2l,f,c
  2581  001722  0100               	movlb	0	; () banked
  2582  001724  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2583  001726  22DA               	addwfc	fsr2h,f,c
  2584  001728  0E00               	movlw	0
  2585  00172A  6EDF               	movwf	indf2,c
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;my_i2c.c: 335: ic_ptr->event_count = 0;
  2589  00172C  0100               	movlb	0	; () banked
  2590  00172E  EE20 F020          	lfsr	2,32
  2591  001732  0100               	movlb	0	; () banked
  2592  001734  51C5               	movf	_ic_ptr& (0+255),w,b
  2593  001736  26D9               	addwf	fsr2l,f,c
  2594  001738  0100               	movlb	0	; () banked
  2595  00173A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2596  00173C  22DA               	addwfc	fsr2h,f,c
  2597  00173E  0E00               	movlw	0
  2598  001740  6EDF               	movwf	indf2,c
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;my_i2c.c: 336: ic_ptr->status = 0x5;
  2602  001742  0100               	movlb	0	; () banked
  2603  001744  EE20 F021          	lfsr	2,33
  2604  001748  0100               	movlb	0	; () banked
  2605  00174A  51C5               	movf	_ic_ptr& (0+255),w,b
  2606  00174C  26D9               	addwf	fsr2l,f,c
  2607  00174E  0100               	movlb	0	; () banked
  2608  001750  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2609  001752  22DA               	addwfc	fsr2h,f,c
  2610  001754  0E05               	movlw	5
  2611  001756  6EDF               	movwf	indf2,c
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;my_i2c.c: 337: ic_ptr->error_count = 0;
  2615  001758  0100               	movlb	0	; () banked
  2616  00175A  EE20 F023          	lfsr	2,35
  2617  00175E  0100               	movlb	0	; () banked
  2618  001760  51C5               	movf	_ic_ptr& (0+255),w,b
  2619  001762  26D9               	addwf	fsr2l,f,c
  2620  001764  0100               	movlb	0	; () banked
  2621  001766  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2622  001768  22DA               	addwfc	fsr2h,f,c
  2623  00176A  0E00               	movlw	0
  2624  00176C  6EDF               	movwf	indf2,c
  2625                           
  2626                           ; BSR set to: 0
  2627  00176E  0012               	return	
  2628  001770                     __end_of_init_i2c:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           prodh	equ	0xFF4
  2635                           prodl	equ	0xFF3
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           indf2	equ	0xFDF
  2639                           postinc2	equ	0xFDE
  2640                           postdec2	equ	0xFDD
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function _i_like_to_moveit_moveit *****************
  2646 ;; Defined at:
  2647 ;;		line 3 in file "C:/Users/alex/Documents/VI/School/Embedded/code/pic_motor/src/src/motor.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  left_side_sp    1    wreg     unsigned char 
  2650 ;;  right_side_s    1   16[BANK1 ] unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  left_side_sp    1   17[BANK1 ] unsigned char 
  2653 ;;  moves           2   18[BANK1 ] unsigned char [2]
  2654 ;; Return value:  Size  Location     Type
  2655 ;;		None               void
  2656 ;; Registers used:
  2657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2663 ;;      Params:         0       0       1       0       0
  2664 ;;      Locals:         0       0       3       0       0
  2665 ;;      Temps:          0       0       0       0       0
  2666 ;;      Totals:         0       0       4       0       0
  2667 ;;Total ram usage:        4 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:   14
  2670 ;; This function calls:
  2671 ;;		_send_uart_message
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text11
  2678  001B5E                     __ptext11:
  2679                           	opt stack 0
  2680  001B5E                     _i_like_to_moveit_moveit:
  2681                           	opt stack 15
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;incstack = 0
  2685                           ;i_like_to_moveit_moveit@left_side_speed stored from wreg
  2686  001B5E  0101               	movlb	1	; () banked
  2687  001B60  6F11               	movwf	i_like_to_moveit_moveit@left_side_speed& (0+255),b
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;motor.c: 14: unsigned char moves[2];
  2691                           ;motor.c: 17: moves[0] = (left_side_speed>>1) + 192;
  2692  001B62  0101               	movlb	1	; () banked
  2693  001B64  90D8               	bcf	status,0,c
  2694  001B66  3111               	rrcf	i_like_to_moveit_moveit@left_side_speed& (0+255),w,b
  2695  001B68  0FC0               	addlw	192
  2696  001B6A  0101               	movlb	1	; () banked
  2697  001B6C  6F12               	movwf	i_like_to_moveit_moveit@moves& (0+255),b
  2698                           
  2699                           ;motor.c: 18: moves[1] = (right_side_speed>>1) + 64 ;
  2700  001B6E  0101               	movlb	1	; () banked
  2701  001B70  90D8               	bcf	status,0,c
  2702  001B72  3110               	rrcf	i_like_to_moveit_moveit@right_side_speed& (0+255),w,b
  2703  001B74  0F40               	addlw	64
  2704  001B76  0101               	movlb	1	; () banked
  2705  001B78  6F13               	movwf	(i_like_to_moveit_moveit@moves+1)& (0+255),b
  2706                           
  2707                           ; BSR set to: 1
  2708                           ;motor.c: 20: send_uart_message(moves);
  2709  001B7A  0101               	movlb	1	; () banked
  2710  001B7C  0E01               	movlw	high i_like_to_moveit_moveit@moves
  2711  001B7E  0101               	movlb	1	; () banked
  2712  001B80  6F0F               	movwf	(send_uart_message@message_ptr+1)& (0+255),b
  2713  001B82  0101               	movlb	1	; () banked
  2714  001B84  0E12               	movlw	low i_like_to_moveit_moveit@moves
  2715  001B86  0101               	movlb	1	; () banked
  2716  001B88  6F0E               	movwf	send_uart_message@message_ptr& (0+255),b
  2717  001B8A  ECB2  F00E         	call	_send_uart_message	;wreg free
  2718  001B8E  0012               	return	
  2719  001B90                     __end_of_i_like_to_moveit_moveit:
  2720                           	opt stack 0
  2721                           tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           prodh	equ	0xFF4
  2726                           prodl	equ	0xFF3
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           indf2	equ	0xFDF
  2730                           postinc2	equ	0xFDE
  2731                           postdec2	equ	0xFDD
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _send_uart_message *****************
  2737 ;; Defined at:
  2738 ;;		line 186 in file "../src/my_uart.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  message_ptr     2   14[BANK1 ] PTR unsigned char 
  2741 ;;		 -> i_like_to_moveit_moveit@moves(2), main@uart_response(14), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  message_q_co    1   68[BANK0 ] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      unsigned char 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2753 ;;      Params:         0       0       2       0       0
  2754 ;;      Locals:         0       1       0       0       0
  2755 ;;      Temps:          0       0       0       0       0
  2756 ;;      Totals:         0       1       2       0       0
  2757 ;;Total ram usage:        3 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:   13
  2760 ;; This function calls:
  2761 ;;		_FromMainLow_sendmsg
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;;		_i_like_to_moveit_moveit
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text12
  2769  001D64                     __ptext12:
  2770                           	opt stack 0
  2771  001D64                     _send_uart_message:
  2772                           	opt stack 16
  2773                           
  2774                           ;my_uart.c: 188: unsigned char message_q_code = FromMainLow_sendmsg(2,31,(void *) messag
      +                          e_ptr );
  2775                           
  2776                           ;incstack = 0
  2777  001D64  0E1F               	movlw	31
  2778  001D66  0101               	movlb	1	; () banked
  2779  001D68  6F0B               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  2780  001D6A  0101               	movlb	1	; () banked
  2781  001D6C  C10F  F10D         	movff	send_uart_message@message_ptr+1,FromMainLow_sendmsg@data+1
  2782  001D70  0101               	movlb	1	; () banked
  2783  001D72  C10E  F10C         	movff	send_uart_message@message_ptr,FromMainLow_sendmsg@data
  2784  001D76  0E02               	movlw	2
  2785  001D78  EC11  F00E         	call	_FromMainLow_sendmsg
  2786  001D7C  0100               	movlb	0	; () banked
  2787  001D7E  6FC4               	movwf	send_uart_message@message_q_code& (0+255),b
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;my_uart.c: 193: }
  2791                           ;my_uart.c: 195: PIE1bits.TX1IE = 1;
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;my_uart.c: 191: {
  2795                           ;my_uart.c: 192: return 0x02;
  2796                           ;	Return value of _send_uart_message is never used
  2797                           
  2798                           ;my_uart.c: 190: if( message_q_code == -1)
  2799  001D80  889D               	bsf	3997,4,c	;volatile
  2800                           
  2801                           ; BSR set to: 0
  2802                           
  2803                           ;my_uart.c: 196: return 0x00;
  2804                           ;	Return value of _send_uart_message is never used
  2805  001D82  0012               	return	
  2806  001D84                     __end_of_send_uart_message:
  2807                           	opt stack 0
  2808                           tblptru	equ	0xFF8
  2809                           tblptrh	equ	0xFF7
  2810                           tblptrl	equ	0xFF6
  2811                           tablat	equ	0xFF5
  2812                           prodh	equ	0xFF4
  2813                           prodl	equ	0xFF3
  2814                           postinc0	equ	0xFEE
  2815                           wreg	equ	0xFE8
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           postdec2	equ	0xFDD
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _FromMainLow_sendmsg *****************
  2824 ;; Defined at:
  2825 ;;		line 150 in file "../src/messages.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  length          1    wreg     unsigned char 
  2828 ;;  msgtype         1   11[BANK1 ] unsigned char 
  2829 ;;  data            2   12[BANK1 ] PTR void 
  2830 ;;		 -> i_like_to_moveit_moveit@moves(2), main@uart_response(14), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  length          1   67[BANK0 ] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      char 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2842 ;;      Params:         0       0       3       0       0
  2843 ;;      Locals:         0       1       0       0       0
  2844 ;;      Temps:          0       0       0       0       0
  2845 ;;      Totals:         0       1       3       0       0
  2846 ;;Total ram usage:        4 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:   12
  2849 ;; This function calls:
  2850 ;;		_send_msg
  2851 ;; This function is called by:
  2852 ;;		_send_uart_message
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text13
  2857  001C22                     __ptext13:
  2858                           	opt stack 0
  2859  001C22                     _FromMainLow_sendmsg:
  2860                           	opt stack 16
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;incstack = 0
  2864                           ;FromMainLow_sendmsg@length stored from wreg
  2865  001C22  0100               	movlb	0	; () banked
  2866  001C24  6FC3               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2870  001C26  0102               	movlb	2	; () banked
  2871  001C28  0E02               	movlw	high _FromMainLow_MQ
  2872  001C2A  0101               	movlb	1	; () banked
  2873  001C2C  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2874  001C2E  0102               	movlb	2	; () banked
  2875  001C30  0E00               	movlw	low _FromMainLow_MQ
  2876  001C32  0101               	movlb	1	; () banked
  2877  001C34  6F00               	movwf	send_msg@qptr& (0+255),b
  2878  001C36  C0C3  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  2879  001C3A  C10B  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2880  001C3E  0101               	movlb	1	; () banked
  2881  001C40  C10D  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2882  001C44  0101               	movlb	1	; () banked
  2883  001C46  C10C  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  2884  001C4A  ECF6  F006         	call	_send_msg	;wreg free
  2885  001C4E  0012               	return	
  2886  001C50                     __end_of_FromMainLow_sendmsg:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           postinc0	equ	0xFEE
  2895                           wreg	equ	0xFE8
  2896                           indf2	equ	0xFDF
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _send_msg *****************
  2904 ;; Defined at:
  2905 ;;		line 24 in file "../src/messages.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2908 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2909 ;;  length          1    2[BANK1 ] unsigned char 
  2910 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2911 ;;  data            2    4[BANK1 ] PTR void 
  2912 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  2913 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  2914 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  2915 ;;		 -> main@t1thread_data(2), main@ic(38), 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2918 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  2919 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  2920 ;;  tlength         2    6[BANK1 ] unsigned int 
  2921 ;;  slot            1    8[BANK1 ] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      char 
  2924 ;; Registers used:
  2925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2931 ;;      Params:         0       0       6       0       0
  2932 ;;      Locals:         0       0       5       0       0
  2933 ;;      Temps:          0       1       0       0       0
  2934 ;;      Totals:         0       1      11       0       0
  2935 ;;Total ram usage:       12 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:   11
  2938 ;; This function calls:
  2939 ;;		___awmod
  2940 ;;		_memcpy
  2941 ;; This function is called by:
  2942 ;;		_FromMainLow_sendmsg
  2943 ;;		_FromMainHigh_sendmsg
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text14
  2948  000DEC                     __ptext14:
  2949                           	opt stack 0
  2950  000DEC                     _send_msg:
  2951                           	opt stack 16
  2952                           
  2953                           ;messages.c: 25: unsigned char slot;
  2954                           ;messages.c: 27: msg *qmsg;
  2955                           ;messages.c: 28: size_t tlength = length;
  2956                           
  2957                           ;incstack = 0
  2958  000DEC  0101               	movlb	1	; () banked
  2959  000DEE  C102  F106         	movff	send_msg@length,send_msg@tlength
  2960  000DF2  0101               	movlb	1	; () banked
  2961  000DF4  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  2962                           
  2963                           ; BSR set to: 1
  2964                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2965  000DF6  0101               	movlb	1	; () banked
  2966  000DF8  EE20 F055          	lfsr	2,85
  2967  000DFC  0101               	movlb	1	; () banked
  2968  000DFE  5100               	movf	send_msg@qptr& (0+255),w,b
  2969  000E00  26D9               	addwf	fsr2l,f,c
  2970  000E02  0101               	movlb	1	; () banked
  2971  000E04  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2972  000E06  22DA               	addwfc	fsr2h,f,c
  2973  000E08  50DF               	movf	indf2,w,c
  2974  000E0A  0101               	movlb	1	; () banked
  2975  000E0C  6F08               	movwf	send_msg@slot& (0+255),b
  2976                           
  2977                           ; BSR set to: 1
  2978                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2979  000E0E  0101               	movlb	1	; () banked
  2980  000E10  5108               	movf	send_msg@slot& (0+255),w,b
  2981  000E12  0D11               	mullw	17
  2982  000E14  50F3               	movf	prodl,w,c
  2983  000E16  0101               	movlb	1	; () banked
  2984  000E18  2500               	addwf	send_msg@qptr& (0+255),w,b
  2985  000E1A  0101               	movlb	1	; () banked
  2986  000E1C  6F09               	movwf	send_msg@qmsg& (0+255),b
  2987  000E1E  50F4               	movf	prodh,w,c
  2988  000E20  0101               	movlb	1	; () banked
  2989  000E22  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2990  000E24  0101               	movlb	1	; () banked
  2991  000E26  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;messages.c: 41: if (qmsg->full != 0) {
  2995  000E28  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2996  000E2C  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2997  000E30  50DF               	movf	indf2,w,c
  2998  000E32  B4D8               	btfsc	status,2,c
  2999  000E34  D002               	goto	l3530
  3000                           
  3001                           ; BSR set to: 1
  3002                           ;messages.c: 42: return (-1);
  3003  000E36  0EFF               	movlw	255
  3004  000E38  0012               	return	
  3005  000E3A                     l3530:
  3006                           
  3007                           ; BSR set to: 1
  3008                           ;messages.c: 43: }
  3009                           ;messages.c: 46: qmsg->length = length;
  3010  000E3A  0101               	movlb	1	; () banked
  3011  000E3C  EE20 F001          	lfsr	2,1
  3012  000E40  0101               	movlb	1	; () banked
  3013  000E42  5109               	movf	send_msg@qmsg& (0+255),w,b
  3014  000E44  26D9               	addwf	fsr2l,f,c
  3015  000E46  0101               	movlb	1	; () banked
  3016  000E48  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3017  000E4A  22DA               	addwfc	fsr2h,f,c
  3018  000E4C  0101               	movlb	1	; () banked
  3019  000E4E  C102  FFDF         	movff	send_msg@length,indf2
  3020                           
  3021                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3022  000E52  0101               	movlb	1	; () banked
  3023  000E54  EE20 F002          	lfsr	2,2
  3024  000E58  0101               	movlb	1	; () banked
  3025  000E5A  5109               	movf	send_msg@qmsg& (0+255),w,b
  3026  000E5C  26D9               	addwf	fsr2l,f,c
  3027  000E5E  0101               	movlb	1	; () banked
  3028  000E60  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3029  000E62  22DA               	addwfc	fsr2h,f,c
  3030  000E64  0101               	movlb	1	; () banked
  3031  000E66  C103  FFDF         	movff	send_msg@msgtype,indf2
  3032                           
  3033                           ; BSR set to: 1
  3034                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3035  000E6A  0E03               	movlw	3
  3036  000E6C  0101               	movlb	1	; () banked
  3037  000E6E  2509               	addwf	send_msg@qmsg& (0+255),w,b
  3038  000E70  0100               	movlb	0	; () banked
  3039  000E72  6FB8               	movwf	memcpy@d1& (0+255),b
  3040  000E74  0E00               	movlw	0
  3041  000E76  0101               	movlb	1	; () banked
  3042  000E78  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3043  000E7A  0100               	movlb	0	; () banked
  3044  000E7C  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  3045  000E7E  0101               	movlb	1	; () banked
  3046  000E80  0100               	movlb	0	; () banked
  3047  000E82  C105  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  3048  000E86  0101               	movlb	1	; () banked
  3049  000E88  0100               	movlb	0	; () banked
  3050  000E8A  C104  F0BA         	movff	send_msg@data,memcpy@s1
  3051  000E8E  C106  F0BC         	movff	send_msg@tlength,memcpy@n
  3052  000E92  C107  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  3053  000E96  ECCF  F00C         	call	_memcpy	;wreg free
  3054                           
  3055                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  3056  000E9A  0101               	movlb	1	; () banked
  3057  000E9C  EE20 F055          	lfsr	2,85
  3058  000EA0  0101               	movlb	1	; () banked
  3059  000EA2  5100               	movf	send_msg@qptr& (0+255),w,b
  3060  000EA4  26D9               	addwf	fsr2l,f,c
  3061  000EA6  0101               	movlb	1	; () banked
  3062  000EA8  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3063  000EAA  22DA               	addwfc	fsr2h,f,c
  3064  000EAC  0101               	movlb	1	; () banked
  3065  000EAE  EE10 F055          	lfsr	1,85
  3066  000EB2  0101               	movlb	1	; () banked
  3067  000EB4  5100               	movf	send_msg@qptr& (0+255),w,b
  3068  000EB6  26E1               	addwf	fsr1l,f,c
  3069  000EB8  0101               	movlb	1	; () banked
  3070  000EBA  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  3071  000EBC  22E2               	addwfc	fsr1h,f,c
  3072  000EBE  50E7               	movf	indf1,w,c
  3073  000EC0  0100               	movlb	0	; () banked
  3074  000EC2  6FC2               	movwf	??_send_msg& (0+255),b
  3075  000EC4  0E01               	movlw	1
  3076  000EC6  0100               	movlb	0	; () banked
  3077  000EC8  25C2               	addwf	??_send_msg& (0+255),w,b
  3078  000ECA  0100               	movlb	0	; () banked
  3079  000ECC  6FB8               	movwf	___awmod@dividend& (0+255),b
  3080  000ECE  0100               	movlb	0	; () banked
  3081  000ED0  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  3082  000ED2  0E00               	movlw	0
  3083  000ED4  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3084  000ED6  0E00               	movlw	0
  3085  000ED8  0100               	movlb	0	; () banked
  3086  000EDA  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  3087  000EDC  0E05               	movlw	5
  3088  000EDE  0100               	movlb	0	; () banked
  3089  000EE0  6FBA               	movwf	___awmod@divisor& (0+255),b
  3090  000EE2  EC5F  F009         	call	___awmod	;wreg free
  3091  000EE6  0100               	movlb	0	; () banked
  3092  000EE8  51B8               	movf	?___awmod& (0+255),w,b
  3093  000EEA  6EDF               	movwf	indf2,c
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;messages.c: 59: qmsg->full = 1;
  3097  000EEC  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  3098  000EF0  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3099  000EF4  0E01               	movlw	1
  3100  000EF6  6EDF               	movwf	indf2,c
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;messages.c: 60: return (1);
  3104  000EF8  0E01               	movlw	1
  3105  000EFA  0012               	return	
  3106  000EFC                     __end_of_send_msg:
  3107                           	opt stack 0
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           postinc0	equ	0xFEE
  3115                           wreg	equ	0xFE8
  3116                           indf1	equ	0xFE7
  3117                           fsr1h	equ	0xFE2
  3118                           fsr1l	equ	0xFE1
  3119                           indf2	equ	0xFDF
  3120                           postinc2	equ	0xFDE
  3121                           postdec2	equ	0xFDD
  3122                           fsr2h	equ	0xFDA
  3123                           fsr2l	equ	0xFD9
  3124                           status	equ	0xFD8
  3125                           
  3126 ;; *************** function _i2c_configure_slave *****************
  3127 ;; Defined at:
  3128 ;;		line 343 in file "../src/my_i2c.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  addr            1    wreg     unsigned char 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  addr            1   56[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         0       1       0       0       0
  3144 ;;      Temps:          0       0       0       0       0
  3145 ;;      Totals:         0       1       0       0       0
  3146 ;;Total ram usage:        1 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:   10
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text15
  3157  001CAA                     __ptext15:
  3158                           	opt stack 0
  3159  001CAA                     _i2c_configure_slave:
  3160                           	opt stack 19
  3161                           
  3162                           ;incstack = 0
  3163                           ;i2c_configure_slave@addr stored from wreg
  3164  001CAA  0100               	movlb	0	; () banked
  3165  001CAC  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;my_i2c.c: 355: TRISCbits.TRISC3 = 1;
  3169  001CAE  8694               	bsf	3988,3,c	;volatile
  3170                           
  3171                           ;my_i2c.c: 356: TRISCbits.TRISC4 = 1;
  3172  001CB0  8894               	bsf	3988,4,c	;volatile
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;my_i2c.c: 361: SSPADD = addr;
  3176  001CB2  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;my_i2c.c: 363: SSPSTAT = 0x0;
  3180  001CB6  0E00               	movlw	0
  3181  001CB8  6EC7               	movwf	4039,c	;volatile
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;my_i2c.c: 364: SSPCON1 = 0x0;
  3185  001CBA  0E00               	movlw	0
  3186  001CBC  6EC6               	movwf	4038,c	;volatile
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;my_i2c.c: 365: SSPCON2 = 0x0;
  3190  001CBE  0E00               	movlw	0
  3191  001CC0  6EC5               	movwf	4037,c	;volatile
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;my_i2c.c: 366: SSPCON1 |= 0x0E;
  3195  001CC2  0E0E               	movlw	14
  3196  001CC4  12C6               	iorwf	4038,f,c	;volatile
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;my_i2c.c: 367: SSPSTAT |= 0b10000000;
  3200  001CC6  8EC7               	bsf	4039,7,c	;volatile
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;my_i2c.c: 370: TRISCbits.TRISC3 = 1;
  3204  001CC8  8694               	bsf	3988,3,c	;volatile
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;my_i2c.c: 371: TRISCbits.TRISC4 = 1;
  3208  001CCA  8894               	bsf	3988,4,c	;volatile
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;my_i2c.c: 392: SSPCON2bits.SEN = 1;
  3212  001CCC  80C5               	bsf	4037,0,c	;volatile
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;my_i2c.c: 393: SSPCON1 |= 0b00100000;
  3216  001CCE  8AC6               	bsf	4038,5,c	;volatile
  3217                           
  3218                           ; BSR set to: 0
  3219  001CD0  0012               	return	
  3220  001CD2                     __end_of_i2c_configure_slave:
  3221                           	opt stack 0
  3222                           tblptru	equ	0xFF8
  3223                           tblptrh	equ	0xFF7
  3224                           tblptrl	equ	0xFF6
  3225                           tablat	equ	0xFF5
  3226                           prodh	equ	0xFF4
  3227                           prodl	equ	0xFF3
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           indf1	equ	0xFE7
  3231                           fsr1h	equ	0xFE2
  3232                           fsr1l	equ	0xFE1
  3233                           indf2	equ	0xFDF
  3234                           postinc2	equ	0xFDE
  3235                           postdec2	equ	0xFDD
  3236                           fsr2h	equ	0xFDA
  3237                           fsr2l	equ	0xFD9
  3238                           status	equ	0xFD8
  3239                           
  3240 ;; *************** function _enable_interrupts *****************
  3241 ;; Defined at:
  3242 ;;		line 14 in file "../src/interrupts.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;		None               void
  3249 ;; Registers used:
  3250 ;;		None
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3256 ;;      Params:         0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0
  3259 ;;      Totals:         0       0       0       0       0
  3260 ;;Total ram usage:        0 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:   10
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text16
  3271  001DF4                     __ptext16:
  3272                           	opt stack 0
  3273  001DF4                     _enable_interrupts:
  3274                           	opt stack 19
  3275                           
  3276                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;incstack = 0
  3280  001DF4  8ED0               	bsf	4048,7,c	;volatile
  3281                           
  3282                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3283  001DF6  8EF2               	bsf	intcon,7,c	;volatile
  3284                           
  3285                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3286  001DF8  8CF2               	bsf	intcon,6,c	;volatile
  3287  001DFA  0012               	return	
  3288  001DFC                     __end_of_enable_interrupts:
  3289                           	opt stack 0
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           prodh	equ	0xFF4
  3295                           prodl	equ	0xFF3
  3296                           intcon	equ	0xFF2
  3297                           postinc0	equ	0xFEE
  3298                           wreg	equ	0xFE8
  3299                           indf1	equ	0xFE7
  3300                           fsr1h	equ	0xFE2
  3301                           fsr1l	equ	0xFE1
  3302                           indf2	equ	0xFDF
  3303                           postinc2	equ	0xFDE
  3304                           postdec2	equ	0xFDD
  3305                           fsr2h	equ	0xFDA
  3306                           fsr2l	equ	0xFD9
  3307                           status	equ	0xFD8
  3308                           
  3309 ;; *************** function _debug_configure *****************
  3310 ;; Defined at:
  3311 ;;		line 3 in file "../src/debug.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg, status,2
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:   10
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text17
  3340  001DEA                     __ptext17:
  3341                           	opt stack 0
  3342  001DEA                     _debug_configure:
  3343                           	opt stack 19
  3344                           
  3345                           ;debug.c: 5: TRISD = 0x00;
  3346                           
  3347                           ;incstack = 0
  3348  001DEA  0E00               	movlw	0
  3349  001DEC  6E95               	movwf	3989,c	;volatile
  3350                           
  3351                           ;debug.c: 6: TRISBbits.TRISB0=0;
  3352  001DEE  9093               	bcf	3987,0,c	;volatile
  3353                           
  3354                           ;debug.c: 7: TRISBbits.TRISB1=0;
  3355  001DF0  9293               	bcf	3987,1,c	;volatile
  3356  001DF2  0012               	return	
  3357  001DF4                     __end_of_debug_configure:
  3358                           	opt stack 0
  3359                           tblptru	equ	0xFF8
  3360                           tblptrh	equ	0xFF7
  3361                           tblptrl	equ	0xFF6
  3362                           tablat	equ	0xFF5
  3363                           prodh	equ	0xFF4
  3364                           prodl	equ	0xFF3
  3365                           intcon	equ	0xFF2
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           indf1	equ	0xFE7
  3369                           fsr1h	equ	0xFE2
  3370                           fsr1l	equ	0xFE1
  3371                           indf2	equ	0xFDF
  3372                           postinc2	equ	0xFDE
  3373                           postdec2	equ	0xFDD
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _blip3 *****************
  3379 ;; Defined at:
  3380 ;;		line 32 in file "../src/debug.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;		None               void
  3387 ;; Registers used:
  3388 ;;		None
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3394 ;;      Params:         0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:   10
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text18
  3409  001DFC                     __ptext18:
  3410                           	opt stack 0
  3411  001DFC                     _blip3:
  3412                           	opt stack 19
  3413                           
  3414                           ;debug.c: 34: LATDbits.LD6 = 0;
  3415                           
  3416                           ;incstack = 0
  3417  001DFC  9C8C               	bcf	3980,6,c	;volatile
  3418                           
  3419                           ;debug.c: 35: LATDbits.LD6 = 1;
  3420  001DFE  8C8C               	bsf	3980,6,c	;volatile
  3421                           
  3422                           ;debug.c: 36: LATDbits.LD6 = 0;
  3423  001E00  9C8C               	bcf	3980,6,c	;volatile
  3424  001E02  0012               	return	
  3425  001E04                     __end_of_blip3:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           prodh	equ	0xFF4
  3432                           prodl	equ	0xFF3
  3433                           intcon	equ	0xFF2
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           indf1	equ	0xFE7
  3437                           fsr1h	equ	0xFE2
  3438                           fsr1l	equ	0xFE1
  3439                           indf2	equ	0xFDF
  3440                           postinc2	equ	0xFDE
  3441                           postdec2	equ	0xFDD
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _blip2 *****************
  3447 ;; Defined at:
  3448 ;;		line 25 in file "../src/debug.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;		None               void
  3455 ;; Registers used:
  3456 ;;		None
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3462 ;;      Params:         0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:   10
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text19
  3477  001E04                     __ptext19:
  3478                           	opt stack 0
  3479  001E04                     _blip2:
  3480                           	opt stack 19
  3481                           
  3482                           ;debug.c: 27: LATDbits.LD5 = 0;
  3483                           
  3484                           ;incstack = 0
  3485  001E04  9A8C               	bcf	3980,5,c	;volatile
  3486                           
  3487                           ;debug.c: 28: LATDbits.LD5 = 1;
  3488  001E06  8A8C               	bsf	3980,5,c	;volatile
  3489                           
  3490                           ;debug.c: 29: LATDbits.LD5 = 0;
  3491  001E08  9A8C               	bcf	3980,5,c	;volatile
  3492  001E0A  0012               	return	
  3493  001E0C                     __end_of_blip2:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           indf1	equ	0xFE7
  3505                           fsr1h	equ	0xFE2
  3506                           fsr1l	equ	0xFE1
  3507                           indf2	equ	0xFDF
  3508                           postinc2	equ	0xFDE
  3509                           postdec2	equ	0xFDD
  3510                           fsr2h	equ	0xFDA
  3511                           fsr2l	equ	0xFD9
  3512                           status	equ	0xFD8
  3513                           
  3514 ;; *************** function _blip1 *****************
  3515 ;; Defined at:
  3516 ;;		line 18 in file "../src/debug.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;		None               void
  3523 ;; Registers used:
  3524 ;;		None
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3530 ;;      Params:         0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0
  3533 ;;      Totals:         0       0       0       0       0
  3534 ;;Total ram usage:        0 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:   10
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text20
  3545  001E0C                     __ptext20:
  3546                           	opt stack 0
  3547  001E0C                     _blip1:
  3548                           	opt stack 19
  3549                           
  3550                           ;debug.c: 20: LATDbits.LD4 = 0;
  3551                           
  3552                           ;incstack = 0
  3553  001E0C  988C               	bcf	3980,4,c	;volatile
  3554                           
  3555                           ;debug.c: 21: LATDbits.LD4 = 1;
  3556  001E0E  888C               	bsf	3980,4,c	;volatile
  3557                           
  3558                           ;debug.c: 22: LATDbits.LD4 = 0;
  3559  001E10  988C               	bcf	3980,4,c	;volatile
  3560  001E12  0012               	return	
  3561  001E14                     __end_of_blip1:
  3562                           	opt stack 0
  3563                           tblptru	equ	0xFF8
  3564                           tblptrh	equ	0xFF7
  3565                           tblptrl	equ	0xFF6
  3566                           tablat	equ	0xFF5
  3567                           prodh	equ	0xFF4
  3568                           prodl	equ	0xFF3
  3569                           intcon	equ	0xFF2
  3570                           postinc0	equ	0xFEE
  3571                           wreg	equ	0xFE8
  3572                           indf1	equ	0xFE7
  3573                           fsr1h	equ	0xFE2
  3574                           fsr1l	equ	0xFE1
  3575                           indf2	equ	0xFDF
  3576                           postinc2	equ	0xFDE
  3577                           postdec2	equ	0xFDD
  3578                           fsr2h	equ	0xFDA
  3579                           fsr2l	equ	0xFD9
  3580                           status	equ	0xFD8
  3581                           
  3582 ;; *************** function _blip *****************
  3583 ;; Defined at:
  3584 ;;		line 11 in file "../src/debug.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;		None               void
  3591 ;; Registers used:
  3592 ;;		None
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3598 ;;      Params:         0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:   10
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text21
  3613  001E14                     __ptext21:
  3614                           	opt stack 0
  3615  001E14                     _blip:
  3616                           	opt stack 19
  3617                           
  3618                           ;debug.c: 13: LATDbits.LD2 = 0;
  3619                           
  3620                           ;incstack = 0
  3621  001E14  948C               	bcf	3980,2,c	;volatile
  3622                           
  3623                           ;debug.c: 14: LATDbits.LD2 = 1;
  3624  001E16  848C               	bsf	3980,2,c	;volatile
  3625                           
  3626                           ;debug.c: 15: LATDbits.LD2 = 0;
  3627  001E18  948C               	bcf	3980,2,c	;volatile
  3628  001E1A  0012               	return	
  3629  001E1C                     __end_of_blip:
  3630                           	opt stack 0
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           prodh	equ	0xFF4
  3636                           prodl	equ	0xFF3
  3637                           intcon	equ	0xFF2
  3638                           postinc0	equ	0xFEE
  3639                           wreg	equ	0xFE8
  3640                           indf1	equ	0xFE7
  3641                           fsr1h	equ	0xFE2
  3642                           fsr1l	equ	0xFE1
  3643                           indf2	equ	0xFDF
  3644                           postinc2	equ	0xFDE
  3645                           postdec2	equ	0xFDD
  3646                           fsr2h	equ	0xFDA
  3647                           fsr2l	equ	0xFD9
  3648                           status	equ	0xFD8
  3649                           
  3650 ;; *************** function _ToMainLow_recvmsg *****************
  3651 ;; Defined at:
  3652 ;;		line 112 in file "../src/messages.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  maxlength       1    wreg     unsigned char 
  3655 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3656 ;;		 -> main@msgtype(1), 
  3657 ;;  data            2   14[BANK1 ] PTR void 
  3658 ;;		 -> main@msgbuffer(15), 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      char 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3670 ;;      Params:         0       0       4       0       0
  3671 ;;      Locals:         0       1       0       0       0
  3672 ;;      Temps:          0       0       0       0       0
  3673 ;;      Totals:         0       1       4       0       0
  3674 ;;Total ram usage:        5 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:   12
  3677 ;; This function calls:
  3678 ;;		_recv_msg
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text22
  3685  001ABC                     __ptext22:
  3686                           	opt stack 0
  3687  001ABC                     _ToMainLow_recvmsg:
  3688                           	opt stack 17
  3689                           
  3690                           ;incstack = 0
  3691                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3692  001ABC  0100               	movlb	0	; () banked
  3693  001ABE  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3697  001AC0  0101               	movlb	1	; () banked
  3698  001AC2  0E01               	movlw	high _ToMainLow_MQ
  3699  001AC4  0101               	movlb	1	; () banked
  3700  001AC6  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3701  001AC8  0101               	movlb	1	; () banked
  3702  001ACA  0E72               	movlw	low _ToMainLow_MQ
  3703  001ACC  0101               	movlb	1	; () banked
  3704  001ACE  6F00               	movwf	recv_msg@qptr& (0+255),b
  3705  001AD0  C0C4  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3706  001AD4  0101               	movlb	1	; () banked
  3707  001AD6  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3708  001ADA  0101               	movlb	1	; () banked
  3709  001ADC  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3710  001AE0  0101               	movlb	1	; () banked
  3711  001AE2  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3712  001AE6  0101               	movlb	1	; () banked
  3713  001AE8  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3714  001AEC  ECB6  F005         	call	_recv_msg	;wreg free
  3715  001AF0  0012               	return	
  3716  001AF2                     __end_of_ToMainLow_recvmsg:
  3717                           	opt stack 0
  3718                           tblptru	equ	0xFF8
  3719                           tblptrh	equ	0xFF7
  3720                           tblptrl	equ	0xFF6
  3721                           tablat	equ	0xFF5
  3722                           prodh	equ	0xFF4
  3723                           prodl	equ	0xFF3
  3724                           intcon	equ	0xFF2
  3725                           postinc0	equ	0xFEE
  3726                           wreg	equ	0xFE8
  3727                           indf1	equ	0xFE7
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           indf2	equ	0xFDF
  3731                           postinc2	equ	0xFDE
  3732                           postdec2	equ	0xFDD
  3733                           fsr2h	equ	0xFDA
  3734                           fsr2l	equ	0xFD9
  3735                           status	equ	0xFD8
  3736                           
  3737 ;; *************** function _ToMainHigh_recvmsg *****************
  3738 ;; Defined at:
  3739 ;;		line 135 in file "../src/messages.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  maxlength       1    wreg     unsigned char 
  3742 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3743 ;;		 -> main@msgtype(1), 
  3744 ;;  data            2   14[BANK1 ] PTR void 
  3745 ;;		 -> main@msgbuffer(15), 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      char 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3757 ;;      Params:         0       0       4       0       0
  3758 ;;      Locals:         0       1       0       0       0
  3759 ;;      Temps:          0       0       0       0       0
  3760 ;;      Totals:         0       1       4       0       0
  3761 ;;Total ram usage:        5 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:   12
  3764 ;; This function calls:
  3765 ;;		_recv_msg
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text23
  3772  001AF2                     __ptext23:
  3773                           	opt stack 0
  3774  001AF2                     _ToMainHigh_recvmsg:
  3775                           	opt stack 17
  3776                           
  3777                           ;incstack = 0
  3778                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3779  001AF2  0100               	movlb	0	; () banked
  3780  001AF4  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3784  001AF6  0102               	movlb	2	; () banked
  3785  001AF8  0E02               	movlw	high _ToMainHigh_MQ
  3786  001AFA  0101               	movlb	1	; () banked
  3787  001AFC  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  3788  001AFE  0102               	movlb	2	; () banked
  3789  001B00  0E57               	movlw	low _ToMainHigh_MQ
  3790  001B02  0101               	movlb	1	; () banked
  3791  001B04  6F00               	movwf	recv_msg@qptr& (0+255),b
  3792  001B06  C0C4  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3793  001B0A  0101               	movlb	1	; () banked
  3794  001B0C  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3795  001B10  0101               	movlb	1	; () banked
  3796  001B12  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3797  001B16  0101               	movlb	1	; () banked
  3798  001B18  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3799  001B1C  0101               	movlb	1	; () banked
  3800  001B1E  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3801  001B22  ECB6  F005         	call	_recv_msg	;wreg free
  3802  001B26  0012               	return	
  3803  001B28                     __end_of_ToMainHigh_recvmsg:
  3804                           	opt stack 0
  3805                           tblptru	equ	0xFF8
  3806                           tblptrh	equ	0xFF7
  3807                           tblptrl	equ	0xFF6
  3808                           tablat	equ	0xFF5
  3809                           prodh	equ	0xFF4
  3810                           prodl	equ	0xFF3
  3811                           intcon	equ	0xFF2
  3812                           postinc0	equ	0xFEE
  3813                           wreg	equ	0xFE8
  3814                           indf1	equ	0xFE7
  3815                           fsr1h	equ	0xFE2
  3816                           fsr1l	equ	0xFE1
  3817                           indf2	equ	0xFDF
  3818                           postinc2	equ	0xFDE
  3819                           postdec2	equ	0xFDD
  3820                           fsr2h	equ	0xFDA
  3821                           fsr2l	equ	0xFD9
  3822                           status	equ	0xFD8
  3823                           
  3824 ;; *************** function _recv_msg *****************
  3825 ;; Defined at:
  3826 ;;		line 63 in file "../src/messages.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3829 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3830 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3831 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3832 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  3833 ;;		 -> main@msgtype(1), 
  3834 ;;  data            2    5[BANK1 ] PTR void 
  3835 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  3836 ;;		 -> main@ic(38), 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3839 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  3840 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  3841 ;;  tlength         2    8[BANK1 ] unsigned int 
  3842 ;;  slot            1    7[BANK1 ] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      char 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3852 ;;      Params:         0       0       7       0       0
  3853 ;;      Locals:         0       0       5       0       0
  3854 ;;      Temps:          0       2       0       0       0
  3855 ;;      Totals:         0       2      12       0       0
  3856 ;;Total ram usage:       14 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:   11
  3859 ;; This function calls:
  3860 ;;		___awmod
  3861 ;;		_memcpy
  3862 ;; This function is called by:
  3863 ;;		_ToMainLow_recvmsg
  3864 ;;		_ToMainHigh_recvmsg
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text24
  3869  000B6C                     __ptext24:
  3870                           	opt stack 0
  3871  000B6C                     _recv_msg:
  3872                           	opt stack 17
  3873                           
  3874                           ;messages.c: 64: unsigned char slot;
  3875                           ;messages.c: 68: msg *qmsg;
  3876                           ;messages.c: 69: size_t tlength;
  3877                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3878                           
  3879                           ;incstack = 0
  3880  000B6C  0101               	movlb	1	; () banked
  3881  000B6E  EE20 F056          	lfsr	2,86
  3882  000B72  0101               	movlb	1	; () banked
  3883  000B74  5100               	movf	recv_msg@qptr& (0+255),w,b
  3884  000B76  26D9               	addwf	fsr2l,f,c
  3885  000B78  0101               	movlb	1	; () banked
  3886  000B7A  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3887  000B7C  22DA               	addwfc	fsr2h,f,c
  3888  000B7E  50DF               	movf	indf2,w,c
  3889  000B80  0101               	movlb	1	; () banked
  3890  000B82  6F07               	movwf	recv_msg@slot& (0+255),b
  3891                           
  3892                           ; BSR set to: 1
  3893                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3894  000B84  0101               	movlb	1	; () banked
  3895  000B86  5107               	movf	recv_msg@slot& (0+255),w,b
  3896  000B88  0D11               	mullw	17
  3897  000B8A  50F3               	movf	prodl,w,c
  3898  000B8C  0101               	movlb	1	; () banked
  3899  000B8E  2500               	addwf	recv_msg@qptr& (0+255),w,b
  3900  000B90  0101               	movlb	1	; () banked
  3901  000B92  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  3902  000B94  50F4               	movf	prodh,w,c
  3903  000B96  0101               	movlb	1	; () banked
  3904  000B98  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3905  000B9A  0101               	movlb	1	; () banked
  3906  000B9C  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3907                           
  3908                           ; BSR set to: 1
  3909                           ;messages.c: 74: if (qmsg->full == 1) {
  3910  000B9E  0E01               	movlw	1
  3911  000BA0  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  3912  000BA4  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3913  000BA8  62DF               	cpfseq	indf2,c
  3914  000BAA  D07F               	goto	l3694
  3915                           
  3916                           ; BSR set to: 1
  3917                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3918  000BAC  0101               	movlb	1	; () banked
  3919  000BAE  EE20 F001          	lfsr	2,1
  3920  000BB2  0101               	movlb	1	; () banked
  3921  000BB4  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3922  000BB6  26D9               	addwf	fsr2l,f,c
  3923  000BB8  0101               	movlb	1	; () banked
  3924  000BBA  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3925  000BBC  22DA               	addwfc	fsr2h,f,c
  3926  000BBE  50DF               	movf	indf2,w,c
  3927  000BC0  0101               	movlb	1	; () banked
  3928  000BC2  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  3929  000BC4  B0D8               	btfsc	status,0,c
  3930  000BC6  D002               	goto	l3678
  3931                           
  3932                           ; BSR set to: 1
  3933                           ;messages.c: 77: return (-3);
  3934  000BC8  0EFD               	movlw	253
  3935  000BCA  0012               	return	
  3936  000BCC                     l3678:
  3937                           
  3938                           ; BSR set to: 1
  3939                           ;messages.c: 78: }
  3940                           ;messages.c: 80: tlength = qmsg->length;
  3941  000BCC  0101               	movlb	1	; () banked
  3942  000BCE  EE20 F001          	lfsr	2,1
  3943  000BD2  0101               	movlb	1	; () banked
  3944  000BD4  510A               	movf	recv_msg@qmsg& (0+255),w,b
  3945  000BD6  26D9               	addwf	fsr2l,f,c
  3946  000BD8  0101               	movlb	1	; () banked
  3947  000BDA  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3948  000BDC  22DA               	addwfc	fsr2h,f,c
  3949  000BDE  50DF               	movf	indf2,w,c
  3950  000BE0  0100               	movlb	0	; () banked
  3951  000BE2  6FC2               	movwf	??_recv_msg& (0+255),b
  3952  000BE4  0100               	movlb	0	; () banked
  3953  000BE6  51C2               	movf	??_recv_msg& (0+255),w,b
  3954  000BE8  0101               	movlb	1	; () banked
  3955  000BEA  6F08               	movwf	recv_msg@tlength& (0+255),b
  3956  000BEC  0101               	movlb	1	; () banked
  3957  000BEE  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  3958                           
  3959                           ; BSR set to: 1
  3960                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3961  000BF0  0101               	movlb	1	; () banked
  3962  000BF2  0100               	movlb	0	; () banked
  3963  000BF4  C106  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  3964  000BF8  0101               	movlb	1	; () banked
  3965  000BFA  0100               	movlb	0	; () banked
  3966  000BFC  C105  F0B8         	movff	recv_msg@data,memcpy@d1
  3967  000C00  0E03               	movlw	3
  3968  000C02  0101               	movlb	1	; () banked
  3969  000C04  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  3970  000C06  0100               	movlb	0	; () banked
  3971  000C08  6FC2               	movwf	??_recv_msg& (0+255),b
  3972  000C0A  0E00               	movlw	0
  3973  000C0C  0101               	movlb	1	; () banked
  3974  000C0E  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3975  000C10  0100               	movlb	0	; () banked
  3976  000C12  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  3977  000C14  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  3978  000C18  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  3979  000C1C  C108  F0BC         	movff	recv_msg@tlength,memcpy@n
  3980  000C20  C109  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  3981  000C24  ECCF  F00C         	call	_memcpy	;wreg free
  3982                           
  3983                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  3984  000C28  0101               	movlb	1	; () banked
  3985  000C2A  EE20 F056          	lfsr	2,86
  3986  000C2E  0101               	movlb	1	; () banked
  3987  000C30  5100               	movf	recv_msg@qptr& (0+255),w,b
  3988  000C32  26D9               	addwf	fsr2l,f,c
  3989  000C34  0101               	movlb	1	; () banked
  3990  000C36  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3991  000C38  22DA               	addwfc	fsr2h,f,c
  3992  000C3A  0101               	movlb	1	; () banked
  3993  000C3C  EE10 F056          	lfsr	1,86
  3994  000C40  0101               	movlb	1	; () banked
  3995  000C42  5100               	movf	recv_msg@qptr& (0+255),w,b
  3996  000C44  26E1               	addwf	fsr1l,f,c
  3997  000C46  0101               	movlb	1	; () banked
  3998  000C48  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3999  000C4A  22E2               	addwfc	fsr1h,f,c
  4000  000C4C  50E7               	movf	indf1,w,c
  4001  000C4E  0100               	movlb	0	; () banked
  4002  000C50  6FC2               	movwf	??_recv_msg& (0+255),b
  4003  000C52  0E01               	movlw	1
  4004  000C54  0100               	movlb	0	; () banked
  4005  000C56  25C2               	addwf	??_recv_msg& (0+255),w,b
  4006  000C58  0100               	movlb	0	; () banked
  4007  000C5A  6FB8               	movwf	___awmod@dividend& (0+255),b
  4008  000C5C  0100               	movlb	0	; () banked
  4009  000C5E  6BB9               	clrf	(___awmod@dividend+1)& (0+255),b
  4010  000C60  0E00               	movlw	0
  4011  000C62  23B9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4012  000C64  0E00               	movlw	0
  4013  000C66  0100               	movlb	0	; () banked
  4014  000C68  6FBB               	movwf	(___awmod@divisor+1)& (0+255),b
  4015  000C6A  0E05               	movlw	5
  4016  000C6C  0100               	movlb	0	; () banked
  4017  000C6E  6FBA               	movwf	___awmod@divisor& (0+255),b
  4018  000C70  EC5F  F009         	call	___awmod	;wreg free
  4019  000C74  0100               	movlb	0	; () banked
  4020  000C76  51B8               	movf	?___awmod& (0+255),w,b
  4021  000C78  6EDF               	movwf	indf2,c
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4025  000C7A  0101               	movlb	1	; () banked
  4026  000C7C  EE20 F002          	lfsr	2,2
  4027  000C80  0101               	movlb	1	; () banked
  4028  000C82  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4029  000C84  26D9               	addwf	fsr2l,f,c
  4030  000C86  0101               	movlb	1	; () banked
  4031  000C88  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4032  000C8A  22DA               	addwfc	fsr2h,f,c
  4033  000C8C  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  4034  000C90  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4035  000C94  CFDF FFE7          	movff	indf2,indf1
  4036                           
  4037                           ; BSR set to: 1
  4038                           ;messages.c: 91: qmsg->full = 0;
  4039  000C98  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4040  000C9C  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4041  000CA0  0E00               	movlw	0
  4042  000CA2  6EDF               	movwf	indf2,c
  4043                           
  4044                           ; BSR set to: 1
  4045                           ;messages.c: 92: return (tlength);
  4046  000CA4  0101               	movlb	1	; () banked
  4047  000CA6  5108               	movf	recv_msg@tlength& (0+255),w,b
  4048  000CA8  0012               	return	
  4049  000CAA                     l3694:
  4050                           
  4051                           ; BSR set to: 1
  4052                           ;messages.c: 94: return (-4);
  4053  000CAA  0EFC               	movlw	252
  4054  000CAC  0012               	return	
  4055  000CAE                     __end_of_recv_msg:
  4056                           	opt stack 0
  4057                           tblptru	equ	0xFF8
  4058                           tblptrh	equ	0xFF7
  4059                           tblptrl	equ	0xFF6
  4060                           tablat	equ	0xFF5
  4061                           prodh	equ	0xFF4
  4062                           prodl	equ	0xFF3
  4063                           intcon	equ	0xFF2
  4064                           postinc0	equ	0xFEE
  4065                           wreg	equ	0xFE8
  4066                           indf1	equ	0xFE7
  4067                           fsr1h	equ	0xFE2
  4068                           fsr1l	equ	0xFE1
  4069                           indf2	equ	0xFDF
  4070                           postinc2	equ	0xFDE
  4071                           postdec2	equ	0xFDD
  4072                           fsr2h	equ	0xFDA
  4073                           fsr2l	equ	0xFD9
  4074                           status	equ	0xFD8
  4075                           
  4076 ;; *************** function _memcpy *****************
  4077 ;; Defined at:
  4078 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  d1              2   56[BANK0 ] PTR void 
  4081 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4082 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  4083 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4084 ;;		 -> main@ic(38), 
  4085 ;;  s1              2   58[BANK0 ] PTR const void 
  4086 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4087 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4088 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  4089 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4090 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  4091 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  4092 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4093 ;;  n               2   60[BANK0 ] unsigned int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  4096 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  4097 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  4098 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  4099 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  4100 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  4101 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  4102 ;;		 -> main@t1thread_data(2), main@ic(38), 
  4103 ;;  d               2   62[BANK0 ] PTR unsigned char 
  4104 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  4105 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  4106 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  4107 ;;		 -> main@ic(38), 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  2   56[BANK0 ] PTR void 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4117 ;;      Params:         0       6       0       0       0
  4118 ;;      Locals:         0       4       0       0       0
  4119 ;;      Temps:          0       0       0       0       0
  4120 ;;      Totals:         0      10       0       0       0
  4121 ;;Total ram usage:       10 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   10
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_send_msg
  4128 ;;		_recv_msg
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text25
  4133  00199E                     __ptext25:
  4134                           	opt stack 0
  4135  00199E                     _memcpy:
  4136                           	opt stack 16
  4137                           
  4138                           ; BSR set to: 1
  4139                           ;incstack = 0
  4140  00199E  0100               	movlb	0	; () banked
  4141  0019A0  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4142  0019A4  0100               	movlb	0	; () banked
  4143  0019A6  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4144  0019AA  0100               	movlb	0	; () banked
  4145  0019AC  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4146  0019B0  0100               	movlb	0	; () banked
  4147  0019B2  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4148  0019B6  D010               	goto	l3480
  4149  0019B8                     l3474:
  4150                           
  4151                           ; BSR set to: 0
  4152  0019B8  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4153  0019BC  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4154  0019C0  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4155  0019C4  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4156  0019C8  CFDF FFE7          	movff	indf2,indf1
  4157                           
  4158                           ; BSR set to: 0
  4159  0019CC  0100               	movlb	0	; () banked
  4160  0019CE  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4161  0019D0  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4162                           
  4163                           ; BSR set to: 0
  4164  0019D2  0100               	movlb	0	; () banked
  4165  0019D4  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4166  0019D6  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4167  0019D8                     l3480:
  4168                           
  4169                           ; BSR set to: 0
  4170  0019D8  0100               	movlb	0	; () banked
  4171  0019DA  07BC               	decf	memcpy@n& (0+255),f,b
  4172  0019DC  A0D8               	btfss	status,0,c
  4173  0019DE  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4174  0019E0  0100               	movlb	0	; () banked
  4175  0019E2  29BC               	incf	memcpy@n& (0+255),w,b
  4176  0019E4  B4D8               	btfsc	status,2,c
  4177  0019E6  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4178  0019E8  B4D8               	btfsc	status,2,c
  4179                           
  4180                           ; BSR set to: 0
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;	Return value of _memcpy is never used
  4184  0019EA  0012               	return	
  4185  0019EC  D7E5               	goto	l3474
  4186  0019EE                     __end_of_memcpy:
  4187                           	opt stack 0
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           prodh	equ	0xFF4
  4193                           prodl	equ	0xFF3
  4194                           intcon	equ	0xFF2
  4195                           postinc0	equ	0xFEE
  4196                           wreg	equ	0xFE8
  4197                           indf1	equ	0xFE7
  4198                           fsr1h	equ	0xFE2
  4199                           fsr1l	equ	0xFE1
  4200                           indf2	equ	0xFDF
  4201                           postinc2	equ	0xFDE
  4202                           postdec2	equ	0xFDD
  4203                           fsr2h	equ	0xFDA
  4204                           fsr2l	equ	0xFD9
  4205                           status	equ	0xFD8
  4206                           
  4207 ;; *************** function ___awmod *****************
  4208 ;; Defined at:
  4209 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  dividend        2   56[BANK0 ] int 
  4212 ;;  divisor         2   58[BANK0 ] int 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  sign            1   61[BANK0 ] unsigned char 
  4215 ;;  counter         1   60[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2   56[BANK0 ] int 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0, prodl
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4225 ;;      Params:         0       4       0       0       0
  4226 ;;      Locals:         0       2       0       0       0
  4227 ;;      Temps:          0       0       0       0       0
  4228 ;;      Totals:         0       6       0       0       0
  4229 ;;Total ram usage:        6 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:   10
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_send_msg
  4236 ;;		_recv_msg
  4237 ;;		i1_send_msg
  4238 ;;		i2_send_msg
  4239 ;;		i1_recv_msg
  4240 ;;		i2_recv_msg
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text26
  4245  0012BE                     __ptext26:
  4246                           	opt stack 0
  4247  0012BE                     ___awmod:
  4248                           	opt stack 16
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;incstack = 0
  4252  0012BE  0E00               	movlw	0
  4253  0012C0  0100               	movlb	0	; () banked
  4254  0012C2  6FBD               	movwf	___awmod@sign& (0+255),b
  4255                           
  4256                           ; BSR set to: 0
  4257  0012C4  0100               	movlb	0	; () banked
  4258  0012C6  51B9               	movf	(___awmod@dividend+1)& (0+255),w,b
  4259  0012C8  0A80               	xorlw	128
  4260  0012CA  6EF3               	movwf	prodl,c
  4261  0012CC  0E80               	movlw	128
  4262  0012CE  5CF3               	subwf	prodl,w,c
  4263  0012D0  0E00               	movlw	0
  4264  0012D2  B4D8               	btfsc	status,2,c
  4265  0012D4  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4266  0012D6  B0D8               	btfsc	status,0,c
  4267  0012D8  D009               	goto	l3490
  4268                           
  4269                           ; BSR set to: 0
  4270  0012DA  0100               	movlb	0	; () banked
  4271  0012DC  6DB8               	negf	___awmod@dividend& (0+255),b
  4272  0012DE  0100               	movlb	0	; () banked
  4273  0012E0  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4274  0012E2  B0D8               	btfsc	status,0,c
  4275  0012E4  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4276                           
  4277                           ; BSR set to: 0
  4278  0012E6  0E01               	movlw	1
  4279  0012E8  0100               	movlb	0	; () banked
  4280  0012EA  6FBD               	movwf	___awmod@sign& (0+255),b
  4281  0012EC                     l3490:
  4282                           
  4283                           ; BSR set to: 0
  4284  0012EC  0100               	movlb	0	; () banked
  4285  0012EE  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4286  0012F0  0A80               	xorlw	128
  4287  0012F2  6EF3               	movwf	prodl,c
  4288  0012F4  0E80               	movlw	128
  4289  0012F6  5CF3               	subwf	prodl,w,c
  4290  0012F8  0E00               	movlw	0
  4291  0012FA  B4D8               	btfsc	status,2,c
  4292  0012FC  5DBA               	subwf	___awmod@divisor& (0+255),w,b
  4293  0012FE  B0D8               	btfsc	status,0,c
  4294  001300  D006               	goto	l3494
  4295                           
  4296                           ; BSR set to: 0
  4297  001302  0100               	movlb	0	; () banked
  4298  001304  6DBA               	negf	___awmod@divisor& (0+255),b
  4299  001306  0100               	movlb	0	; () banked
  4300  001308  1FBB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4301  00130A  B0D8               	btfsc	status,0,c
  4302  00130C  2BBB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4303  00130E                     l3494:
  4304                           
  4305                           ; BSR set to: 0
  4306  00130E  0100               	movlb	0	; () banked
  4307  001310  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4308  001312  11BA               	iorwf	___awmod@divisor& (0+255),w,b
  4309  001314  B4D8               	btfsc	status,2,c
  4310  001316  D026               	goto	l3510
  4311                           
  4312                           ; BSR set to: 0
  4313  001318  0E01               	movlw	1
  4314  00131A  0100               	movlb	0	; () banked
  4315  00131C  6FBC               	movwf	___awmod@counter& (0+255),b
  4316  00131E  D006               	goto	l3500
  4317  001320                     l3498:
  4318                           
  4319                           ; BSR set to: 0
  4320  001320  0100               	movlb	0	; () banked
  4321  001322  90D8               	bcf	status,0,c
  4322  001324  37BA               	rlcf	___awmod@divisor& (0+255),f,b
  4323  001326  37BB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4324  001328  0100               	movlb	0	; () banked
  4325  00132A  2BBC               	incf	___awmod@counter& (0+255),f,b
  4326  00132C                     l3500:
  4327                           
  4328                           ; BSR set to: 0
  4329  00132C  0100               	movlb	0	; () banked
  4330  00132E  AFBB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4331  001330  D7F7               	goto	l3498
  4332  001332                     l3502:
  4333                           
  4334                           ; BSR set to: 0
  4335  001332  0100               	movlb	0	; () banked
  4336  001334  51BA               	movf	___awmod@divisor& (0+255),w,b
  4337  001336  0100               	movlb	0	; () banked
  4338  001338  5DB8               	subwf	___awmod@dividend& (0+255),w,b
  4339  00133A  0100               	movlb	0	; () banked
  4340  00133C  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4341  00133E  0100               	movlb	0	; () banked
  4342  001340  59B9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4343  001342  A0D8               	btfss	status,0,c
  4344  001344  D008               	goto	l3506
  4345                           
  4346                           ; BSR set to: 0
  4347  001346  0100               	movlb	0	; () banked
  4348  001348  51BA               	movf	___awmod@divisor& (0+255),w,b
  4349  00134A  0100               	movlb	0	; () banked
  4350  00134C  5FB8               	subwf	___awmod@dividend& (0+255),f,b
  4351  00134E  0100               	movlb	0	; () banked
  4352  001350  51BB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4353  001352  0100               	movlb	0	; () banked
  4354  001354  5BB9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4355  001356                     l3506:
  4356                           
  4357                           ; BSR set to: 0
  4358  001356  0100               	movlb	0	; () banked
  4359  001358  90D8               	bcf	status,0,c
  4360  00135A  33BB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4361  00135C  33BA               	rrcf	___awmod@divisor& (0+255),f,b
  4362                           
  4363                           ; BSR set to: 0
  4364  00135E  0100               	movlb	0	; () banked
  4365  001360  2FBC               	decfsz	___awmod@counter& (0+255),f,b
  4366  001362  D7E7               	goto	l3502
  4367  001364                     l3510:
  4368                           
  4369                           ; BSR set to: 0
  4370  001364  0100               	movlb	0	; () banked
  4371  001366  51BD               	movf	___awmod@sign& (0+255),w,b
  4372  001368  B4D8               	btfsc	status,2,c
  4373  00136A  D006               	goto	l3514
  4374                           
  4375                           ; BSR set to: 0
  4376  00136C  0100               	movlb	0	; () banked
  4377  00136E  6DB8               	negf	___awmod@dividend& (0+255),b
  4378  001370  0100               	movlb	0	; () banked
  4379  001372  1FB9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4380  001374  B0D8               	btfsc	status,0,c
  4381  001376  2BB9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4382  001378                     l3514:
  4383                           
  4384                           ; BSR set to: 0
  4385  001378  C0B8  F0B8         	movff	___awmod@dividend,?___awmod
  4386  00137C  C0B9  F0B9         	movff	___awmod@dividend+1,?___awmod+1
  4387  001380  0012               	return	
  4388  001382                     __end_of___awmod:
  4389                           	opt stack 0
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           postinc0	equ	0xFEE
  4398                           wreg	equ	0xFE8
  4399                           indf1	equ	0xFE7
  4400                           fsr1h	equ	0xFE2
  4401                           fsr1l	equ	0xFE1
  4402                           indf2	equ	0xFDF
  4403                           postinc2	equ	0xFDE
  4404                           postdec2	equ	0xFDD
  4405                           fsr2h	equ	0xFDA
  4406                           fsr2l	equ	0xFD9
  4407                           status	equ	0xFD8
  4408                           
  4409 ;; *************** function _OpenTimer1 *****************
  4410 ;; Defined at:
  4411 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  config          1    wreg     unsigned char 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  config          1   56[BANK0 ] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;		None               void
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4425 ;;      Params:         0       0       0       0       0
  4426 ;;      Locals:         0       1       0       0       0
  4427 ;;      Temps:          0       0       0       0       0
  4428 ;;      Totals:         0       1       0       0       0
  4429 ;;Total ram usage:        1 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:   10
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text27
  4440  001B90                     __ptext27:
  4441                           	opt stack 0
  4442  001B90                     _OpenTimer1:
  4443                           	opt stack 19
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;incstack = 0
  4447                           ;OpenTimer1@config stored from wreg
  4448  001B90  0100               	movlb	0	; () banked
  4449  001B92  6FB8               	movwf	OpenTimer1@config& (0+255),b
  4450                           
  4451                           ; BSR set to: 0
  4452  001B94  0100               	movlb	0	; () banked
  4453  001B96  51B8               	movf	OpenTimer1@config& (0+255),w,b
  4454  001B98  0B7E               	andlw	126
  4455  001B9A  6ECD               	movwf	4045,c	;volatile
  4456                           
  4457                           ; BSR set to: 0
  4458  001B9C  0100               	movlb	0	; () banked
  4459  001B9E  ADB8               	btfss	OpenTimer1@config& (0+255),6,b
  4460  001BA0  D002               	goto	l567
  4461                           
  4462                           ; BSR set to: 0
  4463  001BA2  8ECD               	bsf	4045,7,c	;volatile
  4464  001BA4  D001               	goto	l3186
  4465  001BA6                     l567:
  4466                           
  4467                           ; BSR set to: 0
  4468  001BA6  9ECD               	bcf	4045,7,c	;volatile
  4469  001BA8                     l3186:
  4470                           
  4471                           ; BSR set to: 0
  4472  001BA8  0E00               	movlw	0
  4473  001BAA  6ECF               	movwf	4047,c	;volatile
  4474  001BAC  0E00               	movlw	0
  4475  001BAE  6ECE               	movwf	4046,c	;volatile
  4476                           
  4477                           ; BSR set to: 0
  4478  001BB0  909E               	bcf	3998,0,c	;volatile
  4479                           
  4480                           ; BSR set to: 0
  4481  001BB2  0100               	movlb	0	; () banked
  4482  001BB4  AFB8               	btfss	OpenTimer1@config& (0+255),7,b
  4483  001BB6  D002               	goto	l569
  4484                           
  4485                           ; BSR set to: 0
  4486  001BB8  809D               	bsf	3997,0,c	;volatile
  4487  001BBA  D001               	goto	l570
  4488  001BBC                     l569:
  4489                           
  4490                           ; BSR set to: 0
  4491  001BBC  909D               	bcf	3997,0,c	;volatile
  4492  001BBE                     l570:
  4493                           
  4494                           ; BSR set to: 0
  4495  001BBE  80CD               	bsf	4045,0,c	;volatile
  4496                           
  4497                           ; BSR set to: 0
  4498  001BC0  0012               	return	
  4499  001BC2                     __end_of_OpenTimer1:
  4500                           	opt stack 0
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           prodh	equ	0xFF4
  4506                           prodl	equ	0xFF3
  4507                           intcon	equ	0xFF2
  4508                           postinc0	equ	0xFEE
  4509                           wreg	equ	0xFE8
  4510                           indf1	equ	0xFE7
  4511                           fsr1h	equ	0xFE2
  4512                           fsr1l	equ	0xFE1
  4513                           indf2	equ	0xFDF
  4514                           postinc2	equ	0xFDE
  4515                           postdec2	equ	0xFDD
  4516                           fsr2h	equ	0xFDA
  4517                           fsr2l	equ	0xFD9
  4518                           status	equ	0xFD8
  4519                           
  4520 ;; *************** function _OpenTimer0 *****************
  4521 ;; Defined at:
  4522 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  config          1    wreg     unsigned char 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  config          1   56[BANK0 ] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;		None               void
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4536 ;;      Params:         0       0       0       0       0
  4537 ;;      Locals:         0       1       0       0       0
  4538 ;;      Temps:          0       0       0       0       0
  4539 ;;      Totals:         0       1       0       0       0
  4540 ;;Total ram usage:        1 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; Hardware stack levels required when called:   10
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		_main
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text28
  4551  001CFA                     __ptext28:
  4552                           	opt stack 0
  4553  001CFA                     _OpenTimer0:
  4554                           	opt stack 19
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;incstack = 0
  4558                           ;OpenTimer0@config stored from wreg
  4559  001CFA  0100               	movlb	0	; () banked
  4560  001CFC  6FB8               	movwf	OpenTimer0@config& (0+255),b
  4561                           
  4562                           ; BSR set to: 0
  4563  001CFE  0100               	movlb	0	; () banked
  4564  001D00  51B8               	movf	OpenTimer0@config& (0+255),w,b
  4565  001D02  0B7F               	andlw	127
  4566  001D04  6ED5               	movwf	4053,c	;volatile
  4567                           
  4568                           ; BSR set to: 0
  4569  001D06  0E00               	movlw	0
  4570  001D08  6ED7               	movwf	4055,c	;volatile
  4571                           
  4572                           ; BSR set to: 0
  4573  001D0A  0E00               	movlw	0
  4574  001D0C  6ED6               	movwf	4054,c	;volatile
  4575                           
  4576                           ; BSR set to: 0
  4577  001D0E  94F2               	bcf	intcon,2,c	;volatile
  4578                           
  4579                           ; BSR set to: 0
  4580  001D10  0100               	movlb	0	; () banked
  4581  001D12  AFB8               	btfss	OpenTimer0@config& (0+255),7,b
  4582  001D14  D002               	goto	l543
  4583                           
  4584                           ; BSR set to: 0
  4585  001D16  8AF2               	bsf	intcon,5,c	;volatile
  4586  001D18  D001               	goto	l544
  4587  001D1A                     l543:
  4588                           
  4589                           ; BSR set to: 0
  4590  001D1A  9AF2               	bcf	intcon,5,c	;volatile
  4591  001D1C                     l544:
  4592                           
  4593                           ; BSR set to: 0
  4594  001D1C  8ED5               	bsf	4053,7,c	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597  001D1E  0012               	return	
  4598  001D20                     __end_of_OpenTimer0:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           prodh	equ	0xFF4
  4605                           prodl	equ	0xFF3
  4606                           intcon	equ	0xFF2
  4607                           postinc0	equ	0xFEE
  4608                           wreg	equ	0xFE8
  4609                           indf1	equ	0xFE7
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           indf2	equ	0xFDF
  4613                           postinc2	equ	0xFDE
  4614                           postdec2	equ	0xFDD
  4615                           fsr2h	equ	0xFDA
  4616                           fsr2l	equ	0xFD9
  4617                           status	equ	0xFD8
  4618                           
  4619 ;; *************** function _InterruptHandlerLow *****************
  4620 ;; Defined at:
  4621 ;;		line 131 in file "../src/interrupts.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;		None               void
  4628 ;; Registers used:
  4629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4635 ;;      Params:         0       0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0
  4637 ;;      Temps:         17       0       0       0       0
  4638 ;;      Totals:        17       0       0       0       0
  4639 ;;Total ram usage:       17 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    9
  4642 ;; This function calls:
  4643 ;;		_timer1_int_handler
  4644 ;;		_uart_receive_interrupt_handler
  4645 ;;		_uart_transmit_interrupt_handler
  4646 ;; This function is called by:
  4647 ;;		Interrupt level 1
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	intcodelo
  4652  000018                     __pintcodelo:
  4653                           	opt stack 0
  4654  000018                     _InterruptHandlerLow:
  4655                           	opt stack 15
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;incstack = 0
  4659  000018  CFD8 F037          	movff	status,??_InterruptHandlerLow
  4660  00001C  CFE8 F038          	movff	wreg,??_InterruptHandlerLow+1
  4661  000020  CFE0 F039          	movff	bsr,??_InterruptHandlerLow+2
  4662  000024  CFFA F03A          	movff	pclath,??_InterruptHandlerLow+3
  4663  000028  CFFB F03B          	movff	pclatu,??_InterruptHandlerLow+4
  4664  00002C  CFE9 F03C          	movff	fsr0l,??_InterruptHandlerLow+5
  4665  000030  CFEA F03D          	movff	fsr0h,??_InterruptHandlerLow+6
  4666  000034  CFE1 F03E          	movff	fsr1l,??_InterruptHandlerLow+7
  4667  000038  CFE2 F03F          	movff	fsr1h,??_InterruptHandlerLow+8
  4668  00003C  CFD9 F040          	movff	fsr2l,??_InterruptHandlerLow+9
  4669  000040  CFDA F041          	movff	fsr2h,??_InterruptHandlerLow+10
  4670  000044  CFF3 F042          	movff	prodl,??_InterruptHandlerLow+11
  4671  000048  CFF4 F043          	movff	prodh,??_InterruptHandlerLow+12
  4672  00004C  CFF6 F044          	movff	tblptrl,??_InterruptHandlerLow+13
  4673  000050  CFF7 F045          	movff	tblptrh,??_InterruptHandlerLow+14
  4674  000054  CFF8 F046          	movff	tblptru,??_InterruptHandlerLow+15
  4675  000058  CFF5 F047          	movff	tablat,??_InterruptHandlerLow+16
  4676                           
  4677                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  4678  00005C  A09E               	btfss	3998,0,c	;volatile
  4679  00005E  D003               	goto	i1l4106
  4680                           
  4681                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  4682  000060  909E               	bcf	3998,0,c	;volatile
  4683                           
  4684                           ;interrupts.c: 139: timer1_int_handler();
  4685  000062  EC3F  F00E         	call	_timer1_int_handler	;wreg free
  4686  000066                     i1l4106:
  4687                           
  4688                           ;interrupts.c: 140: }
  4689                           ;interrupts.c: 143: if (PIR1bits.RCIF) {
  4690  000066  AA9E               	btfss	3998,5,c	;volatile
  4691  000068  D003               	goto	i1l4112
  4692                           
  4693                           ;interrupts.c: 144: PIR1bits.RCIF = 0;
  4694  00006A  9A9E               	bcf	3998,5,c	;volatile
  4695                           
  4696                           ;interrupts.c: 148: uart_receive_interrupt_handler();
  4697  00006C  ECF1  F004         	call	_uart_receive_interrupt_handler	;wreg free
  4698  000070                     i1l4112:
  4699                           
  4700                           ;interrupts.c: 149: }
  4701                           ;interrupts.c: 153: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  4702  000070  B89E               	btfsc	3998,4,c	;volatile
  4703  000072  A89D               	btfss	3997,4,c	;volatile
  4704  000074  D002               	goto	i1l52
  4705                           
  4706                           ;interrupts.c: 154: {
  4707                           ;interrupts.c: 158: uart_transmit_interrupt_handler();
  4708  000076  ECCB  F00A         	call	_uart_transmit_interrupt_handler	;wreg free
  4709  00007A                     i1l52:
  4710  00007A  C047  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4711  00007E  C046  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4712  000082  C045  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4713  000086  C044  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4714  00008A  C043  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4715  00008E  C042  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4716  000092  C041  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4717  000096  C040  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4718  00009A  C03F  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4719  00009E  C03E  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4720  0000A2  C03D  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4721  0000A6  C03C  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4722  0000AA  C03B  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4723  0000AE  C03A  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4724  0000B2  C039  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4725  0000B6  C038  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4726  0000BA  C037  FFD8         	movff	??_InterruptHandlerLow,status
  4727  0000BE  0010               	retfie	
  4728  0000C0                     __end_of_InterruptHandlerLow:
  4729                           	opt stack 0
  4730                           pclatu	equ	0xFFB
  4731                           pclath	equ	0xFFA
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           prodh	equ	0xFF4
  4737                           prodl	equ	0xFF3
  4738                           intcon	equ	0xFF2
  4739                           postinc0	equ	0xFEE
  4740                           fsr0h	equ	0xFEA
  4741                           fsr0l	equ	0xFE9
  4742                           wreg	equ	0xFE8
  4743                           indf1	equ	0xFE7
  4744                           fsr1h	equ	0xFE2
  4745                           fsr1l	equ	0xFE1
  4746                           bsr	equ	0xFE0
  4747                           indf2	equ	0xFDF
  4748                           postinc2	equ	0xFDE
  4749                           postdec2	equ	0xFDD
  4750                           fsr2h	equ	0xFDA
  4751                           fsr2l	equ	0xFD9
  4752                           status	equ	0xFD8
  4753                           
  4754 ;; *************** function _uart_transmit_interrupt_handler *****************
  4755 ;; Defined at:
  4756 ;;		line 200 in file "../src/my_uart.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  message_stat    1   32[COMRAM] char 
  4761 ;;  data            2   29[COMRAM] unsigned char [2]
  4762 ;;  msgtype         1   31[COMRAM] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;		None               void
  4765 ;; Registers used:
  4766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4772 ;;      Params:         0       0       0       0       0
  4773 ;;      Locals:         4       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0
  4775 ;;      Totals:         4       0       0       0       0
  4776 ;;Total ram usage:        4 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    8
  4779 ;; This function calls:
  4780 ;;		_FromMainLow_recvmsg
  4781 ;;		i1_blip
  4782 ;; This function is called by:
  4783 ;;		_InterruptHandlerLow
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text30
  4788  001596                     __ptext30:
  4789                           	opt stack 0
  4790  001596                     _uart_transmit_interrupt_handler:
  4791                           	opt stack 15
  4792                           
  4793                           ;my_uart.c: 202: blip();
  4794                           
  4795                           ;incstack = 0
  4796  001596  EC0E  F00F         	call	i1_blip	;wreg free
  4797                           
  4798                           ;my_uart.c: 204: static unsigned char done = 1;
  4799                           ;my_uart.c: 205: static unsigned char index = 0;
  4800                           ;my_uart.c: 207: unsigned char data[2];
  4801                           ;my_uart.c: 210: unsigned char msgtype = 31;
  4802  00159A  0E1F               	movlw	31
  4803  00159C  6E20               	movwf	uart_transmit_interrupt_handler@msgtype,c
  4804                           
  4805                           ;my_uart.c: 212: if( done )
  4806  00159E  5063               	movf	uart_transmit_interrupt_handler@done,w,c
  4807  0015A0  B4D8               	btfsc	status,2,c
  4808  0015A2  D02C               	goto	i1l4056
  4809                           
  4810                           ;my_uart.c: 213: {
  4811                           ;my_uart.c: 214: signed char message_status = FromMainLow_recvmsg(2,&msgtype, (void*)dat
      +                          a );
  4812  0015A4  0E00               	movlw	high uart_transmit_interrupt_handler@msgtype
  4813  0015A6  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4814  0015A8  0E20               	movlw	low uart_transmit_interrupt_handler@msgtype
  4815  0015AA  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4816  0015AC  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4817  0015AE  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4818  0015B0  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4819  0015B2  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4820  0015B4  0E02               	movlw	2
  4821  0015B6  EC69  F00E         	call	_FromMainLow_recvmsg
  4822  0015BA  6E21               	movwf	uart_transmit_interrupt_handler@message_status,c
  4823                           
  4824                           ;my_uart.c: 216: if( message_status == -4)
  4825  0015BC  5021               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4826  0015BE  0AFC               	xorlw	252
  4827  0015C0  A4D8               	btfss	status,2,c
  4828  0015C2  D002               	goto	i1l4032
  4829                           
  4830                           ;my_uart.c: 217: {
  4831                           ;my_uart.c: 219: PIE1bits.TX1IE = 0;
  4832  0015C4  989D               	bcf	3997,4,c	;volatile
  4833                           
  4834                           ;my_uart.c: 220: }
  4835  0015C6  0012               	return	
  4836  0015C8                     i1l4032:
  4837                           
  4838                           ;my_uart.c: 221: else if( message_status > 0 )
  4839  0015C8  5021               	movf	uart_transmit_interrupt_handler@message_status,w,c
  4840  0015CA  0A80               	xorlw	128
  4841  0015CC  0F7F               	addlw	-129
  4842  0015CE  A0D8               	btfss	status,0,c
  4843  0015D0  0012               	return	
  4844                           
  4845                           ;my_uart.c: 222: {
  4846                           ;my_uart.c: 224: index = 0;
  4847  0015D2  0E00               	movlw	0
  4848  0015D4  6E62               	movwf	uart_transmit_interrupt_handler@index,c
  4849                           
  4850                           ;my_uart.c: 225: done = 0;
  4851  0015D6  0E00               	movlw	0
  4852  0015D8  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4853                           
  4854                           ;my_uart.c: 227: TXREG1 = data[index];
  4855  0015DA  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4856  0015DC  0D01               	mullw	1
  4857  0015DE  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4858  0015E0  24F3               	addwf	prodl,w,c
  4859  0015E2  6ED9               	movwf	fsr2l,c
  4860  0015E4  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4861  0015E6  20F4               	addwfc	prodh,w,c
  4862  0015E8  6EDA               	movwf	fsr2h,c
  4863  0015EA  50DF               	movf	indf2,w,c
  4864  0015EC  6EAD               	movwf	4013,c	;volatile
  4865                           
  4866                           ;my_uart.c: 228: index++;
  4867  0015EE  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4868                           
  4869                           ;my_uart.c: 229: if( index >= 2 )
  4870  0015F0  0E01               	movlw	1
  4871  0015F2  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4872  0015F4  0012               	return	
  4873                           
  4874                           ;my_uart.c: 230: {
  4875                           ;my_uart.c: 231: done = 1;
  4876  0015F6  0E01               	movlw	1
  4877  0015F8  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4878  0015FA  0012               	return	
  4879  0015FC                     i1l4056:
  4880                           
  4881                           ;my_uart.c: 248: else
  4882                           ;my_uart.c: 249: {
  4883                           ;my_uart.c: 251: TXREG1 = data[index];
  4884  0015FC  5062               	movf	uart_transmit_interrupt_handler@index,w,c
  4885  0015FE  0D01               	mullw	1
  4886  001600  0E1E               	movlw	low uart_transmit_interrupt_handler@data
  4887  001602  24F3               	addwf	prodl,w,c
  4888  001604  6ED9               	movwf	fsr2l,c
  4889  001606  0E00               	movlw	high uart_transmit_interrupt_handler@data
  4890  001608  20F4               	addwfc	prodh,w,c
  4891  00160A  6EDA               	movwf	fsr2h,c
  4892  00160C  50DF               	movf	indf2,w,c
  4893  00160E  6EAD               	movwf	4013,c	;volatile
  4894                           
  4895                           ;my_uart.c: 252: index++;
  4896  001610  2A62               	incf	uart_transmit_interrupt_handler@index,f,c
  4897                           
  4898                           ;my_uart.c: 253: if( index >= 2 )
  4899  001612  0E01               	movlw	1
  4900  001614  6462               	cpfsgt	uart_transmit_interrupt_handler@index,c
  4901  001616  0012               	return	
  4902                           
  4903                           ;my_uart.c: 254: {
  4904                           ;my_uart.c: 255: done = 1;
  4905  001618  0E01               	movlw	1
  4906  00161A  6E63               	movwf	uart_transmit_interrupt_handler@done,c
  4907  00161C  0012               	return	
  4908  00161E                     __end_of_uart_transmit_interrupt_handler:
  4909                           	opt stack 0
  4910                           pclatu	equ	0xFFB
  4911                           pclath	equ	0xFFA
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           postinc0	equ	0xFEE
  4920                           fsr0h	equ	0xFEA
  4921                           fsr0l	equ	0xFE9
  4922                           wreg	equ	0xFE8
  4923                           indf1	equ	0xFE7
  4924                           fsr1h	equ	0xFE2
  4925                           fsr1l	equ	0xFE1
  4926                           bsr	equ	0xFE0
  4927                           indf2	equ	0xFDF
  4928                           postinc2	equ	0xFDE
  4929                           postdec2	equ	0xFDD
  4930                           fsr2h	equ	0xFDA
  4931                           fsr2l	equ	0xFD9
  4932                           status	equ	0xFD8
  4933                           
  4934 ;; *************** function i1_blip *****************
  4935 ;; Defined at:
  4936 ;;		line 11 in file "../src/debug.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;		None               void
  4943 ;; Registers used:
  4944 ;;		None
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4950 ;;      Params:         0       0       0       0       0
  4951 ;;      Locals:         0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0
  4953 ;;      Totals:         0       0       0       0       0
  4954 ;;Total ram usage:        0 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    5
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_uart_transmit_interrupt_handler
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text31
  4965  001E1C                     __ptext31:
  4966                           	opt stack 0
  4967  001E1C                     i1_blip:
  4968                           	opt stack 17
  4969                           
  4970                           ;debug.c: 13: LATDbits.LD2 = 0;
  4971                           
  4972                           ;incstack = 0
  4973  001E1C  948C               	bcf	3980,2,c	;volatile
  4974                           
  4975                           ;debug.c: 14: LATDbits.LD2 = 1;
  4976  001E1E  848C               	bsf	3980,2,c	;volatile
  4977                           
  4978                           ;debug.c: 15: LATDbits.LD2 = 0;
  4979  001E20  948C               	bcf	3980,2,c	;volatile
  4980  001E22  0012               	return	
  4981  001E24                     __end_ofi1_blip:
  4982                           	opt stack 0
  4983                           pclatu	equ	0xFFB
  4984                           pclath	equ	0xFFA
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           intcon	equ	0xFF2
  4992                           postinc0	equ	0xFEE
  4993                           fsr0h	equ	0xFEA
  4994                           fsr0l	equ	0xFE9
  4995                           wreg	equ	0xFE8
  4996                           indf1	equ	0xFE7
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           bsr	equ	0xFE0
  5000                           indf2	equ	0xFDF
  5001                           postinc2	equ	0xFDE
  5002                           postdec2	equ	0xFDD
  5003                           fsr2h	equ	0xFDA
  5004                           fsr2l	equ	0xFD9
  5005                           status	equ	0xFD8
  5006                           
  5007 ;; *************** function _FromMainLow_recvmsg *****************
  5008 ;; Defined at:
  5009 ;;		line 159 in file "../src/messages.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  maxlength       1    wreg     unsigned char 
  5012 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5013 ;;		 -> uart_transmit_interrupt_handler@msgtype(1), 
  5014 ;;  data            2   26[COMRAM] PTR void 
  5015 ;;		 -> uart_transmit_interrupt_handler@data(2), 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  maxlength       1   28[COMRAM] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      char 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5027 ;;      Params:         4       0       0       0       0
  5028 ;;      Locals:         1       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0
  5030 ;;      Totals:         5       0       0       0       0
  5031 ;;Total ram usage:        5 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    7
  5034 ;; This function calls:
  5035 ;;		i1_recv_msg
  5036 ;; This function is called by:
  5037 ;;		_uart_transmit_interrupt_handler
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text32
  5042  001CD2                     __ptext32:
  5043                           	opt stack 0
  5044  001CD2                     _FromMainLow_recvmsg:
  5045                           	opt stack 15
  5046                           
  5047                           ;incstack = 0
  5048                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5049  001CD2  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5050                           
  5051                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5052  001CD4  0102               	movlb	2	; () banked
  5053  001CD6  0E02               	movlw	high _FromMainLow_MQ
  5054  001CD8  6E0C               	movwf	i1recv_msg@qptr+1,c
  5055  001CDA  0102               	movlb	2	; () banked
  5056  001CDC  0E00               	movlw	low _FromMainLow_MQ
  5057  001CDE  6E0B               	movwf	i1recv_msg@qptr,c
  5058  001CE0  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5059  001CE4  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5060  001CE8  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5061  001CEC  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5062  001CF0  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5063  001CF4  EC86  F008         	call	i1_recv_msg	;wreg free
  5064  001CF8  0012               	return	
  5065  001CFA                     __end_of_FromMainLow_recvmsg:
  5066                           	opt stack 0
  5067                           pclatu	equ	0xFFB
  5068                           pclath	equ	0xFFA
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           prodh	equ	0xFF4
  5074                           prodl	equ	0xFF3
  5075                           intcon	equ	0xFF2
  5076                           postinc0	equ	0xFEE
  5077                           fsr0h	equ	0xFEA
  5078                           fsr0l	equ	0xFE9
  5079                           wreg	equ	0xFE8
  5080                           indf1	equ	0xFE7
  5081                           fsr1h	equ	0xFE2
  5082                           fsr1l	equ	0xFE1
  5083                           bsr	equ	0xFE0
  5084                           indf2	equ	0xFDF
  5085                           postinc2	equ	0xFDE
  5086                           postdec2	equ	0xFDD
  5087                           fsr2h	equ	0xFDA
  5088                           fsr2l	equ	0xFD9
  5089                           status	equ	0xFD8
  5090                           
  5091 ;; *************** function i1_recv_msg *****************
  5092 ;; Defined at:
  5093 ;;		line 63 in file "../src/messages.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5096 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5097 ;;  maxlength       1   12[COMRAM] unsigned char 
  5098 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5099 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  5100 ;;		 -> main@msgtype(1), 
  5101 ;;  data            2   15[COMRAM] PTR void 
  5102 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  5103 ;;		 -> main@ic(38), 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5106 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5107 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5108 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5109 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      char 
  5112 ;; Registers used:
  5113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5119 ;;      Params:         7       0       0       0       0
  5120 ;;      Locals:         5       0       0       0       0
  5121 ;;      Temps:          2       0       0       0       0
  5122 ;;      Totals:        14       0       0       0       0
  5123 ;;Total ram usage:       14 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    6
  5126 ;; This function calls:
  5127 ;;		i1___awmod
  5128 ;;		i1_memcpy
  5129 ;; This function is called by:
  5130 ;;		_FromMainLow_recvmsg
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text33
  5135  00110C                     __ptext33:
  5136                           	opt stack 0
  5137  00110C                     i1_recv_msg:
  5138                           	opt stack 15
  5139                           
  5140                           ;messages.c: 64: unsigned char slot;
  5141                           ;messages.c: 68: msg *qmsg;
  5142                           ;messages.c: 69: size_t tlength;
  5143                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5144                           
  5145                           ;incstack = 0
  5146  00110C  EE20 F056          	lfsr	2,86
  5147  001110  500B               	movf	i1recv_msg@qptr,w,c
  5148  001112  26D9               	addwf	fsr2l,f,c
  5149  001114  500C               	movf	i1recv_msg@qptr+1,w,c
  5150  001116  22DA               	addwfc	fsr2h,f,c
  5151  001118  50DF               	movf	indf2,w,c
  5152  00111A  6E14               	movwf	i1recv_msg@slot,c
  5153                           
  5154                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5155  00111C  5014               	movf	i1recv_msg@slot,w,c
  5156  00111E  0D11               	mullw	17
  5157  001120  50F3               	movf	prodl,w,c
  5158  001122  240B               	addwf	i1recv_msg@qptr,w,c
  5159  001124  6E17               	movwf	i1recv_msg@qmsg,c
  5160  001126  50F4               	movf	prodh,w,c
  5161  001128  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5162  00112A  6E18               	movwf	i1recv_msg@qmsg+1,c
  5163                           
  5164                           ;messages.c: 74: if (qmsg->full == 1) {
  5165  00112C  0E01               	movlw	1
  5166  00112E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5167  001132  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5168  001136  62DF               	cpfseq	indf2,c
  5169  001138  D05B               	goto	i1l3622
  5170                           
  5171                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5172  00113A  EE20 F001          	lfsr	2,1
  5173  00113E  5017               	movf	i1recv_msg@qmsg,w,c
  5174  001140  26D9               	addwf	fsr2l,f,c
  5175  001142  5018               	movf	i1recv_msg@qmsg+1,w,c
  5176  001144  22DA               	addwfc	fsr2h,f,c
  5177  001146  50DF               	movf	indf2,w,c
  5178  001148  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5179  00114A  B0D8               	btfsc	status,0,c
  5180  00114C  D002               	goto	i1l3606
  5181                           
  5182                           ;messages.c: 77: return (-3);
  5183  00114E  0EFD               	movlw	253
  5184  001150  0012               	return	
  5185  001152                     i1l3606:
  5186                           
  5187                           ;messages.c: 78: }
  5188                           ;messages.c: 80: tlength = qmsg->length;
  5189  001152  EE20 F001          	lfsr	2,1
  5190  001156  5017               	movf	i1recv_msg@qmsg,w,c
  5191  001158  26D9               	addwf	fsr2l,f,c
  5192  00115A  5018               	movf	i1recv_msg@qmsg+1,w,c
  5193  00115C  22DA               	addwfc	fsr2h,f,c
  5194  00115E  50DF               	movf	indf2,w,c
  5195  001160  6E12               	movwf	??i1_recv_msg& (0+255),c
  5196  001162  5012               	movf	??i1_recv_msg,w,c
  5197  001164  6E15               	movwf	i1recv_msg@tlength,c
  5198  001166  6A16               	clrf	i1recv_msg@tlength+1,c
  5199                           
  5200                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5201  001168  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5202  00116C  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5203  001170  0E03               	movlw	3
  5204  001172  2417               	addwf	i1recv_msg@qmsg,w,c
  5205  001174  6E12               	movwf	??i1_recv_msg& (0+255),c
  5206  001176  0E00               	movlw	0
  5207  001178  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5208  00117A  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5209  00117C  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5210  001180  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5211  001184  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5212  001188  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5213  00118C  EC1F  F00D         	call	i1_memcpy	;wreg free
  5214                           
  5215                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  5216  001190  EE20 F056          	lfsr	2,86
  5217  001194  500B               	movf	i1recv_msg@qptr,w,c
  5218  001196  26D9               	addwf	fsr2l,f,c
  5219  001198  500C               	movf	i1recv_msg@qptr+1,w,c
  5220  00119A  22DA               	addwfc	fsr2h,f,c
  5221  00119C  EE10 F056          	lfsr	1,86
  5222  0011A0  500B               	movf	i1recv_msg@qptr,w,c
  5223  0011A2  26E1               	addwf	fsr1l,f,c
  5224  0011A4  500C               	movf	i1recv_msg@qptr+1,w,c
  5225  0011A6  22E2               	addwfc	fsr1h,f,c
  5226  0011A8  50E7               	movf	indf1,w,c
  5227  0011AA  6E12               	movwf	??i1_recv_msg& (0+255),c
  5228  0011AC  0E01               	movlw	1
  5229  0011AE  2412               	addwf	??i1_recv_msg,w,c
  5230  0011B0  6E01               	movwf	i1___awmod@dividend,c
  5231  0011B2  6A02               	clrf	i1___awmod@dividend+1,c
  5232  0011B4  0E00               	movlw	0
  5233  0011B6  2202               	addwfc	i1___awmod@dividend+1,f,c
  5234  0011B8  0E00               	movlw	0
  5235  0011BA  6E04               	movwf	i1___awmod@divisor+1,c
  5236  0011BC  0E05               	movlw	5
  5237  0011BE  6E03               	movwf	i1___awmod@divisor,c
  5238  0011C0  EC83  F00A         	call	i1___awmod	;wreg free
  5239  0011C4  5001               	movf	?i1___awmod,w,c
  5240  0011C6  6EDF               	movwf	indf2,c
  5241                           
  5242                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5243  0011C8  EE20 F002          	lfsr	2,2
  5244  0011CC  5017               	movf	i1recv_msg@qmsg,w,c
  5245  0011CE  26D9               	addwf	fsr2l,f,c
  5246  0011D0  5018               	movf	i1recv_msg@qmsg+1,w,c
  5247  0011D2  22DA               	addwfc	fsr2h,f,c
  5248  0011D4  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5249  0011D8  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5250  0011DC  CFDF FFE7          	movff	indf2,indf1
  5251                           
  5252                           ;messages.c: 91: qmsg->full = 0;
  5253  0011E0  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5254  0011E4  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5255  0011E8  0E00               	movlw	0
  5256  0011EA  6EDF               	movwf	indf2,c
  5257                           
  5258                           ;messages.c: 92: return (tlength);
  5259  0011EC  5015               	movf	i1recv_msg@tlength,w,c
  5260  0011EE  0012               	return	
  5261  0011F0                     i1l3622:
  5262                           
  5263                           ;messages.c: 94: return (-4);
  5264  0011F0  0EFC               	movlw	252
  5265  0011F2  0012               	return	
  5266  0011F4                     __end_ofi1_recv_msg:
  5267                           	opt stack 0
  5268                           pclatu	equ	0xFFB
  5269                           pclath	equ	0xFFA
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           prodh	equ	0xFF4
  5275                           prodl	equ	0xFF3
  5276                           intcon	equ	0xFF2
  5277                           postinc0	equ	0xFEE
  5278                           fsr0h	equ	0xFEA
  5279                           fsr0l	equ	0xFE9
  5280                           wreg	equ	0xFE8
  5281                           indf1	equ	0xFE7
  5282                           fsr1h	equ	0xFE2
  5283                           fsr1l	equ	0xFE1
  5284                           bsr	equ	0xFE0
  5285                           indf2	equ	0xFDF
  5286                           postinc2	equ	0xFDE
  5287                           postdec2	equ	0xFDD
  5288                           fsr2h	equ	0xFDA
  5289                           fsr2l	equ	0xFD9
  5290                           status	equ	0xFD8
  5291                           
  5292 ;; *************** function _uart_receive_interrupt_handler *****************
  5293 ;; Defined at:
  5294 ;;		line 61 in file "../src/my_uart.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  bad_start_id    1   47[COMRAM] unsigned char 
  5299 ;;  message_coun    1   50[COMRAM] unsigned char 
  5300 ;;  status          1   42[COMRAM] unsigned char 
  5301 ;;  bad_end_id      1   48[COMRAM] unsigned char 
  5302 ;;  msg_id          1   51[COMRAM] unsigned char 
  5303 ;;  status          1   43[COMRAM] unsigned char 
  5304 ;;  bad_checksum    1   49[COMRAM] unsigned char 
  5305 ;;  bad_counter_    2   44[COMRAM] unsigned char [2]
  5306 ;;  gooey_uart_c   14   28[COMRAM] unsigned char [14]
  5307 ;;  i               2   52[COMRAM] int 
  5308 ;;  checksum        1   46[COMRAM] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;		None               void
  5311 ;; Registers used:
  5312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5318 ;;      Params:         0       0       0       0       0
  5319 ;;      Locals:        26       0       0       0       0
  5320 ;;      Temps:          2       0       0       0       0
  5321 ;;      Totals:        28       0       0       0       0
  5322 ;;Total ram usage:       28 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    8
  5325 ;; This function calls:
  5326 ;;		_ToMainLow_sendmsg
  5327 ;; This function is called by:
  5328 ;;		_InterruptHandlerLow
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text34
  5333  0009E2                     __ptext34:
  5334                           	opt stack 0
  5335  0009E2                     _uart_receive_interrupt_handler:
  5336                           	opt stack 15
  5337                           
  5338                           ;my_uart.c: 64: static unsigned char frame[(14 + 2 + 2)];
  5339                           ;my_uart.c: 65: static unsigned char index = 0;
  5340                           ;my_uart.c: 66: static unsigned char done = 0;
  5341                           ;my_uart.c: 67: static unsigned char received_counter = 0;
  5342                           ;my_uart.c: 69: static unsigned char start_byte_bad = 0;
  5343                           ;my_uart.c: 70: static unsigned char error = 0;
  5344                           ;my_uart.c: 72: if(!done)
  5345                           
  5346                           ;incstack = 0
  5347  0009E2  665D               	tstfsz	uart_receive_interrupt_handler@done,c
  5348  0009E4  D03B               	goto	i1l3962
  5349                           
  5350                           ;my_uart.c: 73: {
  5351                           ;my_uart.c: 74: frame[index] = RCREG1;
  5352  0009E6  505F               	movf	uart_receive_interrupt_handler@index,w,c
  5353  0009E8  0D01               	mullw	1
  5354  0009EA  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5355  0009EC  24F3               	addwf	prodl,w,c
  5356  0009EE  6ED9               	movwf	fsr2l,c
  5357  0009F0  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5358  0009F2  20F4               	addwfc	prodh,w,c
  5359  0009F4  6EDA               	movwf	fsr2h,c
  5360  0009F6  CFAE FFDF          	movff	4014,indf2	;volatile
  5361                           
  5362                           ;my_uart.c: 78: }
  5363                           ;my_uart.c: 79: if( index == 0 )
  5364                           
  5365                           ;my_uart.c: 76: {
  5366  0009FA  665F               	tstfsz	uart_receive_interrupt_handler@index,c
  5367  0009FC  D018               	goto	i1l3948
  5368                           
  5369                           ;my_uart.c: 80: {
  5370                           ;my_uart.c: 81: if( frame[0] != 0xff )
  5371  0009FE  2848               	incf	uart_receive_interrupt_handler@frame,w,c
  5372  000A00  B4D8               	btfsc	status,2,c
  5373  000A02  D012               	goto	i1l3946
  5374                           
  5375                           ;my_uart.c: 82: {
  5376                           ;my_uart.c: 83: if( !start_byte_bad )
  5377  000A04  6661               	tstfsz	uart_receive_interrupt_handler@start_byte_bad,c
  5378  000A06  D00D               	goto	i1l3940
  5379                           
  5380                           ;my_uart.c: 84: {
  5381                           ;my_uart.c: 85: start_byte_bad = 1;
  5382  000A08  0E01               	movlw	1
  5383  000A0A  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5384                           
  5385                           ;my_uart.c: 86: unsigned char bad_start_id = received_counter;
  5386  000A0C  C060  F030         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_start_id
  5387                           
  5388                           ;my_uart.c: 87: ToMainLow_sendmsg(1,34,(void *)&bad_start_id);
  5389  000A10  0E22               	movlw	34
  5390  000A12  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5391  000A14  0E00               	movlw	high uart_receive_interrupt_handler@bad_start_id
  5392  000A16  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5393  000A18  0E30               	movlw	low uart_receive_interrupt_handler@bad_start_id
  5394  000A1A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5395  000A1C  0E01               	movlw	1
  5396  000A1E  EC90  F00E         	call	_ToMainLow_sendmsg
  5397  000A22                     i1l3940:
  5398                           
  5399                           ;my_uart.c: 89: }
  5400                           ;my_uart.c: 90: index = 0;
  5401  000A22  0E00               	movlw	0
  5402  000A24  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5403  000A26  0012               	return	
  5404  000A28                     i1l3946:
  5405                           
  5406                           ;my_uart.c: 93: else
  5407                           ;my_uart.c: 94: {
  5408                           ;my_uart.c: 95: start_byte_bad = 0;
  5409  000A28  0E00               	movlw	0
  5410  000A2A  6E61               	movwf	uart_receive_interrupt_handler@start_byte_bad,c
  5411  000A2C  D016               	goto	i1l3960
  5412  000A2E                     i1l3948:
  5413                           
  5414                           ;my_uart.c: 98: else if( index >= (14 + 2 + 2) - 1 )
  5415  000A2E  0E10               	movlw	16
  5416  000A30  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5417  000A32  D013               	goto	i1l3960
  5418                           
  5419                           ;my_uart.c: 99: {
  5420                           ;my_uart.c: 100: if( frame[(14 + 2 + 2) - 1] != 0xfe )
  5421  000A34  5059               	movf	uart_receive_interrupt_handler@frame+17,w,c
  5422  000A36  0AFE               	xorlw	254
  5423  000A38  B4D8               	btfsc	status,2,c
  5424  000A3A  D00F               	goto	i1l3960
  5425                           
  5426                           ;my_uart.c: 101: {
  5427                           ;my_uart.c: 103: index = 0;
  5428  000A3C  0E00               	movlw	0
  5429  000A3E  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5430                           
  5431                           ;my_uart.c: 106: unsigned char bad_end_id = received_counter;
  5432  000A40  C060  F031         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_end_id
  5433                           
  5434                           ;my_uart.c: 107: ToMainLow_sendmsg(1,35,(void *)&bad_end_id);
  5435  000A44  0E23               	movlw	35
  5436  000A46  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5437  000A48  0E00               	movlw	high uart_receive_interrupt_handler@bad_end_id
  5438  000A4A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5439  000A4C  0E31               	movlw	low uart_receive_interrupt_handler@bad_end_id
  5440  000A4E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5441  000A50  0E01               	movlw	1
  5442  000A52  EC90  F00E         	call	_ToMainLow_sendmsg
  5443                           
  5444                           ;my_uart.c: 108: error = 1;
  5445  000A56  0E01               	movlw	1
  5446  000A58  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5447  000A5A                     i1l3960:
  5448                           
  5449                           ;my_uart.c: 109: }
  5450                           ;my_uart.c: 110: }
  5451                           ;my_uart.c: 111: index++;
  5452  000A5A  2A5F               	incf	uart_receive_interrupt_handler@index,f,c
  5453  000A5C                     i1l3962:
  5454                           
  5455                           ;my_uart.c: 112: }
  5456                           ;my_uart.c: 114: if( index >= (14 + 2 + 2) )
  5457  000A5C  0E11               	movlw	17
  5458  000A5E  645F               	cpfsgt	uart_receive_interrupt_handler@index,c
  5459  000A60  0012               	return	
  5460                           
  5461                           ;my_uart.c: 115: {
  5462                           ;my_uart.c: 116: index = 0;
  5463  000A62  0E00               	movlw	0
  5464  000A64  6E5F               	movwf	uart_receive_interrupt_handler@index,c
  5465                           
  5466                           ;my_uart.c: 118: if( received_counter != frame[1] )
  5467  000A66  5049               	movf	uart_receive_interrupt_handler@frame+1,w,c
  5468  000A68  1860               	xorwf	uart_receive_interrupt_handler@received_counter,w,c
  5469  000A6A  B4D8               	btfsc	status,2,c
  5470  000A6C  D00F               	goto	i1l3972
  5471                           
  5472                           ;my_uart.c: 119: {
  5473                           ;my_uart.c: 121: unsigned char bad_counter_id[2];
  5474                           ;my_uart.c: 122: bad_counter_id[0] = received_counter;
  5475  000A6E  C060  F02D         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_counter_id
  5476                           
  5477                           ;my_uart.c: 123: bad_counter_id[1] = frame[1];
  5478  000A72  C049  F02E         	movff	uart_receive_interrupt_handler@frame+1,uart_receive_interrupt_handler@bad_counter
      +                          _id+1
  5479                           
  5480                           ;my_uart.c: 124: ToMainLow_sendmsg(2,33,(void *)&bad_counter_id);
  5481  000A76  0E21               	movlw	33
  5482  000A78  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5483  000A7A  0E00               	movlw	high uart_receive_interrupt_handler@bad_counter_id
  5484  000A7C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5485  000A7E  0E2D               	movlw	low uart_receive_interrupt_handler@bad_counter_id
  5486  000A80  6E18               	movwf	ToMainLow_sendmsg@data,c
  5487  000A82  0E02               	movlw	2
  5488  000A84  EC90  F00E         	call	_ToMainLow_sendmsg
  5489                           
  5490                           ;my_uart.c: 125: error = 1;
  5491  000A88  0E01               	movlw	1
  5492  000A8A  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5493  000A8C                     i1l3972:
  5494                           
  5495                           ;my_uart.c: 126: }
  5496                           ;my_uart.c: 129: unsigned char gooey_uart_center[14];
  5497                           ;my_uart.c: 130: unsigned char checksum = 0;
  5498  000A8C  0E00               	movlw	0
  5499  000A8E  6E2F               	movwf	uart_receive_interrupt_handler@checksum,c
  5500                           
  5501                           ;my_uart.c: 131: int i;
  5502                           ;my_uart.c: 132: for(i = 0; i < 14; i++)
  5503  000A90  0E00               	movlw	0
  5504  000A92  6E36               	movwf	uart_receive_interrupt_handler@i+1,c
  5505  000A94  0E00               	movlw	0
  5506  000A96  6E35               	movwf	uart_receive_interrupt_handler@i,c
  5507  000A98  5036               	movf	uart_receive_interrupt_handler@i+1,w,c
  5508  000A9A  0A80               	xorlw	128
  5509  000A9C  0F80               	addlw	-128
  5510  000A9E  0E0E               	movlw	14
  5511  000AA0  B4D8               	btfsc	status,2,c
  5512  000AA2  5C35               	subwf	uart_receive_interrupt_handler@i,w,c
  5513  000AA4  B0D8               	btfsc	status,0,c
  5514  000AA6  D01F               	goto	i1l3988
  5515                           
  5516                           ;my_uart.c: 133: {
  5517                           ;my_uart.c: 134: gooey_uart_center[i] = frame[i+2];
  5518  000AA8  0E02               	movlw	2
  5519  000AAA  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5520  000AAC  6E1B               	movwf	??_uart_receive_interrupt_handler& (0+255),c
  5521  000AAE  0E00               	movlw	0
  5522  000AB0  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5523  000AB2  6E1C               	movwf	(??_uart_receive_interrupt_handler+1)& (0+255),c
  5524  000AB4  0E48               	movlw	low uart_receive_interrupt_handler@frame
  5525  000AB6  241B               	addwf	??_uart_receive_interrupt_handler,w,c
  5526  000AB8  6ED9               	movwf	fsr2l,c
  5527  000ABA  0E00               	movlw	high uart_receive_interrupt_handler@frame
  5528  000ABC  201C               	addwfc	??_uart_receive_interrupt_handler+1,w,c
  5529  000ABE  6EDA               	movwf	fsr2h,c
  5530  000AC0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5531  000AC2  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5532  000AC4  6EE1               	movwf	fsr1l,c
  5533  000AC6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5534  000AC8  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5535  000ACA  6EE2               	movwf	fsr1h,c
  5536  000ACC  CFDF FFE7          	movff	indf2,indf1
  5537                           
  5538                           ;my_uart.c: 135: checksum ^= gooey_uart_center[i];
  5539  000AD0  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5540  000AD2  2435               	addwf	uart_receive_interrupt_handler@i,w,c
  5541  000AD4  6ED9               	movwf	fsr2l,c
  5542  000AD6  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5543  000AD8  2036               	addwfc	uart_receive_interrupt_handler@i+1,w,c
  5544  000ADA  6EDA               	movwf	fsr2h,c
  5545  000ADC  50DF               	movf	indf2,w,c
  5546  000ADE  1A2F               	xorwf	uart_receive_interrupt_handler@checksum,f,c
  5547  000AE0  4A35               	infsnz	uart_receive_interrupt_handler@i,f,c
  5548  000AE2  2A36               	incf	uart_receive_interrupt_handler@i+1,f,c
  5549  000AE4  D7D9               	goto	L3
  5550  000AE6                     i1l3988:
  5551                           
  5552                           ;my_uart.c: 136: }
  5553                           ;my_uart.c: 138: if( checksum != frame[(14 + 2 + 2) - 2] )
  5554  000AE6  5058               	movf	uart_receive_interrupt_handler@frame+16,w,c
  5555  000AE8  182F               	xorwf	uart_receive_interrupt_handler@checksum,w,c
  5556  000AEA  B4D8               	btfsc	status,2,c
  5557  000AEC  D00D               	goto	i1l3996
  5558                           
  5559                           ;my_uart.c: 139: {
  5560                           ;my_uart.c: 141: unsigned char bad_checksum_id = received_counter;
  5561  000AEE  C060  F032         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@ba
      +                          d_checksum_id
  5562                           
  5563                           ;my_uart.c: 142: ToMainLow_sendmsg(1,32,(void *)&bad_checksum_id);
  5564  000AF2  0E20               	movlw	32
  5565  000AF4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5566  000AF6  0E00               	movlw	high uart_receive_interrupt_handler@bad_checksum_id
  5567  000AF8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5568  000AFA  0E32               	movlw	low uart_receive_interrupt_handler@bad_checksum_id
  5569  000AFC  6E18               	movwf	ToMainLow_sendmsg@data,c
  5570  000AFE  0E01               	movlw	1
  5571  000B00  EC90  F00E         	call	_ToMainLow_sendmsg
  5572                           
  5573                           ;my_uart.c: 143: error = 1;
  5574  000B04  0E01               	movlw	1
  5575  000B06  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5576  000B08                     i1l3996:
  5577                           
  5578                           ;my_uart.c: 144: }
  5579                           ;my_uart.c: 149: if( !error )
  5580  000B08  665E               	tstfsz	uart_receive_interrupt_handler@error,c
  5581  000B0A  D02C               	goto	i1l4016
  5582                           
  5583                           ;my_uart.c: 150: {
  5584                           ;my_uart.c: 152: unsigned char msg_id = gooey_uart_center[0];
  5585  000B0C  C01D  F034         	movff	uart_receive_interrupt_handler@gooey_uart_center,uart_receive_interrupt_handler@m
      +                          sg_id
  5586                           
  5587                           ;my_uart.c: 154: if( ( msg_id != 0x11 ) && ( msg_id != 0xf1 ) && ( msg_id != 0xf2 ) && (
      +                           msg_id != 0xf3 ) && ( msg_id != 0xf4 ) )
  5588  000B10  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5589  000B12  0A11               	xorlw	17
  5590  000B14  B4D8               	btfsc	status,2,c
  5591  000B16  D01C               	goto	i1l415
  5592  000B18  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5593  000B1A  0AF1               	xorlw	241
  5594  000B1C  B4D8               	btfsc	status,2,c
  5595  000B1E  D018               	goto	i1l415
  5596  000B20  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5597  000B22  0AF2               	xorlw	242
  5598  000B24  B4D8               	btfsc	status,2,c
  5599  000B26  D014               	goto	i1l415
  5600  000B28  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5601  000B2A  0AF3               	xorlw	243
  5602  000B2C  B4D8               	btfsc	status,2,c
  5603  000B2E  D010               	goto	i1l415
  5604  000B30  5034               	movf	uart_receive_interrupt_handler@msg_id,w,c
  5605  000B32  0AF4               	xorlw	244
  5606  000B34  B4D8               	btfsc	status,2,c
  5607  000B36  D00C               	goto	i1l415
  5608                           
  5609                           ;my_uart.c: 155: {
  5610                           ;my_uart.c: 156: unsigned char message_count = received_counter;
  5611  000B38  C060  F033         	movff	uart_receive_interrupt_handler@received_counter,uart_receive_interrupt_handler@me
      +                          ssage_count
  5612                           
  5613                           ;my_uart.c: 157: unsigned char status = ToMainLow_sendmsg(1,36,(void*)&message_count );
  5614  000B3C  0E24               	movlw	36
  5615  000B3E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5616  000B40  0E00               	movlw	high uart_receive_interrupt_handler@message_count
  5617  000B42  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5618  000B44  0E33               	movlw	low uart_receive_interrupt_handler@message_count
  5619  000B46  6E18               	movwf	ToMainLow_sendmsg@data,c
  5620  000B48  0E01               	movlw	1
  5621  000B4A  EC90  F00E         	call	_ToMainLow_sendmsg
  5622  000B4E  6E2B               	movwf	uart_receive_interrupt_handler@status,c
  5623  000B50                     i1l415:
  5624                           
  5625                           ;my_uart.c: 158: }
  5626                           ;my_uart.c: 161: unsigned char status = ToMainLow_sendmsg(14,31,(void *) gooey_uart_cent
      +                          er );
  5627  000B50  0E1F               	movlw	31
  5628  000B52  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5629  000B54  0E00               	movlw	high uart_receive_interrupt_handler@gooey_uart_center
  5630  000B56  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5631  000B58  0E1D               	movlw	low uart_receive_interrupt_handler@gooey_uart_center
  5632  000B5A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5633  000B5C  0E0E               	movlw	14
  5634  000B5E  EC90  F00E         	call	_ToMainLow_sendmsg
  5635  000B62  6E2C               	movwf	uart_receive_interrupt_handler@status_1819,c
  5636  000B64                     i1l4016:
  5637                           
  5638                           ;my_uart.c: 171: }
  5639                           ;my_uart.c: 172: }
  5640                           ;my_uart.c: 174: received_counter++;
  5641  000B64  2A60               	incf	uart_receive_interrupt_handler@received_counter,f,c
  5642                           
  5643                           ;my_uart.c: 175: error = 0;
  5644  000B66  0E00               	movlw	0
  5645  000B68  6E5E               	movwf	uart_receive_interrupt_handler@error,c
  5646  000B6A  0012               	return	
  5647  000B6C                     __end_of_uart_receive_interrupt_handler:
  5648                           	opt stack 0
  5649                           pclatu	equ	0xFFB
  5650                           pclath	equ	0xFFA
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           intcon	equ	0xFF2
  5658                           postinc0	equ	0xFEE
  5659                           fsr0h	equ	0xFEA
  5660                           fsr0l	equ	0xFE9
  5661                           wreg	equ	0xFE8
  5662                           indf1	equ	0xFE7
  5663                           fsr1h	equ	0xFE2
  5664                           fsr1l	equ	0xFE1
  5665                           bsr	equ	0xFE0
  5666                           indf2	equ	0xFDF
  5667                           postinc2	equ	0xFDE
  5668                           postdec2	equ	0xFDD
  5669                           fsr2h	equ	0xFDA
  5670                           fsr2l	equ	0xFD9
  5671                           status	equ	0xFD8
  5672                           
  5673 ;; *************** function _timer1_int_handler *****************
  5674 ;; Defined at:
  5675 ;;		line 38 in file "../src/user_interrupts.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  result          2   26[COMRAM] unsigned int 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;		None               void
  5682 ;; Registers used:
  5683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5689 ;;      Params:         0       0       0       0       0
  5690 ;;      Locals:         2       0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0
  5692 ;;      Totals:         2       0       0       0       0
  5693 ;;Total ram usage:        2 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    8
  5696 ;; This function calls:
  5697 ;;		_ReadTimer1
  5698 ;;		_ToMainLow_sendmsg
  5699 ;;		_WriteTimer1
  5700 ;; This function is called by:
  5701 ;;		_InterruptHandlerLow
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text35
  5706  001C7E                     __ptext35:
  5707                           	opt stack 0
  5708  001C7E                     _timer1_int_handler:
  5709                           	opt stack 15
  5710                           
  5711                           ;user_interrupts.c: 42: unsigned int result;
  5712                           ;user_interrupts.c: 49: result = ReadTimer1();
  5713                           
  5714                           ;incstack = 0
  5715  001C7E  ECD4  F00E         	call	_ReadTimer1	;wreg free
  5716  001C82  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5717  001C86  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5718                           
  5719                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5720  001C8A  0E0B               	movlw	11
  5721  001C8C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5722  001C8E  0E00               	movlw	0
  5723  001C90  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5724  001C92  0E00               	movlw	0
  5725  001C94  6E18               	movwf	ToMainLow_sendmsg@data,c
  5726  001C96  0E00               	movlw	0
  5727  001C98  EC90  F00E         	call	_ToMainLow_sendmsg
  5728                           
  5729                           ;user_interrupts.c: 53: WriteTimer1(0);
  5730  001C9C  0E00               	movlw	0
  5731  001C9E  6E02               	movwf	WriteTimer1@timer1+1,c
  5732  001CA0  0E00               	movlw	0
  5733  001CA2  6E01               	movwf	WriteTimer1@timer1,c
  5734  001CA4  ECCB  F00E         	call	_WriteTimer1	;wreg free
  5735  001CA8  0012               	return	
  5736  001CAA                     __end_of_timer1_int_handler:
  5737                           	opt stack 0
  5738                           pclatu	equ	0xFFB
  5739                           pclath	equ	0xFFA
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           prodh	equ	0xFF4
  5745                           prodl	equ	0xFF3
  5746                           intcon	equ	0xFF2
  5747                           postinc0	equ	0xFEE
  5748                           fsr0h	equ	0xFEA
  5749                           fsr0l	equ	0xFE9
  5750                           wreg	equ	0xFE8
  5751                           indf1	equ	0xFE7
  5752                           fsr1h	equ	0xFE2
  5753                           fsr1l	equ	0xFE1
  5754                           bsr	equ	0xFE0
  5755                           indf2	equ	0xFDF
  5756                           postinc2	equ	0xFDE
  5757                           postdec2	equ	0xFDD
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _WriteTimer1 *****************
  5763 ;; Defined at:
  5764 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  timer1          2    0[COMRAM] unsigned int 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  timer           2    2[COMRAM] struct Timers
  5769 ;; Return value:  Size  Location     Type
  5770 ;;		None               void
  5771 ;; Registers used:
  5772 ;;		None
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5778 ;;      Params:         2       0       0       0       0
  5779 ;;      Locals:         2       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0
  5781 ;;      Totals:         4       0       0       0       0
  5782 ;;Total ram usage:        4 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    5
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_timer1_int_handler
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text36
  5793  001D96                     __ptext36:
  5794                           	opt stack 0
  5795  001D96                     _WriteTimer1:
  5796                           	opt stack 17
  5797                           
  5798                           ;incstack = 0
  5799  001D96  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5800  001D9A  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5801  001D9E  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5802  001DA2  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5803  001DA6  0012               	return	
  5804  001DA8                     __end_of_WriteTimer1:
  5805                           	opt stack 0
  5806                           pclatu	equ	0xFFB
  5807                           pclath	equ	0xFFA
  5808                           tblptru	equ	0xFF8
  5809                           tblptrh	equ	0xFF7
  5810                           tblptrl	equ	0xFF6
  5811                           tablat	equ	0xFF5
  5812                           prodh	equ	0xFF4
  5813                           prodl	equ	0xFF3
  5814                           intcon	equ	0xFF2
  5815                           postinc0	equ	0xFEE
  5816                           fsr0h	equ	0xFEA
  5817                           fsr0l	equ	0xFE9
  5818                           wreg	equ	0xFE8
  5819                           indf1	equ	0xFE7
  5820                           fsr1h	equ	0xFE2
  5821                           fsr1l	equ	0xFE1
  5822                           bsr	equ	0xFE0
  5823                           indf2	equ	0xFDF
  5824                           postinc2	equ	0xFDE
  5825                           postdec2	equ	0xFDD
  5826                           fsr2h	equ	0xFDA
  5827                           fsr2l	equ	0xFD9
  5828                           status	equ	0xFD8
  5829                           
  5830 ;; *************** function _ToMainLow_sendmsg *****************
  5831 ;; Defined at:
  5832 ;;		line 103 in file "../src/messages.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  length          1    wreg     unsigned char 
  5835 ;;  msgtype         1   22[COMRAM] unsigned char 
  5836 ;;  data            2   23[COMRAM] PTR void 
  5837 ;;		 -> NULL(0), uart_receive_interrupt_handler@message_count(1), uart_receive_interrupt_handler@bad_checksum_id(1), uar
      +t_receive_interrupt_handler@gooey_uart_center(14), 
  5838 ;;		 -> uart_receive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), uart_receive_int
      +errupt_handler@bad_start_id(1), 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  length          1   25[COMRAM] unsigned char 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      char 
  5843 ;; Registers used:
  5844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5850 ;;      Params:         3       0       0       0       0
  5851 ;;      Locals:         1       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0
  5853 ;;      Totals:         4       0       0       0       0
  5854 ;;Total ram usage:        4 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    7
  5857 ;; This function calls:
  5858 ;;		i1_send_msg
  5859 ;; This function is called by:
  5860 ;;		_uart_receive_interrupt_handler
  5861 ;;		_timer1_int_handler
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           	psect	text37
  5866  001D20                     __ptext37:
  5867                           	opt stack 0
  5868  001D20                     _ToMainLow_sendmsg:
  5869                           	opt stack 15
  5870                           
  5871                           ;incstack = 0
  5872                           ;ToMainLow_sendmsg@length stored from wreg
  5873  001D20  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5874                           
  5875                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5876  001D22  0101               	movlb	1	; () banked
  5877  001D24  0E01               	movlw	high _ToMainLow_MQ
  5878  001D26  6E0C               	movwf	i1send_msg@qptr+1,c
  5879  001D28  0101               	movlb	1	; () banked
  5880  001D2A  0E72               	movlw	low _ToMainLow_MQ
  5881  001D2C  6E0B               	movwf	i1send_msg@qptr,c
  5882  001D2E  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5883  001D32  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5884  001D36  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5885  001D3A  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5886  001D3E  EC23  F00A         	call	i1_send_msg	;wreg free
  5887  001D42  0012               	return	
  5888  001D44                     __end_of_ToMainLow_sendmsg:
  5889                           	opt stack 0
  5890                           pclatu	equ	0xFFB
  5891                           pclath	equ	0xFFA
  5892                           tblptru	equ	0xFF8
  5893                           tblptrh	equ	0xFF7
  5894                           tblptrl	equ	0xFF6
  5895                           tablat	equ	0xFF5
  5896                           prodh	equ	0xFF4
  5897                           prodl	equ	0xFF3
  5898                           intcon	equ	0xFF2
  5899                           postinc0	equ	0xFEE
  5900                           fsr0h	equ	0xFEA
  5901                           fsr0l	equ	0xFE9
  5902                           wreg	equ	0xFE8
  5903                           indf1	equ	0xFE7
  5904                           fsr1h	equ	0xFE2
  5905                           fsr1l	equ	0xFE1
  5906                           bsr	equ	0xFE0
  5907                           indf2	equ	0xFDF
  5908                           postinc2	equ	0xFDE
  5909                           postdec2	equ	0xFDD
  5910                           fsr2h	equ	0xFDA
  5911                           fsr2l	equ	0xFD9
  5912                           status	equ	0xFD8
  5913                           
  5914 ;; *************** function i1_send_msg *****************
  5915 ;; Defined at:
  5916 ;;		line 24 in file "../src/messages.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5919 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5920 ;;  length          1   12[COMRAM] unsigned char 
  5921 ;;  msgtype         1   13[COMRAM] unsigned char 
  5922 ;;  data            2   14[COMRAM] PTR void 
  5923 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  5924 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  5925 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  5926 ;;		 -> main@t1thread_data(2), main@ic(38), 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5929 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  5930 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  5931 ;;  send_msg        2   17[COMRAM] unsigned int 
  5932 ;;  send_msg        1   19[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      char 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5942 ;;      Params:         6       0       0       0       0
  5943 ;;      Locals:         5       0       0       0       0
  5944 ;;      Temps:          1       0       0       0       0
  5945 ;;      Totals:        12       0       0       0       0
  5946 ;;Total ram usage:       12 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    6
  5949 ;; This function calls:
  5950 ;;		i1___awmod
  5951 ;;		i1_memcpy
  5952 ;; This function is called by:
  5953 ;;		_ToMainLow_sendmsg
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text38
  5958  001446                     __ptext38:
  5959                           	opt stack 0
  5960  001446                     i1_send_msg:
  5961                           	opt stack 15
  5962                           
  5963                           ;messages.c: 25: unsigned char slot;
  5964                           ;messages.c: 27: msg *qmsg;
  5965                           ;messages.c: 28: size_t tlength = length;
  5966                           
  5967                           ;incstack = 0
  5968  001446  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5969  00144A  6A13               	clrf	i1send_msg@tlength+1,c
  5970                           
  5971                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5972  00144C  EE20 F055          	lfsr	2,85
  5973  001450  500B               	movf	i1send_msg@qptr,w,c
  5974  001452  26D9               	addwf	fsr2l,f,c
  5975  001454  500C               	movf	i1send_msg@qptr+1,w,c
  5976  001456  22DA               	addwfc	fsr2h,f,c
  5977  001458  50DF               	movf	indf2,w,c
  5978  00145A  6E14               	movwf	i1send_msg@slot,c
  5979                           
  5980                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5981  00145C  5014               	movf	i1send_msg@slot,w,c
  5982  00145E  0D11               	mullw	17
  5983  001460  50F3               	movf	prodl,w,c
  5984  001462  240B               	addwf	i1send_msg@qptr,w,c
  5985  001464  6E15               	movwf	i1send_msg@qmsg,c
  5986  001466  50F4               	movf	prodh,w,c
  5987  001468  200C               	addwfc	i1send_msg@qptr+1,w,c
  5988  00146A  6E16               	movwf	i1send_msg@qmsg+1,c
  5989                           
  5990                           ;messages.c: 41: if (qmsg->full != 0) {
  5991  00146C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5992  001470  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5993  001474  50DF               	movf	indf2,w,c
  5994  001476  B4D8               	btfsc	status,2,c
  5995  001478  D002               	goto	i1l3558
  5996                           
  5997                           ;messages.c: 42: return (-1);
  5998  00147A  0EFF               	movlw	255
  5999  00147C  0012               	return	
  6000  00147E                     i1l3558:
  6001                           
  6002                           ;messages.c: 43: }
  6003                           ;messages.c: 46: qmsg->length = length;
  6004  00147E  EE20 F001          	lfsr	2,1
  6005  001482  5015               	movf	i1send_msg@qmsg,w,c
  6006  001484  26D9               	addwf	fsr2l,f,c
  6007  001486  5016               	movf	i1send_msg@qmsg+1,w,c
  6008  001488  22DA               	addwfc	fsr2h,f,c
  6009  00148A  C00D  FFDF         	movff	i1send_msg@length,indf2
  6010                           
  6011                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6012  00148E  EE20 F002          	lfsr	2,2
  6013  001492  5015               	movf	i1send_msg@qmsg,w,c
  6014  001494  26D9               	addwf	fsr2l,f,c
  6015  001496  5016               	movf	i1send_msg@qmsg+1,w,c
  6016  001498  22DA               	addwfc	fsr2h,f,c
  6017  00149A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6018                           
  6019                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6020  00149E  0E03               	movlw	3
  6021  0014A0  2415               	addwf	i1send_msg@qmsg,w,c
  6022  0014A2  6E01               	movwf	i1memcpy@d1,c
  6023  0014A4  0E00               	movlw	0
  6024  0014A6  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6025  0014A8  6E02               	movwf	i1memcpy@d1+1,c
  6026  0014AA  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6027  0014AE  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6028  0014B2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6029  0014B6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6030  0014BA  EC1F  F00D         	call	i1_memcpy	;wreg free
  6031                           
  6032                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6033  0014BE  EE20 F055          	lfsr	2,85
  6034  0014C2  500B               	movf	i1send_msg@qptr,w,c
  6035  0014C4  26D9               	addwf	fsr2l,f,c
  6036  0014C6  500C               	movf	i1send_msg@qptr+1,w,c
  6037  0014C8  22DA               	addwfc	fsr2h,f,c
  6038  0014CA  EE10 F055          	lfsr	1,85
  6039  0014CE  500B               	movf	i1send_msg@qptr,w,c
  6040  0014D0  26E1               	addwf	fsr1l,f,c
  6041  0014D2  500C               	movf	i1send_msg@qptr+1,w,c
  6042  0014D4  22E2               	addwfc	fsr1h,f,c
  6043  0014D6  50E7               	movf	indf1,w,c
  6044  0014D8  6E11               	movwf	??i1_send_msg& (0+255),c
  6045  0014DA  0E01               	movlw	1
  6046  0014DC  2411               	addwf	??i1_send_msg,w,c
  6047  0014DE  6E01               	movwf	i1___awmod@dividend,c
  6048  0014E0  6A02               	clrf	i1___awmod@dividend+1,c
  6049  0014E2  0E00               	movlw	0
  6050  0014E4  2202               	addwfc	i1___awmod@dividend+1,f,c
  6051  0014E6  0E00               	movlw	0
  6052  0014E8  6E04               	movwf	i1___awmod@divisor+1,c
  6053  0014EA  0E05               	movlw	5
  6054  0014EC  6E03               	movwf	i1___awmod@divisor,c
  6055  0014EE  EC83  F00A         	call	i1___awmod	;wreg free
  6056  0014F2  5001               	movf	?i1___awmod,w,c
  6057  0014F4  6EDF               	movwf	indf2,c
  6058                           
  6059                           ;messages.c: 59: qmsg->full = 1;
  6060  0014F6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6061  0014FA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6062  0014FE  0E01               	movlw	1
  6063  001500  6EDF               	movwf	indf2,c
  6064                           
  6065                           ;messages.c: 60: return (1);
  6066  001502  0E01               	movlw	1
  6067  001504  0012               	return	
  6068  001506                     __end_ofi1_send_msg:
  6069                           	opt stack 0
  6070                           pclatu	equ	0xFFB
  6071                           pclath	equ	0xFFA
  6072                           tblptru	equ	0xFF8
  6073                           tblptrh	equ	0xFF7
  6074                           tblptrl	equ	0xFF6
  6075                           tablat	equ	0xFF5
  6076                           prodh	equ	0xFF4
  6077                           prodl	equ	0xFF3
  6078                           intcon	equ	0xFF2
  6079                           postinc0	equ	0xFEE
  6080                           fsr0h	equ	0xFEA
  6081                           fsr0l	equ	0xFE9
  6082                           wreg	equ	0xFE8
  6083                           indf1	equ	0xFE7
  6084                           fsr1h	equ	0xFE2
  6085                           fsr1l	equ	0xFE1
  6086                           bsr	equ	0xFE0
  6087                           indf2	equ	0xFDF
  6088                           postinc2	equ	0xFDE
  6089                           postdec2	equ	0xFDD
  6090                           fsr2h	equ	0xFDA
  6091                           fsr2l	equ	0xFD9
  6092                           status	equ	0xFD8
  6093                           
  6094 ;; *************** function i1_memcpy *****************
  6095 ;; Defined at:
  6096 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  d1              2    0[COMRAM] PTR void 
  6099 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6100 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  6101 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6102 ;;		 -> main@ic(38), 
  6103 ;;  s1              2    2[COMRAM] PTR const void 
  6104 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6105 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6106 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  6107 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6108 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  6109 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  6110 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6111 ;;  n               2    4[COMRAM] unsigned int 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6114 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  6115 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  6116 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  6117 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  6118 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  6119 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  6120 ;;		 -> main@t1thread_data(2), main@ic(38), 
  6121 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6122 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  6123 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  6124 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  6125 ;;		 -> main@ic(38), 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2    0[COMRAM] PTR void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6135 ;;      Params:         6       0       0       0       0
  6136 ;;      Locals:         4       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0
  6138 ;;      Totals:        10       0       0       0       0
  6139 ;;Total ram usage:       10 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    5
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		i1_send_msg
  6146 ;;		i1_recv_msg
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text39
  6151  001A3E                     __ptext39:
  6152                           	opt stack 0
  6153  001A3E                     i1_memcpy:
  6154                           	opt stack 15
  6155                           
  6156                           ;incstack = 0
  6157  001A3E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6158  001A42  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6159  001A46  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6160  001A4A  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6161  001A4E  D00E               	goto	i1l2424
  6162  001A50                     i1l2418:
  6163  001A50  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6164  001A54  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6165  001A58  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6166  001A5C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6167  001A60  CFDF FFE7          	movff	indf2,indf1
  6168  001A64  4A09               	infsnz	i1memcpy@s,f,c
  6169  001A66  2A0A               	incf	i1memcpy@s+1,f,c
  6170  001A68  4A07               	infsnz	i1memcpy@d,f,c
  6171  001A6A  2A08               	incf	i1memcpy@d+1,f,c
  6172  001A6C                     i1l2424:
  6173  001A6C  0605               	decf	i1memcpy@n,f,c
  6174  001A6E  A0D8               	btfss	status,0,c
  6175  001A70  0606               	decf	i1memcpy@n+1,f,c
  6176  001A72  2805               	incf	i1memcpy@n& (0+255),w,c
  6177  001A74  B4D8               	btfsc	status,2,c
  6178  001A76  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6179  001A78  B4D8               	btfsc	status,2,c
  6180                           
  6181                           ;	Return value of i1_memcpy is never used
  6182  001A7A  0012               	return	
  6183  001A7C  D7E9               	goto	i1l2418
  6184  001A7E                     __end_ofi1_memcpy:
  6185                           	opt stack 0
  6186                           pclatu	equ	0xFFB
  6187                           pclath	equ	0xFFA
  6188                           tblptru	equ	0xFF8
  6189                           tblptrh	equ	0xFF7
  6190                           tblptrl	equ	0xFF6
  6191                           tablat	equ	0xFF5
  6192                           prodh	equ	0xFF4
  6193                           prodl	equ	0xFF3
  6194                           intcon	equ	0xFF2
  6195                           postinc0	equ	0xFEE
  6196                           fsr0h	equ	0xFEA
  6197                           fsr0l	equ	0xFE9
  6198                           wreg	equ	0xFE8
  6199                           indf1	equ	0xFE7
  6200                           fsr1h	equ	0xFE2
  6201                           fsr1l	equ	0xFE1
  6202                           bsr	equ	0xFE0
  6203                           indf2	equ	0xFDF
  6204                           postinc2	equ	0xFDE
  6205                           postdec2	equ	0xFDD
  6206                           fsr2h	equ	0xFDA
  6207                           fsr2l	equ	0xFD9
  6208                           status	equ	0xFD8
  6209                           
  6210 ;; *************** function i1___awmod *****************
  6211 ;; Defined at:
  6212 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  dividend        2    0[COMRAM] int 
  6215 ;;  divisor         2    2[COMRAM] int 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  __awmod         1    5[COMRAM] unsigned char 
  6218 ;;  __awmod         1    4[COMRAM] unsigned char 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  2    0[COMRAM] int 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2, status,0, prodl
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6228 ;;      Params:         4       0       0       0       0
  6229 ;;      Locals:         2       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0
  6231 ;;      Totals:         6       0       0       0       0
  6232 ;;Total ram usage:        6 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    5
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		i1_send_msg
  6239 ;;		i1_recv_msg
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text40
  6244  001506                     __ptext40:
  6245                           	opt stack 0
  6246  001506                     i1___awmod:
  6247                           	opt stack 15
  6248                           
  6249                           ;incstack = 0
  6250  001506  0E00               	movlw	0
  6251  001508  6E06               	movwf	i1___awmod@sign,c
  6252  00150A  5002               	movf	i1___awmod@dividend+1,w,c
  6253  00150C  0A80               	xorlw	128
  6254  00150E  6EF3               	movwf	prodl,c
  6255  001510  0E80               	movlw	128
  6256  001512  5CF3               	subwf	prodl,w,c
  6257  001514  0E00               	movlw	0
  6258  001516  B4D8               	btfsc	status,2,c
  6259  001518  5C01               	subwf	i1___awmod@dividend,w,c
  6260  00151A  B0D8               	btfsc	status,0,c
  6261  00151C  D006               	goto	i1l2444
  6262  00151E  6C01               	negf	i1___awmod@dividend,c
  6263  001520  1E02               	comf	i1___awmod@dividend+1,f,c
  6264  001522  B0D8               	btfsc	status,0,c
  6265  001524  2A02               	incf	i1___awmod@dividend+1,f,c
  6266  001526  0E01               	movlw	1
  6267  001528  6E06               	movwf	i1___awmod@sign,c
  6268  00152A                     i1l2444:
  6269  00152A  5004               	movf	i1___awmod@divisor+1,w,c
  6270  00152C  0A80               	xorlw	128
  6271  00152E  6EF3               	movwf	prodl,c
  6272  001530  0E80               	movlw	128
  6273  001532  5CF3               	subwf	prodl,w,c
  6274  001534  0E00               	movlw	0
  6275  001536  B4D8               	btfsc	status,2,c
  6276  001538  5C03               	subwf	i1___awmod@divisor,w,c
  6277  00153A  B0D8               	btfsc	status,0,c
  6278  00153C  D004               	goto	i1l2448
  6279  00153E  6C03               	negf	i1___awmod@divisor,c
  6280  001540  1E04               	comf	i1___awmod@divisor+1,f,c
  6281  001542  B0D8               	btfsc	status,0,c
  6282  001544  2A04               	incf	i1___awmod@divisor+1,f,c
  6283  001546                     i1l2448:
  6284  001546  5004               	movf	i1___awmod@divisor+1,w,c
  6285  001548  1003               	iorwf	i1___awmod@divisor,w,c
  6286  00154A  B4D8               	btfsc	status,2,c
  6287  00154C  D018               	goto	i1l2464
  6288  00154E  0E01               	movlw	1
  6289  001550  6E05               	movwf	i1___awmod@counter,c
  6290  001552  D004               	goto	i1l2454
  6291  001554                     i1l2452:
  6292  001554  90D8               	bcf	status,0,c
  6293  001556  3603               	rlcf	i1___awmod@divisor,f,c
  6294  001558  3604               	rlcf	i1___awmod@divisor+1,f,c
  6295  00155A  2A05               	incf	i1___awmod@counter,f,c
  6296  00155C                     i1l2454:
  6297  00155C  AE04               	btfss	i1___awmod@divisor+1,7,c
  6298  00155E  D7FA               	goto	i1l2452
  6299  001560                     i1l2456:
  6300  001560  5003               	movf	i1___awmod@divisor,w,c
  6301  001562  5C01               	subwf	i1___awmod@dividend,w,c
  6302  001564  5004               	movf	i1___awmod@divisor+1,w,c
  6303  001566  5802               	subwfb	i1___awmod@dividend+1,w,c
  6304  001568  A0D8               	btfss	status,0,c
  6305  00156A  D004               	goto	i1l2460
  6306  00156C  5003               	movf	i1___awmod@divisor,w,c
  6307  00156E  5E01               	subwf	i1___awmod@dividend,f,c
  6308  001570  5004               	movf	i1___awmod@divisor+1,w,c
  6309  001572  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6310  001574                     i1l2460:
  6311  001574  90D8               	bcf	status,0,c
  6312  001576  3204               	rrcf	i1___awmod@divisor+1,f,c
  6313  001578  3203               	rrcf	i1___awmod@divisor,f,c
  6314  00157A  2E05               	decfsz	i1___awmod@counter,f,c
  6315  00157C  D7F1               	goto	i1l2456
  6316  00157E                     i1l2464:
  6317  00157E  5006               	movf	i1___awmod@sign,w,c
  6318  001580  B4D8               	btfsc	status,2,c
  6319  001582  D004               	goto	i1l2468
  6320  001584  6C01               	negf	i1___awmod@dividend,c
  6321  001586  1E02               	comf	i1___awmod@dividend+1,f,c
  6322  001588  B0D8               	btfsc	status,0,c
  6323  00158A  2A02               	incf	i1___awmod@dividend+1,f,c
  6324  00158C                     i1l2468:
  6325  00158C  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6326  001590  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6327  001594  0012               	return	
  6328  001596                     __end_ofi1___awmod:
  6329                           	opt stack 0
  6330                           pclatu	equ	0xFFB
  6331                           pclath	equ	0xFFA
  6332                           tblptru	equ	0xFF8
  6333                           tblptrh	equ	0xFF7
  6334                           tblptrl	equ	0xFF6
  6335                           tablat	equ	0xFF5
  6336                           prodh	equ	0xFF4
  6337                           prodl	equ	0xFF3
  6338                           intcon	equ	0xFF2
  6339                           postinc0	equ	0xFEE
  6340                           fsr0h	equ	0xFEA
  6341                           fsr0l	equ	0xFE9
  6342                           wreg	equ	0xFE8
  6343                           indf1	equ	0xFE7
  6344                           fsr1h	equ	0xFE2
  6345                           fsr1l	equ	0xFE1
  6346                           bsr	equ	0xFE0
  6347                           indf2	equ	0xFDF
  6348                           postinc2	equ	0xFDE
  6349                           postdec2	equ	0xFDD
  6350                           fsr2h	equ	0xFDA
  6351                           fsr2l	equ	0xFD9
  6352                           status	equ	0xFD8
  6353                           
  6354 ;; *************** function _ReadTimer1 *****************
  6355 ;; Defined at:
  6356 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;		None
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  timer           2    2[COMRAM] struct Timers
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  2    0[COMRAM] unsigned int 
  6363 ;; Registers used:
  6364 ;;		None
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6370 ;;      Params:         2       0       0       0       0
  6371 ;;      Locals:         2       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0
  6373 ;;      Totals:         4       0       0       0       0
  6374 ;;Total ram usage:        4 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    5
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_timer1_int_handler
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text41
  6385  001DA8                     __ptext41:
  6386                           	opt stack 0
  6387  001DA8                     _ReadTimer1:
  6388                           	opt stack 17
  6389                           
  6390                           ;incstack = 0
  6391  001DA8  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6392  001DAC  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6393  001DB0  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6394  001DB4  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6395  001DB8  0012               	return	
  6396  001DBA                     __end_of_ReadTimer1:
  6397                           	opt stack 0
  6398                           pclatu	equ	0xFFB
  6399                           pclath	equ	0xFFA
  6400                           tblptru	equ	0xFF8
  6401                           tblptrh	equ	0xFF7
  6402                           tblptrl	equ	0xFF6
  6403                           tablat	equ	0xFF5
  6404                           prodh	equ	0xFF4
  6405                           prodl	equ	0xFF3
  6406                           intcon	equ	0xFF2
  6407                           postinc0	equ	0xFEE
  6408                           fsr0h	equ	0xFEA
  6409                           fsr0l	equ	0xFE9
  6410                           wreg	equ	0xFE8
  6411                           indf1	equ	0xFE7
  6412                           fsr1h	equ	0xFE2
  6413                           fsr1l	equ	0xFE1
  6414                           bsr	equ	0xFE0
  6415                           indf2	equ	0xFDF
  6416                           postinc2	equ	0xFDE
  6417                           postdec2	equ	0xFDD
  6418                           fsr2h	equ	0xFDA
  6419                           fsr2l	equ	0xFD9
  6420                           status	equ	0xFD8
  6421                           
  6422 ;; *************** function _InterruptHandlerHigh *****************
  6423 ;; Defined at:
  6424 ;;		line 86 in file "../src/interrupts.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;		None
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;		None               void
  6431 ;; Registers used:
  6432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6438 ;;      Params:         0       0       0       0       0
  6439 ;;      Locals:         0       0       0       0       0
  6440 ;;      Temps:          0      14       0       0       0
  6441 ;;      Totals:         0      14       0       0       0
  6442 ;;Total ram usage:       14 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    4
  6445 ;; This function calls:
  6446 ;;		_SleepIfOkay
  6447 ;;		_i2c_int_handler
  6448 ;;		_timer0_int_handler
  6449 ;; This function is called by:
  6450 ;;		Interrupt level 2
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	intcode
  6455  000008                     __pintcode:
  6456                           	opt stack 0
  6457  000008                     _InterruptHandlerHigh:
  6458                           	opt stack 15
  6459                           
  6460                           ;incstack = 0
  6461  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh
  6462  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+1
  6463  000010  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6464  000014  EF0F  F00B         	goto	int_func
  6465                           pclatu	equ	0xFFB
  6466                           pclath	equ	0xFFA
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           intcon	equ	0xFF2
  6474                           postinc0	equ	0xFEE
  6475                           fsr0h	equ	0xFEA
  6476                           fsr0l	equ	0xFE9
  6477                           wreg	equ	0xFE8
  6478                           indf1	equ	0xFE7
  6479                           fsr1h	equ	0xFE2
  6480                           fsr1l	equ	0xFE1
  6481                           bsr	equ	0xFE0
  6482                           indf2	equ	0xFDF
  6483                           postinc2	equ	0xFDE
  6484                           postdec2	equ	0xFDD
  6485                           fsr2h	equ	0xFDA
  6486                           fsr2l	equ	0xFD9
  6487                           status	equ	0xFD8
  6488                           
  6489                           	psect	intcode_body
  6490  00161E                     __pintcode_body:
  6491                           	opt stack 15
  6492  00161E                     int_func:
  6493                           	opt stack 15
  6494  00161E  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6495  001622  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6496  001626  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6497  00162A  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6498  00162E  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6499  001632  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+8
  6500  001636  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+9
  6501  00163A  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6502  00163E  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6503  001642  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+12
  6504  001646  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+13
  6505                           
  6506                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  6507  00164A  A69E               	btfss	3998,3,c	;volatile
  6508  00164C  D003               	goto	i2l4092
  6509                           
  6510                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  6511  00164E  969E               	bcf	3998,3,c	;volatile
  6512                           
  6513                           ;interrupts.c: 98: i2c_int_handler();
  6514  001650  EC62  F000         	call	_i2c_int_handler	;wreg free
  6515  001654                     i2l4092:
  6516                           
  6517                           ;interrupts.c: 99: }
  6518                           ;interrupts.c: 102: if (INTCONbits.TMR0IF) {
  6519  001654  A4F2               	btfss	intcon,2,c	;volatile
  6520  001656  D003               	goto	i2l4098
  6521                           
  6522                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6523  001658  94F2               	bcf	intcon,2,c	;volatile
  6524                           
  6525                           ;interrupts.c: 108: timer0_int_handler();
  6526  00165A  EC4E  F00B         	call	_timer0_int_handler	;wreg free
  6527  00165E                     i2l4098:
  6528                           
  6529                           ;interrupts.c: 109: }
  6530                           ;interrupts.c: 118: SleepIfOkay();
  6531  00165E  EC4B  F00C         	call	_SleepIfOkay	;wreg free
  6532  001662  C0B7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6533  001666  C0B6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6534  00166A  C0B5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6535  00166E  C0B4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6536  001672  C0B3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6537  001676  C0B2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6538  00167A  C0B1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6539  00167E  C0B0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6540  001682  C0AF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6541  001686  C0AE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6542  00168A  C0AD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6543  00168E  C0AC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6544  001692  C0AB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6545  001696  C0AA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6546  00169A  0011               	retfie		f
  6547  00169C                     __end_of_InterruptHandlerHigh:
  6548                           	opt stack 0
  6549                           pclatu	equ	0xFFB
  6550                           pclath	equ	0xFFA
  6551                           tblptru	equ	0xFF8
  6552                           tblptrh	equ	0xFF7
  6553                           tblptrl	equ	0xFF6
  6554                           tablat	equ	0xFF5
  6555                           prodh	equ	0xFF4
  6556                           prodl	equ	0xFF3
  6557                           intcon	equ	0xFF2
  6558                           postinc0	equ	0xFEE
  6559                           fsr0h	equ	0xFEA
  6560                           fsr0l	equ	0xFE9
  6561                           wreg	equ	0xFE8
  6562                           indf1	equ	0xFE7
  6563                           fsr1h	equ	0xFE2
  6564                           fsr1l	equ	0xFE1
  6565                           bsr	equ	0xFE0
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           fsr2h	equ	0xFDA
  6570                           fsr2l	equ	0xFD9
  6571                           status	equ	0xFD8
  6572                           
  6573 ;; *************** function _timer0_int_handler *****************
  6574 ;; Defined at:
  6575 ;;		line 16 in file "../src/user_interrupts.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  val             2   33[BANK0 ] unsigned int 
  6580 ;;  msgtype         2   31[BANK0 ] int 
  6581 ;;  length          2   29[BANK0 ] int 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;		None               void
  6584 ;; Registers used:
  6585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6591 ;;      Params:         0       0       0       0       0
  6592 ;;      Locals:         0       6       0       0       0
  6593 ;;      Temps:          0       0       0       0       0
  6594 ;;      Totals:         0       6       0       0       0
  6595 ;;Total ram usage:        6 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    3
  6598 ;; This function calls:
  6599 ;;		_FromMainHigh_recvmsg
  6600 ;;		_ToMainHigh_sendmsg
  6601 ;;		_WriteTimer0
  6602 ;; This function is called by:
  6603 ;;		_InterruptHandlerHigh
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text43
  6608  00169C                     __ptext43:
  6609                           	opt stack 0
  6610  00169C                     _timer0_int_handler:
  6611                           	opt stack 15
  6612                           
  6613                           ;user_interrupts.c: 20: unsigned int val;
  6614                           ;user_interrupts.c: 21: int length, msgtype;
  6615                           ;user_interrupts.c: 25: WriteTimer0(0);
  6616                           
  6617                           ;incstack = 0
  6618  00169C  0E00               	movlw	0
  6619  00169E  0100               	movlb	0	; () banked
  6620  0016A0  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6621  0016A2  0E00               	movlw	0
  6622  0016A4  0100               	movlb	0	; () banked
  6623  0016A6  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6624  0016A8  ECDD  F00E         	call	_WriteTimer0	;wreg free
  6625                           
  6626                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6627  0016AC  0100               	movlb	0	; () banked
  6628  0016AE  0E00               	movlw	high timer0_int_handler@msgtype
  6629  0016B0  0100               	movlb	0	; () banked
  6630  0016B2  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6631  0016B4  0100               	movlb	0	; () banked
  6632  0016B6  0E9F               	movlw	low timer0_int_handler@msgtype
  6633  0016B8  0100               	movlb	0	; () banked
  6634  0016BA  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6635  0016BC  0100               	movlb	0	; () banked
  6636  0016BE  0E00               	movlw	high timer0_int_handler@val
  6637  0016C0  0100               	movlb	0	; () banked
  6638  0016C2  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6639  0016C4  0100               	movlb	0	; () banked
  6640  0016C6  0EA1               	movlw	low timer0_int_handler@val
  6641  0016C8  0100               	movlb	0	; () banked
  6642  0016CA  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6643  0016CC  0E02               	movlw	2
  6644  0016CE  EC94  F00D         	call	_FromMainHigh_recvmsg
  6645  0016D2  0100               	movlb	0	; () banked
  6646  0016D4  6F9D               	movwf	timer0_int_handler@length& (0+255),b
  6647  0016D6  0100               	movlb	0	; () banked
  6648  0016D8  6B9E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6649  0016DA  0100               	movlb	0	; () banked
  6650  0016DC  BF9D               	btfsc	timer0_int_handler@length& (0+255),7,b
  6651  0016DE  079E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6652                           
  6653                           ; BSR set to: 0
  6654                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6655  0016E0  0100               	movlb	0	; () banked
  6656  0016E2  519D               	movf	timer0_int_handler@length& (0+255),w,b
  6657  0016E4  0A02               	xorlw	2
  6658  0016E6  119E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6659  0016E8  A4D8               	btfss	status,2,c
  6660  0016EA  0012               	return	
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6664  0016EC  0E0A               	movlw	10
  6665  0016EE  0100               	movlb	0	; () banked
  6666  0016F0  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6667  0016F2  0100               	movlb	0	; () banked
  6668  0016F4  0E00               	movlw	high timer0_int_handler@val
  6669  0016F6  0100               	movlb	0	; () banked
  6670  0016F8  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6671  0016FA  0100               	movlb	0	; () banked
  6672  0016FC  0EA1               	movlw	low timer0_int_handler@val
  6673  0016FE  0100               	movlb	0	; () banked
  6674  001700  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6675  001702  0E02               	movlw	2
  6676  001704  EC28  F00E         	call	_ToMainHigh_sendmsg
  6677  001708  0012               	return	
  6678  00170A                     __end_of_timer0_int_handler:
  6679                           	opt stack 0
  6680                           pclatu	equ	0xFFB
  6681                           pclath	equ	0xFFA
  6682                           tblptru	equ	0xFF8
  6683                           tblptrh	equ	0xFF7
  6684                           tblptrl	equ	0xFF6
  6685                           tablat	equ	0xFF5
  6686                           prodh	equ	0xFF4
  6687                           prodl	equ	0xFF3
  6688                           intcon	equ	0xFF2
  6689                           postinc0	equ	0xFEE
  6690                           fsr0h	equ	0xFEA
  6691                           fsr0l	equ	0xFE9
  6692                           wreg	equ	0xFE8
  6693                           indf1	equ	0xFE7
  6694                           fsr1h	equ	0xFE2
  6695                           fsr1l	equ	0xFE1
  6696                           bsr	equ	0xFE0
  6697                           indf2	equ	0xFDF
  6698                           postinc2	equ	0xFDE
  6699                           postdec2	equ	0xFDD
  6700                           fsr2h	equ	0xFDA
  6701                           fsr2l	equ	0xFD9
  6702                           status	equ	0xFD8
  6703                           
  6704 ;; *************** function _WriteTimer0 *****************
  6705 ;; Defined at:
  6706 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  timer0          2    0[BANK0 ] unsigned int 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  timer           2    2[BANK0 ] struct Timers
  6711 ;; Return value:  Size  Location     Type
  6712 ;;		None               void
  6713 ;; Registers used:
  6714 ;;		None
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6720 ;;      Params:         0       2       0       0       0
  6721 ;;      Locals:         0       2       0       0       0
  6722 ;;      Temps:          0       0       0       0       0
  6723 ;;      Totals:         0       4       0       0       0
  6724 ;;Total ram usage:        4 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_timer0_int_handler
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text44
  6734  001DBA                     __ptext44:
  6735                           	opt stack 0
  6736  001DBA                     _WriteTimer0:
  6737                           	opt stack 17
  6738                           
  6739                           ;incstack = 0
  6740  001DBA  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6741  001DBE  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6742  001DC2  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6743  001DC6  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6744  001DCA  0012               	return	
  6745  001DCC                     __end_of_WriteTimer0:
  6746                           	opt stack 0
  6747                           pclatu	equ	0xFFB
  6748                           pclath	equ	0xFFA
  6749                           tblptru	equ	0xFF8
  6750                           tblptrh	equ	0xFF7
  6751                           tblptrl	equ	0xFF6
  6752                           tablat	equ	0xFF5
  6753                           prodh	equ	0xFF4
  6754                           prodl	equ	0xFF3
  6755                           intcon	equ	0xFF2
  6756                           postinc0	equ	0xFEE
  6757                           fsr0h	equ	0xFEA
  6758                           fsr0l	equ	0xFE9
  6759                           wreg	equ	0xFE8
  6760                           indf1	equ	0xFE7
  6761                           fsr1h	equ	0xFE2
  6762                           fsr1l	equ	0xFE1
  6763                           bsr	equ	0xFE0
  6764                           indf2	equ	0xFDF
  6765                           postinc2	equ	0xFDE
  6766                           postdec2	equ	0xFDD
  6767                           fsr2h	equ	0xFDA
  6768                           fsr2l	equ	0xFD9
  6769                           status	equ	0xFD8
  6770                           
  6771 ;; *************** function _i2c_int_handler *****************
  6772 ;; Defined at:
  6773 ;;		line 103 in file "../src/my_i2c.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;		None
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  msg_type        1   39[BANK0 ] unsigned char 
  6778 ;;  length          1   30[BANK0 ] unsigned char 
  6779 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  6780 ;;  data_read       1   41[BANK0 ] unsigned char 
  6781 ;;  msg_ready       1   40[BANK0 ] unsigned char 
  6782 ;;  msg_to_send     1   38[BANK0 ] unsigned char 
  6783 ;;  i2c_data        1   37[BANK0 ] unsigned char 
  6784 ;;  need_data       1   36[BANK0 ] unsigned char 
  6785 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6786 ;;  data_written    1   34[BANK0 ] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;		None               void
  6789 ;; Registers used:
  6790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6796 ;;      Params:         0       0       0       0       0
  6797 ;;      Locals:         0      12       0       0       0
  6798 ;;      Temps:          0       1       0       0       0
  6799 ;;      Totals:         0      13       0       0       0
  6800 ;;Total ram usage:       13 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    3
  6803 ;; This function calls:
  6804 ;;		_FromMainHigh_recvmsg
  6805 ;;		_ToMainHigh_sendmsg
  6806 ;;		_blip4
  6807 ;;		_handle_start
  6808 ;;		_start_i2c_slave_reply
  6809 ;;		i2_blip1
  6810 ;;		i2_blip3
  6811 ;; This function is called by:
  6812 ;;		_InterruptHandlerHigh
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text45
  6817  0000C4                     __ptext45:
  6818                           	opt stack 0
  6819  0000C4                     _i2c_int_handler:
  6820                           	opt stack 15
  6821                           
  6822                           ;my_i2c.c: 104: blip1();
  6823                           
  6824                           ;incstack = 0
  6825  0000C4  EC16  F00F         	call	i2_blip1	;wreg free
  6826                           
  6827                           ;my_i2c.c: 108: unsigned char i2c_data;
  6828                           ;my_i2c.c: 109: unsigned char data_read = 0;
  6829  0000C8  0E00               	movlw	0
  6830  0000CA  0100               	movlb	0	; () banked
  6831  0000CC  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;my_i2c.c: 110: unsigned char data_written = 0;
  6835  0000CE  0E00               	movlw	0
  6836  0000D0  0100               	movlb	0	; () banked
  6837  0000D2  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;my_i2c.c: 111: unsigned char msg_ready = 0;
  6841  0000D4  0E00               	movlw	0
  6842  0000D6  0100               	movlb	0	; () banked
  6843  0000D8  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;my_i2c.c: 112: unsigned char msg_to_send = 0;
  6847  0000DA  0E00               	movlw	0
  6848  0000DC  0100               	movlb	0	; () banked
  6849  0000DE  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;my_i2c.c: 113: unsigned char overrun_error = 0;
  6853  0000E0  0E00               	movlw	0
  6854  0000E2  0100               	movlb	0	; () banked
  6855  0000E4  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;my_i2c.c: 114: unsigned char error_buf[3];
  6859                           ;my_i2c.c: 115: unsigned char need_data = 1;
  6860  0000E6  0E01               	movlw	1
  6861  0000E8  0100               	movlb	0	; () banked
  6862  0000EA  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;my_i2c.c: 118: if (SSPCON1bits.SSPOV == 1) {
  6866  0000EC  ACC6               	btfss	4038,6,c	;volatile
  6867  0000EE  D024               	goto	i2l3758
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;my_i2c.c: 119: SSPCON1bits.SSPOV = 0;
  6871  0000F0  9CC6               	bcf	4038,6,c	;volatile
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;my_i2c.c: 123: ic_ptr->status = 0x5;
  6875  0000F2  0100               	movlb	0	; () banked
  6876  0000F4  EE20 F021          	lfsr	2,33
  6877  0000F8  0100               	movlb	0	; () banked
  6878  0000FA  51C5               	movf	_ic_ptr& (0+255),w,b
  6879  0000FC  26D9               	addwf	fsr2l,f,c
  6880  0000FE  0100               	movlb	0	; () banked
  6881  000100  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6882  000102  22DA               	addwfc	fsr2h,f,c
  6883  000104  0E05               	movlw	5
  6884  000106  6EDF               	movwf	indf2,c
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;my_i2c.c: 124: overrun_error = 1;
  6888  000108  0E01               	movlw	1
  6889  00010A  0100               	movlb	0	; () banked
  6890  00010C  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;my_i2c.c: 125: ic_ptr->error_count++;
  6894  00010E  0100               	movlb	0	; () banked
  6895  000110  EE20 F023          	lfsr	2,35
  6896  000114  0100               	movlb	0	; () banked
  6897  000116  51C5               	movf	_ic_ptr& (0+255),w,b
  6898  000118  26D9               	addwf	fsr2l,f,c
  6899  00011A  0100               	movlb	0	; () banked
  6900  00011C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6901  00011E  22DA               	addwfc	fsr2h,f,c
  6902  000120  2ADF               	incf	indf2,f,c
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;my_i2c.c: 126: ic_ptr->error_code = 0x4;
  6906  000122  0100               	movlb	0	; () banked
  6907  000124  EE20 F022          	lfsr	2,34
  6908  000128  0100               	movlb	0	; () banked
  6909  00012A  51C5               	movf	_ic_ptr& (0+255),w,b
  6910  00012C  26D9               	addwf	fsr2l,f,c
  6911  00012E  0100               	movlb	0	; () banked
  6912  000130  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6913  000132  22DA               	addwfc	fsr2h,f,c
  6914  000134  0E04               	movlw	4
  6915  000136  6EDF               	movwf	indf2,c
  6916  000138                     i2l3758:
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;my_i2c.c: 127: }
  6920                           ;my_i2c.c: 129: if (SSPSTATbits.BF == 1) {
  6921  000138  A0C7               	btfss	4039,0,c	;volatile
  6922  00013A  D005               	goto	i2l3764
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;my_i2c.c: 130: i2c_data = SSPBUF;
  6926  00013C  CFC9 F0A5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;my_i2c.c: 131: data_read = 1;
  6930  000140  0E01               	movlw	1
  6931  000142  0100               	movlb	0	; () banked
  6932  000144  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6933  000146                     i2l3764:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;my_i2c.c: 132: }
  6937                           ;my_i2c.c: 134: if (!overrun_error) {
  6938  000146  0100               	movlb	0	; () banked
  6939  000148  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6940  00014A  D1D2               	goto	i2l295
  6941  00014C  D1BB               	goto	i2l3864
  6942  00014E                     i2l297:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;my_i2c.c: 137: {
  6946                           ;my_i2c.c: 139: if (SSPSTATbits.S == 1) {
  6947  00014E  A6C7               	btfss	4039,3,c	;volatile
  6948  000150  D1CF               	goto	i2l295
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;my_i2c.c: 140: handle_start(data_read);
  6952  000152  0100               	movlb	0	; () banked
  6953  000154  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  6954  000156  ECFA  F008         	call	_handle_start
  6955                           
  6956                           ;my_i2c.c: 142: if (ic_ptr->status == 0x8) {
  6957  00015A  0100               	movlb	0	; () banked
  6958  00015C  EE20 F021          	lfsr	2,33
  6959  000160  0100               	movlb	0	; () banked
  6960  000162  51C5               	movf	_ic_ptr& (0+255),w,b
  6961  000164  26D9               	addwf	fsr2l,f,c
  6962  000166  0100               	movlb	0	; () banked
  6963  000168  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6964  00016A  22DA               	addwfc	fsr2h,f,c
  6965  00016C  0E08               	movlw	8
  6966  00016E  62DF               	cpfseq	indf2,c
  6967  000170  D1BF               	goto	i2l295
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;my_i2c.c: 143: data_read = 0;
  6971  000172  0E00               	movlw	0
  6972  000174  0100               	movlb	0	; () banked
  6973  000176  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  6974                           
  6975                           ;my_i2c.c: 144: msg_to_send = 1;
  6976  000178  0E01               	movlw	1
  6977  00017A  0100               	movlb	0	; () banked
  6978  00017C  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6979  00017E  D1B8               	goto	i2l295
  6980  000180                     i2l301:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;my_i2c.c: 150: {
  6984                           ;my_i2c.c: 153: if (SSPSTATbits.P == 1) {
  6985  000180  A8C7               	btfss	4039,4,c	;volatile
  6986  000182  D02A               	goto	i2l3784
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;my_i2c.c: 156: ic_ptr->event_count++;
  6990  000184  0100               	movlb	0	; () banked
  6991  000186  EE20 F020          	lfsr	2,32
  6992  00018A  0100               	movlb	0	; () banked
  6993  00018C  51C5               	movf	_ic_ptr& (0+255),w,b
  6994  00018E  26D9               	addwf	fsr2l,f,c
  6995  000190  0100               	movlb	0	; () banked
  6996  000192  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6997  000194  22DA               	addwfc	fsr2h,f,c
  6998  000196  2ADF               	incf	indf2,f,c
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;my_i2c.c: 157: if (data_read) {
  7002  000198  0100               	movlb	0	; () banked
  7003  00019A  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7004  00019C  B4D8               	btfsc	status,2,c
  7005  00019E  D187               	goto	L9
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;my_i2c.c: 158: if (SSPSTATbits.D_A == 0) {
  7009  0001A0  BAC7               	btfsc	4039,5,c	;volatile
  7010  0001A2  D004               	goto	i2l3782
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;my_i2c.c: 159: msg_ready = 1;
  7014  0001A4  0E01               	movlw	1
  7015  0001A6  0100               	movlb	0	; () banked
  7016  0001A8  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7017                           
  7018                           ;my_i2c.c: 160: } else {
  7019  0001AA  D181               	goto	L9
  7020  0001AC                     i2l3782:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;my_i2c.c: 161: ic_ptr->error_count++;
  7024  0001AC  0100               	movlb	0	; () banked
  7025  0001AE  EE20 F023          	lfsr	2,35
  7026  0001B2  0100               	movlb	0	; () banked
  7027  0001B4  51C5               	movf	_ic_ptr& (0+255),w,b
  7028  0001B6  26D9               	addwf	fsr2l,f,c
  7029  0001B8  0100               	movlb	0	; () banked
  7030  0001BA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7031  0001BC  22DA               	addwfc	fsr2h,f,c
  7032  0001BE  2ADF               	incf	indf2,f,c
  7033                           
  7034                           ;my_i2c.c: 162: ic_ptr->error_code = 0x6;
  7035  0001C0  0100               	movlb	0	; () banked
  7036  0001C2  EE20 F022          	lfsr	2,34
  7037  0001C6  0100               	movlb	0	; () banked
  7038  0001C8  51C5               	movf	_ic_ptr& (0+255),w,b
  7039  0001CA  26D9               	addwf	fsr2l,f,c
  7040  0001CC  0100               	movlb	0	; () banked
  7041  0001CE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7042  0001D0  22DA               	addwfc	fsr2h,f,c
  7043  0001D2  0E06               	movlw	6
  7044  0001D4  6EDF               	movwf	indf2,c
  7045                           
  7046                           ; BSR set to: 0
  7047  0001D6  D16B               	goto	L9
  7048  0001D8                     i2l3784:
  7049                           
  7050                           ; BSR set to: 0
  7051  0001D8  0100               	movlb	0	; () banked
  7052  0001DA  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7053  0001DC  B4D8               	btfsc	status,2,c
  7054  0001DE  D188               	goto	i2l295
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;my_i2c.c: 167: ic_ptr->event_count++;
  7058  0001E0  0100               	movlb	0	; () banked
  7059  0001E2  EE20 F020          	lfsr	2,32
  7060  0001E6  0100               	movlb	0	; () banked
  7061  0001E8  51C5               	movf	_ic_ptr& (0+255),w,b
  7062  0001EA  26D9               	addwf	fsr2l,f,c
  7063  0001EC  0100               	movlb	0	; () banked
  7064  0001EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7065  0001F0  22DA               	addwfc	fsr2h,f,c
  7066  0001F2  2ADF               	incf	indf2,f,c
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;my_i2c.c: 168: if (SSPSTATbits.D_A == 0)
  7070  0001F4  BAC7               	btfsc	4039,5,c	;volatile
  7071  0001F6  D02A               	goto	i2l3800
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;my_i2c.c: 169: {
  7075                           ;my_i2c.c: 170: if (SSPSTATbits.R_W == 0)
  7076  0001F8  B4C7               	btfsc	4039,2,c	;volatile
  7077  0001FA  D00B               	goto	i2l3794
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;my_i2c.c: 171: {
  7081                           ;my_i2c.c: 172: ic_ptr->status = 0x7;
  7082  0001FC  0100               	movlb	0	; () banked
  7083  0001FE  EE20 F021          	lfsr	2,33
  7084  000202  0100               	movlb	0	; () banked
  7085  000204  51C5               	movf	_ic_ptr& (0+255),w,b
  7086  000206  26D9               	addwf	fsr2l,f,c
  7087  000208  0100               	movlb	0	; () banked
  7088  00020A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7089  00020C  22DA               	addwfc	fsr2h,f,c
  7090  00020E  0E07               	movlw	7
  7091  000210  D080               	goto	L6
  7092  000212                     i2l3794:
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;my_i2c.c: 174: else
  7096                           ;my_i2c.c: 175: {
  7097                           ;my_i2c.c: 176: ic_ptr->status = 0x8;
  7098  000212  0100               	movlb	0	; () banked
  7099  000214  EE20 F021          	lfsr	2,33
  7100  000218  0100               	movlb	0	; () banked
  7101  00021A  51C5               	movf	_ic_ptr& (0+255),w,b
  7102  00021C  26D9               	addwf	fsr2l,f,c
  7103  00021E  0100               	movlb	0	; () banked
  7104  000220  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7105  000222  22DA               	addwfc	fsr2h,f,c
  7106  000224  0E08               	movlw	8
  7107  000226  6EDF               	movwf	indf2,c
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;my_i2c.c: 177: msg_to_send = 1;
  7111  000228  0E01               	movlw	1
  7112  00022A  0100               	movlb	0	; () banked
  7113  00022C  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;my_i2c.c: 179: data_read = 0;
  7117  00022E  0E00               	movlw	0
  7118  000230  0100               	movlb	0	; () banked
  7119  000232  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7120                           
  7121                           ;my_i2c.c: 180: ic_ptr->outbufind = 0;
  7122  000234  0100               	movlb	0	; () banked
  7123  000236  EE20 F01E          	lfsr	2,30
  7124  00023A  0100               	movlb	0	; () banked
  7125  00023C  51C5               	movf	_ic_ptr& (0+255),w,b
  7126  00023E  26D9               	addwf	fsr2l,f,c
  7127  000240  0100               	movlb	0	; () banked
  7128  000242  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7129  000244  22DA               	addwfc	fsr2h,f,c
  7130  000246  0E00               	movlw	0
  7131  000248  6EDF               	movwf	indf2,c
  7132                           
  7133                           ;my_i2c.c: 181: goto l;
  7134  00024A  D020               	goto	i2l3802
  7135  00024C                     i2l3800:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;my_i2c.c: 184: else
  7139                           ;my_i2c.c: 185: {
  7140                           ;my_i2c.c: 186: ic_ptr->error_count++;
  7141  00024C  0100               	movlb	0	; () banked
  7142  00024E  EE20 F023          	lfsr	2,35
  7143  000252  0100               	movlb	0	; () banked
  7144  000254  51C5               	movf	_ic_ptr& (0+255),w,b
  7145  000256  26D9               	addwf	fsr2l,f,c
  7146  000258  0100               	movlb	0	; () banked
  7147  00025A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7148  00025C  22DA               	addwfc	fsr2h,f,c
  7149  00025E  2ADF               	incf	indf2,f,c
  7150                           
  7151                           ;my_i2c.c: 187: ic_ptr->status = 0x5;
  7152  000260  0100               	movlb	0	; () banked
  7153  000262  EE20 F021          	lfsr	2,33
  7154  000266  0100               	movlb	0	; () banked
  7155  000268  51C5               	movf	_ic_ptr& (0+255),w,b
  7156  00026A  26D9               	addwf	fsr2l,f,c
  7157  00026C  0100               	movlb	0	; () banked
  7158  00026E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7159  000270  22DA               	addwfc	fsr2h,f,c
  7160  000272  0E05               	movlw	5
  7161  000274  6EDF               	movwf	indf2,c
  7162                           
  7163                           ;my_i2c.c: 188: ic_ptr->error_code = 0x6;
  7164  000276  0100               	movlb	0	; () banked
  7165  000278  EE20 F022          	lfsr	2,34
  7166  00027C  0100               	movlb	0	; () banked
  7167  00027E  51C5               	movf	_ic_ptr& (0+255),w,b
  7168  000280  26D9               	addwf	fsr2l,f,c
  7169  000282  0100               	movlb	0	; () banked
  7170  000284  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7171  000286  22DA               	addwfc	fsr2h,f,c
  7172  000288  0E06               	movlw	6
  7173  00028A  D043               	goto	L6
  7174  00028C                     i2l3802:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;my_i2c.c: 195: {
  7178                           ;my_i2c.c: 196: blip4();
  7179  00028C  EC1A  F00F         	call	_blip4	;wreg free
  7180                           
  7181                           ;my_i2c.c: 198: if (ic_ptr->outbufind < 14) {
  7182  000290  0100               	movlb	0	; () banked
  7183  000292  EE20 F01E          	lfsr	2,30
  7184  000296  0100               	movlb	0	; () banked
  7185  000298  51C5               	movf	_ic_ptr& (0+255),w,b
  7186  00029A  26D9               	addwf	fsr2l,f,c
  7187  00029C  0100               	movlb	0	; () banked
  7188  00029E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7189  0002A0  22DA               	addwfc	fsr2h,f,c
  7190  0002A2  50DF               	movf	indf2,w,c
  7191  0002A4  0100               	movlb	0	; () banked
  7192  0002A6  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7193  0002A8  0E0E               	movlw	14
  7194  0002AA  0100               	movlb	0	; () banked
  7195  0002AC  5D9D               	subwf	??_i2c_int_handler& (0+255),w,b
  7196  0002AE  B0D8               	btfsc	status,0,c
  7197  0002B0  D02D               	goto	i2l3814
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;my_i2c.c: 199: blip4();
  7201  0002B2  EC1A  F00F         	call	_blip4	;wreg free
  7202                           
  7203                           ;my_i2c.c: 200: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7204  0002B6  0100               	movlb	0	; () banked
  7205  0002B8  EE20 F01E          	lfsr	2,30
  7206  0002BC  0100               	movlb	0	; () banked
  7207  0002BE  51C5               	movf	_ic_ptr& (0+255),w,b
  7208  0002C0  26D9               	addwf	fsr2l,f,c
  7209  0002C2  0100               	movlb	0	; () banked
  7210  0002C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7211  0002C6  22DA               	addwfc	fsr2h,f,c
  7212  0002C8  50DF               	movf	indf2,w,c
  7213  0002CA  0100               	movlb	0	; () banked
  7214  0002CC  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7215  0002CE  0100               	movlb	0	; () banked
  7216  0002D0  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7217  0002D2  0D01               	mullw	1
  7218  0002D4  0E10               	movlw	16
  7219  0002D6  26F3               	addwf	prodl,f,c
  7220  0002D8  0E00               	movlw	0
  7221  0002DA  22F4               	addwfc	prodh,f,c
  7222  0002DC  50F3               	movf	prodl,w,c
  7223  0002DE  0100               	movlb	0	; () banked
  7224  0002E0  25C5               	addwf	_ic_ptr& (0+255),w,b
  7225  0002E2  6ED9               	movwf	fsr2l,c
  7226  0002E4  50F4               	movf	prodh,w,c
  7227  0002E6  0100               	movlb	0	; () banked
  7228  0002E8  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7229  0002EA  6EDA               	movwf	fsr2h,c
  7230  0002EC  50DF               	movf	indf2,w,c
  7231  0002EE  6EC9               	movwf	4041,c	;volatile
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;my_i2c.c: 201: ic_ptr->outbufind++;
  7235  0002F0  0100               	movlb	0	; () banked
  7236  0002F2  EE20 F01E          	lfsr	2,30
  7237  0002F6  0100               	movlb	0	; () banked
  7238  0002F8  51C5               	movf	_ic_ptr& (0+255),w,b
  7239  0002FA  26D9               	addwf	fsr2l,f,c
  7240  0002FC  0100               	movlb	0	; () banked
  7241  0002FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7242  000300  22DA               	addwfc	fsr2h,f,c
  7243  000302  2ADF               	incf	indf2,f,c
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;my_i2c.c: 202: data_written = 1;
  7247  000304  0E01               	movlw	1
  7248  000306  0100               	movlb	0	; () banked
  7249  000308  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  7250                           
  7251                           ;my_i2c.c: 203: } else {
  7252  00030A  D0F2               	goto	i2l295
  7253  00030C                     i2l3814:
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;my_i2c.c: 204: blip3();
  7257  00030C  EC12  F00F         	call	i2_blip3	;wreg free
  7258  000310  D0CE               	goto	L9
  7259  000312                     L6:
  7260  000312  6EDF               	movwf	indf2,c
  7261  000314  D0ED               	goto	i2l295
  7262  000316                     i2l316:
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;my_i2c.c: 211: {
  7266                           ;my_i2c.c: 213: if (SSPSTATbits.P == 1) {
  7267  000316  A8C7               	btfss	4039,4,c	;volatile
  7268  000318  D05A               	goto	i2l3836
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;my_i2c.c: 216: ic_ptr->event_count++;
  7272  00031A  0100               	movlb	0	; () banked
  7273  00031C  EE20 F020          	lfsr	2,32
  7274  000320  0100               	movlb	0	; () banked
  7275  000322  51C5               	movf	_ic_ptr& (0+255),w,b
  7276  000324  26D9               	addwf	fsr2l,f,c
  7277  000326  0100               	movlb	0	; () banked
  7278  000328  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7279  00032A  22DA               	addwfc	fsr2h,f,c
  7280  00032C  2ADF               	incf	indf2,f,c
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;my_i2c.c: 217: if (data_read) {
  7284  00032E  0100               	movlb	0	; () banked
  7285  000330  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7286  000332  B4D8               	btfsc	status,2,c
  7287  000334  D048               	goto	i2l3832
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;my_i2c.c: 218: if (SSPSTATbits.D_A == 1) {
  7291  000336  AAC7               	btfss	4039,5,c	;volatile
  7292  000338  D025               	goto	i2l3830
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;my_i2c.c: 219: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7296  00033A  0100               	movlb	0	; () banked
  7297  00033C  EE20 F00E          	lfsr	2,14
  7298  000340  0100               	movlb	0	; () banked
  7299  000342  51C5               	movf	_ic_ptr& (0+255),w,b
  7300  000344  26D9               	addwf	fsr2l,f,c
  7301  000346  0100               	movlb	0	; () banked
  7302  000348  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7303  00034A  22DA               	addwfc	fsr2h,f,c
  7304  00034C  50DF               	movf	indf2,w,c
  7305  00034E  0100               	movlb	0	; () banked
  7306  000350  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7307  000352  0100               	movlb	0	; () banked
  7308  000354  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7309  000356  0D01               	mullw	1
  7310  000358  50F3               	movf	prodl,w,c
  7311  00035A  0100               	movlb	0	; () banked
  7312  00035C  25C5               	addwf	_ic_ptr& (0+255),w,b
  7313  00035E  6ED9               	movwf	fsr2l,c
  7314  000360  50F4               	movf	prodh,w,c
  7315  000362  0100               	movlb	0	; () banked
  7316  000364  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7317  000366  6EDA               	movwf	fsr2h,c
  7318  000368  0100               	movlb	0	; () banked
  7319  00036A  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;my_i2c.c: 220: ic_ptr->buflen++;
  7323  00036E  0100               	movlb	0	; () banked
  7324  000370  EE20 F00E          	lfsr	2,14
  7325  000374  0100               	movlb	0	; () banked
  7326  000376  51C5               	movf	_ic_ptr& (0+255),w,b
  7327  000378  26D9               	addwf	fsr2l,f,c
  7328  00037A  0100               	movlb	0	; () banked
  7329  00037C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7330  00037E  22DA               	addwfc	fsr2h,f,c
  7331  000380  2ADF               	incf	indf2,f,c
  7332  000382  D021               	goto	i2l3832
  7333  000384                     i2l3830:
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;my_i2c.c: 223: ic_ptr->error_count++;
  7337  000384  0100               	movlb	0	; () banked
  7338  000386  EE20 F023          	lfsr	2,35
  7339  00038A  0100               	movlb	0	; () banked
  7340  00038C  51C5               	movf	_ic_ptr& (0+255),w,b
  7341  00038E  26D9               	addwf	fsr2l,f,c
  7342  000390  0100               	movlb	0	; () banked
  7343  000392  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7344  000394  22DA               	addwfc	fsr2h,f,c
  7345  000396  2ADF               	incf	indf2,f,c
  7346                           
  7347                           ;my_i2c.c: 224: ic_ptr->error_code = 0x6;
  7348  000398  0100               	movlb	0	; () banked
  7349  00039A  EE20 F022          	lfsr	2,34
  7350  00039E  0100               	movlb	0	; () banked
  7351  0003A0  51C5               	movf	_ic_ptr& (0+255),w,b
  7352  0003A2  26D9               	addwf	fsr2l,f,c
  7353  0003A4  0100               	movlb	0	; () banked
  7354  0003A6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7355  0003A8  22DA               	addwfc	fsr2h,f,c
  7356  0003AA  0E06               	movlw	6
  7357  0003AC  6EDF               	movwf	indf2,c
  7358                           
  7359                           ;my_i2c.c: 225: ic_ptr->status = 0x5;
  7360  0003AE  0100               	movlb	0	; () banked
  7361  0003B0  EE20 F021          	lfsr	2,33
  7362  0003B4  0100               	movlb	0	; () banked
  7363  0003B6  51C5               	movf	_ic_ptr& (0+255),w,b
  7364  0003B8  26D9               	addwf	fsr2l,f,c
  7365  0003BA  0100               	movlb	0	; () banked
  7366  0003BC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7367  0003BE  22DA               	addwfc	fsr2h,f,c
  7368  0003C0  0E05               	movlw	5
  7369  0003C2  6EDF               	movwf	indf2,c
  7370  0003C4  D074               	goto	L9
  7371  0003C6                     i2l3832:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;my_i2c.c: 228: msg_ready = 1;
  7375  0003C6  0E01               	movlw	1
  7376  0003C8  0100               	movlb	0	; () banked
  7377  0003CA  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7378                           
  7379                           ; BSR set to: 0
  7380  0003CC  D070               	goto	L9
  7381  0003CE                     i2l3836:
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;my_i2c.c: 232: else if (data_read)
  7385  0003CE  0100               	movlb	0	; () banked
  7386  0003D0  51A9               	movf	i2c_int_handler@data_read& (0+255),w,b
  7387  0003D2  B4D8               	btfsc	status,2,c
  7388  0003D4  D08D               	goto	i2l295
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;my_i2c.c: 233: {
  7392                           ;my_i2c.c: 235: ic_ptr->event_count++;
  7393  0003D6  0100               	movlb	0	; () banked
  7394  0003D8  EE20 F020          	lfsr	2,32
  7395  0003DC  0100               	movlb	0	; () banked
  7396  0003DE  51C5               	movf	_ic_ptr& (0+255),w,b
  7397  0003E0  26D9               	addwf	fsr2l,f,c
  7398  0003E2  0100               	movlb	0	; () banked
  7399  0003E4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7400  0003E6  22DA               	addwfc	fsr2h,f,c
  7401  0003E8  2ADF               	incf	indf2,f,c
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;my_i2c.c: 236: if (SSP1STATbits.D_A == 1)
  7405  0003EA  AAC7               	btfss	4039,5,c	;volatile
  7406  0003EC  D01E               	goto	i2l324
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;my_i2c.c: 237: {
  7410                           ;my_i2c.c: 238: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7411  0003EE  0100               	movlb	0	; () banked
  7412  0003F0  EE20 F00E          	lfsr	2,14
  7413  0003F4  0100               	movlb	0	; () banked
  7414  0003F6  51C5               	movf	_ic_ptr& (0+255),w,b
  7415  0003F8  26D9               	addwf	fsr2l,f,c
  7416  0003FA  0100               	movlb	0	; () banked
  7417  0003FC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7418  0003FE  22DA               	addwfc	fsr2h,f,c
  7419  000400  50DF               	movf	indf2,w,c
  7420  000402  0100               	movlb	0	; () banked
  7421  000404  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7422  000406  0100               	movlb	0	; () banked
  7423  000408  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7424  00040A  0D01               	mullw	1
  7425  00040C  50F3               	movf	prodl,w,c
  7426  00040E  0100               	movlb	0	; () banked
  7427  000410  25C5               	addwf	_ic_ptr& (0+255),w,b
  7428  000412  6ED9               	movwf	fsr2l,c
  7429  000414  50F4               	movf	prodh,w,c
  7430  000416  0100               	movlb	0	; () banked
  7431  000418  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7432  00041A  6EDA               	movwf	fsr2h,c
  7433  00041C  0100               	movlb	0	; () banked
  7434  00041E  C0A5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;my_i2c.c: 239: ic_ptr->buflen++;
  7438  000422  0100               	movlb	0	; () banked
  7439  000424  EE20 F00E          	lfsr	2,14
  7440  000428  D03A               	goto	L7
  7441  00042A                     i2l324:
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;my_i2c.c: 241: else
  7445                           ;my_i2c.c: 242: {
  7446                           ;my_i2c.c: 243: if (SSPSTATbits.R_W == 1)
  7447  00042A  A4C7               	btfss	4039,2,c	;volatile
  7448  00042C  D6BF               	goto	i2l3782
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;my_i2c.c: 244: {
  7452                           ;my_i2c.c: 246: ic_ptr->status = 0x8;
  7453  00042E  0100               	movlb	0	; () banked
  7454  000430  EE20 F021          	lfsr	2,33
  7455  000434  0100               	movlb	0	; () banked
  7456  000436  51C5               	movf	_ic_ptr& (0+255),w,b
  7457  000438  26D9               	addwf	fsr2l,f,c
  7458  00043A  0100               	movlb	0	; () banked
  7459  00043C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7460  00043E  22DA               	addwfc	fsr2h,f,c
  7461  000440  0E08               	movlw	8
  7462  000442  6EDF               	movwf	indf2,c
  7463                           
  7464                           ;my_i2c.c: 248: ic_ptr->outbufind = 0;
  7465  000444  0100               	movlb	0	; () banked
  7466  000446  EE20 F01E          	lfsr	2,30
  7467  00044A  0100               	movlb	0	; () banked
  7468  00044C  51C5               	movf	_ic_ptr& (0+255),w,b
  7469  00044E  26D9               	addwf	fsr2l,f,c
  7470  000450  0100               	movlb	0	; () banked
  7471  000452  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7472  000454  22DA               	addwfc	fsr2h,f,c
  7473  000456  0E00               	movlw	0
  7474  000458  6EDF               	movwf	indf2,c
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;my_i2c.c: 249: msg_ready = 1;
  7478  00045A  0E01               	movlw	1
  7479  00045C  0100               	movlb	0	; () banked
  7480  00045E  6FA8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 250: msg_to_send = 1;
  7484  000460  0E01               	movlw	1
  7485  000462  0100               	movlb	0	; () banked
  7486  000464  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;my_i2c.c: 252: data_read = 0;
  7490  000466  0E00               	movlw	0
  7491  000468  0100               	movlb	0	; () banked
  7492  00046A  6FA9               	movwf	i2c_int_handler@data_read& (0+255),b
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;my_i2c.c: 253: ic_ptr->outbufind = 0;
  7496  00046C  0100               	movlb	0	; () banked
  7497  00046E  EE20 F01E          	lfsr	2,30
  7498  000472  0100               	movlb	0	; () banked
  7499  000474  51C5               	movf	_ic_ptr& (0+255),w,b
  7500  000476  26D9               	addwf	fsr2l,f,c
  7501  000478  0100               	movlb	0	; () banked
  7502  00047A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7503  00047C  22DA               	addwfc	fsr2h,f,c
  7504  00047E  0E00               	movlw	0
  7505  000480  6EDF               	movwf	indf2,c
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;my_i2c.c: 254: SSPBUF = ic_ptr->outbuffer[0];
  7509  000482  0100               	movlb	0	; () banked
  7510  000484  EE20 F010          	lfsr	2,16
  7511  000488  0100               	movlb	0	; () banked
  7512  00048A  51C5               	movf	_ic_ptr& (0+255),w,b
  7513  00048C  26D9               	addwf	fsr2l,f,c
  7514  00048E  0100               	movlb	0	; () banked
  7515  000490  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7516  000492  22DA               	addwfc	fsr2h,f,c
  7517  000494  50DF               	movf	indf2,w,c
  7518  000496  6EC9               	movwf	4041,c	;volatile
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;my_i2c.c: 255: ic_ptr->outbufind++;
  7522  000498  0100               	movlb	0	; () banked
  7523  00049A  EE20 F01E          	lfsr	2,30
  7524  00049E                     L7:
  7525  00049E  0100               	movlb	0	; () banked
  7526  0004A0  51C5               	movf	_ic_ptr& (0+255),w,b
  7527  0004A2  26D9               	addwf	fsr2l,f,c
  7528  0004A4  0100               	movlb	0	; () banked
  7529  0004A6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7530  0004A8  22DA               	addwfc	fsr2h,f,c
  7531  0004AA  2ADF               	incf	indf2,f,c
  7532                           
  7533                           ;my_i2c.c: 257: }
  7534  0004AC  D021               	goto	i2l295
  7535  0004AE                     L9:
  7536                           
  7537                           ;my_i2c.c: 262: ic_ptr->status = 0x5;
  7538  0004AE  0100               	movlb	0	; () banked
  7539  0004B0  EE20 F021          	lfsr	2,33
  7540  0004B4  0100               	movlb	0	; () banked
  7541  0004B6  51C5               	movf	_ic_ptr& (0+255),w,b
  7542  0004B8  26D9               	addwf	fsr2l,f,c
  7543  0004BA  0100               	movlb	0	; () banked
  7544  0004BC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7545  0004BE  22DA               	addwfc	fsr2h,f,c
  7546  0004C0  0E05               	movlw	5
  7547  0004C2  D727               	goto	L6
  7548  0004C4                     i2l3864:
  7549                           
  7550                           ; BSR set to: 0
  7551  0004C4  0100               	movlb	0	; () banked
  7552  0004C6  EE20 F021          	lfsr	2,33
  7553  0004CA  0100               	movlb	0	; () banked
  7554  0004CC  51C5               	movf	_ic_ptr& (0+255),w,b
  7555  0004CE  26D9               	addwf	fsr2l,f,c
  7556  0004D0  0100               	movlb	0	; () banked
  7557  0004D2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7558  0004D4  22DA               	addwfc	fsr2h,f,c
  7559  0004D6  50DF               	movf	indf2,w,c
  7560                           
  7561                           ; Switch size 1, requested type "space"
  7562                           ; Number of cases is 4, Range of values is 5 to 8
  7563                           ; switch strategies available:
  7564                           ; Name         Instructions Cycles
  7565                           ; simple_byte           13     7 (average)
  7566                           ;	Chosen strategy is simple_byte
  7567  0004D8  0A05               	xorlw	5	; case 5
  7568  0004DA  B4D8               	btfsc	status,2,c
  7569  0004DC  D638               	goto	i2l297
  7570  0004DE  0A03               	xorlw	3	; case 6
  7571  0004E0  B4D8               	btfsc	status,2,c
  7572  0004E2  D64E               	goto	i2l301
  7573  0004E4  0A01               	xorlw	1	; case 7
  7574  0004E6  B4D8               	btfsc	status,2,c
  7575  0004E8  D716               	goto	i2l316
  7576  0004EA  0A0F               	xorlw	15	; case 8
  7577  0004EC  B4D8               	btfsc	status,2,c
  7578  0004EE  D6CE               	goto	i2l3802
  7579  0004F0                     i2l295:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;my_i2c.c: 269: }
  7583                           ;my_i2c.c: 272: if (data_read || data_written) {
  7584  0004F0  0100               	movlb	0	; () banked
  7585  0004F2  67A9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7586  0004F4  D004               	goto	i2l330
  7587                           
  7588                           ; BSR set to: 0
  7589  0004F6  0100               	movlb	0	; () banked
  7590  0004F8  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7591  0004FA  B4D8               	btfsc	status,2,c
  7592  0004FC  D002               	goto	i2l3870
  7593  0004FE                     i2l330:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;my_i2c.c: 274: if (SSPCON1bits.CKP == 0) {
  7597  0004FE  A8C6               	btfss	4038,4,c	;volatile
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;my_i2c.c: 275: SSPCON1bits.CKP = 1;
  7601  000500  88C6               	bsf	4038,4,c	;volatile
  7602  000502                     i2l3870:
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;my_i2c.c: 276: }
  7606                           ;my_i2c.c: 277: }
  7607                           ;my_i2c.c: 282: if ((ic_ptr->buflen > 14 - 2) && (!msg_ready)) {
  7608  000502  0100               	movlb	0	; () banked
  7609  000504  EE20 F00E          	lfsr	2,14
  7610  000508  0100               	movlb	0	; () banked
  7611  00050A  51C5               	movf	_ic_ptr& (0+255),w,b
  7612  00050C  26D9               	addwf	fsr2l,f,c
  7613  00050E  0100               	movlb	0	; () banked
  7614  000510  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7615  000512  22DA               	addwfc	fsr2h,f,c
  7616  000514  0E0C               	movlw	12
  7617  000516  64DF               	cpfsgt	indf2,c
  7618  000518  D023               	goto	i2l3876
  7619                           
  7620                           ; BSR set to: 0
  7621  00051A  0100               	movlb	0	; () banked
  7622  00051C  67A8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7623  00051E  D020               	goto	i2l3876
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;my_i2c.c: 283: ic_ptr->status = 0x5;
  7627  000520  0100               	movlb	0	; () banked
  7628  000522  EE20 F021          	lfsr	2,33
  7629  000526  0100               	movlb	0	; () banked
  7630  000528  51C5               	movf	_ic_ptr& (0+255),w,b
  7631  00052A  26D9               	addwf	fsr2l,f,c
  7632  00052C  0100               	movlb	0	; () banked
  7633  00052E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7634  000530  22DA               	addwfc	fsr2h,f,c
  7635  000532  0E05               	movlw	5
  7636  000534  6EDF               	movwf	indf2,c
  7637                           
  7638                           ;my_i2c.c: 284: ic_ptr->error_count++;
  7639  000536  0100               	movlb	0	; () banked
  7640  000538  EE20 F023          	lfsr	2,35
  7641  00053C  0100               	movlb	0	; () banked
  7642  00053E  51C5               	movf	_ic_ptr& (0+255),w,b
  7643  000540  26D9               	addwf	fsr2l,f,c
  7644  000542  0100               	movlb	0	; () banked
  7645  000544  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7646  000546  22DA               	addwfc	fsr2h,f,c
  7647  000548  2ADF               	incf	indf2,f,c
  7648                           
  7649                           ;my_i2c.c: 285: ic_ptr->error_code = 0x7;
  7650  00054A  0100               	movlb	0	; () banked
  7651  00054C  EE20 F022          	lfsr	2,34
  7652  000550  0100               	movlb	0	; () banked
  7653  000552  51C5               	movf	_ic_ptr& (0+255),w,b
  7654  000554  26D9               	addwf	fsr2l,f,c
  7655  000556  0100               	movlb	0	; () banked
  7656  000558  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7657  00055A  22DA               	addwfc	fsr2h,f,c
  7658  00055C  0E07               	movlw	7
  7659  00055E  6EDF               	movwf	indf2,c
  7660  000560                     i2l3876:
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;my_i2c.c: 286: }
  7664                           ;my_i2c.c: 288: if (msg_ready) {
  7665  000560  0100               	movlb	0	; () banked
  7666  000562  51A8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7667  000564  B4D8               	btfsc	status,2,c
  7668  000566  D032               	goto	i2l3884
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;my_i2c.c: 289: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7672  000568  0100               	movlb	0	; () banked
  7673  00056A  EE20 F020          	lfsr	2,32
  7674  00056E  0100               	movlb	0	; () banked
  7675  000570  51C5               	movf	_ic_ptr& (0+255),w,b
  7676  000572  26D9               	addwf	fsr2l,f,c
  7677  000574  0100               	movlb	0	; () banked
  7678  000576  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7679  000578  22DA               	addwfc	fsr2h,f,c
  7680  00057A  0100               	movlb	0	; () banked
  7681  00057C  EE10 F00E          	lfsr	1,14
  7682  000580  0100               	movlb	0	; () banked
  7683  000582  51C5               	movf	_ic_ptr& (0+255),w,b
  7684  000584  26E1               	addwf	fsr1l,f,c
  7685  000586  0100               	movlb	0	; () banked
  7686  000588  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7687  00058A  22E2               	addwfc	fsr1h,f,c
  7688  00058C  50E7               	movf	indf1,w,c
  7689  00058E  0100               	movlb	0	; () banked
  7690  000590  6F9D               	movwf	??_i2c_int_handler& (0+255),b
  7691  000592  0100               	movlb	0	; () banked
  7692  000594  519D               	movf	??_i2c_int_handler& (0+255),w,b
  7693  000596  0D01               	mullw	1
  7694  000598  50F3               	movf	prodl,w,c
  7695  00059A  0100               	movlb	0	; () banked
  7696  00059C  25C5               	addwf	_ic_ptr& (0+255),w,b
  7697  00059E  6EE1               	movwf	fsr1l,c
  7698  0005A0  50F4               	movf	prodh,w,c
  7699  0005A2  0100               	movlb	0	; () banked
  7700  0005A4  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7701  0005A6  6EE2               	movwf	fsr1h,c
  7702  0005A8  CFDF FFE7          	movff	indf2,indf1
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;my_i2c.c: 290: ToMainHigh_sendmsg(14, 40, (void *) ic_ptr->buffer);
  7706  0005AC  0E28               	movlw	40
  7707  0005AE  0100               	movlb	0	; () banked
  7708  0005B0  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7709  0005B2  0100               	movlb	0	; () banked
  7710  0005B4  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7711  0005B8  0100               	movlb	0	; () banked
  7712  0005BA  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7713  0005BE  0E0E               	movlw	14
  7714  0005C0  EC28  F00E         	call	_ToMainHigh_sendmsg
  7715                           
  7716                           ;my_i2c.c: 291: ic_ptr->buflen = 0;
  7717  0005C4  0100               	movlb	0	; () banked
  7718  0005C6  EE20 F00E          	lfsr	2,14
  7719  0005CA  D041               	goto	L8
  7720  0005CC                     i2l3884:
  7721                           
  7722                           ; BSR set to: 0
  7723  0005CC  0100               	movlb	0	; () banked
  7724  0005CE  EE20 F023          	lfsr	2,35
  7725  0005D2  0100               	movlb	0	; () banked
  7726  0005D4  51C5               	movf	_ic_ptr& (0+255),w,b
  7727  0005D6  26D9               	addwf	fsr2l,f,c
  7728  0005D8  0100               	movlb	0	; () banked
  7729  0005DA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7730  0005DC  22DA               	addwfc	fsr2h,f,c
  7731  0005DE  50DF               	movf	indf2,w,c
  7732  0005E0  B4D8               	btfsc	status,2,c
  7733  0005E2  D03D               	goto	i2l3892
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;my_i2c.c: 293: error_buf[0] = ic_ptr->error_count;
  7737  0005E4  0100               	movlb	0	; () banked
  7738  0005E6  EE20 F023          	lfsr	2,35
  7739  0005EA  0100               	movlb	0	; () banked
  7740  0005EC  51C5               	movf	_ic_ptr& (0+255),w,b
  7741  0005EE  26D9               	addwf	fsr2l,f,c
  7742  0005F0  0100               	movlb	0	; () banked
  7743  0005F2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7744  0005F4  22DA               	addwfc	fsr2h,f,c
  7745  0005F6  50DF               	movf	indf2,w,c
  7746  0005F8  0100               	movlb	0	; () banked
  7747  0005FA  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  7748                           
  7749                           ;my_i2c.c: 294: error_buf[1] = ic_ptr->error_code;
  7750  0005FC  0100               	movlb	0	; () banked
  7751  0005FE  EE20 F022          	lfsr	2,34
  7752  000602  0100               	movlb	0	; () banked
  7753  000604  51C5               	movf	_ic_ptr& (0+255),w,b
  7754  000606  26D9               	addwf	fsr2l,f,c
  7755  000608  0100               	movlb	0	; () banked
  7756  00060A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7757  00060C  22DA               	addwfc	fsr2h,f,c
  7758  00060E  50DF               	movf	indf2,w,c
  7759  000610  0100               	movlb	0	; () banked
  7760  000612  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7761                           
  7762                           ;my_i2c.c: 295: error_buf[2] = ic_ptr->event_count;
  7763  000614  0100               	movlb	0	; () banked
  7764  000616  EE20 F020          	lfsr	2,32
  7765  00061A  0100               	movlb	0	; () banked
  7766  00061C  51C5               	movf	_ic_ptr& (0+255),w,b
  7767  00061E  26D9               	addwf	fsr2l,f,c
  7768  000620  0100               	movlb	0	; () banked
  7769  000622  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7770  000624  22DA               	addwfc	fsr2h,f,c
  7771  000626  50DF               	movf	indf2,w,c
  7772  000628  0100               	movlb	0	; () banked
  7773  00062A  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;my_i2c.c: 296: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7777  00062C  0E29               	movlw	41
  7778  00062E  0100               	movlb	0	; () banked
  7779  000630  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7780  000632  0100               	movlb	0	; () banked
  7781  000634  0E00               	movlw	high i2c_int_handler@error_buf
  7782  000636  0100               	movlb	0	; () banked
  7783  000638  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7784  00063A  0100               	movlb	0	; () banked
  7785  00063C  0E9F               	movlw	low i2c_int_handler@error_buf
  7786  00063E  0100               	movlb	0	; () banked
  7787  000640  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7788  000642  0E03               	movlw	3
  7789  000644  EC28  F00E         	call	_ToMainHigh_sendmsg
  7790                           
  7791                           ;my_i2c.c: 297: ic_ptr->error_count = 0;
  7792  000648  0100               	movlb	0	; () banked
  7793  00064A  EE20 F023          	lfsr	2,35
  7794  00064E                     L8:
  7795  00064E  0100               	movlb	0	; () banked
  7796  000650  51C5               	movf	_ic_ptr& (0+255),w,b
  7797  000652  26D9               	addwf	fsr2l,f,c
  7798  000654  0100               	movlb	0	; () banked
  7799  000656  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7800  000658  22DA               	addwfc	fsr2h,f,c
  7801  00065A  0E00               	movlw	0
  7802  00065C  6EDF               	movwf	indf2,c
  7803  00065E                     i2l3892:
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;my_i2c.c: 298: }
  7807                           ;my_i2c.c: 299: if (msg_to_send) {
  7808  00065E  0100               	movlb	0	; () banked
  7809  000660  51A6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7810  000662  B4D8               	btfsc	status,2,c
  7811  000664  D01F               	goto	i2l3900
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;my_i2c.c: 301: start_i2c_slave_reply(14, ic_ptr->outbuffer);
  7815  000666  0E10               	movlw	16
  7816  000668  0100               	movlb	0	; () banked
  7817  00066A  25C5               	addwf	_ic_ptr& (0+255),w,b
  7818  00066C  0100               	movlb	0	; () banked
  7819  00066E  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7820  000670  0E00               	movlw	0
  7821  000672  0100               	movlb	0	; () banked
  7822  000674  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7823  000676  0100               	movlb	0	; () banked
  7824  000678  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7825  00067A  0E0E               	movlw	14
  7826  00067C  EC04  F008         	call	_start_i2c_slave_reply
  7827                           
  7828                           ;my_i2c.c: 303: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7829  000680  0E2A               	movlw	42
  7830  000682  0100               	movlb	0	; () banked
  7831  000684  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7832  000686  0100               	movlb	0	; () banked
  7833  000688  C0C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7834  00068C  0100               	movlb	0	; () banked
  7835  00068E  C0C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7836  000692  0E00               	movlw	0
  7837  000694  EC28  F00E         	call	_ToMainHigh_sendmsg
  7838                           
  7839                           ;my_i2c.c: 304: need_data = 1;
  7840  000698  0E01               	movlw	1
  7841  00069A  0100               	movlb	0	; () banked
  7842  00069C  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;my_i2c.c: 305: msg_to_send = 0;
  7846  00069E  0E00               	movlw	0
  7847  0006A0  0100               	movlb	0	; () banked
  7848  0006A2  6FA6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7849  0006A4                     i2l3900:
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;my_i2c.c: 306: }
  7853                           ;my_i2c.c: 308: if(need_data)
  7854  0006A4  0100               	movlb	0	; () banked
  7855  0006A6  51A4               	movf	i2c_int_handler@need_data& (0+255),w,b
  7856  0006A8  B4D8               	btfsc	status,2,c
  7857  0006AA  0012               	return	
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;my_i2c.c: 309: {
  7861                           ;my_i2c.c: 310: unsigned char msg_type;
  7862                           ;my_i2c.c: 311: unsigned char length = FromMainHigh_recvmsg( 14 , &msg_type , (void *)ic
      +                          _ptr->outbuffer );
  7863  0006AC  0100               	movlb	0	; () banked
  7864  0006AE  0E00               	movlw	high i2c_int_handler@msg_type
  7865  0006B0  0100               	movlb	0	; () banked
  7866  0006B2  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7867  0006B4  0100               	movlb	0	; () banked
  7868  0006B6  0EA7               	movlw	low i2c_int_handler@msg_type
  7869  0006B8  0100               	movlb	0	; () banked
  7870  0006BA  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7871  0006BC  0E10               	movlw	16
  7872  0006BE  0100               	movlb	0	; () banked
  7873  0006C0  25C5               	addwf	_ic_ptr& (0+255),w,b
  7874  0006C2  0100               	movlb	0	; () banked
  7875  0006C4  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7876  0006C6  0E00               	movlw	0
  7877  0006C8  0100               	movlb	0	; () banked
  7878  0006CA  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7879  0006CC  0100               	movlb	0	; () banked
  7880  0006CE  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7881  0006D0  0E0E               	movlw	14
  7882  0006D2  EC94  F00D         	call	_FromMainHigh_recvmsg
  7883  0006D6  0100               	movlb	0	; () banked
  7884  0006D8  6F9E               	movwf	i2c_int_handler@length& (0+255),b
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;my_i2c.c: 320: else
  7888                           ;my_i2c.c: 321: {
  7889                           ;my_i2c.c: 322: need_data = 0;
  7890                           
  7891                           ; BSR set to: 0
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;my_i2c.c: 317: {
  7895                           ;my_i2c.c: 319: }
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;my_i2c.c: 316: else if( length < 0 )
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;my_i2c.c: 313: {
  7902                           ;my_i2c.c: 315: }
  7903                           
  7904                           ;my_i2c.c: 312: if( length == -4 )
  7905  0006DA  0E00               	movlw	0
  7906  0006DC  0100               	movlb	0	; () banked
  7907  0006DE  6FA4               	movwf	i2c_int_handler@need_data& (0+255),b
  7908  0006E0  0012               	return	
  7909  0006E2                     __end_of_i2c_int_handler:
  7910                           	opt stack 0
  7911                           pclatu	equ	0xFFB
  7912                           pclath	equ	0xFFA
  7913                           tblptru	equ	0xFF8
  7914                           tblptrh	equ	0xFF7
  7915                           tblptrl	equ	0xFF6
  7916                           tablat	equ	0xFF5
  7917                           prodh	equ	0xFF4
  7918                           prodl	equ	0xFF3
  7919                           intcon	equ	0xFF2
  7920                           postinc0	equ	0xFEE
  7921                           fsr0h	equ	0xFEA
  7922                           fsr0l	equ	0xFE9
  7923                           wreg	equ	0xFE8
  7924                           indf1	equ	0xFE7
  7925                           fsr1h	equ	0xFE2
  7926                           fsr1l	equ	0xFE1
  7927                           bsr	equ	0xFE0
  7928                           indf2	equ	0xFDF
  7929                           postinc2	equ	0xFDE
  7930                           postdec2	equ	0xFDD
  7931                           fsr2h	equ	0xFDA
  7932                           fsr2l	equ	0xFD9
  7933                           status	equ	0xFD8
  7934                           
  7935 ;; *************** function i2_blip3 *****************
  7936 ;; Defined at:
  7937 ;;		line 32 in file "../src/debug.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;		None
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;		None               void
  7944 ;; Registers used:
  7945 ;;		None
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7951 ;;      Params:         0       0       0       0       0
  7952 ;;      Locals:         0       0       0       0       0
  7953 ;;      Temps:          0       0       0       0       0
  7954 ;;      Totals:         0       0       0       0       0
  7955 ;;Total ram usage:        0 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_i2c_int_handler
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text46
  7965  001E24                     __ptext46:
  7966                           	opt stack 0
  7967  001E24                     i2_blip3:
  7968                           	opt stack 17
  7969                           
  7970                           ;debug.c: 34: LATDbits.LD6 = 0;
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;incstack = 0
  7974  001E24  9C8C               	bcf	3980,6,c	;volatile
  7975                           
  7976                           ;debug.c: 35: LATDbits.LD6 = 1;
  7977  001E26  8C8C               	bsf	3980,6,c	;volatile
  7978                           
  7979                           ;debug.c: 36: LATDbits.LD6 = 0;
  7980  001E28  9C8C               	bcf	3980,6,c	;volatile
  7981  001E2A  0012               	return	
  7982  001E2C                     __end_ofi2_blip3:
  7983                           	opt stack 0
  7984                           pclatu	equ	0xFFB
  7985                           pclath	equ	0xFFA
  7986                           tblptru	equ	0xFF8
  7987                           tblptrh	equ	0xFF7
  7988                           tblptrl	equ	0xFF6
  7989                           tablat	equ	0xFF5
  7990                           prodh	equ	0xFF4
  7991                           prodl	equ	0xFF3
  7992                           intcon	equ	0xFF2
  7993                           postinc0	equ	0xFEE
  7994                           fsr0h	equ	0xFEA
  7995                           fsr0l	equ	0xFE9
  7996                           wreg	equ	0xFE8
  7997                           indf1	equ	0xFE7
  7998                           fsr1h	equ	0xFE2
  7999                           fsr1l	equ	0xFE1
  8000                           bsr	equ	0xFE0
  8001                           indf2	equ	0xFDF
  8002                           postinc2	equ	0xFDE
  8003                           postdec2	equ	0xFDD
  8004                           fsr2h	equ	0xFDA
  8005                           fsr2l	equ	0xFD9
  8006                           status	equ	0xFD8
  8007                           
  8008 ;; *************** function i2_blip1 *****************
  8009 ;; Defined at:
  8010 ;;		line 18 in file "../src/debug.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;		None
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;		None
  8015 ;; Return value:  Size  Location     Type
  8016 ;;		None               void
  8017 ;; Registers used:
  8018 ;;		None
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8024 ;;      Params:         0       0       0       0       0
  8025 ;;      Locals:         0       0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0
  8027 ;;      Totals:         0       0       0       0       0
  8028 ;;Total ram usage:        0 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; This function calls:
  8031 ;;		Nothing
  8032 ;; This function is called by:
  8033 ;;		_i2c_int_handler
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           	psect	text47
  8038  001E2C                     __ptext47:
  8039                           	opt stack 0
  8040  001E2C                     i2_blip1:
  8041                           	opt stack 17
  8042                           
  8043                           ;debug.c: 20: LATDbits.LD4 = 0;
  8044                           
  8045                           ;incstack = 0
  8046  001E2C  988C               	bcf	3980,4,c	;volatile
  8047                           
  8048                           ;debug.c: 21: LATDbits.LD4 = 1;
  8049  001E2E  888C               	bsf	3980,4,c	;volatile
  8050                           
  8051                           ;debug.c: 22: LATDbits.LD4 = 0;
  8052  001E30  988C               	bcf	3980,4,c	;volatile
  8053  001E32  0012               	return	
  8054  001E34                     __end_ofi2_blip1:
  8055                           	opt stack 0
  8056                           pclatu	equ	0xFFB
  8057                           pclath	equ	0xFFA
  8058                           tblptru	equ	0xFF8
  8059                           tblptrh	equ	0xFF7
  8060                           tblptrl	equ	0xFF6
  8061                           tablat	equ	0xFF5
  8062                           prodh	equ	0xFF4
  8063                           prodl	equ	0xFF3
  8064                           intcon	equ	0xFF2
  8065                           postinc0	equ	0xFEE
  8066                           fsr0h	equ	0xFEA
  8067                           fsr0l	equ	0xFE9
  8068                           wreg	equ	0xFE8
  8069                           indf1	equ	0xFE7
  8070                           fsr1h	equ	0xFE2
  8071                           fsr1l	equ	0xFE1
  8072                           bsr	equ	0xFE0
  8073                           indf2	equ	0xFDF
  8074                           postinc2	equ	0xFDE
  8075                           postdec2	equ	0xFDD
  8076                           fsr2h	equ	0xFDA
  8077                           fsr2l	equ	0xFD9
  8078                           status	equ	0xFD8
  8079                           
  8080 ;; *************** function _start_i2c_slave_reply *****************
  8081 ;; Defined at:
  8082 ;;		line 54 in file "../src/my_i2c.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  length          1    wreg     unsigned char 
  8085 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8086 ;;		 -> NULL(0), main@ic(38), 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  length          1    4[BANK0 ] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;		None               void
  8091 ;; Registers used:
  8092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8098 ;;      Params:         0       2       0       0       0
  8099 ;;      Locals:         0       1       0       0       0
  8100 ;;      Temps:          0       2       0       0       0
  8101 ;;      Totals:         0       5       0       0       0
  8102 ;;Total ram usage:        5 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_i2c_int_handler
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text48
  8112  001008                     __ptext48:
  8113                           	opt stack 0
  8114  001008                     _start_i2c_slave_reply:
  8115                           	opt stack 17
  8116                           
  8117                           ;incstack = 0
  8118                           ;start_i2c_slave_reply@length stored from wreg
  8119  001008  0100               	movlb	0	; () banked
  8120  00100A  6F84               	movwf	start_i2c_slave_reply@length& (0+255),b
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8124  00100C  0100               	movlb	0	; () banked
  8125  00100E  EE20 F01F          	lfsr	2,31
  8126  001012  0100               	movlb	0	; () banked
  8127  001014  51C5               	movf	_ic_ptr& (0+255),w,b
  8128  001016  26D9               	addwf	fsr2l,f,c
  8129  001018  0100               	movlb	0	; () banked
  8130  00101A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8131  00101C  22DA               	addwfc	fsr2h,f,c
  8132  00101E  0E00               	movlw	0
  8133  001020  6EDF               	movwf	indf2,c
  8134  001022  D03E               	goto	i2l2730
  8135  001024                     i2l2726:
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8139  001024  0100               	movlb	0	; () banked
  8140  001026  EE20 F01F          	lfsr	2,31
  8141  00102A  0100               	movlb	0	; () banked
  8142  00102C  51C5               	movf	_ic_ptr& (0+255),w,b
  8143  00102E  26D9               	addwf	fsr2l,f,c
  8144  001030  0100               	movlb	0	; () banked
  8145  001032  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8146  001034  22DA               	addwfc	fsr2h,f,c
  8147  001036  50DF               	movf	indf2,w,c
  8148  001038  0100               	movlb	0	; () banked
  8149  00103A  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8150  00103C  0100               	movlb	0	; () banked
  8151  00103E  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8152  001040  0D01               	mullw	1
  8153  001042  50F3               	movf	prodl,w,c
  8154  001044  0100               	movlb	0	; () banked
  8155  001046  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  8156  001048  6ED9               	movwf	fsr2l,c
  8157  00104A  50F4               	movf	prodh,w,c
  8158  00104C  0100               	movlb	0	; () banked
  8159  00104E  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  8160  001050  6EDA               	movwf	fsr2h,c
  8161  001052  0100               	movlb	0	; () banked
  8162  001054  EE10 F01F          	lfsr	1,31
  8163  001058  0100               	movlb	0	; () banked
  8164  00105A  51C5               	movf	_ic_ptr& (0+255),w,b
  8165  00105C  26E1               	addwf	fsr1l,f,c
  8166  00105E  0100               	movlb	0	; () banked
  8167  001060  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8168  001062  22E2               	addwfc	fsr1h,f,c
  8169  001064  50E7               	movf	indf1,w,c
  8170  001066  0100               	movlb	0	; () banked
  8171  001068  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8172  00106A  0100               	movlb	0	; () banked
  8173  00106C  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8174  00106E  0D01               	mullw	1
  8175  001070  0E10               	movlw	16
  8176  001072  26F3               	addwf	prodl,f,c
  8177  001074  0E00               	movlw	0
  8178  001076  22F4               	addwfc	prodh,f,c
  8179  001078  50F3               	movf	prodl,w,c
  8180  00107A  0100               	movlb	0	; () banked
  8181  00107C  25C5               	addwf	_ic_ptr& (0+255),w,b
  8182  00107E  6EE1               	movwf	fsr1l,c
  8183  001080  50F4               	movf	prodh,w,c
  8184  001082  0100               	movlb	0	; () banked
  8185  001084  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8186  001086  6EE2               	movwf	fsr1h,c
  8187  001088  CFDF FFE7          	movff	indf2,indf1
  8188                           
  8189                           ; BSR set to: 0
  8190  00108C  0100               	movlb	0	; () banked
  8191  00108E  EE20 F01F          	lfsr	2,31
  8192  001092  0100               	movlb	0	; () banked
  8193  001094  51C5               	movf	_ic_ptr& (0+255),w,b
  8194  001096  26D9               	addwf	fsr2l,f,c
  8195  001098  0100               	movlb	0	; () banked
  8196  00109A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8197  00109C  22DA               	addwfc	fsr2h,f,c
  8198  00109E  2ADF               	incf	indf2,f,c
  8199  0010A0                     i2l2730:
  8200                           
  8201                           ; BSR set to: 0
  8202  0010A0  0100               	movlb	0	; () banked
  8203  0010A2  EE20 F01F          	lfsr	2,31
  8204  0010A6  0100               	movlb	0	; () banked
  8205  0010A8  51C5               	movf	_ic_ptr& (0+255),w,b
  8206  0010AA  26D9               	addwf	fsr2l,f,c
  8207  0010AC  0100               	movlb	0	; () banked
  8208  0010AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8209  0010B0  22DA               	addwfc	fsr2h,f,c
  8210  0010B2  50DF               	movf	indf2,w,c
  8211  0010B4  0100               	movlb	0	; () banked
  8212  0010B6  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8213  0010B8  0100               	movlb	0	; () banked
  8214  0010BA  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8215  0010BC  0100               	movlb	0	; () banked
  8216  0010BE  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8217  0010C0  A0D8               	btfss	status,0,c
  8218  0010C2  D7B0               	goto	i2l2726
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;my_i2c.c: 58: }
  8222                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  8223                           
  8224                           ; BSR set to: 0
  8225  0010C4  0100               	movlb	0	; () banked
  8226  0010C6  EE20 F01F          	lfsr	2,31
  8227  0010CA  0100               	movlb	0	; () banked
  8228  0010CC  51C5               	movf	_ic_ptr& (0+255),w,b
  8229  0010CE  26D9               	addwf	fsr2l,f,c
  8230  0010D0  0100               	movlb	0	; () banked
  8231  0010D2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8232  0010D4  22DA               	addwfc	fsr2h,f,c
  8233  0010D6  0100               	movlb	0	; () banked
  8234  0010D8  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8235                           
  8236                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  8237  0010DC  0100               	movlb	0	; () banked
  8238  0010DE  EE20 F01E          	lfsr	2,30
  8239  0010E2  0100               	movlb	0	; () banked
  8240  0010E4  51C5               	movf	_ic_ptr& (0+255),w,b
  8241  0010E6  26D9               	addwf	fsr2l,f,c
  8242  0010E8  0100               	movlb	0	; () banked
  8243  0010EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8244  0010EC  22DA               	addwfc	fsr2h,f,c
  8245  0010EE  0E01               	movlw	1
  8246  0010F0  6EDF               	movwf	indf2,c
  8247                           
  8248                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  8249  0010F2  0100               	movlb	0	; () banked
  8250  0010F4  EE20 F010          	lfsr	2,16
  8251  0010F8  0100               	movlb	0	; () banked
  8252  0010FA  51C5               	movf	_ic_ptr& (0+255),w,b
  8253  0010FC  26D9               	addwf	fsr2l,f,c
  8254  0010FE  0100               	movlb	0	; () banked
  8255  001100  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8256  001102  22DA               	addwfc	fsr2h,f,c
  8257  001104  50DF               	movf	indf2,w,c
  8258  001106  6EC9               	movwf	4041,c	;volatile
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  8262  001108  88C6               	bsf	4038,4,c	;volatile
  8263                           
  8264                           ; BSR set to: 0
  8265  00110A  0012               	return	
  8266  00110C                     __end_of_start_i2c_slave_reply:
  8267                           	opt stack 0
  8268                           pclatu	equ	0xFFB
  8269                           pclath	equ	0xFFA
  8270                           tblptru	equ	0xFF8
  8271                           tblptrh	equ	0xFF7
  8272                           tblptrl	equ	0xFF6
  8273                           tablat	equ	0xFF5
  8274                           prodh	equ	0xFF4
  8275                           prodl	equ	0xFF3
  8276                           intcon	equ	0xFF2
  8277                           postinc0	equ	0xFEE
  8278                           fsr0h	equ	0xFEA
  8279                           fsr0l	equ	0xFE9
  8280                           wreg	equ	0xFE8
  8281                           indf1	equ	0xFE7
  8282                           fsr1h	equ	0xFE2
  8283                           fsr1l	equ	0xFE1
  8284                           bsr	equ	0xFE0
  8285                           indf2	equ	0xFDF
  8286                           postinc2	equ	0xFDE
  8287                           postdec2	equ	0xFDD
  8288                           fsr2h	equ	0xFDA
  8289                           fsr2l	equ	0xFD9
  8290                           status	equ	0xFD8
  8291                           
  8292 ;; *************** function _handle_start *****************
  8293 ;; Defined at:
  8294 ;;		line 72 in file "../src/my_i2c.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;  data_read       1    wreg     unsigned char 
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;  data_read       1    0[BANK0 ] unsigned char 
  8299 ;; Return value:  Size  Location     Type
  8300 ;;		None               void
  8301 ;; Registers used:
  8302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8308 ;;      Params:         0       0       0       0       0
  8309 ;;      Locals:         0       1       0       0       0
  8310 ;;      Temps:          0       0       0       0       0
  8311 ;;      Totals:         0       1       0       0       0
  8312 ;;Total ram usage:        1 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_i2c_int_handler
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text49
  8322  0011F4                     __ptext49:
  8323                           	opt stack 0
  8324  0011F4                     _handle_start:
  8325                           	opt stack 17
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;incstack = 0
  8329                           ;handle_start@data_read stored from wreg
  8330  0011F4  0100               	movlb	0	; () banked
  8331  0011F6  6F80               	movwf	handle_start@data_read& (0+255),b
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  8335  0011F8  0100               	movlb	0	; () banked
  8336  0011FA  EE20 F020          	lfsr	2,32
  8337  0011FE  0100               	movlb	0	; () banked
  8338  001200  51C5               	movf	_ic_ptr& (0+255),w,b
  8339  001202  26D9               	addwf	fsr2l,f,c
  8340  001204  0100               	movlb	0	; () banked
  8341  001206  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8342  001208  22DA               	addwfc	fsr2h,f,c
  8343  00120A  0E01               	movlw	1
  8344  00120C  6EDF               	movwf	indf2,c
  8345                           
  8346                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  8347  00120E  0100               	movlb	0	; () banked
  8348  001210  EE20 F00E          	lfsr	2,14
  8349  001214  0100               	movlb	0	; () banked
  8350  001216  51C5               	movf	_ic_ptr& (0+255),w,b
  8351  001218  26D9               	addwf	fsr2l,f,c
  8352  00121A  0100               	movlb	0	; () banked
  8353  00121C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8354  00121E  22DA               	addwfc	fsr2h,f,c
  8355  001220  0E00               	movlw	0
  8356  001222  6EDF               	movwf	indf2,c
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;my_i2c.c: 76: if (data_read) {
  8360  001224  0100               	movlb	0	; () banked
  8361  001226  5180               	movf	handle_start@data_read& (0+255),w,b
  8362  001228  B4D8               	btfsc	status,2,c
  8363  00122A  D03D               	goto	i2l2748
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  8367  00122C  AAC7               	btfss	4039,5,c	;volatile
  8368  00122E  D021               	goto	i2l285
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  8372  001230  0100               	movlb	0	; () banked
  8373  001232  EE20 F021          	lfsr	2,33
  8374  001236  0100               	movlb	0	; () banked
  8375  001238  51C5               	movf	_ic_ptr& (0+255),w,b
  8376  00123A  26D9               	addwf	fsr2l,f,c
  8377  00123C  0100               	movlb	0	; () banked
  8378  00123E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8379  001240  22DA               	addwfc	fsr2h,f,c
  8380  001242  0E05               	movlw	5
  8381  001244  6EDF               	movwf	indf2,c
  8382                           
  8383                           ;my_i2c.c: 81: ic_ptr->error_count++;
  8384  001246  0100               	movlb	0	; () banked
  8385  001248  EE20 F023          	lfsr	2,35
  8386  00124C  0100               	movlb	0	; () banked
  8387  00124E  51C5               	movf	_ic_ptr& (0+255),w,b
  8388  001250  26D9               	addwf	fsr2l,f,c
  8389  001252  0100               	movlb	0	; () banked
  8390  001254  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8391  001256  22DA               	addwfc	fsr2h,f,c
  8392  001258  2ADF               	incf	indf2,f,c
  8393                           
  8394                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  8395  00125A  0100               	movlb	0	; () banked
  8396  00125C  EE20 F022          	lfsr	2,34
  8397  001260  0100               	movlb	0	; () banked
  8398  001262  51C5               	movf	_ic_ptr& (0+255),w,b
  8399  001264  26D9               	addwf	fsr2l,f,c
  8400  001266  0100               	movlb	0	; () banked
  8401  001268  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8402  00126A  22DA               	addwfc	fsr2h,f,c
  8403  00126C  0E05               	movlw	5
  8404  00126E  6EDF               	movwf	indf2,c
  8405                           
  8406                           ;my_i2c.c: 83: } else {
  8407  001270  0012               	return	
  8408  001272                     i2l285:
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  8412  001272  A4C7               	btfss	4039,2,c	;volatile
  8413  001274  D00C               	goto	i2l2746
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  8417  001276  0100               	movlb	0	; () banked
  8418  001278  EE20 F021          	lfsr	2,33
  8419  00127C  0100               	movlb	0	; () banked
  8420  00127E  51C5               	movf	_ic_ptr& (0+255),w,b
  8421  001280  26D9               	addwf	fsr2l,f,c
  8422  001282  0100               	movlb	0	; () banked
  8423  001284  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8424  001286  22DA               	addwfc	fsr2h,f,c
  8425  001288  0E08               	movlw	8
  8426  00128A  6EDF               	movwf	indf2,c
  8427                           
  8428                           ;my_i2c.c: 87: } else {
  8429  00128C  0012               	return	
  8430  00128E                     i2l2746:
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
  8434  00128E  0100               	movlb	0	; () banked
  8435  001290  EE20 F021          	lfsr	2,33
  8436  001294  0100               	movlb	0	; () banked
  8437  001296  51C5               	movf	_ic_ptr& (0+255),w,b
  8438  001298  26D9               	addwf	fsr2l,f,c
  8439  00129A  0100               	movlb	0	; () banked
  8440  00129C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8441  00129E  22DA               	addwfc	fsr2h,f,c
  8442  0012A0  0E07               	movlw	7
  8443  0012A2  6EDF               	movwf	indf2,c
  8444  0012A4  0012               	return	
  8445  0012A6                     i2l2748:
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  8449  0012A6  0100               	movlb	0	; () banked
  8450  0012A8  EE20 F021          	lfsr	2,33
  8451  0012AC  0100               	movlb	0	; () banked
  8452  0012AE  51C5               	movf	_ic_ptr& (0+255),w,b
  8453  0012B0  26D9               	addwf	fsr2l,f,c
  8454  0012B2  0100               	movlb	0	; () banked
  8455  0012B4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8456  0012B6  22DA               	addwfc	fsr2h,f,c
  8457  0012B8  0E06               	movlw	6
  8458  0012BA  6EDF               	movwf	indf2,c
  8459  0012BC  0012               	return	
  8460  0012BE                     __end_of_handle_start:
  8461                           	opt stack 0
  8462                           pclatu	equ	0xFFB
  8463                           pclath	equ	0xFFA
  8464                           tblptru	equ	0xFF8
  8465                           tblptrh	equ	0xFF7
  8466                           tblptrl	equ	0xFF6
  8467                           tablat	equ	0xFF5
  8468                           prodh	equ	0xFF4
  8469                           prodl	equ	0xFF3
  8470                           intcon	equ	0xFF2
  8471                           postinc0	equ	0xFEE
  8472                           fsr0h	equ	0xFEA
  8473                           fsr0l	equ	0xFE9
  8474                           wreg	equ	0xFE8
  8475                           indf1	equ	0xFE7
  8476                           fsr1h	equ	0xFE2
  8477                           fsr1l	equ	0xFE1
  8478                           bsr	equ	0xFE0
  8479                           indf2	equ	0xFDF
  8480                           postinc2	equ	0xFDE
  8481                           postdec2	equ	0xFDD
  8482                           fsr2h	equ	0xFDA
  8483                           fsr2l	equ	0xFD9
  8484                           status	equ	0xFD8
  8485                           
  8486 ;; *************** function _blip4 *****************
  8487 ;; Defined at:
  8488 ;;		line 39 in file "../src/debug.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;		None
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;		None               void
  8495 ;; Registers used:
  8496 ;;		None
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8502 ;;      Params:         0       0       0       0       0
  8503 ;;      Locals:         0       0       0       0       0
  8504 ;;      Temps:          0       0       0       0       0
  8505 ;;      Totals:         0       0       0       0       0
  8506 ;;Total ram usage:        0 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; This function calls:
  8509 ;;		Nothing
  8510 ;; This function is called by:
  8511 ;;		_i2c_int_handler
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text50
  8516  001E34                     __ptext50:
  8517                           	opt stack 0
  8518  001E34                     _blip4:
  8519                           	opt stack 17
  8520                           
  8521                           ;debug.c: 41: LATDbits.LD7 = 0;
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;incstack = 0
  8525  001E34  9E8C               	bcf	3980,7,c	;volatile
  8526                           
  8527                           ;debug.c: 42: LATDbits.LD7 = 1;
  8528  001E36  8E8C               	bsf	3980,7,c	;volatile
  8529                           
  8530                           ;debug.c: 43: LATDbits.LD7 = 0;
  8531  001E38  9E8C               	bcf	3980,7,c	;volatile
  8532  001E3A  0012               	return	
  8533  001E3C                     __end_of_blip4:
  8534                           	opt stack 0
  8535                           pclatu	equ	0xFFB
  8536                           pclath	equ	0xFFA
  8537                           tblptru	equ	0xFF8
  8538                           tblptrh	equ	0xFF7
  8539                           tblptrl	equ	0xFF6
  8540                           tablat	equ	0xFF5
  8541                           prodh	equ	0xFF4
  8542                           prodl	equ	0xFF3
  8543                           intcon	equ	0xFF2
  8544                           postinc0	equ	0xFEE
  8545                           fsr0h	equ	0xFEA
  8546                           fsr0l	equ	0xFE9
  8547                           wreg	equ	0xFE8
  8548                           indf1	equ	0xFE7
  8549                           fsr1h	equ	0xFE2
  8550                           fsr1l	equ	0xFE1
  8551                           bsr	equ	0xFE0
  8552                           indf2	equ	0xFDF
  8553                           postinc2	equ	0xFDE
  8554                           postdec2	equ	0xFDD
  8555                           fsr2h	equ	0xFDA
  8556                           fsr2l	equ	0xFD9
  8557                           status	equ	0xFD8
  8558                           
  8559 ;; *************** function _ToMainHigh_sendmsg *****************
  8560 ;; Defined at:
  8561 ;;		line 126 in file "../src/messages.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  length          1    wreg     unsigned char 
  8564 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8565 ;;  data            2   23[BANK0 ] PTR void 
  8566 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(38), 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  length          1   25[BANK0 ] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      char 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8578 ;;      Params:         0       3       0       0       0
  8579 ;;      Locals:         0       1       0       0       0
  8580 ;;      Temps:          0       0       0       0       0
  8581 ;;      Totals:         0       4       0       0       0
  8582 ;;Total ram usage:        4 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    2
  8585 ;; This function calls:
  8586 ;;		i2_send_msg
  8587 ;; This function is called by:
  8588 ;;		_i2c_int_handler
  8589 ;;		_timer0_int_handler
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text51
  8594  001C50                     __ptext51:
  8595                           	opt stack 0
  8596  001C50                     _ToMainHigh_sendmsg:
  8597                           	opt stack 15
  8598                           
  8599                           ;incstack = 0
  8600                           ;ToMainHigh_sendmsg@length stored from wreg
  8601  001C50  0100               	movlb	0	; () banked
  8602  001C52  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8606                           ;	Return value of _ToMainHigh_sendmsg is never used
  8607  001C54  0102               	movlb	2	; () banked
  8608  001C56  0E02               	movlw	high _ToMainHigh_MQ
  8609  001C58  0100               	movlb	0	; () banked
  8610  001C5A  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8611  001C5C  0102               	movlb	2	; () banked
  8612  001C5E  0E57               	movlw	low _ToMainHigh_MQ
  8613  001C60  0100               	movlb	0	; () banked
  8614  001C62  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8615  001C64  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8616  001C68  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8617  001C6C  0100               	movlb	0	; () banked
  8618  001C6E  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8619  001C72  0100               	movlb	0	; () banked
  8620  001C74  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8621  001C78  EC7E  F007         	call	i2_send_msg	;wreg free
  8622  001C7C  0012               	return	
  8623  001C7E                     __end_of_ToMainHigh_sendmsg:
  8624                           	opt stack 0
  8625                           pclatu	equ	0xFFB
  8626                           pclath	equ	0xFFA
  8627                           tblptru	equ	0xFF8
  8628                           tblptrh	equ	0xFF7
  8629                           tblptrl	equ	0xFF6
  8630                           tablat	equ	0xFF5
  8631                           prodh	equ	0xFF4
  8632                           prodl	equ	0xFF3
  8633                           intcon	equ	0xFF2
  8634                           postinc0	equ	0xFEE
  8635                           fsr0h	equ	0xFEA
  8636                           fsr0l	equ	0xFE9
  8637                           wreg	equ	0xFE8
  8638                           indf1	equ	0xFE7
  8639                           fsr1h	equ	0xFE2
  8640                           fsr1l	equ	0xFE1
  8641                           bsr	equ	0xFE0
  8642                           indf2	equ	0xFDF
  8643                           postinc2	equ	0xFDE
  8644                           postdec2	equ	0xFDD
  8645                           fsr2h	equ	0xFDA
  8646                           fsr2l	equ	0xFD9
  8647                           status	equ	0xFD8
  8648                           
  8649 ;; *************** function i2_send_msg *****************
  8650 ;; Defined at:
  8651 ;;		line 24 in file "../src/messages.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8654 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8655 ;;  length          1   12[BANK0 ] unsigned char 
  8656 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8657 ;;  data            2   14[BANK0 ] PTR void 
  8658 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  8659 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  8660 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), main@uart_response(14), main@motor
      +_data(14), 
  8661 ;;		 -> main@t1thread_data(2), main@ic(38), 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8664 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8665 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8666 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8667 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  1    wreg      char 
  8670 ;; Registers used:
  8671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8677 ;;      Params:         0       6       0       0       0
  8678 ;;      Locals:         0       5       0       0       0
  8679 ;;      Temps:          0       1       0       0       0
  8680 ;;      Totals:         0      12       0       0       0
  8681 ;;Total ram usage:       12 bytes
  8682 ;; Hardware stack levels used:    1
  8683 ;; Hardware stack levels required when called:    1
  8684 ;; This function calls:
  8685 ;;		i2___awmod
  8686 ;;		i2_memcpy
  8687 ;; This function is called by:
  8688 ;;		_ToMainHigh_sendmsg
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           	psect	text52
  8693  000EFC                     __ptext52:
  8694                           	opt stack 0
  8695  000EFC                     i2_send_msg:
  8696                           	opt stack 15
  8697                           
  8698                           ;messages.c: 25: unsigned char slot;
  8699                           ;messages.c: 27: msg *qmsg;
  8700                           ;messages.c: 28: size_t tlength = length;
  8701                           
  8702                           ;incstack = 0
  8703  000EFC  0100               	movlb	0	; () banked
  8704  000EFE  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8705  000F02  0100               	movlb	0	; () banked
  8706  000F04  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8710  000F06  0100               	movlb	0	; () banked
  8711  000F08  EE20 F055          	lfsr	2,85
  8712  000F0C  0100               	movlb	0	; () banked
  8713  000F0E  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8714  000F10  26D9               	addwf	fsr2l,f,c
  8715  000F12  0100               	movlb	0	; () banked
  8716  000F14  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8717  000F16  22DA               	addwfc	fsr2h,f,c
  8718  000F18  50DF               	movf	indf2,w,c
  8719  000F1A  0100               	movlb	0	; () banked
  8720  000F1C  6F93               	movwf	i2send_msg@slot& (0+255),b
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8724  000F1E  0100               	movlb	0	; () banked
  8725  000F20  5193               	movf	i2send_msg@slot& (0+255),w,b
  8726  000F22  0D11               	mullw	17
  8727  000F24  50F3               	movf	prodl,w,c
  8728  000F26  0100               	movlb	0	; () banked
  8729  000F28  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8730  000F2A  0100               	movlb	0	; () banked
  8731  000F2C  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8732  000F2E  50F4               	movf	prodh,w,c
  8733  000F30  0100               	movlb	0	; () banked
  8734  000F32  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8735  000F34  0100               	movlb	0	; () banked
  8736  000F36  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;messages.c: 41: if (qmsg->full != 0) {
  8740  000F38  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8741  000F3C  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8742  000F40  50DF               	movf	indf2,w,c
  8743  000F42  B4D8               	btfsc	status,2,c
  8744  000F44  D002               	goto	i2l3582
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;messages.c: 42: return (-1);
  8748  000F46  0EFF               	movlw	255
  8749  000F48  0012               	return	
  8750  000F4A                     i2l3582:
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;messages.c: 43: }
  8754                           ;messages.c: 46: qmsg->length = length;
  8755  000F4A  0100               	movlb	0	; () banked
  8756  000F4C  EE20 F001          	lfsr	2,1
  8757  000F50  0100               	movlb	0	; () banked
  8758  000F52  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8759  000F54  26D9               	addwf	fsr2l,f,c
  8760  000F56  0100               	movlb	0	; () banked
  8761  000F58  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8762  000F5A  22DA               	addwfc	fsr2h,f,c
  8763  000F5C  0100               	movlb	0	; () banked
  8764  000F5E  C08C  FFDF         	movff	i2send_msg@length,indf2
  8765                           
  8766                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8767  000F62  0100               	movlb	0	; () banked
  8768  000F64  EE20 F002          	lfsr	2,2
  8769  000F68  0100               	movlb	0	; () banked
  8770  000F6A  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8771  000F6C  26D9               	addwf	fsr2l,f,c
  8772  000F6E  0100               	movlb	0	; () banked
  8773  000F70  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8774  000F72  22DA               	addwfc	fsr2h,f,c
  8775  000F74  0100               	movlb	0	; () banked
  8776  000F76  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8780  000F7A  0E03               	movlw	3
  8781  000F7C  0100               	movlb	0	; () banked
  8782  000F7E  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8783  000F80  0100               	movlb	0	; () banked
  8784  000F82  6F80               	movwf	i2memcpy@d1& (0+255),b
  8785  000F84  0E00               	movlw	0
  8786  000F86  0100               	movlb	0	; () banked
  8787  000F88  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8788  000F8A  0100               	movlb	0	; () banked
  8789  000F8C  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8790  000F8E  0100               	movlb	0	; () banked
  8791  000F90  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8792  000F94  0100               	movlb	0	; () banked
  8793  000F96  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8794  000F9A  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8795  000F9E  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8796  000FA2  ECF7  F00C         	call	i2_memcpy	;wreg free
  8797                           
  8798                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8799  000FA6  0100               	movlb	0	; () banked
  8800  000FA8  EE20 F055          	lfsr	2,85
  8801  000FAC  0100               	movlb	0	; () banked
  8802  000FAE  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8803  000FB0  26D9               	addwf	fsr2l,f,c
  8804  000FB2  0100               	movlb	0	; () banked
  8805  000FB4  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8806  000FB6  22DA               	addwfc	fsr2h,f,c
  8807  000FB8  0100               	movlb	0	; () banked
  8808  000FBA  EE10 F055          	lfsr	1,85
  8809  000FBE  0100               	movlb	0	; () banked
  8810  000FC0  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8811  000FC2  26E1               	addwf	fsr1l,f,c
  8812  000FC4  0100               	movlb	0	; () banked
  8813  000FC6  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8814  000FC8  22E2               	addwfc	fsr1h,f,c
  8815  000FCA  50E7               	movf	indf1,w,c
  8816  000FCC  0100               	movlb	0	; () banked
  8817  000FCE  6F90               	movwf	??i2_send_msg& (0+255),b
  8818  000FD0  0E01               	movlw	1
  8819  000FD2  0100               	movlb	0	; () banked
  8820  000FD4  2590               	addwf	??i2_send_msg& (0+255),w,b
  8821  000FD6  0100               	movlb	0	; () banked
  8822  000FD8  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8823  000FDA  0100               	movlb	0	; () banked
  8824  000FDC  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8825  000FDE  0E00               	movlw	0
  8826  000FE0  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8827  000FE2  0E00               	movlw	0
  8828  000FE4  0100               	movlb	0	; () banked
  8829  000FE6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8830  000FE8  0E05               	movlw	5
  8831  000FEA  0100               	movlb	0	; () banked
  8832  000FEC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8833  000FEE  ECC1  F009         	call	i2___awmod	;wreg free
  8834  000FF2  0100               	movlb	0	; () banked
  8835  000FF4  5180               	movf	?i2___awmod& (0+255),w,b
  8836  000FF6  6EDF               	movwf	indf2,c
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;messages.c: 59: qmsg->full = 1;
  8840  000FF8  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8841  000FFC  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8842  001000  0E01               	movlw	1
  8843  001002  6EDF               	movwf	indf2,c
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;messages.c: 60: return (1);
  8847  001004  0E01               	movlw	1
  8848  001006  0012               	return	
  8849  001008                     __end_ofi2_send_msg:
  8850                           	opt stack 0
  8851                           pclatu	equ	0xFFB
  8852                           pclath	equ	0xFFA
  8853                           tblptru	equ	0xFF8
  8854                           tblptrh	equ	0xFF7
  8855                           tblptrl	equ	0xFF6
  8856                           tablat	equ	0xFF5
  8857                           prodh	equ	0xFF4
  8858                           prodl	equ	0xFF3
  8859                           intcon	equ	0xFF2
  8860                           postinc0	equ	0xFEE
  8861                           fsr0h	equ	0xFEA
  8862                           fsr0l	equ	0xFE9
  8863                           wreg	equ	0xFE8
  8864                           indf1	equ	0xFE7
  8865                           fsr1h	equ	0xFE2
  8866                           fsr1l	equ	0xFE1
  8867                           bsr	equ	0xFE0
  8868                           indf2	equ	0xFDF
  8869                           postinc2	equ	0xFDE
  8870                           postdec2	equ	0xFDD
  8871                           fsr2h	equ	0xFDA
  8872                           fsr2l	equ	0xFD9
  8873                           status	equ	0xFD8
  8874                           
  8875 ;; *************** function _FromMainHigh_recvmsg *****************
  8876 ;; Defined at:
  8877 ;;		line 183 in file "../src/messages.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  maxlength       1    wreg     unsigned char 
  8880 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8881 ;;		 -> timer0_int_handler@msgtype(2), retrieve_sensor_values@msgtype(1), i2c_int_handler@msg_type(1), 
  8882 ;;  data            2   26[BANK0 ] PTR void 
  8883 ;;		 -> NULL(0), timer0_int_handler@val(2), main@ic(38), 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      char 
  8888 ;; Registers used:
  8889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8895 ;;      Params:         0       4       0       0       0
  8896 ;;      Locals:         0       1       0       0       0
  8897 ;;      Temps:          0       0       0       0       0
  8898 ;;      Totals:         0       5       0       0       0
  8899 ;;Total ram usage:        5 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    2
  8902 ;; This function calls:
  8903 ;;		i2_recv_msg
  8904 ;; This function is called by:
  8905 ;;		_i2c_int_handler
  8906 ;;		_timer0_int_handler
  8907 ;;		_retrieve_sensor_values
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	text53
  8912  001B28                     __ptext53:
  8913                           	opt stack 0
  8914  001B28                     _FromMainHigh_recvmsg:
  8915                           	opt stack 15
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;incstack = 0
  8919                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8920  001B28  0100               	movlb	0	; () banked
  8921  001B2A  6F9C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8925  001B2C  0103               	movlb	3	; () banked
  8926  001B2E  0E03               	movlw	high _FromMainHigh_MQ
  8927  001B30  0100               	movlb	0	; () banked
  8928  001B32  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8929  001B34  0103               	movlb	3	; () banked
  8930  001B36  0E00               	movlw	low _FromMainHigh_MQ
  8931  001B38  0100               	movlb	0	; () banked
  8932  001B3A  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8933  001B3C  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8934  001B40  0100               	movlb	0	; () banked
  8935  001B42  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8936  001B46  0100               	movlb	0	; () banked
  8937  001B48  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8938  001B4C  0100               	movlb	0	; () banked
  8939  001B4E  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8940  001B52  0100               	movlb	0	; () banked
  8941  001B54  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8942  001B58  EC57  F006         	call	i2_recv_msg	;wreg free
  8943  001B5C  0012               	return	
  8944  001B5E                     __end_of_FromMainHigh_recvmsg:
  8945                           	opt stack 0
  8946                           pclatu	equ	0xFFB
  8947                           pclath	equ	0xFFA
  8948                           tblptru	equ	0xFF8
  8949                           tblptrh	equ	0xFF7
  8950                           tblptrl	equ	0xFF6
  8951                           tablat	equ	0xFF5
  8952                           prodh	equ	0xFF4
  8953                           prodl	equ	0xFF3
  8954                           intcon	equ	0xFF2
  8955                           postinc0	equ	0xFEE
  8956                           fsr0h	equ	0xFEA
  8957                           fsr0l	equ	0xFE9
  8958                           wreg	equ	0xFE8
  8959                           indf1	equ	0xFE7
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           bsr	equ	0xFE0
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           fsr2h	equ	0xFDA
  8967                           fsr2l	equ	0xFD9
  8968                           status	equ	0xFD8
  8969                           
  8970 ;; *************** function i2_recv_msg *****************
  8971 ;; Defined at:
  8972 ;;		line 63 in file "../src/messages.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8975 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8976 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8977 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8978 ;;		 -> timer0_int_handler@msgtype(2), uart_transmit_interrupt_handler@msgtype(1), retrieve_sensor_values@msgtype(1), i2
      +c_int_handler@msg_type(1), 
  8979 ;;		 -> main@msgtype(1), 
  8980 ;;  data            2   15[BANK0 ] PTR void 
  8981 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), main@msgbuffer(15), 
  8982 ;;		 -> main@ic(38), 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8985 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  8986 ;;		 -> FromMainHigh_MQ(87), FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  8987 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8988 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      char 
  8991 ;; Registers used:
  8992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8998 ;;      Params:         0       7       0       0       0
  8999 ;;      Locals:         0       5       0       0       0
  9000 ;;      Temps:          0       2       0       0       0
  9001 ;;      Totals:         0      14       0       0       0
  9002 ;;Total ram usage:       14 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    1
  9005 ;; This function calls:
  9006 ;;		i2___awmod
  9007 ;;		i2_memcpy
  9008 ;; This function is called by:
  9009 ;;		_FromMainHigh_recvmsg
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text54
  9014  000CAE                     __ptext54:
  9015                           	opt stack 0
  9016  000CAE                     i2_recv_msg:
  9017                           	opt stack 15
  9018                           
  9019                           ;messages.c: 64: unsigned char slot;
  9020                           ;messages.c: 68: msg *qmsg;
  9021                           ;messages.c: 69: size_t tlength;
  9022                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9023                           
  9024                           ;incstack = 0
  9025  000CAE  0100               	movlb	0	; () banked
  9026  000CB0  EE20 F056          	lfsr	2,86
  9027  000CB4  0100               	movlb	0	; () banked
  9028  000CB6  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9029  000CB8  26D9               	addwf	fsr2l,f,c
  9030  000CBA  0100               	movlb	0	; () banked
  9031  000CBC  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9032  000CBE  22DA               	addwfc	fsr2h,f,c
  9033  000CC0  50DF               	movf	indf2,w,c
  9034  000CC2  0100               	movlb	0	; () banked
  9035  000CC4  6F93               	movwf	i2recv_msg@slot& (0+255),b
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9039  000CC6  0100               	movlb	0	; () banked
  9040  000CC8  5193               	movf	i2recv_msg@slot& (0+255),w,b
  9041  000CCA  0D11               	mullw	17
  9042  000CCC  50F3               	movf	prodl,w,c
  9043  000CCE  0100               	movlb	0	; () banked
  9044  000CD0  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  9045  000CD2  0100               	movlb	0	; () banked
  9046  000CD4  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  9047  000CD6  50F4               	movf	prodh,w,c
  9048  000CD8  0100               	movlb	0	; () banked
  9049  000CDA  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  9050  000CDC  0100               	movlb	0	; () banked
  9051  000CDE  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;messages.c: 74: if (qmsg->full == 1) {
  9055  000CE0  0E01               	movlw	1
  9056  000CE2  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9057  000CE6  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9058  000CEA  62DF               	cpfseq	indf2,c
  9059  000CEC  D07D               	goto	i2l3654
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9063  000CEE  0100               	movlb	0	; () banked
  9064  000CF0  EE20 F001          	lfsr	2,1
  9065  000CF4  0100               	movlb	0	; () banked
  9066  000CF6  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9067  000CF8  26D9               	addwf	fsr2l,f,c
  9068  000CFA  0100               	movlb	0	; () banked
  9069  000CFC  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9070  000CFE  22DA               	addwfc	fsr2h,f,c
  9071  000D00  50DF               	movf	indf2,w,c
  9072  000D02  0100               	movlb	0	; () banked
  9073  000D04  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  9074  000D06  B0D8               	btfsc	status,0,c
  9075  000D08  D002               	goto	i2l3638
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;messages.c: 77: return (-3);
  9079  000D0A  0EFD               	movlw	253
  9080  000D0C  0012               	return	
  9081  000D0E                     i2l3638:
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;messages.c: 78: }
  9085                           ;messages.c: 80: tlength = qmsg->length;
  9086  000D0E  0100               	movlb	0	; () banked
  9087  000D10  EE20 F001          	lfsr	2,1
  9088  000D14  0100               	movlb	0	; () banked
  9089  000D16  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9090  000D18  26D9               	addwf	fsr2l,f,c
  9091  000D1A  0100               	movlb	0	; () banked
  9092  000D1C  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9093  000D1E  22DA               	addwfc	fsr2h,f,c
  9094  000D20  50DF               	movf	indf2,w,c
  9095  000D22  0100               	movlb	0	; () banked
  9096  000D24  6F91               	movwf	??i2_recv_msg& (0+255),b
  9097  000D26  0100               	movlb	0	; () banked
  9098  000D28  5191               	movf	??i2_recv_msg& (0+255),w,b
  9099  000D2A  0100               	movlb	0	; () banked
  9100  000D2C  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  9101  000D2E  0100               	movlb	0	; () banked
  9102  000D30  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9106  000D32  0100               	movlb	0	; () banked
  9107  000D34  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  9108  000D38  0100               	movlb	0	; () banked
  9109  000D3A  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  9110  000D3E  0E03               	movlw	3
  9111  000D40  0100               	movlb	0	; () banked
  9112  000D42  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  9113  000D44  0100               	movlb	0	; () banked
  9114  000D46  6F91               	movwf	??i2_recv_msg& (0+255),b
  9115  000D48  0E00               	movlw	0
  9116  000D4A  0100               	movlb	0	; () banked
  9117  000D4C  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  9118  000D4E  0100               	movlb	0	; () banked
  9119  000D50  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  9120  000D52  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  9121  000D56  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  9122  000D5A  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  9123  000D5E  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  9124  000D62  ECF7  F00C         	call	i2_memcpy	;wreg free
  9125                           
  9126                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  9127  000D66  0100               	movlb	0	; () banked
  9128  000D68  EE20 F056          	lfsr	2,86
  9129  000D6C  0100               	movlb	0	; () banked
  9130  000D6E  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9131  000D70  26D9               	addwf	fsr2l,f,c
  9132  000D72  0100               	movlb	0	; () banked
  9133  000D74  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9134  000D76  22DA               	addwfc	fsr2h,f,c
  9135  000D78  0100               	movlb	0	; () banked
  9136  000D7A  EE10 F056          	lfsr	1,86
  9137  000D7E  0100               	movlb	0	; () banked
  9138  000D80  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9139  000D82  26E1               	addwf	fsr1l,f,c
  9140  000D84  0100               	movlb	0	; () banked
  9141  000D86  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9142  000D88  22E2               	addwfc	fsr1h,f,c
  9143  000D8A  50E7               	movf	indf1,w,c
  9144  000D8C  0100               	movlb	0	; () banked
  9145  000D8E  6F91               	movwf	??i2_recv_msg& (0+255),b
  9146  000D90  0E01               	movlw	1
  9147  000D92  0100               	movlb	0	; () banked
  9148  000D94  2591               	addwf	??i2_recv_msg& (0+255),w,b
  9149  000D96  0100               	movlb	0	; () banked
  9150  000D98  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9151  000D9A  0100               	movlb	0	; () banked
  9152  000D9C  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9153  000D9E  0E00               	movlw	0
  9154  000DA0  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9155  000DA2  0E00               	movlw	0
  9156  000DA4  0100               	movlb	0	; () banked
  9157  000DA6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9158  000DA8  0E05               	movlw	5
  9159  000DAA  0100               	movlb	0	; () banked
  9160  000DAC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9161  000DAE  ECC1  F009         	call	i2___awmod	;wreg free
  9162  000DB2  0100               	movlb	0	; () banked
  9163  000DB4  5180               	movf	?i2___awmod& (0+255),w,b
  9164  000DB6  6EDF               	movwf	indf2,c
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9168  000DB8  0100               	movlb	0	; () banked
  9169  000DBA  EE20 F002          	lfsr	2,2
  9170  000DBE  0100               	movlb	0	; () banked
  9171  000DC0  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9172  000DC2  26D9               	addwf	fsr2l,f,c
  9173  000DC4  0100               	movlb	0	; () banked
  9174  000DC6  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9175  000DC8  22DA               	addwfc	fsr2h,f,c
  9176  000DCA  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9177  000DCE  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9178  000DD2  CFDF FFE7          	movff	indf2,indf1
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;messages.c: 91: qmsg->full = 0;
  9182  000DD6  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9183  000DDA  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9184  000DDE  0E00               	movlw	0
  9185  000DE0  6EDF               	movwf	indf2,c
  9186                           
  9187                           ; BSR set to: 0
  9188                           ;messages.c: 92: return (tlength);
  9189  000DE2  0100               	movlb	0	; () banked
  9190  000DE4  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  9191  000DE6  0012               	return	
  9192  000DE8                     i2l3654:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;messages.c: 94: return (-4);
  9196  000DE8  0EFC               	movlw	252
  9197  000DEA  0012               	return	
  9198  000DEC                     __end_ofi2_recv_msg:
  9199                           	opt stack 0
  9200                           pclatu	equ	0xFFB
  9201                           pclath	equ	0xFFA
  9202                           tblptru	equ	0xFF8
  9203                           tblptrh	equ	0xFF7
  9204                           tblptrl	equ	0xFF6
  9205                           tablat	equ	0xFF5
  9206                           prodh	equ	0xFF4
  9207                           prodl	equ	0xFF3
  9208                           intcon	equ	0xFF2
  9209                           postinc0	equ	0xFEE
  9210                           fsr0h	equ	0xFEA
  9211                           fsr0l	equ	0xFE9
  9212                           wreg	equ	0xFE8
  9213                           indf1	equ	0xFE7
  9214                           fsr1h	equ	0xFE2
  9215                           fsr1l	equ	0xFE1
  9216                           bsr	equ	0xFE0
  9217                           indf2	equ	0xFDF
  9218                           postinc2	equ	0xFDE
  9219                           postdec2	equ	0xFDD
  9220                           fsr2h	equ	0xFDA
  9221                           fsr2l	equ	0xFD9
  9222                           status	equ	0xFD8
  9223                           
  9224 ;; *************** function i2_memcpy *****************
  9225 ;; Defined at:
  9226 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  d1              2    0[BANK0 ] PTR void 
  9229 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9230 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  9231 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9232 ;;		 -> main@ic(38), 
  9233 ;;  s1              2    2[BANK0 ] PTR const void 
  9234 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9235 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9236 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  9237 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9238 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  9239 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  9240 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9241 ;;  n               2    4[BANK0 ] unsigned int 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9244 ;;		 -> ToMainLow_MQ.data(14), ToMainHigh_MQ.data(14), FromMainLow_MQ.data(14), FromMainHigh_MQ.data(14), 
  9245 ;;		 -> ToMainLow_MQ.queue.data(14), ToMainHigh_MQ.queue.data(14), FromMainHigh_MQ.queue.data(14), FromMainLow_MQ.queue.
      +data(14), 
  9246 ;;		 -> i_like_to_moveit_moveit@moves(2), NULL(0), timer0_int_handler@val(2), uart_receive_interrupt_handler@message_cou
      +nt(1), 
  9247 ;;		 -> uart_receive_interrupt_handler@bad_checksum_id(1), uart_receive_interrupt_handler@gooey_uart_center(14), uart_re
      +ceive_interrupt_handler@bad_counter_id(2), uart_receive_interrupt_handler@bad_end_id(1), 
  9248 ;;		 -> uart_receive_interrupt_handler@bad_start_id(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(87), FromMainLow_M
      +Q(87), 
  9249 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), main@uart_response(14), main@motor_data(14), 
  9250 ;;		 -> main@t1thread_data(2), main@ic(38), 
  9251 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9252 ;;		 -> FromMainLow_MQ.queue(85), FromMainHigh_MQ.queue(85), ToMainHigh_MQ.queue(85), ToMainLow_MQ.queue(85), 
  9253 ;;		 -> NULL(0), timer0_int_handler@val(2), uart_transmit_interrupt_handler@data(2), FromMainHigh_MQ(87), 
  9254 ;;		 -> FromMainLow_MQ(87), ToMainHigh_MQ(87), ToMainLow_MQ(87), main@msgbuffer(15), 
  9255 ;;		 -> main@ic(38), 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  2    0[BANK0 ] PTR void 
  9258 ;; Registers used:
  9259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9265 ;;      Params:         0       6       0       0       0
  9266 ;;      Locals:         0       4       0       0       0
  9267 ;;      Temps:          0       0       0       0       0
  9268 ;;      Totals:         0      10       0       0       0
  9269 ;;Total ram usage:       10 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		i2_send_msg
  9275 ;;		i2_recv_msg
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279                           	psect	text55
  9280  0019EE                     __ptext55:
  9281                           	opt stack 0
  9282  0019EE                     i2_memcpy:
  9283                           	opt stack 15
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;incstack = 0
  9287  0019EE  0100               	movlb	0	; () banked
  9288  0019F0  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9289  0019F4  0100               	movlb	0	; () banked
  9290  0019F6  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9291  0019FA  0100               	movlb	0	; () banked
  9292  0019FC  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9293  001A00  0100               	movlb	0	; () banked
  9294  001A02  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9295  001A06  D010               	goto	i2l2434
  9296  001A08                     i2l2428:
  9297                           
  9298                           ; BSR set to: 0
  9299  001A08  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9300  001A0C  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9301  001A10  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9302  001A14  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9303  001A18  CFDF FFE7          	movff	indf2,indf1
  9304                           
  9305                           ; BSR set to: 0
  9306  001A1C  0100               	movlb	0	; () banked
  9307  001A1E  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9308  001A20  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9309                           
  9310                           ; BSR set to: 0
  9311  001A22  0100               	movlb	0	; () banked
  9312  001A24  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9313  001A26  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9314  001A28                     i2l2434:
  9315                           
  9316                           ; BSR set to: 0
  9317  001A28  0100               	movlb	0	; () banked
  9318  001A2A  0784               	decf	i2memcpy@n& (0+255),f,b
  9319  001A2C  A0D8               	btfss	status,0,c
  9320  001A2E  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9321  001A30  0100               	movlb	0	; () banked
  9322  001A32  2984               	incf	i2memcpy@n& (0+255),w,b
  9323  001A34  B4D8               	btfsc	status,2,c
  9324  001A36  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9325  001A38  B4D8               	btfsc	status,2,c
  9326                           
  9327                           ; BSR set to: 0
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;	Return value of i2_memcpy is never used
  9331  001A3A  0012               	return	
  9332  001A3C  D7E5               	goto	i2l2428
  9333  001A3E                     __end_ofi2_memcpy:
  9334                           	opt stack 0
  9335                           pclatu	equ	0xFFB
  9336                           pclath	equ	0xFFA
  9337                           tblptru	equ	0xFF8
  9338                           tblptrh	equ	0xFF7
  9339                           tblptrl	equ	0xFF6
  9340                           tablat	equ	0xFF5
  9341                           prodh	equ	0xFF4
  9342                           prodl	equ	0xFF3
  9343                           intcon	equ	0xFF2
  9344                           postinc0	equ	0xFEE
  9345                           fsr0h	equ	0xFEA
  9346                           fsr0l	equ	0xFE9
  9347                           wreg	equ	0xFE8
  9348                           indf1	equ	0xFE7
  9349                           fsr1h	equ	0xFE2
  9350                           fsr1l	equ	0xFE1
  9351                           bsr	equ	0xFE0
  9352                           indf2	equ	0xFDF
  9353                           postinc2	equ	0xFDE
  9354                           postdec2	equ	0xFDD
  9355                           fsr2h	equ	0xFDA
  9356                           fsr2l	equ	0xFD9
  9357                           status	equ	0xFD8
  9358                           
  9359 ;; *************** function i2___awmod *****************
  9360 ;; Defined at:
  9361 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;  dividend        2    0[BANK0 ] int 
  9364 ;;  divisor         2    2[BANK0 ] int 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9367 ;;  __awmod         1    4[BANK0 ] unsigned char 
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  2    0[BANK0 ] int 
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, status,0, prodl
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9377 ;;      Params:         0       4       0       0       0
  9378 ;;      Locals:         0       2       0       0       0
  9379 ;;      Temps:          0       0       0       0       0
  9380 ;;      Totals:         0       6       0       0       0
  9381 ;;Total ram usage:        6 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; This function calls:
  9384 ;;		Nothing
  9385 ;; This function is called by:
  9386 ;;		i2_send_msg
  9387 ;;		i2_recv_msg
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text56
  9392  001382                     __ptext56:
  9393                           	opt stack 0
  9394  001382                     i2___awmod:
  9395                           	opt stack 15
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;incstack = 0
  9399  001382  0E00               	movlw	0
  9400  001384  0100               	movlb	0	; () banked
  9401  001386  6F85               	movwf	i2___awmod@sign& (0+255),b
  9402                           
  9403                           ; BSR set to: 0
  9404  001388  0100               	movlb	0	; () banked
  9405  00138A  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9406  00138C  0A80               	xorlw	128
  9407  00138E  6EF3               	movwf	prodl,c
  9408  001390  0E80               	movlw	128
  9409  001392  5CF3               	subwf	prodl,w,c
  9410  001394  0E00               	movlw	0
  9411  001396  B4D8               	btfsc	status,2,c
  9412  001398  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9413  00139A  B0D8               	btfsc	status,0,c
  9414  00139C  D009               	goto	i2l2480
  9415                           
  9416                           ; BSR set to: 0
  9417  00139E  0100               	movlb	0	; () banked
  9418  0013A0  6D80               	negf	i2___awmod@dividend& (0+255),b
  9419  0013A2  0100               	movlb	0	; () banked
  9420  0013A4  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9421  0013A6  B0D8               	btfsc	status,0,c
  9422  0013A8  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9423                           
  9424                           ; BSR set to: 0
  9425  0013AA  0E01               	movlw	1
  9426  0013AC  0100               	movlb	0	; () banked
  9427  0013AE  6F85               	movwf	i2___awmod@sign& (0+255),b
  9428  0013B0                     i2l2480:
  9429                           
  9430                           ; BSR set to: 0
  9431  0013B0  0100               	movlb	0	; () banked
  9432  0013B2  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9433  0013B4  0A80               	xorlw	128
  9434  0013B6  6EF3               	movwf	prodl,c
  9435  0013B8  0E80               	movlw	128
  9436  0013BA  5CF3               	subwf	prodl,w,c
  9437  0013BC  0E00               	movlw	0
  9438  0013BE  B4D8               	btfsc	status,2,c
  9439  0013C0  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9440  0013C2  B0D8               	btfsc	status,0,c
  9441  0013C4  D006               	goto	i2l2484
  9442                           
  9443                           ; BSR set to: 0
  9444  0013C6  0100               	movlb	0	; () banked
  9445  0013C8  6D82               	negf	i2___awmod@divisor& (0+255),b
  9446  0013CA  0100               	movlb	0	; () banked
  9447  0013CC  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9448  0013CE  B0D8               	btfsc	status,0,c
  9449  0013D0  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9450  0013D2                     i2l2484:
  9451                           
  9452                           ; BSR set to: 0
  9453  0013D2  0100               	movlb	0	; () banked
  9454  0013D4  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9455  0013D6  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9456  0013D8  B4D8               	btfsc	status,2,c
  9457  0013DA  D026               	goto	i2l2500
  9458                           
  9459                           ; BSR set to: 0
  9460  0013DC  0E01               	movlw	1
  9461  0013DE  0100               	movlb	0	; () banked
  9462  0013E0  6F84               	movwf	i2___awmod@counter& (0+255),b
  9463  0013E2  D006               	goto	i2l2490
  9464  0013E4                     i2l2488:
  9465                           
  9466                           ; BSR set to: 0
  9467  0013E4  0100               	movlb	0	; () banked
  9468  0013E6  90D8               	bcf	status,0,c
  9469  0013E8  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9470  0013EA  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9471  0013EC  0100               	movlb	0	; () banked
  9472  0013EE  2B84               	incf	i2___awmod@counter& (0+255),f,b
  9473  0013F0                     i2l2490:
  9474                           
  9475                           ; BSR set to: 0
  9476  0013F0  0100               	movlb	0	; () banked
  9477  0013F2  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9478  0013F4  D7F7               	goto	i2l2488
  9479  0013F6                     i2l2492:
  9480                           
  9481                           ; BSR set to: 0
  9482  0013F6  0100               	movlb	0	; () banked
  9483  0013F8  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9484  0013FA  0100               	movlb	0	; () banked
  9485  0013FC  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9486  0013FE  0100               	movlb	0	; () banked
  9487  001400  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9488  001402  0100               	movlb	0	; () banked
  9489  001404  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9490  001406  A0D8               	btfss	status,0,c
  9491  001408  D008               	goto	i2l2496
  9492                           
  9493                           ; BSR set to: 0
  9494  00140A  0100               	movlb	0	; () banked
  9495  00140C  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9496  00140E  0100               	movlb	0	; () banked
  9497  001410  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9498  001412  0100               	movlb	0	; () banked
  9499  001414  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9500  001416  0100               	movlb	0	; () banked
  9501  001418  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9502  00141A                     i2l2496:
  9503                           
  9504                           ; BSR set to: 0
  9505  00141A  0100               	movlb	0	; () banked
  9506  00141C  90D8               	bcf	status,0,c
  9507  00141E  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9508  001420  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9509                           
  9510                           ; BSR set to: 0
  9511  001422  0100               	movlb	0	; () banked
  9512  001424  2F84               	decfsz	i2___awmod@counter& (0+255),f,b
  9513  001426  D7E7               	goto	i2l2492
  9514  001428                     i2l2500:
  9515                           
  9516                           ; BSR set to: 0
  9517  001428  0100               	movlb	0	; () banked
  9518  00142A  5185               	movf	i2___awmod@sign& (0+255),w,b
  9519  00142C  B4D8               	btfsc	status,2,c
  9520  00142E  D006               	goto	i2l2504
  9521                           
  9522                           ; BSR set to: 0
  9523  001430  0100               	movlb	0	; () banked
  9524  001432  6D80               	negf	i2___awmod@dividend& (0+255),b
  9525  001434  0100               	movlb	0	; () banked
  9526  001436  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9527  001438  B0D8               	btfsc	status,0,c
  9528  00143A  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9529  00143C                     i2l2504:
  9530                           
  9531                           ; BSR set to: 0
  9532  00143C  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9533  001440  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9534  001444  0012               	return	
  9535  001446                     __end_ofi2___awmod:
  9536                           	opt stack 0
  9537                           pclatu	equ	0xFFB
  9538                           pclath	equ	0xFFA
  9539                           tblptru	equ	0xFF8
  9540                           tblptrh	equ	0xFF7
  9541                           tblptrl	equ	0xFF6
  9542                           tablat	equ	0xFF5
  9543                           prodh	equ	0xFF4
  9544                           prodl	equ	0xFF3
  9545                           intcon	equ	0xFF2
  9546                           postinc0	equ	0xFEE
  9547                           fsr0h	equ	0xFEA
  9548                           fsr0l	equ	0xFE9
  9549                           wreg	equ	0xFE8
  9550                           indf1	equ	0xFE7
  9551                           fsr1h	equ	0xFE2
  9552                           fsr1l	equ	0xFE1
  9553                           bsr	equ	0xFE0
  9554                           indf2	equ	0xFDF
  9555                           postinc2	equ	0xFDE
  9556                           postdec2	equ	0xFDD
  9557                           fsr2h	equ	0xFDA
  9558                           fsr2l	equ	0xFD9
  9559                           status	equ	0xFD8
  9560                           
  9561 ;; *************** function _SleepIfOkay *****************
  9562 ;; Defined at:
  9563 ;;		line 226 in file "../src/messages.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;		None
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;		None
  9568 ;; Return value:  Size  Location     Type
  9569 ;;		None               void
  9570 ;; Registers used:
  9571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9577 ;;      Params:         0       0       0       0       0
  9578 ;;      Locals:         0       0       0       0       0
  9579 ;;      Temps:          0       0       0       0       0
  9580 ;;      Totals:         0       0       0       0       0
  9581 ;;Total ram usage:        0 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    2
  9584 ;; This function calls:
  9585 ;;		_check_msg
  9586 ;;		_enter_sleep_mode
  9587 ;;		_in_high_int
  9588 ;;		_in_low_int
  9589 ;; This function is called by:
  9590 ;;		_InterruptHandlerHigh
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text57
  9595  001896                     __ptext57:
  9596                           	opt stack 0
  9597  001896                     _SleepIfOkay:
  9598                           	opt stack 16
  9599                           
  9600                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;incstack = 0
  9604  001896  0100               	movlb	0	; () banked
  9605  001898  67C7               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9606  00189A  D001               	goto	i2l2982
  9607  00189C  0012               	return	
  9608  00189E                     i2l2982:
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;messages.c: 230: }
  9612                           ;messages.c: 233: if (in_low_int()) {
  9613  00189E  EC3F  F00D         	call	_in_low_int	;wreg free
  9614  0018A2  0100               	movlb	0	; () banked
  9615  0018A4  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  9616  0018A6  0100               	movlb	0	; () banked
  9617  0018A8  1182               	iorwf	?_in_low_int& (0+255),w,b
  9618  0018AA  A4D8               	btfss	status,2,c
  9619  0018AC  0012               	return	
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;messages.c: 235: }
  9623                           ;messages.c: 238: if (!in_high_int()) {
  9624                           
  9625                           ; BSR set to: 0
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;messages.c: 234: return;
  9629  0018AE  ECE6  F00E         	call	_in_high_int	;wreg free
  9630  0018B2  0100               	movlb	0	; () banked
  9631  0018B4  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9632  0018B6  0100               	movlb	0	; () banked
  9633  0018B8  1180               	iorwf	?_in_high_int& (0+255),w,b
  9634  0018BA  B4D8               	btfsc	status,2,c
  9635  0018BC  0012               	return	
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;messages.c: 240: }
  9639                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9640                           
  9641                           ; BSR set to: 0
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;messages.c: 239: return;
  9645  0018BE  0102               	movlb	2	; () banked
  9646  0018C0  0E02               	movlw	high _ToMainHigh_MQ
  9647  0018C2  0100               	movlb	0	; () banked
  9648  0018C4  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9649  0018C6  0102               	movlb	2	; () banked
  9650  0018C8  0E57               	movlw	low _ToMainHigh_MQ
  9651  0018CA  0100               	movlb	0	; () banked
  9652  0018CC  6F80               	movwf	check_msg@qptr& (0+255),b
  9653  0018CE  ECE1  F00D         	call	_check_msg	;wreg free
  9654  0018D2  0900               	iorlw	0
  9655  0018D4  A4D8               	btfss	status,2,c
  9656  0018D6  0012               	return	
  9657                           
  9658                           ;messages.c: 247: }
  9659                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9660                           
  9661                           ;messages.c: 246: return;
  9662  0018D8  0101               	movlb	1	; () banked
  9663  0018DA  0E01               	movlw	high _ToMainLow_MQ
  9664  0018DC  0100               	movlb	0	; () banked
  9665  0018DE  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  9666  0018E0  0101               	movlb	1	; () banked
  9667  0018E2  0E72               	movlw	low _ToMainLow_MQ
  9668  0018E4  0100               	movlb	0	; () banked
  9669  0018E6  6F80               	movwf	check_msg@qptr& (0+255),b
  9670  0018E8  ECE1  F00D         	call	_check_msg	;wreg free
  9671  0018EC  0900               	iorlw	0
  9672  0018EE  B4D8               	btfsc	status,2,c
  9673                           
  9674                           ;messages.c: 250: }
  9675                           ;messages.c: 251: enter_sleep_mode();
  9676                           
  9677                           ;messages.c: 249: return;
  9678  0018F0  EC1E  F00F         	call	_enter_sleep_mode	;wreg free
  9679  0018F4  0012               	return	
  9680  0018F6                     __end_of_SleepIfOkay:
  9681                           	opt stack 0
  9682                           pclatu	equ	0xFFB
  9683                           pclath	equ	0xFFA
  9684                           tblptru	equ	0xFF8
  9685                           tblptrh	equ	0xFF7
  9686                           tblptrl	equ	0xFF6
  9687                           tablat	equ	0xFF5
  9688                           prodh	equ	0xFF4
  9689                           prodl	equ	0xFF3
  9690                           intcon	equ	0xFF2
  9691                           postinc0	equ	0xFEE
  9692                           fsr0h	equ	0xFEA
  9693                           fsr0l	equ	0xFE9
  9694                           wreg	equ	0xFE8
  9695                           indf1	equ	0xFE7
  9696                           fsr1h	equ	0xFE2
  9697                           fsr1l	equ	0xFE1
  9698                           bsr	equ	0xFE0
  9699                           indf2	equ	0xFDF
  9700                           postinc2	equ	0xFDE
  9701                           postdec2	equ	0xFDD
  9702                           fsr2h	equ	0xFDA
  9703                           fsr2l	equ	0xFD9
  9704                           status	equ	0xFD8
  9705                           
  9706 ;; *************** function _in_low_int *****************
  9707 ;; Defined at:
  9708 ;;		line 33 in file "../src/interrupts.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  2    2[BANK0 ] int 
  9715 ;; Registers used:
  9716 ;;		wreg, status,2, status,0, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9722 ;;      Params:         0       2       0       0       0
  9723 ;;      Locals:         0       0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0
  9725 ;;      Totals:         0       2       0       0       0
  9726 ;;Total ram usage:        2 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    1
  9729 ;; This function calls:
  9730 ;;		_in_high_int
  9731 ;; This function is called by:
  9732 ;;		_SleepIfOkay
  9733 ;;		_in_main
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           	psect	text58
  9738  001A7E                     __ptext58:
  9739                           	opt stack 0
  9740  001A7E                     _in_low_int:
  9741                           	opt stack 16
  9742                           
  9743                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  9744                           
  9745                           ;incstack = 0
  9746  001A7E  ACF2               	btfss	intcon,6,c	;volatile
  9747  001A80  D007               	goto	i2l2636
  9748                           
  9749                           ;interrupts.c: 35: return (0);
  9750  001A82  0E00               	movlw	0
  9751  001A84  0100               	movlb	0	; () banked
  9752  001A86  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9753  001A88  0E00               	movlw	0
  9754  001A8A  0100               	movlb	0	; () banked
  9755  001A8C  6F82               	movwf	?_in_low_int& (0+255),b
  9756  001A8E  0012               	return	
  9757  001A90                     i2l2636:
  9758  001A90  ECE6  F00E         	call	_in_high_int	;wreg free
  9759  001A94  0100               	movlb	0	; () banked
  9760  001A96  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  9761  001A98  0100               	movlb	0	; () banked
  9762  001A9A  1180               	iorwf	?_in_high_int& (0+255),w,b
  9763  001A9C  B4D8               	btfsc	status,2,c
  9764  001A9E  D007               	goto	i2l2644
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;interrupts.c: 37: return (0);
  9768  001AA0  0E00               	movlw	0
  9769  001AA2  0100               	movlb	0	; () banked
  9770  001AA4  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9771  001AA6  0E00               	movlw	0
  9772  001AA8  0100               	movlb	0	; () banked
  9773  001AAA  6F82               	movwf	?_in_low_int& (0+255),b
  9774  001AAC  0012               	return	
  9775  001AAE                     i2l2644:
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;interrupts.c: 39: return (1);
  9779  001AAE  0E00               	movlw	0
  9780  001AB0  0100               	movlb	0	; () banked
  9781  001AB2  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  9782  001AB4  0E01               	movlw	1
  9783  001AB6  0100               	movlb	0	; () banked
  9784  001AB8  6F82               	movwf	?_in_low_int& (0+255),b
  9785  001ABA  0012               	return	
  9786  001ABC                     __end_of_in_low_int:
  9787                           	opt stack 0
  9788                           pclatu	equ	0xFFB
  9789                           pclath	equ	0xFFA
  9790                           tblptru	equ	0xFF8
  9791                           tblptrh	equ	0xFF7
  9792                           tblptrl	equ	0xFF6
  9793                           tablat	equ	0xFF5
  9794                           prodh	equ	0xFF4
  9795                           prodl	equ	0xFF3
  9796                           intcon	equ	0xFF2
  9797                           postinc0	equ	0xFEE
  9798                           fsr0h	equ	0xFEA
  9799                           fsr0l	equ	0xFE9
  9800                           wreg	equ	0xFE8
  9801                           indf1	equ	0xFE7
  9802                           fsr1h	equ	0xFE2
  9803                           fsr1l	equ	0xFE1
  9804                           bsr	equ	0xFE0
  9805                           indf2	equ	0xFDF
  9806                           postinc2	equ	0xFDE
  9807                           postdec2	equ	0xFDD
  9808                           fsr2h	equ	0xFDA
  9809                           fsr2l	equ	0xFD9
  9810                           status	equ	0xFD8
  9811                           
  9812 ;; *************** function _in_high_int *****************
  9813 ;; Defined at:
  9814 ;;		line 25 in file "../src/interrupts.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  2    0[BANK0 ] int 
  9821 ;; Registers used:
  9822 ;;		wreg, status,2
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9828 ;;      Params:         0       2       0       0       0
  9829 ;;      Locals:         0       0       0       0       0
  9830 ;;      Temps:          0       0       0       0       0
  9831 ;;      Totals:         0       2       0       0       0
  9832 ;;Total ram usage:        2 bytes
  9833 ;; Hardware stack levels used:    1
  9834 ;; This function calls:
  9835 ;;		Nothing
  9836 ;; This function is called by:
  9837 ;;		_in_low_int
  9838 ;;		_SleepIfOkay
  9839 ;;		_in_main
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           	psect	text59
  9844  001DCC                     __ptext59:
  9845                           	opt stack 0
  9846  001DCC                     _in_high_int:
  9847                           	opt stack 16
  9848                           
  9849                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;incstack = 0
  9853  001DCC  0E00               	movlw	0
  9854  001DCE  AEF2               	btfss	intcon,7,c	;volatile
  9855  001DD0  0E01               	movlw	1
  9856  001DD2  0100               	movlb	0	; () banked
  9857  001DD4  6F80               	movwf	?_in_high_int& (0+255),b
  9858  001DD6  0100               	movlb	0	; () banked
  9859  001DD8  6B81               	clrf	(?_in_high_int+1)& (0+255),b
  9860  001DDA  0012               	return	
  9861  001DDC                     __end_of_in_high_int:
  9862                           	opt stack 0
  9863                           pclatu	equ	0xFFB
  9864                           pclath	equ	0xFFA
  9865                           tblptru	equ	0xFF8
  9866                           tblptrh	equ	0xFF7
  9867                           tblptrl	equ	0xFF6
  9868                           tablat	equ	0xFF5
  9869                           prodh	equ	0xFF4
  9870                           prodl	equ	0xFF3
  9871                           intcon	equ	0xFF2
  9872                           postinc0	equ	0xFEE
  9873                           fsr0h	equ	0xFEA
  9874                           fsr0l	equ	0xFE9
  9875                           wreg	equ	0xFE8
  9876                           indf1	equ	0xFE7
  9877                           fsr1h	equ	0xFE2
  9878                           fsr1l	equ	0xFE1
  9879                           bsr	equ	0xFE0
  9880                           indf2	equ	0xFDF
  9881                           postinc2	equ	0xFDE
  9882                           postdec2	equ	0xFDD
  9883                           fsr2h	equ	0xFDA
  9884                           fsr2l	equ	0xFD9
  9885                           status	equ	0xFD8
  9886                           
  9887 ;; *************** function _enter_sleep_mode *****************
  9888 ;; Defined at:
  9889 ;;		line 202 in file "../src/messages.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;		None
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;		None
  9894 ;; Return value:  Size  Location     Type
  9895 ;;		None               void
  9896 ;; Registers used:
  9897 ;;		None
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9903 ;;      Params:         0       0       0       0       0
  9904 ;;      Locals:         0       0       0       0       0
  9905 ;;      Temps:          0       0       0       0       0
  9906 ;;      Totals:         0       0       0       0       0
  9907 ;;Total ram usage:        0 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; This function calls:
  9910 ;;		Nothing
  9911 ;; This function is called by:
  9912 ;;		_SleepIfOkay
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text60
  9917  001E3C                     __ptext60:
  9918                           	opt stack 0
  9919  001E3C                     _enter_sleep_mode:
  9920                           	opt stack 17
  9921                           
  9922                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;incstack = 0
  9926  001E3C  8ED3               	bsf	4051,7,c	;volatile
  9927  001E3E  0003               	sleep		;# 
  9928  001E40  0012               	return	
  9929  001E42                     __end_of_enter_sleep_mode:
  9930                           	opt stack 0
  9931                           pclatu	equ	0xFFB
  9932                           pclath	equ	0xFFA
  9933                           tblptru	equ	0xFF8
  9934                           tblptrh	equ	0xFF7
  9935                           tblptrl	equ	0xFF6
  9936                           tablat	equ	0xFF5
  9937                           prodh	equ	0xFF4
  9938                           prodl	equ	0xFF3
  9939                           intcon	equ	0xFF2
  9940                           postinc0	equ	0xFEE
  9941                           fsr0h	equ	0xFEA
  9942                           fsr0l	equ	0xFE9
  9943                           wreg	equ	0xFE8
  9944                           indf1	equ	0xFE7
  9945                           fsr1h	equ	0xFE2
  9946                           fsr1l	equ	0xFE1
  9947                           bsr	equ	0xFE0
  9948                           indf2	equ	0xFDF
  9949                           postinc2	equ	0xFDE
  9950                           postdec2	equ	0xFDD
  9951                           fsr2h	equ	0xFDA
  9952                           fsr2l	equ	0xFD9
  9953                           status	equ	0xFD8
  9954                           
  9955 ;; *************** function _check_msg *****************
  9956 ;; Defined at:
  9957 ;;		line 220 in file "../src/messages.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9960 ;;		 -> ToMainHigh_MQ(87), ToMainLow_MQ(87), 
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;		None
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1    wreg      unsigned char 
  9965 ;; Registers used:
  9966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9972 ;;      Params:         0       2       0       0       0
  9973 ;;      Locals:         0       0       0       0       0
  9974 ;;      Temps:          0       1       0       0       0
  9975 ;;      Totals:         0       3       0       0       0
  9976 ;;Total ram usage:        3 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_SleepIfOkay
  9982 ;;		_block_on_To_msgqueues
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text61
  9987  001BC2                     __ptext61:
  9988                           	opt stack 0
  9989  001BC2                     _check_msg:
  9990                           	opt stack 17
  9991                           
  9992                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9993                           
  9994                           ;incstack = 0
  9995  001BC2  0100               	movlb	0	; () banked
  9996  001BC4  EE20 F056          	lfsr	2,86
  9997  001BC8  0100               	movlb	0	; () banked
  9998  001BCA  5180               	movf	check_msg@qptr& (0+255),w,b
  9999  001BCC  26D9               	addwf	fsr2l,f,c
 10000  001BCE  0100               	movlb	0	; () banked
 10001  001BD0  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
 10002  001BD2  22DA               	addwfc	fsr2h,f,c
 10003  001BD4  50DF               	movf	indf2,w,c
 10004  001BD6  0100               	movlb	0	; () banked
 10005  001BD8  6F82               	movwf	??_check_msg& (0+255),b
 10006  001BDA  0100               	movlb	0	; () banked
 10007  001BDC  5182               	movf	??_check_msg& (0+255),w,b
 10008  001BDE  0D11               	mullw	17
 10009  001BE0  50F3               	movf	prodl,w,c
 10010  001BE2  0100               	movlb	0	; () banked
 10011  001BE4  2580               	addwf	check_msg@qptr& (0+255),w,b
 10012  001BE6  6ED9               	movwf	fsr2l,c
 10013  001BE8  50F4               	movf	prodh,w,c
 10014  001BEA  0100               	movlb	0	; () banked
 10015  001BEC  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
 10016  001BEE  6EDA               	movwf	fsr2h,c
 10017  001BF0  50DF               	movf	indf2,w,c
 10018  001BF2  0012               	return	
 10019  001BF4                     __end_of_check_msg:
 10020                           	opt stack 0
 10021  0000                     pclatu	equ	0xFFB
 10022                           pclath	equ	0xFFA
 10023                           tblptru	equ	0xFF8
 10024                           tblptrh	equ	0xFF7
 10025                           tblptrl	equ	0xFF6
 10026                           tablat	equ	0xFF5
 10027                           prodh	equ	0xFF4
 10028                           prodl	equ	0xFF3
 10029                           intcon	equ	0xFF2
 10030                           postinc0	equ	0xFEE
 10031                           fsr0h	equ	0xFEA
 10032                           fsr0l	equ	0xFE9
 10033                           wreg	equ	0xFE8
 10034                           indf1	equ	0xFE7
 10035                           fsr1h	equ	0xFE2
 10036                           fsr1l	equ	0xFE1
 10037                           bsr	equ	0xFE0
 10038                           indf2	equ	0xFDF
 10039                           postinc2	equ	0xFDE
 10040                           postdec2	equ	0xFDD
 10041                           fsr2h	equ	0xFDA
 10042                           fsr2l	equ	0xFD9
 10043                           status	equ	0xFD8
 10044                           pclatu	equ	0xFFB
 10045                           pclath	equ	0xFFA
 10046                           tblptru	equ	0xFF8
 10047                           tblptrh	equ	0xFF7
 10048                           tblptrl	equ	0xFF6
 10049                           tablat	equ	0xFF5
 10050                           prodh	equ	0xFF4
 10051                           prodl	equ	0xFF3
 10052                           intcon	equ	0xFF2
 10053                           postinc0	equ	0xFEE
 10054                           fsr0h	equ	0xFEA
 10055                           fsr0l	equ	0xFE9
 10056                           wreg	equ	0xFE8
 10057                           indf1	equ	0xFE7
 10058                           fsr1h	equ	0xFE2
 10059                           fsr1l	equ	0xFE1
 10060                           bsr	equ	0xFE0
 10061                           indf2	equ	0xFDF
 10062                           postinc2	equ	0xFDE
 10063                           postdec2	equ	0xFDD
 10064                           fsr2h	equ	0xFDA
 10065                           fsr2l	equ	0xFD9
 10066                           status	equ	0xFD8
 10067                           
 10068                           	psect	param0
 10069  0000                     pclatu	equ	0xFFB
 10070                           pclath	equ	0xFFA
 10071                           tblptru	equ	0xFF8
 10072                           tblptrh	equ	0xFF7
 10073                           tblptrl	equ	0xFF6
 10074                           tablat	equ	0xFF5
 10075                           prodh	equ	0xFF4
 10076                           prodl	equ	0xFF3
 10077                           intcon	equ	0xFF2
 10078                           postinc0	equ	0xFEE
 10079                           fsr0h	equ	0xFEA
 10080                           fsr0l	equ	0xFE9
 10081                           wreg	equ	0xFE8
 10082                           indf1	equ	0xFE7
 10083                           fsr1h	equ	0xFE2
 10084                           fsr1l	equ	0xFE1
 10085                           bsr	equ	0xFE0
 10086                           indf2	equ	0xFDF
 10087                           postinc2	equ	0xFDE
 10088                           postdec2	equ	0xFDD
 10089                           fsr2h	equ	0xFDA
 10090                           fsr2l	equ	0xFD9
 10091                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         376
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      99
    BANK0           128     69      72
    BANK1           256    114     201
    BANK2           256      0     174
    BANK3           256      0      87

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 87
		 -> ToMainLow_MQ.data(BANK1[14]), ToMainHigh_MQ.data(BANK2[14]), FromMainLow_MQ.data(BANK2[14]), FromMainHigh_MQ.data(BANK3[14]), 
		 -> ToMainLow_MQ.queue.data(BANK1[14]), ToMainHigh_MQ.queue.data(BANK2[14]), FromMainHigh_MQ.queue.data(BANK3[14]), FromMainLow_MQ.queue.data(BANK2[14]), 
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), 
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    send_uart_message@message_ptr	PTR unsigned char  size(2) Largest target is 14
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), main@uart_response(BANK1[14]), 

    need_sensor_data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 38
		 -> main@ic(BANK1[38]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 38
		 -> NULL(NULL[0]), main@ic(BANK1[38]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), main@ic(BANK1[38]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> main@motor_data(BANK1[14]), main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> uart_transmit_interrupt_handler@data(COMRAM[2]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_transmit_interrupt_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), main@uart_response(BANK1[14]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[38]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 15
		 -> main@msgbuffer(BANK1[15]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), uart_receive_interrupt_handler@message_count(COMRAM[1]), uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), 
		 -> uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_transmit_interrupt_handler@msgtype(COMRAM[1]), retrieve_sensor_values@msgtype(COMRAM[1]), i2c_int_handler@msg_type(BANK0[1]), 
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 38
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    sp__memcpy	PTR void  size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_transmit_interrupt_handler@data(COMRAM[2]), FromMainHigh_MQ(BANK3[87]), 
		 -> FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), main@msgbuffer(BANK1[15]), 
		 -> main@ic(BANK1[38]), 

    send_msg@data	PTR void  size(2) Largest target is 38
		 -> i_like_to_moveit_moveit@moves(BANK1[2]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), uart_receive_interrupt_handler@message_count(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_checksum_id(COMRAM[1]), uart_receive_interrupt_handler@gooey_uart_center(COMRAM[14]), uart_receive_interrupt_handler@bad_counter_id(COMRAM[2]), uart_receive_interrupt_handler@bad_end_id(COMRAM[1]), 
		 -> uart_receive_interrupt_handler@bad_start_id(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@uart_response(BANK1[14]), main@motor_data(BANK1[14]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[38]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 87
		 -> FromMainLow_MQ.queue(BANK2[85]), FromMainHigh_MQ.queue(BANK3[85]), ToMainHigh_MQ.queue(BANK2[85]), ToMainLow_MQ.queue(BANK1[85]), 
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 87
		 -> FromMainHigh_MQ(BANK3[87]), FromMainLow_MQ(BANK2[87]), ToMainHigh_MQ(BANK2[87]), ToMainLow_MQ(BANK1[87]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_receive_interrupt_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_send_uart_message
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _i2c_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _i_like_to_moveit_moveit->_send_uart_message
    _send_uart_message->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                96    96      0   21018
                                             22 BANK1     92    92      0
               _FromMainHigh_sendmsg
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                               _blip
                              _blip1
                              _blip2
                              _blip3
                    _debug_configure
                  _enable_interrupts
                _i2c_configure_slave
            _i_like_to_moveit_moveit
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _send_uart_message
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3477
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
                             _blink0
 ---------------------------------------------------------------------------------
 (2) _blink0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2788
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i_like_to_moveit_moveit                              4     3      1    3289
                                             16 BANK1      4     3      1
                  _send_uart_message
 ---------------------------------------------------------------------------------
 (1) _send_uart_message                                    3     1      2    3082
                                             68 BANK0      1     1      0
                                             14 BANK1      2     0      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2658
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug_configure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blip                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2689
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2466
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     637
                                             56 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    7016
                                             54 COMRAM    17    17      0
                 _timer1_int_handler
     _uart_receive_interrupt_handler
    _uart_transmit_interrupt_handler
 ---------------------------------------------------------------------------------
 (7) _uart_transmit_interrupt_handler                      4     4      0    1765
                                             29 COMRAM     4     4      0
                _FromMainLow_recvmsg
                             i1_blip
 ---------------------------------------------------------------------------------
 (8) i1_blip                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1438
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1215
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_receive_interrupt_handler                      28    28      0    2943
                                             26 COMRAM    28    28      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    2308
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2187
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    1184
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     294
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    8352
                                             42 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    3788
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    13    13      0    4308
                                             29 BANK0     13    13      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                              _blip4
                       _handle_start
              _start_i2c_slave_reply
                            i2_blip1
                            i2_blip3
 ---------------------------------------------------------------------------------
 (13) i2_blip3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_blip1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     119
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _blip4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1797
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    1184
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1698
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    1215
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     256
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (13) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (14) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _check_msg                                           3     1      2     256
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainHigh_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _blip
   _blip1
   _blip2
   _blip3
   _debug_configure
   _enable_interrupts
   _i2c_configure_slave
   _i_like_to_moveit_moveit
     _send_uart_message
       _FromMainLow_sendmsg
         _send_msg
           ___awmod
           _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _send_uart_message
     _FromMainLow_sendmsg
       _send_msg
         ___awmod
         _memcpy
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
     _blink0
   _uart_configure

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_receive_interrupt_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_transmit_interrupt_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
     i1_blip

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _blip4
     _handle_start
     _start_i2c_slave_reply
     i2_blip1
     i2_blip3
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      57      12       34.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      AE       8       68.0%
BITBANK1           100      0       0      10        0.0%
BANK1              100     72      C9       6       78.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     45      48       5       56.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     279       9        0.0%
DATA                 0      0     279       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Oct 14 20:38:16 2014

                              ??_debug_configure 00B8                         _MQ_Main_Willing_to_block 00C7  
                                    _SSPSTATbits 000FC7               uart_receive_interrupt_handler@done 005D  
                      __end_of_ToMainLow_recvmsg 1AF2                                               bsr 000FE0  
                      __end_of_ToMainLow_sendmsg 1D44                                     __CFG_CP0$OFF 000000  
                              i2recv_msg@msgtype 008D                                i2recv_msg@tlength 0094  
                           ?_FromMainLow_recvmsg 0019                                              l121 0818  
                                            l543 1D1A                                              l544 1D1C  
                                            l570 1BBE                                              l567 1BA6  
                                            l569 1BBC                             ?_FromMainLow_sendmsg 010B  
                           __size_of_WriteTimer0 0012                             __size_of_WriteTimer1 0012  
                               ??_uart_configure 00B8                                     ___awmod@sign 00BD  
                                 _FromMainLow_MQ 0200                                              prod 000FF3  
                                            wreg 000FE8                                       _TXSTA1bits 000FAC  
                                   __CFG_IESO$ON 000000                                     ?_in_high_int 0080  
                                ReadTimer1@timer 0003                              i2recv_msg@maxlength 008C  
                                           l1117 188C                                             l3500 132C  
                                           l4220 0928                                             l4212 08C6  
                                           l3502 1332                                             l3510 1364  
                                           l4214 0908                                             l4240 098C  
                                           l4160 0758                                             l3186 1BA8  
                                           l3514 1378                                             l3506 1356  
                                           l3530 0E3A                                             l4234 096C  
                                           l4250 09AC                                             l4228 094C  
                                           l4180 07FC                                             l4166 0760  
                                           l3480 19D8                                             l2664 17AC  
                                           l3720 1848                                             l4192 083C  
                                           l3490 12EC                                             l3474 19B8  
                                           l3722 1854                                             l4186 080E  
                                           l4178 07B8                                             l4194 0858  
                                           l3724 185A                                             l4188 081E  
                                           l3494 130E                                             l3728 187E  
                                           l3498 1320                                             l3678 0BCC  
                                           l3694 0CAA                                             _LATB 000F8A  
                                           i1l52 007A                                  _FromMainHigh_MQ 0300  
                                  __CFG_FCMEN$ON 000000                                             _blip 1E14  
                                     i1_recv_msg 110C                                             _main 06E2  
                       ?_i_like_to_moveit_moveit 0110                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             fsr0l 000FE9  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           fsr1l 000FE1                                             indf2 000FDF  
                                           fsr2l 000FD9                                      main@msgtype 014B  
                                     i1_send_msg 1446                                             pclat 000FFA  
                                           prodh 000FF4                                  __end_ofi2_blip1 1E34  
                                           prodl 000FF3                                  __end_ofi2_blip3 1E2C  
                          handle_start@data_read 0080                                             start 00C0  
                                     i2_recv_msg 0CAE                                    __CFG_FOSC2$ON 000000  
                                     i2_send_msg 0EFC                        ToMainHigh_recvmsg@msgtype 010C  
                                 send_msg@length 0102                      __size_of_timer0_int_handler 006E  
         uart_receive_interrupt_handler@checksum 002F                            ??_FromMainLow_recvmsg 001D  
                                          ?_blip 0001                            ??_FromMainLow_sendmsg 00C3  
                                          ?_main 0001                                  __end_of___awmod 1382  
                                          _T0CON 000FD5                                            _T1CON 000FCD  
                                          i1l415 0B50                                  __end_of___lwmod 1896  
                                     i1memcpy@d1 0001                                            i2l301 0180  
                                          i2l330 04FE                                            i2l324 042A  
                                          i2l316 0316                                            i2l285 1272  
                                          i2l295 04F0                                            i2l297 014E  
                                     i1memcpy@s1 0003                      FromMainHigh_recvmsg@msgtype 0098  
                                          _TMR0H 000FD7                                            _TMR1H 000FCF  
                                          _TMR0L 000FD6                                            _TMR1L 000FCE  
                                          _SPBRG 000FAF                                            _TRISB 000F93  
                                          _TRISD 000F95                                       i2memcpy@d1 0080  
                                     i2memcpy@s1 0082                                     ?_init_queues 0001  
                      __size_of_enter_sleep_mode 0006                                   i1___awmod@sign 0006  
                                          _blip1 1E0C                                            _blip2 1E04  
                                          _blip3 1DFC                                            _blip4 1E34  
    uart_receive_interrupt_handler@message_count 0033                       ToMainLow_recvmsg@maxlength 00C4  
                        timer0_lthread@msgbuffer 00BE                          i2c_configure_slave@addr 00B8  
                           main@need_sensor_data 0125                                            tablat 000FF5  
        i_like_to_moveit_moveit@right_side_speed 0110                                            status 000FD8  
                               __end_ofi1_memcpy 1A7E                               __size_ofi1___awmod 0090  
                               __end_ofi2_memcpy 1A3E                               __size_ofi2___awmod 00C4  
                                __initialization 194E                                     __end_of_blip 1E1C  
                                   __end_of_main 09E2                                       _ReadTimer1 1DA8  
                    __size_of_timer1_int_handler 002C                       __size_of_ToMainLow_recvmsg 0036  
                     __size_of_ToMainLow_sendmsg 0024                    __size_of_FromMainHigh_recvmsg 0036  
                  __size_of_FromMainHigh_sendmsg 002E                                           ??_blip 00B8  
                                         ??_main 00C5                                  send_msg@msgtype 0103  
                                  __activetblptr 000002                                  send_msg@tlength 0106  
                     FromMainLow_sendmsg@msgtype 010B                             __end_of_handle_start 12BE  
                                         ?_blip1 0001                                           ?_blip2 0001  
                                         ?_blip3 0001                                           ?_blip4 0001  
                                      ??i2_blip1 0080                                        ??i2_blip3 0080  
                                         i1l2424 1A6C                                           i1l4016 0B64  
                                         i1l4032 15C8                                           i1l4112 0070  
                                         i1l2418 1A50                                           i1l4106 0066  
                                         i1l2460 1574                                           i1l2452 1554  
                                         i1l2444 152A                                           i1l2454 155C  
                                         i1l2456 1560                                           i1l2464 157E  
                                         i1l2448 1546                                           i1l4056 15FC  
                                         i1l2468 158C                                           i1l3606 1152  
                                         i1l3622 11F0                                           i1l3558 147E  
                                         i2l2500 1428                                           i1l3940 0A22  
                                         i2l2504 143C                                           i1l3960 0A5A  
                                     _OpenTimer0 1CFA                                           i2l2434 1A28  
                                         i1l3946 0A28                                           i1l3962 0A5C  
                                     _OpenTimer1 1B90                                           i2l2428 1A08  
                                         i1l3972 0A8C                                           i1l3948 0A2E  
                                 __CFG_WDTEN$OFF 000000                                           i2l2480 13B0  
                                         i2l2490 13F0                                           i2l2730 10A0  
                                         i2l2644 1AAE                                           i2l2636 1A90  
                                         i2l2492 13F6                                           i2l2484 13D2  
                                         i2l4092 1654                                           i1l3996 0B08  
                                         i1l3988 0AE6                                           i2l2726 1024  
                                         i2l2496 141A                                           i2l2488 13E4  
                                         i2l3800 024C                                           i2l2746 128E  
                                         i2l3802 028C                                           i2l4098 165E  
                                         i2l2748 12A6                                           i2l3900 06A4  
                                         i2l3638 0D0E                                           i2l3654 0DE8  
                                         i2l3582 0F4A                                           i2l3830 0384  
                                         i2l3814 030C                                           i2l3832 03C6  
                                         i2l3836 03CE                                           i2l3764 0146  
                                         i2l2982 189E                                           i2l3870 0502  
                                         i2l3782 01AC                                           i2l3758 0138  
                                         i2l3784 01D8                                           i2l3864 04C4  
                                         i2l3794 0212                                           i2l3892 065E  
                                         i2l3884 05CC                                           i2l3876 0560  
                                         _RCREG1 000FAE                      __end_of_i2c_configure_slave 1CD2  
                                  ??_SleepIfOkay 0084                                           _OSCCON 000FD3  
                                         _SPBRGH 000FB0                                      ?i1_recv_msg 000B  
                                         _SSPADD 000FC8                                           _SSPBUF 000FC9  
                 __size_of_start_i2c_slave_reply 0104                                           _TXREG1 000FAD  
                                    ?i1_send_msg 000B                                           i1_blip 1E1C  
                  __end_of_start_i2c_slave_reply 110C                               timer0_lthread@tptr 00B8  
                        FromMainLow_recvmsg@data 001B                                      ?i2_recv_msg 008A  
                                    ?i2_send_msg 008A                                   __CFG_XINST$OFF 000000  
               ??_uart_receive_interrupt_handler 001B                  ?_uart_receive_interrupt_handler 0001  
                                _i2c_int_handler 00C4                                        ??___awmod 00BC  
                                         _blink0 1E42                                 OpenTimer0@config 00B8  
                                         _ic_ptr 00C5                                        ??___lwmod 00BC  
                                  main@msgbuffer 0126                                 __end_of_init_i2c 1770  
                               OpenTimer1@config 00B8                                           _memcpy 199E  
                                         clear_0 1954                                           clear_1 1960  
                                         clear_2 196C                                           clear_3 197C  
                                ___awmod@divisor 00BA                                  ___awmod@counter 00BC  
                                         main@ic 014C                                 __end_of_recv_msg 0CAE  
                    start_i2c_slave_reply@length 0084    uart_transmit_interrupt_handler@message_status 0021  
                              __end_ofi1___awmod 1596                                 __end_of_send_msg 0EFC  
                                   __pdataCOMRAM 0063                                __end_ofi2___awmod 1446  
                          timer0_int_handler@val 00A1                          i2c_int_handler@i2c_data 00A5  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8             uart_receive_interrupt_handler@msg_id 0034  
                                    init_queue@i 00BA                                   i2___awmod@sign 0085  
           uart_receive_interrupt_handler@status 002B                         ToMainLow_recvmsg@msgtype 010C  
                           __size_of_in_high_int 0010                          FromMainLow_sendmsg@data 010C  
                                _debug_configure 1DEA                                  __CFG_FOSC$HSPLL 000000  
           uart_transmit_interrupt_handler@index 0062                                       __accesstop 0080  
                        __end_of__initialization 1994                       __end_of_ToMainHigh_recvmsg 1B28  
                     __end_of_ToMainHigh_sendmsg 1C7E                                 _need_sensor_data 005A  
                    __end_of_init_timer1_lthread 1D96                              __end_of_SleepIfOkay 18F6  
                                 __pcstackCOMRAM 0001                                      ?_ReadTimer1 0001  
                                  __end_of_blip1 1E14                                    __end_of_blip2 1E0C  
                                  __end_of_blip3 1E04                                    __end_of_blip4 1E3C  
                send_uart_message@message_q_code 00C4                               __size_of_check_msg 0032  
                      timer0_int_handler@msgtype 009F                              __size_ofi1_recv_msg 00E8  
                            __size_ofi1_send_msg 00C0                                        ?i1_memcpy 0001  
                  __size_of_InterruptHandlerHigh 1694                      __end_of_InterruptHandlerLow 00C0  
                                      ?i2_memcpy 0080                                    _ToMainHigh_MQ 0257  
                            __size_ofi2_recv_msg 013E                                 _enter_sleep_mode 1E3C  
                            __size_ofi2_send_msg 010C                             timer1_lthread@length 0112  
                                        ??_blip1 00B8                                          ??_blip2 00B8  
                                        ??_blip3 00B8                                          ??_blip4 0080  
                                  check_msg@qptr 0080                             timer1_lthread@retval 00C4  
                           __size_of_init_queues 0058                                       __pbssBANK0 00C7  
                                     __pbssBANK1 0172                                       __pbssBANK2 0200  
                                     __pbssBANK3 0300                                      ?_OpenTimer0 0001  
                                    ?_OpenTimer1 0001                          i2c_int_handler@msg_type 00A7  
                                        ?i1_blip 0001                          __end_of_i2c_int_handler 06E2  
                             timer1_lthread@tptr 010E                                          ?_blink0 0001  
                              recv_msg@maxlength 0102                                  recv_msg@msgtype 0103  
                                recv_msg@tlength 0108                            __size_of_handle_start 00CA  
                               WriteTimer0@timer 0082                                          ?_memcpy 00B8  
                               WriteTimer1@timer 0003                                    ??_WriteTimer0 0082  
                                  ??_WriteTimer1 0003                 __size_of_i_like_to_moveit_moveit 0032  
                        __size_of_timer0_lthread 000E                          __size_of_timer1_lthread 0062  
                                     ??i1_memcpy 0007                                       ??i2_memcpy 0086  
                        __end_of_debug_configure 1DF4                                 i1send_msg@length 000D  
                                        _SSPCON1 000FC6                                          _SSPCON2 000FC5  
                                        _SSPSTAT 000FC7                              __size_of_ReadTimer1 0012  
                              __end_of_check_msg 1BF4                                          i2_blip1 1E2C  
                                        i2_blip3 1E24                                        ?_init_i2c 00B8  
                                    _SleepIfOkay 1896                                _send_uart_message 1D64  
                                __size_ofi1_blip 0008                                        ?_recv_msg 0100  
                                     _in_low_int 1A7E                                     _handle_start 11F4  
                                        __Hparam 0000                                        ?_send_msg 0100  
                                        __Lparam 0000                               ?_send_uart_message 010E  
      uart_receive_interrupt_handler@status_1819 002C                       __end_of_timer0_int_handler 170A  
                    __end_of_FromMainLow_recvmsg 1CFA                      __end_of_FromMainLow_sendmsg 1C50  
                                        ___awmod 12BE                                          ___lwmod 1836  
                                __size_of_blink0 0004                                  __CFG_STVREN$OFF 000000  
                            ??_send_uart_message 00C4                                          __pcinit 194E  
                                __size_of_memcpy 0050                                       _init_queue 1770  
                                        __ramtop 0400                              __size_of_OpenTimer0 0026  
                            __size_of_OpenTimer1 0032                                          __ptext0 06E2  
                                        __ptext1 1D44                                          __ptext2 17D4  
                                        __ptext3 1E42                                          __ptext4 1836  
                                        __ptext5 1BF4                                          __ptext6 1DDC  
                                        __ptext7 1D84                                          __ptext8 18F6  
                                        __ptext9 1770                                        _T0CONbits 000FD5  
                                      _T1CONbits 000FCD                                 ___awmod@dividend 00B8  
                            __end_of_WriteTimer0 1DCC                              __end_of_WriteTimer1 1DA8  
                                        main@jjj 0145                                   main@motor_data 0116  
                                 __pintcode_body 161E                     __end_of_FromMainHigh_recvmsg 1B5E  
                           end_of_initialization 1994                          timer1_lthread@msgbuffer 0114  
                   __end_of_FromMainHigh_sendmsg 1C22                       FromMainHigh_sendmsg@length 00C3  
                      __end_of_send_uart_message 1D84                                          memcpy@d 00BE  
                                        memcpy@n 00BC                                          memcpy@s 00C0  
                                     ??_init_i2c 00BA                                     ??i1_recv_msg 0012  
                        __size_of_uart_configure 0020                      i2c_int_handler@data_written 00A2  
                                  __Lmediumconst 0000                                          int_func 161E  
                                   ??i1_send_msg 0011         uart_receive_interrupt_handler@bad_end_id 0031  
     uart_receive_interrupt_handler@bad_start_id 0030                                 ?_i2c_int_handler 0001  
                                   ??i2_recv_msg 0091                                       ??_recv_msg 00C2  
                                   ??i2_send_msg 0090                                       ??_send_msg 00C2  
uart_receive_interrupt_handler@gooey_uart_center 001D                       __end_of_timer1_int_handler 1CAA  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc2 000FDE                        ToMainHigh_sendmsg@msgtype 0096  
         i_like_to_moveit_moveit@left_side_speed 0111                               __end_ofi1_recv_msg 11F4  
                             __end_ofi1_send_msg 1506                      FromMainHigh_sendmsg@msgtype 010B  
         __end_of_uart_receive_interrupt_handler 0B6C          __size_of_uart_receive_interrupt_handler 018A  
                 _uart_receive_interrupt_handler 09E2                                 ?_debug_configure 0001  
                                      _TRISBbits 000F93                                        _TRISCbits 000F94  
                             __end_ofi2_recv_msg 0DEC                                        i1___awmod 1506  
                             __end_ofi2_send_msg 1008                                        i2___awmod 1382  
                  FromMainHigh_recvmsg@maxlength 009C                         timer1_int_handler@result 001B  
                                     main@length 014A                                      ?_in_low_int 0082  
                                 __end_ofi1_blip 1E24                            timer0_lthread@msgtype 00BA  
                          _start_i2c_slave_reply 1008                     __size_of_i2c_configure_slave 0028  
                       __end_of_enter_sleep_mode 1E42                                     ??_ReadTimer1 0003  
                        _i_like_to_moveit_moveit 1B5E                               _ToMainHigh_recvmsg 1AF2  
                                      i1memcpy@d 0007                               _ToMainHigh_sendmsg 1C50  
                                      i1memcpy@n 0005                                        i1memcpy@s 0009  
                                    _BAUDCONbits 000FB8                                   __end_of_blink0 1E46  
                                  __pidataCOMRAM 1E46                                   _timer0_lthread 1DDC  
                                    ?_init_queue 00B8                                        i2memcpy@d 0086  
                                    _WriteTimer0 1DBA                                      _WriteTimer1 1D96  
                                      i2memcpy@n 0084                                        i2memcpy@s 0088  
                                 _timer1_lthread 17D4                                   __end_of_memcpy 19EE  
                              _enable_interrupts 1DF4                              ?_ToMainHigh_recvmsg 010C  
                       i2c_int_handler@data_read 00A9                              ?_ToMainHigh_sendmsg 0096  
                             ?_enable_interrupts 0001                              start_initialization 194E  
                                  ??_in_high_int 0082     uart_receive_interrupt_handler@start_byte_bad 0061  
                                     ?i1___awmod 0001                                __size_ofi1_memcpy 0040  
                              __size_ofi2_memcpy 0050                                       ?i2___awmod 0080  
                      FromMainLow_sendmsg@length 00C3                            i2c_int_handler@length 009E  
                            ??_enable_interrupts 00B8                                     ??_OpenTimer0 00B8  
                                   ??_OpenTimer1 00B8                               __end_of_ReadTimer1 1DBA  
                uart_receive_interrupt_handler@i 0035                       __size_of_send_uart_message 0020  
                              main@uart_response 0137                                         ??i1_blip 0001  
                   __end_of_InterruptHandlerHigh 169C                                       init_i2c@ic 00B8  
                           ??_ToMainHigh_recvmsg 00C4                             ??_ToMainHigh_sendmsg 0099  
         uart_transmit_interrupt_handler@msgtype 0020                         i2c_int_handler@need_data 00A4  
                         __end_of_timer0_lthread 1DEA                                         ??_blink0 00B8  
                       i2c_int_handler@error_buf 009F                           __end_of_timer1_lthread 1836  
                             i1___awmod@dividend 0001                        __end_of_enable_interrupts 1DFC  
                                       ??_memcpy 00BE                            timer1_lthread@msgtype 0110  
                           _FromMainHigh_recvmsg 1B28              uart_receive_interrupt_handler@frame 0048  
            uart_receive_interrupt_handler@index 005F                             _FromMainHigh_sendmsg 1BF4  
            uart_receive_interrupt_handler@error 005E                     __size_of_init_timer1_lthread 0012  
                             __end_of_OpenTimer0 1D20                               __end_of_OpenTimer1 1BC2  
                       i2c_int_handler@msg_ready 00A8                                      __pbssCOMRAM 0048  
                                  ??_init_queues 00BB                                    __pcstackBANK0 0080  
                                  __pcstackBANK1 0100                              __size_of_in_low_int 003E  
                       start_i2c_slave_reply@msg 0080                              __CFG_CCP2MX$DEFAULT 000000  
                                       ?i2_blip1 0001                                         ?i2_blip3 0001  
                       ToMainLow_sendmsg@msgtype 0017                     __size_of_InterruptHandlerLow 00A8  
                            __end_of_in_high_int 1DDC                                   _uart_configure 1D44  
                                   ?_SleepIfOkay 0001                            ToMainLow_recvmsg@data 010E  
                                   _ToMainLow_MQ 0172                              __size_of_init_queue 0064  
                                      _check_msg 1BC2                                        __pnvBANK0 00C5  
                         ?_start_i2c_slave_reply 0080                                __size_of_init_i2c 0066  
                                   recv_msg@data 0105                        ??_i_like_to_moveit_moveit 00C5  
                                   recv_msg@qmsg 010A                                     recv_msg@slot 0107  
                                   recv_msg@qptr 0100                                __size_of_recv_msg 0142  
                                      __pintcode 0008                                __size_of_send_msg 0110  
                                       ?___awmod 00B8                                  ?_timer0_lthread 00B8  
                                       ?___lwmod 00B8                            ?_FromMainHigh_recvmsg 0098  
                                ?_timer1_lthread 010E                            ?_FromMainHigh_sendmsg 010B  
                                    __pintcodelo 0018                           ToMainHigh_recvmsg@data 010E  
                     i2c_int_handler@msg_to_send 00A6                                WriteTimer0@timer0 0080  
                             _timer0_int_handler 169C                                WriteTimer1@timer1 0001  
                                    ??i1___awmod 0005                            ToMainLow_sendmsg@data 0018  
                                 __size_of_blip1 0008                                   __size_of_blip2 0008  
                                 __size_of_blip3 0008                                   __size_of_blip4 0008  
                                    ??i2___awmod 0084                           __end_of_uart_configure 1D64  
                            i1recv_msg@maxlength 000D                              ?_timer0_int_handler 0001  
   uart_receive_interrupt_handler@bad_counter_id 002D                              __end_of_init_queues 194E  
                                       _LATBbits 000F8A                                         _LATDbits 000F8C  
                                     ?_check_msg 0080                                         _IPR1bits 000F9F  
                                       _PIE1bits 000F9D                                         _PIR1bits 000F9E  
                         ToMainHigh_sendmsg@data 0097                                         _RCONbits 000FD0  
                               __CFG_WDTPS$32768 000000                                   i1recv_msg@data 0010  
                           ??_timer0_int_handler 009D                                   i1recv_msg@qmsg 0017  
                                 i1recv_msg@slot 0014                                   i1recv_msg@qptr 000B  
 uart_receive_interrupt_handler@received_counter 0060                     FromMainLow_recvmsg@maxlength 001D  
                     __size_of_enable_interrupts 0008                                i1send_msg@msgtype 000E  
                              i1send_msg@tlength 0012                       FromMainLow_recvmsg@msgtype 0019  
                   __size_of_FromMainLow_recvmsg 0028                     __size_of_FromMainLow_sendmsg 002E  
                           timer0_lthread@length 00BC                               _timer1_int_handler 1C7E  
                                       i1_memcpy 1A3E                             _InterruptHandlerHigh 0008  
                                       i2_memcpy 19EE                  __end_of_i_like_to_moveit_moveit 1B90  
                           timer0_lthread@msgval 00C0                         FromMainHigh_recvmsg@data 009A  
                                    _in_high_int 1DCC                                     send_msg@data 0104  
                            _i2c_configure_slave 1CAA                                     send_msg@qmsg 0109  
                                   send_msg@slot 0108                                     send_msg@qptr 0100  
                                ?_uart_configure 0001                              ?_timer1_int_handler 0001  
                             i2___awmod@dividend 0080                                 __size_ofi2_blip1 0008  
                               __size_ofi2_blip3 0008                                         __Hparam0 0000  
                                   ??_in_low_int 0084                                         __Lparam0 0000  
                           ?_i2c_configure_slave 0001                                ?_enter_sleep_mode 0001  
                         ??_FromMainHigh_recvmsg 009C                           ??_FromMainHigh_sendmsg 00C3  
                              i1___awmod@divisor 0003                             ??_timer1_int_handler 001B  
        __end_of_uart_transmit_interrupt_handler 161E         __size_of_uart_transmit_interrupt_handler 0088  
              ??_uart_transmit_interrupt_handler 001E                 ?_uart_transmit_interrupt_handler 0001  
                _uart_transmit_interrupt_handler 1596                                i1___awmod@counter 0005  
                       __size_of_i2c_int_handler 061E                                 __size_of___awmod 00C4  
                             ??_enter_sleep_mode 0080                                 __size_of___lwmod 0060  
                                   ??_init_queue 00BA                                     ?_WriteTimer0 0080  
                                   ?_WriteTimer1 0001                         FromMainHigh_sendmsg@data 010C  
                        ToMainLow_sendmsg@length 001A                                main@t0thread_data 0135  
                 uart_frame_message@sent_counter 005C                            ?_InterruptHandlerHigh 0001  
            uart_transmit_interrupt_handler@data 001E              uart_transmit_interrupt_handler@done 0063  
                   i_like_to_moveit_moveit@moves 0112                                i2send_msg@msgtype 008D  
                    ToMainHigh_recvmsg@maxlength 00C4                                i2send_msg@tlength 0091  
                        init_timer1_lthread@tptr 00B8                                      _init_queues 18F6  
                             __end_of_in_low_int 1ABC                                         __ptext10 170A  
                                       __ptext11 1B5E                                         __ptext20 1E0C  
                                       __ptext12 1D64                                         __ptext21 1E14  
                                       __ptext13 1C22                                         __ptext30 1596  
                                       __ptext22 1ABC                                         __ptext14 0DEC  
                                       __ptext31 1E1C                                         __ptext23 1AF2  
                                       __ptext15 1CAA                                         __ptext40 1506  
                                       __ptext32 1CD2                                         __ptext24 0B6C  
                                       __ptext16 1DF4                                         __ptext41 1DA8  
                                       __ptext33 110C                                         __ptext25 199E  
                                       __ptext17 1DEA                                         __ptext50 1E34  
                                       __ptext34 09E2                                         __ptext26 12BE  
                                       __ptext18 1DFC                                         __ptext51 1C50  
                                       __ptext43 169C                                         __ptext35 1C7E  
                                       __ptext27 1B90                                         __ptext19 1E04  
                                       __ptext60 1E3C                                         __ptext52 0EFC  
                                       __ptext44 1DBA                                         __ptext36 1D96  
                                       __ptext28 1CFA                                         __ptext61 1BC2  
                                       __ptext53 1B28                                         __ptext45 00C4  
                                       __ptext37 1D20                                         __ptext54 0CAE  
                                       __ptext46 1E24                                         __ptext38 1446  
                                       __ptext55 19EE                                         __ptext47 1E2C  
                                       __ptext39 1A3E                                         __ptext56 1382  
                                       __ptext48 1008                                         __ptext57 1896  
                                       __ptext49 11F4                                         __ptext58 1A7E  
                                       __ptext59 1DCC                                   i1send_msg@data 000F  
                                 i1send_msg@qmsg 0015                                   i1send_msg@slot 0014  
                                 i1send_msg@qptr 000B                         timer0_int_handler@length 009D  
                                       _init_i2c 170A                         __size_of_debug_configure 000A  
                            _init_timer1_lthread 1D84                                    __size_of_blip 0008  
                                  __size_of_main 0300                                main@t1thread_data 0148  
                                    ??_check_msg 0082                               __end_of_init_queue 17D4  
                           __size_of_SleepIfOkay 0060                                         _recv_msg 0B6C  
                          ??_i2c_configure_slave 00B8                                         _send_msg 0DEC  
  uart_receive_interrupt_handler@bad_checksum_id 0032                                   init_queue@qptr 00B8  
                                 i2recv_msg@data 008F                                   i2recv_msg@qmsg 0096  
                                 i2recv_msg@slot 0093                                   i2recv_msg@qptr 008A  
                                   _SSP1STATbits 000FC7                              _InterruptHandlerLow 0018  
                                       main@poop 0147                             ?_init_timer1_lthread 00B8  
                              i2___awmod@divisor 0082                                i2___awmod@counter 0084  
                                    _OSCTUNEbits 000F9B                                       _INTCONbits 000FF2  
                                       memcpy@d1 00B8                                         memcpy@s1 00BA  
                   i2c_int_handler@overrun_error 00A3                                 i2send_msg@length 008C  
                                       intlevel1 0000                                         intlevel2 0000  
                           ?_InterruptHandlerLow 0001                          ??_start_i2c_slave_reply 0082  
                   send_uart_message@message_ptr 010E                                 ___lwmod@dividend 00B8  
                                     _RCSTA1bits 000FAB                                    ?_handle_start 0001  
                               ??_timer0_lthread 00C0                      __size_of_ToMainHigh_recvmsg 0036  
                    __size_of_ToMainHigh_sendmsg 002E                                       _OSCCONbits 000FD3  
                               ??_timer1_lthread 00C4                                i1recv_msg@msgtype 000E  
                              i1recv_msg@tlength 0015                         ToMainHigh_sendmsg@length 0099  
                          ??_init_timer1_lthread 00BA                           ??_InterruptHandlerHigh 00AA  
                              _ToMainLow_recvmsg 1ABC                                _ToMainLow_sendmsg 1D20  
                             main@last_reg_recvd 0124                                  ___lwmod@divisor 00BA  
                             ?_ToMainLow_recvmsg 010C                                ??_i2c_int_handler 009D  
                                ___lwmod@counter 00BC                               ?_ToMainLow_sendmsg 0017  
                                    _SSPCON1bits 000FC6                                      _SSPCON2bits 000FC5  
                                 i2send_msg@data 008E                            ??_InterruptHandlerLow 0037  
                            ??_ToMainLow_recvmsg 00C4                                   i2send_msg@qmsg 0094  
                                 i2send_msg@slot 0093                                   i2send_msg@qptr 008A  
                            ??_ToMainLow_sendmsg 001A                              _FromMainLow_recvmsg 1CD2  
                                 ??_handle_start 0080                              _FromMainLow_sendmsg 1C22  
